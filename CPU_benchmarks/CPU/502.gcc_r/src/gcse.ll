; ModuleID = 'gcse.bc'
source_filename = "gcse.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.hash_table_d = type { %struct.expr**, i32, i32, i32 }
%struct.expr = type { %struct.rtx_def*, i32, %struct.expr*, %struct.occr*, %struct.occr*, %struct.rtx_def* }
%struct.occr = type { %struct.occr*, %struct.rtx_def*, i8, i8 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.reg_use = type { %struct.rtx_def* }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.reg_avail_info = type { %struct.basic_block_def*, i32, i32 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.ls_expr = type { %struct.expr*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.ls_expr*, i32, i32, i32, %struct.rtx_def* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.edge_list = type { i32, i32, %struct.edge_def** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.cselib_val_struct = type { i32, i32, %struct.rtx_def*, %struct.elt_loc_list*, %struct.elt_list*, %struct.cselib_val_struct* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@can_copy_p.can_copy_init_p = internal unnamed_addr global i1 false, align 1, !dbg !0
@can_copy = internal global [87 x i8] zeroinitializer, align 16, !dbg !2068
@test_insn = internal global %struct.rtx_def* null, align 8, !dbg !2073
@word_mode = external dso_local local_unnamed_addr global i32, align 4
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str = private unnamed_addr constant [6 x i8] c"cprop\00", align 1
@pass_rtl_cprop = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8 ()* @gate_rtl_cprop, i32 ()* @execute_rtl_cprop, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 130, i32 512, i32 0, i32 0, i32 0, i32 132107 } }, align 8, !dbg !2020
@.str.1 = private unnamed_addr constant [8 x i8] c"rtl pre\00", align 1
@pass_rtl_pre = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8 ()* @gate_rtl_pre, i32 ()* @execute_rtl_pre, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 131, i32 512, i32 0, i32 0, i32 0, i32 132107 } }, align 8, !dbg !2048
@.str.2 = private unnamed_addr constant [6 x i8] c"hoist\00", align 1
@pass_rtl_hoist = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8 ()* @gate_rtl_hoist, i32 ()* @execute_rtl_hoist, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 132, i32 512, i32 0, i32 0, i32 0, i32 132107 } }, align 8, !dbg !2050
@gt_ggc_r_gt_gcse_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.rtx_def** @test_insn to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2052
@flag_rerun_cse_after_global_opts = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2066
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_gcse = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.3 = private unnamed_addr constant [32 x i8] c"const/copy propagation disabled\00", align 1
@local_const_prop_count = internal unnamed_addr global i32 0, align 4, !dbg !2075
@global_const_prop_count = internal unnamed_addr global i32 0, align 4, !dbg !2077
@local_copy_prop_count = internal unnamed_addr global i32 0, align 4, !dbg !2079
@global_copy_prop_count = internal unnamed_addr global i32 0, align 4, !dbg !2081
@bytes_used = internal unnamed_addr global i32 0, align 4, !dbg !2083
@gcse_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !2085
@implicit_sets = internal unnamed_addr global %struct.rtx_def** null, align 8, !dbg !2108
@set_hash_table = internal global %struct.hash_table_d zeroinitializer, align 8, !dbg !2110
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [4 x i8] c"SET\00", align 1
@.str.5 = private unnamed_addr constant [48 x i8] c"CPROP of %s, %d basic blocks, %d bytes needed, \00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"%d local const props, %d local copy props, \00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"%d global const props, %d global copy props\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"%s: %d basic blocks and %d edges/basic block\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.9 = private unnamed_addr constant [37 x i8] c"%s: %d basic blocks and %d registers\00", align 1
@reg_set_bitmap = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2087
@modify_mem_list = internal unnamed_addr global %struct.rtx_def** null, align 8, !dbg !2090
@canon_modify_mem_list = internal unnamed_addr global %struct.rtx_def** null, align 8, !dbg !2092
@modify_mem_list_set = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2094
@blocks_with_calls = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2096
@reg_use_count = internal unnamed_addr global i32 0, align 4, !dbg !2098
@reg_use_table = internal unnamed_addr global [8 x %struct.reg_use] zeroinitializer, align 16, !dbg !2100
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@.str.10 = private unnamed_addr constant [39 x i8] c"LOCAL CONST-PROP: Replacing reg %d in \00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"insn %d with constant \00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.13 = private unnamed_addr constant [45 x i8] c"LOCAL COPY-PROP: Replacing reg %d in insn %d\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c" with reg %d\0A\00", align 1
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@.str.15 = private unnamed_addr constant [67 x i8] c"GLOBAL CONST-PROP: Replacing reg %d in jump_insn %d with constant \00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"Implicit set of reg %d in \00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"basic block %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"Found %d implicit sets\0A\00", align 1
@real_format_for_mode = external dso_local local_unnamed_addr global [7 x %struct.real_format*], align 16
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@flag_signed_zeros = external dso_local local_unnamed_addr global i32, align 4
@dconst0 = external dso_local global %struct.real_value, align 8
@reg_avail_info = internal unnamed_addr global %struct.reg_avail_info* null, align 8, !dbg !2118
@current_bb = internal unnamed_addr global %struct.basic_block_def* null, align 8, !dbg !2120
@regs_invalidated_by_call = external dso_local local_unnamed_addr global i64, align 8
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@flag_gcse_las = external dso_local local_unnamed_addr global i32, align 4
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@ix86_fpmath = external dso_local local_unnamed_addr global i32, align 4
@gcse_mem_operand = internal unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2122
@gcse_mems_conflict_p = internal unnamed_addr global i1 false, align 4, !dbg !2195
@pre_ldst_mems = internal unnamed_addr global %struct.ls_expr* null, align 8, !dbg !2129
@pre_ldst_table = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2131
@.str.21 = private unnamed_addr constant [7 x i8] c"gcse.c\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"%s hash table (%d buckets, %d entries)\0A\00", align 1
@.str.23 = private unnamed_addr constant [28 x i8] c"Index %d (hash value %d)\0A  \00", align 1
@cprop_pavloc = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2133
@cprop_absaltered = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2146
@cprop_avin = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2148
@cprop_avout = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2150
@.str.24 = private unnamed_addr constant [40 x i8] c"GLOBAL CONST-PROP: Replacing reg %d in \00", align 1
@.str.25 = private unnamed_addr constant [46 x i8] c"GLOBAL COPY-PROP: Replacing reg %d in insn %d\00", align 1
@bypass_last_basic_block = internal unnamed_addr global i32 0, align 4, !dbg !2152
@.str.26 = private unnamed_addr constant [60 x i8] c"JUMP-BYPASS: Proved reg %d in jump_insn %d equals constant \00", align 1
@.str.27 = private unnamed_addr constant [32 x i8] c"\0ABypass edge from %d->%d to %d\0A\00", align 1
@gcse_subst_count = internal unnamed_addr global i32 0, align 4, !dbg !2154
@gcse_create_count = internal unnamed_addr global i32 0, align 4, !dbg !2156
@.str.28 = private unnamed_addr constant [13 x i8] c"PRE disabled\00", align 1
@expr_hash_table = internal global %struct.hash_table_d zeroinitializer, align 8, !dbg !2158
@flag_gcse_lm = external dso_local local_unnamed_addr global i32, align 4
@.str.29 = private unnamed_addr constant [11 x i8] c"Expression\00", align 1
@edge_list = internal unnamed_addr global %struct.edge_list* null, align 8, !dbg !2176
@.str.30 = private unnamed_addr constant [51 x i8] c"PRE GCSE of %s, %d basic blocks, %d bytes needed, \00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"%d substs, %d insns created\0A\00", align 1
@flag_non_call_exceptions = external dso_local local_unnamed_addr global i32, align 4
@flag_float_store = external dso_local local_unnamed_addr global i32, align 4
@.str.32 = private unnamed_addr constant [13 x i8] c"LDST list: \0A\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"  Pattern (%3d): \00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"\0A\09 Loads : \00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"\0A\09Stores : \00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@transp = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2160
@comp = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2162
@antloc = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2164
@pre_optimal = internal unnamed_addr constant %struct.simple_bitmap_def** null, align 8, !dbg !2166
@pre_redundant = internal unnamed_addr constant %struct.simple_bitmap_def** null, align 8, !dbg !2168
@pre_insert_map = internal global %struct.simple_bitmap_def** null, align 8, !dbg !2170
@pre_delete_map = internal global %struct.simple_bitmap_def** null, align 8, !dbg !2172
@ae_kill = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2174
@.str.38 = private unnamed_addr constant [43 x i8] c"PRE: redundant insn %d (expression %d) in \00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"bb %d, reaching reg is %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [20 x i8] c"PRE: edge (%d,%d), \00", align 1
@.str.41 = private unnamed_addr constant [20 x i8] c"copy expression %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [35 x i8] c"PRE/HOIST: end of bb %d, insn %d, \00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"copying expression %d to reg %d\0A\00", align 1
@.str.44 = private unnamed_addr constant [39 x i8] c"PRE:  store updated with reaching reg \00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c":\0A\09\00", align 1
@.str.46 = private unnamed_addr constant [62 x i8] c"PRE: bb %d, insn %d, copy expression %d in insn %d to reg %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c"GCSE disabled\00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"Code Hosting Expressions\00", align 1
@.str.49 = private unnamed_addr constant [48 x i8] c"HOIST of %s, %d basic blocks, %d bytes needed, \00", align 1
@hoist_vbein = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2185
@hoist_vbeout = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2187
@hoist_exprs = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2189
@transpout = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8, !dbg !2191
@.str.50 = private unnamed_addr constant [42 x i8] c"hoisting vbeinout computation: %d passes\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2200 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2213, metadata !DIExpression()), !dbg !2215
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2214, metadata !DIExpression()), !dbg !2215
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2216
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2217
  ret i32 %call, !dbg !2218
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2219 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2223
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2224
  ret i32 %call, !dbg !2225
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2226 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2280, metadata !DIExpression()), !dbg !2281
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2282
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2282
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2282
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2282
  %cmp = icmp uge i8* %0, %1, !dbg !2282
  %conv1 = zext i1 %cmp to i64, !dbg !2282
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2282
  %tobool = icmp eq i64 %expval, 0, !dbg !2282
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2282

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2282
  br label %cond.end, !dbg !2282

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2282
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2282
  %2 = load i8, i8* %0, align 1, !dbg !2282
  %conv3 = zext i8 %2 to i32, !dbg !2282
  br label %cond.end, !dbg !2282

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2282
  ret i32 %cond, !dbg !2283
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2284 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2286, metadata !DIExpression()), !dbg !2287
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2288
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2288
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2288
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2288
  %cmp = icmp uge i8* %0, %1, !dbg !2288
  %conv1 = zext i1 %cmp to i64, !dbg !2288
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2288
  %tobool = icmp eq i64 %expval, 0, !dbg !2288
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2288

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2288
  br label %cond.end, !dbg !2288

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2288
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2288
  %2 = load i8, i8* %0, align 1, !dbg !2288
  %conv3 = zext i8 %2 to i32, !dbg !2288
  br label %cond.end, !dbg !2288

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2288
  ret i32 %cond, !dbg !2289
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2290 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2291
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2291
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2291
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2291
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2291
  %cmp = icmp uge i8* %1, %2, !dbg !2291
  %conv1 = zext i1 %cmp to i64, !dbg !2291
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2291
  %tobool = icmp eq i64 %expval, 0, !dbg !2291
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2291

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2291
  br label %cond.end, !dbg !2291

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2291
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2291
  %3 = load i8, i8* %1, align 1, !dbg !2291
  %conv3 = zext i8 %3 to i32, !dbg !2291
  br label %cond.end, !dbg !2291

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2291
  ret i32 %cond, !dbg !2292
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2293 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2297, metadata !DIExpression()), !dbg !2298
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2299
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2300
  ret i32 %call, !dbg !2301
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2302 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2306, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2307, metadata !DIExpression()), !dbg !2308
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2309
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2309
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2309
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2309
  %cmp = icmp uge i8* %0, %1, !dbg !2309
  %conv1 = zext i1 %cmp to i64, !dbg !2309
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2309
  %tobool = icmp eq i64 %expval, 0, !dbg !2309
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2309

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2309
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2309
  br label %cond.end, !dbg !2309

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2309
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2309
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2309
  store i8 %conv2, i8* %0, align 1, !dbg !2309
  %conv6 = and i32 %__c, 255, !dbg !2309
  br label %cond.end, !dbg !2309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2309
  ret i32 %cond, !dbg !2310
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2311 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2313, metadata !DIExpression()), !dbg !2315
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2314, metadata !DIExpression()), !dbg !2315
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2316
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2316
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2316
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2316
  %cmp = icmp uge i8* %0, %1, !dbg !2316
  %conv1 = zext i1 %cmp to i64, !dbg !2316
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2316
  %tobool = icmp eq i64 %expval, 0, !dbg !2316
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2316

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2316
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2316
  br label %cond.end, !dbg !2316

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2316
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2316
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2316
  store i8 %conv2, i8* %0, align 1, !dbg !2316
  %conv6 = and i32 %__c, 255, !dbg !2316
  br label %cond.end, !dbg !2316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2316
  ret i32 %cond, !dbg !2317
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2318 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2320, metadata !DIExpression()), !dbg !2321
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2322
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2322
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2322
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2322
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2322
  %cmp = icmp uge i8* %1, %2, !dbg !2322
  %conv1 = zext i1 %cmp to i64, !dbg !2322
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2322
  %tobool = icmp eq i64 %expval, 0, !dbg !2322
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2322

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2322
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2322
  br label %cond.end, !dbg !2322

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2322
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2322
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2322
  store i8 %conv4, i8* %1, align 1, !dbg !2322
  %conv6 = and i32 %__c, 255, !dbg !2322
  br label %cond.end, !dbg !2322

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2322
  ret i32 %cond, !dbg !2323
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2324 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2330, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2331, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2332, metadata !DIExpression()), !dbg !2333
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2334
  ret i64 %call, !dbg !2335
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2336 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2338, metadata !DIExpression()), !dbg !2339
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2340
  %0 = load i32, i32* %_flags, align 8, !dbg !2340
  %and = lshr i32 %0, 4, !dbg !2340
  %and.lobit = and i32 %and, 1, !dbg !2340
  ret i32 %and.lobit, !dbg !2341
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2344, metadata !DIExpression()), !dbg !2345
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2346
  %0 = load i32, i32* %_flags, align 8, !dbg !2346
  %and = lshr i32 %0, 5, !dbg !2346
  %and.lobit = and i32 %and, 1, !dbg !2346
  ret i32 %and.lobit, !dbg !2347
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2348 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2351, metadata !DIExpression()), !dbg !2352
  %__c.off = add i32 %__c, 128, !dbg !2353
  %0 = icmp ult i32 %__c.off, 384, !dbg !2353
  br i1 %0, label %cond.true, label %cond.end, !dbg !2353

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2354
  %1 = load i32*, i32** %call, align 8, !dbg !2355
  %idxprom = sext i32 %__c to i64, !dbg !2356
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2356
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2356
  br label %cond.end, !dbg !2357

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2357
  ret i32 %cond, !dbg !2358
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2359 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2361, metadata !DIExpression()), !dbg !2362
  %__c.off = add i32 %__c, 128, !dbg !2363
  %0 = icmp ult i32 %__c.off, 384, !dbg !2363
  br i1 %0, label %cond.true, label %cond.end, !dbg !2363

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2364
  %1 = load i32*, i32** %call, align 8, !dbg !2365
  %idxprom = sext i32 %__c to i64, !dbg !2366
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2366
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2366
  br label %cond.end, !dbg !2367

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2367
  ret i32 %cond, !dbg !2368
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2369 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2374, metadata !DIExpression()), !dbg !2375
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2376
  %conv = trunc i64 %call to i32, !dbg !2377
  ret i32 %conv, !dbg !2378
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2379 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2383, metadata !DIExpression()), !dbg !2384
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2385
  ret i64 %call, !dbg !2386
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2387 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2392, metadata !DIExpression()), !dbg !2393
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2394
  ret i64 %call, !dbg !2395
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2396 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2402, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2403, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2404, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2405, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2406, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 0, metadata !2407, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2408, metadata !DIExpression()), !dbg !2412
  br label %while.cond, !dbg !2413

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2414
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2408, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2407, metadata !DIExpression()), !dbg !2412
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2415
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2413

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2416
  %div = lshr i64 %add, 1, !dbg !2418
  call void @llvm.dbg.value(metadata i64 %div, metadata !2409, metadata !DIExpression()), !dbg !2412
  %mul = mul i64 %div, %__size, !dbg !2419
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2420
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2410, metadata !DIExpression()), !dbg !2412
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2421
  call void @llvm.dbg.value(metadata i32 %call, metadata !2411, metadata !DIExpression()), !dbg !2412
  %cmp1 = icmp slt i32 %call, 0, !dbg !2422
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2424

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2425
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2427

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2428
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2407, metadata !DIExpression()), !dbg !2412
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2412
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2408, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2407, metadata !DIExpression()), !dbg !2412
  br label %while.cond, !dbg !2413, !llvm.loop !2429

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2412
  ret i8* %retval.0, !dbg !2431
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2432 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2438, metadata !DIExpression()), !dbg !2439
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2440
  ret double %call, !dbg !2441
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2442 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2451, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2452, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata i32 %base, metadata !2453, metadata !DIExpression()), !dbg !2454
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2455
  ret i64 %call, !dbg !2456
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2457 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2463, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2464, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i32 %base, metadata !2465, metadata !DIExpression()), !dbg !2466
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2467
  ret i64 %call, !dbg !2468
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2469 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2480, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2481, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i32 %base, metadata !2482, metadata !DIExpression()), !dbg !2483
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2484
  ret i64 %call, !dbg !2485
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2486 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2490, metadata !DIExpression()), !dbg !2493
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2491, metadata !DIExpression()), !dbg !2493
  call void @llvm.dbg.value(metadata i32 %base, metadata !2492, metadata !DIExpression()), !dbg !2493
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2494
  ret i64 %call, !dbg !2495
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2496 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2536, metadata !DIExpression()), !dbg !2538
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2537, metadata !DIExpression()), !dbg !2538
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2539
  ret i32 %call, !dbg !2540
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2541 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2543, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2544, metadata !DIExpression()), !dbg !2545
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2546
  ret i32 %call, !dbg !2547
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2548 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2552, metadata !DIExpression()), !dbg !2554
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2553, metadata !DIExpression()), !dbg !2554
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2555
  ret i32 %call, !dbg !2556
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2557 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2561, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2562, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2563, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2564, metadata !DIExpression()), !dbg !2565
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2566
  ret i32 %call, !dbg !2567
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2568 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2572, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2573, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2574, metadata !DIExpression()), !dbg !2575
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2574, metadata !DIExpression(DW_OP_deref)), !dbg !2575
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2576
  ret i32 %call, !dbg !2577
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2578 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2582, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2583, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2584, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2585, metadata !DIExpression()), !dbg !2586
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2585, metadata !DIExpression(DW_OP_deref)), !dbg !2586
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2587
  ret i32 %call, !dbg !2588
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2589 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2613, metadata !DIExpression()), !dbg !2615
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2614, metadata !DIExpression()), !dbg !2615
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2616
  ret i32 %call, !dbg !2617
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2618 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2620, metadata !DIExpression()), !dbg !2622
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2621, metadata !DIExpression()), !dbg !2622
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2623
  ret i32 %call, !dbg !2624
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2625 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2629, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2630, metadata !DIExpression()), !dbg !2631
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2632
  ret i32 %call, !dbg !2633
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2634 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2638, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2639, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2640, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2641, metadata !DIExpression()), !dbg !2642
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2643
  ret i32 %call, !dbg !2644
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @can_copy_p(i32 %mode) local_unnamed_addr #4 !dbg !2 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2194, metadata !DIExpression()), !dbg !2645
  %.b = load i1, i1* @can_copy_p.can_copy_init_p, align 1, !dbg !2646
  br i1 %.b, label %if.end, label %if.then, !dbg !2648

if.then:                                          ; preds = %entry
  tail call fastcc void @compute_can_copy() #7, !dbg !2649
  store i1 true, i1* @can_copy_p.can_copy_init_p, align 1, !dbg !2651
  br label %if.end, !dbg !2652

if.end:                                           ; preds = %entry, %if.then
  %idxprom = zext i32 %mode to i64, !dbg !2653
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @can_copy, i64 0, i64 %idxprom, !dbg !2653
  %0 = load i8, i8* %arrayidx, align 1, !dbg !2653
  %cmp = icmp ne i8 %0, 0, !dbg !2654
  %conv2 = zext i1 %cmp to i8, !dbg !2653
  ret i8 %conv2, !dbg !2655
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_can_copy() unnamed_addr #4 !dbg !2656 {
entry:
  %call = tail call i8* @memset(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @can_copy, i64 0, i64 0), i32 0, i64 87) #6, !dbg !2661
  tail call void @start_sequence() #6, !dbg !2662
  call void @llvm.dbg.value(metadata i32 0, metadata !2660, metadata !DIExpression()), !dbg !2663
  br label %for.cond, !dbg !2664

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !2666
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2660, metadata !DIExpression()), !dbg !2663
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !2667
  br i1 %exitcond, label %for.end, label %for.body, !dbg !2669

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %indvars.iv, !dbg !2670
  %0 = load i8, i8* %arrayidx, align 1, !dbg !2670
  %cmp1 = icmp eq i8 %0, 1, !dbg !2672
  %arrayidx4 = getelementptr inbounds [87 x i8], [87 x i8]* @can_copy, i64 0, i64 %indvars.iv, !dbg !2673
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2674

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !2675

if.else:                                          ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %storemerge = phi i8 [ 1, %if.else ], [ 0, %if.then ], !dbg !2673
  store i8 %storemerge, i8* %arrayidx4, align 1, !dbg !2673
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2677
  call void @llvm.dbg.value(metadata i32 undef, metadata !2660, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2663
  br label %for.cond, !dbg !2678, !llvm.loop !2679

for.end:                                          ; preds = %for.cond
  tail call void @end_sequence() #6, !dbg !2681
  ret void, !dbg !2682
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @can_assign_to_reg_without_clobbers_p(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !2683 {
entry:
  %num_clobbers = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2687, metadata !DIExpression()), !dbg !2690
  %0 = bitcast i32* %num_clobbers to i8*, !dbg !2691
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !2691
  call void @llvm.dbg.value(metadata i32 0, metadata !2688, metadata !DIExpression()), !dbg !2690
  store i32 0, i32* %num_clobbers, align 4, !dbg !2692
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2693
  %bf.load = load i32, i32* %1, align 8, !dbg !2693
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2693
  %bf.clear = and i32 %bf.lshr, 255, !dbg !2693
  %call = tail call i32 @general_operand(%struct.rtx_def* %x, i32 %bf.clear) #6, !dbg !2695
  %tobool = icmp eq i32 %call, 0, !dbg !2695
  br i1 %tobool, label %if.else, label %cleanup, !dbg !2696

if.else:                                          ; preds = %entry
  %bf.load1 = load i32, i32* %1, align 8, !dbg !2697
  %bf.clear3 = and i32 %bf.load1, 16711680, !dbg !2697
  %cmp = icmp eq i32 %bf.clear3, 0, !dbg !2699
  br i1 %cmp, label %cleanup, label %if.end5, !dbg !2700

if.end5:                                          ; preds = %if.else
  %2 = load %struct.rtx_def*, %struct.rtx_def** @test_insn, align 8, !dbg !2701
  %cmp6 = icmp eq %struct.rtx_def* %2, null, !dbg !2703
  br i1 %cmp6, label %if.then7, label %if.end15, !dbg !2704

if.then7:                                         ; preds = %if.end5
  %3 = load i32, i32* @word_mode, align 4, !dbg !2705
  %call8 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %3, i32 106) #6, !dbg !2705
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !2705
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %call8, %struct.rtx_def* %4) #6, !dbg !2705
  %call10 = tail call %struct.rtx_def* @make_insn_raw(%struct.rtx_def* %call9) #6, !dbg !2707
  store %struct.rtx_def* %call10, %struct.rtx_def** @test_insn, align 8, !dbg !2708
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2709
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !2709
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx, align 8, !dbg !2710
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2711
  %rt_rtx14 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !2711
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx14, align 8, !dbg !2712
  %bf.load16.pre = load i32, i32* %1, align 8, !dbg !2713
  %.pre = and i32 %bf.load16.pre, 16711680, !dbg !2713
  br label %if.end15, !dbg !2714

if.end15:                                         ; preds = %if.then7, %if.end5
  %bf.clear18.pre-phi = phi i32 [ %.pre, %if.then7 ], [ %bf.clear3, %if.end5 ], !dbg !2713
  %7 = phi %struct.rtx_def* [ %call10, %if.then7 ], [ %2, %if.end5 ], !dbg !2713
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, !dbg !2713
  %8 = getelementptr inbounds %union.u, %union.u* %u19, i64 1, i32 0, i32 0, i64 0, !dbg !2713
  %rt_rtx22 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !2713
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !2713
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2713
  %10 = bitcast %union.rtunion_def* %arrayidx25 to i32**, !dbg !2713
  %11 = load i32*, i32** %10, align 8, !dbg !2713
  %bf.load27 = load i32, i32* %11, align 8, !dbg !2713
  %bf.clear28 = and i32 %bf.load27, -16711681, !dbg !2713
  %bf.set = or i32 %bf.clear28, %bf.clear18.pre-phi, !dbg !2713
  store i32 %bf.set, i32* %11, align 8, !dbg !2713
  %12 = load %struct.rtx_def*, %struct.rtx_def** @test_insn, align 8, !dbg !2715
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, !dbg !2715
  %13 = getelementptr inbounds %union.u, %union.u* %u29, i64 1, i32 0, i32 0, i64 0, !dbg !2715
  %rt_rtx32 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !2715
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !2715
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2715
  %rt_rtx36 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !2715
  store %struct.rtx_def* %x, %struct.rtx_def** %rt_rtx36, align 8, !dbg !2716
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !2717
  call void @llvm.dbg.value(metadata i32* %num_clobbers, metadata !2688, metadata !DIExpression(DW_OP_deref)), !dbg !2690
  %call41 = call i32 @recog(%struct.rtx_def* %16, %struct.rtx_def* %12, i32* nonnull %num_clobbers) #6, !dbg !2718
  call void @llvm.dbg.value(metadata i32 %call41, metadata !2689, metadata !DIExpression()), !dbg !2690
  %cmp42 = icmp slt i32 %call41, 0, !dbg !2719
  br i1 %cmp42, label %cleanup, label %if.end44, !dbg !2721

if.end44:                                         ; preds = %if.end15
  %17 = load i32, i32* %num_clobbers, align 4, !dbg !2722
  call void @llvm.dbg.value(metadata i32 %17, metadata !2688, metadata !DIExpression()), !dbg !2690
  %cmp45 = icmp sgt i32 %17, 0, !dbg !2724
  br i1 %cmp45, label %land.lhs.true, label %if.end49, !dbg !2725

land.lhs.true:                                    ; preds = %if.end44
  %call46 = call i32 @added_clobbers_hard_reg_p(i32 %call41) #6, !dbg !2726
  %tobool47 = icmp eq i32 %call46, 0, !dbg !2726
  br i1 %tobool47, label %if.end49, label %cleanup, !dbg !2727

if.end49:                                         ; preds = %land.lhs.true, %if.end44
  %18 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 37), align 8, !dbg !2728
  %tobool50 = icmp eq i8 (%struct.rtx_def*)* %18, null, !dbg !2730
  br i1 %tobool50, label %if.end55, label %land.lhs.true51, !dbg !2731

land.lhs.true51:                                  ; preds = %if.end49
  %19 = load %struct.rtx_def*, %struct.rtx_def** @test_insn, align 8, !dbg !2732
  %call52 = call zeroext i8 %18(%struct.rtx_def* %19) #6, !dbg !2733
  %tobool53 = icmp eq i8 %call52, 0, !dbg !2733
  br i1 %tobool53, label %if.end55, label %cleanup, !dbg !2734

if.end55:                                         ; preds = %land.lhs.true51, %if.end49
  br label %cleanup, !dbg !2735

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true51, %entry, %if.end15, %if.else, %if.end55
  %retval.0 = phi i8 [ 1, %if.end55 ], [ 1, %entry ], [ 0, %if.else ], [ 0, %if.end15 ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true51 ], !dbg !2690
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !2736
  ret i8 %retval.0, !dbg !2736
}

declare dso_local i32 @general_operand(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @make_insn_raw(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #1

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #1

declare dso_local i32 @added_clobbers_hard_reg_p(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @fis_get_condition(%struct.rtx_def* %jump) local_unnamed_addr #4 !dbg !2737 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !2741, metadata !DIExpression()), !dbg !2742
  %call = tail call %struct.rtx_def* @get_condition(%struct.rtx_def* %jump, %struct.rtx_def** null, i32 0, i32 1) #6, !dbg !2743
  ret %struct.rtx_def* %call, !dbg !2744
}

declare dso_local %struct.rtx_def* @get_condition(%struct.rtx_def*, %struct.rtx_def**, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_rtl_cprop() #4 !dbg !2745 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !2746
  %cmp = icmp sgt i32 %0, 0, !dbg !2747
  %1 = load i32, i32* @flag_gcse, align 4, !dbg !2748
  %tobool = icmp ne i32 %1, 0, !dbg !2748
  %or.cond = and i1 %cmp, %tobool, !dbg !2749
  br i1 %or.cond, label %land.lhs.true1, label %land.end, !dbg !2749

land.lhs.true1:                                   ; preds = %entry
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2750
  %calls_setjmp = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 20, !dbg !2751
  %bf.load = load i32, i32* %calls_setjmp, align 8, !dbg !2751
  %bf.clear = and i32 %bf.load, 262144, !dbg !2751
  %tobool2 = icmp eq i32 %bf.clear, 0, !dbg !2750
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !2752

land.rhs:                                         ; preds = %land.lhs.true1
  %call = tail call zeroext i8 @dbg_cnt(i32 4) #6, !dbg !2753
  %tobool3 = icmp ne i8 %call, 0, !dbg !2752
  %phitmp = zext i1 %tobool3 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true1, %land.rhs, %entry
  %3 = phi i8 [ 0, %land.lhs.true1 ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %3, !dbg !2754
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_rtl_cprop() #4 !dbg !2755 {
entry:
  %call = tail call zeroext i8 @delete_unreachable_blocks() #6, !dbg !2756
  %call1 = tail call i32 @df_set_flags(i32 1) #6, !dbg !2757
  tail call void @df_analyze() #6, !dbg !2758
  %call2 = tail call fastcc i32 @one_cprop_pass() #7, !dbg !2759
  %0 = load i32, i32* @flag_rerun_cse_after_global_opts, align 4, !dbg !2760
  %or = or i32 %0, %call2, !dbg !2760
  store i32 %or, i32* @flag_rerun_cse_after_global_opts, align 4, !dbg !2760
  ret i32 0, !dbg !2761
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_rtl_pre() #4 !dbg !2762 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !2763
  %cmp = icmp sgt i32 %0, 0, !dbg !2764
  %1 = load i32, i32* @flag_gcse, align 4, !dbg !2765
  %tobool = icmp ne i32 %1, 0, !dbg !2765
  %or.cond = and i1 %cmp, %tobool, !dbg !2766
  br i1 %or.cond, label %land.lhs.true1, label %land.end, !dbg !2766

land.lhs.true1:                                   ; preds = %entry
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2767
  %calls_setjmp = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 20, !dbg !2768
  %bf.load = load i32, i32* %calls_setjmp, align 8, !dbg !2768
  %bf.clear = and i32 %bf.load, 262144, !dbg !2768
  %tobool2 = icmp eq i32 %bf.clear, 0, !dbg !2767
  br i1 %tobool2, label %land.lhs.true3, label %land.end, !dbg !2769

land.lhs.true3:                                   ; preds = %land.lhs.true1
  %call = tail call zeroext i8 @optimize_function_for_speed_p(%struct.function* %2) #6, !dbg !2770
  %tobool5 = icmp eq i8 %call, 0, !dbg !2770
  br i1 %tobool5, label %land.end, label %land.rhs, !dbg !2771

land.rhs:                                         ; preds = %land.lhs.true3
  %call6 = tail call zeroext i8 @dbg_cnt(i32 23) #6, !dbg !2772
  %tobool8 = icmp ne i8 %call6, 0, !dbg !2771
  %phitmp = zext i1 %tobool8 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true3, %land.lhs.true1, %land.rhs, %entry
  %3 = phi i8 [ 0, %land.lhs.true3 ], [ 0, %land.lhs.true1 ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %3, !dbg !2773
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_rtl_pre() #4 !dbg !2774 {
entry:
  %call = tail call zeroext i8 @delete_unreachable_blocks() #6, !dbg !2775
  tail call void @df_analyze() #6, !dbg !2776
  %call1 = tail call fastcc i32 @one_pre_gcse_pass() #7, !dbg !2777
  %0 = load i32, i32* @flag_rerun_cse_after_global_opts, align 4, !dbg !2778
  %or = or i32 %0, %call1, !dbg !2778
  store i32 %or, i32* @flag_rerun_cse_after_global_opts, align 4, !dbg !2778
  ret i32 0, !dbg !2779
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_rtl_hoist() #4 !dbg !2780 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !2781
  %cmp = icmp sgt i32 %0, 0, !dbg !2782
  %1 = load i32, i32* @flag_gcse, align 4, !dbg !2783
  %tobool = icmp ne i32 %1, 0, !dbg !2783
  %or.cond = and i1 %cmp, %tobool, !dbg !2784
  br i1 %or.cond, label %land.lhs.true1, label %land.end, !dbg !2784

land.lhs.true1:                                   ; preds = %entry
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2785
  %calls_setjmp = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 20, !dbg !2786
  %bf.load = load i32, i32* %calls_setjmp, align 8, !dbg !2786
  %bf.clear = and i32 %bf.load, 262144, !dbg !2786
  %tobool2 = icmp eq i32 %bf.clear, 0, !dbg !2785
  br i1 %tobool2, label %land.lhs.true3, label %land.end, !dbg !2787

land.lhs.true3:                                   ; preds = %land.lhs.true1
  %call = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %2) #6, !dbg !2788
  %tobool5 = icmp eq i8 %call, 0, !dbg !2788
  br i1 %tobool5, label %land.end, label %land.rhs, !dbg !2789

land.rhs:                                         ; preds = %land.lhs.true3
  %call6 = tail call zeroext i8 @dbg_cnt(i32 16) #6, !dbg !2790
  %tobool8 = icmp ne i8 %call6, 0, !dbg !2789
  %phitmp = zext i1 %tobool8 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true3, %land.lhs.true1, %land.rhs, %entry
  %3 = phi i8 [ 0, %land.lhs.true3 ], [ 0, %land.lhs.true1 ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %3, !dbg !2791
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_rtl_hoist() #4 !dbg !2792 {
entry:
  %call = tail call zeroext i8 @delete_unreachable_blocks() #6, !dbg !2793
  tail call void @df_analyze() #6, !dbg !2794
  %call1 = tail call fastcc i32 @one_code_hoisting_pass() #7, !dbg !2795
  %0 = load i32, i32* @flag_rerun_cse_after_global_opts, align 4, !dbg !2796
  %or = or i32 %0, %call1, !dbg !2796
  store i32 %or, i32* @flag_rerun_cse_after_global_opts, align 4, !dbg !2796
  ret i32 0, !dbg !2797
}

declare dso_local void @gt_ggc_mx_rtx_def(i8*) #1

declare dso_local void @gt_pch_nx_rtx_def(i8*) #1

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

declare dso_local void @start_sequence() local_unnamed_addr #1

declare dso_local void @end_sequence() local_unnamed_addr #1

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #1

declare dso_local zeroext i8 @delete_unreachable_blocks() local_unnamed_addr #1

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #1

declare dso_local void @df_analyze() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @one_cprop_pass() unnamed_addr #4 !dbg !2798 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !2800, metadata !DIExpression()), !dbg !2805
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2806
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2806
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2806
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !2806
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !2806
  %cmp = icmp slt i32 %2, 4, !dbg !2808
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !2809

lor.lhs.false:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_too_expensive(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0)) #7, !dbg !2810
  %tobool = icmp eq i8 %call, 0, !dbg !2810
  br i1 %tobool, label %if.end, label %cleanup, !dbg !2811

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* @local_const_prop_count, align 4, !dbg !2812
  store i32 0, i32* @global_const_prop_count, align 4, !dbg !2813
  store i32 0, i32* @local_copy_prop_count, align 4, !dbg !2814
  store i32 0, i32* @global_copy_prop_count, align 4, !dbg !2815
  store i32 0, i32* @bytes_used, align 4, !dbg !2816
  %call1 = tail call i32 @_obstack_begin(%struct.obstack* nonnull @gcse_obstack, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !2817
  tail call fastcc void @alloc_gcse_mem() #7, !dbg !2818
  %call2 = tail call fastcc i32 @local_cprop_pass() #7, !dbg !2819
  %tobool3 = icmp eq i32 %call2, 0, !dbg !2819
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !2821

if.then4:                                         ; preds = %if.end
  %call5 = tail call zeroext i8 @delete_unreachable_blocks() #6, !dbg !2822
  tail call void @df_analyze() #6, !dbg !2824
  br label %if.end6, !dbg !2825

if.end6:                                          ; preds = %if.end, %if.then4
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2826
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !2826
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !2826
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 5, !dbg !2826
  %5 = load i32, i32* %x_last_basic_block, align 8, !dbg !2826
  %conv9 = sext i32 %5 to i64, !dbg !2826
  %call10 = tail call i8* @xcalloc(i64 %conv9, i64 8) #6, !dbg !2826
  store i8* %call10, i8** bitcast (%struct.rtx_def*** @implicit_sets to i8**), align 8, !dbg !2827
  tail call fastcc void @find_implicit_sets() #7, !dbg !2828
  tail call fastcc void @alloc_hash_table(%struct.hash_table_d* nonnull @set_hash_table, i32 1) #7, !dbg !2829
  tail call fastcc void @compute_hash_table(%struct.hash_table_d* nonnull @set_hash_table) #7, !dbg !2830
  %6 = load i8*, i8** bitcast (%struct.rtx_def*** @implicit_sets to i8**), align 8, !dbg !2831
  tail call void @free(i8* %6) #6, !dbg !2832
  store %struct.rtx_def** null, %struct.rtx_def*** @implicit_sets, align 8, !dbg !2833
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2834
  %tobool11 = icmp eq %struct._IO_FILE* %7, null, !dbg !2834
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !2836

if.then12:                                        ; preds = %if.end6
  tail call fastcc void @dump_hash_table(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), %struct.hash_table_d* nonnull @set_hash_table) #7, !dbg !2837
  br label %if.end13, !dbg !2837

if.end13:                                         ; preds = %if.end6, %if.then12
  %8 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @set_hash_table, i64 0, i32 2), align 4, !dbg !2838
  %cmp14 = icmp eq i32 %8, 0, !dbg !2839
  br i1 %cmp14, label %if.end69, label %if.then16, !dbg !2840

if.then16:                                        ; preds = %if.end13
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2841
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !2841
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !2841
  %x_last_basic_block19 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 5, !dbg !2841
  %11 = load i32, i32* %x_last_basic_block19, align 8, !dbg !2841
  tail call fastcc void @alloc_cprop_mem(i32 %11, i32 %8) #7, !dbg !2842
  tail call fastcc void @compute_cprop_data() #7, !dbg !2843
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2844
  %cfg21 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !2844
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21, align 8, !dbg !2844
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 0, !dbg !2844
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2844
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 6, !dbg !2844
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !2844
  br label %for.cond, !dbg !2844

for.cond:                                         ; preds = %for.inc64, %if.then16
  %16 = phi %struct.control_flow_graph* [ %13, %if.then16 ], [ %.pre1, %for.inc64 ], !dbg !2846
  %.pn = phi %struct.basic_block_def* [ %15, %if.then16 ], [ %bb.0, %for.inc64 ]
  %changed.0 = phi i32 [ 0, %if.then16 ], [ %changed.1.lcssa, %for.inc64 ], !dbg !2848
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2849
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2849
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2801, metadata !DIExpression()), !dbg !2850
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %16, i64 0, i32 1, !dbg !2846
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2846
  %cmp25 = icmp eq %struct.basic_block_def* %bb.0, %17, !dbg !2846
  br i1 %cmp25, label %for.end66, label %for.body, !dbg !2844

for.body:                                         ; preds = %for.cond
  tail call fastcc void @reset_opr_set_tables() #7, !dbg !2851
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !2853
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2853
  %18 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2853
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %18, i64 0, i32 0, !dbg !2853
  br label %for.cond27, !dbg !2853

for.cond27:                                       ; preds = %for.inc, %for.body
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx63, %for.inc ]
  %changed.1 = phi i32 [ %changed.0, %for.body ], [ %changed.2, %for.inc ], !dbg !2805
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !2855
  call void @llvm.dbg.value(metadata i32 %changed.1, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2804, metadata !DIExpression()), !dbg !2850
  %tobool28 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !2856
  br i1 %tobool28, label %for.inc64, label %land.rhs, !dbg !2856

land.rhs:                                         ; preds = %for.cond27
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2856
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 1, !dbg !2856
  %20 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2856
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2856
  %rt_rtx = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !2856
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2856
  %cmp31 = icmp eq %struct.rtx_def* %insn.0, %22, !dbg !2856
  br i1 %cmp31, label %for.inc64, label %for.body33, !dbg !2853

for.body33:                                       ; preds = %land.rhs
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !2858
  %bf.load = load i32, i32* %23, align 8, !dbg !2858
  %bf.clear = and i32 %bf.load, 65535, !dbg !2858
  %cmp34 = icmp eq i32 %bf.clear, 8, !dbg !2858
  br i1 %cmp34, label %if.then51, label %lor.lhs.false36, !dbg !2858

lor.lhs.false36:                                  ; preds = %for.body33
  %cmp39 = icmp eq i32 %bf.clear, 7, !dbg !2858
  br i1 %cmp39, label %if.then51, label %lor.lhs.false41, !dbg !2858

lor.lhs.false41:                                  ; preds = %lor.lhs.false36
  %cmp44 = icmp eq i32 %bf.clear, 9, !dbg !2858
  br i1 %cmp44, label %if.then51, label %lor.lhs.false46, !dbg !2858

lor.lhs.false46:                                  ; preds = %lor.lhs.false41
  %cmp49 = icmp eq i32 %bf.clear, 10, !dbg !2858
  br i1 %cmp49, label %if.then51, label %for.inc, !dbg !2860

if.then51:                                        ; preds = %lor.lhs.false46, %lor.lhs.false41, %lor.lhs.false36, %for.body33
  %call52 = tail call fastcc i32 @cprop_insn(%struct.rtx_def* nonnull %insn.0) #7, !dbg !2861
  %or = or i32 %changed.1, %call52, !dbg !2863
  call void @llvm.dbg.value(metadata i32 %or, metadata !2800, metadata !DIExpression()), !dbg !2805
  %bf.load53 = load i32, i32* %23, align 8, !dbg !2864
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !2864
  %cmp55 = icmp eq i32 %bf.clear54, 13, !dbg !2864
  br i1 %cmp55, label %for.inc, label %if.then57, !dbg !2866

if.then57:                                        ; preds = %if.then51
  tail call fastcc void @mark_oprs_set(%struct.rtx_def* nonnull %insn.0) #7, !dbg !2867
  br label %for.inc, !dbg !2867

for.inc:                                          ; preds = %lor.lhs.false46, %if.then57, %if.then51
  %changed.2 = phi i32 [ %changed.1, %lor.lhs.false46 ], [ %or, %if.then57 ], [ %or, %if.then51 ], !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.2, metadata !2800, metadata !DIExpression()), !dbg !2805
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2856
  %rt_rtx63 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !2856
  br label %for.cond27, !dbg !2856, !llvm.loop !2868

for.inc64:                                        ; preds = %land.rhs, %for.cond27
  %changed.1.lcssa = phi i32 [ %changed.1, %land.rhs ], [ %changed.1, %for.cond27 ], !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2846
  %cfg24.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2870
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg24.phi.trans.insert, align 8, !dbg !2846
  br label %for.cond, !dbg !2846, !llvm.loop !2871

for.end66:                                        ; preds = %for.cond
  %changed.0.lcssa = phi i32 [ %changed.0, %for.cond ], !dbg !2848
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !2800, metadata !DIExpression()), !dbg !2805
  %call67 = tail call fastcc i32 @bypass_conditional_jumps() #7, !dbg !2873
  %or68 = or i32 %changed.0.lcssa, %call67, !dbg !2874
  call void @llvm.dbg.value(metadata i32 %or68, metadata !2800, metadata !DIExpression()), !dbg !2805
  tail call fastcc void @free_cprop_mem() #7, !dbg !2875
  br label %if.end69, !dbg !2876

if.end69:                                         ; preds = %if.end13, %for.end66
  %changed.3 = phi i32 [ %or68, %for.end66 ], [ 0, %if.end13 ], !dbg !2805
  call void @llvm.dbg.value(metadata i32 %changed.3, metadata !2800, metadata !DIExpression()), !dbg !2805
  tail call fastcc void @free_hash_table(%struct.hash_table_d* nonnull @set_hash_table) #7, !dbg !2877
  tail call fastcc void @free_gcse_mem() #7, !dbg !2878
  %25 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 1) to i64*), align 8, !dbg !2879
  %sub.ptr.sub = sub i64 0, %25, !dbg !2879
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 5), align 8, !dbg !2879
  %cmp70 = icmp sgt i64 %sub.ptr.sub, 0, !dbg !2879
  %26 = inttoptr i64 %25 to i8*, !dbg !2879
  br i1 %cmp70, label %land.lhs.true, label %cond.false, !dbg !2879

land.lhs.true:                                    ; preds = %if.end69
  %27 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 4) to i64*), align 8, !dbg !2879
  %sub.ptr.sub73 = sub i64 %27, %25, !dbg !2879
  %cmp74 = icmp sgt i64 %sub.ptr.sub73, %sub.ptr.sub, !dbg !2879
  br i1 %cmp74, label %cond.true, label %cond.false, !dbg !2879

cond.true:                                        ; preds = %land.lhs.true
  %add.ptr76 = getelementptr inbounds i8, i8* %26, i64 %sub.ptr.sub, !dbg !2879
  store i8* %add.ptr76, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 2), align 8, !dbg !2879
  store i8* %add.ptr76, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !dbg !2879
  br label %cond.end, !dbg !2879

cond.false:                                       ; preds = %land.lhs.true, %if.end69
  %add.ptr77 = getelementptr inbounds i8, i8* %26, i64 %sub.ptr.sub, !dbg !2879
  tail call void @obstack_free(%struct.obstack* nonnull @gcse_obstack, i8* %add.ptr77) #6, !dbg !2879
  br label %cond.end, !dbg !2879

cond.end:                                         ; preds = %cond.false, %cond.true
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2880
  %tobool78 = icmp eq %struct._IO_FILE* %28, null, !dbg !2880
  br i1 %tobool78, label %cleanup, label %if.then79, !dbg !2882

if.then79:                                        ; preds = %cond.end
  %call80 = tail call i8* @current_function_name() #6, !dbg !2883
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2885
  %cfg82 = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, i32 1, !dbg !2885
  %30 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg82, align 8, !dbg !2885
  %x_n_basic_blocks83 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i64 0, i32 3, !dbg !2885
  %31 = load i32, i32* %x_n_basic_blocks83, align 8, !dbg !2885
  %32 = load i32, i32* @bytes_used, align 4, !dbg !2886
  %call84 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %28, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5, i64 0, i64 0), i8* %call80, i32 %31, i32 %32) #6, !dbg !2887
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2888
  %34 = load i32, i32* @local_const_prop_count, align 4, !dbg !2889
  %35 = load i32, i32* @local_copy_prop_count, align 4, !dbg !2890
  %call85 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i32 %34, i32 %35) #6, !dbg !2891
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2892
  %37 = load i32, i32* @global_const_prop_count, align 4, !dbg !2893
  %38 = load i32, i32* @global_copy_prop_count, align 4, !dbg !2894
  %call86 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i32 %37, i32 %38) #6, !dbg !2895
  br label %cleanup, !dbg !2896

cleanup:                                          ; preds = %cond.end, %lor.lhs.false, %if.then79, %entry
  %retval.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %entry ], [ %changed.3, %if.then79 ], [ %changed.3, %cond.end ], !dbg !2805
  ret i32 %retval.0, !dbg !2897
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_too_expensive(i8* %pass) unnamed_addr #4 !dbg !2898 {
entry:
  call void @llvm.dbg.value(metadata i8* %pass, metadata !2902, metadata !DIExpression()), !dbg !2903
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2904
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2904
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2904
  %x_n_edges = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 4, !dbg !2904
  %2 = load i32, i32* %x_n_edges, align 4, !dbg !2904
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !2906
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !2906
  %mul = shl nsw i32 %3, 2, !dbg !2907
  %add = add nsw i32 %mul, 20000, !dbg !2908
  %cmp = icmp sgt i32 %2, %add, !dbg !2909
  br i1 %cmp, label %if.then, label %if.end, !dbg !2910

if.then:                                          ; preds = %entry
  %div = sdiv i32 %2, %3, !dbg !2911
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 69, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0), i8* %pass, i32 %3, i32 %div) #6, !dbg !2913
  br label %return, !dbg !2914

if.end:                                           ; preds = %entry
  %call15 = tail call i32 @max_reg_num() #6, !dbg !2915
  %sub = add i32 %call15, 63, !dbg !2915
  %div17 = lshr i32 %sub, 6, !dbg !2915
  %mul18 = mul i32 %3, %div17, !dbg !2917
  %conv = zext i32 %mul18 to i64, !dbg !2918
  %mul19 = shl nuw nsw i64 %conv, 3, !dbg !2919
  %4 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !2920
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %4, i64 23, i32 1, !dbg !2920
  %5 = load i32, i32* %value, align 8, !dbg !2920
  %conv20 = sext i32 %5 to i64, !dbg !2920
  %cmp21 = icmp ugt i64 %mul19, %conv20, !dbg !2921
  br i1 %cmp21, label %if.then23, label %return, !dbg !2922

if.then23:                                        ; preds = %if.end
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2923
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !2923
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !2923
  %x_n_basic_blocks26 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 3, !dbg !2923
  %8 = load i32, i32* %x_n_basic_blocks26, align 8, !dbg !2923
  %call27 = tail call i32 @max_reg_num() #6, !dbg !2925
  %call28 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 69, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i8* %pass, i32 %8, i32 %call27) #6, !dbg !2926
  br label %return, !dbg !2927

return:                                           ; preds = %if.end, %if.then23, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 1, %if.then23 ], [ 0, %if.end ], !dbg !2903
  ret i8 %retval.0, !dbg !2928
}

declare dso_local i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) local_unnamed_addr #1

declare dso_local i8* @xmalloc(i64) #1

declare dso_local void @free(i8*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @alloc_gcse_mem() unnamed_addr #4 !dbg !2929 {
entry:
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2930
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @reg_set_bitmap, align 8, !dbg !2931
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2932
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2932
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2932
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !2932
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !2932
  %conv = sext i32 %2 to i64, !dbg !2932
  %call1 = tail call fastcc i8* @gcalloc(i64 %conv, i64 8) #7, !dbg !2932
  store i8* %call1, i8** bitcast (%struct.rtx_def*** @modify_mem_list to i8**), align 8, !dbg !2933
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2934
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !2934
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !2934
  %x_last_basic_block4 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 5, !dbg !2934
  %5 = load i32, i32* %x_last_basic_block4, align 8, !dbg !2934
  %conv5 = sext i32 %5 to i64, !dbg !2934
  %call6 = tail call fastcc i8* @gcalloc(i64 %conv5, i64 8) #7, !dbg !2934
  store i8* %call6, i8** bitcast (%struct.rtx_def*** @canon_modify_mem_list to i8**), align 8, !dbg !2935
  %call7 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2936
  store %struct.bitmap_head_def* %call7, %struct.bitmap_head_def** @modify_mem_list_set, align 8, !dbg !2937
  %call8 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2938
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** @blocks_with_calls, align 8, !dbg !2939
  ret void, !dbg !2940
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @local_cprop_pass() unnamed_addr #4 !dbg !2941 {
entry:
  call void @llvm.dbg.value(metadata i8 0, metadata !2947, metadata !DIExpression()), !dbg !2957
  tail call void @cselib_init(i32 0) #6, !dbg !2958
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2959
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2959
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2959
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !2959
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2959
  br label %for.cond, !dbg !2959

for.cond:                                         ; preds = %for.end49, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.end49 ], !dbg !2960
  %changed.0 = phi i8 [ 0, %entry ], [ %changed.1.lcssa, %for.end49 ], !dbg !2961
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.end49 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2962
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2962
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2943, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !2947, metadata !DIExpression()), !dbg !2957
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !2960
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2960
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !2960
  br i1 %cmp, label %for.end52, label %for.body, !dbg !2959

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !2963
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2963
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2963
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 0, !dbg !2963
  br label %for.cond3, !dbg !2963

for.cond3:                                        ; preds = %if.end43, %for.body
  %changed.1 = phi i8 [ %changed.0, %for.body ], [ %changed.4, %if.end43 ], !dbg !2957
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx48, %if.end43 ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !2964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2944, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !2947, metadata !DIExpression()), !dbg !2957
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !2965
  br i1 %tobool, label %for.end49, label %land.rhs, !dbg !2965

land.rhs:                                         ; preds = %for.cond3
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2965
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !2965
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2965
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2965
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !2965
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2965
  %cmp6 = icmp eq %struct.rtx_def* %insn.0, %9, !dbg !2965
  br i1 %cmp6, label %for.end49, label %for.body7, !dbg !2963

for.body7:                                        ; preds = %land.rhs
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !2966
  %bf.load = load i32, i32* %10, align 8, !dbg !2966
  %bf.clear = and i32 %bf.load, 65535, !dbg !2966
  %cmp8 = icmp eq i32 %bf.clear, 8, !dbg !2966
  br i1 %cmp8, label %if.then, label %lor.lhs.false, !dbg !2966

lor.lhs.false:                                    ; preds = %for.body7
  %cmp11 = icmp eq i32 %bf.clear, 7, !dbg !2966
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !2966

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %cmp15 = icmp eq i32 %bf.clear, 9, !dbg !2966
  br i1 %cmp15, label %if.then, label %lor.lhs.false16, !dbg !2966

lor.lhs.false16:                                  ; preds = %lor.lhs.false12
  %cmp19 = icmp eq i32 %bf.clear, 10, !dbg !2966
  br i1 %cmp19, label %if.then, label %if.end43, !dbg !2967

if.then:                                          ; preds = %lor.lhs.false16, %lor.lhs.false12, %lor.lhs.false, %for.body7
  %call = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* nonnull %insn.0) #6, !dbg !2968
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2948, metadata !DIExpression()), !dbg !2969
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !2970
  %11 = getelementptr inbounds %union.u, %union.u* %u20, i64 1, i32 0, i32 0, i64 0, !dbg !2970
  %rt_rtx23 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !2970
  %tobool24 = icmp eq %struct.rtx_def* %call, null, !dbg !2972
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2972
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !2972
  br i1 %tobool24, label %if.then.split.us, label %if.then.if.then.split_crit_edge, !dbg !2974

if.then.if.then.split_crit_edge:                  ; preds = %if.then
  br label %do.body, !dbg !2974

if.then.split.us:                                 ; preds = %if.then
  br label %do.body.us, !dbg !2974

do.body.us:                                       ; preds = %for.end.us, %if.then.split.us
  %changed.2.us = phi i8 [ %changed.1, %if.then.split.us ], [ %changed.3.us, %for.end.us ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.2.us, metadata !2947, metadata !DIExpression()), !dbg !2957
  store i32 0, i32* @reg_use_count, align 4, !dbg !2975
  tail call void @note_uses(%struct.rtx_def** nonnull %rt_rtx23, void (%struct.rtx_def**, i8*)* nonnull @local_cprop_find_used_regs, i8* null) #6, !dbg !2976
  call void @llvm.dbg.value(metadata %struct.reg_use* getelementptr inbounds ([8 x %struct.reg_use], [8 x %struct.reg_use]* @reg_use_table, i64 0, i64 0), metadata !2945, metadata !DIExpression()), !dbg !2957
  %.pre4 = load i32, i32* @reg_use_count, align 4, !dbg !2977
  br label %for.cond30.us, !dbg !2980

for.cond30.us:                                    ; preds = %for.inc.us, %do.body.us
  %12 = phi i32 [ %.pre4, %do.body.us ], [ %dec.us, %for.inc.us ], !dbg !2977
  %reg_used.0.us = phi %struct.reg_use* [ getelementptr inbounds ([8 x %struct.reg_use], [8 x %struct.reg_use]* @reg_use_table, i64 0, i64 0), %do.body.us ], [ %incdec.ptr.us, %for.inc.us ], !dbg !2981
  call void @llvm.dbg.value(metadata %struct.reg_use* %reg_used.0.us, metadata !2945, metadata !DIExpression()), !dbg !2957
  %cmp31.us = icmp sgt i32 %12, 0, !dbg !2982
  br i1 %cmp31.us, label %for.body32.us, label %for.end.us.loopexit, !dbg !2983

for.body32.us:                                    ; preds = %for.cond30.us
  %reg_rtx.us = getelementptr inbounds %struct.reg_use, %struct.reg_use* %reg_used.0.us, i64 0, i32 0, !dbg !2984
  %13 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx.us, align 8, !dbg !2984
  %call33.us = tail call fastcc zeroext i8 @do_local_cprop(%struct.rtx_def* %13, %struct.rtx_def* nonnull %insn.0) #7, !dbg !2987
  %tobool34.us = icmp eq i8 %call33.us, 0, !dbg !2987
  br i1 %tobool34.us, label %for.inc.us, label %for.body32.us.for.end.us_crit_edge, !dbg !2988

for.body32.us.for.end.us_crit_edge:               ; preds = %for.body32.us
  %.pre5 = load i32, i32* @reg_use_count, align 4, !dbg !2989
  br label %for.end.us, !dbg !2988

for.end.us.loopexit:                              ; preds = %for.cond30.us
  %.lcssa12 = phi i32 [ %12, %for.cond30.us ], !dbg !2977
  br label %for.end.us, !dbg !2990

for.end.us:                                       ; preds = %for.end.us.loopexit, %for.body32.us.for.end.us_crit_edge
  %14 = phi i32 [ %.pre5, %for.body32.us.for.end.us_crit_edge ], [ %.lcssa12, %for.end.us.loopexit ], !dbg !2989
  %changed.3.us = phi i8 [ 1, %for.body32.us.for.end.us_crit_edge ], [ %changed.2.us, %for.end.us.loopexit ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.3.us, metadata !2947, metadata !DIExpression()), !dbg !2957
  %bf.load37.us = load i32, i32* %10, align 8, !dbg !2990
  %bf.clear38.us = and i32 %bf.load37.us, 134217728, !dbg !2990
  %tobool39.us = icmp eq i32 %bf.clear38.us, 0, !dbg !2990
  %tobool42.us = icmp ne i32 %14, 0, !dbg !2992
  %or.cond.us = and i1 %tobool39.us, %tobool42.us, !dbg !2993
  br i1 %or.cond.us, label %do.body.us, label %if.end43.loopexit.us-lcssa.us, !dbg !2993, !llvm.loop !2994

for.inc.us:                                       ; preds = %for.body32.us
  %incdec.ptr.us = getelementptr inbounds %struct.reg_use, %struct.reg_use* %reg_used.0.us, i64 1, !dbg !2996
  call void @llvm.dbg.value(metadata %struct.reg_use* %incdec.ptr.us, metadata !2945, metadata !DIExpression()), !dbg !2957
  %15 = load i32, i32* @reg_use_count, align 4, !dbg !2997
  %dec.us = add nsw i32 %15, -1, !dbg !2997
  store i32 %dec.us, i32* @reg_use_count, align 4, !dbg !2997
  br label %for.cond30.us, !dbg !2998, !llvm.loop !2999

if.end43.loopexit.us-lcssa.us:                    ; preds = %for.end.us
  %changed.3.us.lcssa = phi i8 [ %changed.3.us, %for.end.us ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.3.us.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.3.us.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  br label %if.end43.loopexit, !dbg !3001

do.body:                                          ; preds = %for.end, %if.then.if.then.split_crit_edge
  %changed.2 = phi i8 [ %changed.1, %if.then.if.then.split_crit_edge ], [ %changed.3, %for.end ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.2, metadata !2947, metadata !DIExpression()), !dbg !2957
  store i32 0, i32* @reg_use_count, align 4, !dbg !2975
  tail call void @note_uses(%struct.rtx_def** nonnull %rt_rtx23, void (%struct.rtx_def**, i8*)* nonnull @local_cprop_find_used_regs, i8* null) #6, !dbg !2976
  tail call void @local_cprop_find_used_regs(%struct.rtx_def** nonnull %rt_rtx29, i8* null) #7, !dbg !3002
  call void @llvm.dbg.value(metadata %struct.reg_use* getelementptr inbounds ([8 x %struct.reg_use], [8 x %struct.reg_use]* @reg_use_table, i64 0, i64 0), metadata !2945, metadata !DIExpression()), !dbg !2957
  %.pre2 = load i32, i32* @reg_use_count, align 4, !dbg !2977
  br label %for.cond30, !dbg !2980

for.cond30:                                       ; preds = %for.inc, %do.body
  %16 = phi i32 [ %.pre2, %do.body ], [ %dec, %for.inc ], !dbg !2977
  %reg_used.0 = phi %struct.reg_use* [ getelementptr inbounds ([8 x %struct.reg_use], [8 x %struct.reg_use]* @reg_use_table, i64 0, i64 0), %do.body ], [ %incdec.ptr, %for.inc ], !dbg !2981
  call void @llvm.dbg.value(metadata %struct.reg_use* %reg_used.0, metadata !2945, metadata !DIExpression()), !dbg !2957
  %cmp31 = icmp sgt i32 %16, 0, !dbg !2982
  br i1 %cmp31, label %for.body32, label %for.end.loopexit, !dbg !2983

for.body32:                                       ; preds = %for.cond30
  %reg_rtx = getelementptr inbounds %struct.reg_use, %struct.reg_use* %reg_used.0, i64 0, i32 0, !dbg !2984
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !2984
  %call33 = tail call fastcc zeroext i8 @do_local_cprop(%struct.rtx_def* %17, %struct.rtx_def* nonnull %insn.0) #7, !dbg !2987
  %tobool34 = icmp eq i8 %call33, 0, !dbg !2987
  br i1 %tobool34, label %for.inc, label %for.body32.for.end_crit_edge, !dbg !2988

for.body32.for.end_crit_edge:                     ; preds = %for.body32
  %.pre3 = load i32, i32* @reg_use_count, align 4, !dbg !2989
  br label %for.end, !dbg !2988

for.inc:                                          ; preds = %for.body32
  %incdec.ptr = getelementptr inbounds %struct.reg_use, %struct.reg_use* %reg_used.0, i64 1, !dbg !2996
  call void @llvm.dbg.value(metadata %struct.reg_use* %incdec.ptr, metadata !2945, metadata !DIExpression()), !dbg !2957
  %18 = load i32, i32* @reg_use_count, align 4, !dbg !2997
  %dec = add nsw i32 %18, -1, !dbg !2997
  store i32 %dec, i32* @reg_use_count, align 4, !dbg !2997
  br label %for.cond30, !dbg !2998, !llvm.loop !2999

for.end.loopexit:                                 ; preds = %for.cond30
  %.lcssa = phi i32 [ %16, %for.cond30 ], !dbg !2977
  br label %for.end, !dbg !2990

for.end:                                          ; preds = %for.end.loopexit, %for.body32.for.end_crit_edge
  %19 = phi i32 [ %.pre3, %for.body32.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !2989
  %changed.3 = phi i8 [ 1, %for.body32.for.end_crit_edge ], [ %changed.2, %for.end.loopexit ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.3, metadata !2947, metadata !DIExpression()), !dbg !2957
  %bf.load37 = load i32, i32* %10, align 8, !dbg !2990
  %bf.clear38 = and i32 %bf.load37, 134217728, !dbg !2990
  %tobool39 = icmp eq i32 %bf.clear38, 0, !dbg !2990
  %tobool42 = icmp ne i32 %19, 0, !dbg !2992
  %or.cond = and i1 %tobool39, %tobool42, !dbg !2993
  br i1 %or.cond, label %do.body, label %if.end43.loopexit.us-lcssa, !dbg !2993, !llvm.loop !2994

if.end43.loopexit.us-lcssa:                       ; preds = %for.end
  %changed.3.lcssa11 = phi i8 [ %changed.3, %for.end ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.3.lcssa11, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.3.lcssa11, metadata !2947, metadata !DIExpression()), !dbg !2957
  br label %if.end43.loopexit, !dbg !3001

if.end43.loopexit:                                ; preds = %if.end43.loopexit.us-lcssa.us, %if.end43.loopexit.us-lcssa
  %changed.3.lcssa = phi i8 [ %changed.3.lcssa11, %if.end43.loopexit.us-lcssa ], [ %changed.3.us.lcssa, %if.end43.loopexit.us-lcssa.us ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.3.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  br label %if.end43, !dbg !3001

if.end43:                                         ; preds = %if.end43.loopexit, %lor.lhs.false16
  %changed.4 = phi i8 [ %changed.1, %lor.lhs.false16 ], [ %changed.3.lcssa, %if.end43.loopexit ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.4, metadata !2947, metadata !DIExpression()), !dbg !2957
  tail call void @cselib_process_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !3001
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2965
  %rt_rtx48 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !2965
  br label %for.cond3, !dbg !2965, !llvm.loop !3003

for.end49:                                        ; preds = %land.rhs, %for.cond3
  %changed.1.lcssa = phi i8 [ %changed.1, %land.rhs ], [ %changed.1, %for.cond3 ], !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  tail call void @cselib_clear_table() #6, !dbg !3005
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2960
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3006
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !2960
  br label %for.cond, !dbg !2960, !llvm.loop !3007

for.end52:                                        ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !2961
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2947, metadata !DIExpression()), !dbg !2957
  tail call void @cselib_finish() #6, !dbg !3009
  %conv = zext i8 %changed.0.lcssa to i32, !dbg !3010
  ret i32 %conv, !dbg !3011
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @find_implicit_sets() unnamed_addr #4 !dbg !3012 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3016, metadata !DIExpression()), !dbg !3019
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3020
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3020
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3020
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3020
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3020
  br label %for.cond, !dbg !3020

for.cond:                                         ; preds = %for.inc, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.inc ], !dbg !3022
  %count.0 = phi i32 [ 0, %entry ], [ %count.3, %for.inc ], !dbg !3019
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3024
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3024
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3014, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !3016, metadata !DIExpression()), !dbg !3019
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3022
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3022
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3022
  br i1 %cmp, label %for.end, label %for.body, !dbg !3020

for.body:                                         ; preds = %for.cond
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !3025
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3025
  %tobool = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !3025
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3025

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !3025
  br label %cond.end, !dbg !3025

cond.end:                                         ; preds = %for.body, %cond.true
  %cond4 = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !3025
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond4) #7, !dbg !3025
  %cmp5 = icmp ugt i32 %call, 1, !dbg !3027
  br i1 %cmp5, label %if.then, label %for.inc, !dbg !3028

if.then:                                          ; preds = %cond.end
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !3029
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3029
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3029
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !3029
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3029
  %call6 = tail call %struct.rtx_def* @fis_get_condition(%struct.rtx_def* %7) #7, !dbg !3031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !3017, metadata !DIExpression()), !dbg !3019
  %tobool7 = icmp eq %struct.rtx_def* %call6, null, !dbg !3032
  br i1 %tobool7, label %for.inc, label %land.lhs.true, !dbg !3034

land.lhs.true:                                    ; preds = %if.then
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call6, i64 0, i32 0, !dbg !3035
  %bf.load = load i32, i32* %8, align 8, !dbg !3035
  %bf.clear = and i32 %bf.load, 65535, !dbg !3035
  %cmp8 = icmp eq i32 %bf.clear, 81, !dbg !3036
  br i1 %cmp8, label %land.lhs.true12, label %lor.lhs.false, !dbg !3037

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp11 = icmp eq i32 %bf.clear, 80, !dbg !3038
  br i1 %cmp11, label %land.lhs.true12, label %for.inc, !dbg !3039

land.lhs.true12:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3040
  %9 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3040
  %10 = load i32*, i32** %9, align 8, !dbg !3040
  %bf.load13 = load i32, i32* %10, align 8, !dbg !3040
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !3040
  %cmp15 = icmp eq i32 %bf.clear14, 37, !dbg !3040
  br i1 %cmp15, label %land.lhs.true16, label %for.inc, !dbg !3041

land.lhs.true16:                                  ; preds = %land.lhs.true12
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !3041
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3042
  %call21 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %11) #7, !dbg !3042
  %cmp22 = icmp ugt i32 %call21, 52, !dbg !3043
  br i1 %cmp22, label %land.lhs.true23, label %for.inc, !dbg !3044

land.lhs.true23:                                  ; preds = %land.lhs.true16
  %call24 = tail call fastcc zeroext i8 @implicit_set_cond_p(%struct.rtx_def* nonnull %call6) #7, !dbg !3045
  %tobool25 = icmp eq i8 %call24, 0, !dbg !3045
  br i1 %tobool25, label %for.inc, label %if.then26, !dbg !3046

if.then26:                                        ; preds = %land.lhs.true23
  %bf.load27 = load i32, i32* %8, align 8, !dbg !3047
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !3047
  %cmp29 = icmp eq i32 %bf.clear28, 81, !dbg !3049
  %12 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3050
  %tobool33 = icmp ne %struct.VEC_edge_gc* %12, null, !dbg !3050
  br i1 %cmp29, label %cond.true31, label %cond.false65, !dbg !3047

cond.true31:                                      ; preds = %if.then26
  br i1 %tobool33, label %cond.true34, label %cond.end38, !dbg !3051

cond.true34:                                      ; preds = %cond.true31
  %base36 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !3051
  br label %cond.end38, !dbg !3051

cond.end38:                                       ; preds = %cond.true31, %cond.true34
  %cond39 = phi %struct.VEC_edge_base* [ %base36, %cond.true34 ], [ null, %cond.true31 ], !dbg !3051
  %call40 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond39, i32 0) #7, !dbg !3051
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call40, i64 0, i32 7, !dbg !3051
  %13 = load i32, i32* %flags, align 8, !dbg !3051
  %and = and i32 %13, 1, !dbg !3051
  %tobool41 = icmp eq i32 %and, 0, !dbg !3051
  %14 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3051
  %tobool44 = icmp ne %struct.VEC_edge_gc* %14, null, !dbg !3051
  br i1 %tobool41, label %cond.false52, label %cond.true42, !dbg !3051

cond.true42:                                      ; preds = %cond.end38
  br i1 %tobool44, label %cond.true45, label %cond.end49, !dbg !3051

cond.true45:                                      ; preds = %cond.true42
  %base47 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %14, i64 0, i32 0, !dbg !3051
  br label %cond.end49, !dbg !3051

cond.end49:                                       ; preds = %cond.true42, %cond.true45
  %cond50 = phi %struct.VEC_edge_base* [ %base47, %cond.true45 ], [ null, %cond.true42 ], !dbg !3051
  %call51 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond50, i32 1) #7, !dbg !3051
  br label %cond.end62, !dbg !3051

cond.false52:                                     ; preds = %cond.end38
  br i1 %tobool44, label %cond.true55, label %cond.end59, !dbg !3051

cond.true55:                                      ; preds = %cond.false52
  %base57 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %14, i64 0, i32 0, !dbg !3051
  br label %cond.end59, !dbg !3051

cond.end59:                                       ; preds = %cond.false52, %cond.true55
  %cond60 = phi %struct.VEC_edge_base* [ %base57, %cond.true55 ], [ null, %cond.false52 ], !dbg !3051
  %call61 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond60, i32 0) #7, !dbg !3051
  br label %cond.end62, !dbg !3051

cond.end62:                                       ; preds = %cond.end59, %cond.end49
  %cond63 = phi %struct.edge_def* [ %call51, %cond.end49 ], [ %call61, %cond.end59 ], !dbg !3051
  br label %cond.end101, !dbg !3047

cond.false65:                                     ; preds = %if.then26
  br i1 %tobool33, label %cond.true68, label %cond.end72, !dbg !3052

cond.true68:                                      ; preds = %cond.false65
  %base70 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !3052
  br label %cond.end72, !dbg !3052

cond.end72:                                       ; preds = %cond.false65, %cond.true68
  %cond73 = phi %struct.VEC_edge_base* [ %base70, %cond.true68 ], [ null, %cond.false65 ], !dbg !3052
  %call74 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond73, i32 0) #7, !dbg !3052
  %flags75 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 7, !dbg !3052
  %15 = load i32, i32* %flags75, align 8, !dbg !3052
  %and76 = and i32 %15, 1, !dbg !3052
  %tobool77 = icmp eq i32 %and76, 0, !dbg !3052
  %16 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3052
  %tobool80 = icmp ne %struct.VEC_edge_gc* %16, null, !dbg !3052
  br i1 %tobool77, label %cond.false88, label %cond.true78, !dbg !3052

cond.true78:                                      ; preds = %cond.end72
  br i1 %tobool80, label %cond.true81, label %cond.end85, !dbg !3052

cond.true81:                                      ; preds = %cond.true78
  %base83 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %16, i64 0, i32 0, !dbg !3052
  br label %cond.end85, !dbg !3052

cond.end85:                                       ; preds = %cond.true78, %cond.true81
  %cond86 = phi %struct.VEC_edge_base* [ %base83, %cond.true81 ], [ null, %cond.true78 ], !dbg !3052
  %call87 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond86, i32 0) #7, !dbg !3052
  br label %cond.end98, !dbg !3052

cond.false88:                                     ; preds = %cond.end72
  br i1 %tobool80, label %cond.true91, label %cond.end95, !dbg !3052

cond.true91:                                      ; preds = %cond.false88
  %base93 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %16, i64 0, i32 0, !dbg !3052
  br label %cond.end95, !dbg !3052

cond.end95:                                       ; preds = %cond.false88, %cond.true91
  %cond96 = phi %struct.VEC_edge_base* [ %base93, %cond.true91 ], [ null, %cond.false88 ], !dbg !3052
  %call97 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond96, i32 1) #7, !dbg !3052
  br label %cond.end98, !dbg !3052

cond.end98:                                       ; preds = %cond.end95, %cond.end85
  %cond99 = phi %struct.edge_def* [ %call87, %cond.end85 ], [ %call97, %cond.end95 ], !dbg !3052
  br label %cond.end101, !dbg !3047

cond.end101:                                      ; preds = %cond.end98, %cond.end62
  %cond63.pn = phi %struct.edge_def* [ %cond63, %cond.end62 ], [ %cond99, %cond.end98 ]
  %cond102.in = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond63.pn, i64 0, i32 1, !dbg !3050
  %cond102 = load %struct.basic_block_def*, %struct.basic_block_def** %cond102.in, align 8, !dbg !3047
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond102, metadata !3015, metadata !DIExpression()), !dbg !3019
  %tobool103 = icmp eq %struct.basic_block_def* %cond102, null, !dbg !3053
  br i1 %tobool103, label %for.inc, label %land.lhs.true104, !dbg !3055

land.lhs.true104:                                 ; preds = %cond.end101
  %call105 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* nonnull %cond102) #7, !dbg !3056
  %tobool107 = icmp eq i8 %call105, 0, !dbg !3056
  br i1 %tobool107, label %for.inc, label %land.lhs.true108, !dbg !3057

land.lhs.true108:                                 ; preds = %land.lhs.true104
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3058
  %cfg110 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !3058
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg110, align 8, !dbg !3058
  %x_exit_block_ptr111 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 1, !dbg !3058
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr111, align 8, !dbg !3058
  %cmp112 = icmp eq %struct.basic_block_def* %cond102, %19, !dbg !3059
  br i1 %cmp112, label %for.inc, label %if.then114, !dbg !3060

if.then114:                                       ; preds = %land.lhs.true108
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !3061
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3061
  %rt_rtx122 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !3061
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx122, align 8, !dbg !3061
  %call123 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %20, %struct.rtx_def* %22) #6, !dbg !3061
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call123, metadata !3018, metadata !DIExpression()), !dbg !3019
  %23 = load %struct.rtx_def**, %struct.rtx_def*** @implicit_sets, align 8, !dbg !3063
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond102, i64 0, i32 9, !dbg !3064
  %24 = load i32, i32* %index, align 8, !dbg !3064
  %idxprom = sext i32 %24 to i64, !dbg !3063
  %arrayidx124 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %23, i64 %idxprom, !dbg !3063
  store %struct.rtx_def* %call123, %struct.rtx_def** %arrayidx124, align 8, !dbg !3065
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3066
  %tobool125 = icmp eq %struct._IO_FILE* %25, null, !dbg !3066
  br i1 %tobool125, label %if.end, label %if.then126, !dbg !3068

if.then126:                                       ; preds = %if.then114
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !3069
  %call131 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %26) #7, !dbg !3069
  %call132 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %25, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i32 %call131) #6, !dbg !3071
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3072
  %28 = load i32, i32* %index, align 8, !dbg !3073
  %call134 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i32 %28) #6, !dbg !3074
  br label %if.end, !dbg !3075

if.end:                                           ; preds = %if.then114, %if.then126
  %inc = add i32 %count.0, 1, !dbg !3076
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3016, metadata !DIExpression()), !dbg !3019
  br label %for.inc, !dbg !3077

for.inc:                                          ; preds = %land.lhs.true108, %land.lhs.true104, %cond.end101, %land.lhs.true23, %if.then, %cond.end, %if.end, %land.lhs.true16, %land.lhs.true12, %lor.lhs.false
  %count.3 = phi i32 [ %count.0, %cond.end ], [ %count.0, %land.lhs.true23 ], [ %count.0, %land.lhs.true16 ], [ %count.0, %land.lhs.true12 ], [ %count.0, %lor.lhs.false ], [ %count.0, %if.then ], [ %inc, %if.end ], [ %count.0, %land.lhs.true108 ], [ %count.0, %land.lhs.true104 ], [ %count.0, %cond.end101 ], !dbg !3019
  call void @llvm.dbg.value(metadata i32 %count.3, metadata !3016, metadata !DIExpression()), !dbg !3019
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3022
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3078
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3022
  br label %for.cond, !dbg !3022, !llvm.loop !3079

for.end:                                          ; preds = %for.cond
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !3019
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !3016, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !3016, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !3016, metadata !DIExpression()), !dbg !3019
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3081
  %tobool139 = icmp eq %struct._IO_FILE* %29, null, !dbg !3081
  br i1 %tobool139, label %if.end142, label %if.then140, !dbg !3083

if.then140:                                       ; preds = %for.end
  %call141 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %29, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0), i32 %count.0.lcssa) #6, !dbg !3084
  br label %if.end142, !dbg !3084

if.end142:                                        ; preds = %for.end, %if.then140
  ret void, !dbg !3085
}

; Function Attrs: nounwind uwtable
define internal fastcc void @alloc_hash_table(%struct.hash_table_d* %table, i32 %set_p) unnamed_addr #4 !dbg !3086 {
entry:
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !3091, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata i32 %set_p, metadata !3092, metadata !DIExpression()), !dbg !3094
  %call = tail call i32 @get_max_insn_count() #6, !dbg !3095
  call void @llvm.dbg.value(metadata i32 %call, metadata !3093, metadata !DIExpression()), !dbg !3094
  %div = sdiv i32 %call, 4, !dbg !3096
  %size = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 1, !dbg !3097
  %cmp = icmp ult i32 %div, 11, !dbg !3098
  br i1 %cmp, label %if.then, label %if.end, !dbg !3100

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3101

if.end:                                           ; preds = %if.then, %entry
  %0 = phi i32 [ 11, %if.then ], [ %div, %entry ], !dbg !3102
  %or = or i32 %0, 1, !dbg !3102
  store i32 %or, i32* %size, align 8, !dbg !3102
  %mul = shl i32 %or, 3, !dbg !3103
  call void @llvm.dbg.value(metadata i32 %mul, metadata !3093, metadata !DIExpression()), !dbg !3094
  %conv6 = sext i32 %mul to i64, !dbg !3104
  %call7 = tail call fastcc i8* @gmalloc(i64 %conv6) #7, !dbg !3104
  %1 = bitcast %struct.hash_table_d* %table to i8**, !dbg !3105
  store i8* %call7, i8** %1, align 8, !dbg !3105
  %set_p9 = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 3, !dbg !3106
  store i32 %set_p, i32* %set_p9, align 8, !dbg !3107
  ret void, !dbg !3108
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_hash_table(%struct.hash_table_d* %table) unnamed_addr #4 !dbg !3109 {
entry:
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !3113, metadata !DIExpression()), !dbg !3114
  %n_elems = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 2, !dbg !3115
  store i32 0, i32* %n_elems, align 4, !dbg !3116
  %0 = bitcast %struct.hash_table_d* %table to i8**, !dbg !3117
  %1 = load i8*, i8** %0, align 8, !dbg !3117
  %size = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 1, !dbg !3118
  %2 = load i32, i32* %size, align 8, !dbg !3118
  %conv = zext i32 %2 to i64, !dbg !3119
  %mul = shl nuw nsw i64 %conv, 3, !dbg !3120
  %call = tail call i8* @memset(i8* %1, i32 0, i64 %mul) #6, !dbg !3121
  tail call fastcc void @compute_hash_table_work(%struct.hash_table_d* %table) #7, !dbg !3122
  ret void, !dbg !3123
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_hash_table(%struct._IO_FILE* %file, i8* %name, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !3124 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3128, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.value(metadata i8* %name, metadata !3129, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !3130, metadata !DIExpression()), !dbg !3135
  %n_elems = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 2, !dbg !3136
  %0 = load i32, i32* %n_elems, align 4, !dbg !3136
  %conv = zext i32 %0 to i64, !dbg !3136
  %call = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !3136
  %1 = bitcast i8* %call to %struct.expr**, !dbg !3136
  call void @llvm.dbg.value(metadata %struct.expr** %1, metadata !3132, metadata !DIExpression()), !dbg !3135
  %2 = load i32, i32* %n_elems, align 4, !dbg !3137
  %conv2 = zext i32 %2 to i64, !dbg !3137
  %mul = shl nuw nsw i64 %conv2, 2, !dbg !3137
  %call3 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3137
  %3 = bitcast i8* %call3 to i32*, !dbg !3137
  call void @llvm.dbg.value(metadata i32* %3, metadata !3133, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.value(metadata i32 0, metadata !3131, metadata !DIExpression()), !dbg !3135
  %size = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 1, !dbg !3138
  %table5 = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 0, !dbg !3141
  br label %for.cond, !dbg !3143

for.cond:                                         ; preds = %for.inc15, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc15 ], [ 0, %entry ], !dbg !3144
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3131, metadata !DIExpression()), !dbg !3135
  %4 = load i32, i32* %size, align 8, !dbg !3145
  %5 = sext i32 %4 to i64, !dbg !3146
  %cmp = icmp slt i64 %indvars.iv1, %5, !dbg !3146
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3147

for.body:                                         ; preds = %for.cond
  %6 = load %struct.expr**, %struct.expr*** %table5, align 8, !dbg !3148
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %6, i64 %indvars.iv1, !dbg !3149
  br label %for.cond6, !dbg !3150

for.cond6:                                        ; preds = %for.body9, %for.body
  %expr.0.in = phi %struct.expr** [ %arrayidx, %for.body ], [ %next_same_hash, %for.body9 ]
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !3141
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !3134, metadata !DIExpression()), !dbg !3135
  %cmp7 = icmp eq %struct.expr* %expr.0, null, !dbg !3151
  br i1 %cmp7, label %for.inc15, label %for.body9, !dbg !3153

for.body9:                                        ; preds = %for.cond6
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 1, !dbg !3154
  %7 = load i32, i32* %bitmap_index, align 8, !dbg !3154
  %idxprom10 = sext i32 %7 to i64, !dbg !3156
  %arrayidx11 = getelementptr inbounds %struct.expr*, %struct.expr** %1, i64 %idxprom10, !dbg !3156
  store %struct.expr* %expr.0, %struct.expr** %arrayidx11, align 8, !dbg !3157
  %8 = load i32, i32* %bitmap_index, align 8, !dbg !3158
  %idxprom13 = sext i32 %8 to i64, !dbg !3159
  %arrayidx14 = getelementptr inbounds i32, i32* %3, i64 %idxprom13, !dbg !3159
  %9 = trunc i64 %indvars.iv1 to i32, !dbg !3160
  store i32 %9, i32* %arrayidx14, align 4, !dbg !3160
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !3161
  br label %for.cond6, !dbg !3162, !llvm.loop !3163

for.inc15:                                        ; preds = %for.cond6
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3165
  call void @llvm.dbg.value(metadata i32 undef, metadata !3131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3135
  br label %for.cond, !dbg !3166, !llvm.loop !3167

for.end16:                                        ; preds = %for.cond
  %.lcssa = phi i32 [ %4, %for.cond ], !dbg !3145
  %10 = load i32, i32* %n_elems, align 4, !dbg !3169
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i64 0, i64 0), i8* %name, i32 %.lcssa, i32 %10) #6, !dbg !3170
  call void @llvm.dbg.value(metadata i32 0, metadata !3131, metadata !DIExpression()), !dbg !3135
  br label %for.cond20, !dbg !3171

for.cond20:                                       ; preds = %for.inc37, %for.end16
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc37 ], [ 0, %for.end16 ], !dbg !3173
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3131, metadata !DIExpression()), !dbg !3135
  %11 = load i32, i32* %n_elems, align 4, !dbg !3174
  %12 = sext i32 %11 to i64, !dbg !3176
  %cmp22 = icmp slt i64 %indvars.iv, %12, !dbg !3176
  br i1 %cmp22, label %for.body24, label %for.end39, !dbg !3177

for.body24:                                       ; preds = %for.cond20
  %arrayidx26 = getelementptr inbounds %struct.expr*, %struct.expr** %1, i64 %indvars.iv, !dbg !3178
  %13 = load %struct.expr*, %struct.expr** %arrayidx26, align 8, !dbg !3178
  %cmp27 = icmp eq %struct.expr* %13, null, !dbg !3180
  br i1 %cmp27, label %for.inc37, label %if.then, !dbg !3181

if.then:                                          ; preds = %for.body24
  call void @llvm.dbg.value(metadata %struct.expr* %13, metadata !3134, metadata !DIExpression()), !dbg !3135
  %bitmap_index31 = getelementptr inbounds %struct.expr, %struct.expr* %13, i64 0, i32 1, !dbg !3182
  %14 = load i32, i32* %bitmap_index31, align 8, !dbg !3182
  %arrayidx33 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv, !dbg !3184
  %15 = load i32, i32* %arrayidx33, align 4, !dbg !3184
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23, i64 0, i64 0), i32 %14, i32 %15) #6, !dbg !3185
  %expr35 = getelementptr inbounds %struct.expr, %struct.expr* %13, i64 0, i32 0, !dbg !3186
  %16 = load %struct.rtx_def*, %struct.rtx_def** %expr35, align 8, !dbg !3186
  tail call void @print_rtl(%struct._IO_FILE* %file, %struct.rtx_def* %16) #6, !dbg !3187
  %call36 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3188
  br label %for.inc37, !dbg !3189

for.inc37:                                        ; preds = %for.body24, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3190
  call void @llvm.dbg.value(metadata i32 undef, metadata !3131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3135
  br label %for.cond20, !dbg !3191, !llvm.loop !3192

for.end39:                                        ; preds = %for.cond20
  %call40 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3194
  tail call void @free(i8* %call) #6, !dbg !3195
  tail call void @free(i8* %call3) #6, !dbg !3196
  ret void, !dbg !3197
}

; Function Attrs: nounwind uwtable
define internal fastcc void @alloc_cprop_mem(i32 %n_blocks, i32 %n_sets) unnamed_addr #4 !dbg !3198 {
entry:
  call void @llvm.dbg.value(metadata i32 %n_blocks, metadata !3202, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.value(metadata i32 %n_sets, metadata !3203, metadata !DIExpression()), !dbg !3204
  %call = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_sets) #6, !dbg !3205
  store %struct.simple_bitmap_def** %call, %struct.simple_bitmap_def*** @cprop_pavloc, align 8, !dbg !3206
  %call1 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_sets) #6, !dbg !3207
  store %struct.simple_bitmap_def** %call1, %struct.simple_bitmap_def*** @cprop_absaltered, align 8, !dbg !3208
  %call2 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_sets) #6, !dbg !3209
  store %struct.simple_bitmap_def** %call2, %struct.simple_bitmap_def*** @cprop_avin, align 8, !dbg !3210
  %call3 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_sets) #6, !dbg !3211
  store %struct.simple_bitmap_def** %call3, %struct.simple_bitmap_def*** @cprop_avout, align 8, !dbg !3212
  ret void, !dbg !3213
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_cprop_data() unnamed_addr #4 !dbg !3214 {
entry:
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @cprop_absaltered, align 8, !dbg !3215
  %1 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @cprop_pavloc, align 8, !dbg !3216
  tail call fastcc void @compute_local_properties(%struct.simple_bitmap_def** %0, %struct.simple_bitmap_def** %1, %struct.simple_bitmap_def** null, %struct.hash_table_d* nonnull @set_hash_table) #7, !dbg !3217
  %2 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @cprop_pavloc, align 8, !dbg !3218
  %3 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @cprop_absaltered, align 8, !dbg !3219
  %4 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @cprop_avout, align 8, !dbg !3220
  %5 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @cprop_avin, align 8, !dbg !3221
  tail call void @compute_available(%struct.simple_bitmap_def** %2, %struct.simple_bitmap_def** %3, %struct.simple_bitmap_def** %4, %struct.simple_bitmap_def** %5) #6, !dbg !3222
  ret void, !dbg !3223
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reset_opr_set_tables() unnamed_addr #4 !dbg !3224 {
entry:
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_set_bitmap, align 8, !dbg !3225
  tail call void @bitmap_clear(%struct.bitmap_head_def* %0) #6, !dbg !3225
  tail call fastcc void @clear_modify_mem_tables() #7, !dbg !3226
  ret void, !dbg !3227
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @cprop_insn(%struct.rtx_def* %insn) unnamed_addr #4 !dbg !3228 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3232, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i32 0, metadata !3234, metadata !DIExpression()), !dbg !3243
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3244
  %bf.load = load i32, i32* %0, align 8, !dbg !3244
  %bf.clear = and i32 %bf.load, 65535, !dbg !3244
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3244
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3244

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3244
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !3244

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3244
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !3244

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3244
  br i1 %cmp11, label %if.end, label %cleanup95, !dbg !3246

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 0, i32* @reg_use_count, align 4, !dbg !3247
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3248
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3248
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3248
  tail call void @note_uses(%struct.rtx_def** nonnull %rt_rtx, void (%struct.rtx_def**, i8*)* nonnull @find_used_regs, i8* null) #6, !dbg !3249
  %call = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) #6, !dbg !3250
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3235, metadata !DIExpression()), !dbg !3243
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !3251
  br i1 %tobool, label %if.end17, label %if.then12, !dbg !3253

if.then12:                                        ; preds = %if.end
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3254
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !3254
  tail call void @find_used_regs(%struct.rtx_def** nonnull %rt_rtx16, i8* null) #7, !dbg !3255
  br label %if.end17, !dbg !3255

if.end17:                                         ; preds = %if.end, %if.then12
  call void @llvm.dbg.value(metadata %struct.reg_use* getelementptr inbounds ([8 x %struct.reg_use], [8 x %struct.reg_use]* @reg_use_table, i64 0, i64 0), metadata !3233, metadata !DIExpression()), !dbg !3243
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3256
  %rt_int = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !3256
  %.pre = load i32, i32* @reg_use_count, align 4, !dbg !3263
  br label %for.cond, !dbg !3264

for.cond:                                         ; preds = %for.inc, %if.end17
  %2 = phi i32 [ %.pre, %if.end17 ], [ %dec, %for.inc ], !dbg !3263
  %changed.0 = phi i32 [ 0, %if.end17 ], [ %changed.5, %for.inc ], !dbg !3243
  %reg_used.0 = phi %struct.reg_use* [ getelementptr inbounds ([8 x %struct.reg_use], [8 x %struct.reg_use]* @reg_use_table, i64 0, i64 0), %if.end17 ], [ %incdec.ptr, %for.inc ], !dbg !3265
  call void @llvm.dbg.value(metadata %struct.reg_use* %reg_used.0, metadata !3233, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !3234, metadata !DIExpression()), !dbg !3243
  %cmp18 = icmp sgt i32 %2, 0, !dbg !3266
  br i1 %cmp18, label %for.body, label %for.end, !dbg !3267

for.body:                                         ; preds = %for.cond
  %reg_rtx = getelementptr inbounds %struct.reg_use, %struct.reg_use* %reg_used.0, i64 0, i32 0, !dbg !3268
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !3268
  %call19 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !3268
  call void @llvm.dbg.value(metadata i32 %call19, metadata !3236, metadata !DIExpression()), !dbg !3269
  %4 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !3270
  %call21 = tail call fastcc i32 @oprs_not_set_p(%struct.rtx_def* %4, %struct.rtx_def* %insn) #7, !dbg !3272
  %tobool22 = icmp eq i32 %call21, 0, !dbg !3272
  br i1 %tobool22, label %cleanup, label %if.end24, !dbg !3273

if.end24:                                         ; preds = %for.body
  %call25 = tail call fastcc %struct.expr* @find_avail_set(i32 %call19, %struct.rtx_def* %insn) #7, !dbg !3274
  call void @llvm.dbg.value(metadata %struct.expr* %call25, metadata !3242, metadata !DIExpression()), !dbg !3269
  %tobool26 = icmp eq %struct.expr* %call25, null, !dbg !3275
  br i1 %tobool26, label %cleanup, label %if.end28, !dbg !3277

if.end28:                                         ; preds = %if.end24
  %expr = getelementptr inbounds %struct.expr, %struct.expr* %call25, i64 0, i32 0, !dbg !3278
  %5 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !3278
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3240, metadata !DIExpression()), !dbg !3269
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !3279
  %bf.load29 = load i32, i32* %6, align 8, !dbg !3279
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !3279
  %cmp31 = icmp eq i32 %bf.clear30, 23, !dbg !3279
  br i1 %cmp31, label %cond.end, label %cond.true, !dbg !3279

cond.true:                                        ; preds = %if.end28
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 2554, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !3279
  br label %cond.end, !dbg !3279

cond.end:                                         ; preds = %if.end28, %cond.true
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3280
  %rt_rtx35 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !3280
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !3280
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !3241, metadata !DIExpression()), !dbg !3269
  %call36 = tail call fastcc zeroext i8 @gcse_constant_p(%struct.rtx_def* %8) #7, !dbg !3281
  %tobool37 = icmp eq i8 %call36, 0, !dbg !3281
  br i1 %tobool37, label %if.else, label %if.then38, !dbg !3282

if.then38:                                        ; preds = %cond.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !3283
  %call40 = tail call fastcc zeroext i8 @constprop_register(%struct.rtx_def* %insn, %struct.rtx_def* %9, %struct.rtx_def* %8) #7, !dbg !3284
  %tobool41 = icmp eq i8 %call40, 0, !dbg !3284
  br i1 %tobool41, label %if.end84, label %if.then42, !dbg !3285

if.then42:                                        ; preds = %if.then38
  call void @llvm.dbg.value(metadata i32 1, metadata !3234, metadata !DIExpression()), !dbg !3243
  %10 = load i32, i32* @global_const_prop_count, align 4, !dbg !3286
  %inc = add nsw i32 %10, 1, !dbg !3286
  store i32 %inc, i32* @global_const_prop_count, align 4, !dbg !3286
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3287
  %cmp43 = icmp eq %struct._IO_FILE* %11, null, !dbg !3288
  br i1 %cmp43, label %if.end51, label %if.then44, !dbg !3289

if.then44:                                        ; preds = %if.then42
  %call45 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i32 %call19) #6, !dbg !3290
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3291
  %13 = load i32, i32* %rt_int, align 8, !dbg !3292
  %call49 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i32 %13) #6, !dbg !3293
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3294
  tail call void @print_rtl(%struct._IO_FILE* %14, %struct.rtx_def* %8) #6, !dbg !3295
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3296
  %call50 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3297
  br label %if.end51, !dbg !3298

if.end51:                                         ; preds = %if.then42, %if.then44
  %bf.load52 = load i32, i32* %0, align 8, !dbg !3299
  %bf.clear53 = and i32 %bf.load52, 134217728, !dbg !3299
  %tobool54 = icmp eq i32 %bf.clear53, 0, !dbg !3299
  br i1 %tobool54, label %if.end84, label %cleanup, !dbg !3301

if.else:                                          ; preds = %cond.end
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !3302
  %bf.load58 = load i32, i32* %16, align 8, !dbg !3302
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !3302
  %cmp60 = icmp eq i32 %bf.clear59, 37, !dbg !3302
  br i1 %cmp60, label %land.lhs.true, label %if.end84, !dbg !3304

land.lhs.true:                                    ; preds = %if.else
  %call61 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #7, !dbg !3305
  %cmp62 = icmp ugt i32 %call61, 52, !dbg !3306
  br i1 %cmp62, label %land.lhs.true63, label %if.end84, !dbg !3307

land.lhs.true63:                                  ; preds = %land.lhs.true
  %call64 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #7, !dbg !3308
  %cmp65 = icmp eq i32 %call64, %call19, !dbg !3309
  br i1 %cmp65, label %if.end84, label %if.then66, !dbg !3310

if.then66:                                        ; preds = %land.lhs.true63
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !3311
  %call68 = tail call fastcc i32 @try_replace_reg(%struct.rtx_def* %17, %struct.rtx_def* %8, %struct.rtx_def* %insn) #7, !dbg !3314
  %tobool69 = icmp eq i32 %call68, 0, !dbg !3314
  br i1 %tobool69, label %if.end84, label %if.then70, !dbg !3315

if.then70:                                        ; preds = %if.then66
  call void @llvm.dbg.value(metadata i32 1, metadata !3234, metadata !DIExpression()), !dbg !3243
  %18 = load i32, i32* @global_copy_prop_count, align 4, !dbg !3316
  %inc71 = add nsw i32 %18, 1, !dbg !3316
  store i32 %inc71, i32* @global_copy_prop_count, align 4, !dbg !3316
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3318
  %cmp72 = icmp eq %struct._IO_FILE* %19, null, !dbg !3320
  br i1 %cmp72, label %if.end84, label %if.then73, !dbg !3321

if.then73:                                        ; preds = %if.then70
  %20 = load i32, i32* %rt_int, align 8, !dbg !3322
  %call78 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.25, i64 0, i64 0), i32 %call19, i32 %20) #6, !dbg !3324
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3325
  %call79 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #7, !dbg !3326
  %call80 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i32 %call79) #6, !dbg !3327
  br label %if.end84, !dbg !3328

if.end84:                                         ; preds = %if.end51, %if.then38, %if.then70, %if.then66, %land.lhs.true63, %if.else, %land.lhs.true, %if.then73
  %changed.4 = phi i32 [ %changed.0, %if.then38 ], [ 1, %if.end51 ], [ %changed.0, %land.lhs.true63 ], [ %changed.0, %land.lhs.true ], [ %changed.0, %if.else ], [ %changed.0, %if.then66 ], [ 1, %if.then73 ], [ 1, %if.then70 ], !dbg !3329
  call void @llvm.dbg.value(metadata i32 %changed.4, metadata !3234, metadata !DIExpression()), !dbg !3243
  br label %cleanup, !dbg !3330

cleanup:                                          ; preds = %if.end51, %if.end24, %for.body, %if.end84
  %changed.5 = phi i32 [ %changed.4, %if.end84 ], [ %changed.0, %for.body ], [ %changed.0, %if.end24 ], [ 1, %if.end51 ], !dbg !3243
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end84 ], [ 4, %for.body ], [ 4, %if.end24 ], [ 1, %if.end51 ]
  call void @llvm.dbg.value(metadata i32 %changed.5, metadata !3234, metadata !DIExpression()), !dbg !3243
  switch i32 %cleanup.dest.slot.0, label %cleanup95.loopexit [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %incdec.ptr = getelementptr inbounds %struct.reg_use, %struct.reg_use* %reg_used.0, i64 1, !dbg !3331
  call void @llvm.dbg.value(metadata %struct.reg_use* %incdec.ptr, metadata !3233, metadata !DIExpression()), !dbg !3243
  %22 = load i32, i32* @reg_use_count, align 4, !dbg !3332
  %dec = add nsw i32 %22, -1, !dbg !3332
  store i32 %dec, i32* @reg_use_count, align 4, !dbg !3332
  br label %for.cond, !dbg !3333, !llvm.loop !3334

for.end:                                          ; preds = %for.cond
  %changed.0.lcssa = phi i32 [ %changed.0, %for.cond ], !dbg !3243
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !3234, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !3234, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !3234, metadata !DIExpression()), !dbg !3243
  %tobool88 = icmp eq i32 %changed.0.lcssa, 0, !dbg !3336
  br i1 %tobool88, label %if.end94, label %land.lhs.true89, !dbg !3338

land.lhs.true89:                                  ; preds = %for.end
  %bf.load90 = load i32, i32* %0, align 8, !dbg !3339
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !3339
  %cmp92 = icmp eq i32 %bf.clear91, 7, !dbg !3339
  br i1 %cmp92, label %cleanup95, label %if.end94, !dbg !3340

if.end94:                                         ; preds = %for.end, %land.lhs.true89
  br label %cleanup95, !dbg !3341

cleanup95.loopexit:                               ; preds = %cleanup
  br label %cleanup95, !dbg !3342

cleanup95:                                        ; preds = %cleanup95.loopexit, %land.lhs.true89, %lor.lhs.false8, %if.end94
  %retval.2 = phi i32 [ %changed.0.lcssa, %if.end94 ], [ 0, %lor.lhs.false8 ], [ 0, %land.lhs.true89 ], [ 1, %cleanup95.loopexit ], !dbg !3243
  ret i32 %retval.2, !dbg !3342
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_oprs_set(%struct.rtx_def* %insn) unnamed_addr #4 !dbg !3343 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3347, metadata !DIExpression()), !dbg !3356
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3357
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3357
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3357
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3357
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3348, metadata !DIExpression()), !dbg !3356
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3358
  %bf.load = load i32, i32* %2, align 8, !dbg !3358
  %bf.clear = and i32 %bf.load, 65535, !dbg !3358
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !3359
  br i1 %cmp, label %if.then, label %if.else, !dbg !3360

if.then:                                          ; preds = %entry
  tail call fastcc void @mark_set(%struct.rtx_def* %1, %struct.rtx_def* %insn) #7, !dbg !3361
  br label %if.end43, !dbg !3361

if.else:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 15, !dbg !3362
  br i1 %cmp3, label %for.cond.preheader, label %if.else30, !dbg !3363

for.cond.preheader:                               ; preds = %if.else
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3364
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtvec_def**, !dbg !3364
  br label %for.cond, !dbg !3365

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3366
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3349, metadata !DIExpression()), !dbg !3356
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3367
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 0, !dbg !3367
  %4 = load i32, i32* %num_elem, align 8, !dbg !3367
  %5 = sext i32 %4 to i64, !dbg !3368
  %cmp8 = icmp slt i64 %indvars.iv, %5, !dbg !3368
  br i1 %cmp8, label %for.body, label %if.end43.loopexit, !dbg !3365

for.body:                                         ; preds = %for.cond
  %arrayidx13 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv, !dbg !3369
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx13, align 8, !dbg !3369
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !3350, metadata !DIExpression()), !dbg !3370
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !3371
  %bf.load14 = load i32, i32* %7, align 8, !dbg !3371
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !3371
  %cmp16 = icmp eq i32 %bf.clear15, 23, !dbg !3373
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !3374

if.then17:                                        ; preds = %for.body
  tail call fastcc void @mark_set(%struct.rtx_def* %6, %struct.rtx_def* %insn) #7, !dbg !3375
  br label %for.inc, !dbg !3375

if.else18:                                        ; preds = %for.body
  %cmp21 = icmp eq i32 %bf.clear15, 25, !dbg !3376
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !3378

if.then22:                                        ; preds = %if.else18
  tail call fastcc void @mark_clobber(%struct.rtx_def* %6, %struct.rtx_def* %insn) #7, !dbg !3379
  br label %for.inc, !dbg !3379

if.else23:                                        ; preds = %if.else18
  %cmp26 = icmp eq i32 %bf.clear15, 26, !dbg !3380
  br i1 %cmp26, label %if.then27, label %for.inc, !dbg !3382

if.then27:                                        ; preds = %if.else23
  tail call fastcc void @mark_call(%struct.rtx_def* %insn) #7, !dbg !3383
  br label %for.inc, !dbg !3383

for.inc:                                          ; preds = %if.then17, %if.else23, %if.then27, %if.then22
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3384
  call void @llvm.dbg.value(metadata i32 undef, metadata !3349, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3356
  br label %for.cond, !dbg !3385, !llvm.loop !3386

if.else30:                                        ; preds = %if.else
  %cmp33 = icmp eq i32 %bf.clear, 25, !dbg !3388
  br i1 %cmp33, label %if.then34, label %if.else35, !dbg !3390

if.then34:                                        ; preds = %if.else30
  tail call fastcc void @mark_clobber(%struct.rtx_def* %1, %struct.rtx_def* %insn) #7, !dbg !3391
  br label %if.end43, !dbg !3391

if.else35:                                        ; preds = %if.else30
  %cmp38 = icmp eq i32 %bf.clear, 26, !dbg !3392
  br i1 %cmp38, label %if.then39, label %if.end43, !dbg !3394

if.then39:                                        ; preds = %if.else35
  tail call fastcc void @mark_call(%struct.rtx_def* %insn) #7, !dbg !3395
  br label %if.end43, !dbg !3395

if.end43.loopexit:                                ; preds = %for.cond
  br label %if.end43, !dbg !3396

if.end43:                                         ; preds = %if.end43.loopexit, %if.else35, %if.then39, %if.then34, %if.then
  ret void, !dbg !3396
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @bypass_conditional_jumps() unnamed_addr #4 !dbg !3397 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3404
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3404
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3404
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3404
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3404
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 6, !dbg !3406
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3406
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !3407
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3407
  %cmp = icmp eq %struct.basic_block_def* %3, %4, !dbg !3408
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3409

if.end:                                           ; preds = %entry
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !3410
  %5 = load i32, i32* %x_last_basic_block, align 8, !dbg !3410
  store i32 %5, i32* @bypass_last_basic_block, align 4, !dbg !3411
  %call = tail call zeroext i8 @mark_dfs_back_edges() #6, !dbg !3412
  call void @llvm.dbg.value(metadata i32 0, metadata !3400, metadata !DIExpression()), !dbg !3413
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3414
  %cfg6 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !3414
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6, align 8, !dbg !3414
  %x_entry_block_ptr7 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 0, !dbg !3414
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr7, align 8, !dbg !3414
  %next_bb8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 6, !dbg !3414
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb8, align 8, !dbg !3414
  br label %for.cond, !dbg !3414

for.cond:                                         ; preds = %for.inc96, %if.end
  %10 = phi %struct.control_flow_graph* [ %7, %if.end ], [ %.pre3, %for.inc96 ], !dbg !3416
  %changed.0 = phi i32 [ 0, %if.end ], [ %changed.3, %for.inc96 ], !dbg !3418
  %.pn = phi %struct.basic_block_def* [ %9, %if.end ], [ %bb.0, %for.inc96 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3419
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3399, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !3400, metadata !DIExpression()), !dbg !3413
  %x_exit_block_ptr12 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !3416
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr12, align 8, !dbg !3416
  %cmp13 = icmp eq %struct.basic_block_def* %bb.0, %11, !dbg !3416
  br i1 %cmp13, label %for.end98, label %for.body, !dbg !3414

for.body:                                         ; preds = %for.cond
  %call14 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb.0) #7, !dbg !3420
  %tobool = icmp eq i8 %call14, 0, !dbg !3420
  br i1 %tobool, label %if.then15, label %for.inc96, !dbg !3423

if.then15:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3401, metadata !DIExpression()), !dbg !3413
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !3424
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3424
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3424
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 0, !dbg !3424
  br label %for.cond16, !dbg !3424

for.cond16:                                       ; preds = %for.inc, %if.then15
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.then15 ], [ %rt_rtx94, %for.inc ]
  %setcc.0 = phi %struct.rtx_def* [ null, %if.then15 ], [ %setcc.2, %for.inc ], !dbg !3427
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc.0, metadata !3401, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3402, metadata !DIExpression()), !dbg !3413
  %tobool17 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !3429
  br i1 %tobool17, label %for.inc96.loopexit.loopexit, label %land.rhs, !dbg !3429

land.rhs:                                         ; preds = %for.cond16
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !3429
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3429
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3429
  %rt_rtx = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !3429
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3429
  %cmp20 = icmp eq %struct.rtx_def* %insn.0, %15, !dbg !3429
  br i1 %cmp20, label %for.inc96.loopexit.loopexit, label %for.body21, !dbg !3424

for.body21:                                       ; preds = %land.rhs
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3431
  %bf.load = load i32, i32* %16, align 8, !dbg !3431
  %bf.clear = and i32 %bf.load, 65535, !dbg !3431
  %cmp22 = icmp eq i32 %bf.clear, 7, !dbg !3431
  br i1 %cmp22, label %for.inc, label %if.else, !dbg !3433

if.else:                                          ; preds = %for.body21
  %cmp26 = icmp eq i32 %bf.clear, 8, !dbg !3434
  br i1 %cmp26, label %if.then27, label %if.else55, !dbg !3436

if.then27:                                        ; preds = %if.else
  %tobool28 = icmp eq %struct.rtx_def* %setcc.0, null, !dbg !3437
  br i1 %tobool28, label %if.end30, label %for.inc96.loopexit.loopexit, !dbg !3440

if.end30:                                         ; preds = %if.then27
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !3441
  %17 = getelementptr inbounds %union.u, %union.u* %u31, i64 1, i32 0, i32 0, i64 0, !dbg !3441
  %18 = bitcast %union.rtunion_def* %17 to i32**, !dbg !3441
  %19 = load i32*, i32** %18, align 8, !dbg !3441
  %bf.load35 = load i32, i32* %19, align 8, !dbg !3441
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !3441
  %cmp37 = icmp eq i32 %bf.clear36, 23, !dbg !3443
  br i1 %cmp37, label %if.end39, label %for.inc96.loopexit.loopexit, !dbg !3444

if.end39:                                         ; preds = %if.end30
  %arrayidx46 = getelementptr inbounds i32, i32* %19, i64 2, !dbg !3445
  %20 = bitcast i32* %arrayidx46 to i32**, !dbg !3445
  %21 = load i32*, i32** %20, align 8, !dbg !3445
  %bf.load48 = load i32, i32* %21, align 8, !dbg !3446
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !3446
  %cmp50 = icmp eq i32 %bf.clear49, 37, !dbg !3446
  br i1 %cmp50, label %for.inc, label %for.inc96.loopexit.loopexit, !dbg !3448

if.else55:                                        ; preds = %if.else
  %cmp58 = icmp eq i32 %bf.clear, 9, !dbg !3449
  br i1 %cmp58, label %if.then59, label %if.else70, !dbg !3451

if.then59:                                        ; preds = %if.else55
  %setcc.0.lcssa17 = phi %struct.rtx_def* [ %setcc.0, %if.else55 ], !dbg !3427
  %insn.0.lcssa13 = phi %struct.rtx_def* [ %insn.0, %if.else55 ], !dbg !3428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc.0.lcssa17, metadata !3401, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc.0.lcssa17, metadata !3401, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc.0.lcssa17, metadata !3401, metadata !DIExpression()), !dbg !3413
  %call60 = tail call i32 @any_condjump_p(%struct.rtx_def* nonnull %insn.0.lcssa13) #6, !dbg !3452
  %tobool61 = icmp eq i32 %call60, 0, !dbg !3452
  br i1 %tobool61, label %lor.lhs.false62, label %land.lhs.true, !dbg !3455

lor.lhs.false62:                                  ; preds = %if.then59
  %call63 = tail call i32 @computed_jump_p(%struct.rtx_def* nonnull %insn.0.lcssa13) #6, !dbg !3456
  %tobool64 = icmp eq i32 %call63, 0, !dbg !3456
  br i1 %tobool64, label %for.inc96, label %land.lhs.true, !dbg !3457

land.lhs.true:                                    ; preds = %lor.lhs.false62, %if.then59
  %call65 = tail call i32 @onlyjump_p(%struct.rtx_def* nonnull %insn.0.lcssa13) #6, !dbg !3458
  %tobool66 = icmp eq i32 %call65, 0, !dbg !3458
  br i1 %tobool66, label %for.inc96, label %if.then67, !dbg !3459

if.then67:                                        ; preds = %land.lhs.true
  %call68 = tail call fastcc i32 @bypass_block(%struct.basic_block_def* %bb.0, %struct.rtx_def* %setcc.0.lcssa17, %struct.rtx_def* nonnull %insn.0.lcssa13) #7, !dbg !3460
  %or = or i32 %changed.0, %call68, !dbg !3461
  call void @llvm.dbg.value(metadata i32 %or, metadata !3400, metadata !DIExpression()), !dbg !3413
  br label %for.inc96, !dbg !3462

if.else70:                                        ; preds = %if.else55
  br i1 false, label %if.else70.for.inc96.loopexit_crit_edge, label %lor.lhs.false74, !dbg !3463

if.else70.for.inc96.loopexit_crit_edge:           ; preds = %if.else70
  br label %for.inc96.loopexit, !dbg !3463

lor.lhs.false74:                                  ; preds = %if.else70
  br i1 false, label %lor.lhs.false74.for.inc96.loopexit_crit_edge, label %lor.lhs.false78, !dbg !3463

lor.lhs.false74.for.inc96.loopexit_crit_edge:     ; preds = %lor.lhs.false74
  br label %for.inc96.loopexit, !dbg !3463

lor.lhs.false78:                                  ; preds = %lor.lhs.false74
  br i1 false, label %lor.lhs.false78.for.inc96.loopexit_crit_edge, label %lor.lhs.false82, !dbg !3463

lor.lhs.false78.for.inc96.loopexit_crit_edge:     ; preds = %lor.lhs.false78
  br label %for.inc96.loopexit, !dbg !3463

lor.lhs.false82:                                  ; preds = %lor.lhs.false78
  %cmp85 = icmp eq i32 %bf.clear, 10, !dbg !3463
  br i1 %cmp85, label %for.inc96.loopexit.loopexit, label %for.inc, !dbg !3465

for.inc:                                          ; preds = %lor.lhs.false82, %if.end39, %for.body21
  %setcc.2 = phi %struct.rtx_def* [ %setcc.0, %for.body21 ], [ %insn.0, %if.end39 ], [ %setcc.0, %lor.lhs.false82 ], !dbg !3466
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc.2, metadata !3401, metadata !DIExpression()), !dbg !3413
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3429
  %rt_rtx94 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !3429
  br label %for.cond16, !dbg !3429, !llvm.loop !3467

for.inc96.loopexit.loopexit:                      ; preds = %if.end30, %if.then27, %land.rhs, %for.cond16, %lor.lhs.false82, %if.end39
  br label %for.inc96.loopexit, !dbg !3416

for.inc96.loopexit:                               ; preds = %for.inc96.loopexit.loopexit, %lor.lhs.false78.for.inc96.loopexit_crit_edge, %lor.lhs.false74.for.inc96.loopexit_crit_edge, %if.else70.for.inc96.loopexit_crit_edge
  br label %for.inc96, !dbg !3416

for.inc96:                                        ; preds = %for.inc96.loopexit, %land.lhs.true, %lor.lhs.false62, %for.body, %if.then67
  %changed.3 = phi i32 [ %changed.0, %for.body ], [ %or, %if.then67 ], [ %changed.0, %land.lhs.true ], [ %changed.0, %lor.lhs.false62 ], [ %changed.0, %for.inc96.loopexit ], !dbg !3418
  call void @llvm.dbg.value(metadata i32 %changed.3, metadata !3400, metadata !DIExpression()), !dbg !3413
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3416
  %cfg11.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3469
  %.pre3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11.phi.trans.insert, align 8, !dbg !3416
  br label %for.cond, !dbg !3416, !llvm.loop !3470

for.end98:                                        ; preds = %for.cond
  %changed.0.lcssa = phi i32 [ %changed.0, %for.cond ], !dbg !3418
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !3400, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !3400, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !3400, metadata !DIExpression()), !dbg !3413
  %tobool99 = icmp eq i32 %changed.0.lcssa, 0, !dbg !3472
  br i1 %tobool99, label %cleanup, label %if.then100, !dbg !3474

if.then100:                                       ; preds = %for.end98
  tail call void @commit_edge_insertions() #6, !dbg !3475
  br label %cleanup, !dbg !3475

cleanup:                                          ; preds = %for.end98, %if.then100, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %changed.0.lcssa, %if.then100 ], [ 0, %for.end98 ], !dbg !3413
  ret i32 %retval.0, !dbg !3476
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_cprop_mem() unnamed_addr #4 !dbg !3477 {
entry:
  %0 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @cprop_pavloc to i8**), align 8, !dbg !3478
  tail call void @free(i8* %0) #6, !dbg !3478
  %1 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @cprop_absaltered to i8**), align 8, !dbg !3479
  tail call void @free(i8* %1) #6, !dbg !3479
  %2 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @cprop_avin to i8**), align 8, !dbg !3480
  tail call void @free(i8* %2) #6, !dbg !3480
  %3 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @cprop_avout to i8**), align 8, !dbg !3481
  tail call void @free(i8* %3) #6, !dbg !3481
  ret void, !dbg !3482
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_hash_table(%struct.hash_table_d* %table) unnamed_addr #4 !dbg !3483 {
entry:
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !3485, metadata !DIExpression()), !dbg !3486
  %0 = bitcast %struct.hash_table_d* %table to i8**, !dbg !3487
  %1 = load i8*, i8** %0, align 8, !dbg !3487
  tail call void @free(i8* %1) #6, !dbg !3488
  ret void, !dbg !3489
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_gcse_mem() unnamed_addr #4 !dbg !3490 {
entry:
  tail call fastcc void @free_modify_mem_tables() #7, !dbg !3491
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @modify_mem_list_set, align 8, !dbg !3492
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %0) #6, !dbg !3492
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @modify_mem_list_set, align 8, !dbg !3492
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_calls, align 8, !dbg !3493
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !3493
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @blocks_with_calls, align 8, !dbg !3493
  ret void, !dbg !3494
}

declare dso_local void @obstack_free(%struct.obstack*, i8*) local_unnamed_addr #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

declare dso_local i8* @current_function_name() local_unnamed_addr #1

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #1

declare dso_local i32 @max_reg_num() local_unnamed_addr #1

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i8* @gcalloc(i64 %nelem, i64 %elsize) unnamed_addr #4 !dbg !3495 {
entry:
  call void @llvm.dbg.value(metadata i64 %nelem, metadata !3497, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i64 8, metadata !3498, metadata !DIExpression()), !dbg !3499
  %0 = load i32, i32* @bytes_used, align 4, !dbg !3500
  %nelem.tr = trunc i64 %nelem to i32, !dbg !3500
  %1 = shl i32 %nelem.tr, 3, !dbg !3500
  %conv1 = add i32 %0, %1, !dbg !3500
  store i32 %conv1, i32* @bytes_used, align 4, !dbg !3500
  %call = tail call i8* @xcalloc(i64 %nelem, i64 8) #6, !dbg !3501
  ret i8* %call, !dbg !3502
}

declare dso_local void @cselib_init(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @note_uses(%struct.rtx_def**, void (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @local_cprop_find_used_regs(%struct.rtx_def** %xptr, i8* %data) #4 !dbg !3503 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %xptr, metadata !3507, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.value(metadata i8* %data, metadata !3508, metadata !DIExpression()), !dbg !3510
  %0 = load %struct.rtx_def*, %struct.rtx_def** %xptr, align 8, !dbg !3511
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3509, metadata !DIExpression()), !dbg !3510
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !3512
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3514

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !3515
  %bf.load = load i32, i32* %1, align 8, !dbg !3515
  %trunc = trunc i32 %bf.load to i16, !dbg !3516
  switch i16 %trunc, label %sw.epilog [
    i16 120, label %cleanup.cont
    i16 119, label %cleanup.cont
    i16 40, label %cleanup.cont
    i16 74, label %cleanup.cont
    i16 75, label %cleanup.cont
    i16 76, label %cleanup.cont
    i16 77, label %cleanup.cont
    i16 78, label %cleanup.cont
    i16 79, label %cleanup.cont
    i16 39, label %sw.bb2
  ], !dbg !3516

sw.bb2:                                           ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3517
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3517
  %3 = load i32*, i32** %2, align 8, !dbg !3517
  %bf.load3 = load i32, i32* %3, align 8, !dbg !3517
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !3517
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !3517
  %idxprom = zext i32 %bf.clear4 to i64, !dbg !3517
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3517
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !3517
  %cmp9 = icmp ugt i8 %4, 4, !dbg !3520
  br i1 %cmp9, label %cleanup.cont, label %sw.epilog, !dbg !3521

sw.epilog:                                        ; preds = %if.end, %sw.bb2
  tail call void @find_used_regs(%struct.rtx_def** %xptr, i8* %data) #7, !dbg !3522
  br label %cleanup.cont, !dbg !3523

cleanup.cont:                                     ; preds = %sw.epilog, %entry, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb2
  ret void, !dbg !3523
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @do_local_cprop(%struct.rtx_def* %x, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !3524 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3528, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3529, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3530, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3531, metadata !DIExpression()), !dbg !3541
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3542
  %bf.load = load i32, i32* %0, align 8, !dbg !3542
  %bf.clear = and i32 %bf.load, 65535, !dbg !3542
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !3542
  br i1 %cmp, label %land.lhs.true, label %if.end80, !dbg !3543

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !3544
  %cmp1 = icmp ugt i32 %call, 52, !dbg !3545
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !3546

lor.lhs.false:                                    ; preds = %land.lhs.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3547
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3547
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !3547
  %3 = load i32*, i32** %2, align 8, !dbg !3547
  %bf.load2 = load i32, i32* %3, align 8, !dbg !3547
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !3547
  %cmp4 = icmp eq i32 %bf.clear3, 24, !dbg !3548
  br i1 %cmp4, label %if.end80, label %land.lhs.true5, !dbg !3549

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !3549
  %call10 = tail call i32 @asm_noperands(%struct.rtx_def* %4) #6, !dbg !3550
  %cmp11 = icmp slt i32 %call10, 0, !dbg !3551
  br i1 %cmp11, label %if.then, label %if.end80, !dbg !3552

if.then:                                          ; preds = %land.lhs.true5, %land.lhs.true
  %bf.load12 = load i32, i32* %0, align 8, !dbg !3553
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !3553
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !3553
  %call14 = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %x, i32 %bf.clear13, i32 0) #6, !dbg !3554
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* %call14, metadata !3532, metadata !DIExpression()), !dbg !3555
  %tobool = icmp eq %struct.cselib_val_struct* %call14, null, !dbg !3556
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3558

if.end:                                           ; preds = %if.then
  %locs = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %call14, i64 0, i32 3, !dbg !3559
  br label %for.cond, !dbg !3560

for.cond:                                         ; preds = %for.inc, %if.end
  %newcnst.0 = phi %struct.rtx_def* [ null, %if.end ], [ %spec.select, %for.inc ], !dbg !3541
  %newreg.0 = phi %struct.rtx_def* [ null, %if.end ], [ %newreg.1, %for.inc ], !dbg !3561
  %l.0.in = phi %struct.elt_loc_list** [ %locs, %if.end ], [ %next, %for.inc ]
  %l.0 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l.0.in, align 8, !dbg !3562
  call void @llvm.dbg.value(metadata %struct.elt_loc_list* %l.0, metadata !3535, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newreg.0, metadata !3530, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newcnst.0, metadata !3531, metadata !DIExpression()), !dbg !3541
  %tobool16 = icmp eq %struct.elt_loc_list* %l.0, null, !dbg !3563
  br i1 %tobool16, label %for.end, label %for.body, !dbg !3563

for.body:                                         ; preds = %for.cond
  %loc = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.0, i64 0, i32 1, !dbg !3564
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !3564
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3536, metadata !DIExpression()), !dbg !3565
  %call17 = tail call fastcc zeroext i8 @gcse_constant_p(%struct.rtx_def* %5) #7, !dbg !3566
  %tobool18 = icmp eq i8 %call17, 0, !dbg !3566
  %spec.select = select i1 %tobool18, %struct.rtx_def* %newcnst.0, %struct.rtx_def* %5, !dbg !3568
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !3531, metadata !DIExpression()), !dbg !3541
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !3569
  %bf.load21 = load i32, i32* %6, align 8, !dbg !3569
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !3569
  %cmp23 = icmp eq i32 %bf.clear22, 37, !dbg !3569
  br i1 %cmp23, label %land.lhs.true24, label %for.inc, !dbg !3571

land.lhs.true24:                                  ; preds = %for.body
  %call25 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !3572
  %cmp26 = icmp ugt i32 %call25, 52, !dbg !3573
  br i1 %cmp26, label %land.lhs.true27, label %for.inc, !dbg !3574

land.lhs.true27:                                  ; preds = %land.lhs.true24
  %setting_insn = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.0, i64 0, i32 2, !dbg !3575
  %7 = load %struct.rtx_def*, %struct.rtx_def** %setting_insn, align 8, !dbg !3575
  %call28 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %7, i32 3, %struct.rtx_def* null) #6, !dbg !3576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !3540, metadata !DIExpression()), !dbg !3565
  %tobool29 = icmp eq %struct.rtx_def* %call28, null, !dbg !3577
  br i1 %tobool29, label %if.then38, label %lor.lhs.false30, !dbg !3578

lor.lhs.false30:                                  ; preds = %land.lhs.true27
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3579
  %8 = bitcast %union.rtunion_def* %arrayidx33 to i32**, !dbg !3579
  %9 = load i32*, i32** %8, align 8, !dbg !3579
  %bf.load35 = load i32, i32* %9, align 8, !dbg !3579
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !3579
  %cmp37 = icmp eq i32 %bf.clear36, 43, !dbg !3579
  br i1 %cmp37, label %for.inc, label %if.then38, !dbg !3580

if.then38:                                        ; preds = %land.lhs.true27, %lor.lhs.false30
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3530, metadata !DIExpression()), !dbg !3541
  br label %for.inc, !dbg !3581

for.inc:                                          ; preds = %for.body, %land.lhs.true24, %lor.lhs.false30, %if.then38
  %newreg.1 = phi %struct.rtx_def* [ %newreg.0, %lor.lhs.false30 ], [ %5, %if.then38 ], [ %newreg.0, %land.lhs.true24 ], [ %newreg.0, %for.body ], !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newreg.1, metadata !3530, metadata !DIExpression()), !dbg !3541
  %next = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.0, i64 0, i32 0, !dbg !3582
  br label %for.cond, !dbg !3583, !llvm.loop !3584

for.end:                                          ; preds = %for.cond
  %newcnst.0.lcssa = phi %struct.rtx_def* [ %newcnst.0, %for.cond ], !dbg !3541
  %newreg.0.lcssa = phi %struct.rtx_def* [ %newreg.0, %for.cond ], !dbg !3561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newcnst.0.lcssa, metadata !3531, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newreg.0.lcssa, metadata !3530, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newcnst.0.lcssa, metadata !3531, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newreg.0.lcssa, metadata !3530, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newcnst.0.lcssa, metadata !3531, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %newreg.0.lcssa, metadata !3530, metadata !DIExpression()), !dbg !3541
  %tobool40 = icmp eq %struct.rtx_def* %newcnst.0.lcssa, null, !dbg !3586
  br i1 %tobool40, label %if.else, label %land.lhs.true41, !dbg !3588

land.lhs.true41:                                  ; preds = %for.end
  %call42 = tail call fastcc zeroext i8 @constprop_register(%struct.rtx_def* %insn, %struct.rtx_def* %x, %struct.rtx_def* nonnull %newcnst.0.lcssa) #7, !dbg !3589
  %tobool43 = icmp eq i8 %call42, 0, !dbg !3589
  br i1 %tobool43, label %if.else, label %if.then44, !dbg !3590

if.then44:                                        ; preds = %land.lhs.true41
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3591
  %cmp45 = icmp eq %struct._IO_FILE* %10, null, !dbg !3594
  br i1 %cmp45, label %if.end55, label %if.then47, !dbg !3595

if.then47:                                        ; preds = %if.then44
  %call48 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !3596
  %call49 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i32 %call48) #6, !dbg !3598
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3599
  %arrayidx52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3600
  %rt_int = bitcast %union.rtunion_def* %arrayidx52 to i32*, !dbg !3600
  %12 = load i32, i32* %rt_int, align 8, !dbg !3600
  %call53 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i32 %12) #6, !dbg !3601
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3602
  tail call void @print_rtl(%struct._IO_FILE* %13, %struct.rtx_def* nonnull %newcnst.0.lcssa) #6, !dbg !3603
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3604
  %call54 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3605
  br label %if.end55, !dbg !3606

if.end55:                                         ; preds = %if.then44, %if.then47
  %15 = load i32, i32* @local_const_prop_count, align 4, !dbg !3607
  %inc = add nsw i32 %15, 1, !dbg !3607
  store i32 %inc, i32* @local_const_prop_count, align 4, !dbg !3607
  br label %cleanup, !dbg !3608

if.else:                                          ; preds = %land.lhs.true41, %for.end
  %tobool56 = icmp ne %struct.rtx_def* %newreg.0.lcssa, null, !dbg !3609
  %cmp58 = icmp ne %struct.rtx_def* %newreg.0.lcssa, %x, !dbg !3611
  %or.cond = and i1 %tobool56, %cmp58, !dbg !3612
  br i1 %or.cond, label %land.lhs.true60, label %cleanup, !dbg !3612

land.lhs.true60:                                  ; preds = %if.else
  %call61 = tail call fastcc i32 @try_replace_reg(%struct.rtx_def* %x, %struct.rtx_def* nonnull %newreg.0.lcssa, %struct.rtx_def* %insn) #7, !dbg !3613
  %tobool62 = icmp eq i32 %call61, 0, !dbg !3613
  br i1 %tobool62, label %cleanup, label %if.then63, !dbg !3614

if.then63:                                        ; preds = %land.lhs.true60
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3615
  %cmp64 = icmp eq %struct._IO_FILE* %16, null, !dbg !3618
  br i1 %cmp64, label %if.end75, label %if.then66, !dbg !3619

if.then66:                                        ; preds = %if.then63
  %call67 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !3620
  %arrayidx70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3622
  %rt_int71 = bitcast %union.rtunion_def* %arrayidx70 to i32*, !dbg !3622
  %17 = load i32, i32* %rt_int71, align 8, !dbg !3622
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13, i64 0, i64 0), i32 %call67, i32 %17) #6, !dbg !3623
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3624
  %call73 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %newreg.0.lcssa) #7, !dbg !3625
  %call74 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i32 %call73) #6, !dbg !3626
  br label %if.end75, !dbg !3627

if.end75:                                         ; preds = %if.then63, %if.then66
  %19 = load i32, i32* @local_copy_prop_count, align 4, !dbg !3628
  %inc76 = add nsw i32 %19, 1, !dbg !3628
  store i32 %inc76, i32* @local_copy_prop_count, align 4, !dbg !3628
  br label %cleanup, !dbg !3629

cleanup:                                          ; preds = %land.lhs.true60, %if.then, %if.else, %if.end75, %if.end55
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end55 ], [ false, %if.end75 ], [ false, %if.then ], [ true, %if.else ], [ true, %land.lhs.true60 ]
  %retval.0 = phi i8 [ 1, %if.end55 ], [ 1, %if.end75 ], [ 0, %if.then ], [ undef, %if.else ], [ undef, %land.lhs.true60 ]
  br i1 %cleanup.dest.slot.0, label %if.end80, label %cleanup81

if.end80:                                         ; preds = %lor.lhs.false, %cleanup, %land.lhs.true5, %entry
  br label %cleanup81, !dbg !3630

cleanup81:                                        ; preds = %cleanup, %if.end80
  %retval.1 = phi i8 [ %retval.0, %cleanup ], [ 0, %if.end80 ], !dbg !3541
  ret i8 %retval.1, !dbg !3631
}

declare dso_local void @cselib_process_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @cselib_clear_table() local_unnamed_addr #1

declare dso_local void @cselib_finish() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @find_used_regs(%struct.rtx_def** %xptr, i8* %data) #4 !dbg !3632 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %xptr, metadata !3634, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %data, metadata !3635, metadata !DIExpression()), !dbg !3642
  br label %repeat, !dbg !3643

repeat:                                           ; preds = %if.then23, %entry
  %x.0.in = phi %struct.rtx_def** [ %xptr, %entry ], [ %rt_rtx, %if.then23 ]
  %x.0 = load %struct.rtx_def*, %struct.rtx_def** %x.0.in, align 8, !dbg !3642
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !3640, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.label(metadata !3641), !dbg !3644
  %cmp = icmp eq %struct.rtx_def* %x.0, null, !dbg !3645
  br i1 %cmp, label %cleanup.cont.loopexit1, label %if.end, !dbg !3647

if.end:                                           ; preds = %repeat
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !3648
  %bf.load = load i32, i32* %0, align 8, !dbg !3648
  %bf.clear = and i32 %bf.load, 65535, !dbg !3648
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3638, metadata !DIExpression()), !dbg !3642
  %cmp3 = icmp eq i32 %bf.clear, 37, !dbg !3649
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !3651

if.then4:                                         ; preds = %if.end
  %1 = load i32, i32* @reg_use_count, align 4, !dbg !3652
  %cmp5 = icmp eq i32 %1, 8, !dbg !3655
  br i1 %cmp5, label %cleanup.cont.loopexit1, label %if.end7, !dbg !3656

if.end7:                                          ; preds = %if.then4
  %idxprom = sext i32 %1 to i64, !dbg !3657
  %reg_rtx = getelementptr inbounds [8 x %struct.reg_use], [8 x %struct.reg_use]* @reg_use_table, i64 0, i64 %idxprom, i32 0, !dbg !3658
  store %struct.rtx_def* %x.0, %struct.rtx_def** %reg_rtx, align 8, !dbg !3659
  %inc = add nsw i32 %1, 1, !dbg !3660
  store i32 %inc, i32* @reg_use_count, align 4, !dbg !3660
  br label %if.end8, !dbg !3661

if.end8:                                          ; preds = %if.end7, %if.end
  %idxprom9 = zext i32 %bf.clear to i64, !dbg !3662
  %arrayidx10 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom9, !dbg !3662
  %2 = load i8, i8* %arrayidx10, align 1, !dbg !3662
  call void @llvm.dbg.value(metadata i8 %2, metadata !3636, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3642
  %arrayidx12 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom9, !dbg !3664
  %3 = load i8*, i8** %arrayidx12, align 8, !dbg !3664
  call void @llvm.dbg.value(metadata i8* %3, metadata !3639, metadata !DIExpression()), !dbg !3642
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, !dbg !3665
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !3665
  %4 = zext i8 %2 to i64, !dbg !3672
  br label %for.cond, !dbg !3672

for.cond:                                         ; preds = %for.inc55, %if.end8
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc55 ], [ %4, %if.end8 ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !3673
  call void @llvm.dbg.value(metadata i32 undef, metadata !3636, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3642
  %cmp13 = icmp sgt i64 %indvars.iv2, 0, !dbg !3674
  br i1 %cmp13, label %for.body, label %cleanup.cont.loopexit, !dbg !3675

for.body:                                         ; preds = %for.cond
  %arrayidx16 = getelementptr inbounds i8, i8* %3, i64 %indvars.iv.next3, !dbg !3676
  %5 = load i8, i8* %arrayidx16, align 1, !dbg !3676
  %cmp18 = icmp eq i8 %5, 101, !dbg !3677
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !3678

if.then20:                                        ; preds = %for.body
  %6 = icmp eq i64 %indvars.iv.next3, 0
  br i1 %6, label %if.then23, label %if.end25, !dbg !3679

if.then23:                                        ; preds = %if.then20
  %rt_rtx = bitcast %union.u* %u38 to %struct.rtx_def**, !dbg !3681
  br label %repeat, !dbg !3684

if.end25:                                         ; preds = %if.then20
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 %indvars.iv.next3, !dbg !3685
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !3685
  tail call void @find_used_regs(%struct.rtx_def** nonnull %rt_rtx30, i8* %data) #7, !dbg !3686
  br label %for.inc55, !dbg !3687

if.else:                                          ; preds = %for.body
  %cmp34 = icmp eq i8 %5, 69, !dbg !3688
  br i1 %cmp34, label %for.cond37.preheader, label %for.inc55, !dbg !3689

for.cond37.preheader:                             ; preds = %if.else
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 %indvars.iv.next3, !dbg !3665
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtvec_def**, !dbg !3665
  br label %for.cond37, !dbg !3690

for.cond37:                                       ; preds = %for.cond37.preheader, %for.body44
  %indvars.iv = phi i64 [ 0, %for.cond37.preheader ], [ %indvars.iv.next, %for.body44 ], !dbg !3691
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3637, metadata !DIExpression()), !dbg !3642
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3692
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 0, !dbg !3692
  %8 = load i32, i32* %num_elem, align 8, !dbg !3692
  %9 = sext i32 %8 to i64, !dbg !3693
  %cmp42 = icmp slt i64 %indvars.iv, %9, !dbg !3693
  br i1 %cmp42, label %for.body44, label %for.inc55.loopexit, !dbg !3690

for.body44:                                       ; preds = %for.cond37
  %arrayidx51 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 1, i64 %indvars.iv, !dbg !3694
  tail call void @find_used_regs(%struct.rtx_def** nonnull %arrayidx51, i8* %data) #7, !dbg !3695
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3696
  call void @llvm.dbg.value(metadata i32 undef, metadata !3637, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3642
  br label %for.cond37, !dbg !3697, !llvm.loop !3698

for.inc55.loopexit:                               ; preds = %for.cond37
  br label %for.inc55, !dbg !3700

for.inc55:                                        ; preds = %for.inc55.loopexit, %if.end25, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !3636, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3642
  br label %for.cond, !dbg !3700, !llvm.loop !3701

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3703

cleanup.cont.loopexit1:                           ; preds = %if.then4, %repeat
  br label %cleanup.cont, !dbg !3703

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit1, %cleanup.cont.loopexit
  ret void, !dbg !3703
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !3704 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3708, metadata !DIExpression()), !dbg !3709
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3710
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3710
  %0 = load i32, i32* %rt_uint, align 8, !dbg !3710
  ret i32 %0, !dbg !3711
}

declare dso_local i32 @asm_noperands(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @gcse_constant_p(%struct.rtx_def* %x) unnamed_addr #4 !dbg !3712 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3716, metadata !DIExpression()), !dbg !3717
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3718
  %bf.load = load i32, i32* %0, align 8, !dbg !3718
  %bf.clear = and i32 %bf.load, 65535, !dbg !3718
  %cmp = icmp eq i32 %bf.clear, 48, !dbg !3720
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3721

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3722
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3722
  %2 = load i32*, i32** %1, align 8, !dbg !3722
  %bf.load1 = load i32, i32* %2, align 8, !dbg !3722
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3722
  %cmp3 = icmp eq i32 %bf.clear2, 30, !dbg !3722
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !3723

land.lhs.true4:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3724
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !3724
  %5 = load i32*, i32** %4, align 8, !dbg !3724
  %bf.load9 = load i32, i32* %5, align 8, !dbg !3724
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !3724
  %cmp11 = icmp eq i32 %bf.clear10, 30, !dbg !3724
  br i1 %cmp11, label %return, label %if.end, !dbg !3725

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %entry
  br i1 %cmp, label %land.lhs.true15, label %if.end143, !dbg !3726

land.lhs.true15:                                  ; preds = %if.end
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3728
  %6 = bitcast %union.rtunion_def* %arrayidx18 to i32**, !dbg !3728
  %7 = load i32*, i32** %6, align 8, !dbg !3728
  %bf.load20 = load i32, i32* %7, align 8, !dbg !3728
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !3728
  %cmp22 = icmp eq i32 %bf.clear21, 37, !dbg !3728
  %8 = bitcast i32* %7 to %struct.rtx_def*, !dbg !3729
  br i1 %cmp22, label %land.lhs.true23, label %if.end143, !dbg !3729

land.lhs.true23:                                  ; preds = %land.lhs.true15
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3730
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !3730
  %11 = load i32*, i32** %10, align 8, !dbg !3730
  %bf.load28 = load i32, i32* %11, align 8, !dbg !3730
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !3730
  %cmp30 = icmp eq i32 %bf.clear29, 37, !dbg !3730
  br i1 %cmp30, label %land.lhs.true31, label %if.end143, !dbg !3731

land.lhs.true31:                                  ; preds = %land.lhs.true23
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #7, !dbg !3732
  %rt_rtx39 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !3733
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !3733
  %call40 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %12) #7, !dbg !3733
  %cmp41 = icmp eq i32 %call, %call40, !dbg !3734
  br i1 %cmp41, label %land.lhs.true42, label %if.end143, !dbg !3735

land.lhs.true42:                                  ; preds = %land.lhs.true31
  %13 = load i32*, i32** %6, align 8, !dbg !3736
  %bf.load47 = load i32, i32* %13, align 8, !dbg !3736
  %bf.lshr = lshr i32 %bf.load47, 16, !dbg !3736
  %bf.clear48 = and i32 %bf.lshr, 255, !dbg !3736
  %idxprom = zext i32 %bf.clear48 to i64, !dbg !3736
  %arrayidx49 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !3736
  %14 = load i8, i8* %arrayidx49, align 1, !dbg !3736
  %cmp50 = icmp eq i8 %14, 8, !dbg !3736
  br i1 %cmp50, label %if.end143, label %lor.lhs.false, !dbg !3736

lor.lhs.false:                                    ; preds = %land.lhs.true42
  %cmp62 = icmp eq i8 %14, 9, !dbg !3736
  br i1 %cmp62, label %if.end143, label %lor.lhs.false64, !dbg !3736

lor.lhs.false64:                                  ; preds = %lor.lhs.false
  %cmp75 = icmp eq i8 %14, 11, !dbg !3736
  br i1 %cmp75, label %if.end143, label %lor.lhs.false77, !dbg !3736

lor.lhs.false77:                                  ; preds = %lor.lhs.false64
  %cmp88 = icmp eq i8 %14, 17, !dbg !3736
  br i1 %cmp88, label %if.end143, label %land.lhs.true90, !dbg !3737

land.lhs.true90:                                  ; preds = %lor.lhs.false77
  %15 = load i32*, i32** %10, align 8, !dbg !3738
  %bf.load95 = load i32, i32* %15, align 8, !dbg !3738
  %bf.lshr96 = lshr i32 %bf.load95, 16, !dbg !3738
  %bf.clear97 = and i32 %bf.lshr96, 255, !dbg !3738
  %idxprom98 = zext i32 %bf.clear97 to i64, !dbg !3738
  %arrayidx99 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom98, !dbg !3738
  %16 = load i8, i8* %arrayidx99, align 1, !dbg !3738
  %cmp101 = icmp eq i8 %16, 8, !dbg !3738
  br i1 %cmp101, label %if.end143, label %lor.lhs.false103, !dbg !3738

lor.lhs.false103:                                 ; preds = %land.lhs.true90
  %cmp114 = icmp eq i8 %16, 9, !dbg !3738
  br i1 %cmp114, label %if.end143, label %lor.lhs.false116, !dbg !3738

lor.lhs.false116:                                 ; preds = %lor.lhs.false103
  %cmp127 = icmp eq i8 %16, 11, !dbg !3738
  br i1 %cmp127, label %if.end143, label %lor.lhs.false129, !dbg !3738

lor.lhs.false129:                                 ; preds = %lor.lhs.false116
  %cmp140 = icmp eq i8 %16, 17, !dbg !3738
  br i1 %cmp140, label %if.end143, label %return, !dbg !3739

if.end143:                                        ; preds = %lor.lhs.false129, %lor.lhs.false116, %lor.lhs.false103, %land.lhs.true90, %lor.lhs.false77, %lor.lhs.false64, %lor.lhs.false, %land.lhs.true42, %land.lhs.true31, %land.lhs.true23, %land.lhs.true15, %if.end
  %bf.load144 = load i32, i32* %0, align 8, !dbg !3740
  %bf.clear145 = and i32 %bf.load144, 65535, !dbg !3740
  %idxprom146 = zext i32 %bf.clear145 to i64, !dbg !3740
  %arrayidx147 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom146, !dbg !3740
  %17 = load i32, i32* %arrayidx147, align 4, !dbg !3740
  %cmp148 = icmp eq i32 %17, 9, !dbg !3740
  br i1 %cmp148, label %land.rhs, label %land.end, !dbg !3741

land.rhs:                                         ; preds = %if.end143
  %cmp152 = icmp eq i32 %bf.clear145, 35, !dbg !3742
  br i1 %cmp152, label %lor.rhs, label %land.end, !dbg !3743

lor.rhs:                                          ; preds = %land.rhs
  %call154 = tail call zeroext i8 @shared_const_p(%struct.rtx_def* %x) #6, !dbg !3744
  %tobool = icmp ne i8 %call154, 0, !dbg !3743
  %phitmp = zext i1 %tobool to i8, !dbg !3743
  br label %land.end, !dbg !3743

land.end:                                         ; preds = %land.rhs, %lor.rhs, %if.end143
  %18 = phi i8 [ 0, %if.end143 ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !3745

return:                                           ; preds = %lor.lhs.false129, %land.lhs.true4, %land.end
  %retval.0 = phi i8 [ %18, %land.end ], [ 1, %land.lhs.true4 ], [ 1, %lor.lhs.false129 ], !dbg !3717
  ret i8 %retval.0, !dbg !3746
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @constprop_register(%struct.rtx_def* %insn, %struct.rtx_def* %from, %struct.rtx_def* %to) unnamed_addr #4 !dbg !3747 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3751, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !3752, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !3753, metadata !DIExpression()), !dbg !3758
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3759
  %bf.load = load i32, i32* %0, align 8, !dbg !3759
  %bf.clear = and i32 %bf.load, 65535, !dbg !3759
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3759
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !3759

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3759
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !3759

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3759
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !3759

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3759
  br i1 %cmp11, label %cond.true, label %cond.end25, !dbg !3759

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3759
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3759
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !3759
  %3 = load i32*, i32** %2, align 8, !dbg !3759
  %bf.load12 = load i32, i32* %3, align 8, !dbg !3759
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3759
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !3759
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !3759
  br i1 %cmp14, label %cond.end25, label %cond.false, !dbg !3759

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %4) #6, !dbg !3759
  br label %cond.end25, !dbg !3759

cond.end25:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond26 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !3759
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond26, metadata !3754, metadata !DIExpression()), !dbg !3758
  %cmp27 = icmp eq %struct.rtx_def* %cond26, null, !dbg !3760
  br i1 %cmp27, label %if.end68, label %land.lhs.true, !dbg !3761

land.lhs.true:                                    ; preds = %cond.end25
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3762
  %rt_rtx31 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !3762
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !3762
  %tobool = icmp eq %struct.rtx_def* %6, null, !dbg !3762
  br i1 %tobool, label %if.end68, label %land.lhs.true32, !dbg !3763

land.lhs.true32:                                  ; preds = %land.lhs.true
  %call37 = tail call i32 @any_condjump_p(%struct.rtx_def* nonnull %6) #6, !dbg !3764
  %tobool38 = icmp eq i32 %call37, 0, !dbg !3764
  br i1 %tobool38, label %if.end68, label %land.lhs.true39, !dbg !3765

land.lhs.true39:                                  ; preds = %land.lhs.true32
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !3766
  %call44 = tail call i32 @onlyjump_p(%struct.rtx_def* %7) #6, !dbg !3767
  %tobool45 = icmp eq i32 %call44, 0, !dbg !3767
  br i1 %tobool45, label %if.end68, label %if.then, !dbg !3768

if.then:                                          ; preds = %land.lhs.true39
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3769
  %8 = bitcast %union.rtunion_def* %arrayidx48 to i32**, !dbg !3769
  %9 = load i32*, i32** %8, align 8, !dbg !3769
  %bf.load50 = load i32, i32* %9, align 8, !dbg !3770
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !3770
  %cmp52 = icmp eq i32 %bf.clear51, 37, !dbg !3770
  br i1 %cmp52, label %land.lhs.true57, label %if.end, !dbg !3772

land.lhs.true57:                                  ; preds = %if.then
  %arrayidx60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !3773
  %rt_bb = bitcast %struct.object_block** %arrayidx60 to %struct.basic_block_def**, !dbg !3773
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3773
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !3774
  %call65 = tail call fastcc i32 @cprop_jump(%struct.basic_block_def* %10, %struct.rtx_def* %insn, %struct.rtx_def* %11, %struct.rtx_def* %from, %struct.rtx_def* %to) #7, !dbg !3775
  %tobool66 = icmp eq i32 %call65, 0, !dbg !3775
  br i1 %tobool66, label %if.end, label %cleanup, !dbg !3776

if.end:                                           ; preds = %land.lhs.true57, %if.then
  br label %cleanup, !dbg !3777

cleanup:                                          ; preds = %land.lhs.true57, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %land.lhs.true57 ]
  br i1 %cleanup.dest.slot.0, label %if.end68, label %cleanup89

if.end68:                                         ; preds = %land.lhs.true39, %land.lhs.true32, %land.lhs.true, %cond.end25, %cleanup
  %bf.load69 = load i32, i32* %0, align 8, !dbg !3778
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !3778
  %cmp71 = icmp eq i32 %bf.clear70, 8, !dbg !3778
  br i1 %cmp71, label %land.lhs.true72, label %if.else, !dbg !3780

land.lhs.true72:                                  ; preds = %if.end68
  %call73 = tail call fastcc i32 @try_replace_reg(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn) #7, !dbg !3781
  %tobool74 = icmp eq i32 %call73, 0, !dbg !3781
  br i1 %tobool74, label %if.else, label %cleanup89, !dbg !3782

if.else:                                          ; preds = %land.lhs.true72, %if.end68
  %call76 = tail call i32 @any_condjump_p(%struct.rtx_def* %insn) #6, !dbg !3783
  %tobool77 = icmp eq i32 %call76, 0, !dbg !3783
  br i1 %tobool77, label %cleanup89, label %land.lhs.true78, !dbg !3785

land.lhs.true78:                                  ; preds = %if.else
  %call79 = tail call i32 @onlyjump_p(%struct.rtx_def* %insn) #6, !dbg !3786
  %tobool80 = icmp eq i32 %call79, 0, !dbg !3786
  br i1 %tobool80, label %cleanup89, label %if.then81, !dbg !3787

if.then81:                                        ; preds = %land.lhs.true78
  %arrayidx84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !3788
  %rt_bb85 = bitcast %struct.object_block** %arrayidx84 to %struct.basic_block_def**, !dbg !3788
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb85, align 8, !dbg !3788
  %call86 = tail call fastcc i32 @cprop_jump(%struct.basic_block_def* %12, %struct.rtx_def* null, %struct.rtx_def* %insn, %struct.rtx_def* %from, %struct.rtx_def* %to) #7, !dbg !3789
  %conv = trunc i32 %call86 to i8, !dbg !3789
  br label %cleanup89, !dbg !3790

cleanup89:                                        ; preds = %land.lhs.true72, %land.lhs.true78, %if.else, %cleanup, %if.then81
  %retval.1 = phi i8 [ 1, %cleanup ], [ %conv, %if.then81 ], [ 1, %land.lhs.true72 ], [ 0, %if.else ], [ 0, %land.lhs.true78 ], !dbg !3758
  ret i8 %retval.1, !dbg !3791
}

declare dso_local void @print_rtl(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @try_replace_reg(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !3792 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !3796, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !3797, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3798, metadata !DIExpression()), !dbg !3803
  %call = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) #6, !dbg !3804
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3799, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3800, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i32 0, metadata !3801, metadata !DIExpression()), !dbg !3803
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3805
  %bf.load = load i32, i32* %0, align 8, !dbg !3805
  %bf.clear = and i32 %bf.load, 65535, !dbg !3805
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3805
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !3805

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3805
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !3805

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3805
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !3805

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3805
  br i1 %cmp11, label %cond.true, label %cond.end26, !dbg !3805

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3805
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3805
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !3805
  %3 = load i32*, i32** %2, align 8, !dbg !3805
  %bf.load12 = load i32, i32* %3, align 8, !dbg !3805
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3805
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !3805
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !3805
  br i1 %cmp14, label %cond.end26, label %cond.false, !dbg !3805

cond.false:                                       ; preds = %cond.true
  %call24 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %4) #6, !dbg !3805
  br label %cond.end26, !dbg !3805

cond.end26:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond27 = phi %struct.rtx_def* [ %call24, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !3805
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond27, metadata !3802, metadata !DIExpression()), !dbg !3803
  %call28 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %to) #6, !dbg !3806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !3797, metadata !DIExpression()), !dbg !3803
  tail call void @validate_replace_src_group(%struct.rtx_def* %from, %struct.rtx_def* %call28, %struct.rtx_def* %insn) #6, !dbg !3807
  %call29 = tail call i32 @num_changes_pending() #6, !dbg !3808
  %tobool = icmp eq i32 %call29, 0, !dbg !3808
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3810

land.lhs.true:                                    ; preds = %cond.end26
  %call30 = tail call i32 @apply_change_group() #6, !dbg !3811
  %tobool31 = icmp ne i32 %call30, 0, !dbg !3811
  %spec.select = zext i1 %tobool31 to i32, !dbg !3812
  br label %if.end, !dbg !3812

if.end:                                           ; preds = %cond.end26, %land.lhs.true
  %success.0 = phi i32 [ 0, %cond.end26 ], [ %spec.select, %land.lhs.true ], !dbg !3803
  call void @llvm.dbg.value(metadata i32 %success.0, metadata !3801, metadata !DIExpression()), !dbg !3803
  %tobool32 = icmp ne i32 %success.0, 0, !dbg !3813
  %tobool34 = icmp ne %struct.rtx_def* %cond27, null, !dbg !3815
  %or.cond = and i1 %tobool32, %tobool34, !dbg !3816
  br i1 %or.cond, label %land.lhs.true35, label %if.end54, !dbg !3816

land.lhs.true35:                                  ; preds = %if.end
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 0, !dbg !3817
  %bf.load36 = load i32, i32* %5, align 8, !dbg !3817
  %bf.clear37 = and i32 %bf.load36, 65535, !dbg !3817
  %idxprom = zext i32 %bf.clear37 to i64, !dbg !3817
  %arrayidx38 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3817
  %6 = load i32, i32* %arrayidx38, align 4, !dbg !3817
  %cmp39 = icmp eq i32 %6, 9, !dbg !3817
  br i1 %cmp39, label %if.then40, label %if.end54, !dbg !3818

if.then40:                                        ; preds = %land.lhs.true35
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond27, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3819
  %rt_rtx44 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !3819
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !3819
  %call45 = tail call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %8) #6, !dbg !3821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !3800, metadata !DIExpression()), !dbg !3803
  %tobool46 = icmp eq %struct.rtx_def* %call45, null, !dbg !3822
  br i1 %tobool46, label %if.end54, label %if.then47, !dbg !3824

if.then47:                                        ; preds = %if.then40
  %call52 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx44, %struct.rtx_def* nonnull %call45, i8 zeroext 0) #6, !dbg !3825
  br label %if.end54, !dbg !3825

if.end54:                                         ; preds = %if.then40, %if.then47, %land.lhs.true35, %if.end
  %cmp55 = icmp eq %struct.rtx_def* %call, null, !dbg !3826
  br i1 %cmp55, label %if.end67, label %land.lhs.true56, !dbg !3828

land.lhs.true56:                                  ; preds = %if.end54
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !3829
  %bf.load57 = load i32, i32* %9, align 8, !dbg !3829
  %bf.clear58 = and i32 %bf.load57, 16711680, !dbg !3829
  %cmp59 = icmp eq i32 %bf.clear58, 262144, !dbg !3830
  br i1 %cmp59, label %if.then60, label %if.end67, !dbg !3831

if.then60:                                        ; preds = %land.lhs.true56
  %arrayidx63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3832
  %rt_rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**, !dbg !3832
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !3832
  %call65 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %10, %struct.rtx_def* %from, %struct.rtx_def* %call28) #6, !dbg !3833
  %call66 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %insn, i32 4, %struct.rtx_def* %call65) #6, !dbg !3834
  br label %if.end67, !dbg !3834

if.end67:                                         ; preds = %if.end54, %if.then60, %land.lhs.true56
  %tobool68 = icmp eq i32 %success.0, 0, !dbg !3835
  %or.cond1 = and i1 %tobool68, %tobool34, !dbg !3837
  br i1 %or.cond1, label %land.lhs.true71, label %if.end128, !dbg !3837

land.lhs.true71:                                  ; preds = %if.end67
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond27, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3838
  %rt_rtx75 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !3838
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !3838
  %call76 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %from, %struct.rtx_def* %12) #6, !dbg !3839
  %tobool77 = icmp eq i32 %call76, 0, !dbg !3839
  br i1 %tobool77, label %if.end128, label %if.then78, !dbg !3840

if.then78:                                        ; preds = %land.lhs.true71
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !3841
  %call83 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %13, %struct.rtx_def* %from, %struct.rtx_def* %call28) #6, !dbg !3843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call83, metadata !3800, metadata !DIExpression()), !dbg !3803
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !3844
  %call88 = tail call i32 @rtx_equal_p(%struct.rtx_def* %call83, %struct.rtx_def* %14) #6, !dbg !3846
  %tobool89 = icmp eq i32 %call88, 0, !dbg !3846
  br i1 %tobool89, label %land.lhs.true90, label %if.end98, !dbg !3847

land.lhs.true90:                                  ; preds = %if.then78
  %call95 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx75, %struct.rtx_def* %call83, i8 zeroext 0) #6, !dbg !3848
  %tobool96 = icmp ne i8 %call95, 0, !dbg !3848
  %spec.select2 = zext i1 %tobool96 to i32, !dbg !3849
  br label %if.end98, !dbg !3849

if.end98:                                         ; preds = %if.then78, %land.lhs.true90
  %success.1 = phi i32 [ 0, %if.then78 ], [ %spec.select2, %land.lhs.true90 ], !dbg !3803
  call void @llvm.dbg.value(metadata i32 %success.1, metadata !3801, metadata !DIExpression()), !dbg !3803
  %tobool99 = icmp eq i32 %success.1, 0, !dbg !3850
  %or.cond3 = and i1 %tobool99, %cmp55, !dbg !3852
  br i1 %or.cond3, label %land.lhs.true106, label %if.end128, !dbg !3852

land.lhs.true106:                                 ; preds = %if.end98
  %arrayidx109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond27, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3853
  %15 = bitcast %union.rtunion_def* %arrayidx109 to i32**, !dbg !3853
  %16 = load i32*, i32** %15, align 8, !dbg !3853
  %bf.load111 = load i32, i32* %16, align 8, !dbg !3853
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !3853
  %cmp113 = icmp eq i32 %bf.clear112, 120, !dbg !3854
  br i1 %cmp113, label %if.end128, label %land.lhs.true115, !dbg !3855

land.lhs.true115:                                 ; preds = %land.lhs.true106
  %cmp122 = icmp eq i32 %bf.clear112, 40, !dbg !3856
  br i1 %cmp122, label %if.end128, label %if.then124, !dbg !3857

if.then124:                                       ; preds = %land.lhs.true115
  %call125 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call83) #6, !dbg !3858
  %call126 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %insn, i32 4, %struct.rtx_def* %call125) #6, !dbg !3859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call126, metadata !3799, metadata !DIExpression()), !dbg !3803
  br label %if.end128, !dbg !3860

if.end128:                                        ; preds = %land.lhs.true115, %land.lhs.true106, %land.lhs.true71, %if.then124, %if.end98, %if.end67
  %note.1 = phi %struct.rtx_def* [ %call, %if.end67 ], [ %call, %land.lhs.true71 ], [ %call, %if.end98 ], [ %call126, %if.then124 ], [ null, %land.lhs.true115 ], [ null, %land.lhs.true106 ], !dbg !3861
  %success.2 = phi i32 [ %success.0, %if.end67 ], [ 0, %land.lhs.true71 ], [ %success.1, %if.end98 ], [ 0, %if.then124 ], [ 0, %land.lhs.true115 ], [ 0, %land.lhs.true106 ], !dbg !3862
  call void @llvm.dbg.value(metadata i32 %success.2, metadata !3801, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.1, metadata !3799, metadata !DIExpression()), !dbg !3803
  %tobool129 = icmp eq %struct.rtx_def* %note.1, null, !dbg !3863
  br i1 %tobool129, label %if.end146, label %land.lhs.true130, !dbg !3865

land.lhs.true130:                                 ; preds = %if.end128
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 0, !dbg !3866
  %bf.load131 = load i32, i32* %17, align 8, !dbg !3866
  %bf.clear133 = and i32 %bf.load131, 16711680, !dbg !3866
  %cmp134 = icmp eq i32 %bf.clear133, 262144, !dbg !3867
  br i1 %cmp134, label %land.lhs.true136, label %if.end146, !dbg !3868

land.lhs.true136:                                 ; preds = %land.lhs.true130
  %arrayidx139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3869
  %18 = bitcast %union.rtunion_def* %arrayidx139 to i32**, !dbg !3869
  %19 = load i32*, i32** %18, align 8, !dbg !3869
  %bf.load141 = load i32, i32* %19, align 8, !dbg !3869
  %bf.clear142 = and i32 %bf.load141, 65535, !dbg !3869
  %cmp143 = icmp eq i32 %bf.clear142, 37, !dbg !3869
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !3870

if.then145:                                       ; preds = %land.lhs.true136
  tail call void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %note.1) #6, !dbg !3871
  br label %if.end146, !dbg !3871

if.end146:                                        ; preds = %if.end128, %if.then145, %land.lhs.true136, %land.lhs.true130
  ret i32 %success.2, !dbg !3872
}

declare dso_local zeroext i8 @shared_const_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @onlyjump_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @cprop_jump(%struct.basic_block_def* %bb, %struct.rtx_def* %setcc, %struct.rtx_def* %jump, %struct.rtx_def* %from, %struct.rtx_def* %src) unnamed_addr #4 !dbg !3873 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3877, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc, metadata !3878, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !3879, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !3880, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !3881, metadata !DIExpression()), !dbg !3902
  %call = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %jump) #6, !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3885, metadata !DIExpression()), !dbg !3902
  %call1 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %jump) #6, !dbg !3904
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3886, metadata !DIExpression()), !dbg !3902
  %tobool = icmp eq %struct.rtx_def* %call1, null, !dbg !3905
  br i1 %tobool, label %if.end3, label %if.then, !dbg !3907

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3908
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3908
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3908
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3884, metadata !DIExpression()), !dbg !3902
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !3910
  %bf.load = load i32, i32* %1, align 8, !dbg !3910
  %bf.clear = and i32 %bf.load, 65535, !dbg !3910
  %cmp = icmp eq i32 %bf.clear, 3, !dbg !3912
  %spec.select = select i1 %cmp, %struct.rtx_def* null, %struct.rtx_def* %0, !dbg !3913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !3884, metadata !DIExpression()), !dbg !3902
  br label %if.end3, !dbg !3914

if.end3:                                          ; preds = %entry, %if.then
  %note_src.1 = phi %struct.rtx_def* [ %spec.select, %if.then ], [ null, %entry ], !dbg !3915
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_src.1, metadata !3884, metadata !DIExpression()), !dbg !3902
  %tobool4 = icmp eq %struct.rtx_def* %note_src.1, null, !dbg !3916
  br i1 %tobool4, label %cond.false, label %cond.end, !dbg !3916

cond.false:                                       ; preds = %if.end3
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3917
  %rt_rtx8 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3917
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !3917
  br label %cond.end, !dbg !3916

cond.end:                                         ; preds = %if.end3, %cond.false
  %cond = phi %struct.rtx_def* [ %3, %cond.false ], [ %note_src.1, %if.end3 ], !dbg !3916
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !3883, metadata !DIExpression()), !dbg !3902
  %cmp9 = icmp eq %struct.rtx_def* %setcc, null, !dbg !3918
  br i1 %cmp9, label %if.end82, label %land.lhs.true, !dbg !3919

land.lhs.true:                                    ; preds = %cond.end
  %call10 = tail call i32 @modified_between_p(%struct.rtx_def* %from, %struct.rtx_def* nonnull %setcc, %struct.rtx_def* %jump) #6, !dbg !3920
  %tobool11 = icmp eq i32 %call10, 0, !dbg !3920
  br i1 %tobool11, label %land.lhs.true12, label %if.end82, !dbg !3921

land.lhs.true12:                                  ; preds = %land.lhs.true
  %call13 = tail call i32 @modified_between_p(%struct.rtx_def* %src, %struct.rtx_def* nonnull %setcc, %struct.rtx_def* %jump) #6, !dbg !3922
  %tobool14 = icmp eq i32 %call13, 0, !dbg !3922
  br i1 %tobool14, label %if.then15, label %if.end82, !dbg !3923

if.then15:                                        ; preds = %land.lhs.true12
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %setcc, i64 0, i32 0, !dbg !3924
  %bf.load16 = load i32, i32* %4, align 8, !dbg !3924
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !3924
  %cmp18 = icmp eq i32 %bf.clear17, 8, !dbg !3924
  br i1 %cmp18, label %cond.true30, label %lor.lhs.false, !dbg !3924

lor.lhs.false:                                    ; preds = %if.then15
  %cmp21 = icmp eq i32 %bf.clear17, 7, !dbg !3924
  br i1 %cmp21, label %cond.true30, label %lor.lhs.false22, !dbg !3924

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %cmp25 = icmp eq i32 %bf.clear17, 9, !dbg !3924
  br i1 %cmp25, label %cond.true30, label %lor.lhs.false26, !dbg !3924

lor.lhs.false26:                                  ; preds = %lor.lhs.false22
  %cmp29 = icmp eq i32 %bf.clear17, 10, !dbg !3924
  br i1 %cmp29, label %cond.true30, label %cond.end52, !dbg !3924

cond.true30:                                      ; preds = %lor.lhs.false26, %lor.lhs.false22, %lor.lhs.false, %if.then15
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %setcc, i64 0, i32 1, !dbg !3924
  %5 = getelementptr inbounds %union.u, %union.u* %u31, i64 1, i32 0, i32 0, i64 0, !dbg !3924
  %6 = bitcast %union.rtunion_def* %5 to i32**, !dbg !3924
  %7 = load i32*, i32** %6, align 8, !dbg !3924
  %bf.load35 = load i32, i32* %7, align 8, !dbg !3924
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !3924
  %cmp37 = icmp eq i32 %bf.clear36, 23, !dbg !3924
  %8 = bitcast i32* %7 to %struct.rtx_def*, !dbg !3924
  br i1 %cmp37, label %cond.end52, label %cond.false43, !dbg !3924

cond.false43:                                     ; preds = %cond.true30
  %call48 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %setcc, %struct.rtx_def* %8) #6, !dbg !3924
  br label %cond.end52, !dbg !3924

cond.end52:                                       ; preds = %lor.lhs.false26, %cond.false43, %cond.true30
  %cond53 = phi %struct.rtx_def* [ %call48, %cond.false43 ], [ %8, %cond.true30 ], [ null, %lor.lhs.false26 ], !dbg !3924
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond53, metadata !3890, metadata !DIExpression()), !dbg !3925
  %call54 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* nonnull %setcc) #6, !dbg !3926
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !3891, metadata !DIExpression()), !dbg !3925
  %tobool55 = icmp eq %struct.rtx_def* %call54, null, !dbg !3927
  br i1 %tobool55, label %cond.false69, label %land.lhs.true56, !dbg !3928

land.lhs.true56:                                  ; preds = %cond.end52
  %arrayidx59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call54, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3929
  %9 = bitcast %union.rtunion_def* %arrayidx59 to i32**, !dbg !3929
  %10 = load i32*, i32** %9, align 8, !dbg !3929
  %bf.load61 = load i32, i32* %10, align 8, !dbg !3929
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !3929
  %cmp63 = icmp eq i32 %bf.clear62, 3, !dbg !3930
  br i1 %cmp63, label %cond.false69, label %cond.true64, !dbg !3931

cond.true64:                                      ; preds = %land.lhs.true56
  br label %cond.end74, !dbg !3931

cond.false69:                                     ; preds = %land.lhs.true56, %cond.end52
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond53, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3932
  br label %cond.end74, !dbg !3931

cond.end74:                                       ; preds = %cond.false69, %cond.true64
  %cond75.in.in = phi %union.rtunion_def* [ %arrayidx59, %cond.true64 ], [ %11, %cond.false69 ]
  %cond75.in = bitcast %union.rtunion_def* %cond75.in.in to %struct.rtx_def**, !dbg !3925
  %cond75 = load %struct.rtx_def*, %struct.rtx_def** %cond75.in, align 8, !dbg !3931
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond75, metadata !3887, metadata !DIExpression()), !dbg !3925
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond53, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3933
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !3933
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !3933
  %call80 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %cond, %struct.rtx_def* %12, %struct.rtx_def* %cond75) #6, !dbg !3934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call80, metadata !3883, metadata !DIExpression()), !dbg !3902
  br label %if.end82, !dbg !3935

if.end82:                                         ; preds = %land.lhs.true12, %land.lhs.true, %cond.end, %cond.end74
  %set_src.0 = phi %struct.rtx_def* [ %call80, %cond.end74 ], [ %cond, %land.lhs.true12 ], [ %cond, %land.lhs.true ], [ %cond, %cond.end ], !dbg !3902
  %setcc.addr.0 = phi %struct.rtx_def* [ %setcc, %cond.end74 ], [ null, %land.lhs.true12 ], [ null, %land.lhs.true ], [ null, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc.addr.0, metadata !3878, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set_src.0, metadata !3883, metadata !DIExpression()), !dbg !3902
  %call83 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %set_src.0, %struct.rtx_def* %from, %struct.rtx_def* %src) #6, !dbg !3936
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call83, metadata !3882, metadata !DIExpression()), !dbg !3902
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3937
  %rt_rtx87 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !3937
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx87, align 8, !dbg !3937
  %call88 = tail call i32 @rtx_equal_p(%struct.rtx_def* %call83, %struct.rtx_def* %14) #6, !dbg !3939
  %tobool89 = icmp eq i32 %call88, 0, !dbg !3939
  br i1 %tobool89, label %if.end91, label %cleanup, !dbg !3940

if.end91:                                         ; preds = %if.end82
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3941
  %cmp92 = icmp eq %struct.rtx_def* %call83, %15, !dbg !3943
  br i1 %cmp92, label %if.then93, label %if.else95, !dbg !3944

if.then93:                                        ; preds = %if.end91
  %call94 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %jump) #6, !dbg !3945
  br label %if.end119, !dbg !3945

if.else95:                                        ; preds = %if.end91
  %tobool96 = icmp eq %struct.rtx_def* %setcc.addr.0, null, !dbg !3946
  br i1 %tobool96, label %if.end101, label %land.lhs.true97, !dbg !3949

land.lhs.true97:                                  ; preds = %if.else95
  %call98 = tail call i32 @modified_in_p(%struct.rtx_def* %call83, %struct.rtx_def* nonnull %setcc.addr.0) #6, !dbg !3950
  %tobool99 = icmp eq i32 %call98, 0, !dbg !3950
  br i1 %tobool99, label %if.end101, label %cleanup, !dbg !3951

if.end101:                                        ; preds = %land.lhs.true97, %if.else95
  %call106 = tail call zeroext i8 @validate_unshare_change(%struct.rtx_def* %jump, %struct.rtx_def** nonnull %rt_rtx87, %struct.rtx_def* %call83, i8 zeroext 0) #6, !dbg !3952
  %tobool107 = icmp eq i8 %call106, 0, !dbg !3952
  br i1 %tobool107, label %if.then108, label %if.end115, !dbg !3954

if.then108:                                       ; preds = %if.end101
  %call109 = tail call i32 @rtx_equal_p(%struct.rtx_def* %call83, %struct.rtx_def* %note_src.1) #6, !dbg !3955
  %tobool110 = icmp eq i32 %call109, 0, !dbg !3955
  br i1 %tobool110, label %if.then111, label %cleanup, !dbg !3958

if.then111:                                       ; preds = %if.then108
  %call112 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call83) #6, !dbg !3959
  %call113 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %jump, i32 4, %struct.rtx_def* %call112) #6, !dbg !3960
  br label %cleanup, !dbg !3960

if.end115:                                        ; preds = %if.end101
  br i1 %tobool4, label %if.end119, label %if.then117, !dbg !3961

if.then117:                                       ; preds = %if.end115
  tail call void @remove_note(%struct.rtx_def* %jump, %struct.rtx_def* %call1) #6, !dbg !3962
  br label %if.end119, !dbg !3962

if.end119:                                        ; preds = %if.end115, %if.then117, %if.then93
  %16 = load i32, i32* @global_const_prop_count, align 4, !dbg !3964
  %inc = add nsw i32 %16, 1, !dbg !3964
  store i32 %inc, i32* @global_const_prop_count, align 4, !dbg !3964
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3965
  %cmp120 = icmp eq %struct._IO_FILE* %17, null, !dbg !3967
  br i1 %cmp120, label %if.end128, label %if.then121, !dbg !3968

if.then121:                                       ; preds = %if.end119
  %call122 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %from) #7, !dbg !3969
  %arrayidx125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3971
  %rt_int = bitcast %union.rtunion_def* %arrayidx125 to i32*, !dbg !3971
  %18 = load i32, i32* %rt_int, align 8, !dbg !3971
  %call126 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %17, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.15, i64 0, i64 0), i32 %call122, i32 %18) #6, !dbg !3972
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3973
  tail call void @print_rtl(%struct._IO_FILE* %19, %struct.rtx_def* %src) #6, !dbg !3974
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3975
  %call127 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3976
  br label %if.end128, !dbg !3977

if.end128:                                        ; preds = %if.end119, %if.then121
  %call129 = tail call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %bb) #6, !dbg !3978
  %21 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3979
  %cmp130 = icmp eq %struct.rtx_def* %call83, %21, !dbg !3980
  br i1 %cmp130, label %cleanup, label %land.lhs.true131, !dbg !3981

land.lhs.true131:                                 ; preds = %if.end128
  %call132 = tail call i32 @simplejump_p(%struct.rtx_def* %jump) #6, !dbg !3982
  %tobool133 = icmp eq i32 %call132, 0, !dbg !3982
  br i1 %tobool133, label %cleanup, label %if.then134, !dbg !3983

if.then134:                                       ; preds = %land.lhs.true131
  %22 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3984
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #8, !dbg !3984
  %23 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3985
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8, !dbg !3985
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3985
  %call135 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3985
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3985
  %25 = extractvalue { i32, %struct.VEC_edge_gc** } %call135, 0, !dbg !3985
  store i32 %25, i32* %24, align 8, !dbg !3985
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3985
  %27 = extractvalue { i32, %struct.VEC_edge_gc** } %call135, 1, !dbg !3985
  store %struct.VEC_edge_gc** %27, %struct.VEC_edge_gc*** %26, align 8, !dbg !3985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %23, i64 16, i1 false), !dbg !3985
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8, !dbg !3985
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3987
  %29 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3987
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, !dbg !3989
  %arrayidx143 = getelementptr inbounds %union.u, %union.u* %u141, i64 1, i32 0, i32 1, !dbg !3989
  %rt_rtx144 = bitcast %struct.object_block** %arrayidx143 to %struct.rtx_def**, !dbg !3989
  br label %for.cond, !dbg !3991

for.cond:                                         ; preds = %for.inc, %if.then134
  %30 = load i32, i32* %28, align 8, !dbg !3992
  %31 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %29, align 8, !dbg !3992
  %call136 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %30, %struct.VEC_edge_gc** %31) #7, !dbg !3992
  call void @llvm.dbg.value(metadata %struct.edge_def* %call136, metadata !3892, metadata !DIExpression()), !dbg !3993
  %tobool137 = icmp eq %struct.edge_def* %call136, null, !dbg !3994
  br i1 %tobool137, label %for.end.loopexit, label %for.body, !dbg !3994

for.body:                                         ; preds = %for.cond
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call136, i64 0, i32 1, !dbg !3995
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3995
  %33 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3996
  %cfg = getelementptr inbounds %struct.function, %struct.function* %33, i64 0, i32 1, !dbg !3996
  %34 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3996
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %34, i64 0, i32 1, !dbg !3996
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3996
  %cmp138 = icmp eq %struct.basic_block_def* %32, %35, !dbg !3997
  br i1 %cmp138, label %for.inc, label %land.lhs.true139, !dbg !3998

land.lhs.true139:                                 ; preds = %for.body
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i64 0, i32 7, !dbg !3999
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3999
  %36 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3999
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %36, i64 0, i32 0, !dbg !3999
  %37 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3999
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx144, align 8, !dbg !4000
  %cmp145 = icmp eq %struct.rtx_def* %37, %38, !dbg !4001
  br i1 %cmp145, label %if.then146, label %for.inc, !dbg !4002

if.then146:                                       ; preds = %land.lhs.true139
  %call136.lcssa3 = phi %struct.edge_def* [ %call136, %land.lhs.true139 ], !dbg !3992
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call136.lcssa3, i64 0, i32 7, !dbg !4003
  %39 = load i32, i32* %flags, align 8, !dbg !4005
  %or = or i32 %39, 1, !dbg !4005
  store i32 %or, i32* %flags, align 8, !dbg !4005
  br label %for.end, !dbg !4006

for.inc:                                          ; preds = %for.body, %land.lhs.true139
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3895, metadata !DIExpression(DW_OP_deref)), !dbg !3993
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4007
  br label %for.cond, !dbg !4008, !llvm.loop !4009

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !4011

for.end:                                          ; preds = %for.end.loopexit, %if.then146
  %call148 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %jump) #6, !dbg !4011
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8, !dbg !4012
  br label %cleanup, !dbg !4013

cleanup:                                          ; preds = %land.lhs.true97, %land.lhs.true131, %if.end128, %if.then108, %if.end82, %for.end, %if.then111
  %retval.0 = phi i32 [ 0, %if.end82 ], [ 0, %land.lhs.true97 ], [ 0, %if.then111 ], [ 0, %if.then108 ], [ 1, %for.end ], [ 1, %land.lhs.true131 ], [ 1, %if.end128 ], !dbg !3902
  ret i32 %retval.0, !dbg !4014
}

declare dso_local %struct.rtx_def* @pc_set(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @modified_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @validate_unshare_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @purge_dead_edges(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @simplejump_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !4015 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !4019, metadata !DIExpression()), !dbg !4021
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !4022
  store i32 0, i32* %index, align 8, !dbg !4023
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !4024
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !4025
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !4026
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !4026
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !4026
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4027 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4032
  %tobool = icmp eq i8 %call, 0, !dbg !4032
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4033

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4034
  br label %cond.end, !dbg !4033

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !4033
  ret %struct.edge_def* %cond, !dbg !4035
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !4036 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !4041, metadata !DIExpression()), !dbg !4042
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !4043
  %0 = load i32, i32* %index, align 8, !dbg !4043
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !4043
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4043
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !4043
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4043
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4043

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !4043
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4043
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !4043
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4043
  br label %cond.end, !dbg !4043

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4043
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4043
  %cmp = icmp ult i32 %0, %call2, !dbg !4043
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !4043

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !4043
  br label %cond.end5, !dbg !4043

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !4044
  %inc = add i32 %5, 1, !dbg !4044
  store i32 %inc, i32* %index, align 8, !dbg !4044
  ret void, !dbg !4045
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4046 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4051
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4051
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4051

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4051
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4051
  br label %cond.end, !dbg !4051

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4051
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4051
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !4052
  %conv3 = zext i1 %cmp to i8, !dbg !4053
  ret i8 %conv3, !dbg !4054
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4055 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4058
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4058
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4058

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4058
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4058
  br label %cond.end, !dbg !4058

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4058
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !4058
  ret %struct.edge_def* %call2, !dbg !4059
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4060 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4066, metadata !DIExpression()), !dbg !4067
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4068
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4068

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4068
  %0 = load i32, i32* %num, align 8, !dbg !4068
  br label %cond.end, !dbg !4068

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4068
  ret i32 %cond, !dbg !4068
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4069 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !4074
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4074

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !4074
  br label %cond.end, !dbg !4074

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !4075
  ret %struct.VEC_edge_gc* %0, !dbg !4076
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4077 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4081, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4082, metadata !DIExpression()), !dbg !4083
  br label %land.end, !dbg !4084

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4084
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4084
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4084
  ret %struct.edge_def* %0, !dbg !4084
}

declare dso_local void @validate_replace_src_group(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @num_changes_pending() local_unnamed_addr #1

declare dso_local i32 @apply_change_group() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_rtx(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @implicit_set_cond_p(%struct.rtx_def* %cond) unnamed_addr #4 !dbg !4085 {
entry:
  %d = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !4087, metadata !DIExpression()), !dbg !4096
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4097
  %0 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4097
  %1 = load i32*, i32** %0, align 8, !dbg !4097
  %bf.load = load i32, i32* %1, align 8, !dbg !4097
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4097
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4088, metadata !DIExpression()), !dbg !4096
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4098
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !4098
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4098
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !4090, metadata !DIExpression()), !dbg !4096
  %idxprom = zext i32 %bf.clear to i64, !dbg !4099
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4099
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !4099
  %cmp = icmp eq i8 %4, 8, !dbg !4099
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4099

lor.lhs.false:                                    ; preds = %entry
  %cmp10 = icmp eq i8 %4, 9, !dbg !4099
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false12, !dbg !4099

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %cmp16 = icmp eq i8 %4, 11, !dbg !4099
  br i1 %cmp16, label %land.lhs.true, label %lor.lhs.false18, !dbg !4099

lor.lhs.false18:                                  ; preds = %lor.lhs.false12
  %cmp22 = icmp eq i8 %4, 17, !dbg !4099
  br i1 %cmp22, label %land.lhs.true, label %if.end99, !dbg !4099

land.lhs.true:                                    ; preds = %lor.lhs.false18, %lor.lhs.false12, %lor.lhs.false, %entry
  br i1 %cmp, label %cond.end, label %lor.lhs.false29, !dbg !4099

lor.lhs.false29:                                  ; preds = %land.lhs.true
  %cmp33 = icmp eq i8 %4, 9, !dbg !4099
  br i1 %cmp33, label %cond.end, label %cond.false, !dbg !4099

cond.false:                                       ; preds = %lor.lhs.false29
  %arrayidx36 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4099
  %5 = load i8, i8* %arrayidx36, align 1, !dbg !4099
  %.pre = zext i8 %5 to i64, !dbg !4099
  %arrayidx40.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !4100
  %.pre2 = load i8, i8* %arrayidx40.phi.trans.insert, align 1, !dbg !4099
  %phitmp = icmp eq i8 %.pre2, 9, !dbg !4099
  br label %cond.end, !dbg !4099

cond.end:                                         ; preds = %land.lhs.true, %lor.lhs.false29, %cond.false
  %6 = phi i1 [ false, %land.lhs.true ], [ true, %lor.lhs.false29 ], [ %phitmp, %cond.false ]
  br i1 %6, label %cond.true44, label %cond.false63, !dbg !4099

cond.true44:                                      ; preds = %cond.end
  br i1 %cmp, label %cond.end61, label %lor.lhs.false50, !dbg !4099

lor.lhs.false50:                                  ; preds = %cond.true44
  %cmp54 = icmp eq i8 %4, 9, !dbg !4099
  br i1 %cmp54, label %cond.end61, label %cond.false57, !dbg !4099

cond.false57:                                     ; preds = %lor.lhs.false50
  %arrayidx59 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4099
  %7 = load i8, i8* %arrayidx59, align 1, !dbg !4099
  %conv60 = zext i8 %7 to i32, !dbg !4099
  br label %cond.end61, !dbg !4099

cond.end61:                                       ; preds = %cond.true44, %lor.lhs.false50, %cond.false57
  %cond62 = phi i32 [ %conv60, %cond.false57 ], [ %bf.clear, %lor.lhs.false50 ], [ %bf.clear, %cond.true44 ], !dbg !4099
  br label %cond.end83, !dbg !4099

cond.false63:                                     ; preds = %cond.end
  br i1 %cmp, label %cond.end80, label %lor.lhs.false69, !dbg !4099

lor.lhs.false69:                                  ; preds = %cond.false63
  %cmp73 = icmp eq i8 %4, 9, !dbg !4099
  br i1 %cmp73, label %cond.end80, label %cond.false76, !dbg !4099

cond.false76:                                     ; preds = %lor.lhs.false69
  %arrayidx78 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !4099
  %8 = load i8, i8* %arrayidx78, align 1, !dbg !4099
  %conv79 = zext i8 %8 to i32, !dbg !4099
  br label %cond.end80, !dbg !4099

cond.end80:                                       ; preds = %cond.false63, %lor.lhs.false69, %cond.false76
  %cond81 = phi i32 [ %conv79, %cond.false76 ], [ %bf.clear, %lor.lhs.false69 ], [ %bf.clear, %cond.false63 ], !dbg !4099
  br label %cond.end83, !dbg !4099

cond.end83:                                       ; preds = %cond.end80, %cond.end61
  %cond84.in = phi i32 [ %cond62, %cond.end61 ], [ %cond81, %cond.end80 ]
  %cond84 = add nsw i32 %cond84.in, -38, !dbg !4099
  %idxprom85 = zext i32 %cond84 to i64, !dbg !4099
  %arrayidx86 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom85, !dbg !4099
  %9 = load %struct.real_format*, %struct.real_format** %arrayidx86, align 8, !dbg !4099
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %9, i64 0, i32 14, !dbg !4099
  %10 = load i8, i8* %has_signed_zero, align 1, !dbg !4099
  %tobool = icmp ne i8 %10, 0, !dbg !4099
  %11 = load i32, i32* @flag_signed_zeros, align 4, !dbg !4099
  %tobool89 = icmp ne i32 %11, 0, !dbg !4099
  %or.cond = and i1 %tobool, %tobool89, !dbg !4099
  br i1 %or.cond, label %if.then, label %if.end99, !dbg !4099

if.then:                                          ; preds = %cond.end83
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !4101
  %bf.load90 = load i32, i32* %12, align 8, !dbg !4101
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !4101
  %cmp92 = icmp eq i32 %bf.clear91, 32, !dbg !4102
  br i1 %cmp92, label %if.then94, label %cleanup101, !dbg !4103

if.then94:                                        ; preds = %if.then
  %13 = bitcast %struct.real_value* %d to i8*, !dbg !4104
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !dbg !4104
  %u95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, !dbg !4105
  %14 = bitcast %union.u* %u95 to i8*, !dbg !4105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %14, i64 32, i1 false), !dbg !4105
  call void @llvm.dbg.value(metadata %struct.real_value* %d, metadata !4091, metadata !DIExpression(DW_OP_deref)), !dbg !4106
  %call = call zeroext i8 @real_compare(i32 101, %struct.real_value* nonnull %d, %struct.real_value* nonnull @dconst0) #6, !dbg !4107
  %tobool96 = icmp eq i8 %call, 0, !dbg !4107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !dbg !4109
  br i1 %tobool96, label %if.end99, label %cleanup101

if.end99:                                         ; preds = %if.then94, %cond.end83, %lor.lhs.false18
  %call100 = call fastcc zeroext i8 @gcse_constant_p(%struct.rtx_def* %3) #7, !dbg !4110
  br label %cleanup101, !dbg !4111

cleanup101:                                       ; preds = %if.then, %if.then94, %if.end99
  %retval.1 = phi i8 [ 0, %if.then94 ], [ %call100, %if.end99 ], [ 0, %if.then ], !dbg !4096
  ret i8 %retval.1, !dbg !4112
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4113 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4120, metadata !DIExpression()), !dbg !4121
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4122
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4122
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4122
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4122

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4122
  br label %cond.end, !dbg !4122

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4122
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4122
  %cmp = icmp eq i32 %call, 1, !dbg !4123
  %conv2 = zext i1 %cmp to i8, !dbg !4122
  ret i8 %conv2, !dbg !4124
}

declare dso_local zeroext i8 @real_compare(i32, %struct.real_value*, %struct.real_value*) local_unnamed_addr #1

declare dso_local i32 @get_max_insn_count() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i8* @gmalloc(i64 %size) unnamed_addr #4 !dbg !4125 {
entry:
  call void @llvm.dbg.value(metadata i64 %size, metadata !4129, metadata !DIExpression()), !dbg !4130
  %0 = load i32, i32* @bytes_used, align 4, !dbg !4131
  %1 = trunc i64 %size to i32, !dbg !4131
  %conv1 = add i32 %0, %1, !dbg !4131
  store i32 %conv1, i32* @bytes_used, align 4, !dbg !4131
  %call = tail call i8* @xmalloc(i64 %size) #6, !dbg !4132
  ret i8* %call, !dbg !4133
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_hash_table_work(%struct.hash_table_d* %table) unnamed_addr #4 !dbg !4134 {
entry:
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !4136, metadata !DIExpression()), !dbg !4143
  tail call fastcc void @clear_modify_mem_tables() #7, !dbg !4144
  %call = tail call i32 @max_reg_num() #6, !dbg !4145
  %conv = sext i32 %call to i64, !dbg !4145
  %mul = shl nsw i64 %conv, 4, !dbg !4145
  %call1 = tail call fastcc i8* @gmalloc(i64 %mul) #7, !dbg !4145
  store i8* %call1, i8** bitcast (%struct.reg_avail_info** @reg_avail_info to i8**), align 8, !dbg !4146
  call void @llvm.dbg.value(metadata i32 0, metadata !4137, metadata !DIExpression()), !dbg !4143
  br label %for.cond, !dbg !4147

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.body ], [ 0, %entry ], !dbg !4149
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !4137, metadata !DIExpression()), !dbg !4143
  %call2 = tail call i32 @max_reg_num() #6, !dbg !4150
  %0 = sext i32 %call2 to i64, !dbg !4152
  %cmp = icmp slt i64 %indvars.iv2, %0, !dbg !4152
  br i1 %cmp, label %for.body, label %for.end, !dbg !4153

for.body:                                         ; preds = %for.cond
  %1 = load %struct.reg_avail_info*, %struct.reg_avail_info** @reg_avail_info, align 8, !dbg !4154
  %last_bb = getelementptr inbounds %struct.reg_avail_info, %struct.reg_avail_info* %1, i64 %indvars.iv2, i32 0, !dbg !4155
  store %struct.basic_block_def* null, %struct.basic_block_def** %last_bb, align 8, !dbg !4156
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !4157
  call void @llvm.dbg.value(metadata i32 undef, metadata !4137, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4143
  br label %for.cond, !dbg !4158, !llvm.loop !4159

for.end:                                          ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4161
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4161
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4161
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !4161
  %set_p = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 3, !dbg !4162
  br label %for.cond4, !dbg !4161

for.cond4:                                        ; preds = %for.inc116, %for.end
  %4 = phi %struct.control_flow_graph* [ %.pre1, %for.inc116 ], [ %3, %for.end ], !dbg !4164
  %.pn.in = phi %struct.basic_block_def** [ @current_bb, %for.inc116 ], [ %x_entry_block_ptr, %for.end ]
  %.pn = load %struct.basic_block_def*, %struct.basic_block_def** %.pn.in, align 8, !dbg !4165
  %storemerge.in.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4165
  %storemerge.in = bitcast %struct.basic_block_def** %storemerge.in.in to i64*, !dbg !4165
  %storemerge = load i64, i64* %storemerge.in, align 8, !dbg !4165
  store i64 %storemerge, i64* bitcast (%struct.basic_block_def** @current_bb to i64*), align 8, !dbg !4165
  %.cast = inttoptr i64 %storemerge to %struct.basic_block_def*, !dbg !4164
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !4164
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4164
  %cmp7 = icmp eq %struct.basic_block_def* %5, %.cast, !dbg !4164
  br i1 %cmp7, label %for.end118, label %for.body9, !dbg !4161

for.body9:                                        ; preds = %for.cond4
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.cast, i64 0, i32 7, !dbg !4166
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4166
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4166
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 0, !dbg !4166
  br label %for.cond10, !dbg !4166

for.cond10:                                       ; preds = %for.inc53, %for.body9
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body9 ], [ %rt_rtx57, %for.inc53 ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !4168
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4138, metadata !DIExpression()), !dbg !4169
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4170
  br i1 %tobool, label %for.end58, label %land.rhs, !dbg !4170

land.rhs:                                         ; preds = %for.cond10
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** @current_bb, align 8, !dbg !4170
  %il11 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 7, !dbg !4170
  %rtl12 = bitcast %union.basic_block_il_dependent* %il11 to %struct.rtl_bb_info**, !dbg !4170
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl12, align 8, !dbg !4170
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 1, !dbg !4170
  %9 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4170
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4170
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !4170
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4170
  %cmp14 = icmp eq %struct.rtx_def* %insn.0, %11, !dbg !4170
  br i1 %cmp14, label %for.end58, label %for.body16, !dbg !4166

for.body16:                                       ; preds = %land.rhs
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4172
  %bf.load = load i32, i32* %12, align 8, !dbg !4172
  %bf.clear = and i32 %bf.load, 65535, !dbg !4172
  %cmp17 = icmp eq i32 %bf.clear, 8, !dbg !4172
  br i1 %cmp17, label %if.end, label %lor.lhs.false, !dbg !4172

lor.lhs.false:                                    ; preds = %for.body16
  %cmp21 = icmp eq i32 %bf.clear, 7, !dbg !4172
  br i1 %cmp21, label %if.end, label %lor.lhs.false23, !dbg !4172

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %cmp26 = icmp eq i32 %bf.clear, 9, !dbg !4172
  br i1 %cmp26, label %if.end, label %lor.lhs.false28, !dbg !4172

lor.lhs.false28:                                  ; preds = %lor.lhs.false23
  %cmp31 = icmp eq i32 %bf.clear, 10, !dbg !4172
  br i1 %cmp31, label %if.end, label %for.inc53, !dbg !4175

if.end:                                           ; preds = %lor.lhs.false28, %lor.lhs.false23, %lor.lhs.false, %for.body16
  %cmp35 = icmp eq i32 %bf.clear, 10, !dbg !4176
  br i1 %cmp35, label %for.cond38.preheader, label %if.end48, !dbg !4178

for.cond38.preheader:                             ; preds = %if.end
  br label %for.cond38, !dbg !4179

for.cond38:                                       ; preds = %for.cond38.preheader, %for.inc45
  %indvars.iv = phi i64 [ 0, %for.cond38.preheader ], [ %indvars.iv.next, %for.inc45 ], !dbg !4182
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4142, metadata !DIExpression()), !dbg !4169
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !4183
  br i1 %exitcond, label %for.end47, label %for.body41, !dbg !4179

for.body41:                                       ; preds = %for.cond38
  %13 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !4185
  %shl = shl i64 1, %indvars.iv, !dbg !4185
  %and = and i64 %13, %shl, !dbg !4185
  %tobool42 = icmp eq i64 %and, 0, !dbg !4185
  br i1 %tobool42, label %for.inc45, label %if.then43, !dbg !4187

if.then43:                                        ; preds = %for.body41
  %14 = trunc i64 %indvars.iv to i32, !dbg !4188
  tail call fastcc void @record_last_reg_set_info(%struct.rtx_def* nonnull %insn.0, i32 %14) #7, !dbg !4188
  br label %for.inc45, !dbg !4188

for.inc45:                                        ; preds = %for.body41, %if.then43
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4189
  call void @llvm.dbg.value(metadata i32 undef, metadata !4142, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4169
  br label %for.cond38, !dbg !4190, !llvm.loop !4191

for.end47:                                        ; preds = %for.cond38
  tail call fastcc void @mark_call(%struct.rtx_def* nonnull %insn.0) #7, !dbg !4193
  br label %if.end48, !dbg !4194

if.end48:                                         ; preds = %for.end47, %if.end
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !4195
  %15 = getelementptr inbounds %union.u, %union.u* %u49, i64 1, i32 0, i32 0, i64 0, !dbg !4195
  %rt_rtx52 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !4195
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !4195
  %17 = bitcast %struct.rtx_def* %insn.0 to i8*, !dbg !4196
  tail call void @note_stores(%struct.rtx_def* %16, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @record_last_set_info, i8* nonnull %17) #6, !dbg !4197
  br label %for.inc53, !dbg !4198

for.inc53:                                        ; preds = %lor.lhs.false28, %if.end48
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4170
  %rt_rtx57 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !4170
  br label %for.cond10, !dbg !4170, !llvm.loop !4199

for.end58:                                        ; preds = %land.rhs, %for.cond10
  %19 = load i32, i32* %set_p, align 8, !dbg !4201
  %tobool59 = icmp eq i32 %19, 0, !dbg !4202
  br i1 %tobool59, label %if.end71, label %land.lhs.true, !dbg !4203

land.lhs.true:                                    ; preds = %for.end58
  %20 = load %struct.rtx_def**, %struct.rtx_def*** @implicit_sets, align 8, !dbg !4204
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** @current_bb, align 8, !dbg !4205
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i64 0, i32 9, !dbg !4206
  %22 = load i32, i32* %index, align 8, !dbg !4206
  %idxprom60 = sext i32 %22 to i64, !dbg !4204
  %arrayidx61 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %20, i64 %idxprom60, !dbg !4204
  %23 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx61, align 8, !dbg !4204
  %cmp62 = icmp eq %struct.rtx_def* %23, null, !dbg !4207
  br i1 %cmp62, label %if.end71, label %if.then64, !dbg !4208

if.then64:                                        ; preds = %land.lhs.true
  %il68 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i64 0, i32 7, !dbg !4209
  %rtl69 = bitcast %union.basic_block_il_dependent* %il68 to %struct.rtl_bb_info**, !dbg !4209
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl69, align 8, !dbg !4209
  %head_70 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i64 0, i32 0, !dbg !4209
  %25 = load %struct.rtx_def*, %struct.rtx_def** %head_70, align 8, !dbg !4209
  tail call fastcc void @hash_scan_set(%struct.rtx_def* nonnull %23, %struct.rtx_def* %25, %struct.hash_table_d* %table) #7, !dbg !4210
  br label %if.end71, !dbg !4210

if.end71:                                         ; preds = %land.lhs.true, %for.end58, %if.then64
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** @current_bb, align 8, !dbg !4211
  %il72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 7, !dbg !4211
  %rtl73 = bitcast %union.basic_block_il_dependent* %il72 to %struct.rtl_bb_info**, !dbg !4211
  %27 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl73, align 8, !dbg !4211
  %head_74 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %27, i64 0, i32 0, !dbg !4211
  br label %for.cond75, !dbg !4211

for.cond75:                                       ; preds = %for.inc110, %if.end71
  %insn.1.in = phi %struct.rtx_def** [ %head_74, %if.end71 ], [ %rt_rtx114, %for.inc110 ]
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !4213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !4138, metadata !DIExpression()), !dbg !4169
  %tobool76 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !4214
  br i1 %tobool76, label %for.inc116, label %land.rhs77, !dbg !4214

land.rhs77:                                       ; preds = %for.cond75
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** @current_bb, align 8, !dbg !4214
  %il78 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %28, i64 0, i32 7, !dbg !4214
  %rtl79 = bitcast %union.basic_block_il_dependent* %il78 to %struct.rtl_bb_info**, !dbg !4214
  %29 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl79, align 8, !dbg !4214
  %end_80 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %29, i64 0, i32 1, !dbg !4214
  %30 = load %struct.rtx_def*, %struct.rtx_def** %end_80, align 8, !dbg !4214
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4214
  %rt_rtx84 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !4214
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !4214
  %cmp85 = icmp eq %struct.rtx_def* %insn.1, %32, !dbg !4214
  br i1 %cmp85, label %for.inc116, label %for.body88, !dbg !4211

for.body88:                                       ; preds = %land.rhs77
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !4216
  %bf.load89 = load i32, i32* %33, align 8, !dbg !4216
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !4216
  %cmp91 = icmp eq i32 %bf.clear90, 8, !dbg !4216
  br i1 %cmp91, label %if.then108, label %lor.lhs.false93, !dbg !4216

lor.lhs.false93:                                  ; preds = %for.body88
  %cmp96 = icmp eq i32 %bf.clear90, 7, !dbg !4216
  br i1 %cmp96, label %if.then108, label %lor.lhs.false98, !dbg !4216

lor.lhs.false98:                                  ; preds = %lor.lhs.false93
  %cmp101 = icmp eq i32 %bf.clear90, 9, !dbg !4216
  br i1 %cmp101, label %if.then108, label %lor.lhs.false103, !dbg !4216

lor.lhs.false103:                                 ; preds = %lor.lhs.false98
  %cmp106 = icmp eq i32 %bf.clear90, 10, !dbg !4216
  br i1 %cmp106, label %if.then108, label %for.inc110, !dbg !4218

if.then108:                                       ; preds = %lor.lhs.false103, %lor.lhs.false98, %lor.lhs.false93, %for.body88
  tail call fastcc void @hash_scan_insn(%struct.rtx_def* nonnull %insn.1, %struct.hash_table_d* %table) #7, !dbg !4219
  br label %for.inc110, !dbg !4219

for.inc110:                                       ; preds = %lor.lhs.false103, %if.then108
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4214
  %rt_rtx114 = bitcast %union.rtunion_def* %34 to %struct.rtx_def**, !dbg !4214
  br label %for.cond75, !dbg !4214, !llvm.loop !4220

for.inc116:                                       ; preds = %land.rhs77, %for.cond75
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4164
  %cfg6.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4222
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6.phi.trans.insert, align 8, !dbg !4164
  br label %for.cond4, !dbg !4164, !llvm.loop !4223

for.end118:                                       ; preds = %for.cond4
  %35 = load i8*, i8** bitcast (%struct.reg_avail_info** @reg_avail_info to i8**), align 8, !dbg !4225
  tail call void @free(i8* %35) #6, !dbg !4226
  store %struct.reg_avail_info* null, %struct.reg_avail_info** @reg_avail_info, align 8, !dbg !4227
  ret void, !dbg !4228
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_modify_mem_tables() unnamed_addr #4 !dbg !4229 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %0 = bitcast i32* %i to i8*, !dbg !4240
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4240
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4241
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4241
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @modify_mem_list_set, align 8, !dbg !4242
  call void @llvm.dbg.value(metadata i32* %i, metadata !4231, metadata !DIExpression(DW_OP_deref)), !dbg !4244
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4232, metadata !DIExpression(DW_OP_deref)), !dbg !4244
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %2, i32 0, i32* nonnull %i) #7, !dbg !4242
  br label %for.cond, !dbg !4242

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !4231, metadata !DIExpression(DW_OP_deref)), !dbg !4244
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4232, metadata !DIExpression(DW_OP_deref)), !dbg !4244
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4245
  %tobool = icmp eq i8 %call, 0, !dbg !4242
  br i1 %tobool, label %for.end, label %for.body, !dbg !4242

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def**, %struct.rtx_def*** @modify_mem_list, align 8, !dbg !4247
  %4 = load i32, i32* %i, align 4, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %4, metadata !4231, metadata !DIExpression()), !dbg !4244
  %idx.ext = zext i32 %4 to i64, !dbg !4250
  %add.ptr = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %idx.ext, !dbg !4250
  call void @free_INSN_LIST_list(%struct.rtx_def** %add.ptr) #6, !dbg !4251
  %5 = load %struct.rtx_def**, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !4252
  %6 = load i32, i32* %i, align 4, !dbg !4253
  call void @llvm.dbg.value(metadata i32 %6, metadata !4231, metadata !DIExpression()), !dbg !4244
  %idx.ext1 = zext i32 %6 to i64, !dbg !4254
  %add.ptr2 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %5, i64 %idx.ext1, !dbg !4254
  call fastcc void @free_insn_expr_list_list(%struct.rtx_def** %add.ptr2) #7, !dbg !4255
  call void @llvm.dbg.value(metadata i32* %i, metadata !4231, metadata !DIExpression(DW_OP_deref)), !dbg !4244
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4232, metadata !DIExpression(DW_OP_deref)), !dbg !4244
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4245
  br label %for.cond, !dbg !4245, !llvm.loop !4256

for.end:                                          ; preds = %for.cond
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @modify_mem_list_set, align 8, !dbg !4258
  call void @bitmap_clear(%struct.bitmap_head_def* %7) #6, !dbg !4259
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_calls, align 8, !dbg !4260
  call void @bitmap_clear(%struct.bitmap_head_def* %8) #6, !dbg !4261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4262
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4262
  ret void, !dbg !4262
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_last_reg_set_info(%struct.rtx_def* %insn, i32 %regno) unnamed_addr #4 !dbg !4263 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4267, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4268, metadata !DIExpression()), !dbg !4271
  %0 = load %struct.reg_avail_info*, %struct.reg_avail_info** @reg_avail_info, align 8, !dbg !4272
  %idxprom = sext i32 %regno to i64, !dbg !4272
  %arrayidx = getelementptr inbounds %struct.reg_avail_info, %struct.reg_avail_info* %0, i64 %idxprom, !dbg !4272
  call void @llvm.dbg.value(metadata %struct.reg_avail_info* %arrayidx, metadata !4269, metadata !DIExpression()), !dbg !4271
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !4273
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 10, !dbg !4273
  %2 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4273
  %arrayidx1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4273
  %rt_int = bitcast %union.rtunion_def* %arrayidx1 to i32*, !dbg !4273
  %3 = load i32, i32* %rt_int, align 8, !dbg !4273
  %idxprom2 = sext i32 %3 to i64, !dbg !4273
  %arrayidx3 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %2, i64 %idxprom2, !dbg !4273
  %4 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx3, align 8, !dbg !4273
  %luid4 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %4, i64 0, i32 5, !dbg !4273
  %5 = load i32, i32* %luid4, align 8, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %5, metadata !4270, metadata !DIExpression()), !dbg !4271
  %last_set = getelementptr inbounds %struct.reg_avail_info, %struct.reg_avail_info* %0, i64 %idxprom, i32 2, !dbg !4274
  store i32 %5, i32* %last_set, align 4, !dbg !4275
  %last_bb = getelementptr inbounds %struct.reg_avail_info, %struct.reg_avail_info* %arrayidx, i64 0, i32 0, !dbg !4276
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %last_bb, align 8, !dbg !4276
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** @current_bb, align 8, !dbg !4278
  %cmp = icmp eq %struct.basic_block_def* %6, %7, !dbg !4279
  br i1 %cmp, label %if.end, label %if.then, !dbg !4280

if.then:                                          ; preds = %entry
  %8 = ptrtoint %struct.basic_block_def* %7 to i64, !dbg !4280
  %9 = bitcast %struct.reg_avail_info* %arrayidx to i64*, !dbg !4281
  store i64 %8, i64* %9, align 8, !dbg !4281
  %first_set = getelementptr inbounds %struct.reg_avail_info, %struct.reg_avail_info* %0, i64 %idxprom, i32 1, !dbg !4283
  store i32 %5, i32* %first_set, align 8, !dbg !4284
  br label %if.end, !dbg !4285

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4286
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_call(%struct.rtx_def* %insn) unnamed_addr #4 !dbg !4287 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4289, metadata !DIExpression()), !dbg !4290
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4291
  %bf.load = load i32, i32* %0, align 8, !dbg !4291
  %bf.clear = and i32 %bf.load, 67108864, !dbg !4291
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !4291
  br i1 %tobool, label %lor.lhs.false, label %if.end, !dbg !4291

lor.lhs.false:                                    ; preds = %entry
  %tobool3 = icmp slt i32 %bf.load, 0, !dbg !4291
  br i1 %tobool3, label %if.end, label %if.then, !dbg !4293

if.then:                                          ; preds = %lor.lhs.false
  tail call fastcc void @record_last_mem_set_info(%struct.rtx_def* %insn) #7, !dbg !4294
  br label %if.end, !dbg !4294

if.end:                                           ; preds = %entry, %if.then, %lor.lhs.false
  ret void, !dbg !4295
}

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @record_last_set_info(%struct.rtx_def* %dest, %struct.rtx_def* %setter, i8* %data) #4 !dbg !4296 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !4300, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setter, metadata !4301, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i8* %data, metadata !4302, metadata !DIExpression()), !dbg !4304
  %0 = bitcast i8* %data to %struct.rtx_def*, !dbg !4305
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4303, metadata !DIExpression()), !dbg !4304
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest, i64 0, i32 0, !dbg !4306
  %bf.load = load i32, i32* %1, align 8, !dbg !4306
  %bf.clear = and i32 %bf.load, 65535, !dbg !4306
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !4308
  br i1 %cmp, label %if.then, label %if.end, !dbg !4309

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4310
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4310
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4310
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4300, metadata !DIExpression()), !dbg !4304
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !4311
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4313
  br label %if.end, !dbg !4314

if.end:                                           ; preds = %if.then, %entry
  %bf.load8 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ], !dbg !4313
  %dest.addr.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %dest, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0, metadata !4300, metadata !DIExpression()), !dbg !4304
  %bf.clear2 = and i32 %bf.load8, 65535, !dbg !4313
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !4313
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !4315

if.then4:                                         ; preds = %if.end
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest.addr.0) #7, !dbg !4316
  tail call fastcc void @record_last_reg_set_info(%struct.rtx_def* %0, i32 %call) #7, !dbg !4317
  br label %if.end13, !dbg !4317

if.else:                                          ; preds = %if.end
  %cmp7 = icmp eq i32 %bf.clear2, 43, !dbg !4318
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !4320

land.lhs.true:                                    ; preds = %if.else
  %bf.lshr = lshr i32 %bf.load8, 16, !dbg !4321
  %bf.clear9 = and i32 %bf.lshr, 255, !dbg !4321
  %call10 = tail call i32 @push_operand(%struct.rtx_def* %dest.addr.0, i32 %bf.clear9) #6, !dbg !4322
  %tobool = icmp eq i32 %call10, 0, !dbg !4322
  br i1 %tobool, label %if.then11, label %if.end13, !dbg !4323

if.then11:                                        ; preds = %land.lhs.true
  tail call fastcc void @record_last_mem_set_info(%struct.rtx_def* %0) #7, !dbg !4324
  br label %if.end13, !dbg !4324

if.end13:                                         ; preds = %land.lhs.true, %if.else, %if.then11, %if.then4
  ret void, !dbg !4325
}

; Function Attrs: nounwind uwtable
define internal fastcc void @hash_scan_set(%struct.rtx_def* %pat, %struct.rtx_def* %insn, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !4326 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !4330, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4331, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !4332, metadata !DIExpression()), !dbg !4352
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4353
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4353
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4353
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4333, metadata !DIExpression()), !dbg !4352
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4354
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !4354
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4354
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4334, metadata !DIExpression()), !dbg !4352
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4355
  %bf.load = load i32, i32* %3, align 8, !dbg !4355
  %bf.clear = and i32 %bf.load, 65535, !dbg !4355
  %cmp = icmp eq i32 %bf.clear, 26, !dbg !4356
  br i1 %cmp, label %if.then, label %if.else, !dbg !4357

if.then:                                          ; preds = %entry
  tail call fastcc void @hash_scan_call(%struct.rtx_def* %1, %struct.rtx_def* %insn, %struct.hash_table_d* %table) #7, !dbg !4358
  br label %if.end212, !dbg !4358

if.else:                                          ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !4359
  %bf.load5 = load i32, i32* %4, align 8, !dbg !4359
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4359
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !4359
  br i1 %cmp7, label %if.then8, label %if.else144, !dbg !4360

if.then8:                                         ; preds = %if.else
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !4361
  call void @llvm.dbg.value(metadata i32 %call, metadata !4336, metadata !DIExpression()), !dbg !4362
  %call9 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) #6, !dbg !4363
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !4335, metadata !DIExpression()), !dbg !4352
  %cmp10 = icmp eq %struct.rtx_def* %call9, null, !dbg !4364
  br i1 %cmp10, label %if.end, label %land.lhs.true, !dbg !4366

land.lhs.true:                                    ; preds = %if.then8
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call9, i64 0, i32 0, !dbg !4367
  %bf.load11 = load i32, i32* %5, align 8, !dbg !4367
  %bf.clear12 = and i32 %bf.load11, 16711680, !dbg !4367
  %cmp13 = icmp eq i32 %bf.clear12, 262144, !dbg !4368
  br i1 %cmp13, label %land.lhs.true14, label %if.end, !dbg !4369

land.lhs.true14:                                  ; preds = %land.lhs.true
  %bf.load15 = load i32, i32* %3, align 8, !dbg !4370
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4370
  %cmp17 = icmp eq i32 %bf.clear16, 37, !dbg !4370
  br i1 %cmp17, label %if.end, label %land.lhs.true18, !dbg !4371

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %set_p = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 3, !dbg !4372
  %6 = load i32, i32* %set_p, align 8, !dbg !4372
  %tobool = icmp eq i32 %6, 0, !dbg !4373
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4374
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !4374
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !4374
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4375

cond.true:                                        ; preds = %land.lhs.true18
  %call23 = tail call fastcc zeroext i8 @gcse_constant_p(%struct.rtx_def* %7) #7, !dbg !4376
  %tobool24 = icmp eq i8 %call23, 0, !dbg !4376
  br i1 %tobool24, label %if.end, label %if.then31, !dbg !4373

cond.false:                                       ; preds = %land.lhs.true18
  %call29 = tail call fastcc i32 @want_to_gcse_p(%struct.rtx_def* %7) #7, !dbg !4377
  %tobool30 = icmp eq i32 %call29, 0, !dbg !4377
  br i1 %tobool30, label %if.end, label %if.then31, !dbg !4375

if.then31:                                        ; preds = %cond.true, %cond.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !4378
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !4333, metadata !DIExpression()), !dbg !4352
  %call36 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %2, %struct.rtx_def* %8) #6, !dbg !4379
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !4330, metadata !DIExpression()), !dbg !4352
  br label %if.end, !dbg !4380

if.end:                                           ; preds = %cond.true, %cond.false, %if.then8, %if.then31, %land.lhs.true14, %land.lhs.true
  %src.0 = phi %struct.rtx_def* [ %1, %land.lhs.true14 ], [ %8, %if.then31 ], [ %1, %cond.true ], [ %1, %cond.false ], [ %1, %land.lhs.true ], [ %1, %if.then8 ], !dbg !4352
  %pat.addr.0 = phi %struct.rtx_def* [ %pat, %land.lhs.true14 ], [ %call36, %if.then31 ], [ %pat, %cond.true ], [ %pat, %cond.false ], [ %pat, %land.lhs.true ], [ %pat, %if.then8 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.addr.0, metadata !4330, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0, metadata !4333, metadata !DIExpression()), !dbg !4352
  %set_p37 = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 3, !dbg !4381
  %9 = load i32, i32* %set_p37, align 8, !dbg !4381
  %tobool38 = icmp eq i32 %9, 0, !dbg !4382
  %cmp40 = icmp ugt i32 %call, 52, !dbg !4383
  %or.cond = and i1 %tobool38, %cmp40, !dbg !4384
  br i1 %or.cond, label %land.lhs.true42, label %if.else87, !dbg !4384

land.lhs.true42:                                  ; preds = %if.end
  %bf.load43 = load i32, i32* %4, align 8, !dbg !4385
  %bf.lshr44 = lshr i32 %bf.load43, 16, !dbg !4385
  %bf.clear45 = and i32 %bf.lshr44, 255, !dbg !4385
  %call46 = tail call zeroext i8 @can_copy_p(i32 %bf.clear45) #7, !dbg !4386
  %tobool48 = icmp eq i8 %call46, 0, !dbg !4386
  br i1 %tobool48, label %if.else87, label %land.lhs.true49, !dbg !4387

land.lhs.true49:                                  ; preds = %land.lhs.true42
  %call50 = tail call zeroext i8 @can_throw_internal(%struct.rtx_def* %insn) #6, !dbg !4388
  %tobool51 = icmp eq i8 %call50, 0, !dbg !4388
  br i1 %tobool51, label %land.lhs.true52, label %if.else87, !dbg !4389

land.lhs.true52:                                  ; preds = %land.lhs.true49
  %call53 = tail call fastcc i32 @want_to_gcse_p(%struct.rtx_def* %src.0) #7, !dbg !4390
  %tobool54 = icmp eq i32 %call53, 0, !dbg !4390
  br i1 %tobool54, label %if.else87, label %land.lhs.true55, !dbg !4391

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %call56 = tail call i32 @set_noop_p(%struct.rtx_def* %pat.addr.0) #6, !dbg !4392
  %tobool57 = icmp eq i32 %call56, 0, !dbg !4392
  br i1 %tobool57, label %land.lhs.true58, label %if.else87, !dbg !4393

land.lhs.true58:                                  ; preds = %land.lhs.true55
  br i1 %cmp10, label %if.then69, label %lor.lhs.false, !dbg !4394

lor.lhs.false:                                    ; preds = %land.lhs.true58
  %arrayidx63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4395
  %10 = bitcast %union.rtunion_def* %arrayidx63 to i32**, !dbg !4395
  %11 = load i32*, i32** %10, align 8, !dbg !4395
  %bf.load65 = load i32, i32* %11, align 8, !dbg !4395
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !4395
  %cmp67 = icmp eq i32 %bf.clear66, 43, !dbg !4395
  br i1 %cmp67, label %if.else87, label %if.then69, !dbg !4396

if.then69:                                        ; preds = %lor.lhs.false, %land.lhs.true58
  %call70 = tail call fastcc i32 @oprs_anticipatable_p(%struct.rtx_def* %src.0, %struct.rtx_def* %insn) #7, !dbg !4397
  %tobool71 = icmp eq i32 %call70, 0, !dbg !4397
  br i1 %tobool71, label %land.end, label %land.rhs, !dbg !4398

land.rhs:                                         ; preds = %if.then69
  %call72 = tail call i32 @multiple_sets(%struct.rtx_def* %insn) #6, !dbg !4399
  %tobool73 = icmp eq i32 %call72, 0, !dbg !4400
  %phitmp3 = zext i1 %tobool73 to i32
  br label %land.end

land.end:                                         ; preds = %if.then69, %land.rhs
  %12 = phi i32 [ 0, %if.then69 ], [ %phitmp3, %land.rhs ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4341, metadata !DIExpression()), !dbg !4401
  %call74 = tail call fastcc i32 @oprs_available_p(%struct.rtx_def* %src.0, %struct.rtx_def* %insn) #7, !dbg !4402
  %tobool75 = icmp eq i32 %call74, 0, !dbg !4402
  br i1 %tobool75, label %land.end82, label %land.rhs76, !dbg !4403

land.rhs76:                                       ; preds = %land.end
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4404
  %bf.load77 = load i32, i32* %13, align 8, !dbg !4404
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !4404
  %cmp79 = icmp ne i32 %bf.clear78, 9, !dbg !4404
  %phitmp4 = zext i1 %cmp79 to i32
  br label %land.end82

land.end82:                                       ; preds = %land.end, %land.rhs76
  %14 = phi i32 [ 0, %land.end ], [ %phitmp4, %land.rhs76 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4344, metadata !DIExpression()), !dbg !4401
  %bf.load84 = load i32, i32* %4, align 8, !dbg !4405
  %bf.lshr85 = lshr i32 %bf.load84, 16, !dbg !4405
  %bf.clear86 = and i32 %bf.lshr85, 255, !dbg !4405
  tail call fastcc void @insert_expr_in_table(%struct.rtx_def* %src.0, i32 %bf.clear86, %struct.rtx_def* %insn, i32 %12, i32 %14, %struct.hash_table_d* %table) #7, !dbg !4406
  br label %if.end212, !dbg !4407

if.else87:                                        ; preds = %land.lhs.true55, %land.lhs.true52, %land.lhs.true49, %land.lhs.true42, %if.end, %lor.lhs.false
  %15 = load i32, i32* %set_p37, align 8, !dbg !4408
  %tobool89 = icmp ne i32 %15, 0, !dbg !4410
  %or.cond1 = and i1 %tobool89, %cmp40, !dbg !4411
  br i1 %or.cond1, label %land.lhs.true93, label %if.end212, !dbg !4411

land.lhs.true93:                                  ; preds = %if.else87
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.0, i64 0, i32 0, !dbg !4412
  %bf.load94 = load i32, i32* %16, align 8, !dbg !4412
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !4412
  %cmp96 = icmp eq i32 %bf.clear95, 37, !dbg !4412
  br i1 %cmp96, label %land.lhs.true98, label %lor.lhs.false113, !dbg !4413

land.lhs.true98:                                  ; preds = %land.lhs.true93
  %call99 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %src.0) #7, !dbg !4414
  %cmp100 = icmp ugt i32 %call99, 52, !dbg !4415
  br i1 %cmp100, label %land.lhs.true102, label %lor.lhs.false113, !dbg !4416

land.lhs.true102:                                 ; preds = %land.lhs.true98
  %bf.load103 = load i32, i32* %4, align 8, !dbg !4417
  %bf.lshr104 = lshr i32 %bf.load103, 16, !dbg !4417
  %bf.clear105 = and i32 %bf.lshr104, 255, !dbg !4417
  %call106 = tail call zeroext i8 @can_copy_p(i32 %bf.clear105) #7, !dbg !4418
  %tobool108 = icmp eq i8 %call106, 0, !dbg !4418
  br i1 %tobool108, label %lor.lhs.false113, label %land.lhs.true109, !dbg !4419

land.lhs.true109:                                 ; preds = %land.lhs.true102
  %call110 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %src.0) #7, !dbg !4420
  %cmp111 = icmp eq i32 %call110, %call, !dbg !4421
  br i1 %cmp111, label %lor.lhs.false113, label %land.lhs.true117, !dbg !4422

lor.lhs.false113:                                 ; preds = %land.lhs.true109, %land.lhs.true102, %land.lhs.true98, %land.lhs.true93
  %call114 = tail call fastcc zeroext i8 @gcse_constant_p(%struct.rtx_def* %src.0) #7, !dbg !4423
  %tobool116 = icmp eq i8 %call114, 0, !dbg !4423
  br i1 %tobool116, label %if.end212, label %land.lhs.true117, !dbg !4424

land.lhs.true117:                                 ; preds = %land.lhs.true109, %lor.lhs.false113
  %arrayidx120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4425
  %rt_bb = bitcast %struct.object_block** %arrayidx120 to %struct.basic_block_def**, !dbg !4425
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4425
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 7, !dbg !4425
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4425
  %18 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4425
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %18, i64 0, i32 1, !dbg !4425
  %19 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4425
  %cmp121 = icmp eq %struct.rtx_def* %19, %insn, !dbg !4426
  br i1 %cmp121, label %if.then141, label %lor.lhs.false123, !dbg !4427

lor.lhs.false123:                                 ; preds = %land.lhs.true117
  %call124 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn) #6, !dbg !4428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call124, metadata !4340, metadata !DIExpression()), !dbg !4362
  %cmp125 = icmp eq %struct.rtx_def* %call124, null, !dbg !4429
  br i1 %cmp125, label %if.then141, label %lor.lhs.false127, !dbg !4430

lor.lhs.false127:                                 ; preds = %lor.lhs.false123
  %arrayidx130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call124, i64 0, i32 1, i32 0, i32 1, !dbg !4431
  %rt_bb131 = bitcast %struct.object_block** %arrayidx130 to %struct.basic_block_def**, !dbg !4431
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb131, align 8, !dbg !4431
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4432
  %cmp136 = icmp eq %struct.basic_block_def* %20, %21, !dbg !4433
  br i1 %cmp136, label %lor.lhs.false138, label %if.then141, !dbg !4434

lor.lhs.false138:                                 ; preds = %lor.lhs.false127
  %call139 = tail call fastcc i32 @oprs_available_p(%struct.rtx_def* %pat.addr.0, %struct.rtx_def* nonnull %call124) #7, !dbg !4435
  %tobool140 = icmp eq i32 %call139, 0, !dbg !4435
  br i1 %tobool140, label %if.end212, label %if.then141, !dbg !4436

if.then141:                                       ; preds = %lor.lhs.false138, %lor.lhs.false127, %lor.lhs.false123, %land.lhs.true117
  tail call fastcc void @insert_set_in_table(%struct.rtx_def* %pat.addr.0, %struct.rtx_def* %insn, %struct.hash_table_d* %table) #7, !dbg !4437
  br label %if.end212, !dbg !4437

if.else144:                                       ; preds = %if.else
  %22 = load i32, i32* @flag_gcse_las, align 4, !dbg !4438
  %tobool145 = icmp eq i32 %22, 0, !dbg !4438
  br i1 %tobool145, label %if.end212, label %land.lhs.true146, !dbg !4439

land.lhs.true146:                                 ; preds = %if.else144
  %cmp149 = icmp eq i32 %bf.clear, 37, !dbg !4440
  br i1 %cmp149, label %land.lhs.true151, label %if.end212, !dbg !4441

land.lhs.true151:                                 ; preds = %land.lhs.true146
  %cmp154 = icmp eq i32 %bf.clear6, 43, !dbg !4442
  br i1 %cmp154, label %if.then156, label %if.end212, !dbg !4443

if.then156:                                       ; preds = %land.lhs.true151
  %call158 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %1) #7, !dbg !4444
  call void @llvm.dbg.value(metadata i32 %call158, metadata !4345, metadata !DIExpression()), !dbg !4445
  %set_p159 = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 3, !dbg !4446
  %23 = load i32, i32* %set_p159, align 8, !dbg !4446
  %tobool160 = icmp eq i32 %23, 0, !dbg !4447
  %cmp162 = icmp ugt i32 %call158, 52, !dbg !4448
  %or.cond2 = and i1 %tobool160, %cmp162, !dbg !4449
  br i1 %or.cond2, label %land.lhs.true164, label %if.end212, !dbg !4449

land.lhs.true164:                                 ; preds = %if.then156
  %bf.load165 = load i32, i32* %3, align 8, !dbg !4450
  %bf.lshr166 = lshr i32 %bf.load165, 16, !dbg !4450
  %bf.clear167 = and i32 %bf.lshr166, 255, !dbg !4450
  %call168 = tail call zeroext i8 @can_copy_p(i32 %bf.clear167) #7, !dbg !4451
  %tobool170 = icmp eq i8 %call168, 0, !dbg !4451
  br i1 %tobool170, label %if.end212, label %land.lhs.true171, !dbg !4452

land.lhs.true171:                                 ; preds = %land.lhs.true164
  %call172 = tail call zeroext i8 @can_throw_internal(%struct.rtx_def* %insn) #6, !dbg !4453
  %tobool173 = icmp eq i8 %call172, 0, !dbg !4453
  br i1 %tobool173, label %land.lhs.true174, label %if.end212, !dbg !4454

land.lhs.true174:                                 ; preds = %land.lhs.true171
  %call175 = tail call fastcc i32 @want_to_gcse_p(%struct.rtx_def* %2) #7, !dbg !4455
  %tobool176 = icmp eq i32 %call175, 0, !dbg !4455
  br i1 %tobool176, label %if.end212, label %land.lhs.true177, !dbg !4456

land.lhs.true177:                                 ; preds = %land.lhs.true174
  %call178 = tail call i32 @set_noop_p(%struct.rtx_def* %pat) #6, !dbg !4457
  %tobool179 = icmp eq i32 %call178, 0, !dbg !4457
  br i1 %tobool179, label %land.lhs.true180, label %if.end212, !dbg !4458

land.lhs.true180:                                 ; preds = %land.lhs.true177
  %call181 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 3, %struct.rtx_def* null) #6, !dbg !4459
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call181, metadata !4335, metadata !DIExpression()), !dbg !4352
  %cmp182 = icmp eq %struct.rtx_def* %call181, null, !dbg !4460
  br i1 %cmp182, label %if.then193, label %lor.lhs.false184, !dbg !4461

lor.lhs.false184:                                 ; preds = %land.lhs.true180
  %arrayidx187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call181, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4462
  %24 = bitcast %union.rtunion_def* %arrayidx187 to i32**, !dbg !4462
  %25 = load i32*, i32** %24, align 8, !dbg !4462
  %bf.load189 = load i32, i32* %25, align 8, !dbg !4462
  %bf.clear190 = and i32 %bf.load189, 65535, !dbg !4462
  %cmp191 = icmp eq i32 %bf.clear190, 43, !dbg !4462
  br i1 %cmp191, label %if.end212, label %if.then193, !dbg !4463

if.then193:                                       ; preds = %lor.lhs.false184, %land.lhs.true180
  call void @llvm.dbg.value(metadata i32 0, metadata !4348, metadata !DIExpression()), !dbg !4464
  %call196 = tail call fastcc i32 @oprs_available_p(%struct.rtx_def* %2, %struct.rtx_def* %insn) #7, !dbg !4465
  %tobool197 = icmp eq i32 %call196, 0, !dbg !4465
  br i1 %tobool197, label %land.end204, label %land.rhs198, !dbg !4466

land.rhs198:                                      ; preds = %if.then193
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4467
  %bf.load199 = load i32, i32* %26, align 8, !dbg !4467
  %bf.clear200 = and i32 %bf.load199, 65535, !dbg !4467
  %cmp201 = icmp ne i32 %bf.clear200, 9, !dbg !4467
  %phitmp = zext i1 %cmp201 to i32
  br label %land.end204

land.end204:                                      ; preds = %if.then193, %land.rhs198
  %27 = phi i32 [ 0, %if.then193 ], [ %phitmp, %land.rhs198 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !4351, metadata !DIExpression()), !dbg !4464
  %bf.load206 = load i32, i32* %4, align 8, !dbg !4468
  %bf.lshr207 = lshr i32 %bf.load206, 16, !dbg !4468
  %bf.clear208 = and i32 %bf.lshr207, 255, !dbg !4468
  tail call fastcc void @insert_expr_in_table(%struct.rtx_def* %2, i32 %bf.clear208, %struct.rtx_def* %insn, i32 0, i32 %27, %struct.hash_table_d* %table) #7, !dbg !4469
  br label %if.end212, !dbg !4470

if.end212:                                        ; preds = %lor.lhs.false138, %lor.lhs.false113, %land.lhs.true177, %land.lhs.true174, %land.lhs.true171, %land.lhs.true164, %if.else144, %if.else87, %if.then141, %land.end82, %lor.lhs.false184, %land.end204, %if.then156, %land.lhs.true151, %land.lhs.true146, %if.then
  ret void, !dbg !4471
}

; Function Attrs: nounwind uwtable
define internal fastcc void @hash_scan_insn(%struct.rtx_def* %insn, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !4472 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4476, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !4477, metadata !DIExpression()), !dbg !4486
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4487
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4487
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !4487
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4487
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4478, metadata !DIExpression()), !dbg !4486
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !4488
  %bf.load = load i32, i32* %2, align 8, !dbg !4488
  %bf.clear = and i32 %bf.load, 65535, !dbg !4488
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !4489
  br i1 %cmp, label %if.then, label %if.else, !dbg !4490

if.then:                                          ; preds = %entry
  tail call fastcc void @hash_scan_set(%struct.rtx_def* %1, %struct.rtx_def* %insn, %struct.hash_table_d* %table) #7, !dbg !4491
  br label %if.end43, !dbg !4491

if.else:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 15, !dbg !4492
  br i1 %cmp3, label %for.cond.preheader, label %if.else30, !dbg !4493

for.cond.preheader:                               ; preds = %if.else
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4494
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtvec_def**, !dbg !4494
  br label %for.cond, !dbg !4495

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4496
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4479, metadata !DIExpression()), !dbg !4486
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4497
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 0, !dbg !4497
  %4 = load i32, i32* %num_elem, align 8, !dbg !4497
  %5 = sext i32 %4 to i64, !dbg !4498
  %cmp8 = icmp slt i64 %indvars.iv, %5, !dbg !4498
  br i1 %cmp8, label %for.body, label %if.end43.loopexit, !dbg !4495

for.body:                                         ; preds = %for.cond
  %arrayidx13 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv, !dbg !4499
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx13, align 8, !dbg !4499
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4480, metadata !DIExpression()), !dbg !4500
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !4501
  %bf.load14 = load i32, i32* %7, align 8, !dbg !4501
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !4501
  %cmp16 = icmp eq i32 %bf.clear15, 23, !dbg !4503
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !4504

if.then17:                                        ; preds = %for.body
  tail call fastcc void @hash_scan_set(%struct.rtx_def* %6, %struct.rtx_def* %insn, %struct.hash_table_d* %table) #7, !dbg !4505
  br label %for.inc, !dbg !4505

if.else18:                                        ; preds = %for.body
  %cmp21 = icmp eq i32 %bf.clear15, 25, !dbg !4506
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !4508

if.then22:                                        ; preds = %if.else18
  tail call fastcc void @hash_scan_clobber(%struct.rtx_def* %6, %struct.rtx_def* %insn, %struct.hash_table_d* %table) #7, !dbg !4509
  br label %for.inc, !dbg !4509

if.else23:                                        ; preds = %if.else18
  %cmp26 = icmp eq i32 %bf.clear15, 26, !dbg !4510
  br i1 %cmp26, label %if.then27, label %for.inc, !dbg !4512

if.then27:                                        ; preds = %if.else23
  tail call fastcc void @hash_scan_call(%struct.rtx_def* %6, %struct.rtx_def* %insn, %struct.hash_table_d* %table) #7, !dbg !4513
  br label %for.inc, !dbg !4513

for.inc:                                          ; preds = %if.then17, %if.else23, %if.then27, %if.then22
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4514
  call void @llvm.dbg.value(metadata i32 undef, metadata !4479, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4486
  br label %for.cond, !dbg !4515, !llvm.loop !4516

if.else30:                                        ; preds = %if.else
  %cmp33 = icmp eq i32 %bf.clear, 25, !dbg !4518
  br i1 %cmp33, label %if.then34, label %if.else35, !dbg !4520

if.then34:                                        ; preds = %if.else30
  tail call fastcc void @hash_scan_clobber(%struct.rtx_def* %1, %struct.rtx_def* %insn, %struct.hash_table_d* %table) #7, !dbg !4521
  br label %if.end43, !dbg !4521

if.else35:                                        ; preds = %if.else30
  %cmp38 = icmp eq i32 %bf.clear, 26, !dbg !4522
  br i1 %cmp38, label %if.then39, label %if.end43, !dbg !4524

if.then39:                                        ; preds = %if.else35
  tail call fastcc void @hash_scan_call(%struct.rtx_def* %1, %struct.rtx_def* %insn, %struct.hash_table_d* %table) #7, !dbg !4525
  br label %if.end43, !dbg !4525

if.end43.loopexit:                                ; preds = %for.cond
  br label %if.end43, !dbg !4526

if.end43:                                         ; preds = %if.end43.loopexit, %if.else35, %if.then39, %if.then34, %if.then
  ret void, !dbg !4526
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !4527 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4535, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !4536, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 0, metadata !4537, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4538, metadata !DIExpression()), !dbg !4539
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !4540
  %1 = load i64, i64* %0, align 8, !dbg !4540
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4541
  store i64 %1, i64* %2, align 8, !dbg !4541
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4542
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4543
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4544
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !4547
  br label %while.body, !dbg !4547

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !4548
  br i1 %tobool, label %if.then, label %if.end, !dbg !4549

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !4550
  br label %while.end, !dbg !4552

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !4553

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !4547, !llvm.loop !4554

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !4556

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !4556
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !4558
  %7 = load i32, i32* %indx9, align 8, !dbg !4558
  %cmp11 = icmp eq i32 %7, 0, !dbg !4559
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !4560

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !4561
  %8 = load i32, i32* %indx14, align 8, !dbg !4561
  %mul = shl i32 %8, 7, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4537, metadata !DIExpression()), !dbg !4539
  br label %if.end15, !dbg !4563

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !4537, metadata !DIExpression()), !dbg !4539
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4564
  store i32 0, i32* %word_no, align 8, !dbg !4565
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !4566
  %9 = load i64, i64* %arrayidx, align 8, !dbg !4566
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4567
  store i64 %9, i64* %bits21, align 8, !dbg !4568
  %tobool23 = icmp eq i64 %9, 0, !dbg !4569
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !4569
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %add, metadata !4537, metadata !DIExpression()), !dbg !4539
  store i32 %add, i32* %bit_no, align 4, !dbg !4571
  ret void, !dbg !4572
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4573 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4577, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4578, metadata !DIExpression()), !dbg !4582
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4583
  %0 = load i64, i64* %bits, align 8, !dbg !4583
  %tobool = icmp eq i64 %0, 0, !dbg !4584
  br i1 %tobool, label %if.end, label %next_bit, !dbg !4585

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !4586
  br label %next_bit, !dbg !4589

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !4579), !dbg !4590
  br label %while.cond, !dbg !4589

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !4591
  %and = and i64 %2, 1, !dbg !4592
  %tobool2 = icmp eq i64 %and, 0, !dbg !4593
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !4589

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !4594
  store i64 %shr, i64* %bits, align 8, !dbg !4594
  %3 = load i32, i32* %bit_no, align 4, !dbg !4596
  %add = add i32 %3, 1, !dbg !4596
  store i32 %add, i32* %bit_no, align 4, !dbg !4596
  %.pre = load i64, i64* %bits, align 8, !dbg !4591
  br label %while.cond, !dbg !4589, !llvm.loop !4597

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !4599
  %sub = add i32 %4, 63, !dbg !4600
  %div = and i32 %sub, -64, !dbg !4601
  store i32 %div, i32* %bit_no, align 4, !dbg !4602
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4603
  %5 = load i32, i32* %word_no, align 8, !dbg !4604
  %inc = add i32 %5, 1, !dbg !4604
  store i32 %inc, i32* %word_no, align 8, !dbg !4604
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4605
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4605
  br label %while.body6, !dbg !4606

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !4607

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !4608
  %cmp = icmp eq i32 %8, 2, !dbg !4609
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4605
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !4607

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !4586
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !4586
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4586
  store i64 %10, i64* %bits, align 8, !dbg !4610
  %tobool14 = icmp eq i64 %10, 0, !dbg !4611
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !4613

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !4614
  %add17 = add i32 %11, 64, !dbg !4614
  store i32 %add17, i32* %bit_no, align 4, !dbg !4614
  %12 = load i32, i32* %word_no, align 8, !dbg !4615
  %inc19 = add i32 %12, 1, !dbg !4615
  store i32 %inc19, i32* %word_no, align 8, !dbg !4615
  br label %while.cond7, !dbg !4607, !llvm.loop !4616

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !4605
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !4618
  %14 = load i64, i64* %13, align 8, !dbg !4618
  store i64 %14, i64* %6, align 8, !dbg !4619
  %tobool24 = icmp eq i64 %14, 0, !dbg !4620
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !4622

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !4622
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4623
  %16 = load i32, i32* %indx, align 8, !dbg !4623
  %mul28 = shl i32 %16, 7, !dbg !4624
  store i32 %mul28, i32* %bit_no, align 4, !dbg !4625
  store i32 0, i32* %word_no, align 8, !dbg !4626
  br label %while.body6, !dbg !4606, !llvm.loop !4627

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !4629

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !4629

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !4582
  ret i8 %retval.0, !dbg !4629
}

declare dso_local void @free_INSN_LIST_list(%struct.rtx_def**) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @free_insn_expr_list_list(%struct.rtx_def** %listp) unnamed_addr #4 !dbg !4630 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %listp, metadata !4634, metadata !DIExpression()), !dbg !4637
  %0 = load %struct.rtx_def*, %struct.rtx_def** %listp, align 8, !dbg !4638
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4635, metadata !DIExpression()), !dbg !4637
  br label %for.cond, !dbg !4640

for.cond:                                         ; preds = %for.inc, %entry
  %list.0 = phi %struct.rtx_def* [ %0, %entry ], [ %2, %for.inc ], !dbg !4641
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.0, metadata !4635, metadata !DIExpression()), !dbg !4637
  %tobool = icmp eq %struct.rtx_def* %list.0, null, !dbg !4642
  br i1 %tobool, label %for.end, label %for.body, !dbg !4642

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4643
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4643
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4643
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4636, metadata !DIExpression()), !dbg !4637
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 0, !dbg !4646
  %bf.load = load i32, i32* %3, align 8, !dbg !4646
  %bf.clear = and i32 %bf.load, 65535, !dbg !4646
  %cmp = icmp eq i32 %bf.clear, 3, !dbg !4648
  br i1 %cmp, label %if.then, label %if.else, !dbg !4649

if.then:                                          ; preds = %for.body
  tail call void @free_EXPR_LIST_node(%struct.rtx_def* nonnull %list.0) #6, !dbg !4650
  br label %for.inc, !dbg !4650

if.else:                                          ; preds = %for.body
  tail call void @free_INSN_LIST_node(%struct.rtx_def* nonnull %list.0) #6, !dbg !4651
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !4635, metadata !DIExpression()), !dbg !4637
  br label %for.cond, !dbg !4652, !llvm.loop !4653

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %listp, align 8, !dbg !4655
  ret void, !dbg !4656
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4657 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4661, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4662, metadata !DIExpression()), !dbg !4663
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4664
  %0 = load i64, i64* %bits, align 8, !dbg !4665
  %shr = lshr i64 %0, 1, !dbg !4665
  store i64 %shr, i64* %bits, align 8, !dbg !4665
  %1 = load i32, i32* %bit_no, align 4, !dbg !4666
  %add = add i32 %1, 1, !dbg !4666
  store i32 %add, i32* %bit_no, align 4, !dbg !4666
  ret void, !dbg !4667
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @free_EXPR_LIST_node(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @free_INSN_LIST_node(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @record_last_mem_set_info(%struct.rtx_def* %insn) unnamed_addr #4 !dbg !4668 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4670, metadata !DIExpression()), !dbg !4672
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4673
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !4673
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4673
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !4674
  %1 = load i32, i32* %index, align 8, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %1, metadata !4671, metadata !DIExpression()), !dbg !4672
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @modify_mem_list, align 8, !dbg !4675
  %idxprom = sext i32 %1 to i64, !dbg !4675
  %arrayidx1 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !4675
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1, align 8, !dbg !4675
  %call = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %3) #6, !dbg !4676
  %4 = load %struct.rtx_def**, %struct.rtx_def*** @modify_mem_list, align 8, !dbg !4677
  %arrayidx3 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %4, i64 %idxprom, !dbg !4677
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx3, align 8, !dbg !4678
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @modify_mem_list_set, align 8, !dbg !4679
  %call4 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 %1) #6, !dbg !4680
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4681
  %bf.load = load i32, i32* %6, align 8, !dbg !4681
  %bf.clear = and i32 %bf.load, 65535, !dbg !4681
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !4681
  br i1 %cmp, label %if.then, label %if.else, !dbg !4683

if.then:                                          ; preds = %entry
  %7 = load %struct.rtx_def**, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !4684
  %arrayidx6 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom, !dbg !4684
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8, !dbg !4684
  %call7 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %8) #6, !dbg !4686
  %9 = load %struct.rtx_def**, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !4687
  %arrayidx9 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %9, i64 %idxprom, !dbg !4687
  store %struct.rtx_def* %call7, %struct.rtx_def** %arrayidx9, align 8, !dbg !4688
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_calls, align 8, !dbg !4689
  %call10 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %10, i32 %1) #6, !dbg !4690
  br label %if.end, !dbg !4691

if.else:                                          ; preds = %entry
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4692
  %11 = getelementptr inbounds %union.u, %union.u* %u11, i64 1, i32 0, i32 0, i64 0, !dbg !4692
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4692
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4692
  %13 = bitcast %struct.rtx_def* %insn to i8*, !dbg !4693
  tail call void @note_stores(%struct.rtx_def* %12, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @canon_list_insert, i8* %13) #6, !dbg !4694
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4695
}

declare dso_local %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @canon_list_insert(%struct.rtx_def* %dest, %struct.rtx_def* %unused1, i8* %v_insn) #4 !dbg !4696 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !4698, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %unused1, metadata !4699, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata i8* %v_insn, metadata !4700, metadata !DIExpression()), !dbg !4704
  br label %while.cond, !dbg !4705

while.cond:                                       ; preds = %while.body, %entry
  %dest.addr.0 = phi %struct.rtx_def* [ %dest, %entry ], [ %1, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0, metadata !4698, metadata !DIExpression()), !dbg !4704
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.addr.0, i64 0, i32 0, !dbg !4706
  %bf.load = load i32, i32* %0, align 8, !dbg !4706
  %bf.clear = and i32 %bf.load, 65535, !dbg !4706
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !4707
  br i1 %cmp, label %while.body, label %lor.lhs.false, !dbg !4708

lor.lhs.false:                                    ; preds = %while.cond
  %cmp3 = icmp eq i32 %bf.clear, 120, !dbg !4709
  %cmp6 = icmp eq i32 %bf.clear, 40, !dbg !4710
  %or.cond = or i1 %cmp3, %cmp6, !dbg !4711
  br i1 %or.cond, label %while.body, label %while.end, !dbg !4711

while.body:                                       ; preds = %while.cond, %lor.lhs.false
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4712
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4712
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4712
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4698, metadata !DIExpression()), !dbg !4704
  br label %while.cond, !dbg !4705, !llvm.loop !4713

while.end:                                        ; preds = %lor.lhs.false
  %dest.addr.0.lcssa = phi %struct.rtx_def* [ %dest.addr.0, %lor.lhs.false ]
  %bf.clear.lcssa = phi i32 [ %bf.clear, %lor.lhs.false ], !dbg !4706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0.lcssa, metadata !4698, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0.lcssa, metadata !4698, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0.lcssa, metadata !4698, metadata !DIExpression()), !dbg !4704
  %cmp9 = icmp eq i32 %bf.clear.lcssa, 43, !dbg !4714
  br i1 %cmp9, label %if.end, label %cleanup.cont, !dbg !4716

if.end:                                           ; preds = %while.end
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.addr.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4717
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !4717
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !4717
  %call = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %2) #6, !dbg !4718
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4701, metadata !DIExpression()), !dbg !4704
  %call14 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %call) #6, !dbg !4719
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !4701, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata i8* %v_insn, metadata !4702, metadata !DIExpression()), !dbg !4704
  %arrayidx17 = getelementptr inbounds i8, i8* %v_insn, i64 32, !dbg !4720
  %rt_bb = bitcast i8* %arrayidx17 to %struct.basic_block_def**, !dbg !4720
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4720
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !4721
  %4 = load i32, i32* %index, align 8, !dbg !4721
  call void @llvm.dbg.value(metadata i32 %4, metadata !4703, metadata !DIExpression()), !dbg !4704
  %5 = load %struct.rtx_def**, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !4722
  %idxprom = sext i32 %4 to i64, !dbg !4722
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %5, i64 %idxprom, !dbg !4722
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !4722
  %call19 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call14, %struct.rtx_def* %6) #6, !dbg !4723
  %7 = load %struct.rtx_def**, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !4724
  %arrayidx21 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom, !dbg !4724
  store %struct.rtx_def* %call19, %struct.rtx_def** %arrayidx21, align 8, !dbg !4725
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !4726
  %arrayidx23 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom, !dbg !4726
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx23, align 8, !dbg !4726
  %call24 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %dest.addr.0.lcssa, %struct.rtx_def* %9) #6, !dbg !4727
  %10 = load %struct.rtx_def**, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !4728
  %arrayidx26 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %idxprom, !dbg !4728
  store %struct.rtx_def* %call24, %struct.rtx_def** %arrayidx26, align 8, !dbg !4729
  br label %cleanup.cont, !dbg !4730

cleanup.cont:                                     ; preds = %if.end, %while.end
  ret void, !dbg !4730
}

declare dso_local %struct.rtx_def* @get_addr(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @canon_rtx(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @push_operand(%struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @hash_scan_call(%struct.rtx_def* %x, %struct.rtx_def* %insn, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !4731 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4733, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4734, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !4735, metadata !DIExpression()), !dbg !4736
  ret void, !dbg !4737
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @want_to_gcse_p(%struct.rtx_def* %x) unnamed_addr #4 !dbg !4738 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4740, metadata !DIExpression()), !dbg !4741
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4742
  %bf.load = load i32, i32* %0, align 8, !dbg !4742
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4742
  %cmp = icmp eq i32 %bf.clear, 2490368, !dbg !4742
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false4, !dbg !4742

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @ix86_isa_flags, align 4, !dbg !4742
  %and = and i32 %1, 65536, !dbg !4742
  %cmp1 = icmp eq i32 %and, 0, !dbg !4742
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !4742

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load i32, i32* @ix86_fpmath, align 4, !dbg !4742
  %and2 = and i32 %2, 2, !dbg !4742
  %cmp3 = icmp eq i32 %and2, 0, !dbg !4742
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !4742

lor.lhs.false4:                                   ; preds = %lor.lhs.false, %entry
  %cmp8 = icmp eq i32 %bf.clear, 2555904, !dbg !4742
  br i1 %cmp8, label %land.lhs.true9, label %lor.lhs.false15, !dbg !4742

land.lhs.true9:                                   ; preds = %lor.lhs.false4
  %3 = load i32, i32* @ix86_isa_flags, align 4, !dbg !4742
  %and10 = and i32 %3, 131072, !dbg !4742
  %cmp11 = icmp eq i32 %and10, 0, !dbg !4742
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !4742

lor.lhs.false12:                                  ; preds = %land.lhs.true9
  %4 = load i32, i32* @ix86_fpmath, align 4, !dbg !4742
  %and13 = and i32 %4, 2, !dbg !4742
  %cmp14 = icmp eq i32 %and13, 0, !dbg !4742
  br i1 %cmp14, label %if.then, label %lor.lhs.false15, !dbg !4742

lor.lhs.false15:                                  ; preds = %lor.lhs.false12, %lor.lhs.false4
  %cmp19 = icmp eq i32 %bf.clear, 2621440, !dbg !4742
  br i1 %cmp19, label %if.then, label %if.end, !dbg !4744

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true, %lor.lhs.false12, %land.lhs.true9, %lor.lhs.false15
  %call = tail call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %x) #6, !dbg !4745
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4740, metadata !DIExpression()), !dbg !4741
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4741
  %bf.load20.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4746
  br label %if.end, !dbg !4747

if.end:                                           ; preds = %if.then, %lor.lhs.false15
  %bf.load20 = phi i32 [ %bf.load20.pre, %if.then ], [ %bf.load, %lor.lhs.false15 ], !dbg !4746
  %x.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %x, %lor.lhs.false15 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !4740, metadata !DIExpression()), !dbg !4741
  %trunc = trunc i32 %bf.load20 to i16, !dbg !4748
  switch i16 %trunc, label %sw.default [
    i16 37, label %return
    i16 39, label %return
    i16 30, label %return
    i16 32, label %return
    i16 31, label %return
    i16 33, label %return
    i16 26, label %return
  ], !dbg !4748

sw.default:                                       ; preds = %if.end
  %call22 = tail call zeroext i8 @can_assign_to_reg_without_clobbers_p(%struct.rtx_def* %x.addr.0) #7, !dbg !4749
  %conv = zext i8 %call22 to i32, !dbg !4749
  br label %return, !dbg !4751

return:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.default
  %retval.0 = phi i32 [ %conv, %sw.default ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], !dbg !4752
  ret i32 %retval.0, !dbg !4753
}

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @set_noop_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @oprs_anticipatable_p(%struct.rtx_def* %x, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !4754 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4758, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4759, metadata !DIExpression()), !dbg !4760
  %call = tail call fastcc i32 @oprs_unchanged_p(%struct.rtx_def* %x, %struct.rtx_def* %insn, i32 0) #7, !dbg !4761
  ret i32 %call, !dbg !4762
}

declare dso_local i32 @multiple_sets(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @oprs_available_p(%struct.rtx_def* %x, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !4763 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4765, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4766, metadata !DIExpression()), !dbg !4767
  %call = tail call fastcc i32 @oprs_unchanged_p(%struct.rtx_def* %x, %struct.rtx_def* %insn, i32 1) #7, !dbg !4768
  ret i32 %call, !dbg !4769
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_expr_in_table(%struct.rtx_def* %x, i32 %mode, %struct.rtx_def* %insn, i32 %antic_p, i32 %avail_p, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !4770 {
entry:
  %do_not_record_p = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4774, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4775, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4776, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %antic_p, metadata !4777, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %avail_p, metadata !4778, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !4779, metadata !DIExpression()), !dbg !4787
  %0 = bitcast i32* %do_not_record_p to i8*, !dbg !4788
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4788
  call void @llvm.dbg.value(metadata %struct.expr* null, metadata !4784, metadata !DIExpression()), !dbg !4787
  %size = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 1, !dbg !4789
  %1 = load i32, i32* %size, align 8, !dbg !4789
  call void @llvm.dbg.value(metadata i32* %do_not_record_p, metadata !4781, metadata !DIExpression(DW_OP_deref)), !dbg !4787
  %call = call fastcc i32 @hash_expr(%struct.rtx_def* %x, i32 %mode, i32* nonnull %do_not_record_p, i32 %1) #7, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %call, metadata !4782, metadata !DIExpression()), !dbg !4787
  %2 = load i32, i32* %do_not_record_p, align 4, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %2, metadata !4781, metadata !DIExpression()), !dbg !4787
  %tobool = icmp eq i32 %2, 0, !dbg !4791
  br i1 %tobool, label %if.end, label %cleanup, !dbg !4793

if.end:                                           ; preds = %entry
  %table1 = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 0, !dbg !4794
  %3 = load %struct.expr**, %struct.expr*** %table1, align 8, !dbg !4794
  %idxprom = zext i32 %call to i64, !dbg !4795
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %3, i64 %idxprom, !dbg !4795
  call void @llvm.dbg.value(metadata i32 0, metadata !4780, metadata !DIExpression()), !dbg !4787
  br label %while.cond, !dbg !4796

while.cond:                                       ; preds = %while.body, %if.end
  %found.0 = phi i32 [ 0, %if.end ], [ %found.1, %while.body ], !dbg !4787
  %cur_expr.0.in = phi %struct.expr** [ %arrayidx, %if.end ], [ %next_same_hash, %while.body ]
  %last_expr.0 = phi %struct.expr* [ null, %if.end ], [ %cur_expr.0, %while.body ], !dbg !4787
  %cur_expr.0 = load %struct.expr*, %struct.expr** %cur_expr.0.in, align 8, !dbg !4787
  call void @llvm.dbg.value(metadata %struct.expr* %last_expr.0, metadata !4784, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata %struct.expr* %cur_expr.0, metadata !4783, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %found.0, metadata !4780, metadata !DIExpression()), !dbg !4787
  %tobool2 = icmp eq %struct.expr* %cur_expr.0, null, !dbg !4797
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !4798

land.rhs:                                         ; preds = %while.cond
  %expr = getelementptr inbounds %struct.expr, %struct.expr* %cur_expr.0, i64 0, i32 0, !dbg !4799
  %4 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !4799
  %call3 = call fastcc i32 @expr_equiv_p(%struct.rtx_def* %4, %struct.rtx_def* %x) #7, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %call3, metadata !4780, metadata !DIExpression()), !dbg !4787
  %cmp = icmp eq i32 %call3, 0, !dbg !4801
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %found.1 = phi i32 [ %call3, %land.rhs ], [ %found.0, %while.cond ], !dbg !4787
  %5 = phi i1 [ %cmp, %land.rhs ], [ false, %while.cond ], !dbg !4787
  call void @llvm.dbg.value(metadata i32 %found.1, metadata !4780, metadata !DIExpression()), !dbg !4787
  br i1 %5, label %while.body, label %while.end, !dbg !4796

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.value(metadata %struct.expr* %cur_expr.0, metadata !4784, metadata !DIExpression()), !dbg !4787
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %cur_expr.0, i64 0, i32 2, !dbg !4802
  br label %while.cond, !dbg !4796, !llvm.loop !4804

while.end:                                        ; preds = %land.end
  %found.1.lcssa = phi i32 [ %found.1, %land.end ], !dbg !4787
  %last_expr.0.lcssa = phi %struct.expr* [ %last_expr.0, %land.end ], !dbg !4787
  %cur_expr.0.lcssa = phi %struct.expr* [ %cur_expr.0, %land.end ], !dbg !4787
  call void @llvm.dbg.value(metadata i32 %found.1.lcssa, metadata !4780, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata %struct.expr* %last_expr.0.lcssa, metadata !4784, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %found.1.lcssa, metadata !4780, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata %struct.expr* %last_expr.0.lcssa, metadata !4784, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %found.1.lcssa, metadata !4780, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata %struct.expr* %last_expr.0.lcssa, metadata !4784, metadata !DIExpression()), !dbg !4787
  %tobool4 = icmp eq i32 %found.1.lcssa, 0, !dbg !4806
  br i1 %tobool4, label %if.then5, label %if.end23, !dbg !4808

if.then5:                                         ; preds = %while.end
  %call6 = call fastcc i8* @gcse_alloc(i64 48) #7, !dbg !4809
  %6 = bitcast i8* %call6 to %struct.expr*, !dbg !4809
  call void @llvm.dbg.value(metadata %struct.expr* %6, metadata !4783, metadata !DIExpression()), !dbg !4787
  %7 = load i32, i32* @bytes_used, align 4, !dbg !4811
  %add = add i32 %7, 48, !dbg !4811
  store i32 %add, i32* @bytes_used, align 4, !dbg !4811
  %8 = load %struct.expr**, %struct.expr*** %table1, align 8, !dbg !4812
  %arrayidx10 = getelementptr inbounds %struct.expr*, %struct.expr** %8, i64 %idxprom, !dbg !4814
  %9 = load %struct.expr*, %struct.expr** %arrayidx10, align 8, !dbg !4814
  %cmp11 = icmp eq %struct.expr* %9, null, !dbg !4815
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !4816

if.then13:                                        ; preds = %if.then5
  %10 = bitcast %struct.expr** %arrayidx10 to i8**, !dbg !4817
  store i8* %call6, i8** %10, align 8, !dbg !4817
  br label %if.end18, !dbg !4818

if.else:                                          ; preds = %if.then5
  %next_same_hash17 = getelementptr inbounds %struct.expr, %struct.expr* %last_expr.0.lcssa, i64 0, i32 2, !dbg !4819
  %11 = bitcast %struct.expr** %next_same_hash17 to i8**, !dbg !4820
  store i8* %call6, i8** %11, align 8, !dbg !4820
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then13
  %expr19 = bitcast i8* %call6 to %struct.rtx_def**, !dbg !4821
  store %struct.rtx_def* %x, %struct.rtx_def** %expr19, align 8, !dbg !4822
  %n_elems = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 2, !dbg !4823
  %12 = load i32, i32* %n_elems, align 4, !dbg !4824
  %inc = add i32 %12, 1, !dbg !4824
  store i32 %inc, i32* %n_elems, align 4, !dbg !4824
  %bitmap_index = getelementptr inbounds i8, i8* %call6, i64 8, !dbg !4825
  %13 = bitcast i8* %bitmap_index to i32*, !dbg !4825
  store i32 %12, i32* %13, align 8, !dbg !4826
  %next_same_hash20 = getelementptr inbounds i8, i8* %call6, i64 16, !dbg !4827
  %14 = bitcast i8* %next_same_hash20 to %struct.expr**, !dbg !4827
  store %struct.expr* null, %struct.expr** %14, align 8, !dbg !4828
  %antic_occr21 = getelementptr inbounds i8, i8* %call6, i64 24, !dbg !4829
  %15 = bitcast i8* %antic_occr21 to %struct.occr**, !dbg !4829
  store %struct.occr* null, %struct.occr** %15, align 8, !dbg !4830
  %avail_occr22 = getelementptr inbounds i8, i8* %call6, i64 32, !dbg !4831
  %16 = bitcast i8* %avail_occr22 to %struct.occr**, !dbg !4831
  store %struct.occr* null, %struct.occr** %16, align 8, !dbg !4832
  br label %if.end23, !dbg !4833

if.end23:                                         ; preds = %while.end, %if.end18
  %cur_expr.1 = phi %struct.expr* [ %cur_expr.0.lcssa, %while.end ], [ %6, %if.end18 ], !dbg !4787
  call void @llvm.dbg.value(metadata %struct.expr* %cur_expr.1, metadata !4783, metadata !DIExpression()), !dbg !4787
  %tobool24 = icmp eq i32 %antic_p, 0, !dbg !4834
  br i1 %tobool24, label %if.end49, label %if.then25, !dbg !4836

if.then25:                                        ; preds = %if.end23
  %antic_occr26 = getelementptr inbounds %struct.expr, %struct.expr* %cur_expr.1, i64 0, i32 3, !dbg !4837
  %17 = load %struct.occr*, %struct.occr** %antic_occr26, align 8, !dbg !4837
  call void @llvm.dbg.value(metadata %struct.occr* %17, metadata !4785, metadata !DIExpression()), !dbg !4787
  %tobool27 = icmp eq %struct.occr* %17, null, !dbg !4839
  br i1 %tobool27, label %if.end37, label %land.lhs.true, !dbg !4841

land.lhs.true:                                    ; preds = %if.then25
  %insn28 = getelementptr inbounds %struct.occr, %struct.occr* %17, i64 0, i32 1, !dbg !4842
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn28, align 8, !dbg !4842
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 1, !dbg !4842
  %rt_bb = bitcast %struct.object_block** %arrayidx29 to %struct.basic_block_def**, !dbg !4842
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4842
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4843
  %rt_bb33 = bitcast %struct.object_block** %arrayidx32 to %struct.basic_block_def**, !dbg !4843
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb33, align 8, !dbg !4843
  %cmp34 = icmp ne %struct.basic_block_def* %19, %20, !dbg !4844
  br label %if.end37, !dbg !4845

if.end37:                                         ; preds = %if.then25, %land.lhs.true
  %antic_occr.0 = phi i1 [ true, %if.then25 ], [ %cmp34, %land.lhs.true ]
  br i1 %antic_occr.0, label %if.else40, label %if.end49, !dbg !4846

if.else40:                                        ; preds = %if.end37
  %call41 = call fastcc i8* @gcse_alloc(i64 24) #7, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %call41, metadata !4785, metadata !DIExpression()), !dbg !4787
  %21 = load i32, i32* @bytes_used, align 4, !dbg !4850
  %add43 = add i32 %21, 24, !dbg !4850
  store i32 %add43, i32* @bytes_used, align 4, !dbg !4850
  %insn45 = getelementptr inbounds i8, i8* %call41, i64 8, !dbg !4851
  %22 = bitcast i8* %insn45 to %struct.rtx_def**, !dbg !4851
  store %struct.rtx_def* %insn, %struct.rtx_def** %22, align 8, !dbg !4852
  %23 = bitcast %struct.occr** %antic_occr26 to i64*, !dbg !4853
  %24 = load i64, i64* %23, align 8, !dbg !4853
  %25 = bitcast i8* %call41 to i64*, !dbg !4854
  store i64 %24, i64* %25, align 8, !dbg !4854
  %26 = getelementptr inbounds i8, i8* %call41, i64 16, !dbg !4855
  store i8 0, i8* %26, align 8, !dbg !4856
  %27 = bitcast %struct.occr** %antic_occr26 to i8**, !dbg !4857
  store i8* %call41, i8** %27, align 8, !dbg !4857
  br label %if.end49

if.end49:                                         ; preds = %if.end37, %if.end23, %if.else40
  %tobool50 = icmp eq i32 %avail_p, 0, !dbg !4858
  br i1 %tobool50, label %cleanup, label %if.then51, !dbg !4860

if.then51:                                        ; preds = %if.end49
  %avail_occr52 = getelementptr inbounds %struct.expr, %struct.expr* %cur_expr.1, i64 0, i32 4, !dbg !4861
  %28 = load %struct.occr*, %struct.occr** %avail_occr52, align 8, !dbg !4861
  call void @llvm.dbg.value(metadata %struct.occr* %28, metadata !4786, metadata !DIExpression()), !dbg !4787
  %tobool53 = icmp eq %struct.occr* %28, null, !dbg !4863
  br i1 %tobool53, label %if.else68, label %land.lhs.true54, !dbg !4865

land.lhs.true54:                                  ; preds = %if.then51
  %insn55 = getelementptr inbounds %struct.occr, %struct.occr* %28, i64 0, i32 1, !dbg !4866
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn55, align 8, !dbg !4866
  %arrayidx58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 1, !dbg !4866
  %rt_bb59 = bitcast %struct.object_block** %arrayidx58 to %struct.basic_block_def**, !dbg !4866
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb59, align 8, !dbg !4866
  %arrayidx62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4867
  %rt_bb63 = bitcast %struct.object_block** %arrayidx62 to %struct.basic_block_def**, !dbg !4867
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb63, align 8, !dbg !4867
  %cmp64 = icmp eq %struct.basic_block_def* %30, %31, !dbg !4868
  br i1 %cmp64, label %if.then66, label %if.else68, !dbg !4869

if.then66:                                        ; preds = %land.lhs.true54
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn55, align 8, !dbg !4870
  br label %cleanup, !dbg !4872

if.else68:                                        ; preds = %if.then51, %land.lhs.true54
  %call69 = call fastcc i8* @gcse_alloc(i64 24) #7, !dbg !4873
  call void @llvm.dbg.value(metadata i8* %call69, metadata !4786, metadata !DIExpression()), !dbg !4787
  %32 = load i32, i32* @bytes_used, align 4, !dbg !4875
  %add71 = add i32 %32, 24, !dbg !4875
  store i32 %add71, i32* @bytes_used, align 4, !dbg !4875
  %insn73 = getelementptr inbounds i8, i8* %call69, i64 8, !dbg !4876
  %33 = bitcast i8* %insn73 to %struct.rtx_def**, !dbg !4876
  store %struct.rtx_def* %insn, %struct.rtx_def** %33, align 8, !dbg !4877
  %34 = bitcast %struct.occr** %avail_occr52 to i64*, !dbg !4878
  %35 = load i64, i64* %34, align 8, !dbg !4878
  %36 = bitcast i8* %call69 to i64*, !dbg !4879
  store i64 %35, i64* %36, align 8, !dbg !4879
  %37 = getelementptr inbounds i8, i8* %call69, i64 16, !dbg !4880
  store i8 0, i8* %37, align 8, !dbg !4881
  %38 = bitcast %struct.occr** %avail_occr52 to i8**, !dbg !4882
  store i8* %call69, i8** %38, align 8, !dbg !4882
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %entry, %if.else68, %if.then66
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4883
  ret void, !dbg !4883
}

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_set_in_table(%struct.rtx_def* %x, %struct.rtx_def* %insn, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !4884 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4886, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4887, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !4888, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.expr* null, metadata !4892, metadata !DIExpression()), !dbg !4894
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4895
  %bf.load = load i32, i32* %0, align 8, !dbg !4895
  %bf.clear = and i32 %bf.load, 65535, !dbg !4895
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !4895
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !4895

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4895
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4895
  %2 = load i32*, i32** %1, align 8, !dbg !4895
  %bf.load1 = load i32, i32* %2, align 8, !dbg !4895
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4895
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !4895
  br i1 %cmp3, label %land.lhs.true.cond.end_crit_edge, label %cond.true, !dbg !4895

land.lhs.true.cond.end_crit_edge:                 ; preds = %land.lhs.true
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !4895
  br label %cond.end, !dbg !4895

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 1207, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !4895
  %arrayidx6.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4894
  %rt_rtx7.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx6.phi.trans.insert to %struct.rtx_def**, !dbg !4894
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7.phi.trans.insert, align 8, !dbg !4896
  br label %cond.end, !dbg !4895

cond.end:                                         ; preds = %land.lhs.true.cond.end_crit_edge, %cond.true
  %4 = phi %struct.rtx_def* [ %3, %land.lhs.true.cond.end_crit_edge ], [ %.pre, %cond.true ], !dbg !4896
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %4) #7, !dbg !4896
  %size = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 1, !dbg !4897
  %5 = load i32, i32* %size, align 8, !dbg !4897
  %call8 = tail call fastcc i32 @hash_set(i32 %call, i32 %5) #7, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %call8, metadata !4890, metadata !DIExpression()), !dbg !4894
  %table9 = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 0, !dbg !4899
  %6 = load %struct.expr**, %struct.expr*** %table9, align 8, !dbg !4899
  %idxprom = zext i32 %call8 to i64, !dbg !4900
  %arrayidx10 = getelementptr inbounds %struct.expr*, %struct.expr** %6, i64 %idxprom, !dbg !4900
  call void @llvm.dbg.value(metadata i32 0, metadata !4889, metadata !DIExpression()), !dbg !4894
  br label %while.cond, !dbg !4901

while.cond:                                       ; preds = %while.body, %cond.end
  %found.0 = phi i32 [ 0, %cond.end ], [ %found.1, %while.body ], !dbg !4894
  %cur_expr.0.in = phi %struct.expr** [ %arrayidx10, %cond.end ], [ %next_same_hash, %while.body ]
  %last_expr.0 = phi %struct.expr* [ null, %cond.end ], [ %cur_expr.0, %while.body ], !dbg !4894
  %cur_expr.0 = load %struct.expr*, %struct.expr** %cur_expr.0.in, align 8, !dbg !4894
  call void @llvm.dbg.value(metadata %struct.expr* %last_expr.0, metadata !4892, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.expr* %cur_expr.0, metadata !4891, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i32 %found.0, metadata !4889, metadata !DIExpression()), !dbg !4894
  %tobool = icmp eq %struct.expr* %cur_expr.0, null, !dbg !4902
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !4903

land.rhs:                                         ; preds = %while.cond
  %expr = getelementptr inbounds %struct.expr, %struct.expr* %cur_expr.0, i64 0, i32 0, !dbg !4904
  %7 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !4904
  %call11 = tail call fastcc i32 @expr_equiv_p(%struct.rtx_def* %7, %struct.rtx_def* %x) #7, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %call11, metadata !4889, metadata !DIExpression()), !dbg !4894
  %cmp12 = icmp eq i32 %call11, 0, !dbg !4906
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %found.1 = phi i32 [ %call11, %land.rhs ], [ %found.0, %while.cond ], !dbg !4894
  %8 = phi i1 [ %cmp12, %land.rhs ], [ false, %while.cond ], !dbg !4894
  call void @llvm.dbg.value(metadata i32 %found.1, metadata !4889, metadata !DIExpression()), !dbg !4894
  br i1 %8, label %while.body, label %while.end, !dbg !4901

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.value(metadata %struct.expr* %cur_expr.0, metadata !4892, metadata !DIExpression()), !dbg !4894
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %cur_expr.0, i64 0, i32 2, !dbg !4907
  br label %while.cond, !dbg !4901, !llvm.loop !4909

while.end:                                        ; preds = %land.end
  %found.1.lcssa = phi i32 [ %found.1, %land.end ], !dbg !4894
  %last_expr.0.lcssa = phi %struct.expr* [ %last_expr.0, %land.end ], !dbg !4894
  %cur_expr.0.lcssa = phi %struct.expr* [ %cur_expr.0, %land.end ], !dbg !4894
  call void @llvm.dbg.value(metadata i32 %found.1.lcssa, metadata !4889, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.expr* %last_expr.0.lcssa, metadata !4892, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i32 %found.1.lcssa, metadata !4889, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.expr* %last_expr.0.lcssa, metadata !4892, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i32 %found.1.lcssa, metadata !4889, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.expr* %last_expr.0.lcssa, metadata !4892, metadata !DIExpression()), !dbg !4894
  %tobool13 = icmp eq i32 %found.1.lcssa, 0, !dbg !4911
  br i1 %tobool13, label %if.then, label %if.end29, !dbg !4913

if.then:                                          ; preds = %while.end
  %call14 = tail call fastcc i8* @gcse_alloc(i64 48) #7, !dbg !4914
  %9 = bitcast i8* %call14 to %struct.expr*, !dbg !4914
  call void @llvm.dbg.value(metadata %struct.expr* %9, metadata !4891, metadata !DIExpression()), !dbg !4894
  %10 = load i32, i32* @bytes_used, align 4, !dbg !4916
  %add = add i32 %10, 48, !dbg !4916
  store i32 %add, i32* @bytes_used, align 4, !dbg !4916
  %11 = load %struct.expr**, %struct.expr*** %table9, align 8, !dbg !4917
  %arrayidx18 = getelementptr inbounds %struct.expr*, %struct.expr** %11, i64 %idxprom, !dbg !4919
  %12 = load %struct.expr*, %struct.expr** %arrayidx18, align 8, !dbg !4919
  %cmp19 = icmp eq %struct.expr* %12, null, !dbg !4920
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !4921

if.then21:                                        ; preds = %if.then
  %13 = bitcast %struct.expr** %arrayidx18 to i8**, !dbg !4922
  store i8* %call14, i8** %13, align 8, !dbg !4922
  br label %if.end, !dbg !4923

if.else:                                          ; preds = %if.then
  %next_same_hash25 = getelementptr inbounds %struct.expr, %struct.expr* %last_expr.0.lcssa, i64 0, i32 2, !dbg !4924
  %14 = bitcast %struct.expr** %next_same_hash25 to i8**, !dbg !4925
  store i8* %call14, i8** %14, align 8, !dbg !4925
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then21
  %call26 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %x) #6, !dbg !4926
  %expr27 = bitcast i8* %call14 to %struct.rtx_def**, !dbg !4927
  store %struct.rtx_def* %call26, %struct.rtx_def** %expr27, align 8, !dbg !4928
  %n_elems = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 2, !dbg !4929
  %15 = load i32, i32* %n_elems, align 4, !dbg !4930
  %inc = add i32 %15, 1, !dbg !4930
  store i32 %inc, i32* %n_elems, align 4, !dbg !4930
  %bitmap_index = getelementptr inbounds i8, i8* %call14, i64 8, !dbg !4931
  %16 = bitcast i8* %bitmap_index to i32*, !dbg !4931
  store i32 %15, i32* %16, align 8, !dbg !4932
  %next_same_hash28 = getelementptr inbounds i8, i8* %call14, i64 16, !dbg !4933
  %17 = bitcast i8* %next_same_hash28 to %struct.expr**, !dbg !4933
  store %struct.expr* null, %struct.expr** %17, align 8, !dbg !4934
  %antic_occr = getelementptr inbounds i8, i8* %call14, i64 24, !dbg !4935
  %18 = bitcast i8* %antic_occr to %struct.occr**, !dbg !4935
  store %struct.occr* null, %struct.occr** %18, align 8, !dbg !4936
  %avail_occr = getelementptr inbounds i8, i8* %call14, i64 32, !dbg !4937
  %19 = bitcast i8* %avail_occr to %struct.occr**, !dbg !4937
  store %struct.occr* null, %struct.occr** %19, align 8, !dbg !4938
  br label %if.end29, !dbg !4939

if.end29:                                         ; preds = %while.end, %if.end
  %cur_expr.1 = phi %struct.expr* [ %cur_expr.0.lcssa, %while.end ], [ %9, %if.end ], !dbg !4894
  call void @llvm.dbg.value(metadata %struct.expr* %cur_expr.1, metadata !4891, metadata !DIExpression()), !dbg !4894
  %avail_occr30 = getelementptr inbounds %struct.expr, %struct.expr* %cur_expr.1, i64 0, i32 4, !dbg !4940
  %20 = load %struct.occr*, %struct.occr** %avail_occr30, align 8, !dbg !4940
  call void @llvm.dbg.value(metadata %struct.occr* %20, metadata !4893, metadata !DIExpression()), !dbg !4894
  %tobool31 = icmp eq %struct.occr* %20, null, !dbg !4941
  br i1 %tobool31, label %if.else45, label %land.lhs.true32, !dbg !4943

land.lhs.true32:                                  ; preds = %if.end29
  %insn33 = getelementptr inbounds %struct.occr, %struct.occr* %20, i64 0, i32 1, !dbg !4944
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn33, align 8, !dbg !4944
  %arrayidx36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 1, !dbg !4944
  %rt_bb = bitcast %struct.object_block** %arrayidx36 to %struct.basic_block_def**, !dbg !4944
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4944
  %arrayidx39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4945
  %rt_bb40 = bitcast %struct.object_block** %arrayidx39 to %struct.basic_block_def**, !dbg !4945
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb40, align 8, !dbg !4945
  %cmp41 = icmp eq %struct.basic_block_def* %22, %23, !dbg !4946
  br i1 %cmp41, label %if.then43, label %if.else45, !dbg !4947

if.then43:                                        ; preds = %land.lhs.true32
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn33, align 8, !dbg !4948
  br label %if.end53, !dbg !4950

if.else45:                                        ; preds = %if.end29, %land.lhs.true32
  %call46 = tail call fastcc i8* @gcse_alloc(i64 24) #7, !dbg !4951
  call void @llvm.dbg.value(metadata i8* %call46, metadata !4893, metadata !DIExpression()), !dbg !4894
  %24 = load i32, i32* @bytes_used, align 4, !dbg !4953
  %add48 = add i32 %24, 24, !dbg !4953
  store i32 %add48, i32* @bytes_used, align 4, !dbg !4953
  %insn50 = getelementptr inbounds i8, i8* %call46, i64 8, !dbg !4954
  %25 = bitcast i8* %insn50 to %struct.rtx_def**, !dbg !4954
  store %struct.rtx_def* %insn, %struct.rtx_def** %25, align 8, !dbg !4955
  %26 = bitcast %struct.occr** %avail_occr30 to i64*, !dbg !4956
  %27 = load i64, i64* %26, align 8, !dbg !4956
  %28 = bitcast i8* %call46 to i64*, !dbg !4957
  store i64 %27, i64* %28, align 8, !dbg !4957
  %29 = getelementptr inbounds i8, i8* %call46, i64 16, !dbg !4958
  store i8 0, i8* %29, align 8, !dbg !4959
  %30 = bitcast %struct.occr** %avail_occr30 to i8**, !dbg !4960
  store i8* %call46, i8** %30, align 8, !dbg !4960
  br label %if.end53

if.end53:                                         ; preds = %if.else45, %if.then43
  ret void, !dbg !4961
}

declare dso_local %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @oprs_unchanged_p(%struct.rtx_def* %x, %struct.rtx_def* %insn, i32 %avail_p) unnamed_addr #4 !dbg !4962 {
entry:
  %arrayidx23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4976
  %rt_int24 = bitcast %union.rtunion_def* %arrayidx23 to i32*, !dbg !4976
  br label %tailrecurse, !dbg !4978

tailrecurse:                                      ; preds = %if.else31, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %22, %if.else31 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !4966, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4967, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i32 %avail_p, metadata !4968, metadata !DIExpression()), !dbg !4979
  %cmp = icmp eq %struct.rtx_def* %x.tr, null, !dbg !4980
  br i1 %cmp, label %cleanup101.loopexit2, label %if.end, !dbg !4982

if.end:                                           ; preds = %tailrecurse
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !4983
  %bf.load = load i32, i32* %0, align 8, !dbg !4983
  %trunc = trunc i32 %bf.load to i16, !dbg !4984
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %sw.bb
    i16 43, label %sw.bb19
    i16 74, label %cleanup101.loopexit2
    i16 75, label %cleanup101.loopexit2
    i16 76, label %cleanup101.loopexit2
    i16 77, label %cleanup101.loopexit2
    i16 78, label %cleanup101.loopexit2
    i16 79, label %cleanup101.loopexit2
    i16 36, label %sw.bb37
    i16 46, label %sw.bb37
    i16 35, label %sw.bb37
    i16 30, label %sw.bb37
    i16 32, label %sw.bb37
    i16 31, label %sw.bb37
    i16 33, label %sw.bb37
    i16 45, label %sw.bb37
    i16 44, label %sw.bb37
    i16 20, label %sw.bb37
    i16 21, label %sw.bb37
  ], !dbg !4984

sw.bb:                                            ; preds = %if.end
  %x.tr.lcssa19 = phi %struct.rtx_def* [ %x.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa19, metadata !4966, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa19, metadata !4966, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa19, metadata !4966, metadata !DIExpression()), !dbg !4979
  %1 = load %struct.reg_avail_info*, %struct.reg_avail_info** @reg_avail_info, align 8, !dbg !4985
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %x.tr.lcssa19) #7, !dbg !4986
  %idxprom = zext i32 %call to i64, !dbg !4985
  call void @llvm.dbg.value(metadata %struct.reg_avail_info* undef, metadata !4973, metadata !DIExpression()), !dbg !4987
  %last_bb = getelementptr inbounds %struct.reg_avail_info, %struct.reg_avail_info* %1, i64 %idxprom, i32 0, !dbg !4988
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %last_bb, align 8, !dbg !4988
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** @current_bb, align 8, !dbg !4990
  %cmp1 = icmp eq %struct.basic_block_def* %2, %3, !dbg !4991
  br i1 %cmp1, label %if.end3, label %cleanup101, !dbg !4992

if.end3:                                          ; preds = %sw.bb
  %tobool = icmp eq i32 %avail_p, 0, !dbg !4993
  br i1 %tobool, label %if.else, label %if.then4, !dbg !4995

if.then4:                                         ; preds = %if.end3
  %last_set = getelementptr inbounds %struct.reg_avail_info, %struct.reg_avail_info* %1, i64 %idxprom, i32 2, !dbg !4996
  %4 = load i32, i32* %last_set, align 4, !dbg !4996
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !4997
  %insns = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 10, !dbg !4997
  %6 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4997
  %7 = load i32, i32* %rt_int24, align 8, !dbg !4997
  %idxprom6 = sext i32 %7 to i64, !dbg !4997
  %arrayidx7 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %6, i64 %idxprom6, !dbg !4997
  %8 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx7, align 8, !dbg !4997
  %luid = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %8, i64 0, i32 5, !dbg !4997
  %9 = load i32, i32* %luid, align 8, !dbg !4997
  %cmp8 = icmp slt i32 %4, %9, !dbg !4998
  %conv = zext i1 %cmp8 to i32, !dbg !4998
  br label %cleanup101, !dbg !4999

if.else:                                          ; preds = %if.end3
  %first_set = getelementptr inbounds %struct.reg_avail_info, %struct.reg_avail_info* %1, i64 %idxprom, i32 1, !dbg !5000
  %10 = load i32, i32* %first_set, align 8, !dbg !5000
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !5001
  %insns9 = getelementptr inbounds %struct.df, %struct.df* %11, i64 0, i32 10, !dbg !5001
  %12 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns9, align 8, !dbg !5001
  %13 = load i32, i32* %rt_int24, align 8, !dbg !5001
  %idxprom14 = sext i32 %13 to i64, !dbg !5001
  %arrayidx15 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %12, i64 %idxprom14, !dbg !5001
  %14 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx15, align 8, !dbg !5001
  %luid16 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %14, i64 0, i32 5, !dbg !5001
  %15 = load i32, i32* %luid16, align 8, !dbg !5001
  %cmp17 = icmp sge i32 %10, %15, !dbg !5002
  %conv18 = zext i1 %cmp17 to i32, !dbg !5002
  br label %cleanup101, !dbg !5003

sw.bb19:                                          ; preds = %if.end
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** @current_bb, align 8, !dbg !5004
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !5005
  %insns20 = getelementptr inbounds %struct.df, %struct.df* %17, i64 0, i32 10, !dbg !5005
  %18 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns20, align 8, !dbg !5005
  %19 = load i32, i32* %rt_int24, align 8, !dbg !5005
  %idxprom25 = sext i32 %19 to i64, !dbg !5005
  %arrayidx26 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %18, i64 %idxprom25, !dbg !5005
  %20 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx26, align 8, !dbg !5005
  %luid27 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %20, i64 0, i32 5, !dbg !5005
  %21 = load i32, i32* %luid27, align 8, !dbg !5005
  %call28 = tail call fastcc i32 @load_killed_in_block_p(%struct.basic_block_def* %16, i32 %21, %struct.rtx_def* nonnull %x.tr, i32 %avail_p) #7, !dbg !5006
  %tobool29 = icmp eq i32 %call28, 0, !dbg !5006
  br i1 %tobool29, label %if.else31, label %cleanup101.loopexit2, !dbg !5007

if.else31:                                        ; preds = %sw.bb19
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5008
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !5008
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5008
  br label %tailrecurse, !dbg !4978

sw.bb37:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  br label %cleanup101, !dbg !5009

sw.epilog:                                        ; preds = %if.end
  %x.tr.lcssa18 = phi %struct.rtx_def* [ %x.tr, %if.end ]
  %bf.load.lcssa = phi i32 [ %bf.load, %if.end ], !dbg !4983
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa18, metadata !4966, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa18, metadata !4966, metadata !DIExpression()), !dbg !4979
  %bf.clear.le = and i32 %bf.load.lcssa, 65535, !dbg !4983
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa18, metadata !4966, metadata !DIExpression()), !dbg !4979
  %idxprom38 = zext i32 %bf.clear.le to i64, !dbg !5010
  %arrayidx39 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom38, !dbg !5010
  %23 = load i8, i8* %arrayidx39, align 1, !dbg !5010
  call void @llvm.dbg.value(metadata i8 %23, metadata !4969, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4979
  %arrayidx42 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom38, !dbg !5012
  %24 = load i8*, i8** %arrayidx42, align 8, !dbg !5012
  call void @llvm.dbg.value(metadata i8* %24, metadata !4972, metadata !DIExpression()), !dbg !4979
  %u79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa18, i64 0, i32 1, !dbg !5013
  %fld80 = bitcast %union.u* %u79 to [1 x %union.rtunion_def]*, !dbg !5013
  %25 = zext i8 %23 to i64, !dbg !5020
  br label %for.cond, !dbg !5020

for.cond:                                         ; preds = %for.inc99, %sw.epilog
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %for.inc99 ], [ %25, %sw.epilog ]
  %indvars.iv.next15 = add nsw i64 %indvars.iv14, -1, !dbg !5021
  call void @llvm.dbg.value(metadata i32 undef, metadata !4969, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4979
  %cmp43 = icmp sgt i64 %indvars.iv14, 0, !dbg !5022
  br i1 %cmp43, label %for.body, label %cleanup101.loopexit1, !dbg !5023

for.body:                                         ; preds = %for.cond
  %arrayidx46 = getelementptr inbounds i8, i8* %24, i64 %indvars.iv.next15, !dbg !5024
  %26 = load i8, i8* %arrayidx46, align 1, !dbg !5024
  %cmp48 = icmp eq i8 %26, 101, !dbg !5025
  br i1 %cmp48, label %if.then50, label %if.else71, !dbg !5026

if.then50:                                        ; preds = %for.body
  %27 = icmp eq i64 %indvars.iv.next15, 0
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i64 0, i64 %indvars.iv.next15, !dbg !5027
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !5027
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !5027
  %call59 = tail call fastcc i32 @oprs_unchanged_p(%struct.rtx_def* %28, %struct.rtx_def* %insn, i32 %avail_p) #7, !dbg !5027
  br i1 %27, label %cleanup101.loopexit1, label %if.else60, !dbg !5030

if.else60:                                        ; preds = %if.then50
  %tobool67 = icmp eq i32 %call59, 0, !dbg !5031
  br i1 %tobool67, label %cleanup101.loopexit1, label %for.inc99, !dbg !5033

if.else71:                                        ; preds = %for.body
  %cmp75 = icmp eq i8 %26, 69, !dbg !5034
  br i1 %cmp75, label %for.cond78.preheader, label %for.inc99, !dbg !5035

for.cond78.preheader:                             ; preds = %if.else71
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i64 0, i64 %indvars.iv.next15, !dbg !5013
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtvec_def**, !dbg !5013
  br label %for.cond78, !dbg !5036

for.cond78:                                       ; preds = %for.cond78.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond78.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5037
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4970, metadata !DIExpression()), !dbg !4979
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5038
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i64 0, i32 0, !dbg !5038
  %30 = load i32, i32* %num_elem, align 8, !dbg !5038
  %31 = sext i32 %30 to i64, !dbg !5039
  %cmp83 = icmp slt i64 %indvars.iv, %31, !dbg !5039
  br i1 %cmp83, label %for.body85, label %for.inc99.loopexit, !dbg !5036

for.body85:                                       ; preds = %for.cond78
  %arrayidx92 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i64 0, i32 1, i64 %indvars.iv, !dbg !5040
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx92, align 8, !dbg !5040
  %call93 = tail call fastcc i32 @oprs_unchanged_p(%struct.rtx_def* %32, %struct.rtx_def* %insn, i32 %avail_p) #7, !dbg !5042
  %tobool94 = icmp eq i32 %call93, 0, !dbg !5042
  br i1 %tobool94, label %cleanup101.loopexit, label %for.inc, !dbg !5043

for.inc:                                          ; preds = %for.body85
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5044
  call void @llvm.dbg.value(metadata i32 undef, metadata !4970, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4979
  br label %for.cond78, !dbg !5045, !llvm.loop !5046

for.inc99.loopexit:                               ; preds = %for.cond78
  br label %for.inc99, !dbg !5048

for.inc99:                                        ; preds = %for.inc99.loopexit, %if.else60, %if.else71
  call void @llvm.dbg.value(metadata i32 undef, metadata !4969, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4979
  br label %for.cond, !dbg !5048, !llvm.loop !5049

cleanup101.loopexit:                              ; preds = %for.body85
  br label %cleanup101, !dbg !5051

cleanup101.loopexit1:                             ; preds = %if.then50, %for.cond, %if.else60
  %retval.1.ph = phi i32 [ 1, %for.cond ], [ 0, %if.else60 ], [ %call59, %if.then50 ]
  br label %cleanup101, !dbg !5051

cleanup101.loopexit2:                             ; preds = %tailrecurse, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb19
  %retval.1.ph3 = phi i32 [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %sw.bb19 ], [ 1, %tailrecurse ]
  br label %cleanup101, !dbg !5051

cleanup101:                                       ; preds = %cleanup101.loopexit2, %cleanup101.loopexit1, %cleanup101.loopexit, %sw.bb, %if.then4, %if.else, %sw.bb37
  %retval.1 = phi i32 [ 1, %sw.bb37 ], [ %conv, %if.then4 ], [ %conv18, %if.else ], [ 1, %sw.bb ], [ 0, %cleanup101.loopexit ], [ %retval.1.ph, %cleanup101.loopexit1 ], [ %retval.1.ph3, %cleanup101.loopexit2 ], !dbg !4979
  ret i32 %retval.1, !dbg !5051
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @load_killed_in_block_p(%struct.basic_block_def* %bb, i32 %uid_limit, %struct.rtx_def* %x, i32 %avail_p) unnamed_addr #4 !dbg !5052 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5056, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i32 %uid_limit, metadata !5057, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5058, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i32 %avail_p, metadata !5059, metadata !DIExpression()), !dbg !5063
  %0 = load %struct.rtx_def**, %struct.rtx_def*** @modify_mem_list, align 8, !dbg !5064
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5065
  %1 = load i32, i32* %index, align 8, !dbg !5065
  %idxprom = sext i32 %1 to i64, !dbg !5064
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %0, i64 %idxprom, !dbg !5064
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5064
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5060, metadata !DIExpression()), !dbg !5063
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5066
  %bf.load = load i32, i32* %3, align 8, !dbg !5066
  %bf.clear = and i32 %bf.load, 67108864, !dbg !5066
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !5066
  br i1 %tobool, label %while.cond.preheader, label %cleanup50, !dbg !5068

while.cond.preheader:                             ; preds = %entry
  %cond = icmp eq i32 %avail_p, 0, !dbg !5069
  br i1 %cond, label %while.cond.preheader.split.us, label %while.cond.preheader.while.cond.preheader.split_crit_edge, !dbg !5071

while.cond.preheader.while.cond.preheader.split_crit_edge: ; preds = %while.cond.preheader
  br i1 false, label %while.cond.preheader.split.split.us, label %while.cond.preheader.split.while.cond.preheader.split.split_crit_edge, !dbg !5071

while.cond.preheader.split.us:                    ; preds = %while.cond.preheader
  br label %while.cond.us, !dbg !5071

while.cond.us:                                    ; preds = %while.cond.backedge.us, %while.cond.preheader.split.us
  %list_entry.0.us = phi %struct.rtx_def* [ %2, %while.cond.preheader.split.us ], [ %list_entry.1.us, %while.cond.backedge.us ], !dbg !5063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list_entry.0.us, metadata !5060, metadata !DIExpression()), !dbg !5063
  %tobool1.us = icmp eq %struct.rtx_def* %list_entry.0.us, null, !dbg !5071
  br i1 %tobool1.us, label %cleanup50.loopexit.us-lcssa.us, label %while.body.us, !dbg !5071

while.body.us:                                    ; preds = %while.cond.us
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !5072
  %insns11.us = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 10, !dbg !5072
  %5 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns11.us, align 8, !dbg !5072
  %arrayidx14.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5072
  %rt_rtx15.us = bitcast %union.rtunion_def* %arrayidx14.us to %struct.rtx_def**, !dbg !5072
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15.us, align 8, !dbg !5072
  %arrayidx18.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5072
  %rt_int19.us = bitcast %union.rtunion_def* %arrayidx18.us to i32*, !dbg !5072
  %7 = load i32, i32* %rt_int19.us, align 8, !dbg !5072
  %idxprom20.us = sext i32 %7 to i64, !dbg !5072
  %arrayidx21.us = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %5, i64 %idxprom20.us, !dbg !5072
  %8 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx21.us, align 8, !dbg !5072
  %luid22.us = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %8, i64 0, i32 5, !dbg !5072
  %9 = load i32, i32* %luid22.us, align 8, !dbg !5072
  %cmp23.us = icmp sgt i32 %9, %uid_limit, !dbg !5073
  br i1 %cmp23.us, label %if.then24.us, label %if.end29.us, !dbg !5074

if.end29.us:                                      ; preds = %while.body.us
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !5061, metadata !DIExpression()), !dbg !5075
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !5076
  %bf.load34.us = load i32, i32* %10, align 8, !dbg !5076
  %bf.clear35.us = and i32 %bf.load34.us, 65535, !dbg !5076
  %cmp36.us = icmp eq i32 %bf.clear35.us, 10, !dbg !5076
  br i1 %cmp36.us, label %cleanup.us, label %if.end38.us, !dbg !5078

if.end38.us:                                      ; preds = %if.end29.us
  store %struct.rtx_def* %x, %struct.rtx_def** @gcse_mem_operand, align 8, !dbg !5079
  store i1 false, i1* @gcse_mems_conflict_p, align 4, !dbg !5080
  %u39.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, !dbg !5081
  %11 = getelementptr inbounds %union.u, %union.u* %u39.us, i64 1, i32 0, i32 0, i64 0, !dbg !5081
  %rt_rtx42.us = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !5081
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42.us, align 8, !dbg !5081
  tail call void @note_stores(%struct.rtx_def* %12, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @mems_conflict_for_gcse_p, i8* null) #6, !dbg !5082
  %.b46 = load i1, i1* @gcse_mems_conflict_p, align 4, !dbg !5083
  br i1 %.b46, label %cleanup.us, label %if.end45.us, !dbg !5085

if.end45.us:                                      ; preds = %if.end38.us
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5086
  %rt_rtx49.us = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !5086
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49.us, align 8, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !5060, metadata !DIExpression()), !dbg !5063
  br label %cleanup.us, !dbg !5087

if.then24.us:                                     ; preds = %while.body.us
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5088
  %rt_rtx28.us = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !5088
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28.us, align 8, !dbg !5088
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !5060, metadata !DIExpression()), !dbg !5063
  br label %cleanup.us, !dbg !5090, !llvm.loop !5091

cleanup.us:                                       ; preds = %if.end38.us, %if.then24.us, %if.end45.us, %if.end29.us
  %list_entry.1.us = phi %struct.rtx_def* [ %16, %if.then24.us ], [ %14, %if.end45.us ], [ %list_entry.0.us, %if.end29.us ], [ %list_entry.0.us, %if.end38.us ], !dbg !5063
  %cleanup.dest.slot.0.us = phi i32 [ 2, %if.then24.us ], [ 0, %if.end45.us ], [ 1, %if.end29.us ], [ 1, %if.end38.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list_entry.1.us, metadata !5060, metadata !DIExpression()), !dbg !5063
  switch i32 %cleanup.dest.slot.0.us, label %cleanup50.loopexit.us-lcssa.us [
    i32 0, label %while.cond.backedge.us
    i32 2, label %while.cond.backedge.us
  ]

while.cond.backedge.us:                           ; preds = %cleanup.us, %cleanup.us
  br label %while.cond.us, !dbg !5063, !llvm.loop !5091

cleanup50.loopexit.us-lcssa.us:                   ; preds = %cleanup.us, %while.cond.us
  %retval.2.ph.ph.us = phi i32 [ 1, %cleanup.us ], [ 0, %while.cond.us ]
  br label %cleanup50.loopexit, !dbg !5092

while.cond.preheader.split.while.cond.preheader.split.split_crit_edge: ; preds = %while.cond.preheader.while.cond.preheader.split_crit_edge
  br label %while.cond, !dbg !5071

while.cond.preheader.split.split.us:              ; preds = %while.cond.preheader.while.cond.preheader.split_crit_edge
  br label %cleanup50.loopexit.us-lcssa.us-lcssa.us, !dbg !5071

cleanup50.loopexit.us-lcssa.us-lcssa.us:          ; preds = %while.cond.preheader.split.split.us
  br label %cleanup50.loopexit.us-lcssa, !dbg !5092

while.cond:                                       ; preds = %while.cond.backedge, %while.cond.preheader.split.while.cond.preheader.split.split_crit_edge
  %list_entry.0 = phi %struct.rtx_def* [ %2, %while.cond.preheader.split.while.cond.preheader.split.split_crit_edge ], [ %list_entry.1, %while.cond.backedge ], !dbg !5063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list_entry.0, metadata !5060, metadata !DIExpression()), !dbg !5063
  %tobool1 = icmp eq %struct.rtx_def* %list_entry.0, null, !dbg !5071
  br i1 %tobool1, label %cleanup50.loopexit.us-lcssa.us-lcssa, label %while.body, !dbg !5071

while.body:                                       ; preds = %while.cond
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !5093
  %insns = getelementptr inbounds %struct.df, %struct.df* %17, i64 0, i32 10, !dbg !5093
  %18 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5093
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5093
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5093
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5093
  %arrayidx6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5093
  %rt_int = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !5093
  %20 = load i32, i32* %rt_int, align 8, !dbg !5093
  %idxprom7 = sext i32 %20 to i64, !dbg !5093
  %arrayidx8 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %18, i64 %idxprom7, !dbg !5093
  %21 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx8, align 8, !dbg !5093
  %luid = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %21, i64 0, i32 5, !dbg !5093
  %22 = load i32, i32* %luid, align 8, !dbg !5093
  %cmp = icmp slt i32 %22, %uid_limit, !dbg !5094
  br i1 %cmp, label %if.then24, label %lor.lhs.false, !dbg !5095

lor.lhs.false:                                    ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !5061, metadata !DIExpression()), !dbg !5075
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !5076
  %bf.load34 = load i32, i32* %23, align 8, !dbg !5076
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !5076
  %cmp36 = icmp eq i32 %bf.clear35, 10, !dbg !5076
  br i1 %cmp36, label %cleanup, label %if.end38, !dbg !5078

if.then24:                                        ; preds = %while.body
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5088
  %rt_rtx28 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !5088
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !5088
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !5060, metadata !DIExpression()), !dbg !5063
  br label %cleanup, !dbg !5090, !llvm.loop !5091

if.end38:                                         ; preds = %lor.lhs.false
  store %struct.rtx_def* %x, %struct.rtx_def** @gcse_mem_operand, align 8, !dbg !5079
  store i1 false, i1* @gcse_mems_conflict_p, align 4, !dbg !5080
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, !dbg !5081
  %26 = getelementptr inbounds %union.u, %union.u* %u39, i64 1, i32 0, i32 0, i64 0, !dbg !5081
  %rt_rtx42 = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !5081
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !5081
  tail call void @note_stores(%struct.rtx_def* %27, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @mems_conflict_for_gcse_p, i8* null) #6, !dbg !5082
  %.b47 = load i1, i1* @gcse_mems_conflict_p, align 4, !dbg !5083
  br i1 %.b47, label %cleanup, label %if.end45, !dbg !5085

if.end45:                                         ; preds = %if.end38
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5086
  %rt_rtx49 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !5086
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !5060, metadata !DIExpression()), !dbg !5063
  br label %cleanup, !dbg !5087

cleanup:                                          ; preds = %if.end38, %lor.lhs.false, %if.end45, %if.then24
  %list_entry.1 = phi %struct.rtx_def* [ %25, %if.then24 ], [ %29, %if.end45 ], [ %list_entry.0, %lor.lhs.false ], [ %list_entry.0, %if.end38 ], !dbg !5063
  %cleanup.dest.slot.0 = phi i32 [ 2, %if.then24 ], [ 0, %if.end45 ], [ 1, %lor.lhs.false ], [ 1, %if.end38 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list_entry.1, metadata !5060, metadata !DIExpression()), !dbg !5063
  switch i32 %cleanup.dest.slot.0, label %cleanup50.loopexit.us-lcssa.us-lcssa [
    i32 0, label %while.cond.backedge
    i32 2, label %while.cond.backedge
  ]

while.cond.backedge:                              ; preds = %cleanup, %cleanup
  br label %while.cond, !dbg !5063, !llvm.loop !5091

cleanup50.loopexit.us-lcssa.us-lcssa:             ; preds = %cleanup, %while.cond
  %retval.2.ph.ph.ph = phi i32 [ 0, %while.cond ], [ 1, %cleanup ]
  br label %cleanup50.loopexit.us-lcssa, !dbg !5092

cleanup50.loopexit.us-lcssa:                      ; preds = %cleanup50.loopexit.us-lcssa.us-lcssa.us, %cleanup50.loopexit.us-lcssa.us-lcssa
  %retval.2.ph.ph = phi i32 [ %retval.2.ph.ph.ph, %cleanup50.loopexit.us-lcssa.us-lcssa ], [ undef, %cleanup50.loopexit.us-lcssa.us-lcssa.us ]
  br label %cleanup50.loopexit, !dbg !5092

cleanup50.loopexit:                               ; preds = %cleanup50.loopexit.us-lcssa.us, %cleanup50.loopexit.us-lcssa
  %retval.2.ph = phi i32 [ %retval.2.ph.ph, %cleanup50.loopexit.us-lcssa ], [ %retval.2.ph.ph.us, %cleanup50.loopexit.us-lcssa.us ]
  br label %cleanup50, !dbg !5092

cleanup50:                                        ; preds = %cleanup50.loopexit, %entry
  %retval.2 = phi i32 [ 0, %entry ], [ %retval.2.ph, %cleanup50.loopexit ]
  ret i32 %retval.2, !dbg !5092
}

; Function Attrs: nounwind uwtable
define internal void @mems_conflict_for_gcse_p(%struct.rtx_def* %dest, %struct.rtx_def* %setter, i8* %data) #4 !dbg !5096 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !5098, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setter, metadata !5099, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %data, metadata !5100, metadata !DIExpression()), !dbg !5101
  br label %while.cond, !dbg !5102

while.cond:                                       ; preds = %while.body, %entry
  %dest.addr.0 = phi %struct.rtx_def* [ %dest, %entry ], [ %1, %while.body ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0, metadata !5098, metadata !DIExpression()), !dbg !5101
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.addr.0, i64 0, i32 0, !dbg !5103
  %bf.load = load i32, i32* %0, align 8, !dbg !5103
  %bf.clear = and i32 %bf.load, 65535, !dbg !5103
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !5104
  br i1 %cmp, label %while.body, label %lor.lhs.false, !dbg !5105

lor.lhs.false:                                    ; preds = %while.cond
  %cmp3 = icmp eq i32 %bf.clear, 120, !dbg !5106
  %cmp6 = icmp eq i32 %bf.clear, 40, !dbg !5107
  %or.cond2 = or i1 %cmp3, %cmp6, !dbg !5108
  br i1 %or.cond2, label %while.body, label %while.end, !dbg !5108

while.body:                                       ; preds = %while.cond, %lor.lhs.false
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5109
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5109
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5109
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5098, metadata !DIExpression()), !dbg !5101
  br label %while.cond, !dbg !5102, !llvm.loop !5110

while.end:                                        ; preds = %lor.lhs.false
  %dest.addr.0.lcssa = phi %struct.rtx_def* [ %dest.addr.0, %lor.lhs.false ]
  %.lcssa = phi i32* [ %0, %lor.lhs.false ], !dbg !5103
  %bf.clear.lcssa = phi i32 [ %bf.clear, %lor.lhs.false ], !dbg !5103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0.lcssa, metadata !5098, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0.lcssa, metadata !5098, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.addr.0.lcssa, metadata !5098, metadata !DIExpression()), !dbg !5101
  %cmp9 = icmp eq i32 %bf.clear.lcssa, 43, !dbg !5111
  br i1 %cmp9, label %if.end, label %if.end22, !dbg !5113

if.end:                                           ; preds = %while.end
  %2 = load %struct.rtx_def*, %struct.rtx_def** @gcse_mem_operand, align 8, !dbg !5114
  %call = tail call fastcc i32 @expr_equiv_p(%struct.rtx_def* %dest.addr.0.lcssa, %struct.rtx_def* %2) #7, !dbg !5116
  %tobool = icmp ne i32 %call, 0, !dbg !5116
  %3 = load %struct.ls_expr*, %struct.ls_expr** @pre_ldst_mems, align 8, !dbg !5117
  %cmp10 = icmp ne %struct.ls_expr* %3, null, !dbg !5118
  %or.cond = and i1 %tobool, %cmp10, !dbg !5119
  br i1 %or.cond, label %if.then11, label %if.end16, !dbg !5119

if.then11:                                        ; preds = %if.end
  %call12 = tail call fastcc %struct.ls_expr* @find_rtx_in_ldst(%struct.rtx_def* %dest.addr.0.lcssa) #7, !dbg !5120
  %tobool13 = icmp eq %struct.ls_expr* %call12, null, !dbg !5120
  br i1 %tobool13, label %if.then14, label %if.end22, !dbg !5123

if.then14:                                        ; preds = %if.then11
  store i1 true, i1* @gcse_mems_conflict_p, align 4, !dbg !5124
  br label %if.end22, !dbg !5125

if.end16:                                         ; preds = %if.end
  %bf.load17 = load i32, i32* %.lcssa, align 8, !dbg !5126
  %bf.lshr = lshr i32 %bf.load17, 16, !dbg !5126
  %bf.clear18 = and i32 %bf.lshr, 255, !dbg !5126
  %4 = load %struct.rtx_def*, %struct.rtx_def** @gcse_mem_operand, align 8, !dbg !5128
  %call19 = tail call i32 @true_dependence(%struct.rtx_def* %dest.addr.0.lcssa, i32 %bf.clear18, %struct.rtx_def* %4, i8 (%struct.rtx_def*, i8)* nonnull @rtx_addr_varies_p) #6, !dbg !5129
  %tobool20 = icmp eq i32 %call19, 0, !dbg !5129
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !5130

if.then21:                                        ; preds = %if.end16
  store i1 true, i1* @gcse_mems_conflict_p, align 4, !dbg !5131
  br label %if.end22, !dbg !5132

if.end22:                                         ; preds = %if.then11, %if.end16, %if.then14, %while.end, %if.then21
  ret void, !dbg !5133
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @expr_equiv_p(%struct.rtx_def* %x, %struct.rtx_def* %y) unnamed_addr #4 !dbg !5134 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5136, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5137, metadata !DIExpression()), !dbg !5138
  %call = tail call i32 @exp_equiv_p(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 0, i8 zeroext 1) #6, !dbg !5139
  ret i32 %call, !dbg !5140
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ls_expr* @find_rtx_in_ldst(%struct.rtx_def* %x) unnamed_addr #4 !dbg !5141 {
entry:
  %e = alloca %struct.ls_expr, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5145, metadata !DIExpression()), !dbg !5148
  %0 = bitcast %struct.ls_expr* %e to i8*, !dbg !5149
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %0) #8, !dbg !5149
  %1 = load %struct.htab*, %struct.htab** @pre_ldst_table, align 8, !dbg !5150
  %tobool = icmp eq %struct.htab* %1, null, !dbg !5150
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5152

if.end:                                           ; preds = %entry
  %pattern = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %e, i64 0, i32 1, !dbg !5153
  store %struct.rtx_def* %x, %struct.rtx_def** %pattern, align 8, !dbg !5154
  %call = call i8** @htab_find_slot(%struct.htab* nonnull %1, i8* nonnull %0, i32 0) #6, !dbg !5155
  call void @llvm.dbg.value(metadata i8** %call, metadata !5147, metadata !DIExpression()), !dbg !5148
  %tobool1 = icmp eq i8** %call, null, !dbg !5156
  br i1 %tobool1, label %cleanup, label %lor.lhs.false, !dbg !5158

lor.lhs.false:                                    ; preds = %if.end
  %2 = bitcast i8** %call to %struct.ls_expr**, !dbg !5159
  %3 = load %struct.ls_expr*, %struct.ls_expr** %2, align 8, !dbg !5159
  %invalid = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %3, i64 0, i32 6, !dbg !5160
  %4 = load i32, i32* %invalid, align 8, !dbg !5160
  %tobool2 = icmp eq i32 %4, 0, !dbg !5161
  br i1 %tobool2, label %if.end4, label %cleanup, !dbg !5162

if.end4:                                          ; preds = %lor.lhs.false
  br label %cleanup, !dbg !5163

cleanup:                                          ; preds = %lor.lhs.false, %if.end, %entry, %if.end4
  %retval.0 = phi %struct.ls_expr* [ %3, %if.end4 ], [ null, %entry ], [ null, %lor.lhs.false ], [ null, %if.end ], !dbg !5148
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %0) #8, !dbg !5164
  ret %struct.ls_expr* %retval.0, !dbg !5164
}

declare dso_local i32 @true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, i8 (%struct.rtx_def*, i8)*) local_unnamed_addr #1

declare dso_local zeroext i8 @rtx_addr_varies_p(%struct.rtx_def*, i8 zeroext) #1

declare dso_local i32 @exp_equiv_p(%struct.rtx_def*, %struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #1

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @hash_expr(%struct.rtx_def* %x, i32 %mode, i32* %do_not_record_p, i32 %hash_table_size) unnamed_addr #4 !dbg !5165 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5170, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5171, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.value(metadata i32* %do_not_record_p, metadata !5172, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.value(metadata i32 %hash_table_size, metadata !5173, metadata !DIExpression()), !dbg !5175
  store i32 0, i32* %do_not_record_p, align 4, !dbg !5176
  %call = tail call i32 @hash_rtx(%struct.rtx_def* %x, i32 %mode, i32* %do_not_record_p, i32* null, i8 zeroext 0) #6, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %call, metadata !5174, metadata !DIExpression()), !dbg !5175
  %rem = urem i32 %call, %hash_table_size, !dbg !5178
  ret i32 %rem, !dbg !5179
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @gcse_alloc(i64 %size) unnamed_addr #4 !dbg !5180 {
entry:
  call void @llvm.dbg.value(metadata i64 %size, metadata !5184, metadata !DIExpression()), !dbg !5185
  %0 = load i32, i32* @bytes_used, align 4, !dbg !5186
  %1 = trunc i64 %size to i32, !dbg !5186
  %conv1 = add i32 %0, %1, !dbg !5186
  store i32 %conv1, i32* @bytes_used, align 4, !dbg !5186
  store i64 %size, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 5), align 8, !dbg !5187
  %2 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 4) to i64*), align 8, !dbg !5187
  %3 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 3) to i64*), align 8, !dbg !5187
  %sub.ptr.sub = sub i64 %2, %3, !dbg !5187
  %cmp = icmp slt i64 %sub.ptr.sub, %size, !dbg !5187
  %4 = inttoptr i64 %3 to i8*, !dbg !5187
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5187

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @gcse_obstack, i32 %1) #6, !dbg !5187
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 5), align 8, !dbg !5187
  %.pre3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !dbg !5187
  br label %cond.end, !dbg !5187

cond.end:                                         ; preds = %entry, %cond.true
  %5 = phi i8* [ %4, %entry ], [ %.pre3, %cond.true ], !dbg !5187
  %6 = phi i64 [ %size, %entry ], [ %.pre, %cond.true ], !dbg !5187
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !5187
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !dbg !5187
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 2), align 8, !dbg !5187
  %cmp4 = icmp eq i8* %add.ptr, %7, !dbg !5187
  %8 = ptrtoint i8* %7 to i64, !dbg !5187
  %9 = ptrtoint i8* %add.ptr to i64, !dbg !5187
  br i1 %cmp4, label %cond.true6, label %cond.end8, !dbg !5187

cond.true6:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 10), align 8, !dbg !5187
  %bf.set = or i8 %bf.load, 2, !dbg !5187
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 10), align 8, !dbg !5187
  br label %cond.end8, !dbg !5187

cond.end8:                                        ; preds = %cond.end, %cond.true6
  store i64 %8, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 5), align 8, !dbg !5187
  %10 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 6), align 8, !dbg !5187
  %conv14 = sext i32 %10 to i64, !dbg !5187
  %add15 = add nsw i64 %9, %conv14, !dbg !5187
  %neg = xor i32 %10, -1, !dbg !5187
  %conv16 = sext i32 %neg to i64, !dbg !5187
  %and = and i64 %add15, %conv16, !dbg !5187
  %11 = inttoptr i64 %and to i8*, !dbg !5187
  store i8* %11, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !dbg !5187
  %12 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 1) to i64*), align 8, !dbg !5187
  %sub.ptr.sub19 = sub i64 %and, %12, !dbg !5187
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 4) to i64*), align 8, !dbg !5187
  %sub.ptr.sub22 = sub i64 %13, %12, !dbg !5187
  %cmp23 = icmp sgt i64 %sub.ptr.sub19, %sub.ptr.sub22, !dbg !5187
  br i1 %cmp23, label %cond.true25, label %cond.end27, !dbg !5187

cond.true25:                                      ; preds = %cond.end8
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 3) to i64*), align 8, !dbg !5187
  br label %cond.end27, !dbg !5187

cond.end27:                                       ; preds = %cond.end8, %cond.true25
  %14 = phi i64 [ %and, %cond.end8 ], [ %13, %cond.true25 ], !dbg !5187
  store i64 %14, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 2) to i64*), align 8, !dbg !5187
  ret i8* %7, !dbg !5188
}

declare dso_local i32 @hash_rtx(%struct.rtx_def*, i32, i32*, i32*, i8 zeroext) local_unnamed_addr #1

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @hash_set(i32 %regno, i32 %hash_table_size) unnamed_addr #4 !dbg !5189 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5193, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i32 %hash_table_size, metadata !5194, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5195, metadata !DIExpression()), !dbg !5196
  %rem = urem i32 %regno, %hash_table_size, !dbg !5197
  ret i32 %rem, !dbg !5198
}

; Function Attrs: nounwind uwtable
define internal fastcc void @hash_scan_clobber(%struct.rtx_def* %x, %struct.rtx_def* %insn, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !5199 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5201, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5202, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !5203, metadata !DIExpression()), !dbg !5204
  ret void, !dbg !5205
}

declare dso_local %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_local_properties(%struct.simple_bitmap_def** %transp, %struct.simple_bitmap_def** %comp, %struct.simple_bitmap_def** %antloc, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !5206 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def** %transp, metadata !5210, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def** %comp, metadata !5211, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def** %antloc, metadata !5212, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata %struct.hash_table_d* %table, metadata !5213, metadata !DIExpression()), !dbg !5224
  %tobool = icmp eq %struct.simple_bitmap_def** %transp, null, !dbg !5225
  br i1 %tobool, label %if.end6, label %if.then, !dbg !5227

if.then:                                          ; preds = %entry
  %set_p = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 3, !dbg !5228
  %0 = load i32, i32* %set_p, align 8, !dbg !5228
  %tobool1 = icmp eq i32 %0, 0, !dbg !5231
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5232
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !5232
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5232
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 5, !dbg !5232
  %3 = load i32, i32* %x_last_basic_block, align 8, !dbg !5232
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !5233

if.then2:                                         ; preds = %if.then
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** nonnull %transp, i32 %3) #6, !dbg !5234
  br label %if.end6, !dbg !5234

if.else:                                          ; preds = %if.then
  tail call void @sbitmap_vector_ones(%struct.simple_bitmap_def** nonnull %transp, i32 %3) #6, !dbg !5235
  br label %if.end6

if.end6:                                          ; preds = %entry, %if.then2, %if.else
  %tobool7 = icmp eq %struct.simple_bitmap_def** %comp, null, !dbg !5236
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !5238

if.then8:                                         ; preds = %if.end6
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5239
  %cfg10 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5239
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10, align 8, !dbg !5239
  %x_last_basic_block11 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 5, !dbg !5239
  %6 = load i32, i32* %x_last_basic_block11, align 8, !dbg !5239
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** nonnull %comp, i32 %6) #6, !dbg !5240
  br label %if.end12, !dbg !5240

if.end12:                                         ; preds = %if.end6, %if.then8
  %tobool13 = icmp eq %struct.simple_bitmap_def** %antloc, null, !dbg !5241
  br i1 %tobool13, label %if.end18, label %if.then14, !dbg !5243

if.then14:                                        ; preds = %if.end12
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5244
  %cfg16 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !5244
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg16, align 8, !dbg !5244
  %x_last_basic_block17 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 5, !dbg !5244
  %9 = load i32, i32* %x_last_basic_block17, align 8, !dbg !5244
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** nonnull %antloc, i32 %9) #6, !dbg !5245
  br label %if.end18, !dbg !5245

if.end18:                                         ; preds = %if.end12, %if.then14
  call void @llvm.dbg.value(metadata i32 0, metadata !5214, metadata !DIExpression()), !dbg !5224
  %size = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 1, !dbg !5246
  %table19 = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 0, !dbg !5247
  %set_p26 = getelementptr inbounds %struct.hash_table_d, %struct.hash_table_d* %table, i64 0, i32 3, !dbg !5248
  br label %for.cond, !dbg !5250

for.cond:                                         ; preds = %for.inc56, %if.end18
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc56 ], [ 0, %if.end18 ], !dbg !5251
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5214, metadata !DIExpression()), !dbg !5224
  %10 = load i32, i32* %size, align 8, !dbg !5252
  %11 = zext i32 %10 to i64, !dbg !5253
  %cmp = icmp ult i64 %indvars.iv, %11, !dbg !5253
  br i1 %cmp, label %for.body, label %for.end57, !dbg !5254

for.body:                                         ; preds = %for.cond
  %12 = load %struct.expr**, %struct.expr*** %table19, align 8, !dbg !5255
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %12, i64 %indvars.iv, !dbg !5256
  br i1 %tobool, label %for.body.split.us, label %for.body.for.body.split_crit_edge, !dbg !5257

for.body.for.body.split_crit_edge:                ; preds = %for.body
  br label %for.cond20, !dbg !5257

for.body.split.us:                                ; preds = %for.body
  br label %for.cond20.us, !dbg !5257

for.cond20.us:                                    ; preds = %if.end53.us, %for.body.split.us
  %expr.0.in.us = phi %struct.expr** [ %arrayidx, %for.body.split.us ], [ %next_same_hash.us, %if.end53.us ]
  %expr.0.us = load %struct.expr*, %struct.expr** %expr.0.in.us, align 8, !dbg !5247
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0.us, metadata !5215, metadata !DIExpression()), !dbg !5258
  %cmp21.us = icmp eq %struct.expr* %expr.0.us, null, !dbg !5259
  br i1 %cmp21.us, label %for.inc56.us-lcssa.us, label %for.body22.us, !dbg !5260

for.body22.us:                                    ; preds = %for.cond20.us
  %bitmap_index.us = getelementptr inbounds %struct.expr, %struct.expr* %expr.0.us, i64 0, i32 1, !dbg !5261
  %13 = load i32, i32* %bitmap_index.us, align 8, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %13, metadata !5219, metadata !DIExpression()), !dbg !5262
  br i1 %tobool13, label %if.end36.us, label %if.then29.us, !dbg !5263

if.then29.us:                                     ; preds = %for.body22.us
  %antic_occr.us = getelementptr inbounds %struct.expr, %struct.expr* %expr.0.us, i64 0, i32 3, !dbg !5264
  br label %for.cond30.us, !dbg !5267

for.cond30.us:                                    ; preds = %for.body32.us, %if.then29.us
  %occr.0.in.us = phi %struct.occr** [ %antic_occr.us, %if.then29.us ], [ %next.us, %for.body32.us ]
  %occr.0.us = load %struct.occr*, %struct.occr** %occr.0.in.us, align 8, !dbg !5268
  call void @llvm.dbg.value(metadata %struct.occr* %occr.0.us, metadata !5223, metadata !DIExpression()), !dbg !5262
  %cmp31.us = icmp eq %struct.occr* %occr.0.us, null, !dbg !5269
  br i1 %cmp31.us, label %if.end36.loopexit.us, label %for.body32.us, !dbg !5271

for.body32.us:                                    ; preds = %for.cond30.us
  %insn.us = getelementptr inbounds %struct.occr, %struct.occr* %occr.0.us, i64 0, i32 1, !dbg !5272
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.us, align 8, !dbg !5272
  %arrayidx33.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 1, !dbg !5272
  %rt_bb.us = bitcast %struct.object_block** %arrayidx33.us to %struct.basic_block_def**, !dbg !5272
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb.us, align 8, !dbg !5272
  %index.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 9, !dbg !5274
  %16 = load i32, i32* %index.us, align 8, !dbg !5274
  %idxprom34.us = sext i32 %16 to i64, !dbg !5275
  %arrayidx35.us = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %antloc, i64 %idxprom34.us, !dbg !5275
  %17 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx35.us, align 8, !dbg !5275
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %17, i32 %13) #7, !dbg !5276
  %deleted_p.us = getelementptr inbounds %struct.occr, %struct.occr* %occr.0.us, i64 0, i32 2, !dbg !5277
  store i8 0, i8* %deleted_p.us, align 8, !dbg !5278
  %next.us = getelementptr inbounds %struct.occr, %struct.occr* %occr.0.us, i64 0, i32 0, !dbg !5279
  br label %for.cond30.us, !dbg !5280, !llvm.loop !5281

if.end36.us:                                      ; preds = %if.end36.loopexit.us, %for.body22.us
  br i1 %tobool7, label %if.end53.us, label %if.then38.us, !dbg !5283

if.then38.us:                                     ; preds = %if.end36.us
  %avail_occr.us = getelementptr inbounds %struct.expr, %struct.expr* %expr.0.us, i64 0, i32 4, !dbg !5284
  br label %for.cond39.us, !dbg !5287

for.cond39.us:                                    ; preds = %for.body41.us, %if.then38.us
  %occr.1.in.us = phi %struct.occr** [ %avail_occr.us, %if.then38.us ], [ %next51.us, %for.body41.us ]
  %occr.1.us = load %struct.occr*, %struct.occr** %occr.1.in.us, align 8, !dbg !5288
  call void @llvm.dbg.value(metadata %struct.occr* %occr.1.us, metadata !5223, metadata !DIExpression()), !dbg !5262
  %cmp40.us = icmp eq %struct.occr* %occr.1.us, null, !dbg !5289
  br i1 %cmp40.us, label %if.end53.loopexit.us, label %for.body41.us, !dbg !5291

for.body41.us:                                    ; preds = %for.cond39.us
  %insn42.us = getelementptr inbounds %struct.occr, %struct.occr* %occr.1.us, i64 0, i32 1, !dbg !5292
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn42.us, align 8, !dbg !5292
  %arrayidx45.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 1, !dbg !5292
  %rt_bb46.us = bitcast %struct.object_block** %arrayidx45.us to %struct.basic_block_def**, !dbg !5292
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb46.us, align 8, !dbg !5292
  %index47.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 9, !dbg !5294
  %20 = load i32, i32* %index47.us, align 8, !dbg !5294
  %idxprom48.us = sext i32 %20 to i64, !dbg !5295
  %arrayidx49.us = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %comp, i64 %idxprom48.us, !dbg !5295
  %21 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx49.us, align 8, !dbg !5295
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %21, i32 %13) #7, !dbg !5296
  %copied_p.us = getelementptr inbounds %struct.occr, %struct.occr* %occr.1.us, i64 0, i32 3, !dbg !5297
  store i8 0, i8* %copied_p.us, align 1, !dbg !5298
  %next51.us = getelementptr inbounds %struct.occr, %struct.occr* %occr.1.us, i64 0, i32 0, !dbg !5299
  br label %for.cond39.us, !dbg !5300, !llvm.loop !5301

if.end53.us:                                      ; preds = %if.end53.loopexit.us, %if.end36.us
  %reaching_reg.us = getelementptr inbounds %struct.expr, %struct.expr* %expr.0.us, i64 0, i32 5, !dbg !5303
  store %struct.rtx_def* null, %struct.rtx_def** %reaching_reg.us, align 8, !dbg !5304
  %next_same_hash.us = getelementptr inbounds %struct.expr, %struct.expr* %expr.0.us, i64 0, i32 2, !dbg !5305
  br label %for.cond20.us, !dbg !5306, !llvm.loop !5307

if.end53.loopexit.us:                             ; preds = %for.cond39.us
  br label %if.end53.us, !dbg !5303

if.end36.loopexit.us:                             ; preds = %for.cond30.us
  br label %if.end36.us, !dbg !5309

for.inc56.us-lcssa.us:                            ; preds = %for.cond20.us
  br label %for.inc56, !dbg !5310

for.cond20:                                       ; preds = %if.end53, %for.body.for.body.split_crit_edge
  %expr.0.in = phi %struct.expr** [ %arrayidx, %for.body.for.body.split_crit_edge ], [ %next_same_hash, %if.end53 ]
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !5247
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !5215, metadata !DIExpression()), !dbg !5258
  %cmp21 = icmp eq %struct.expr* %expr.0, null, !dbg !5259
  br i1 %cmp21, label %for.inc56.us-lcssa, label %for.body22, !dbg !5260

for.body22:                                       ; preds = %for.cond20
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 1, !dbg !5261
  %22 = load i32, i32* %bitmap_index, align 8, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %22, metadata !5219, metadata !DIExpression()), !dbg !5262
  %expr25 = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 0, !dbg !5311
  %23 = load %struct.rtx_def*, %struct.rtx_def** %expr25, align 8, !dbg !5311
  %24 = load i32, i32* %set_p26, align 8, !dbg !5312
  tail call fastcc void @compute_transp(%struct.rtx_def* %23, i32 %22, %struct.simple_bitmap_def** nonnull %transp, i32 %24) #7, !dbg !5313
  br i1 %tobool13, label %if.end36, label %if.then29, !dbg !5263

if.then29:                                        ; preds = %for.body22
  %antic_occr = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 3, !dbg !5264
  br label %for.cond30, !dbg !5267

for.cond30:                                       ; preds = %for.body32, %if.then29
  %occr.0.in = phi %struct.occr** [ %antic_occr, %if.then29 ], [ %next, %for.body32 ]
  %occr.0 = load %struct.occr*, %struct.occr** %occr.0.in, align 8, !dbg !5268
  call void @llvm.dbg.value(metadata %struct.occr* %occr.0, metadata !5223, metadata !DIExpression()), !dbg !5262
  %cmp31 = icmp eq %struct.occr* %occr.0, null, !dbg !5269
  br i1 %cmp31, label %if.end36.loopexit, label %for.body32, !dbg !5271

for.body32:                                       ; preds = %for.cond30
  %insn = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 1, !dbg !5272
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5272
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 1, !dbg !5272
  %rt_bb = bitcast %struct.object_block** %arrayidx33 to %struct.basic_block_def**, !dbg !5272
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5272
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 9, !dbg !5274
  %27 = load i32, i32* %index, align 8, !dbg !5274
  %idxprom34 = sext i32 %27 to i64, !dbg !5275
  %arrayidx35 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %antloc, i64 %idxprom34, !dbg !5275
  %28 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx35, align 8, !dbg !5275
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %28, i32 %22) #7, !dbg !5276
  %deleted_p = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 2, !dbg !5277
  store i8 0, i8* %deleted_p, align 8, !dbg !5278
  %next = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 0, !dbg !5279
  br label %for.cond30, !dbg !5280, !llvm.loop !5281

if.end36.loopexit:                                ; preds = %for.cond30
  br label %if.end36, !dbg !5309

if.end36:                                         ; preds = %if.end36.loopexit, %for.body22
  br i1 %tobool7, label %if.end53, label %if.then38, !dbg !5283

if.then38:                                        ; preds = %if.end36
  %avail_occr = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 4, !dbg !5284
  br label %for.cond39, !dbg !5287

for.cond39:                                       ; preds = %for.body41, %if.then38
  %occr.1.in = phi %struct.occr** [ %avail_occr, %if.then38 ], [ %next51, %for.body41 ]
  %occr.1 = load %struct.occr*, %struct.occr** %occr.1.in, align 8, !dbg !5288
  call void @llvm.dbg.value(metadata %struct.occr* %occr.1, metadata !5223, metadata !DIExpression()), !dbg !5262
  %cmp40 = icmp eq %struct.occr* %occr.1, null, !dbg !5289
  br i1 %cmp40, label %if.end53.loopexit, label %for.body41, !dbg !5291

for.body41:                                       ; preds = %for.cond39
  %insn42 = getelementptr inbounds %struct.occr, %struct.occr* %occr.1, i64 0, i32 1, !dbg !5292
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn42, align 8, !dbg !5292
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 1, !dbg !5292
  %rt_bb46 = bitcast %struct.object_block** %arrayidx45 to %struct.basic_block_def**, !dbg !5292
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb46, align 8, !dbg !5292
  %index47 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i64 0, i32 9, !dbg !5294
  %31 = load i32, i32* %index47, align 8, !dbg !5294
  %idxprom48 = sext i32 %31 to i64, !dbg !5295
  %arrayidx49 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %comp, i64 %idxprom48, !dbg !5295
  %32 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx49, align 8, !dbg !5295
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %32, i32 %22) #7, !dbg !5296
  %copied_p = getelementptr inbounds %struct.occr, %struct.occr* %occr.1, i64 0, i32 3, !dbg !5297
  store i8 0, i8* %copied_p, align 1, !dbg !5298
  %next51 = getelementptr inbounds %struct.occr, %struct.occr* %occr.1, i64 0, i32 0, !dbg !5299
  br label %for.cond39, !dbg !5300, !llvm.loop !5301

if.end53.loopexit:                                ; preds = %for.cond39
  br label %if.end53, !dbg !5303

if.end53:                                         ; preds = %if.end53.loopexit, %if.end36
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 5, !dbg !5303
  store %struct.rtx_def* null, %struct.rtx_def** %reaching_reg, align 8, !dbg !5304
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !5305
  br label %for.cond20, !dbg !5306, !llvm.loop !5307

for.inc56.us-lcssa:                               ; preds = %for.cond20
  br label %for.inc56, !dbg !5310

for.inc56:                                        ; preds = %for.inc56.us-lcssa.us, %for.inc56.us-lcssa
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5310
  br label %for.cond, !dbg !5314, !llvm.loop !5315

for.end57:                                        ; preds = %for.cond
  ret void, !dbg !5317
}

declare dso_local void @compute_available(%struct.simple_bitmap_def**, %struct.simple_bitmap_def**, %struct.simple_bitmap_def**, %struct.simple_bitmap_def**) local_unnamed_addr #1

declare dso_local void @sbitmap_vector_zero(%struct.simple_bitmap_def**, i32) local_unnamed_addr #1

declare dso_local void @sbitmap_vector_ones(%struct.simple_bitmap_def**, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_transp(%struct.rtx_def* %x, i32 %indx, %struct.simple_bitmap_def** %bmap, i32 %set_p) unnamed_addr #4 !dbg !5318 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_index = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5322, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.value(metadata i32 %indx, metadata !5323, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def** %bmap, metadata !5324, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.value(metadata i32 %set_p, metadata !5325, metadata !DIExpression()), !dbg !5409
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5410
  %1 = bitcast i32* %bb_index to i8*, !dbg !5410
  %tobool54 = icmp eq i32 %set_p, 0, !dbg !5411
  br label %repeat, !dbg !5416

repeat.loopexit:                                  ; preds = %if.then123
  %.lcssa = phi %struct.rtx_def* [ %55, %if.then123 ], !dbg !5417
  br label %repeat.backedge, !dbg !5423

repeat:                                           ; preds = %repeat.backedge, %entry
  %x.addr.0 = phi %struct.rtx_def* [ %x, %entry ], [ %x.addr.0.be, %repeat.backedge ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !5322, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.label(metadata !5408), !dbg !5424
  %cmp = icmp eq %struct.rtx_def* %x.addr.0, null, !dbg !5425
  br i1 %cmp, label %cleanup.cont171.loopexit3, label %if.end, !dbg !5423

if.end:                                           ; preds = %repeat
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !5427
  %bf.load = load i32, i32* %2, align 8, !dbg !5427
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !5328, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !5409
  %trunc = trunc i32 %bf.load to i16, !dbg !5428
  switch i16 %trunc, label %sw.epilog [
    i16 37, label %sw.bb
    i16 43, label %sw.bb45
    i16 36, label %cleanup.cont171.loopexit3
    i16 46, label %cleanup.cont171.loopexit3
    i16 35, label %cleanup.cont171.loopexit3
    i16 30, label %cleanup.cont171.loopexit3
    i16 32, label %cleanup.cont171.loopexit3
    i16 31, label %cleanup.cont171.loopexit3
    i16 33, label %cleanup.cont171.loopexit3
    i16 45, label %cleanup.cont171.loopexit3
    i16 44, label %cleanup.cont171.loopexit3
    i16 20, label %cleanup.cont171.loopexit3
    i16 21, label %cleanup.cont171.loopexit3
  ], !dbg !5428

sw.bb:                                            ; preds = %if.end
  %x.addr.0.lcssa10 = phi %struct.rtx_def* [ %x.addr.0, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa10, metadata !5322, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa10, metadata !5322, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0.lcssa10, metadata !5322, metadata !DIExpression()), !dbg !5409
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5429
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 5, !dbg !5429
  %4 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !5429
  %call = call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %x.addr.0.lcssa10) #7, !dbg !5429
  %idxprom = zext i32 %call to i64, !dbg !5429
  %arrayidx = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %4, i64 %idxprom, !dbg !5429
  %5 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx, align 8, !dbg !5429
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %5, i64 0, i32 0, !dbg !5429
  %6 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain, align 8, !dbg !5429
  br i1 %tobool54, label %for.cond17.preheader, label %for.cond.preheader, !dbg !5430

for.cond.preheader:                               ; preds = %sw.bb
  br label %for.cond, !dbg !5431

for.cond17.preheader:                             ; preds = %sw.bb
  br label %for.cond17, !dbg !5433

for.cond:                                         ; preds = %for.cond.preheader, %cond.end
  %def.0 = phi %union.df_ref_d* [ %13, %cond.end ], [ %6, %for.cond.preheader ], !dbg !5435
  call void @llvm.dbg.value(metadata %union.df_ref_d* %def.0, metadata !5330, metadata !DIExpression()), !dbg !5436
  %tobool2 = icmp eq %union.df_ref_d* %def.0, null, !dbg !5431
  br i1 %tobool2, label %cleanup.cont171.loopexit1, label %for.body, !dbg !5431

for.body:                                         ; preds = %for.cond
  %7 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def.0, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !5437
  %bf.load3 = load i32, i32* %7, align 8, !dbg !5437
  %bf.clear4 = and i32 %bf.load3, 255, !dbg !5437
  %cmp5 = icmp eq i32 %bf.clear4, 1, !dbg !5437
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !5437

cond.true:                                        ; preds = %for.body
  %bb = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def.0, i64 0, i32 0, i32 0, i32 1, !dbg !5437
  %8 = bitcast %struct.rtx_def*** %bb to %struct.basic_block_def**, !dbg !5437
  br label %cond.end, !dbg !5437

cond.false:                                       ; preds = %for.body
  %insn_info = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !5437
  %9 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5437
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %9, i64 0, i32 0, !dbg !5437
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5437
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 1, !dbg !5437
  %rt_bb = bitcast %struct.object_block** %arrayidx7 to %struct.basic_block_def**, !dbg !5437
  br label %cond.end, !dbg !5437

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.basic_block_def** [ %8, %cond.true ], [ %rt_bb, %cond.false ]
  %cond = load %struct.basic_block_def*, %struct.basic_block_def** %cond.in, align 8, !dbg !5437
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond, i64 0, i32 9, !dbg !5439
  %11 = load i32, i32* %index, align 8, !dbg !5439
  %idxprom8 = sext i32 %11 to i64, !dbg !5440
  %arrayidx9 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %bmap, i64 %idxprom8, !dbg !5440
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx9, align 8, !dbg !5440
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %12, i32 %indx) #7, !dbg !5441
  %next_reg = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5442
  %13 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !5442
  call void @llvm.dbg.value(metadata %union.df_ref_d* %13, metadata !5330, metadata !DIExpression()), !dbg !5436
  br label %for.cond, !dbg !5443, !llvm.loop !5444

for.cond17:                                       ; preds = %for.cond17.preheader, %cond.end35
  %def11.0 = phi %union.df_ref_d* [ %20, %cond.end35 ], [ %6, %for.cond17.preheader ], !dbg !5446
  call void @llvm.dbg.value(metadata %union.df_ref_d* %def11.0, metadata !5395, metadata !DIExpression()), !dbg !5447
  %tobool18 = icmp eq %union.df_ref_d* %def11.0, null, !dbg !5433
  br i1 %tobool18, label %cleanup.cont171.loopexit, label %for.body19, !dbg !5433

for.body19:                                       ; preds = %for.cond17
  %14 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def11.0, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !5448
  %bf.load21 = load i32, i32* %14, align 8, !dbg !5448
  %bf.clear22 = and i32 %bf.load21, 255, !dbg !5448
  %cmp23 = icmp eq i32 %bf.clear22, 1, !dbg !5448
  br i1 %cmp23, label %cond.true24, label %cond.false27, !dbg !5448

cond.true24:                                      ; preds = %for.body19
  %bb26 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def11.0, i64 0, i32 0, i32 0, i32 1, !dbg !5448
  %15 = bitcast %struct.rtx_def*** %bb26 to %struct.basic_block_def**, !dbg !5448
  br label %cond.end35, !dbg !5448

cond.false27:                                     ; preds = %for.body19
  %insn_info29 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def11.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !5448
  %16 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info29, align 8, !dbg !5448
  %insn30 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %16, i64 0, i32 0, !dbg !5448
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn30, align 8, !dbg !5448
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 1, !dbg !5448
  %rt_bb34 = bitcast %struct.object_block** %arrayidx33 to %struct.basic_block_def**, !dbg !5448
  br label %cond.end35, !dbg !5448

cond.end35:                                       ; preds = %cond.false27, %cond.true24
  %cond36.in = phi %struct.basic_block_def** [ %15, %cond.true24 ], [ %rt_bb34, %cond.false27 ]
  %cond36 = load %struct.basic_block_def*, %struct.basic_block_def** %cond36.in, align 8, !dbg !5448
  %index37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond36, i64 0, i32 9, !dbg !5450
  %18 = load i32, i32* %index37, align 8, !dbg !5450
  %idxprom38 = sext i32 %18 to i64, !dbg !5451
  %arrayidx39 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %bmap, i64 %idxprom38, !dbg !5451
  %19 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx39, align 8, !dbg !5451
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %19, i32 %indx) #7, !dbg !5452
  %next_reg42 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def11.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5453
  %20 = load %union.df_ref_d*, %union.df_ref_d** %next_reg42, align 8, !dbg !5453
  call void @llvm.dbg.value(metadata %union.df_ref_d* %20, metadata !5395, metadata !DIExpression()), !dbg !5447
  br label %for.cond17, !dbg !5454, !llvm.loop !5455

sw.bb45:                                          ; preds = %if.end
  %bf.clear47 = and i32 %bf.load, 67108864, !dbg !5457
  %tobool48 = icmp eq i32 %bf.clear47, 0, !dbg !5457
  br i1 %tobool48, label %if.then49, label %if.end104, !dbg !5458

if.then49:                                        ; preds = %sw.bb45
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5459
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5460
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_calls, align 8, !dbg !5461
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5400, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %21, i32 0, i32* nonnull %bb_index) #7, !dbg !5461
  br i1 %tobool54, label %if.then49.split.us, label %if.then49.if.then49.split_crit_edge, !dbg !5461

if.then49.if.then49.split_crit_edge:              ; preds = %if.then49
  br label %for.cond50, !dbg !5461

if.then49.split.us:                               ; preds = %if.then49
  br label %for.cond50.us, !dbg !5461

for.cond50.us:                                    ; preds = %for.body53.us, %if.then49.split.us
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5400, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %call51.us = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5462
  %tobool52.us = icmp eq i8 %call51.us, 0, !dbg !5461
  br i1 %tobool52.us, label %for.end63.us-lcssa.us, label %for.body53.us, !dbg !5461

for.body53.us:                                    ; preds = %for.cond50.us
  call void @llvm.dbg.value(metadata i32 undef, metadata !5400, metadata !DIExpression()), !dbg !5410
  %22 = load i32, i32* %bb_index, align 4, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %22, metadata !5400, metadata !DIExpression()), !dbg !5410
  %idxprom56.us = zext i32 %22 to i64, !dbg !5411
  %arrayidx57.us = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %bmap, i64 %idxprom56.us, !dbg !5411
  %23 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx57.us, align 8, !dbg !5411
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %23, i32 %indx) #7, !dbg !5463
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5400, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5462
  br label %for.cond50.us, !dbg !5462, !llvm.loop !5464

for.end63.us-lcssa.us:                            ; preds = %for.cond50.us
  br label %for.end63, !dbg !5466

for.cond50:                                       ; preds = %for.body53, %if.then49.if.then49.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5400, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %call51 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5462
  %tobool52 = icmp eq i8 %call51, 0, !dbg !5461
  br i1 %tobool52, label %for.end63.us-lcssa, label %for.body53, !dbg !5461

for.body53:                                       ; preds = %for.cond50
  call void @llvm.dbg.value(metadata i32 undef, metadata !5400, metadata !DIExpression()), !dbg !5410
  %24 = load i32, i32* %bb_index, align 4, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %24, metadata !5400, metadata !DIExpression()), !dbg !5410
  %idxprom56 = zext i32 %24 to i64, !dbg !5411
  %arrayidx57 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %bmap, i64 %idxprom56, !dbg !5411
  %25 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx57, align 8, !dbg !5411
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %25, i32 %indx) #7, !dbg !5467
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5400, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5462
  br label %for.cond50, !dbg !5462, !llvm.loop !5464

for.end63.us-lcssa:                               ; preds = %for.cond50
  br label %for.end63, !dbg !5466

for.end63:                                        ; preds = %for.end63.us-lcssa.us, %for.end63.us-lcssa
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @modify_mem_list_set, align 8, !dbg !5466
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_calls, align 8, !dbg !5466
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5400, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call fastcc void @bmp_iter_and_compl_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %26, %struct.bitmap_head_def* %27, i32 0, i32* nonnull %bb_index) #7, !dbg !5466
  br label %for.cond64, !dbg !5466

for.cond64:                                       ; preds = %for.inc102, %for.end63
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5400, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %call65 = call fastcc zeroext i8 @bmp_iter_and_compl(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5468
  %tobool66 = icmp eq i8 %call65, 0, !dbg !5466
  br i1 %tobool66, label %for.end103, label %for.body67, !dbg !5466

for.body67:                                       ; preds = %for.cond64
  %28 = load %struct.rtx_def**, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !5469
  %29 = load i32, i32* %bb_index, align 4, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %29, metadata !5400, metadata !DIExpression()), !dbg !5410
  %idxprom68 = zext i32 %29 to i64, !dbg !5469
  %arrayidx69 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %28, i64 %idxprom68, !dbg !5469
  %30 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx69, align 8, !dbg !5469
  call void @llvm.dbg.value(metadata %struct.rtx_def* %30, metadata !5401, metadata !DIExpression()), !dbg !5471
  br i1 %tobool54, label %for.body67.split.us, label %for.body67.for.body67.split_crit_edge, !dbg !5472

for.body67.for.body67.split_crit_edge:            ; preds = %for.body67
  br label %while.cond, !dbg !5472

for.body67.split.us:                              ; preds = %for.body67
  br label %while.cond.us, !dbg !5472

while.cond.us:                                    ; preds = %cleanup.us, %for.body67.split.us
  %list_entry.0.us = phi %struct.rtx_def* [ %30, %for.body67.split.us ], [ %list_entry.1.us, %cleanup.us ], !dbg !5471
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list_entry.0.us, metadata !5401, metadata !DIExpression()), !dbg !5471
  %tobool70.us = icmp eq %struct.rtx_def* %list_entry.0.us, null, !dbg !5472
  br i1 %tobool70.us, label %for.inc102.us-lcssa.us, label %while.body.us, !dbg !5472

while.body.us:                                    ; preds = %while.cond.us
  %arrayidx73.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5473
  %rt_rtx.us = bitcast %union.rtunion_def* %arrayidx73.us to %struct.rtx_def**, !dbg !5473
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx.us, align 8, !dbg !5473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !5405, metadata !DIExpression()), !dbg !5474
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5475
  %rt_rtx77.us = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !5475
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77.us, align 8, !dbg !5475
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !5401, metadata !DIExpression()), !dbg !5471
  %arrayidx80.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5476
  %rt_rtx81.us = bitcast %union.rtunion_def* %arrayidx80.us to %struct.rtx_def**, !dbg !5476
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81.us, align 8, !dbg !5476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !5407, metadata !DIExpression()), !dbg !5474
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 0, !dbg !5477
  %bf.load82.us = load i32, i32* %35, align 8, !dbg !5477
  %bf.lshr83.us = lshr i32 %bf.load82.us, 16, !dbg !5477
  %bf.clear84.us = and i32 %bf.lshr83.us, 255, !dbg !5477
  %call85.us = call i32 @canon_true_dependence(%struct.rtx_def* %31, i32 %bf.clear84.us, %struct.rtx_def* %34, %struct.rtx_def* nonnull %x.addr.0, %struct.rtx_def* null, i8 (%struct.rtx_def*, i8)* nonnull @rtx_addr_varies_p) #6, !dbg !5479
  %tobool86.us = icmp eq i32 %call85.us, 0, !dbg !5479
  br i1 %tobool86.us, label %if.end96.us, label %if.then87.us, !dbg !5480

if.then87.us:                                     ; preds = %while.body.us
  call void @llvm.dbg.value(metadata i32 undef, metadata !5400, metadata !DIExpression()), !dbg !5410
  %36 = load i32, i32* %bb_index, align 4, !dbg !5481
  call void @llvm.dbg.value(metadata i32 %36, metadata !5400, metadata !DIExpression()), !dbg !5410
  %idxprom90.us = zext i32 %36 to i64, !dbg !5481
  %arrayidx91.us = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %bmap, i64 %idxprom90.us, !dbg !5481
  %37 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx91.us, align 8, !dbg !5481
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %37, i32 %indx) #7, !dbg !5484
  br label %cleanup.us

if.end96.us:                                      ; preds = %while.body.us
  %38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5485
  %rt_rtx100.us = bitcast %union.rtunion_def* %38 to %struct.rtx_def**, !dbg !5485
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100.us, align 8, !dbg !5485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %39, metadata !5401, metadata !DIExpression()), !dbg !5471
  br label %cleanup.us, !dbg !5486

cleanup.us:                                       ; preds = %if.end96.us, %if.then87.us
  %cleanup.dest.slot.0.us = phi i1 [ true, %if.end96.us ], [ false, %if.then87.us ]
  %list_entry.1.us = phi %struct.rtx_def* [ %39, %if.end96.us ], [ %33, %if.then87.us ], !dbg !5474
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list_entry.1.us, metadata !5401, metadata !DIExpression()), !dbg !5471
  br i1 %cleanup.dest.slot.0.us, label %while.cond.us, label %for.inc102.us-lcssa.us, !llvm.loop !5487

for.inc102.us-lcssa.us:                           ; preds = %cleanup.us, %while.cond.us
  br label %for.inc102, !dbg !5468

while.cond:                                       ; preds = %cleanup, %for.body67.for.body67.split_crit_edge
  %list_entry.0 = phi %struct.rtx_def* [ %30, %for.body67.for.body67.split_crit_edge ], [ %list_entry.1, %cleanup ], !dbg !5471
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list_entry.0, metadata !5401, metadata !DIExpression()), !dbg !5471
  %tobool70 = icmp eq %struct.rtx_def* %list_entry.0, null, !dbg !5472
  br i1 %tobool70, label %for.inc102.us-lcssa, label %while.body, !dbg !5472

while.body:                                       ; preds = %while.cond
  %arrayidx73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5473
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !5473
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %40, metadata !5405, metadata !DIExpression()), !dbg !5474
  %41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list_entry.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5475
  %rt_rtx77 = bitcast %union.rtunion_def* %41 to %struct.rtx_def**, !dbg !5475
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !5475
  call void @llvm.dbg.value(metadata %struct.rtx_def* %42, metadata !5401, metadata !DIExpression()), !dbg !5471
  %arrayidx80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5476
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !5476
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !5476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %43, metadata !5407, metadata !DIExpression()), !dbg !5474
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i64 0, i32 0, !dbg !5477
  %bf.load82 = load i32, i32* %44, align 8, !dbg !5477
  %bf.lshr83 = lshr i32 %bf.load82, 16, !dbg !5477
  %bf.clear84 = and i32 %bf.lshr83, 255, !dbg !5477
  %call85 = call i32 @canon_true_dependence(%struct.rtx_def* %40, i32 %bf.clear84, %struct.rtx_def* %43, %struct.rtx_def* nonnull %x.addr.0, %struct.rtx_def* null, i8 (%struct.rtx_def*, i8)* nonnull @rtx_addr_varies_p) #6, !dbg !5479
  %tobool86 = icmp eq i32 %call85, 0, !dbg !5479
  br i1 %tobool86, label %if.end96, label %if.then87, !dbg !5480

if.then87:                                        ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !5400, metadata !DIExpression()), !dbg !5410
  %45 = load i32, i32* %bb_index, align 4, !dbg !5481
  call void @llvm.dbg.value(metadata i32 %45, metadata !5400, metadata !DIExpression()), !dbg !5410
  %idxprom90 = zext i32 %45 to i64, !dbg !5481
  %arrayidx91 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %bmap, i64 %idxprom90, !dbg !5481
  %46 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx91, align 8, !dbg !5481
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %46, i32 %indx) #7, !dbg !5488
  br label %cleanup, !dbg !5488

if.end96:                                         ; preds = %while.body
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5485
  %rt_rtx100 = bitcast %union.rtunion_def* %47 to %struct.rtx_def**, !dbg !5485
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !5485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %48, metadata !5401, metadata !DIExpression()), !dbg !5471
  br label %cleanup, !dbg !5486

cleanup:                                          ; preds = %if.then87, %if.end96
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end96 ], [ false, %if.then87 ]
  %list_entry.1 = phi %struct.rtx_def* [ %48, %if.end96 ], [ %42, %if.then87 ], !dbg !5474
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list_entry.1, metadata !5401, metadata !DIExpression()), !dbg !5471
  br i1 %cleanup.dest.slot.0, label %while.cond, label %for.inc102.us-lcssa, !llvm.loop !5487

for.inc102.us-lcssa:                              ; preds = %cleanup, %while.cond
  br label %for.inc102, !dbg !5468

for.inc102:                                       ; preds = %for.inc102.us-lcssa.us, %for.inc102.us-lcssa
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5400, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5468
  br label %for.cond64, !dbg !5468, !llvm.loop !5489

for.end103:                                       ; preds = %for.cond64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5491
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5491
  br label %if.end104, !dbg !5492

if.end104:                                        ; preds = %sw.bb45, %for.end103
  %arrayidx107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5493
  %rt_rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**, !dbg !5493
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx108, align 8, !dbg !5493
  call void @llvm.dbg.value(metadata %struct.rtx_def* %49, metadata !5322, metadata !DIExpression()), !dbg !5409
  br label %repeat.backedge, !dbg !5494

repeat.backedge:                                  ; preds = %if.end104, %repeat.loopexit
  %x.addr.0.be = phi %struct.rtx_def* [ %49, %if.end104 ], [ %.lcssa, %repeat.loopexit ]
  br label %repeat, !dbg !5409

sw.epilog:                                        ; preds = %if.end
  %bf.clear = and i32 %bf.load, 65535, !dbg !5427
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5328, metadata !DIExpression()), !dbg !5409
  %idxprom110 = zext i32 %bf.clear to i64, !dbg !5495
  %arrayidx111 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom110, !dbg !5495
  %50 = load i8, i8* %arrayidx111, align 1, !dbg !5495
  call void @llvm.dbg.value(metadata i8 %50, metadata !5326, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5409
  %arrayidx113 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom110, !dbg !5496
  %51 = load i8*, i8** %arrayidx113, align 8, !dbg !5496
  call void @llvm.dbg.value(metadata i8* %51, metadata !5329, metadata !DIExpression()), !dbg !5409
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, !dbg !5497
  %fld147 = bitcast %union.u* %u146 to [1 x %union.rtunion_def]*, !dbg !5497
  %52 = zext i8 %50 to i64, !dbg !5501
  br label %for.cond114, !dbg !5501

for.cond114:                                      ; preds = %for.inc164, %sw.epilog
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.inc164 ], [ %52, %sw.epilog ]
  %indvars.iv.next9 = add nsw i64 %indvars.iv8, -1, !dbg !5502
  call void @llvm.dbg.value(metadata i32 undef, metadata !5326, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5409
  %cmp115 = icmp sgt i64 %indvars.iv8, 0, !dbg !5503
  br i1 %cmp115, label %for.body117, label %cleanup.cont171.loopexit2, !dbg !5504

for.body117:                                      ; preds = %for.cond114
  %arrayidx119 = getelementptr inbounds i8, i8* %51, i64 %indvars.iv.next9, !dbg !5505
  %53 = load i8, i8* %arrayidx119, align 1, !dbg !5505
  %cmp121 = icmp eq i8 %53, 101, !dbg !5506
  br i1 %cmp121, label %if.then123, label %if.else138, !dbg !5507

if.then123:                                       ; preds = %for.body117
  %54 = icmp eq i64 %indvars.iv.next9, 0
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i64 0, i64 %indvars.iv.next9, !dbg !5417
  %rt_rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**, !dbg !5417
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !5417
  br i1 %54, label %repeat.loopexit, label %if.end132, !dbg !5508

if.end132:                                        ; preds = %if.then123
  call fastcc void @compute_transp(%struct.rtx_def* %55, i32 %indx, %struct.simple_bitmap_def** %bmap, i32 %set_p) #7, !dbg !5509
  br label %for.inc164, !dbg !5510

if.else138:                                       ; preds = %for.body117
  %cmp142 = icmp eq i8 %53, 69, !dbg !5511
  br i1 %cmp142, label %for.cond145.preheader, label %for.inc164, !dbg !5512

for.cond145.preheader:                            ; preds = %if.else138
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i64 0, i64 %indvars.iv.next9, !dbg !5497
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtvec_def**, !dbg !5497
  br label %for.cond145, !dbg !5513

for.cond145:                                      ; preds = %for.cond145.preheader, %for.body152
  %indvars.iv = phi i64 [ 0, %for.cond145.preheader ], [ %indvars.iv.next, %for.body152 ], !dbg !5514
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5327, metadata !DIExpression()), !dbg !5409
  %56 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5515
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %56, i64 0, i32 0, !dbg !5515
  %57 = load i32, i32* %num_elem, align 8, !dbg !5515
  %58 = sext i32 %57 to i64, !dbg !5516
  %cmp150 = icmp slt i64 %indvars.iv, %58, !dbg !5516
  br i1 %cmp150, label %for.body152, label %for.inc164.loopexit, !dbg !5513

for.body152:                                      ; preds = %for.cond145
  %arrayidx159 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %56, i64 0, i32 1, i64 %indvars.iv, !dbg !5517
  %59 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx159, align 8, !dbg !5517
  call fastcc void @compute_transp(%struct.rtx_def* %59, i32 %indx, %struct.simple_bitmap_def** %bmap, i32 %set_p) #7, !dbg !5518
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5519
  call void @llvm.dbg.value(metadata i32 undef, metadata !5327, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5409
  br label %for.cond145, !dbg !5520, !llvm.loop !5521

for.inc164.loopexit:                              ; preds = %for.cond145
  br label %for.inc164, !dbg !5523

for.inc164:                                       ; preds = %for.inc164.loopexit, %if.end132, %if.else138
  call void @llvm.dbg.value(metadata i32 undef, metadata !5326, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5409
  br label %for.cond114, !dbg !5523, !llvm.loop !5524

cleanup.cont171.loopexit:                         ; preds = %for.cond17
  br label %cleanup.cont171, !dbg !5526

cleanup.cont171.loopexit1:                        ; preds = %for.cond
  br label %cleanup.cont171, !dbg !5526

cleanup.cont171.loopexit2:                        ; preds = %for.cond114
  br label %cleanup.cont171, !dbg !5526

cleanup.cont171.loopexit3:                        ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %repeat
  br label %cleanup.cont171, !dbg !5526

cleanup.cont171:                                  ; preds = %cleanup.cont171.loopexit3, %cleanup.cont171.loopexit2, %cleanup.cont171.loopexit1, %cleanup.cont171.loopexit
  ret void, !dbg !5526
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !5527 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !5531, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !5532, metadata !DIExpression()), !dbg !5536
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !5537
  %0 = load i8*, i8** %popcount, align 8, !dbg !5537
  %tobool = icmp eq i8* %0, null, !dbg !5538
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !5539

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !5540
  %.pre2 = zext i32 %.pre to i64, !dbg !5541
  %.pre3 = shl i64 1, %.pre2, !dbg !5541
  %.pre4 = lshr i32 %bitno, 6, !dbg !5542
  %.pre5 = zext i32 %.pre4 to i64, !dbg !5543
  br label %if.end7, !dbg !5539

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !5544
  %idxprom = zext i32 %div to i64, !dbg !5544
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !5544
  %1 = load i64, i64* %arrayidx, align 8, !dbg !5544
  %rem = and i32 %bitno, 63, !dbg !5544
  %sh_prom = zext i32 %rem to i64, !dbg !5544
  %2 = shl i64 1, %sh_prom, !dbg !5545
  %3 = and i64 %1, %2, !dbg !5545
  %tobool1 = icmp eq i64 %3, 0, !dbg !5545
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !5547

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !5548
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !5549
  %inc = add i8 %4, 1, !dbg !5549
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !5549
  br label %if.end7, !dbg !5548

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !5543
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !5541
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !5543
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !5550
  %or = or i64 %5, %shl.pre-phi, !dbg !5550
  store i64 %or, i64* %arrayidx13, align 8, !dbg !5550
  ret void, !dbg !5551
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !5552 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !5554, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !5555, metadata !DIExpression()), !dbg !5559
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !5560
  %0 = load i8*, i8** %popcount, align 8, !dbg !5560
  %tobool = icmp eq i8* %0, null, !dbg !5561
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !5562

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !5563
  %.pre2 = zext i32 %.pre to i64, !dbg !5564
  %.pre3 = shl i64 1, %.pre2, !dbg !5564
  %.pre4 = lshr i32 %bitno, 6, !dbg !5565
  %.pre5 = zext i32 %.pre4 to i64, !dbg !5566
  br label %if.end7, !dbg !5562

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !5567
  %idxprom = zext i32 %div to i64, !dbg !5567
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !5567
  %1 = load i64, i64* %arrayidx, align 8, !dbg !5567
  %rem = and i32 %bitno, 63, !dbg !5567
  %sh_prom = zext i32 %rem to i64, !dbg !5567
  %2 = shl i64 1, %sh_prom, !dbg !5568
  %3 = and i64 %1, %2, !dbg !5568
  %tobool1 = icmp eq i64 %3, 0, !dbg !5568
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !5570

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !5571
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !5572
  %dec = add i8 %4, -1, !dbg !5572
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !5572
  br label %if.end7, !dbg !5571

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !5566
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !5564
  %neg = xor i64 %shl.pre-phi, -1, !dbg !5573
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !5566
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !5574
  %and14 = and i64 %5, %neg, !dbg !5574
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !5574
  ret void, !dbg !5575
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_and_compl_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map1, %struct.bitmap_head_def* %map2, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !5576 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5580, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map1, metadata !5581, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map2, metadata !5582, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 0, metadata !5583, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5584, metadata !DIExpression()), !dbg !5585
  %0 = bitcast %struct.bitmap_head_def* %map1 to i64*, !dbg !5586
  %1 = load i64, i64* %0, align 8, !dbg !5586
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !5587
  store i64 %1, i64* %2, align 8, !dbg !5587
  %3 = bitcast %struct.bitmap_head_def* %map2 to i64*, !dbg !5588
  %4 = load i64, i64* %3, align 8, !dbg !5588
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !5589
  %5 = bitcast %struct.bitmap_element_def** %elt2 to i64*, !dbg !5590
  store i64 %4, i64* %5, align 8, !dbg !5590
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !5591
  %6 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !5594
  %7 = inttoptr i64 %4 to %struct.bitmap_element_def*, !dbg !5594
  br label %while.body, !dbg !5594

while.body:                                       ; preds = %entry, %if.end6
  %tobool = icmp eq i64 %1, 0, !dbg !5595
  br i1 %tobool, label %if.then, label %if.end, !dbg !5596

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !5597
  br label %while.end, !dbg !5599

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end6, label %while.end.loopexit, !dbg !5600

if.end6:                                          ; preds = %if.end
  br label %while.body, !dbg !5594, !llvm.loop !5601

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !5603

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %8 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %9 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %10 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %11 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %12 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  br label %while.cond, !dbg !5604

while.cond:                                       ; preds = %while.body16, %while.end
  %13 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ]
  %14 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ]
  %15 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ]
  %.in = phi i64 [ %21, %while.body16 ], [ %4, %while.end ]
  %16 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ]
  %17 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ], !dbg !5605
  %18 = inttoptr i64 %.in to i64*, !dbg !5585
  %tobool10 = icmp eq %struct.bitmap_element_def* %17, null, !dbg !5606
  br i1 %tobool10, label %while.end20, label %land.rhs, !dbg !5607

land.rhs:                                         ; preds = %while.cond
  %indx12 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i64 0, i32 2, !dbg !5608
  %19 = load i32, i32* %indx12, align 8, !dbg !5608
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i64 0, i32 2, !dbg !5609
  %20 = load i32, i32* %indx14, align 8, !dbg !5609
  %cmp15 = icmp ult i32 %19, %20, !dbg !5610
  br i1 %cmp15, label %while.body16, label %while.end20, !dbg !5604

while.body16:                                     ; preds = %land.rhs
  %21 = load i64, i64* %18, align 8, !dbg !5611
  store i64 %21, i64* %5, align 8, !dbg !5612
  %22 = inttoptr i64 %21 to %struct.bitmap_element_def*, !dbg !5604
  br label %while.cond, !dbg !5604, !llvm.loop !5613

while.end20:                                      ; preds = %while.cond, %land.rhs
  %.lcssa5 = phi %struct.bitmap_element_def* [ %13, %while.cond ], [ %13, %land.rhs ]
  %.lcssa4 = phi %struct.bitmap_element_def* [ %14, %while.cond ], [ %14, %land.rhs ]
  %.lcssa = phi %struct.bitmap_element_def* [ %15, %while.cond ], [ %15, %land.rhs ]
  %indx22 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %11, i64 0, i32 2, !dbg !5614
  %23 = load i32, i32* %indx22, align 8, !dbg !5614
  %cmp24 = icmp eq i32 %23, 0, !dbg !5616
  br i1 %cmp24, label %if.end28, label %if.then25, !dbg !5617

if.then25:                                        ; preds = %while.end20
  %indx27 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i64 0, i32 2, !dbg !5618
  %24 = load i32, i32* %indx27, align 8, !dbg !5618
  %mul = shl i32 %24, 7, !dbg !5619
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5583, metadata !DIExpression()), !dbg !5585
  br label %if.end28, !dbg !5620

if.end28:                                         ; preds = %while.end20, %if.then25
  %start_bit.addr.0 = phi i32 [ %mul, %if.then25 ], [ 0, %while.end20 ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !5583, metadata !DIExpression()), !dbg !5585
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !5621
  store i32 0, i32* %word_no, align 8, !dbg !5622
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 0, !dbg !5623
  %25 = load i64, i64* %arrayidx, align 8, !dbg !5623
  %bits32 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5624
  store i64 %25, i64* %bits32, align 8, !dbg !5625
  %tobool34 = icmp eq %struct.bitmap_element_def* %.lcssa, null, !dbg !5626
  br i1 %tobool34, label %if.end47, label %land.lhs.true, !dbg !5628

land.lhs.true:                                    ; preds = %if.end28
  %indx36 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %8, i64 0, i32 2, !dbg !5629
  %26 = load i32, i32* %indx36, align 8, !dbg !5629
  %indx38 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %.lcssa4, i64 0, i32 2, !dbg !5630
  %27 = load i32, i32* %indx38, align 8, !dbg !5630
  %cmp39 = icmp eq i32 %26, %27, !dbg !5631
  br i1 %cmp39, label %if.then40, label %if.end47, !dbg !5632

if.then40:                                        ; preds = %land.lhs.true
  %arrayidx45 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %.lcssa5, i64 0, i32 3, i64 0, !dbg !5633
  %28 = load i64, i64* %arrayidx45, align 8, !dbg !5633
  %neg = xor i64 %28, -1, !dbg !5634
  %and = and i64 %25, %neg, !dbg !5635
  store i64 %and, i64* %bits32, align 8, !dbg !5635
  br label %if.end47, !dbg !5636

if.end47:                                         ; preds = %if.end28, %if.then40, %land.lhs.true
  %29 = phi i64 [ %25, %if.end28 ], [ %and, %if.then40 ], [ %25, %land.lhs.true ], !dbg !5637
  store i64 %29, i64* %bits32, align 8, !dbg !5637
  %tobool51 = icmp eq i64 %29, 0, !dbg !5638
  %lnot.ext = zext i1 %tobool51 to i32, !dbg !5638
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !5639
  call void @llvm.dbg.value(metadata i32 %add, metadata !5583, metadata !DIExpression()), !dbg !5585
  store i32 %add, i32* %bit_no, align 4, !dbg !5640
  ret void, !dbg !5641
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_and_compl(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !5642 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5644, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !5645, metadata !DIExpression()), !dbg !5649
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !5650
  %0 = load i64, i64* %bits, align 8, !dbg !5650
  %tobool = icmp eq i64 %0, 0, !dbg !5651
  br i1 %tobool, label %if.end, label %next_bit, !dbg !5652

next_bit.loopexit:                                ; preds = %if.end26
  %.lcssa7 = phi i64 [ %16, %if.end26 ], !dbg !5653
  br label %next_bit, !dbg !5657

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa7, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !5646), !dbg !5658
  br label %while.cond, !dbg !5657

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !5659
  %and = and i64 %2, 1, !dbg !5660
  %tobool2 = icmp eq i64 %and, 0, !dbg !5661
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !5657

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !5662
  store i64 %shr, i64* %bits, align 8, !dbg !5662
  %3 = load i32, i32* %bit_no, align 4, !dbg !5664
  %add = add i32 %3, 1, !dbg !5664
  store i32 %add, i32* %bit_no, align 4, !dbg !5664
  %.pre = load i64, i64* %bits, align 8, !dbg !5659
  br label %while.cond, !dbg !5657, !llvm.loop !5665

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !5667
  %sub = add i32 %4, 63, !dbg !5668
  %div = and i32 %sub, -64, !dbg !5669
  store i32 %div, i32* %bit_no, align 4, !dbg !5670
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !5671
  %5 = load i32, i32* %word_no, align 8, !dbg !5672
  %inc = add i32 %5, 1, !dbg !5672
  store i32 %inc, i32* %word_no, align 8, !dbg !5672
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !5673
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !5674
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !5673
  %7 = bitcast %struct.bitmap_element_def** %elt2 to i64*, !dbg !5673
  br label %while.body6, !dbg !5676

while.body6:                                      ; preds = %if.end, %while.end53
  %8 = phi i32 [ %inc, %if.end ], [ 0, %while.end53 ]
  br label %while.cond7, !dbg !5677

while.cond7:                                      ; preds = %if.end30, %while.body6
  %9 = phi i32 [ %inc33, %if.end30 ], [ %8, %while.body6 ], !dbg !5678
  %cmp = icmp eq i32 %9, 2, !dbg !5679
  %10 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !5673
  br i1 %cmp, label %while.end34, label %while.body9, !dbg !5677

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %9 to i64, !dbg !5680
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i64 0, i32 3, i64 %idxprom, !dbg !5680
  %11 = load i64, i64* %arrayidx, align 8, !dbg !5680
  store i64 %11, i64* %bits, align 8, !dbg !5681
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt2, align 8, !dbg !5682
  %tobool13 = icmp eq %struct.bitmap_element_def* %12, null, !dbg !5683
  br i1 %tobool13, label %if.end26, label %land.lhs.true, !dbg !5684

land.lhs.true:                                    ; preds = %while.body9
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i64 0, i32 2, !dbg !5685
  %13 = load i32, i32* %indx, align 8, !dbg !5685
  %indx16 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i64 0, i32 2, !dbg !5686
  %14 = load i32, i32* %indx16, align 8, !dbg !5686
  %cmp17 = icmp eq i32 %13, %14, !dbg !5687
  br i1 %cmp17, label %if.then18, label %if.end26, !dbg !5688

if.then18:                                        ; preds = %land.lhs.true
  %arrayidx23 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i64 0, i32 3, i64 %idxprom, !dbg !5689
  %15 = load i64, i64* %arrayidx23, align 8, !dbg !5689
  %neg = xor i64 %15, -1, !dbg !5690
  %and25 = and i64 %11, %neg, !dbg !5691
  store i64 %and25, i64* %bits, align 8, !dbg !5691
  br label %if.end26, !dbg !5692

if.end26:                                         ; preds = %while.body9, %if.then18, %land.lhs.true
  %16 = phi i64 [ %11, %while.body9 ], [ %and25, %if.then18 ], [ %11, %land.lhs.true ], !dbg !5653
  %tobool28 = icmp eq i64 %16, 0, !dbg !5693
  br i1 %tobool28, label %if.end30, label %next_bit.loopexit, !dbg !5694

if.end30:                                         ; preds = %if.end26
  %17 = load i32, i32* %bit_no, align 4, !dbg !5695
  %add31 = add i32 %17, 64, !dbg !5695
  store i32 %add31, i32* %bit_no, align 4, !dbg !5695
  %18 = load i32, i32* %word_no, align 8, !dbg !5696
  %inc33 = add i32 %18, 1, !dbg !5696
  store i32 %inc33, i32* %word_no, align 8, !dbg !5696
  br label %while.cond7, !dbg !5677, !llvm.loop !5697

while.end34:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %10, %while.cond7 ], !dbg !5673
  %19 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !5699
  %20 = load i64, i64* %19, align 8, !dbg !5699
  store i64 %20, i64* %6, align 8, !dbg !5700
  %tobool38 = icmp eq i64 %20, 0, !dbg !5701
  %21 = inttoptr i64 %20 to %struct.bitmap_element_def*, !dbg !5703
  br i1 %tobool38, label %return.loopexit1, label %while.cond41.preheader, !dbg !5703

while.cond41.preheader:                           ; preds = %while.end34
  %.pre3 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt2, align 8, !dbg !5704
  %22 = bitcast %struct.bitmap_element_def* %.pre3 to i64*, !dbg !5705
  br label %while.cond41, !dbg !5705

while.cond41:                                     ; preds = %while.cond41.preheader, %while.body49
  %23 = phi i64* [ %22, %while.cond41.preheader ], [ %30, %while.body49 ]
  %24 = phi %struct.bitmap_element_def* [ %.pre3, %while.cond41.preheader ], [ %29, %while.body49 ]
  %25 = phi %struct.bitmap_element_def* [ %.pre3, %while.cond41.preheader ], [ %29, %while.body49 ], !dbg !5704
  %tobool43 = icmp eq %struct.bitmap_element_def* %25, null, !dbg !5706
  br i1 %tobool43, label %while.end53, label %land.rhs, !dbg !5707

land.rhs:                                         ; preds = %while.cond41
  %indx45 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %24, i64 0, i32 2, !dbg !5708
  %26 = load i32, i32* %indx45, align 8, !dbg !5708
  %indx47 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %21, i64 0, i32 2, !dbg !5709
  %27 = load i32, i32* %indx47, align 8, !dbg !5709
  %cmp48 = icmp ult i32 %26, %27, !dbg !5710
  br i1 %cmp48, label %while.body49, label %while.end53, !dbg !5705

while.body49:                                     ; preds = %land.rhs
  %28 = load i64, i64* %23, align 8, !dbg !5711
  store i64 %28, i64* %7, align 8, !dbg !5712
  %29 = inttoptr i64 %28 to %struct.bitmap_element_def*, !dbg !5705
  %30 = inttoptr i64 %28 to i64*, !dbg !5705
  br label %while.cond41, !dbg !5705, !llvm.loop !5713

while.end53:                                      ; preds = %while.cond41, %land.rhs
  %indx55 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %21, i64 0, i32 2, !dbg !5714
  %31 = load i32, i32* %indx55, align 8, !dbg !5714
  %mul56 = shl i32 %31, 7, !dbg !5715
  store i32 %mul56, i32* %bit_no, align 4, !dbg !5716
  store i32 0, i32* %word_no, align 8, !dbg !5717
  br label %while.body6, !dbg !5676, !llvm.loop !5718

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !5720

return.loopexit1:                                 ; preds = %while.end34
  br label %return, !dbg !5720

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !5649
  ret i8 %retval.0, !dbg !5720
}

declare dso_local i32 @canon_true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8 (%struct.rtx_def*, i8)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @oprs_not_set_p(%struct.rtx_def* %x, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !5721 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !5729
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !5729
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5729
  %rt_int = bitcast %union.rtunion_def* %arrayidx4 to i32*, !dbg !5729
  br label %tailrecurse, !dbg !5732

tailrecurse:                                      ; preds = %if.else, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %7, %if.else ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !5723, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5724, metadata !DIExpression()), !dbg !5733
  %cmp = icmp eq %struct.rtx_def* %x.tr, null, !dbg !5734
  br i1 %cmp, label %cleanup.loopexit2, label %if.end, !dbg !5736

if.end:                                           ; preds = %tailrecurse
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !5737
  %bf.load = load i32, i32* %0, align 8, !dbg !5737
  %trunc = trunc i32 %bf.load to i16, !dbg !5738
  switch i16 %trunc, label %sw.epilog [
    i16 36, label %cleanup.loopexit2
    i16 46, label %cleanup.loopexit2
    i16 35, label %cleanup.loopexit2
    i16 30, label %cleanup.loopexit2
    i16 32, label %cleanup.loopexit2
    i16 31, label %cleanup.loopexit2
    i16 33, label %cleanup.loopexit2
    i16 45, label %cleanup.loopexit2
    i16 44, label %cleanup.loopexit2
    i16 20, label %cleanup.loopexit2
    i16 21, label %cleanup.loopexit2
    i16 43, label %sw.bb1
    i16 37, label %sw.bb11
  ], !dbg !5738

sw.bb1:                                           ; preds = %if.end
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5739
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5740
  %insns = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 10, !dbg !5740
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5740
  %4 = load i32, i32* %rt_int, align 8, !dbg !5740
  %idxprom = sext i32 %4 to i64, !dbg !5740
  %arrayidx5 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !5740
  %5 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx5, align 8, !dbg !5740
  %luid = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %5, i64 0, i32 5, !dbg !5740
  %6 = load i32, i32* %luid, align 8, !dbg !5740
  %call = tail call fastcc i32 @load_killed_in_block_p(%struct.basic_block_def* %1, i32 %6, %struct.rtx_def* nonnull %x.tr, i32 0) #7, !dbg !5741
  %tobool = icmp eq i32 %call, 0, !dbg !5741
  br i1 %tobool, label %if.else, label %cleanup.loopexit2, !dbg !5742

if.else:                                          ; preds = %sw.bb1
  %arrayidx9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5743
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !5743
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5743
  br label %tailrecurse, !dbg !5732

sw.bb11:                                          ; preds = %if.end
  %x.tr.lcssa14 = phi %struct.rtx_def* [ %x.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa14, metadata !5723, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa14, metadata !5723, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa14, metadata !5723, metadata !DIExpression()), !dbg !5733
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_set_bitmap, align 8, !dbg !5744
  %call12 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %x.tr.lcssa14) #7, !dbg !5744
  %call13 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %call12) #6, !dbg !5744
  %tobool14 = icmp eq i32 %call13, 0, !dbg !5745
  %lnot.ext = zext i1 %tobool14 to i32, !dbg !5745
  br label %cleanup, !dbg !5746

sw.epilog:                                        ; preds = %if.end
  %x.tr.lcssa13 = phi %struct.rtx_def* [ %x.tr, %if.end ]
  %bf.load.lcssa = phi i32 [ %bf.load, %if.end ], !dbg !5737
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa13, metadata !5723, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa13, metadata !5723, metadata !DIExpression()), !dbg !5733
  %bf.clear.le = and i32 %bf.load.lcssa, 65535, !dbg !5737
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa13, metadata !5723, metadata !DIExpression()), !dbg !5733
  %idxprom15 = zext i32 %bf.clear.le to i64, !dbg !5747
  %arrayidx16 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom15, !dbg !5747
  %9 = load i8, i8* %arrayidx16, align 1, !dbg !5747
  call void @llvm.dbg.value(metadata i8 %9, metadata !5725, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5733
  %arrayidx18 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom15, !dbg !5749
  %10 = load i8*, i8** %arrayidx18, align 8, !dbg !5749
  call void @llvm.dbg.value(metadata i8* %10, metadata !5728, metadata !DIExpression()), !dbg !5733
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa13, i64 0, i32 1, !dbg !5750
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !5750
  %11 = zext i8 %9 to i64, !dbg !5757
  br label %for.cond, !dbg !5757

for.cond:                                         ; preds = %for.inc74, %sw.epilog
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %for.inc74 ], [ %11, %sw.epilog ]
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, -1, !dbg !5758
  call void @llvm.dbg.value(metadata i32 undef, metadata !5725, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5733
  %cmp19 = icmp sgt i64 %indvars.iv10, 0, !dbg !5759
  br i1 %cmp19, label %for.body, label %cleanup.loopexit1, !dbg !5760

for.body:                                         ; preds = %for.cond
  %arrayidx22 = getelementptr inbounds i8, i8* %10, i64 %indvars.iv.next11, !dbg !5761
  %12 = load i8, i8* %arrayidx22, align 1, !dbg !5761
  %cmp24 = icmp eq i8 %12, 101, !dbg !5762
  br i1 %cmp24, label %if.then26, label %if.else46, !dbg !5763

if.then26:                                        ; preds = %for.body
  %13 = icmp eq i64 %indvars.iv.next11, 0
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 %indvars.iv.next11, !dbg !5764
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !5764
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !5764
  %call35 = tail call fastcc i32 @oprs_not_set_p(%struct.rtx_def* %14, %struct.rtx_def* %insn) #7, !dbg !5764
  br i1 %13, label %cleanup.loopexit1, label %if.end36, !dbg !5766

if.end36:                                         ; preds = %if.then26
  %tobool43 = icmp eq i32 %call35, 0, !dbg !5767
  br i1 %tobool43, label %cleanup.loopexit1, label %for.inc74, !dbg !5769

if.else46:                                        ; preds = %for.body
  %cmp50 = icmp eq i8 %12, 69, !dbg !5770
  br i1 %cmp50, label %for.cond53.preheader, label %for.inc74, !dbg !5771

for.cond53.preheader:                             ; preds = %if.else46
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 %indvars.iv.next11, !dbg !5750
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtvec_def**, !dbg !5750
  br label %for.cond53, !dbg !5772

for.cond53:                                       ; preds = %for.cond53.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond53.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5773
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5726, metadata !DIExpression()), !dbg !5733
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5774
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 0, !dbg !5774
  %16 = load i32, i32* %num_elem, align 8, !dbg !5774
  %17 = sext i32 %16 to i64, !dbg !5775
  %cmp58 = icmp slt i64 %indvars.iv, %17, !dbg !5775
  br i1 %cmp58, label %for.body60, label %for.inc74.loopexit, !dbg !5772

for.body60:                                       ; preds = %for.cond53
  %arrayidx67 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 1, i64 %indvars.iv, !dbg !5776
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx67, align 8, !dbg !5776
  %call68 = tail call fastcc i32 @oprs_not_set_p(%struct.rtx_def* %18, %struct.rtx_def* %insn) #7, !dbg !5778
  %tobool69 = icmp eq i32 %call68, 0, !dbg !5778
  br i1 %tobool69, label %cleanup.loopexit, label %for.inc, !dbg !5779

for.inc:                                          ; preds = %for.body60
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5780
  call void @llvm.dbg.value(metadata i32 undef, metadata !5726, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5733
  br label %for.cond53, !dbg !5781, !llvm.loop !5782

for.inc74.loopexit:                               ; preds = %for.cond53
  br label %for.inc74, !dbg !5784

for.inc74:                                        ; preds = %for.inc74.loopexit, %if.end36, %if.else46
  call void @llvm.dbg.value(metadata i32 undef, metadata !5725, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5733
  br label %for.cond, !dbg !5784, !llvm.loop !5785

cleanup.loopexit:                                 ; preds = %for.body60
  br label %cleanup, !dbg !5787

cleanup.loopexit1:                                ; preds = %if.then26, %for.cond, %if.end36
  %retval.0.ph = phi i32 [ 1, %for.cond ], [ 0, %if.end36 ], [ %call35, %if.then26 ]
  br label %cleanup, !dbg !5787

cleanup.loopexit2:                                ; preds = %tailrecurse, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb1
  %retval.0.ph3 = phi i32 [ 0, %sw.bb1 ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %tailrecurse ]
  br label %cleanup, !dbg !5787

cleanup:                                          ; preds = %cleanup.loopexit2, %cleanup.loopexit1, %cleanup.loopexit, %sw.bb11
  %retval.0 = phi i32 [ %lnot.ext, %sw.bb11 ], [ 0, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], [ %retval.0.ph3, %cleanup.loopexit2 ], !dbg !5733
  ret i32 %retval.0, !dbg !5787
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.expr* @find_avail_set(i32 %regno, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !5788 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5792, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5793, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata %struct.expr* null, metadata !5794, metadata !DIExpression()), !dbg !5798
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !5799
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !5799
  br label %while.cond, !dbg !5802

while.cond:                                       ; preds = %cleanup, %entry
  %set1.0 = phi %struct.expr* [ null, %entry ], [ %set1.2, %cleanup ], !dbg !5803
  %regno.addr.0 = phi i32 [ %regno, %entry ], [ %regno.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata i32 %regno.addr.0, metadata !5792, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata %struct.expr* %set1.0, metadata !5794, metadata !DIExpression()), !dbg !5798
  %call = tail call fastcc %struct.expr* @lookup_set(i32 %regno.addr.0, %struct.hash_table_d* nonnull @set_hash_table) #7, !dbg !5804
  call void @llvm.dbg.value(metadata %struct.expr* %call, metadata !5797, metadata !DIExpression()), !dbg !5805
  br label %while.cond1, !dbg !5806

while.cond1:                                      ; preds = %if.end, %while.cond
  %set.0 = phi %struct.expr* [ %call, %while.cond ], [ %call8, %if.end ], !dbg !5805
  call void @llvm.dbg.value(metadata %struct.expr* %set.0, metadata !5797, metadata !DIExpression()), !dbg !5805
  %cond = icmp eq %struct.expr* %set.0, null, !dbg !5806
  br i1 %cond, label %cleanup.loopexit, label %while.body2, !dbg !5806

while.body2:                                      ; preds = %while.cond1
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @cprop_avin, align 8, !dbg !5807
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5807
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !5807
  %2 = load i32, i32* %index, align 8, !dbg !5807
  %idxprom = sext i32 %2 to i64, !dbg !5807
  %arrayidx3 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %0, i64 %idxprom, !dbg !5807
  %3 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx3, align 8, !dbg !5807
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %set.0, i64 0, i32 1, !dbg !5807
  %4 = load i32, i32* %bitmap_index, align 8, !dbg !5807
  %div = lshr i32 %4, 6, !dbg !5807
  %idxprom4 = zext i32 %div to i64, !dbg !5807
  %arrayidx5 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %3, i64 0, i32 3, i64 %idxprom4, !dbg !5807
  %5 = load i64, i64* %arrayidx5, align 8, !dbg !5807
  %rem = and i32 %4, 63, !dbg !5807
  %sh_prom = zext i32 %rem to i64, !dbg !5807
  %6 = shl i64 1, %sh_prom, !dbg !5807
  %7 = and i64 %5, %6, !dbg !5807
  %tobool7 = icmp eq i64 %7, 0, !dbg !5807
  br i1 %tobool7, label %if.end, label %while.end, !dbg !5808

if.end:                                           ; preds = %while.body2
  %call8 = tail call fastcc %struct.expr* @next_set(i32 %regno.addr.0, %struct.expr* nonnull %set.0) #7, !dbg !5809
  call void @llvm.dbg.value(metadata %struct.expr* %call8, metadata !5797, metadata !DIExpression()), !dbg !5805
  br label %while.cond1, !dbg !5806, !llvm.loop !5810

while.end:                                        ; preds = %while.body2
  %set.0.lcssa4 = phi %struct.expr* [ %set.0, %while.body2 ], !dbg !5805
  call void @llvm.dbg.value(metadata %struct.expr* %set.0.lcssa4, metadata !5797, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.value(metadata %struct.expr* %set.0.lcssa4, metadata !5797, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.value(metadata %struct.expr* %set.0.lcssa4, metadata !5797, metadata !DIExpression()), !dbg !5805
  %8 = bitcast %struct.expr* %set.0.lcssa4 to i32**, !dbg !5812
  %9 = load i32*, i32** %8, align 8, !dbg !5812
  %bf.load = load i32, i32* %9, align 8, !dbg !5812
  %bf.clear = and i32 %bf.load, 65535, !dbg !5812
  %cmp11 = icmp eq i32 %bf.clear, 23, !dbg !5812
  %10 = bitcast i32* %9 to %struct.rtx_def*, !dbg !5812
  br i1 %cmp11, label %cond.end, label %cond.true, !dbg !5812

cond.true:                                        ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 2334, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !5812
  %expr12.phi.trans.insert = getelementptr inbounds %struct.expr, %struct.expr* %set.0.lcssa4, i64 0, i32 0, !dbg !5805
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %expr12.phi.trans.insert, align 8, !dbg !5813
  br label %cond.end, !dbg !5812

cond.end:                                         ; preds = %while.end, %cond.true
  %11 = phi %struct.rtx_def* [ %10, %while.end ], [ %.pre, %cond.true ], !dbg !5813
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5813
  %rt_rtx = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !5813
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5813
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !5795, metadata !DIExpression()), !dbg !5805
  %call16 = tail call fastcc zeroext i8 @gcse_constant_p(%struct.rtx_def* %13) #7, !dbg !5814
  %tobool17 = icmp eq i8 %call16, 0, !dbg !5814
  br i1 %tobool17, label %lor.lhs.false, label %if.then20, !dbg !5816

lor.lhs.false:                                    ; preds = %cond.end
  %call18 = tail call fastcc i32 @oprs_not_set_p(%struct.rtx_def* %13, %struct.rtx_def* %insn) #7, !dbg !5817
  %tobool19 = icmp eq i32 %call18, 0, !dbg !5817
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !5818

if.then20:                                        ; preds = %lor.lhs.false, %cond.end
  call void @llvm.dbg.value(metadata %struct.expr* %set.0.lcssa4, metadata !5794, metadata !DIExpression()), !dbg !5798
  br label %if.end21, !dbg !5819

if.end21:                                         ; preds = %lor.lhs.false, %if.then20
  %set1.1 = phi %struct.expr* [ %set.0.lcssa4, %if.then20 ], [ %set1.0, %lor.lhs.false ], !dbg !5798
  call void @llvm.dbg.value(metadata %struct.expr* %set1.1, metadata !5794, metadata !DIExpression()), !dbg !5798
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !5820
  %bf.load22 = load i32, i32* %14, align 8, !dbg !5820
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !5820
  %cmp24 = icmp eq i32 %bf.clear23, 37, !dbg !5820
  br i1 %cmp24, label %if.end27, label %cleanup, !dbg !5822

if.end27:                                         ; preds = %if.end21
  %call28 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #7, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %call28, metadata !5792, metadata !DIExpression()), !dbg !5798
  br label %cleanup, !dbg !5824

cleanup.loopexit:                                 ; preds = %while.cond1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end21, %if.end27
  %set1.2 = phi %struct.expr* [ %set1.1, %if.end27 ], [ %set1.1, %if.end21 ], [ %set1.0, %cleanup.loopexit ], !dbg !5798
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end27 ], [ false, %if.end21 ], [ false, %cleanup.loopexit ]
  %regno.addr.1 = phi i32 [ %call28, %if.end27 ], [ %regno.addr.0, %if.end21 ], [ %regno.addr.0, %cleanup.loopexit ]
  call void @llvm.dbg.value(metadata i32 %regno.addr.1, metadata !5792, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata %struct.expr* %set1.2, metadata !5794, metadata !DIExpression()), !dbg !5798
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end30, !llvm.loop !5825

while.end30:                                      ; preds = %cleanup
  %set1.2.lcssa = phi %struct.expr* [ %set1.2, %cleanup ], !dbg !5798
  call void @llvm.dbg.value(metadata %struct.expr* %set1.2.lcssa, metadata !5794, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata %struct.expr* %set1.2.lcssa, metadata !5794, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata %struct.expr* %set1.2.lcssa, metadata !5794, metadata !DIExpression()), !dbg !5798
  ret %struct.expr* %set1.2.lcssa, !dbg !5826
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.expr* @lookup_set(i32 %regno, %struct.hash_table_d* %table) unnamed_addr #4 !dbg !5827 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5831, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.value(metadata %struct.hash_table_d* @set_hash_table, metadata !5832, metadata !DIExpression()), !dbg !5835
  %0 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @set_hash_table, i64 0, i32 1), align 8, !dbg !5836
  %call = tail call fastcc i32 @hash_set(i32 %regno, i32 %0) #7, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %call, metadata !5833, metadata !DIExpression()), !dbg !5835
  %1 = load %struct.expr**, %struct.expr*** getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @set_hash_table, i64 0, i32 0), align 8, !dbg !5838
  %idxprom = zext i32 %call to i64, !dbg !5839
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %1, i64 %idxprom, !dbg !5839
  br label %while.cond, !dbg !5840

while.cond:                                       ; preds = %while.body, %entry
  %expr.0.in = phi %struct.expr** [ %arrayidx, %entry ], [ %next_same_hash, %while.body ]
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !5835
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !5834, metadata !DIExpression()), !dbg !5835
  %tobool = icmp eq %struct.expr* %expr.0, null, !dbg !5841
  br i1 %tobool, label %while.end, label %land.rhs, !dbg !5842

land.rhs:                                         ; preds = %while.cond
  %expr2 = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 0, !dbg !5843
  %2 = load %struct.rtx_def*, %struct.rtx_def** %expr2, align 8, !dbg !5843
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5843
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5843
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5843
  %call4 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !5843
  %cmp = icmp eq i32 %call4, %regno, !dbg !5844
  br i1 %cmp, label %while.end, label %while.body, !dbg !5840

while.body:                                       ; preds = %land.rhs
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !5845
  br label %while.cond, !dbg !5840, !llvm.loop !5846

while.end:                                        ; preds = %land.rhs, %while.cond
  %expr.0.lcssa = phi %struct.expr* [ %expr.0, %land.rhs ], [ %expr.0, %while.cond ], !dbg !5835
  ret %struct.expr* %expr.0.lcssa, !dbg !5847
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.expr* @next_set(i32 %regno, %struct.expr* %expr) unnamed_addr #4 !dbg !5848 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5852, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata %struct.expr* %expr, metadata !5853, metadata !DIExpression()), !dbg !5854
  br label %do.body, !dbg !5855

do.body:                                          ; preds = %land.rhs, %entry
  %expr.addr.0 = phi %struct.expr* [ %expr, %entry ], [ %0, %land.rhs ]
  call void @llvm.dbg.value(metadata %struct.expr* %expr.addr.0, metadata !5853, metadata !DIExpression()), !dbg !5854
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.addr.0, i64 0, i32 2, !dbg !5856
  %0 = load %struct.expr*, %struct.expr** %next_same_hash, align 8, !dbg !5856
  call void @llvm.dbg.value(metadata %struct.expr* %0, metadata !5853, metadata !DIExpression()), !dbg !5854
  %tobool = icmp eq %struct.expr* %0, null, !dbg !5857
  br i1 %tobool, label %do.end, label %land.rhs, !dbg !5858

land.rhs:                                         ; preds = %do.body
  %expr1 = getelementptr inbounds %struct.expr, %struct.expr* %0, i64 0, i32 0, !dbg !5859
  %1 = load %struct.rtx_def*, %struct.rtx_def** %expr1, align 8, !dbg !5859
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5859
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5859
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5859
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !5859
  %cmp = icmp eq i32 %call, %regno, !dbg !5860
  br i1 %cmp, label %do.end, label %do.body, !dbg !5861, !llvm.loop !5862

do.end:                                           ; preds = %land.rhs, %do.body
  %.lcssa = phi %struct.expr* [ %0, %land.rhs ], [ %0, %do.body ], !dbg !5856
  ret %struct.expr* %.lcssa, !dbg !5864
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_set(%struct.rtx_def* %pat, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !5865 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !5869, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5870, metadata !DIExpression()), !dbg !5872
  br label %while.cond, !dbg !5873

while.cond:                                       ; preds = %while.body, %entry
  %pat.pn = phi %struct.rtx_def* [ %pat, %entry ], [ %dest.0, %while.body ]
  %dest.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat.pn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5872
  %dest.0.in = bitcast %union.rtunion_def* %dest.0.in.in to %struct.rtx_def**, !dbg !5872
  %dest.0 = load %struct.rtx_def*, %struct.rtx_def** %dest.0.in, align 8, !dbg !5872
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.0, metadata !5871, metadata !DIExpression()), !dbg !5872
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.0, i64 0, i32 0, !dbg !5874
  %bf.load = load i32, i32* %0, align 8, !dbg !5874
  %bf.clear = and i32 %bf.load, 65535, !dbg !5874
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !5875
  br i1 %cmp, label %while.body, label %lor.lhs.false, !dbg !5876

lor.lhs.false:                                    ; preds = %while.cond
  %cmp3 = icmp eq i32 %bf.clear, 120, !dbg !5877
  %cmp6 = icmp eq i32 %bf.clear, 40, !dbg !5878
  %or.cond = or i1 %cmp3, %cmp6, !dbg !5879
  br i1 %or.cond, label %while.body, label %while.end, !dbg !5879

while.body:                                       ; preds = %while.cond, %lor.lhs.false
  br label %while.cond, !dbg !5873, !llvm.loop !5880

while.end:                                        ; preds = %lor.lhs.false
  %dest.0.lcssa = phi %struct.rtx_def* [ %dest.0, %lor.lhs.false ], !dbg !5872
  %bf.clear.lcssa = phi i32 [ %bf.clear, %lor.lhs.false ], !dbg !5874
  %cmp13 = icmp eq i32 %bf.clear.lcssa, 37, !dbg !5882
  br i1 %cmp13, label %if.then, label %if.else, !dbg !5884

if.then:                                          ; preds = %while.end
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_set_bitmap, align 8, !dbg !5885
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest.0.lcssa) #7, !dbg !5885
  %call14 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 %call) #6, !dbg !5885
  br label %if.end19, !dbg !5885

if.else:                                          ; preds = %while.end
  %cmp17 = icmp eq i32 %bf.clear.lcssa, 43, !dbg !5886
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !5888

if.then18:                                        ; preds = %if.else
  tail call fastcc void @record_last_mem_set_info(%struct.rtx_def* %insn) #7, !dbg !5889
  br label %if.end19, !dbg !5889

if.end19:                                         ; preds = %if.else, %if.then18, %if.then
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5890
  %3 = bitcast %union.rtunion_def* %2 to i32**, !dbg !5890
  %4 = load i32*, i32** %3, align 8, !dbg !5890
  %bf.load24 = load i32, i32* %4, align 8, !dbg !5890
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !5890
  %cmp26 = icmp eq i32 %bf.clear25, 26, !dbg !5892
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !5893

if.then27:                                        ; preds = %if.end19
  tail call fastcc void @mark_call(%struct.rtx_def* %insn) #7, !dbg !5894
  br label %if.end28, !dbg !5894

if.end28:                                         ; preds = %if.then27, %if.end19
  ret void, !dbg !5895
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_clobber(%struct.rtx_def* %pat, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !5896 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !5898, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5899, metadata !DIExpression()), !dbg !5901
  br label %while.cond, !dbg !5902

while.cond:                                       ; preds = %while.body, %entry
  %pat.pn = phi %struct.rtx_def* [ %pat, %entry ], [ %clob.0, %while.body ]
  %clob.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat.pn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5901
  %clob.0.in = bitcast %union.rtunion_def* %clob.0.in.in to %struct.rtx_def**, !dbg !5901
  %clob.0 = load %struct.rtx_def*, %struct.rtx_def** %clob.0.in, align 8, !dbg !5901
  call void @llvm.dbg.value(metadata %struct.rtx_def* %clob.0, metadata !5900, metadata !DIExpression()), !dbg !5901
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %clob.0, i64 0, i32 0, !dbg !5903
  %bf.load = load i32, i32* %0, align 8, !dbg !5903
  %bf.clear = and i32 %bf.load, 65535, !dbg !5903
  %1 = add nsw i32 %bf.clear, -39, !dbg !5904
  %2 = icmp ult i32 %1, 2, !dbg !5904
  br i1 %2, label %while.body, label %while.end, !dbg !5904

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !5902, !llvm.loop !5905

while.end:                                        ; preds = %while.cond
  %clob.0.lcssa = phi %struct.rtx_def* [ %clob.0, %while.cond ], !dbg !5901
  %bf.clear.lcssa = phi i32 [ %bf.clear, %while.cond ], !dbg !5903
  %cmp10 = icmp eq i32 %bf.clear.lcssa, 37, !dbg !5907
  br i1 %cmp10, label %if.then, label %if.else, !dbg !5909

if.then:                                          ; preds = %while.end
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_set_bitmap, align 8, !dbg !5910
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %clob.0.lcssa) #7, !dbg !5910
  %call11 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %call) #6, !dbg !5910
  br label %if.end, !dbg !5910

if.else:                                          ; preds = %while.end
  tail call fastcc void @record_last_mem_set_info(%struct.rtx_def* %insn) #7, !dbg !5911
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5912
}

declare dso_local zeroext i8 @mark_dfs_back_edges() local_unnamed_addr #1

declare dso_local i32 @computed_jump_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @bypass_block(%struct.basic_block_def* %bb, %struct.rtx_def* %setcc, %struct.rtx_def* %jump) unnamed_addr #4 !dbg !5913 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp11 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5917, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc, metadata !5918, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !5919, metadata !DIExpression()), !dbg !5947
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !5948
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5948
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5949
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5949
  %cmp = icmp eq %struct.rtx_def* %setcc, null, !dbg !5950
  %setcc.jump = select i1 %cmp, %struct.rtx_def* %jump, %struct.rtx_def* %setcc, !dbg !5951
  call void @llvm.dbg.value(metadata %struct.rtx_def* %setcc.jump, metadata !5920, metadata !DIExpression()), !dbg !5947
  store i32 0, i32* @reg_use_count, align 4, !dbg !5952
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %setcc.jump, i64 0, i32 1, !dbg !5953
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5953
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5953
  tail call void @note_uses(%struct.rtx_def** nonnull %rt_rtx, void (%struct.rtx_def**, i8*)* nonnull @find_used_regs, i8* null) #6, !dbg !5954
  %call = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %setcc.jump) #6, !dbg !5955
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5921, metadata !DIExpression()), !dbg !5947
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !5956
  br i1 %tobool, label %if.end, label %if.then, !dbg !5958

if.then:                                          ; preds = %entry
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5959
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5959
  tail call void @find_used_regs(%struct.rtx_def** nonnull %rt_rtx4, i8* null) #7, !dbg !5960
  br label %if.end, !dbg !5960

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !5926, metadata !DIExpression()), !dbg !5947
  %3 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5961
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !5961
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5961
  %call5 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !5961
  %4 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5961
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call5, 0, !dbg !5961
  store i32 %5, i32* %4, align 8, !dbg !5961
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5961
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call5, 1, !dbg !5961
  store %struct.VEC_edge_gc** %7, %struct.VEC_edge_gc*** %6, align 8, !dbg !5961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !5961
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !5961
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5963
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5963
  br label %for.cond, !dbg !5961

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %8, align 8, !dbg !5965
  %11 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %9, align 8, !dbg !5965
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5922, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  %call6 = call fastcc zeroext i8 @ei_cond(i32 %10, %struct.VEC_edge_gc** %11, %struct.edge_def** nonnull %e) #7, !dbg !5965
  %tobool7 = icmp eq i8 %call6, 0, !dbg !5961
  br i1 %tobool7, label %for.end, label %for.body, !dbg !5961

for.body:                                         ; preds = %for.cond
  %12 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5966
  call void @llvm.dbg.value(metadata %struct.edge_def* %12, metadata !5922, metadata !DIExpression()), !dbg !5947
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %12, i64 0, i32 7, !dbg !5968
  %13 = load i32, i32* %flags, align 8, !dbg !5968
  %and = and i32 %13, 32, !dbg !5969
  %tobool8 = icmp eq i32 %and, 0, !dbg !5969
  br i1 %tobool8, label %for.inc, label %for.end, !dbg !5970

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5928, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5965
  br label %for.cond, !dbg !5965, !llvm.loop !5971

for.end:                                          ; preds = %for.body, %for.cond
  %may_be_loop_header.0 = phi i1 [ true, %for.cond ], [ false, %for.body ]
  call void @llvm.dbg.value(metadata i32 0, metadata !5925, metadata !DIExpression()), !dbg !5947
  %14 = bitcast %struct.edge_iterator* %tmp11 to i8*, !dbg !5973
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !5973
  %call13 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !5973
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp11, i64 0, i32 0, !dbg !5973
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call13, 0, !dbg !5973
  store i32 %16, i32* %15, align 8, !dbg !5973
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp11, i64 0, i32 1, !dbg !5973
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call13, 1, !dbg !5973
  store %struct.VEC_edge_gc** %18, %struct.VEC_edge_gc*** %17, align 8, !dbg !5973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !5973
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !5973
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %setcc, i64 0, i32 1, !dbg !5974
  %19 = getelementptr inbounds %union.u, %union.u* %u59, i64 1, i32 0, i32 0, i64 0, !dbg !5974
  %rt_rtx62 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !5974
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5976
  %tobool149 = icmp ne %struct.rtx_def* %setcc, null, !dbg !5979
  %arrayidx201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5981
  %rt_int = bitcast %union.rtunion_def* %arrayidx201 to i32*, !dbg !5981
  br label %for.cond14.outer, !dbg !5984

for.cond14.outer:                                 ; preds = %if.end225, %for.end
  %change.0.ph = phi i32 [ %change.3, %if.end225 ], [ 0, %for.end ]
  br i1 %may_be_loop_header.0, label %for.cond14.outer.split.us, label %for.cond14.outer.for.cond14.outer.split_crit_edge, !dbg !5985

for.cond14.outer.for.cond14.outer.split_crit_edge: ; preds = %for.cond14.outer
  br label %for.cond14, !dbg !5985

for.cond14.outer.split.us:                        ; preds = %for.cond14.outer
  br label %for.cond14.us, !dbg !5985

for.cond14.us:                                    ; preds = %for.cond14.backedge.us, %for.cond14.outer.split.us
  call void @llvm.dbg.value(metadata i32 %change.0.ph, metadata !5925, metadata !DIExpression()), !dbg !5947
  %20 = load i32, i32* %8, align 8, !dbg !5986
  %21 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %9, align 8, !dbg !5986
  %call15.us = call fastcc %struct.edge_def* @ei_safe_edge(i32 %20, %struct.VEC_edge_gc** %21) #7, !dbg !5986
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15.us, metadata !5922, metadata !DIExpression()), !dbg !5947
  store %struct.edge_def* %call15.us, %struct.edge_def** %e, align 8, !dbg !5987
  %tobool16.us = icmp eq %struct.edge_def* %call15.us, null, !dbg !5985
  br i1 %tobool16.us, label %for.end226.us-lcssa.us, label %for.body17.us, !dbg !5985

for.body17.us:                                    ; preds = %for.cond14.us
  call void @llvm.dbg.value(metadata i32 0, metadata !5927, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15.us, metadata !5922, metadata !DIExpression()), !dbg !5947
  %flags18.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15.us, i64 0, i32 7, !dbg !5988
  %22 = load i32, i32* %flags18.us, align 8, !dbg !5988
  %and19.us = and i32 %22, 14, !dbg !5990
  %tobool20.us = icmp eq i32 %and19.us, 0, !dbg !5990
  br i1 %tobool20.us, label %if.end22.us, label %if.then21.us, !dbg !5991

if.then21.us:                                     ; preds = %for.body17.us
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5928, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5992
  br label %for.cond14.backedge.us, !dbg !5994

if.end22.us:                                      ; preds = %for.body17.us
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15.us, metadata !5922, metadata !DIExpression()), !dbg !5947
  %src.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15.us, i64 0, i32 0, !dbg !5995
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %src.us, align 8, !dbg !5995
  %index.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 9, !dbg !5997
  %24 = load i32, i32* %index.us, align 8, !dbg !5997
  %25 = load i32, i32* @bypass_last_basic_block, align 4, !dbg !5998
  %cmp23.us = icmp slt i32 %24, %25, !dbg !5999
  br i1 %cmp23.us, label %if.end25.us, label %if.then24.us, !dbg !6000

if.then24.us:                                     ; preds = %if.end22.us
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5928, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6001
  br label %for.cond14.backedge.us, !dbg !6003

if.end25.us:                                      ; preds = %if.end22.us
  br label %if.end31, !dbg !6004

for.cond14.backedge.us:                           ; preds = %if.then24.us, %if.then21.us
  br label %for.cond14.us, !dbg !5947, !llvm.loop !6005

for.end226.us-lcssa.us:                           ; preds = %for.cond14.us
  %change.0.ph.lcssa5 = phi i32 [ %change.0.ph, %for.cond14.us ]
  br label %for.end226, !dbg !6007

for.cond14:                                       ; preds = %for.cond14.backedge, %for.cond14.outer.for.cond14.outer.split_crit_edge
  call void @llvm.dbg.value(metadata i32 %change.0.ph, metadata !5925, metadata !DIExpression()), !dbg !5947
  %26 = load i32, i32* %8, align 8, !dbg !5986
  %27 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %9, align 8, !dbg !5986
  %call15 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %26, %struct.VEC_edge_gc** %27) #7, !dbg !5986
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15, metadata !5922, metadata !DIExpression()), !dbg !5947
  store %struct.edge_def* %call15, %struct.edge_def** %e, align 8, !dbg !5987
  %tobool16 = icmp eq %struct.edge_def* %call15, null, !dbg !5985
  br i1 %tobool16, label %for.end226.us-lcssa, label %for.body17, !dbg !5985

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.value(metadata i32 0, metadata !5927, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15, metadata !5922, metadata !DIExpression()), !dbg !5947
  %flags18 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 7, !dbg !5988
  %28 = load i32, i32* %flags18, align 8, !dbg !5988
  %and19 = and i32 %28, 14, !dbg !5990
  %tobool20 = icmp eq i32 %and19, 0, !dbg !5990
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !5991

if.then21:                                        ; preds = %for.body17
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5928, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5992
  br label %for.cond14.backedge, !dbg !5994

for.cond14.backedge:                              ; preds = %if.then21, %if.then24, %if.then30
  br label %for.cond14, !dbg !5947, !llvm.loop !6005

if.end22:                                         ; preds = %for.body17
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15, metadata !5922, metadata !DIExpression()), !dbg !5947
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 0, !dbg !5995
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5995
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 9, !dbg !5997
  %30 = load i32, i32* %index, align 8, !dbg !5997
  %31 = load i32, i32* @bypass_last_basic_block, align 4, !dbg !5998
  %cmp23 = icmp slt i32 %30, %31, !dbg !5999
  br i1 %cmp23, label %if.end25, label %if.then24, !dbg !6000

if.then24:                                        ; preds = %if.end22
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5928, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6001
  br label %for.cond14.backedge, !dbg !6003

if.end25:                                         ; preds = %if.end22
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15, metadata !5922, metadata !DIExpression()), !dbg !5947
  %and28 = and i32 %28, 32, !dbg !6008
  %tobool29 = icmp eq i32 %and28, 0, !dbg !6008
  br i1 %tobool29, label %if.then30, label %if.end31.us-lcssa, !dbg !6010

if.then30:                                        ; preds = %if.end25
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5928, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6011
  br label %for.cond14.backedge, !dbg !6013

if.end31.us-lcssa:                                ; preds = %if.end25
  br label %if.end31, !dbg !6004

if.end31:                                         ; preds = %if.end25.us, %if.end31.us-lcssa
  call void @llvm.dbg.value(metadata i32 0, metadata !5924, metadata !DIExpression()), !dbg !5947
  br label %for.cond32, !dbg !6004

for.cond32:                                       ; preds = %for.inc221, %if.end31
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc221 ], [ 0, %if.end31 ], !dbg !6014
  %change.1 = phi i32 [ %change.2, %for.inc221 ], [ %change.0.ph, %if.end31 ], !dbg !6014
  %removed_p.0 = phi i32 [ %removed_p.1, %for.inc221 ], [ 0, %if.end31 ], !dbg !6015
  call void @llvm.dbg.value(metadata i32 %removed_p.0, metadata !5927, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5924, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 %change.1, metadata !5925, metadata !DIExpression()), !dbg !5947
  %32 = load i32, i32* @reg_use_count, align 4, !dbg !6016
  %33 = sext i32 %32 to i64, !dbg !6017
  %cmp33 = icmp slt i64 %indvars.iv, %33, !dbg !6017
  br i1 %cmp33, label %for.body34, label %for.end222, !dbg !6018

for.body34:                                       ; preds = %for.cond32
  %reg_rtx = getelementptr inbounds [8 x %struct.reg_use], [8 x %struct.reg_use]* @reg_use_table, i64 0, i64 %indvars.iv, i32 0, !dbg !6019
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !6019
  %call36 = call fastcc i32 @rhs_regno(%struct.rtx_def* %34) #7, !dbg !6019
  call void @llvm.dbg.value(metadata i32 %call36, metadata !5936, metadata !DIExpression()), !dbg !6020
  %35 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6021
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !5922, metadata !DIExpression()), !dbg !5947
  %src38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %35, i64 0, i32 0, !dbg !6022
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %src38, align 8, !dbg !6022
  %index39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i64 0, i32 9, !dbg !6023
  %37 = load i32, i32* %index39, align 8, !dbg !6023
  %call40 = call fastcc %struct.expr* @find_bypass_set(i32 %call36, i32 %37) #7, !dbg !6024
  call void @llvm.dbg.value(metadata %struct.expr* %call40, metadata !5939, metadata !DIExpression()), !dbg !6020
  %tobool41 = icmp eq %struct.expr* %call40, null, !dbg !6025
  br i1 %tobool41, label %cleanup, label %if.end43, !dbg !6027

if.end43:                                         ; preds = %for.body34
  %38 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6028
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !5922, metadata !DIExpression()), !dbg !5947
  %insns = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 2, !dbg !6030
  %r = bitcast %union.edge_def_insns* %insns to %struct.rtx_def**, !dbg !6031
  %39 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !6031
  %tobool44 = icmp eq %struct.rtx_def* %39, null, !dbg !6028
  br i1 %tobool44, label %if.end50, label %land.lhs.true45, !dbg !6032

land.lhs.true45:                                  ; preds = %if.end43
  %40 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !6033
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !5922, metadata !DIExpression()), !dbg !5947
  %call47 = call fastcc zeroext i8 @reg_killed_on_edge(%struct.rtx_def* %40, %struct.edge_def* %38) #7, !dbg !6034
  %tobool48 = icmp eq i8 %call47, 0, !dbg !6034
  br i1 %tobool48, label %if.end50, label %cleanup, !dbg !6035

if.end50:                                         ; preds = %land.lhs.true45, %if.end43
  %call51 = call %struct.rtx_def* @pc_set(%struct.rtx_def* %jump) #6, !dbg !6036
  %41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call51, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6036
  %rt_rtx55 = bitcast %union.rtunion_def* %41 to %struct.rtx_def**, !dbg !6036
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !6036
  call void @llvm.dbg.value(metadata %struct.rtx_def* %42, metadata !5940, metadata !DIExpression()), !dbg !6020
  br i1 %cmp, label %if.end76, label %if.then58, !dbg !6037

if.then58:                                        ; preds = %if.end50
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !6038
  %arrayidx65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6038
  %rt_rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**, !dbg !6038
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !6038
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6039
  %rt_rtx74 = bitcast %union.rtunion_def* %45 to %struct.rtx_def**, !dbg !6039
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !6039
  %call75 = call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %42, %struct.rtx_def* %44, %struct.rtx_def* %46) #6, !dbg !6040
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call75, metadata !5940, metadata !DIExpression()), !dbg !6020
  br label %if.end76, !dbg !6041

if.end76:                                         ; preds = %if.end50, %if.then58
  %src37.0 = phi %struct.rtx_def* [ %call75, %if.then58 ], [ %42, %if.end50 ], !dbg !6020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src37.0, metadata !5940, metadata !DIExpression()), !dbg !6020
  %47 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !6042
  %expr = getelementptr inbounds %struct.expr, %struct.expr* %call40, i64 0, i32 0, !dbg !6043
  %48 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !6043
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6043
  %rt_rtx81 = bitcast %union.rtunion_def* %49 to %struct.rtx_def**, !dbg !6043
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !6043
  %call82 = call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %src37.0, %struct.rtx_def* %47, %struct.rtx_def* %50) #6, !dbg !6044
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call82, metadata !5941, metadata !DIExpression()), !dbg !6020
  %51 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !6045
  %cmp83 = icmp eq %struct.rtx_def* %call82, %51, !dbg !6046
  br i1 %cmp83, label %if.then85, label %if.else, !dbg !6047

if.then85:                                        ; preds = %if.end76
  %52 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6048
  %tobool86 = icmp eq %struct.VEC_edge_gc* %52, null, !dbg !6048
  br i1 %tobool86, label %cond.end90, label %cond.true87, !dbg !6048

cond.true87:                                      ; preds = %if.then85
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %52, i64 0, i32 0, !dbg !6048
  br label %cond.end90, !dbg !6048

cond.end90:                                       ; preds = %if.then85, %cond.true87
  %cond91 = phi %struct.VEC_edge_base* [ %base, %cond.true87 ], [ null, %if.then85 ], !dbg !6048
  %call92 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond91, i32 0) #7, !dbg !6048
  %flags93 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call92, i64 0, i32 7, !dbg !6048
  %53 = load i32, i32* %flags93, align 8, !dbg !6048
  %and94 = and i32 %53, 1, !dbg !6048
  %tobool95 = icmp eq i32 %and94, 0, !dbg !6048
  %54 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6048
  %tobool98 = icmp ne %struct.VEC_edge_gc* %54, null, !dbg !6048
  br i1 %tobool95, label %cond.false106, label %cond.true96, !dbg !6048

cond.true96:                                      ; preds = %cond.end90
  br i1 %tobool98, label %cond.true99, label %cond.end103, !dbg !6048

cond.true99:                                      ; preds = %cond.true96
  %base101 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %54, i64 0, i32 0, !dbg !6048
  br label %cond.end103, !dbg !6048

cond.end103:                                      ; preds = %cond.true96, %cond.true99
  %cond104 = phi %struct.VEC_edge_base* [ %base101, %cond.true99 ], [ null, %cond.true96 ], !dbg !6048
  %call105 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond104, i32 0) #7, !dbg !6048
  br label %cond.end116, !dbg !6048

cond.false106:                                    ; preds = %cond.end90
  br i1 %tobool98, label %cond.true109, label %cond.end113, !dbg !6048

cond.true109:                                     ; preds = %cond.false106
  %base111 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %54, i64 0, i32 0, !dbg !6048
  br label %cond.end113, !dbg !6048

cond.end113:                                      ; preds = %cond.false106, %cond.true109
  %cond114 = phi %struct.VEC_edge_base* [ %base111, %cond.true109 ], [ null, %cond.false106 ], !dbg !6048
  %call115 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond114, i32 1) #7, !dbg !6048
  br label %cond.end116, !dbg !6048

cond.end116:                                      ; preds = %cond.end113, %cond.end103
  %cond117 = phi %struct.edge_def* [ %call105, %cond.end103 ], [ %call115, %cond.end113 ], !dbg !6048
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond117, metadata !5923, metadata !DIExpression()), !dbg !5947
  %insns118 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond117, i64 0, i32 2, !dbg !6049
  %r119 = bitcast %union.edge_def_insns* %insns118 to %struct.rtx_def**, !dbg !6050
  %55 = load %struct.rtx_def*, %struct.rtx_def** %r119, align 8, !dbg !6050
  %tobool120 = icmp eq %struct.rtx_def* %55, null, !dbg !6051
  br i1 %tobool120, label %cond.false122, label %if.end146, !dbg !6051

cond.false122:                                    ; preds = %cond.end116
  %dest123 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond117, i64 0, i32 1, !dbg !6052
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %dest123, align 8, !dbg !6052
  br label %if.end146, !dbg !6051

if.else:                                          ; preds = %if.end76
  %57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call82, i64 0, i32 0, !dbg !6053
  %bf.load = load i32, i32* %57, align 8, !dbg !6053
  %bf.clear = and i32 %bf.load, 65535, !dbg !6053
  %cmp126 = icmp eq i32 %bf.clear, 44, !dbg !6055
  br i1 %cmp126, label %if.then128, label %if.end146, !dbg !6056

if.then128:                                       ; preds = %if.else
  %arrayidx131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call82, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6057
  %rt_rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**, !dbg !6057
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx132, align 8, !dbg !6057
  %arrayidx135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i64 0, i32 1, i32 0, i32 1, !dbg !6057
  %rt_bb = bitcast %struct.object_block** %arrayidx135 to %struct.basic_block_def**, !dbg !6057
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6057
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %59, metadata !5937, metadata !DIExpression()), !dbg !6020
  %call136 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %59) #6, !dbg !6059
  call void @llvm.dbg.value(metadata %struct.edge_def* %call136, metadata !5923, metadata !DIExpression()), !dbg !5947
  %tobool137 = icmp eq %struct.edge_def* %call136, null, !dbg !6060
  br i1 %tobool137, label %if.end146, label %land.lhs.true138, !dbg !6062

land.lhs.true138:                                 ; preds = %if.then128
  %insns139 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call136, i64 0, i32 2, !dbg !6063
  %r140 = bitcast %union.edge_def_insns* %insns139 to %struct.rtx_def**, !dbg !6064
  %60 = load %struct.rtx_def*, %struct.rtx_def** %r140, align 8, !dbg !6064
  %tobool141 = icmp eq %struct.rtx_def* %60, null, !dbg !6065
  %spec.select = select i1 %tobool141, %struct.basic_block_def* %59, %struct.basic_block_def* null, !dbg !6066
  br label %if.end146, !dbg !6066

if.end146:                                        ; preds = %cond.end116, %if.then128, %land.lhs.true138, %if.else, %cond.false122
  %dest.2 = phi %struct.basic_block_def* [ %56, %cond.false122 ], [ null, %cond.end116 ], [ %59, %if.then128 ], [ %spec.select, %land.lhs.true138 ], [ null, %if.else ], !dbg !6067
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest.2, metadata !5937, metadata !DIExpression()), !dbg !6020
  %tobool147 = icmp ne %struct.basic_block_def* %dest.2, null, !dbg !6068
  %or.cond = and i1 %tobool147, %tobool149, !dbg !6069
  br i1 %or.cond, label %land.lhs.true162, label %if.end167, !dbg !6069

land.lhs.true162:                                 ; preds = %if.end146
  %61 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6070
  call void @llvm.dbg.value(metadata %struct.edge_def* %61, metadata !5922, metadata !DIExpression()), !dbg !5947
  %src163 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %61, i64 0, i32 0, !dbg !6071
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %src163, align 8, !dbg !6071
  %call164 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %62, %struct.basic_block_def* nonnull %dest.2) #6, !dbg !6072
  %tobool165 = icmp eq %struct.edge_def* %call164, null, !dbg !6072
  %spec.select1 = select i1 %tobool165, %struct.basic_block_def* %dest.2, %struct.basic_block_def* null, !dbg !6073
  br label %if.end167, !dbg !6073

if.end167:                                        ; preds = %land.lhs.true162, %if.end146
  %dest.3 = phi %struct.basic_block_def* [ %dest.2, %if.end146 ], [ %spec.select1, %land.lhs.true162 ], !dbg !6020
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest.3, metadata !5937, metadata !DIExpression()), !dbg !6020
  %63 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6074
  call void @llvm.dbg.value(metadata %struct.edge_def* %63, metadata !5922, metadata !DIExpression()), !dbg !5947
  %dest168 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %63, i64 0, i32 1, !dbg !6075
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %dest168, align 8, !dbg !6075
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %64, metadata !5938, metadata !DIExpression()), !dbg !6020
  %cmp169 = icmp ne %struct.basic_block_def* %dest.3, null, !dbg !6076
  %cmp172 = icmp ne %struct.basic_block_def* %dest.3, %64, !dbg !6077
  %or.cond2 = and i1 %cmp169, %cmp172, !dbg !6078
  br i1 %or.cond2, label %land.lhs.true174, label %cleanup, !dbg !6078

land.lhs.true174:                                 ; preds = %if.end167
  %65 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6079
  %cfg = getelementptr inbounds %struct.function, %struct.function* %65, i64 0, i32 1, !dbg !6079
  %66 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6079
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %66, i64 0, i32 1, !dbg !6079
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6079
  %cmp175 = icmp eq %struct.basic_block_def* %dest.3, %67, !dbg !6080
  br i1 %cmp175, label %cleanup, label %if.then177, !dbg !6081

if.then177:                                       ; preds = %land.lhs.true174
  call void @llvm.dbg.value(metadata %struct.edge_def* %63, metadata !5922, metadata !DIExpression()), !dbg !5947
  %call178 = call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %63, %struct.basic_block_def* nonnull %dest.3) #6, !dbg !6082
  br i1 %cmp, label %if.end195, label %if.then180, !dbg !6083

if.then180:                                       ; preds = %if.then177
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !6084
  call void @llvm.dbg.value(metadata %struct.rtx_def* %68, metadata !5942, metadata !DIExpression()), !dbg !6085
  %call193 = call %struct.rtx_def* @copy_insn(%struct.rtx_def* %68) #6, !dbg !6086
  %69 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6088
  call void @llvm.dbg.value(metadata %struct.edge_def* %69, metadata !5922, metadata !DIExpression()), !dbg !5947
  call void @insert_insn_on_edge(%struct.rtx_def* %call193, %struct.edge_def* %69) #6, !dbg !6089
  br label %if.end195, !dbg !6090

if.end195:                                        ; preds = %if.then177, %if.then180
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6091
  %cmp196 = icmp eq %struct._IO_FILE* %70, null, !dbg !6092
  br i1 %cmp196, label %cleanup, label %if.then198, !dbg !6093

if.then198:                                       ; preds = %if.end195
  %71 = load i32, i32* %rt_int, align 8, !dbg !6094
  %call202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %70, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.26, i64 0, i64 0), i32 %call36, i32 %71) #6, !dbg !6095
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6096
  %73 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !6097
  %74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6097
  %rt_rtx207 = bitcast %union.rtunion_def* %74 to %struct.rtx_def**, !dbg !6097
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx207, align 8, !dbg !6097
  call void @print_rtl(%struct._IO_FILE* %72, %struct.rtx_def* %75) #6, !dbg !6098
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6099
  %77 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6100
  call void @llvm.dbg.value(metadata %struct.edge_def* %77, metadata !5922, metadata !DIExpression()), !dbg !5947
  %src208 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %77, i64 0, i32 0, !dbg !6101
  %78 = load %struct.basic_block_def*, %struct.basic_block_def** %src208, align 8, !dbg !6101
  %index209 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %78, i64 0, i32 9, !dbg !6102
  %79 = load i32, i32* %index209, align 8, !dbg !6102
  %index210 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %64, i64 0, i32 9, !dbg !6103
  %80 = load i32, i32* %index210, align 8, !dbg !6103
  %index211 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %dest.3, i64 0, i32 9, !dbg !6104
  %81 = load i32, i32* %index211, align 8, !dbg !6104
  %call212 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27, i64 0, i64 0), i32 %79, i32 %80, i32 %81) #6, !dbg !6105
  br label %cleanup, !dbg !6106

cleanup:                                          ; preds = %land.lhs.true45, %if.end195, %land.lhs.true174, %for.body34, %if.end167, %if.then198
  %change.2 = phi i32 [ %change.1, %for.body34 ], [ %change.1, %land.lhs.true45 ], [ 1, %if.then198 ], [ 1, %if.end195 ], [ %change.1, %land.lhs.true174 ], [ %change.1, %if.end167 ], !dbg !5947
  %removed_p.1 = phi i32 [ %removed_p.0, %for.body34 ], [ %removed_p.0, %land.lhs.true45 ], [ 1, %if.then198 ], [ 1, %if.end195 ], [ %removed_p.0, %land.lhs.true174 ], [ %removed_p.0, %if.end167 ], !dbg !6107
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body34 ], [ false, %land.lhs.true45 ], [ true, %if.then198 ], [ true, %if.end195 ], [ false, %land.lhs.true174 ], [ false, %if.end167 ]
  call void @llvm.dbg.value(metadata i32 %removed_p.1, metadata !5927, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 %change.2, metadata !5925, metadata !DIExpression()), !dbg !5947
  br i1 %cleanup.dest.slot.0, label %for.end222, label %for.inc221

for.inc221:                                       ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6108
  call void @llvm.dbg.value(metadata i32 undef, metadata !5924, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5947
  br label %for.cond32, !dbg !6109, !llvm.loop !6110

for.end222:                                       ; preds = %cleanup, %for.cond32
  %change.3 = phi i32 [ %change.2, %cleanup ], [ %change.1, %for.cond32 ], !dbg !6014
  %removed_p.2 = phi i32 [ %removed_p.1, %cleanup ], [ %removed_p.0, %for.cond32 ], !dbg !6015
  call void @llvm.dbg.value(metadata i32 %removed_p.2, metadata !5927, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 %change.3, metadata !5925, metadata !DIExpression()), !dbg !5947
  %tobool223 = icmp eq i32 %removed_p.2, 0, !dbg !6112
  br i1 %tobool223, label %if.then224, label %if.end225, !dbg !6114

if.then224:                                       ; preds = %for.end222
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5928, metadata !DIExpression(DW_OP_deref)), !dbg !5947
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6115
  br label %if.end225, !dbg !6115

if.end225:                                        ; preds = %for.end222, %if.then224
  br label %for.cond14.outer, !dbg !6116, !llvm.loop !6005

for.end226.us-lcssa:                              ; preds = %for.cond14
  %change.0.ph.lcssa = phi i32 [ %change.0.ph, %for.cond14 ]
  br label %for.end226, !dbg !6007

for.end226:                                       ; preds = %for.end226.us-lcssa.us, %for.end226.us-lcssa
  %change.0.ph6 = phi i32 [ %change.0.ph.lcssa5, %for.end226.us-lcssa.us ], [ %change.0.ph.lcssa, %for.end226.us-lcssa ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6007
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6007
  ret i32 %change.0.ph6, !dbg !6117
}

declare dso_local void @commit_edge_insertions() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6118 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6123, metadata !DIExpression()), !dbg !6124
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6125
  %tobool = icmp eq i8 %call, 0, !dbg !6125
  br i1 %tobool, label %if.then, label %if.else, !dbg !6127

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6128
  br label %return, !dbg !6130

if.else:                                          ; preds = %entry
  br label %return, !dbg !6131

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !6133
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !6133
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !6133
  ret i8 %retval.0, !dbg !6134
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.expr* @find_bypass_set(i32 %regno, i32 %bb) unnamed_addr #4 !dbg !6135 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !6139, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata i32 %bb, metadata !6140, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata %struct.expr* null, metadata !6141, metadata !DIExpression()), !dbg !6147
  %idxprom = sext i32 %bb to i64, !dbg !6148
  br label %for.cond, !dbg !6151

for.cond:                                         ; preds = %cleanup, %entry
  %result.0 = phi %struct.expr* [ null, %entry ], [ %result.2, %cleanup ], !dbg !6152
  %regno.addr.0 = phi i32 [ %regno, %entry ], [ %regno.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata i32 %regno.addr.0, metadata !6139, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata %struct.expr* %result.0, metadata !6141, metadata !DIExpression()), !dbg !6147
  %call = tail call fastcc %struct.expr* @lookup_set(i32 %regno.addr.0, %struct.hash_table_d* nonnull @set_hash_table) #7, !dbg !6153
  call void @llvm.dbg.value(metadata %struct.expr* %call, metadata !6146, metadata !DIExpression()), !dbg !6154
  br label %while.cond, !dbg !6155

while.cond:                                       ; preds = %if.end, %for.cond
  %set.0 = phi %struct.expr* [ %call, %for.cond ], [ %call5, %if.end ], !dbg !6154
  call void @llvm.dbg.value(metadata %struct.expr* %set.0, metadata !6146, metadata !DIExpression()), !dbg !6154
  %cond = icmp eq %struct.expr* %set.0, null, !dbg !6155
  br i1 %cond, label %cleanup.loopexit, label %while.body, !dbg !6155

while.body:                                       ; preds = %while.cond
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @cprop_avout, align 8, !dbg !6156
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %0, i64 %idxprom, !dbg !6156
  %1 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx, align 8, !dbg !6156
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %set.0, i64 0, i32 1, !dbg !6156
  %2 = load i32, i32* %bitmap_index, align 8, !dbg !6156
  %div = lshr i32 %2, 6, !dbg !6156
  %idxprom1 = zext i32 %div to i64, !dbg !6156
  %arrayidx2 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %1, i64 0, i32 3, i64 %idxprom1, !dbg !6156
  %3 = load i64, i64* %arrayidx2, align 8, !dbg !6156
  %rem = and i32 %2, 63, !dbg !6156
  %sh_prom = zext i32 %rem to i64, !dbg !6156
  %4 = shl i64 1, %sh_prom, !dbg !6156
  %5 = and i64 %3, %4, !dbg !6156
  %tobool4 = icmp eq i64 %5, 0, !dbg !6156
  br i1 %tobool4, label %if.end, label %while.end, !dbg !6157

if.end:                                           ; preds = %while.body
  %call5 = tail call fastcc %struct.expr* @next_set(i32 %regno.addr.0, %struct.expr* nonnull %set.0) #7, !dbg !6158
  call void @llvm.dbg.value(metadata %struct.expr* %call5, metadata !6146, metadata !DIExpression()), !dbg !6154
  br label %while.cond, !dbg !6155, !llvm.loop !6159

while.end:                                        ; preds = %while.body
  %set.0.lcssa4 = phi %struct.expr* [ %set.0, %while.body ], !dbg !6154
  call void @llvm.dbg.value(metadata %struct.expr* %set.0.lcssa4, metadata !6146, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata %struct.expr* %set.0.lcssa4, metadata !6146, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata %struct.expr* %set.0.lcssa4, metadata !6146, metadata !DIExpression()), !dbg !6154
  %6 = bitcast %struct.expr* %set.0.lcssa4 to i32**, !dbg !6161
  %7 = load i32*, i32** %6, align 8, !dbg !6161
  %bf.load = load i32, i32* %7, align 8, !dbg !6161
  %bf.clear = and i32 %bf.load, 65535, !dbg !6161
  %cmp8 = icmp eq i32 %bf.clear, 23, !dbg !6161
  %8 = bitcast i32* %7 to %struct.rtx_def*, !dbg !6161
  br i1 %cmp8, label %cond.end, label %cond.true, !dbg !6161

cond.true:                                        ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 2908, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !6161
  %expr9.phi.trans.insert = getelementptr inbounds %struct.expr, %struct.expr* %set.0.lcssa4, i64 0, i32 0, !dbg !6154
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %expr9.phi.trans.insert, align 8, !dbg !6162
  br label %cond.end, !dbg !6161

cond.end:                                         ; preds = %while.end, %cond.true
  %9 = phi %struct.rtx_def* [ %8, %while.end ], [ %.pre, %cond.true ], !dbg !6162
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6162
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !6162
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6162
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !6142, metadata !DIExpression()), !dbg !6154
  %call11 = tail call fastcc zeroext i8 @gcse_constant_p(%struct.rtx_def* %11) #7, !dbg !6163
  %tobool12 = icmp eq i8 %call11, 0, !dbg !6163
  %spec.select = select i1 %tobool12, %struct.expr* %result.0, %struct.expr* %set.0.lcssa4, !dbg !6165
  call void @llvm.dbg.value(metadata %struct.expr* %spec.select, metadata !6141, metadata !DIExpression()), !dbg !6147
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !6166
  %bf.load15 = load i32, i32* %12, align 8, !dbg !6166
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !6166
  %cmp17 = icmp eq i32 %bf.clear16, 37, !dbg !6166
  br i1 %cmp17, label %if.end19, label %cleanup, !dbg !6168

if.end19:                                         ; preds = %cond.end
  %call20 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %11) #7, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %call20, metadata !6139, metadata !DIExpression()), !dbg !6147
  br label %cleanup, !dbg !6170

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end, %if.end19
  %result.2 = phi %struct.expr* [ %spec.select, %if.end19 ], [ %spec.select, %cond.end ], [ %result.0, %cleanup.loopexit ], !dbg !6147
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end19 ], [ false, %cond.end ], [ false, %cleanup.loopexit ]
  %regno.addr.1 = phi i32 [ %call20, %if.end19 ], [ %regno.addr.0, %cond.end ], [ %regno.addr.0, %cleanup.loopexit ]
  call void @llvm.dbg.value(metadata i32 %regno.addr.1, metadata !6139, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata %struct.expr* %result.2, metadata !6141, metadata !DIExpression()), !dbg !6147
  br i1 %cleanup.dest.slot.0, label %for.cond, label %for.end, !llvm.loop !6171

for.end:                                          ; preds = %cleanup
  %result.2.lcssa = phi %struct.expr* [ %result.2, %cleanup ], !dbg !6147
  call void @llvm.dbg.value(metadata %struct.expr* %result.2.lcssa, metadata !6141, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata %struct.expr* %result.2.lcssa, metadata !6141, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata %struct.expr* %result.2.lcssa, metadata !6141, metadata !DIExpression()), !dbg !6147
  ret %struct.expr* %result.2.lcssa, !dbg !6174
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @reg_killed_on_edge(%struct.rtx_def* %reg, %struct.edge_def* %e) unnamed_addr #4 !dbg !6175 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !6182, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6183, metadata !DIExpression()), !dbg !6185
  %insns = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 2, !dbg !6186
  %r = bitcast %union.edge_def_insns* %insns to %struct.rtx_def**, !dbg !6188
  br label %for.cond, !dbg !6189

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0.in = phi %struct.rtx_def** [ %r, %entry ], [ %rt_rtx, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6190
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6184, metadata !DIExpression()), !dbg !6185
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6191
  br i1 %tobool, label %cleanup, label %for.body, !dbg !6191

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6192
  %bf.load = load i32, i32* %0, align 8, !dbg !6192
  %bf.clear = and i32 %bf.load, 65535, !dbg !6192
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6192
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6192

lor.lhs.false:                                    ; preds = %for.body
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !6192
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !6192

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !6192
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !6192

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !6192
  br i1 %cmp11, label %land.lhs.true, label %for.inc, !dbg !6195

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %for.body
  %call = tail call i32 @reg_set_p(%struct.rtx_def* %reg, %struct.rtx_def* nonnull %insn.0) #6, !dbg !6196
  %tobool12 = icmp eq i32 %call, 0, !dbg !6196
  br i1 %tobool12, label %for.inc, label %cleanup, !dbg !6197

for.inc:                                          ; preds = %land.lhs.true, %lor.lhs.false8
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6198
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6198
  br label %for.cond, !dbg !6199, !llvm.loop !6200

cleanup:                                          ; preds = %land.lhs.true, %for.cond
  %retval.0 = phi i8 [ 1, %land.lhs.true ], [ 0, %for.cond ], !dbg !6185
  ret i8 %retval.0, !dbg !6202
}

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @free_modify_mem_tables() unnamed_addr #4 !dbg !6203 {
entry:
  tail call fastcc void @clear_modify_mem_tables() #7, !dbg !6204
  %0 = load i8*, i8** bitcast (%struct.rtx_def*** @modify_mem_list to i8**), align 8, !dbg !6205
  tail call void @free(i8* %0) #6, !dbg !6206
  %1 = load i8*, i8** bitcast (%struct.rtx_def*** @canon_modify_mem_list to i8**), align 8, !dbg !6207
  tail call void @free(i8* %1) #6, !dbg !6208
  store %struct.rtx_def** null, %struct.rtx_def*** @modify_mem_list, align 8, !dbg !6209
  store %struct.rtx_def** null, %struct.rtx_def*** @canon_modify_mem_list, align 8, !dbg !6210
  ret void, !dbg !6211
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @optimize_function_for_speed_p(%struct.function*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @one_pre_gcse_pass() unnamed_addr #4 !dbg !6212 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !6214, metadata !DIExpression()), !dbg !6215
  store i32 0, i32* @gcse_subst_count, align 4, !dbg !6216
  store i32 0, i32* @gcse_create_count, align 4, !dbg !6217
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6218
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6218
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6218
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !6218
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !6218
  %cmp = icmp slt i32 %2, 4, !dbg !6220
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !6221

lor.lhs.false:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_too_expensive(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0)) #7, !dbg !6222
  %tobool = icmp eq i8 %call, 0, !dbg !6222
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6223

if.end:                                           ; preds = %lor.lhs.false
  tail call void @init_alias_analysis() #6, !dbg !6224
  store i32 0, i32* @bytes_used, align 4, !dbg !6225
  %call1 = tail call i32 @_obstack_begin(%struct.obstack* nonnull @gcse_obstack, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !6226
  tail call fastcc void @alloc_gcse_mem() #7, !dbg !6227
  tail call fastcc void @alloc_hash_table(%struct.hash_table_d* nonnull @expr_hash_table, i32 0) #7, !dbg !6228
  tail call void @add_noreturn_fake_exit_edges() #6, !dbg !6229
  %3 = load i32, i32* @flag_gcse_lm, align 4, !dbg !6230
  %tobool2 = icmp eq i32 %3, 0, !dbg !6230
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6232

if.then3:                                         ; preds = %if.end
  tail call fastcc void @compute_ld_motion_mems() #7, !dbg !6233
  br label %if.end4, !dbg !6233

if.end4:                                          ; preds = %if.end, %if.then3
  tail call fastcc void @compute_hash_table(%struct.hash_table_d* nonnull @expr_hash_table) #7, !dbg !6234
  tail call fastcc void @trim_ld_motion_mems() #7, !dbg !6235
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6236
  %tobool5 = icmp eq %struct._IO_FILE* %4, null, !dbg !6236
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6238

if.then6:                                         ; preds = %if.end4
  tail call fastcc void @dump_hash_table(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), %struct.hash_table_d* nonnull @expr_hash_table) #7, !dbg !6239
  br label %if.end7, !dbg !6239

if.end7:                                          ; preds = %if.end4, %if.then6
  %5 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 2), align 4, !dbg !6240
  %cmp8 = icmp eq i32 %5, 0, !dbg !6242
  br i1 %cmp8, label %if.end14, label %if.then10, !dbg !6243

if.then10:                                        ; preds = %if.end7
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6244
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !6244
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !6244
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 5, !dbg !6244
  %8 = load i32, i32* %x_last_basic_block, align 8, !dbg !6244
  tail call fastcc void @alloc_pre_mem(i32 %8, i32 %5) #7, !dbg !6246
  tail call fastcc void @compute_pre_data() #7, !dbg !6247
  %call13 = tail call fastcc i32 @pre_gcse() #7, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %call13, metadata !6214, metadata !DIExpression()), !dbg !6215
  %9 = load %struct.edge_list*, %struct.edge_list** @edge_list, align 8, !dbg !6249
  tail call void @free_edge_list(%struct.edge_list* %9) #6, !dbg !6250
  tail call fastcc void @free_pre_mem() #7, !dbg !6251
  br label %if.end14, !dbg !6252

if.end14:                                         ; preds = %if.end7, %if.then10
  %changed.0 = phi i32 [ %call13, %if.then10 ], [ 0, %if.end7 ], !dbg !6215
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !6214, metadata !DIExpression()), !dbg !6215
  tail call fastcc void @free_ldst_mems() #7, !dbg !6253
  tail call void @remove_fake_exit_edges() #6, !dbg !6254
  tail call fastcc void @free_hash_table(%struct.hash_table_d* nonnull @expr_hash_table) #7, !dbg !6255
  tail call fastcc void @free_gcse_mem() #7, !dbg !6256
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 1) to i64*), align 8, !dbg !6257
  %sub.ptr.sub = sub i64 0, %10, !dbg !6257
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 5), align 8, !dbg !6257
  %cmp15 = icmp sgt i64 %sub.ptr.sub, 0, !dbg !6257
  %11 = inttoptr i64 %10 to i8*, !dbg !6257
  br i1 %cmp15, label %land.lhs.true, label %cond.false, !dbg !6257

land.lhs.true:                                    ; preds = %if.end14
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 4) to i64*), align 8, !dbg !6257
  %sub.ptr.sub18 = sub i64 %12, %10, !dbg !6257
  %cmp19 = icmp sgt i64 %sub.ptr.sub18, %sub.ptr.sub, !dbg !6257
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !6257

cond.true:                                        ; preds = %land.lhs.true
  %add.ptr21 = getelementptr inbounds i8, i8* %11, i64 %sub.ptr.sub, !dbg !6257
  store i8* %add.ptr21, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 2), align 8, !dbg !6257
  store i8* %add.ptr21, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !dbg !6257
  br label %cond.end, !dbg !6257

cond.false:                                       ; preds = %land.lhs.true, %if.end14
  %add.ptr22 = getelementptr inbounds i8, i8* %11, i64 %sub.ptr.sub, !dbg !6257
  tail call void @obstack_free(%struct.obstack* nonnull @gcse_obstack, i8* %add.ptr22) #6, !dbg !6257
  br label %cond.end, !dbg !6257

cond.end:                                         ; preds = %cond.false, %cond.true
  tail call void @end_alias_analysis() #6, !dbg !6258
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6259
  %tobool23 = icmp eq %struct._IO_FILE* %13, null, !dbg !6259
  br i1 %tobool23, label %cleanup, label %if.then24, !dbg !6261

if.then24:                                        ; preds = %cond.end
  %call25 = tail call i8* @current_function_name() #6, !dbg !6262
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6264
  %cfg27 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !6264
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg27, align 8, !dbg !6264
  %x_n_basic_blocks28 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 3, !dbg !6264
  %16 = load i32, i32* %x_n_basic_blocks28, align 8, !dbg !6264
  %17 = load i32, i32* @bytes_used, align 4, !dbg !6265
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.30, i64 0, i64 0), i8* %call25, i32 %16, i32 %17) #6, !dbg !6266
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6267
  %19 = load i32, i32* @gcse_subst_count, align 4, !dbg !6268
  %20 = load i32, i32* @gcse_create_count, align 4, !dbg !6269
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i32 %19, i32 %20) #6, !dbg !6270
  br label %cleanup, !dbg !6271

cleanup:                                          ; preds = %cond.end, %lor.lhs.false, %if.then24, %entry
  %retval.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %entry ], [ %changed.0, %if.then24 ], [ %changed.0, %cond.end ], !dbg !6215
  ret i32 %retval.0, !dbg !6272
}

declare dso_local void @init_alias_analysis() local_unnamed_addr #1

declare dso_local void @add_noreturn_fake_exit_edges() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_ld_motion_mems() unnamed_addr #4 !dbg !6273 {
entry:
  store %struct.ls_expr* null, %struct.ls_expr** @pre_ldst_mems, align 8, !dbg !6290
  %call = tail call %struct.htab* @htab_create(i64 13, i32 (i8*)* nonnull @pre_ldst_expr_hash, i32 (i8*, i8*)* nonnull @pre_ldst_expr_eq, void (i8*)* null) #6, !dbg !6291
  store %struct.htab* %call, %struct.htab** @pre_ldst_table, align 8, !dbg !6292
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6293
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6293
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6293
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !6293
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6293
  br label %for.cond, !dbg !6293

for.cond:                                         ; preds = %for.inc99, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.inc99 ], !dbg !6294
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc99 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !6295
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !6295
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6276, metadata !DIExpression()), !dbg !6296
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !6294
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6294
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !6294
  br i1 %cmp, label %for.end101, label %for.body, !dbg !6293

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !6297
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6297
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6297
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 0, !dbg !6297
  br label %for.cond3, !dbg !6297

for.cond3:                                        ; preds = %for.inc, %for.body
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx98, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6298
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6277, metadata !DIExpression()), !dbg !6296
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6299
  br i1 %tobool, label %for.inc99, label %land.rhs, !dbg !6299

land.rhs:                                         ; preds = %for.cond3
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6299
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !6299
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6299
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6299
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !6299
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6299
  %cmp6 = icmp eq %struct.rtx_def* %insn.0, %9, !dbg !6299
  br i1 %cmp6, label %for.inc99, label %for.body7, !dbg !6297

for.body7:                                        ; preds = %land.rhs
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6300
  %bf.load = load i32, i32* %10, align 8, !dbg !6300
  %bf.clear = and i32 %bf.load, 65535, !dbg !6300
  %cmp8 = icmp eq i32 %bf.clear, 8, !dbg !6300
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false, !dbg !6300

lor.lhs.false:                                    ; preds = %for.body7
  %cmp11 = icmp eq i32 %bf.clear, 7, !dbg !6300
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false12, !dbg !6300

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %cmp15 = icmp eq i32 %bf.clear, 9, !dbg !6300
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false16, !dbg !6300

lor.lhs.false16:                                  ; preds = %lor.lhs.false12
  %cmp19 = icmp eq i32 %bf.clear, 10, !dbg !6300
  br i1 %cmp19, label %land.lhs.true, label %for.inc, !dbg !6300

land.lhs.true:                                    ; preds = %lor.lhs.false16, %lor.lhs.false12, %lor.lhs.false, %for.body7
  %cmp22 = icmp eq i32 %bf.clear, 7, !dbg !6300
  br i1 %cmp22, label %for.inc, label %if.then, !dbg !6301

if.then:                                          ; preds = %land.lhs.true
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6302
  %11 = getelementptr inbounds %union.u, %union.u* %u23, i64 1, i32 0, i32 0, i64 0, !dbg !6302
  %12 = bitcast %union.rtunion_def* %11 to i32**, !dbg !6302
  %13 = load i32*, i32** %12, align 8, !dbg !6302
  %bf.load27 = load i32, i32* %13, align 8, !dbg !6302
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !6302
  %cmp29 = icmp eq i32 %bf.clear28, 23, !dbg !6303
  br i1 %cmp29, label %if.then30, label %if.else88, !dbg !6304

if.then30:                                        ; preds = %if.then
  %14 = getelementptr inbounds i32, i32* %13, i64 4, !dbg !6305
  %rt_rtx38 = bitcast i32* %14 to %struct.rtx_def**, !dbg !6305
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !6305
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !6278, metadata !DIExpression()), !dbg !6306
  %arrayidx45 = getelementptr inbounds i32, i32* %13, i64 2, !dbg !6307
  %rt_rtx46 = bitcast i32* %arrayidx45 to %struct.rtx_def**, !dbg !6307
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !6307
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !6289, metadata !DIExpression()), !dbg !6306
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !6308
  %bf.load47 = load i32, i32* %17, align 8, !dbg !6308
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !6308
  %cmp49 = icmp eq i32 %bf.clear48, 43, !dbg !6308
  br i1 %cmp49, label %land.lhs.true50, label %if.else61, !dbg !6310

land.lhs.true50:                                  ; preds = %if.then30
  %call51 = tail call fastcc i32 @simple_mem(%struct.rtx_def* %15) #7, !dbg !6311
  %tobool52 = icmp eq i32 %call51, 0, !dbg !6311
  br i1 %tobool52, label %if.else61, label %if.then53, !dbg !6312

if.then53:                                        ; preds = %land.lhs.true50
  %call54 = tail call fastcc %struct.ls_expr* @ldst_entry(%struct.rtx_def* %15) #7, !dbg !6313
  call void @llvm.dbg.value(metadata %struct.ls_expr* %call54, metadata !6275, metadata !DIExpression()), !dbg !6296
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 0, !dbg !6315
  %bf.load55 = load i32, i32* %18, align 8, !dbg !6315
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !6315
  %cmp57 = icmp eq i32 %bf.clear56, 37, !dbg !6315
  br i1 %cmp57, label %if.then58, label %if.else, !dbg !6317

if.then58:                                        ; preds = %if.then53
  %loads = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %call54, i64 0, i32 3, !dbg !6318
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loads, align 8, !dbg !6318
  %call59 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %19) #6, !dbg !6319
  store %struct.rtx_def* %call59, %struct.rtx_def** %loads, align 8, !dbg !6320
  br label %if.end62, !dbg !6321

if.else:                                          ; preds = %if.then53
  %invalid = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %call54, i64 0, i32 6, !dbg !6322
  store i32 1, i32* %invalid, align 8, !dbg !6323
  br label %if.end62

if.else61:                                        ; preds = %land.lhs.true50, %if.then30
  tail call fastcc void @invalidate_any_buried_refs(%struct.rtx_def* %15) #7, !dbg !6324
  br label %if.end62

if.end62:                                         ; preds = %if.then58, %if.else, %if.else61
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 0, !dbg !6326
  %bf.load63 = load i32, i32* %20, align 8, !dbg !6326
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !6326
  %cmp65 = icmp eq i32 %bf.clear64, 43, !dbg !6326
  br i1 %cmp65, label %land.lhs.true66, label %for.inc, !dbg !6328

land.lhs.true66:                                  ; preds = %if.end62
  %call67 = tail call fastcc i32 @simple_mem(%struct.rtx_def* %16) #7, !dbg !6329
  %tobool68 = icmp eq i32 %call67, 0, !dbg !6329
  br i1 %tobool68, label %for.inc, label %if.then69, !dbg !6330

if.then69:                                        ; preds = %land.lhs.true66
  %call70 = tail call fastcc %struct.ls_expr* @ldst_entry(%struct.rtx_def* %16) #7, !dbg !6331
  call void @llvm.dbg.value(metadata %struct.ls_expr* %call70, metadata !6275, metadata !DIExpression()), !dbg !6296
  %bf.load71 = load i32, i32* %17, align 8, !dbg !6333
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !6333
  %cmp73 = icmp eq i32 %bf.clear72, 43, !dbg !6333
  br i1 %cmp73, label %if.else84, label %land.lhs.true74, !dbg !6335

land.lhs.true74:                                  ; preds = %if.then69
  %cmp77 = icmp eq i32 %bf.clear72, 17, !dbg !6336
  br i1 %cmp77, label %if.else84, label %land.lhs.true78, !dbg !6337

land.lhs.true78:                                  ; preds = %land.lhs.true74
  %call79 = tail call zeroext i8 @can_assign_to_reg_without_clobbers_p(%struct.rtx_def* %15) #7, !dbg !6338
  %tobool80 = icmp eq i8 %call79, 0, !dbg !6338
  br i1 %tobool80, label %if.else84, label %if.then81, !dbg !6339

if.then81:                                        ; preds = %land.lhs.true78
  %stores = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %call70, i64 0, i32 4, !dbg !6340
  %21 = load %struct.rtx_def*, %struct.rtx_def** %stores, align 8, !dbg !6340
  %call82 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %21) #6, !dbg !6341
  store %struct.rtx_def* %call82, %struct.rtx_def** %stores, align 8, !dbg !6342
  br label %for.inc, !dbg !6343

if.else84:                                        ; preds = %land.lhs.true78, %land.lhs.true74, %if.then69
  %invalid85 = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %call70, i64 0, i32 6, !dbg !6344
  store i32 1, i32* %invalid85, align 8, !dbg !6345
  br label %for.inc

if.else88:                                        ; preds = %if.then
  %22 = bitcast i32* %13 to %struct.rtx_def*, !dbg !6346
  tail call fastcc void @invalidate_any_buried_refs(%struct.rtx_def* %22) #7, !dbg !6347
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true66, %lor.lhs.false16, %land.lhs.true, %if.end62, %if.else84, %if.then81, %if.else88
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6299
  %rt_rtx98 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !6299
  br label %for.cond3, !dbg !6299, !llvm.loop !6348

for.inc99:                                        ; preds = %land.rhs, %for.cond3
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6294
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !6350
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !6294
  br label %for.cond, !dbg !6294, !llvm.loop !6351

for.end101:                                       ; preds = %for.cond
  ret void, !dbg !6353
}

; Function Attrs: nounwind uwtable
define internal fastcc void @trim_ld_motion_mems() unnamed_addr #4 !dbg !6354 {
entry:
  call void @llvm.dbg.value(metadata %struct.ls_expr** @pre_ldst_mems, metadata !6356, metadata !DIExpression()), !dbg !6364
  %0 = load %struct.ls_expr*, %struct.ls_expr** @pre_ldst_mems, align 8, !dbg !6365
  call void @llvm.dbg.value(metadata %struct.ls_expr* %0, metadata !6358, metadata !DIExpression()), !dbg !6364
  br label %while.cond, !dbg !6366

while.cond:                                       ; preds = %if.end13, %entry
  %.in1 = phi %struct.ls_expr* [ %0, %entry ], [ %.in, %if.end13 ]
  %ptr.0 = phi %struct.ls_expr* [ %0, %entry ], [ %ptr.1, %if.end13 ], !dbg !6364
  %last.0 = phi %struct.ls_expr** [ @pre_ldst_mems, %entry ], [ %last.1, %if.end13 ], !dbg !6364
  %1 = bitcast %struct.ls_expr* %.in1 to i8*, !dbg !6364
  call void @llvm.dbg.value(metadata %struct.ls_expr** %last.0, metadata !6356, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata %struct.ls_expr* %ptr.0, metadata !6358, metadata !DIExpression()), !dbg !6364
  %cmp = icmp eq %struct.ls_expr* %ptr.0, null, !dbg !6367
  br i1 %cmp, label %while.end, label %while.body, !dbg !6366

while.body:                                       ; preds = %while.cond
  %invalid = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 6, !dbg !6368
  %2 = load i32, i32* %invalid, align 8, !dbg !6368
  %tobool = icmp eq i32 %2, 0, !dbg !6369
  br i1 %tobool, label %if.then, label %if.end5, !dbg !6370

if.then:                                          ; preds = %while.body
  %hash_index = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 8, !dbg !6371
  %3 = load i32, i32* %hash_index, align 8, !dbg !6371
  %4 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 1), align 8, !dbg !6372
  %rem = urem i32 %3, %4, !dbg !6373
  call void @llvm.dbg.value(metadata i32 %rem, metadata !6361, metadata !DIExpression()), !dbg !6374
  %5 = load %struct.expr**, %struct.expr*** getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 0), align 8, !dbg !6375
  %idxprom = zext i32 %rem to i64, !dbg !6377
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %5, i64 %idxprom, !dbg !6377
  %pattern = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 1, !dbg !6378
  br label %for.cond, !dbg !6381

for.cond:                                         ; preds = %for.inc, %if.then
  %expr.0.in = phi %struct.expr** [ %arrayidx, %if.then ], [ %next_same_hash, %for.inc ]
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !6382
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !6359, metadata !DIExpression()), !dbg !6383
  %cmp1 = icmp eq %struct.expr* %expr.0, null, !dbg !6384
  br i1 %cmp1, label %if.end5.loopexit, label %for.body, !dbg !6385

for.body:                                         ; preds = %for.cond
  %expr2 = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 0, !dbg !6386
  %6 = load %struct.rtx_def*, %struct.rtx_def** %expr2, align 8, !dbg !6386
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !6387
  %call = tail call fastcc i32 @expr_equiv_p(%struct.rtx_def* %6, %struct.rtx_def* %7) #7, !dbg !6388
  %tobool3 = icmp eq i32 %call, 0, !dbg !6388
  br i1 %tobool3, label %for.inc, label %if.end5.loopexit, !dbg !6389

for.inc:                                          ; preds = %for.body
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !6390
  br label %for.cond, !dbg !6391, !llvm.loop !6392

if.end5.loopexit:                                 ; preds = %for.cond, %for.body
  %expr.0.lcssa = phi %struct.expr* [ %expr.0, %for.cond ], [ %expr.0, %for.body ], !dbg !6382
  br label %if.end5, !dbg !6394

if.end5:                                          ; preds = %if.end5.loopexit, %while.body
  %expr.1 = phi %struct.expr* [ null, %while.body ], [ %expr.0.lcssa, %if.end5.loopexit ], !dbg !6396
  call void @llvm.dbg.value(metadata %struct.expr* %expr.1, metadata !6359, metadata !DIExpression()), !dbg !6383
  %tobool6 = icmp eq %struct.expr* %expr.1, null, !dbg !6394
  br i1 %tobool6, label %if.else10, label %if.then7, !dbg !6397

if.then7:                                         ; preds = %if.end5
  %expr8 = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 0, !dbg !6398
  store %struct.expr* %expr.1, %struct.expr** %expr8, align 8, !dbg !6400
  %next = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 5, !dbg !6401
  call void @llvm.dbg.value(metadata %struct.ls_expr** %next, metadata !6356, metadata !DIExpression()), !dbg !6364
  %8 = load %struct.ls_expr*, %struct.ls_expr** %next, align 8, !dbg !6402
  call void @llvm.dbg.value(metadata %struct.ls_expr* %8, metadata !6358, metadata !DIExpression()), !dbg !6364
  br label %if.end13, !dbg !6403

if.else10:                                        ; preds = %if.end5
  %next11 = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 5, !dbg !6404
  %9 = bitcast %struct.ls_expr** %next11 to i64*, !dbg !6404
  %10 = load i64, i64* %9, align 8, !dbg !6404
  %11 = bitcast %struct.ls_expr** %last.0 to i64*, !dbg !6406
  store i64 %10, i64* %11, align 8, !dbg !6406
  %12 = load %struct.htab*, %struct.htab** @pre_ldst_table, align 8, !dbg !6407
  %hash_index12 = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 8, !dbg !6408
  %13 = load i32, i32* %hash_index12, align 8, !dbg !6408
  tail call void @htab_remove_elt_with_hash(%struct.htab* %12, i8* %1, i32 %13) #6, !dbg !6409
  tail call fastcc void @free_ldst_entry(%struct.ls_expr* nonnull %ptr.0) #7, !dbg !6410
  %14 = load %struct.ls_expr*, %struct.ls_expr** %last.0, align 8, !dbg !6411
  call void @llvm.dbg.value(metadata %struct.ls_expr* %14, metadata !6358, metadata !DIExpression()), !dbg !6364
  br label %if.end13

if.end13:                                         ; preds = %if.else10, %if.then7
  %.in = phi %struct.ls_expr* [ %8, %if.then7 ], [ %14, %if.else10 ]
  %ptr.1 = phi %struct.ls_expr* [ %8, %if.then7 ], [ %14, %if.else10 ], !dbg !6412
  %last.1 = phi %struct.ls_expr** [ %next, %if.then7 ], [ %last.0, %if.else10 ], !dbg !6364
  call void @llvm.dbg.value(metadata %struct.ls_expr** %last.1, metadata !6356, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata %struct.ls_expr* %ptr.1, metadata !6358, metadata !DIExpression()), !dbg !6364
  br label %while.cond, !dbg !6366, !llvm.loop !6413

while.end:                                        ; preds = %while.cond
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6415
  %tobool14 = icmp ne %struct._IO_FILE* %15, null, !dbg !6415
  %16 = load %struct.ls_expr*, %struct.ls_expr** @pre_ldst_mems, align 8, !dbg !6417
  %cmp15 = icmp ne %struct.ls_expr* %16, null, !dbg !6418
  %or.cond = and i1 %tobool14, %cmp15, !dbg !6419
  br i1 %or.cond, label %if.then16, label %if.end17, !dbg !6419

if.then16:                                        ; preds = %while.end
  tail call fastcc void @print_ldst_list(%struct._IO_FILE* nonnull %15) #7, !dbg !6420
  br label %if.end17, !dbg !6420

if.end17:                                         ; preds = %if.then16, %while.end
  ret void, !dbg !6421
}

; Function Attrs: nounwind uwtable
define internal fastcc void @alloc_pre_mem(i32 %n_blocks, i32 %n_exprs) unnamed_addr #4 !dbg !6422 {
entry:
  call void @llvm.dbg.value(metadata i32 %n_blocks, metadata !6424, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i32 %n_exprs, metadata !6425, metadata !DIExpression()), !dbg !6426
  %call = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !6427
  store %struct.simple_bitmap_def** %call, %struct.simple_bitmap_def*** @transp, align 8, !dbg !6428
  %call1 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !6429
  store %struct.simple_bitmap_def** %call1, %struct.simple_bitmap_def*** @comp, align 8, !dbg !6430
  %call2 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !6431
  store %struct.simple_bitmap_def** %call2, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !6432
  store %struct.simple_bitmap_def** null, %struct.simple_bitmap_def*** @pre_insert_map, align 8, !dbg !6433
  store %struct.simple_bitmap_def** null, %struct.simple_bitmap_def*** @pre_delete_map, align 8, !dbg !6434
  %call3 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !6435
  store %struct.simple_bitmap_def** %call3, %struct.simple_bitmap_def*** @ae_kill, align 8, !dbg !6436
  ret void, !dbg !6437
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_pre_data() unnamed_addr #4 !dbg !6438 {
entry:
  %e14 = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transp, align 8, !dbg !6452
  %1 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @comp, align 8, !dbg !6453
  %2 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !6454
  tail call fastcc void @compute_local_properties(%struct.simple_bitmap_def** %0, %struct.simple_bitmap_def** %1, %struct.simple_bitmap_def** %2, %struct.hash_table_d* nonnull @expr_hash_table) #7, !dbg !6455
  %3 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ae_kill, align 8, !dbg !6456
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6457
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !6457
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6457
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 5, !dbg !6457
  %6 = load i32, i32* %x_last_basic_block, align 8, !dbg !6457
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %3, i32 %6) #6, !dbg !6458
  %7 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 2), align 4, !dbg !6459
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %7) #6, !dbg !6460
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !6440, metadata !DIExpression()), !dbg !6461
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !6462
  call void @llvm.dbg.value(metadata i32 0, metadata !6442, metadata !DIExpression()), !dbg !6461
  br label %for.cond, !dbg !6463

for.cond:                                         ; preds = %for.inc5, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc5 ], [ 0, %entry ], !dbg !6464
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6442, metadata !DIExpression()), !dbg !6461
  %8 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 1), align 8, !dbg !6465
  %9 = zext i32 %8 to i64, !dbg !6466
  %cmp = icmp ult i64 %indvars.iv, %9, !dbg !6466
  br i1 %cmp, label %for.body, label %for.end6, !dbg !6467

for.body:                                         ; preds = %for.cond
  %10 = load %struct.expr**, %struct.expr*** getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 0), align 8, !dbg !6468
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %10, i64 %indvars.iv, !dbg !6470
  br label %for.cond1, !dbg !6471

for.cond1:                                        ; preds = %for.inc, %for.body
  %e.0.in = phi %struct.expr** [ %arrayidx, %for.body ], [ %next_same_hash, %for.inc ]
  %e.0 = load %struct.expr*, %struct.expr** %e.0.in, align 8, !dbg !6472
  call void @llvm.dbg.value(metadata %struct.expr* %e.0, metadata !6443, metadata !DIExpression()), !dbg !6473
  %cmp2 = icmp eq %struct.expr* %e.0, null, !dbg !6474
  br i1 %cmp2, label %for.inc5, label %for.body3, !dbg !6476

for.body3:                                        ; preds = %for.cond1
  %expr = getelementptr inbounds %struct.expr, %struct.expr* %e.0, i64 0, i32 0, !dbg !6477
  %11 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !6477
  %call4 = tail call i32 @may_trap_p(%struct.rtx_def* %11) #6, !dbg !6479
  %tobool = icmp eq i32 %call4, 0, !dbg !6479
  br i1 %tobool, label %for.inc, label %if.then, !dbg !6480

if.then:                                          ; preds = %for.body3
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %e.0, i64 0, i32 1, !dbg !6481
  %12 = load i32, i32* %bitmap_index, align 8, !dbg !6481
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call, i32 %12) #7, !dbg !6482
  br label %for.inc, !dbg !6482

for.inc:                                          ; preds = %for.body3, %if.then
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %e.0, i64 0, i32 2, !dbg !6483
  br label %for.cond1, !dbg !6484, !llvm.loop !6485

for.inc5:                                         ; preds = %for.cond1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6487
  br label %for.cond, !dbg !6488, !llvm.loop !6489

for.end6:                                         ; preds = %for.cond
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6491
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !6491
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !6491
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 0, !dbg !6491
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6491
  %16 = bitcast %struct.edge_def** %e14 to i8*, !dbg !6492
  %17 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6492
  %18 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6493
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6493
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6493
  %21 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6495
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6495
  br label %for.cond9, !dbg !6491

for.cond9:                                        ; preds = %for.end35, %for.end6
  %23 = phi %struct.control_flow_graph* [ %14, %for.end6 ], [ %.pre1, %for.end35 ], !dbg !6497
  %.pn = phi %struct.basic_block_def* [ %15, %for.end6 ], [ %bb.0, %for.end35 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !6498
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !6498
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6441, metadata !DIExpression()), !dbg !6461
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i64 0, i32 1, !dbg !6497
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6497
  %cmp12 = icmp eq %struct.basic_block_def* %bb.0, %24, !dbg !6497
  br i1 %cmp12, label %for.end53, label %for.body13, !dbg !6491

for.body13:                                       ; preds = %for.cond9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8, !dbg !6499
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8, !dbg !6500
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8, !dbg !6501
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 0, !dbg !6501
  %call15 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6501
  %25 = extractvalue { i32, %struct.VEC_edge_gc** } %call15, 0, !dbg !6501
  store i32 %25, i32* %19, align 8, !dbg !6501
  %26 = extractvalue { i32, %struct.VEC_edge_gc** } %call15, 1, !dbg !6501
  store %struct.VEC_edge_gc** %26, %struct.VEC_edge_gc*** %20, align 8, !dbg !6501
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %18, i64 16, i1 false), !dbg !6501
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8, !dbg !6501
  br label %for.cond16, !dbg !6501

for.cond16:                                       ; preds = %for.inc34, %for.body13
  %27 = load i32, i32* %21, align 8, !dbg !6502
  %28 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %22, align 8, !dbg !6502
  call void @llvm.dbg.value(metadata %struct.edge_def** %e14, metadata !6447, metadata !DIExpression(DW_OP_deref)), !dbg !6492
  %call17 = call fastcc zeroext i8 @ei_cond(i32 %27, %struct.VEC_edge_gc** %28, %struct.edge_def** nonnull %e14) #7, !dbg !6502
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6501
  br i1 %tobool18, label %for.end35.loopexit, label %for.body19, !dbg !6501

for.body19:                                       ; preds = %for.cond16
  %29 = load %struct.edge_def*, %struct.edge_def** %e14, align 8, !dbg !6503
  call void @llvm.dbg.value(metadata %struct.edge_def* %29, metadata !6447, metadata !DIExpression()), !dbg !6492
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %29, i64 0, i32 7, !dbg !6505
  %30 = load i32, i32* %flags, align 8, !dbg !6505
  %and = and i32 %30, 2, !dbg !6506
  %tobool20 = icmp eq i32 %and, 0, !dbg !6506
  br i1 %tobool20, label %for.inc34, label %if.then21, !dbg !6507

if.then21:                                        ; preds = %for.body19
  %31 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !6508
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !6510
  %32 = load i32, i32* %index, align 8, !dbg !6510
  %idxprom22 = sext i32 %32 to i64, !dbg !6508
  %arrayidx23 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %31, i64 %idxprom22, !dbg !6508
  %33 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx23, align 8, !dbg !6508
  call void @sbitmap_difference(%struct.simple_bitmap_def* %33, %struct.simple_bitmap_def* %33, %struct.simple_bitmap_def* %call) #6, !dbg !6511
  %34 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transp, align 8, !dbg !6512
  %35 = load i32, i32* %index, align 8, !dbg !6513
  %idxprom28 = sext i32 %35 to i64, !dbg !6512
  %arrayidx29 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %34, i64 %idxprom28, !dbg !6512
  %36 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx29, align 8, !dbg !6512
  call void @sbitmap_difference(%struct.simple_bitmap_def* %36, %struct.simple_bitmap_def* %36, %struct.simple_bitmap_def* %call) #6, !dbg !6514
  br label %for.end35, !dbg !6515

for.inc34:                                        ; preds = %for.body19
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6451, metadata !DIExpression(DW_OP_deref)), !dbg !6492
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6502
  br label %for.cond16, !dbg !6502, !llvm.loop !6516

for.end35.loopexit:                               ; preds = %for.cond16
  br label %for.end35, !dbg !6518

for.end35:                                        ; preds = %for.end35.loopexit, %if.then21
  %37 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ae_kill, align 8, !dbg !6518
  %index36 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !6519
  %38 = load i32, i32* %index36, align 8, !dbg !6519
  %idxprom37 = sext i32 %38 to i64, !dbg !6518
  %arrayidx38 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %37, i64 %idxprom37, !dbg !6518
  %39 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx38, align 8, !dbg !6518
  %40 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transp, align 8, !dbg !6520
  %arrayidx41 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %40, i64 %idxprom37, !dbg !6520
  %41 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx41, align 8, !dbg !6520
  %42 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @comp, align 8, !dbg !6521
  %arrayidx44 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %42, i64 %idxprom37, !dbg !6521
  %43 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx44, align 8, !dbg !6521
  call void @sbitmap_a_or_b(%struct.simple_bitmap_def* %39, %struct.simple_bitmap_def* %41, %struct.simple_bitmap_def* %43) #6, !dbg !6522
  %44 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ae_kill, align 8, !dbg !6523
  %45 = load i32, i32* %index36, align 8, !dbg !6524
  %idxprom46 = sext i32 %45 to i64, !dbg !6523
  %arrayidx47 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %44, i64 %idxprom46, !dbg !6523
  %46 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx47, align 8, !dbg !6523
  call void @sbitmap_not(%struct.simple_bitmap_def* %46, %struct.simple_bitmap_def* %46) #6, !dbg !6525
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8, !dbg !6526
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8, !dbg !6526
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6497
  %cfg11.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !6527
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11.phi.trans.insert, align 8, !dbg !6497
  br label %for.cond9, !dbg !6497, !llvm.loop !6528

for.end53:                                        ; preds = %for.cond9
  %47 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 2), align 4, !dbg !6530
  %48 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transp, align 8, !dbg !6531
  %49 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @comp, align 8, !dbg !6532
  %50 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !6533
  %51 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @ae_kill, align 8, !dbg !6534
  %call54 = call %struct.edge_list* @pre_edge_lcm(i32 %47, %struct.simple_bitmap_def** %48, %struct.simple_bitmap_def** %49, %struct.simple_bitmap_def** %50, %struct.simple_bitmap_def** %51, %struct.simple_bitmap_def*** nonnull @pre_insert_map, %struct.simple_bitmap_def*** nonnull @pre_delete_map) #6, !dbg !6535
  store %struct.edge_list* %call54, %struct.edge_list** @edge_list, align 8, !dbg !6536
  %52 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @antloc to i8**), align 8, !dbg !6537
  call void @free(i8* %52) #6, !dbg !6537
  store %struct.simple_bitmap_def** null, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !6538
  %53 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @ae_kill to i8**), align 8, !dbg !6539
  call void @free(i8* %53) #6, !dbg !6539
  store %struct.simple_bitmap_def** null, %struct.simple_bitmap_def*** @ae_kill, align 8, !dbg !6540
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !6541
  %54 = load i8*, i8** %popcount, align 8, !dbg !6541
  call void @free(i8* %54) #6, !dbg !6541
  %55 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !6541
  call void @free(i8* %55) #6, !dbg !6541
  ret void, !dbg !6542
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @pre_gcse() unnamed_addr #4 !dbg !6543 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 2), align 4, !dbg !6550
  %conv = zext i32 %0 to i64, !dbg !6550
  %call = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !6550
  %1 = bitcast i8* %call to %struct.expr**, !dbg !6550
  call void @llvm.dbg.value(metadata %struct.expr** %1, metadata !6548, metadata !DIExpression()), !dbg !6551
  call void @llvm.dbg.value(metadata i32 0, metadata !6545, metadata !DIExpression()), !dbg !6551
  br label %for.cond, !dbg !6552

for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc8 ], [ 0, %entry ], !dbg !6554
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6545, metadata !DIExpression()), !dbg !6551
  %2 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 1), align 8, !dbg !6555
  %3 = zext i32 %2 to i64, !dbg !6557
  %cmp = icmp ult i64 %indvars.iv, %3, !dbg !6557
  br i1 %cmp, label %for.body, label %for.end9, !dbg !6558

for.body:                                         ; preds = %for.cond
  %4 = load %struct.expr**, %struct.expr*** getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 0), align 8, !dbg !6559
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %4, i64 %indvars.iv, !dbg !6561
  br label %for.cond2, !dbg !6562

for.cond2:                                        ; preds = %for.body5, %for.body
  %expr.0.in = phi %struct.expr** [ %arrayidx, %for.body ], [ %next_same_hash, %for.body5 ]
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !6563
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !6549, metadata !DIExpression()), !dbg !6551
  %cmp3 = icmp eq %struct.expr* %expr.0, null, !dbg !6564
  br i1 %cmp3, label %for.inc8, label %for.body5, !dbg !6566

for.body5:                                        ; preds = %for.cond2
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 1, !dbg !6567
  %5 = load i32, i32* %bitmap_index, align 8, !dbg !6567
  %idxprom6 = sext i32 %5 to i64, !dbg !6568
  %arrayidx7 = getelementptr inbounds %struct.expr*, %struct.expr** %1, i64 %idxprom6, !dbg !6568
  store %struct.expr* %expr.0, %struct.expr** %arrayidx7, align 8, !dbg !6569
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !6570
  br label %for.cond2, !dbg !6571, !llvm.loop !6572

for.inc8:                                         ; preds = %for.cond2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6574
  br label %for.cond, !dbg !6575, !llvm.loop !6576

for.end9:                                         ; preds = %for.cond
  %call10 = tail call fastcc i32 @pre_delete() #7, !dbg !6578
  call void @llvm.dbg.value(metadata i32 %call10, metadata !6547, metadata !DIExpression()), !dbg !6551
  %6 = load %struct.edge_list*, %struct.edge_list** @edge_list, align 8, !dbg !6579
  %call11 = tail call fastcc i32 @pre_edge_insert(%struct.edge_list* %6, %struct.expr** %1) #7, !dbg !6580
  call void @llvm.dbg.value(metadata i32 %call11, metadata !6546, metadata !DIExpression()), !dbg !6551
  tail call fastcc void @pre_insert_copies() #7, !dbg !6581
  %tobool = icmp eq i32 %call11, 0, !dbg !6582
  br i1 %tobool, label %if.end, label %if.then, !dbg !6584

if.then:                                          ; preds = %for.end9
  tail call void @commit_edge_insertions() #6, !dbg !6585
  call void @llvm.dbg.value(metadata i32 1, metadata !6547, metadata !DIExpression()), !dbg !6551
  br label %if.end, !dbg !6587

if.end:                                           ; preds = %for.end9, %if.then
  %changed.0 = phi i32 [ 1, %if.then ], [ %call10, %for.end9 ], !dbg !6551
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !6547, metadata !DIExpression()), !dbg !6551
  tail call void @free(i8* %call) #6, !dbg !6588
  ret i32 %changed.0, !dbg !6589
}

declare dso_local void @free_edge_list(%struct.edge_list*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @free_pre_mem() unnamed_addr #4 !dbg !6590 {
entry:
  %0 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @transp to i8**), align 8, !dbg !6591
  tail call void @free(i8* %0) #6, !dbg !6591
  %1 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @comp to i8**), align 8, !dbg !6592
  tail call void @free(i8* %1) #6, !dbg !6592
  %2 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pre_insert_map, align 8, !dbg !6593
  %tobool4 = icmp eq %struct.simple_bitmap_def** %2, null, !dbg !6593
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6595

if.then5:                                         ; preds = %entry
  %3 = bitcast %struct.simple_bitmap_def** %2 to i8*, !dbg !6595
  tail call void @free(i8* nonnull %3) #6, !dbg !6596
  br label %if.end6, !dbg !6596

if.end6:                                          ; preds = %entry, %if.then5
  %4 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pre_delete_map, align 8, !dbg !6597
  %tobool7 = icmp eq %struct.simple_bitmap_def** %4, null, !dbg !6597
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6599

if.then8:                                         ; preds = %if.end6
  %5 = bitcast %struct.simple_bitmap_def** %4 to i8*, !dbg !6599
  tail call void @free(i8* nonnull %5) #6, !dbg !6600
  br label %if.end9, !dbg !6600

if.end9:                                          ; preds = %if.end6, %if.then8
  store %struct.simple_bitmap_def** null, %struct.simple_bitmap_def*** @comp, align 8, !dbg !6601
  store %struct.simple_bitmap_def** null, %struct.simple_bitmap_def*** @transp, align 8, !dbg !6602
  store %struct.simple_bitmap_def** null, %struct.simple_bitmap_def*** @pre_delete_map, align 8, !dbg !6603
  store %struct.simple_bitmap_def** null, %struct.simple_bitmap_def*** @pre_insert_map, align 8, !dbg !6604
  ret void, !dbg !6605
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_ldst_mems() unnamed_addr #4 !dbg !6606 {
entry:
  %0 = load %struct.htab*, %struct.htab** @pre_ldst_table, align 8, !dbg !6610
  %tobool = icmp eq %struct.htab* %0, null, !dbg !6610
  br i1 %tobool, label %if.end, label %if.then, !dbg !6612

if.then:                                          ; preds = %entry
  tail call void @htab_delete(%struct.htab* nonnull %0) #6, !dbg !6613
  br label %if.end, !dbg !6613

if.end:                                           ; preds = %entry, %if.then
  store %struct.htab* null, %struct.htab** @pre_ldst_table, align 8, !dbg !6614
  br label %while.cond, !dbg !6615

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load %struct.ls_expr*, %struct.ls_expr** @pre_ldst_mems, align 8, !dbg !6616
  %tobool1 = icmp eq %struct.ls_expr* %1, null, !dbg !6615
  br i1 %tobool1, label %while.end, label %while.body, !dbg !6615

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.ls_expr* %1, metadata !6608, metadata !DIExpression()), !dbg !6617
  %next = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %1, i64 0, i32 5, !dbg !6618
  %2 = bitcast %struct.ls_expr** %next to i64*, !dbg !6618
  %3 = load i64, i64* %2, align 8, !dbg !6618
  store i64 %3, i64* bitcast (%struct.ls_expr** @pre_ldst_mems to i64*), align 8, !dbg !6619
  tail call fastcc void @free_ldst_entry(%struct.ls_expr* nonnull %1) #7, !dbg !6620
  br label %while.cond, !dbg !6615, !llvm.loop !6621

while.end:                                        ; preds = %while.cond
  store %struct.ls_expr* null, %struct.ls_expr** @pre_ldst_mems, align 8, !dbg !6623
  ret void, !dbg !6624
}

declare dso_local void @remove_fake_exit_edges() local_unnamed_addr #1

declare dso_local void @end_alias_analysis() local_unnamed_addr #1

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @pre_ldst_expr_hash(i8* %p) #4 !dbg !6625 {
entry:
  %do_not_record_p = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %p, metadata !6627, metadata !DIExpression()), !dbg !6631
  %0 = bitcast i32* %do_not_record_p to i8*, !dbg !6632
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6632
  call void @llvm.dbg.value(metadata i32 0, metadata !6628, metadata !DIExpression()), !dbg !6631
  store i32 0, i32* %do_not_record_p, align 4, !dbg !6633
  call void @llvm.dbg.value(metadata i8* %p, metadata !6629, metadata !DIExpression()), !dbg !6631
  %pattern = getelementptr inbounds i8, i8* %p, i64 8, !dbg !6634
  %1 = bitcast i8* %pattern to %struct.rtx_def**, !dbg !6634
  %2 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8, !dbg !6634
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !6635
  %bf.load = load i32, i32* %.cast, align 8, !dbg !6635
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6635
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6635
  call void @llvm.dbg.value(metadata i32* %do_not_record_p, metadata !6628, metadata !DIExpression(DW_OP_deref)), !dbg !6631
  %call = call i32 @hash_rtx(%struct.rtx_def* %2, i32 %bf.clear, i32* nonnull %do_not_record_p, i32* null, i8 zeroext 0) #6, !dbg !6636
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6637
  ret i32 %call, !dbg !6638
}

; Function Attrs: nounwind uwtable
define internal i32 @pre_ldst_expr_eq(i8* %p1, i8* %p2) #4 !dbg !6639 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !6641, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i8* %p2, metadata !6642, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i8* %p1, metadata !6643, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i8* %p2, metadata !6644, metadata !DIExpression()), !dbg !6645
  %pattern = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !6646
  %0 = bitcast i8* %pattern to %struct.rtx_def**, !dbg !6646
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !6646
  %pattern1 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !6647
  %2 = bitcast i8* %pattern1 to %struct.rtx_def**, !dbg !6647
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !6647
  %call = tail call fastcc i32 @expr_equiv_p(%struct.rtx_def* %1, %struct.rtx_def* %3) #7, !dbg !6648
  ret i32 %call, !dbg !6649
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @simple_mem(%struct.rtx_def* %x) unnamed_addr #4 !dbg !6650 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6654, metadata !DIExpression()), !dbg !6655
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6656
  %bf.load = load i32, i32* %0, align 8, !dbg !6656
  %bf.clear = and i32 %bf.load, 65535, !dbg !6656
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !6656
  br i1 %cmp, label %if.end, label %return, !dbg !6658

if.end:                                           ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 134217728, !dbg !6659
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !6659
  br i1 %tobool, label %if.end4, label %return, !dbg !6661

if.end4:                                          ; preds = %if.end
  %bf.clear7 = and i32 %bf.load, 16711680, !dbg !6662
  %cmp8 = icmp eq i32 %bf.clear7, 65536, !dbg !6664
  br i1 %cmp8, label %return, label %if.end10, !dbg !6665

if.end10:                                         ; preds = %if.end4
  %1 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !6666
  %tobool11 = icmp eq i32 %1, 0, !dbg !6666
  br i1 %tobool11, label %if.end14, label %land.lhs.true, !dbg !6668

land.lhs.true:                                    ; preds = %if.end10
  %call = tail call i32 @may_trap_p(%struct.rtx_def* %x) #6, !dbg !6669
  %tobool12 = icmp eq i32 %call, 0, !dbg !6669
  br i1 %tobool12, label %if.end14, label %return, !dbg !6670

if.end14:                                         ; preds = %land.lhs.true, %if.end10
  %call15 = tail call i32 @side_effects_p(%struct.rtx_def* %x) #6, !dbg !6671
  %tobool16 = icmp eq i32 %call15, 0, !dbg !6671
  br i1 %tobool16, label %if.end18, label %return, !dbg !6673

if.end18:                                         ; preds = %if.end14
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !6674
  %call19 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %2, %struct.rtx_def* %x) #6, !dbg !6676
  %tobool20 = icmp eq i32 %call19, 0, !dbg !6676
  br i1 %tobool20, label %if.end22, label %return, !dbg !6677

if.end22:                                         ; preds = %if.end18
  %3 = load i32, i32* @flag_float_store, align 4, !dbg !6678
  %tobool23 = icmp eq i32 %3, 0, !dbg !6678
  br i1 %tobool23, label %if.end57, label %land.lhs.true24, !dbg !6680

land.lhs.true24:                                  ; preds = %if.end22
  %bf.load25 = load i32, i32* %0, align 8, !dbg !6681
  %bf.lshr26 = lshr i32 %bf.load25, 16, !dbg !6681
  %bf.clear27 = and i32 %bf.lshr26, 255, !dbg !6681
  %idxprom = zext i32 %bf.clear27 to i64, !dbg !6681
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6681
  %4 = load i8, i8* %arrayidx, align 1, !dbg !6681
  %cmp28 = icmp eq i8 %4, 8, !dbg !6681
  br i1 %cmp28, label %return, label %lor.lhs.false, !dbg !6681

lor.lhs.false:                                    ; preds = %land.lhs.true24
  %cmp36 = icmp eq i8 %4, 9, !dbg !6681
  br i1 %cmp36, label %return, label %lor.lhs.false38, !dbg !6681

lor.lhs.false38:                                  ; preds = %lor.lhs.false
  %cmp45 = icmp eq i8 %4, 11, !dbg !6681
  br i1 %cmp45, label %return, label %lor.lhs.false47, !dbg !6681

lor.lhs.false47:                                  ; preds = %lor.lhs.false38
  %cmp54 = icmp eq i8 %4, 17, !dbg !6681
  br i1 %cmp54, label %return, label %if.end57, !dbg !6682

if.end57:                                         ; preds = %if.end22, %lor.lhs.false47
  br label %return, !dbg !6683

return:                                           ; preds = %land.lhs.true, %if.end18, %if.end14, %if.end, %land.lhs.true24, %lor.lhs.false, %lor.lhs.false38, %lor.lhs.false47, %if.end4, %entry, %if.end57
  %retval.0 = phi i32 [ 1, %if.end57 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %land.lhs.true ], [ 0, %if.end14 ], [ 0, %if.end18 ], [ 0, %lor.lhs.false47 ], [ 0, %lor.lhs.false38 ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true24 ], !dbg !6655
  ret i32 %retval.0, !dbg !6684
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ls_expr* @ldst_entry(%struct.rtx_def* %x) unnamed_addr #4 !dbg !6685 {
entry:
  %do_not_record_p = alloca i32, align 4
  %e = alloca %struct.ls_expr, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6687, metadata !DIExpression()), !dbg !6693
  %0 = bitcast i32* %do_not_record_p to i8*, !dbg !6694
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6694
  call void @llvm.dbg.value(metadata i32 0, metadata !6688, metadata !DIExpression()), !dbg !6693
  store i32 0, i32* %do_not_record_p, align 4, !dbg !6695
  %1 = bitcast %struct.ls_expr* %e to i8*, !dbg !6696
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1) #8, !dbg !6696
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6697
  %bf.load = load i32, i32* %2, align 8, !dbg !6697
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6697
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6697
  call void @llvm.dbg.value(metadata i32* %do_not_record_p, metadata !6688, metadata !DIExpression(DW_OP_deref)), !dbg !6693
  %call = call i32 @hash_rtx(%struct.rtx_def* %x, i32 %bf.clear, i32* nonnull %do_not_record_p, i32* null, i8 zeroext 0) #6, !dbg !6698
  call void @llvm.dbg.value(metadata i32 %call, metadata !6690, metadata !DIExpression()), !dbg !6693
  %pattern = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %e, i64 0, i32 1, !dbg !6699
  store %struct.rtx_def* %x, %struct.rtx_def** %pattern, align 8, !dbg !6700
  %3 = load %struct.htab*, %struct.htab** @pre_ldst_table, align 8, !dbg !6701
  %call1 = call i8** @htab_find_slot_with_hash(%struct.htab* %3, i8* nonnull %1, i32 %call, i32 1) #6, !dbg !6702
  call void @llvm.dbg.value(metadata i8** %call1, metadata !6691, metadata !DIExpression()), !dbg !6693
  %4 = load i8*, i8** %call1, align 8, !dbg !6703
  %tobool = icmp eq i8* %4, null, !dbg !6703
  br i1 %tobool, label %if.end, label %if.then, !dbg !6705

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !6706

if.end:                                           ; preds = %entry
  %call2 = call i8* @xmalloc(i64 72) #6, !dbg !6707
  call void @llvm.dbg.value(metadata i8* %call2, metadata !6689, metadata !DIExpression()), !dbg !6693
  %5 = load i64, i64* bitcast (%struct.ls_expr** @pre_ldst_mems to i64*), align 8, !dbg !6708
  %next = getelementptr inbounds i8, i8* %call2, i64 40, !dbg !6709
  %6 = bitcast i8* %next to i64*, !dbg !6710
  store i64 %5, i64* %6, align 8, !dbg !6710
  %expr = bitcast i8* %call2 to %struct.expr**, !dbg !6711
  store %struct.expr* null, %struct.expr** %expr, align 8, !dbg !6712
  %pattern3 = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !6713
  %7 = bitcast i8* %pattern3 to %struct.rtx_def**, !dbg !6713
  store %struct.rtx_def* %x, %struct.rtx_def** %7, align 8, !dbg !6714
  %pattern_regs = getelementptr inbounds i8, i8* %call2, i64 16, !dbg !6715
  %8 = bitcast i8* %pattern_regs to %struct.rtx_def**, !dbg !6715
  store %struct.rtx_def* null, %struct.rtx_def** %8, align 8, !dbg !6716
  %loads = getelementptr inbounds i8, i8* %call2, i64 24, !dbg !6717
  %9 = bitcast i8* %loads to %struct.rtx_def**, !dbg !6717
  store %struct.rtx_def* null, %struct.rtx_def** %9, align 8, !dbg !6718
  %stores = getelementptr inbounds i8, i8* %call2, i64 32, !dbg !6719
  %10 = bitcast i8* %stores to %struct.rtx_def**, !dbg !6719
  store %struct.rtx_def* null, %struct.rtx_def** %10, align 8, !dbg !6720
  %reaching_reg = getelementptr inbounds i8, i8* %call2, i64 64, !dbg !6721
  %11 = bitcast i8* %reaching_reg to %struct.rtx_def**, !dbg !6721
  store %struct.rtx_def* null, %struct.rtx_def** %11, align 8, !dbg !6722
  %invalid = getelementptr inbounds i8, i8* %call2, i64 48, !dbg !6723
  %12 = bitcast i8* %invalid to i32*, !dbg !6723
  store i32 0, i32* %12, align 8, !dbg !6724
  %index = getelementptr inbounds i8, i8* %call2, i64 52, !dbg !6725
  %13 = bitcast i8* %index to i32*, !dbg !6725
  store i32 0, i32* %13, align 4, !dbg !6726
  %hash_index = getelementptr inbounds i8, i8* %call2, i64 56, !dbg !6727
  %14 = bitcast i8* %hash_index to i32*, !dbg !6727
  store i32 %call, i32* %14, align 8, !dbg !6728
  store i8* %call2, i8** bitcast (%struct.ls_expr** @pre_ldst_mems to i8**), align 8, !dbg !6729
  store i8* %call2, i8** %call1, align 8, !dbg !6730
  br label %cleanup, !dbg !6731

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0.in = phi i8* [ %4, %if.then ], [ %call2, %if.end ]
  %retval.0 = bitcast i8* %retval.0.in to %struct.ls_expr*, !dbg !6693
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1) #8, !dbg !6732
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6732
  ret %struct.ls_expr* %retval.0, !dbg !6732
}

; Function Attrs: nounwind uwtable
define internal fastcc void @invalidate_any_buried_refs(%struct.rtx_def* %x) unnamed_addr #4 !dbg !6733 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6735, metadata !DIExpression()), !dbg !6740
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6741
  %bf.load = load i32, i32* %0, align 8, !dbg !6741
  %bf.clear = and i32 %bf.load, 65535, !dbg !6741
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !6741
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6743

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @simple_mem(%struct.rtx_def* %x) #7, !dbg !6744
  %tobool = icmp eq i32 %call, 0, !dbg !6744
  br i1 %tobool, label %if.end, label %if.then, !dbg !6745

if.then:                                          ; preds = %land.lhs.true
  %call1 = tail call fastcc %struct.ls_expr* @ldst_entry(%struct.rtx_def* %x) #7, !dbg !6746
  call void @llvm.dbg.value(metadata %struct.ls_expr* %call1, metadata !6739, metadata !DIExpression()), !dbg !6740
  %invalid = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %call1, i64 0, i32 6, !dbg !6748
  store i32 1, i32* %invalid, align 8, !dbg !6749
  br label %if.end, !dbg !6750

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  %bf.load2 = load i32, i32* %0, align 8, !dbg !6751
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !6751
  %idxprom = zext i32 %bf.clear3 to i64, !dbg !6751
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !6751
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !6751
  call void @llvm.dbg.value(metadata i8* %1, metadata !6736, metadata !DIExpression()), !dbg !6740
  %arrayidx7 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !6752
  %2 = load i8, i8* %arrayidx7, align 1, !dbg !6752
  call void @llvm.dbg.value(metadata i8 %2, metadata !6737, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6740
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !6754
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !6754
  %3 = zext i8 %2 to i64, !dbg !6760
  br label %for.cond, !dbg !6760

for.cond:                                         ; preds = %for.inc42, %if.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc42 ], [ %3, %if.end ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !6761
  call void @llvm.dbg.value(metadata i32 undef, metadata !6737, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6740
  %cmp8 = icmp sgt i64 %indvars.iv1, 0, !dbg !6762
  br i1 %cmp8, label %for.body, label %for.end44, !dbg !6763

for.body:                                         ; preds = %for.cond
  %arrayidx11 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv.next2, !dbg !6764
  %4 = load i8, i8* %arrayidx11, align 1, !dbg !6764
  %cmp13 = icmp eq i8 %4, 101, !dbg !6765
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !6766

if.then15:                                        ; preds = %for.body
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 %indvars.iv.next2, !dbg !6767
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !6767
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6767
  tail call fastcc void @invalidate_any_buried_refs(%struct.rtx_def* %5) #7, !dbg !6768
  br label %for.inc42, !dbg !6768

if.else:                                          ; preds = %for.body
  %cmp21 = icmp eq i8 %4, 69, !dbg !6769
  br i1 %cmp21, label %if.then23, label %for.inc42, !dbg !6770

if.then23:                                        ; preds = %if.else
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 %indvars.iv.next2, !dbg !6771
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtvec_def**, !dbg !6771
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6771
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !6771
  %7 = load i32, i32* %num_elem, align 8, !dbg !6771
  call void @llvm.dbg.value(metadata i32 %7, metadata !6738, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6740
  %8 = sext i32 %7 to i64, !dbg !6772
  br label %for.cond29, !dbg !6772

for.cond29:                                       ; preds = %for.body32, %if.then23
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body32 ], [ %8, %if.then23 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6754
  call void @llvm.dbg.value(metadata i32 undef, metadata !6738, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6740
  %cmp30 = icmp sgt i64 %indvars.iv, 0, !dbg !6773
  br i1 %cmp30, label %for.body32, label %for.inc42.loopexit, !dbg !6775

for.body32:                                       ; preds = %for.cond29
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6776
  %arrayidx39 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6776
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8, !dbg !6776
  tail call fastcc void @invalidate_any_buried_refs(%struct.rtx_def* %10) #7, !dbg !6777
  call void @llvm.dbg.value(metadata i32 undef, metadata !6738, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6740
  br label %for.cond29, !dbg !6778, !llvm.loop !6779

for.inc42.loopexit:                               ; preds = %for.cond29
  br label %for.inc42, !dbg !6781

for.inc42:                                        ; preds = %for.inc42.loopexit, %if.then15, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !6737, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6740
  br label %for.cond, !dbg !6781, !llvm.loop !6782

for.end44:                                        ; preds = %for.cond
  ret void, !dbg !6784
}

declare dso_local i32 @may_trap_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @side_effects_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #1

declare dso_local void @htab_remove_elt_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @free_ldst_entry(%struct.ls_expr* %ptr) unnamed_addr #4 !dbg !6785 {
entry:
  call void @llvm.dbg.value(metadata %struct.ls_expr* %ptr, metadata !6789, metadata !DIExpression()), !dbg !6790
  %loads = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr, i64 0, i32 3, !dbg !6791
  tail call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %loads) #6, !dbg !6792
  %stores = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr, i64 0, i32 4, !dbg !6793
  tail call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %stores) #6, !dbg !6794
  %0 = bitcast %struct.ls_expr* %ptr to i8*, !dbg !6795
  tail call void @free(i8* %0) #6, !dbg !6796
  ret void, !dbg !6797
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_ldst_list(%struct._IO_FILE* %file) unnamed_addr #4 !dbg !6798 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !6802, metadata !DIExpression()), !dbg !6804
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6805
  %call1 = tail call fastcc %struct.ls_expr* @first_ls_expr() #7, !dbg !6806
  call void @llvm.dbg.value(metadata %struct.ls_expr* %call1, metadata !6803, metadata !DIExpression()), !dbg !6804
  br label %for.cond, !dbg !6808

for.cond:                                         ; preds = %if.end12, %entry
  %ptr.0 = phi %struct.ls_expr* [ %call1, %entry ], [ %call14, %if.end12 ], !dbg !6809
  call void @llvm.dbg.value(metadata %struct.ls_expr* %ptr.0, metadata !6803, metadata !DIExpression()), !dbg !6804
  %cmp = icmp eq %struct.ls_expr* %ptr.0, null, !dbg !6810
  br i1 %cmp, label %for.end, label %for.body, !dbg !6812

for.body:                                         ; preds = %for.cond
  %index = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 7, !dbg !6813
  %0 = load i32, i32* %index, align 4, !dbg !6813
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i32 %0) #6, !dbg !6815
  %pattern = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 1, !dbg !6816
  %1 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !6816
  tail call void @print_rtl(%struct._IO_FILE* %file, %struct.rtx_def* %1) #6, !dbg !6817
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !6818
  %loads = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 3, !dbg !6819
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loads, align 8, !dbg !6819
  %tobool = icmp eq %struct.rtx_def* %2, null, !dbg !6821
  br i1 %tobool, label %if.else, label %if.then, !dbg !6822

if.then:                                          ; preds = %for.body
  tail call void @print_rtl(%struct._IO_FILE* %file, %struct.rtx_def* nonnull %2) #6, !dbg !6823
  br label %if.end, !dbg !6823

if.else:                                          ; preds = %for.body
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !6824
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !6825
  %stores = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr.0, i64 0, i32 4, !dbg !6826
  %3 = load %struct.rtx_def*, %struct.rtx_def** %stores, align 8, !dbg !6826
  %tobool7 = icmp eq %struct.rtx_def* %3, null, !dbg !6828
  br i1 %tobool7, label %if.else10, label %if.then8, !dbg !6829

if.then8:                                         ; preds = %if.end
  tail call void @print_rtl(%struct._IO_FILE* %file, %struct.rtx_def* nonnull %3) #6, !dbg !6830
  br label %if.end12, !dbg !6830

if.else10:                                        ; preds = %if.end
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !6831
  br label %if.end12

if.end12:                                         ; preds = %if.else10, %if.then8
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !6832
  %call14 = tail call fastcc %struct.ls_expr* @next_ls_expr(%struct.ls_expr* nonnull %ptr.0) #7, !dbg !6833
  call void @llvm.dbg.value(metadata %struct.ls_expr* %call14, metadata !6803, metadata !DIExpression()), !dbg !6804
  br label %for.cond, !dbg !6834, !llvm.loop !6835

for.end:                                          ; preds = %for.cond
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !6837
  ret void, !dbg !6838
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ls_expr* @first_ls_expr() unnamed_addr #0 !dbg !6839 {
entry:
  %0 = load %struct.ls_expr*, %struct.ls_expr** @pre_ldst_mems, align 8, !dbg !6842
  ret %struct.ls_expr* %0, !dbg !6843
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ls_expr* @next_ls_expr(%struct.ls_expr* %ptr) unnamed_addr #0 !dbg !6844 {
entry:
  call void @llvm.dbg.value(metadata %struct.ls_expr* %ptr, metadata !6848, metadata !DIExpression()), !dbg !6849
  %next = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %ptr, i64 0, i32 5, !dbg !6850
  %0 = load %struct.ls_expr*, %struct.ls_expr** %next, align 8, !dbg !6850
  ret %struct.ls_expr* %0, !dbg !6851
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #1

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @sbitmap_difference(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @sbitmap_a_or_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local void @sbitmap_not(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local %struct.edge_list* @pre_edge_lcm(i32, %struct.simple_bitmap_def**, %struct.simple_bitmap_def**, %struct.simple_bitmap_def**, %struct.simple_bitmap_def**, %struct.simple_bitmap_def***, %struct.simple_bitmap_def***) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @pre_delete() unnamed_addr #4 !dbg !6852 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 0, metadata !6854, metadata !DIExpression()), !dbg !6870
  br label %for.cond, !dbg !6871

for.cond:                                         ; preds = %for.inc77, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc77 ], [ 0, %entry ], !dbg !6872
  %changed.0 = phi i32 [ %changed.1.lcssa, %for.inc77 ], [ 0, %entry ], !dbg !6872
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6854, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !6855, metadata !DIExpression()), !dbg !6870
  %0 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 1), align 8, !dbg !6873
  %1 = zext i32 %0 to i64, !dbg !6874
  %cmp = icmp ult i64 %indvars.iv, %1, !dbg !6874
  br i1 %cmp, label %for.body, label %for.end79, !dbg !6875

for.body:                                         ; preds = %for.cond
  %2 = load %struct.expr**, %struct.expr*** getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 0), align 8, !dbg !6876
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %2, i64 %indvars.iv, !dbg !6877
  br label %for.cond1, !dbg !6878

for.cond1:                                        ; preds = %for.inc75, %for.body
  %expr.0.in = phi %struct.expr** [ %arrayidx, %for.body ], [ %next_same_hash, %for.inc75 ]
  %changed.1 = phi i32 [ %changed.0, %for.body ], [ %changed.2.lcssa, %for.inc75 ], !dbg !6872
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !6879
  call void @llvm.dbg.value(metadata i32 %changed.1, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !6856, metadata !DIExpression()), !dbg !6870
  %cmp2 = icmp eq %struct.expr* %expr.0, null, !dbg !6880
  br i1 %cmp2, label %for.inc77, label %for.body3, !dbg !6881

for.body3:                                        ; preds = %for.cond1
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 1, !dbg !6882
  %3 = load i32, i32* %bitmap_index, align 8, !dbg !6882
  call void @llvm.dbg.value(metadata i32 %3, metadata !6858, metadata !DIExpression()), !dbg !6883
  %antic_occr = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 3, !dbg !6884
  %div = lshr i32 %3, 6, !dbg !6885
  %idxprom11 = zext i32 %div to i64, !dbg !6885
  %rem = and i32 %3, 63, !dbg !6885
  %sh_prom = zext i32 %rem to i64, !dbg !6885
  %4 = shl i64 1, %sh_prom, !dbg !6885
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 5, !dbg !6887
  br label %for.cond4, !dbg !6890

for.cond4:                                        ; preds = %for.inc, %for.body3
  %occr.0.in = phi %struct.occr** [ %antic_occr, %for.body3 ], [ %next, %for.inc ]
  %changed.2 = phi i32 [ %changed.1, %for.body3 ], [ %changed.3, %for.inc ], !dbg !6870
  %occr.0 = load %struct.occr*, %struct.occr** %occr.0.in, align 8, !dbg !6891
  call void @llvm.dbg.value(metadata i32 %changed.2, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata %struct.occr* %occr.0, metadata !6857, metadata !DIExpression()), !dbg !6870
  %cmp5 = icmp eq %struct.occr* %occr.0, null, !dbg !6892
  br i1 %cmp5, label %for.inc75, label %for.body6, !dbg !6893

for.body6:                                        ; preds = %for.cond4
  %insn7 = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 1, !dbg !6894
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn7, align 8, !dbg !6894
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !6864, metadata !DIExpression()), !dbg !6895
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 1, !dbg !6896
  %rt_bb = bitcast %struct.object_block** %arrayidx8 to %struct.basic_block_def**, !dbg !6896
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6896
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %6, metadata !6869, metadata !DIExpression()), !dbg !6895
  %7 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pre_delete_map, align 8, !dbg !6897
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 9, !dbg !6897
  %8 = load i32, i32* %index, align 8, !dbg !6897
  %idxprom9 = sext i32 %8 to i64, !dbg !6897
  %arrayidx10 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %7, i64 %idxprom9, !dbg !6897
  %9 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx10, align 8, !dbg !6897
  %arrayidx12 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %9, i64 0, i32 3, i64 %idxprom11, !dbg !6897
  %10 = load i64, i64* %arrayidx12, align 8, !dbg !6897
  %11 = and i64 %10, %4, !dbg !6897
  %tobool = icmp eq i64 %11, 0, !dbg !6897
  br i1 %tobool, label %for.inc, label %land.lhs.true, !dbg !6898

land.lhs.true:                                    ; preds = %for.body6
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !6899
  %bf.load = load i32, i32* %12, align 8, !dbg !6899
  %bf.clear = and i32 %bf.load, 65535, !dbg !6899
  %cmp13 = icmp eq i32 %bf.clear, 8, !dbg !6899
  br i1 %cmp13, label %cond.true, label %lor.lhs.false, !dbg !6899

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp16 = icmp eq i32 %bf.clear, 7, !dbg !6899
  br i1 %cmp16, label %cond.true, label %lor.lhs.false17, !dbg !6899

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %cmp20 = icmp eq i32 %bf.clear, 9, !dbg !6899
  br i1 %cmp20, label %cond.true, label %lor.lhs.false21, !dbg !6899

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %cmp24 = icmp eq i32 %bf.clear, 10, !dbg !6899
  br i1 %cmp24, label %cond.true, label %cond.end41, !dbg !6899

cond.true:                                        ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false, %land.lhs.true
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, !dbg !6899
  %13 = getelementptr inbounds %union.u, %union.u* %u25, i64 1, i32 0, i32 0, i64 0, !dbg !6899
  %14 = bitcast %union.rtunion_def* %13 to i32**, !dbg !6899
  %15 = load i32*, i32** %14, align 8, !dbg !6899
  %bf.load28 = load i32, i32* %15, align 8, !dbg !6899
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !6899
  %cmp30 = icmp eq i32 %bf.clear29, 23, !dbg !6899
  %16 = bitcast i32* %15 to %struct.rtx_def*, !dbg !6899
  br i1 %cmp30, label %cond.end41, label %cond.false, !dbg !6899

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %5, %struct.rtx_def* %16) #6, !dbg !6899
  br label %cond.end41, !dbg !6899

cond.end41:                                       ; preds = %lor.lhs.false21, %cond.false, %cond.true
  %cond42 = phi %struct.rtx_def* [ %call, %cond.false ], [ %16, %cond.true ], [ null, %lor.lhs.false21 ], !dbg !6899
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond42, metadata !6868, metadata !DIExpression()), !dbg !6895
  %cmp43 = icmp eq %struct.rtx_def* %cond42, null, !dbg !6900
  br i1 %cmp43, label %for.inc, label %land.lhs.true44, !dbg !6901

land.lhs.true44:                                  ; preds = %cond.end41
  %call45 = tail call zeroext i8 @dbg_cnt(i32 24) #6, !dbg !6902
  %tobool46 = icmp eq i8 %call45, 0, !dbg !6902
  br i1 %tobool46, label %for.inc, label %if.then, !dbg !6903

if.then:                                          ; preds = %land.lhs.true44
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !6904
  %cmp47 = icmp eq %struct.rtx_def* %17, null, !dbg !6905
  br i1 %cmp47, label %if.then49, label %if.then.if.end_crit_edge, !dbg !6906

if.then.if.end_crit_edge:                         ; preds = %if.then
  br label %if.end, !dbg !6906

if.then49:                                        ; preds = %if.then
  %arrayidx52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6907
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !6907
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !6907
  %call54 = tail call %struct.rtx_def* @gen_reg_rtx_and_attrs(%struct.rtx_def* %18) #6, !dbg !6908
  store %struct.rtx_def* %call54, %struct.rtx_def** %reaching_reg, align 8, !dbg !6909
  br label %if.end, !dbg !6910

if.end:                                           ; preds = %if.then.if.end_crit_edge, %if.then49
  %19 = phi %struct.rtx_def* [ %call54, %if.then49 ], [ %17, %if.then.if.end_crit_edge ], !dbg !6911
  %arrayidx59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6912
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !6912
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !6912
  %call61 = tail call fastcc %struct.rtx_def* @gcse_emit_move_after(%struct.rtx_def* %19, %struct.rtx_def* %20, %struct.rtx_def* %5) #7, !dbg !6913
  %call62 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %5) #6, !dbg !6914
  %deleted_p = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 2, !dbg !6915
  store i8 1, i8* %deleted_p, align 8, !dbg !6916
  call void @llvm.dbg.value(metadata i32 1, metadata !6855, metadata !DIExpression()), !dbg !6870
  %21 = load i32, i32* @gcse_subst_count, align 4, !dbg !6917
  %inc = add nsw i32 %21, 1, !dbg !6917
  store i32 %inc, i32* @gcse_subst_count, align 4, !dbg !6917
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6918
  %tobool63 = icmp eq %struct._IO_FILE* %22, null, !dbg !6918
  br i1 %tobool63, label %for.inc, label %if.then64, !dbg !6920

if.then64:                                        ; preds = %if.end
  %arrayidx67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6921
  %rt_int = bitcast %union.rtunion_def* %arrayidx67 to i32*, !dbg !6921
  %23 = load i32, i32* %rt_int, align 8, !dbg !6921
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38, i64 0, i64 0), i32 %23, i32 %3) #6, !dbg !6923
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6924
  %25 = load i32, i32* %index, align 8, !dbg !6925
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !6926
  %call71 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %26) #7, !dbg !6926
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i32 %25, i32 %call71) #6, !dbg !6927
  br label %for.inc, !dbg !6928

for.inc:                                          ; preds = %if.end, %land.lhs.true44, %cond.end41, %for.body6, %if.then64
  %changed.3 = phi i32 [ %changed.2, %land.lhs.true44 ], [ %changed.2, %cond.end41 ], [ %changed.2, %for.body6 ], [ 1, %if.then64 ], [ 1, %if.end ], !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.3, metadata !6855, metadata !DIExpression()), !dbg !6870
  %next = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 0, !dbg !6929
  br label %for.cond4, !dbg !6930, !llvm.loop !6931

for.inc75:                                        ; preds = %for.cond4
  %changed.2.lcssa = phi i32 [ %changed.2, %for.cond4 ], !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.2.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.2.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.2.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !6933
  br label %for.cond1, !dbg !6934, !llvm.loop !6935

for.inc77:                                        ; preds = %for.cond1
  %changed.1.lcssa = phi i32 [ %changed.1, %for.cond1 ], !dbg !6872
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6937
  br label %for.cond, !dbg !6938, !llvm.loop !6939

for.end79:                                        ; preds = %for.cond
  %changed.0.lcssa = phi i32 [ %changed.0, %for.cond ], !dbg !6872
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !6855, metadata !DIExpression()), !dbg !6870
  ret i32 %changed.0.lcssa, !dbg !6941
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @pre_edge_insert(%struct.edge_list* %edge_list, %struct.expr** %index_map) unnamed_addr #4 !dbg !6942 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_list* %edge_list, metadata !6946, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata %struct.expr** %index_map, metadata !6947, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 0, metadata !6953, metadata !DIExpression()), !dbg !6977
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pre_insert_map, align 8, !dbg !6978
  %1 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %0, align 8, !dbg !6978
  %size = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %1, i64 0, i32 2, !dbg !6979
  %2 = load i32, i32* %size, align 4, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %2, metadata !6952, metadata !DIExpression()), !dbg !6977
  %num_edges1 = getelementptr inbounds %struct.edge_list, %struct.edge_list* %edge_list, i64 0, i32 1, !dbg !6980
  %3 = load i32, i32* %num_edges1, align 4, !dbg !6980
  call void @llvm.dbg.value(metadata i32 %3, metadata !6951, metadata !DIExpression()), !dbg !6977
  %4 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 2), align 4, !dbg !6981
  %call = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %3, i32 %4) #6, !dbg !6982
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def** %call, metadata !6954, metadata !DIExpression()), !dbg !6977
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call, i32 %3) #6, !dbg !6983
  call void @llvm.dbg.value(metadata i32 0, metadata !6948, metadata !DIExpression()), !dbg !6977
  %index_to_edge = getelementptr inbounds %struct.edge_list, %struct.edge_list* %edge_list, i64 0, i32 2, !dbg !6984
  %5 = sext i32 %2 to i64, !dbg !6985
  %6 = sext i32 %3 to i64, !dbg !6985
  br label %for.cond, !dbg !6985

for.cond:                                         ; preds = %for.inc64, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc64 ], [ 0, %entry ], !dbg !6986
  %did_insert.0 = phi i32 [ %did_insert.1.lcssa, %for.inc64 ], [ 0, %entry ], !dbg !6986
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !6948, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.0, metadata !6953, metadata !DIExpression()), !dbg !6977
  %cmp = icmp slt i64 %indvars.iv3, %6, !dbg !6987
  br i1 %cmp, label %for.body, label %for.end66, !dbg !6988

for.body:                                         ; preds = %for.cond
  %7 = load %struct.edge_def**, %struct.edge_def*** %index_to_edge, align 8, !dbg !6989
  %arrayidx2 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %7, i64 %indvars.iv3, !dbg !6989
  %8 = load %struct.edge_def*, %struct.edge_def** %arrayidx2, align 8, !dbg !6989
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i64 0, i32 0, !dbg !6989
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6989
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !6959, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i32 0, metadata !6955, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i32 0, metadata !6949, metadata !DIExpression()), !dbg !6977
  %arrayidx25 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %call, i64 %indvars.iv3, !dbg !6990
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 9, !dbg !6991
  br label %for.cond3, !dbg !6994

for.cond3:                                        ; preds = %for.inc61, %for.body
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc61 ], [ 0, %for.body ], !dbg !6986
  %did_insert.1 = phi i32 [ %did_insert.2.lcssa, %for.inc61 ], [ %did_insert.0, %for.body ], !dbg !6986
  %indx.0 = phi i32 [ %add, %for.inc61 ], [ 0, %for.body ], !dbg !6995
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !6949, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %indx.0, metadata !6955, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i32 %did_insert.1, metadata !6953, metadata !DIExpression()), !dbg !6977
  %cmp4 = icmp slt i64 %indvars.iv1, %5, !dbg !6996
  br i1 %cmp4, label %for.body5, label %for.inc64, !dbg !6997

for.body5:                                        ; preds = %for.cond3
  %10 = sext i32 %indx.0 to i64, !dbg !6996
  %11 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @pre_insert_map, align 8, !dbg !6998
  %arrayidx7 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %11, i64 %indvars.iv3, !dbg !6998
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx7, align 8, !dbg !6998
  %arrayidx9 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %12, i64 0, i32 3, i64 %indvars.iv1, !dbg !6998
  %13 = load i64, i64* %arrayidx9, align 8, !dbg !6998
  call void @llvm.dbg.value(metadata i64 %13, metadata !6960, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata i32 %indx.0, metadata !6950, metadata !DIExpression()), !dbg !6977
  br label %for.cond10, !dbg !7000

for.cond10:                                       ; preds = %for.inc57, %for.body5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc57 ], [ %10, %for.body5 ], !dbg !6986
  %did_insert.2 = phi i32 [ %did_insert.6, %for.inc57 ], [ %did_insert.1, %for.body5 ], !dbg !6986
  %insert.0 = phi i64 [ %shr59, %for.inc57 ], [ %13, %for.body5 ], !dbg !6999
  call void @llvm.dbg.value(metadata i64 %insert.0, metadata !6960, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6950, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.2, metadata !6953, metadata !DIExpression()), !dbg !6977
  %tobool = icmp ne i64 %insert.0, 0, !dbg !7001
  %14 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 2), align 4, !dbg !7002
  %15 = sext i32 %14 to i64, !dbg !7002
  %cmp11 = icmp slt i64 %indvars.iv, %15, !dbg !7002
  %16 = and i1 %cmp11, %tobool, !dbg !7002
  br i1 %16, label %for.body12, label %for.inc61, !dbg !7003

for.body12:                                       ; preds = %for.cond10
  %and = and i64 %insert.0, 1, !dbg !7004
  %cmp13 = icmp eq i64 %and, 0, !dbg !7005
  br i1 %cmp13, label %for.inc57, label %land.lhs.true, !dbg !7006

land.lhs.true:                                    ; preds = %for.body12
  %arrayidx15 = getelementptr inbounds %struct.expr*, %struct.expr** %index_map, i64 %indvars.iv, !dbg !7007
  %17 = load %struct.expr*, %struct.expr** %arrayidx15, align 8, !dbg !7007
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %17, i64 0, i32 5, !dbg !7008
  %18 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !7008
  %cmp16 = icmp eq %struct.rtx_def* %18, null, !dbg !7009
  br i1 %cmp16, label %for.inc57, label %if.then, !dbg !7010

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.expr* %17, metadata !6964, metadata !DIExpression()), !dbg !7011
  %antic_occr = getelementptr inbounds %struct.expr, %struct.expr* %17, i64 0, i32 3, !dbg !7012
  %div = lshr i64 %indvars.iv, 6, !dbg !6990
  %idxprom27 = and i64 %div, 67108863, !dbg !6990
  %rem = and i64 %indvars.iv, 63, !dbg !6990
  %19 = shl i64 1, %rem, !dbg !6990
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %17, i64 0, i32 1, !dbg !6991
  br label %for.cond19, !dbg !7013

for.cond19:                                       ; preds = %for.inc, %if.then
  %did_insert.3 = phi i32 [ %did_insert.2, %if.then ], [ %did_insert.5, %for.inc ], !dbg !6986
  %occr.0.in = phi %struct.occr** [ %antic_occr, %if.then ], [ %next, %for.inc ]
  %occr.0 = load %struct.occr*, %struct.occr** %occr.0.in, align 8, !dbg !7014
  call void @llvm.dbg.value(metadata %struct.occr* %occr.0, metadata !6969, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.value(metadata i32 %did_insert.3, metadata !6953, metadata !DIExpression()), !dbg !6977
  %cmp20 = icmp eq %struct.occr* %occr.0, null, !dbg !7015
  br i1 %cmp20, label %for.inc57.loopexit, label %for.body21, !dbg !7016

for.body21:                                       ; preds = %for.cond19
  %deleted_p = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 2, !dbg !7017
  %20 = load i8, i8* %deleted_p, align 8, !dbg !7017
  %tobool22 = icmp eq i8 %20, 0, !dbg !7019
  br i1 %tobool22, label %for.inc, label %if.end, !dbg !7020

if.end:                                           ; preds = %for.body21
  %21 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx25, align 8, !dbg !7021
  %arrayidx28 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %21, i64 0, i32 3, i64 %idxprom27, !dbg !7021
  %22 = load i64, i64* %arrayidx28, align 8, !dbg !7021
  %23 = and i64 %22, %19, !dbg !7021
  %tobool30 = icmp eq i64 %23, 0, !dbg !7021
  br i1 %tobool30, label %if.then31, label %for.inc, !dbg !7022

if.then31:                                        ; preds = %if.end
  %24 = load %struct.edge_def**, %struct.edge_def*** %index_to_edge, align 8, !dbg !7023
  %arrayidx34 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %24, i64 %indvars.iv3, !dbg !7023
  %25 = load %struct.edge_def*, %struct.edge_def** %arrayidx34, align 8, !dbg !7023
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6976, metadata !DIExpression()), !dbg !7024
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 7, !dbg !7025
  %26 = load i32, i32* %flags, align 8, !dbg !7025
  %and35 = and i32 %26, 2, !dbg !7027
  %tobool36 = icmp eq i32 %and35, 0, !dbg !7027
  %27 = load %struct.expr*, %struct.expr** %arrayidx15, align 8, !dbg !7028
  br i1 %tobool36, label %if.else, label %if.then37, !dbg !7029

if.then37:                                        ; preds = %if.then31
  tail call fastcc void @insert_insn_end_basic_block(%struct.expr* %27, %struct.basic_block_def* %9, i32 0) #7, !dbg !7030
  br label %if.end43, !dbg !7030

if.else:                                          ; preds = %if.then31
  %call42 = tail call fastcc %struct.rtx_def* @process_insert_insn(%struct.expr* %27) #7, !dbg !7031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !6970, metadata !DIExpression()), !dbg !7024
  tail call void @insert_insn_on_edge(%struct.rtx_def* %call42, %struct.edge_def* %25) #6, !dbg !7033
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then37
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7034
  %tobool44 = icmp eq %struct._IO_FILE* %28, null, !dbg !7034
  br i1 %tobool44, label %if.end52, label %if.then45, !dbg !7035

if.then45:                                        ; preds = %if.end43
  %29 = load i32, i32* %index, align 8, !dbg !7036
  %30 = load %struct.edge_def**, %struct.edge_def*** %index_to_edge, align 8, !dbg !7037
  %arrayidx48 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %30, i64 %indvars.iv3, !dbg !7037
  %31 = load %struct.edge_def*, %struct.edge_def** %arrayidx48, align 8, !dbg !7037
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %31, i64 0, i32 1, !dbg !7037
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7037
  %index49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i64 0, i32 9, !dbg !7038
  %33 = load i32, i32* %index49, align 8, !dbg !7038
  %call50 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %28, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i32 %29, i32 %33) #6, !dbg !7039
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7040
  %35 = load i32, i32* %bitmap_index, align 8, !dbg !7041
  %call51 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.41, i64 0, i64 0), i32 %35) #6, !dbg !7042
  br label %if.end52, !dbg !7043

if.end52:                                         ; preds = %if.end43, %if.then45
  tail call fastcc void @update_ld_motion_stores(%struct.expr* %17) #7, !dbg !7044
  %36 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx25, align 8, !dbg !7045
  %37 = trunc i64 %indvars.iv to i32, !dbg !7046
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %36, i32 %37) #7, !dbg !7046
  call void @llvm.dbg.value(metadata i32 1, metadata !6953, metadata !DIExpression()), !dbg !6977
  %38 = load i32, i32* @gcse_create_count, align 4, !dbg !7047
  %inc = add nsw i32 %38, 1, !dbg !7047
  store i32 %inc, i32* @gcse_create_count, align 4, !dbg !7047
  br label %for.inc, !dbg !7048

for.inc:                                          ; preds = %if.end, %for.body21, %if.end52
  %did_insert.5 = phi i32 [ %did_insert.3, %for.body21 ], [ %did_insert.3, %if.end ], [ 1, %if.end52 ], !dbg !6986
  call void @llvm.dbg.value(metadata i32 %did_insert.5, metadata !6953, metadata !DIExpression()), !dbg !6977
  %next = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 0, !dbg !7049
  br label %for.cond19, !dbg !7050, !llvm.loop !7051

for.inc57.loopexit:                               ; preds = %for.cond19
  %did_insert.3.lcssa = phi i32 [ %did_insert.3, %for.cond19 ], !dbg !6986
  call void @llvm.dbg.value(metadata i32 %did_insert.3.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.3.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.3.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  br label %for.inc57, !dbg !7053

for.inc57:                                        ; preds = %for.inc57.loopexit, %land.lhs.true, %for.body12
  %did_insert.6 = phi i32 [ %did_insert.2, %land.lhs.true ], [ %did_insert.2, %for.body12 ], [ %did_insert.3.lcssa, %for.inc57.loopexit ], !dbg !6986
  call void @llvm.dbg.value(metadata i32 %did_insert.6, metadata !6953, metadata !DIExpression()), !dbg !6977
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !7053
  call void @llvm.dbg.value(metadata i32 undef, metadata !6950, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6977
  %shr59 = lshr i64 %insert.0, 1, !dbg !7054
  call void @llvm.dbg.value(metadata i64 %shr59, metadata !6960, metadata !DIExpression()), !dbg !6999
  br label %for.cond10, !dbg !7055, !llvm.loop !7056

for.inc61:                                        ; preds = %for.cond10
  %did_insert.2.lcssa = phi i32 [ %did_insert.2, %for.cond10 ], !dbg !6986
  call void @llvm.dbg.value(metadata i32 %did_insert.2.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.2.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.2.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !7058
  call void @llvm.dbg.value(metadata i32 undef, metadata !6949, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6977
  %add = add i32 %indx.0, 64, !dbg !7059
  call void @llvm.dbg.value(metadata i32 %add, metadata !6955, metadata !DIExpression()), !dbg !6984
  br label %for.cond3, !dbg !7060, !llvm.loop !7061

for.inc64:                                        ; preds = %for.cond3
  %did_insert.1.lcssa = phi i32 [ %did_insert.1, %for.cond3 ], !dbg !6986
  call void @llvm.dbg.value(metadata i32 %did_insert.1.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.1.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.1.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !7063
  call void @llvm.dbg.value(metadata i32 undef, metadata !6948, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6977
  br label %for.cond, !dbg !7064, !llvm.loop !7065

for.end66:                                        ; preds = %for.cond
  %did_insert.0.lcssa = phi i32 [ %did_insert.0, %for.cond ], !dbg !6986
  call void @llvm.dbg.value(metadata i32 %did_insert.0.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.0.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %did_insert.0.lcssa, metadata !6953, metadata !DIExpression()), !dbg !6977
  %39 = bitcast %struct.simple_bitmap_def** %call to i8*, !dbg !7067
  tail call void @free(i8* %39) #6, !dbg !7067
  ret i32 %did_insert.0.lcssa, !dbg !7068
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pre_insert_copies() unnamed_addr #4 !dbg !7069 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !7071, metadata !DIExpression()), !dbg !7088
  br label %for.cond, !dbg !7089

for.cond:                                         ; preds = %for.inc39, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc39 ], [ 0, %entry ], !dbg !7090
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7071, metadata !DIExpression()), !dbg !7088
  %0 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 1), align 8, !dbg !7091
  %1 = zext i32 %0 to i64, !dbg !7092
  %cmp = icmp ult i64 %indvars.iv, %1, !dbg !7092
  br i1 %cmp, label %for.body, label %for.end40, !dbg !7093

for.body:                                         ; preds = %for.cond
  %2 = load %struct.expr**, %struct.expr*** getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 0), align 8, !dbg !7094
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %2, i64 %indvars.iv, !dbg !7095
  br label %for.cond1, !dbg !7096

for.cond1:                                        ; preds = %for.inc37, %for.body
  %expr.0.in = phi %struct.expr** [ %arrayidx, %for.body ], [ %next_same_hash, %for.inc37 ]
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !7097
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !7073, metadata !DIExpression()), !dbg !7088
  %cmp2 = icmp eq %struct.expr* %expr.0, null, !dbg !7098
  br i1 %cmp2, label %for.inc39, label %for.body3, !dbg !7099

for.body3:                                        ; preds = %for.cond1
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 5, !dbg !7100
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !7100
  %cmp4 = icmp eq %struct.rtx_def* %3, null, !dbg !7102
  br i1 %cmp4, label %for.inc37, label %if.end, !dbg !7103

if.end:                                           ; preds = %for.body3
  call void @llvm.dbg.value(metadata i32 0, metadata !7072, metadata !DIExpression()), !dbg !7088
  %antic_occr = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 3, !dbg !7104
  %avail_occr = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 4, !dbg !7105
  br label %for.cond5, !dbg !7106

for.cond5:                                        ; preds = %for.inc31, %if.end
  %occr.0.in = phi %struct.occr** [ %antic_occr, %if.end ], [ %next32, %for.inc31 ]
  %added_copy.0 = phi i32 [ 0, %if.end ], [ %added_copy.3, %for.inc31 ], !dbg !7107
  %occr.0 = load %struct.occr*, %struct.occr** %occr.0.in, align 8, !dbg !7108
  call void @llvm.dbg.value(metadata i32 %added_copy.0, metadata !7072, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata %struct.occr* %occr.0, metadata !7074, metadata !DIExpression()), !dbg !7088
  %cmp6 = icmp eq %struct.occr* %occr.0, null, !dbg !7109
  br i1 %cmp6, label %for.end33, label %for.body7, !dbg !7110

for.body7:                                        ; preds = %for.cond5
  %deleted_p = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 2, !dbg !7111
  %4 = load i8, i8* %deleted_p, align 8, !dbg !7111
  %tobool = icmp eq i8 %4, 0, !dbg !7113
  br i1 %tobool, label %for.inc31, label %if.end9, !dbg !7114

if.end9:                                          ; preds = %for.body7
  %insn22 = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 1, !dbg !7115
  br label %for.cond10, !dbg !7117

for.cond10:                                       ; preds = %cleanup, %if.end9
  %avail.0.in = phi %struct.occr** [ %avail_occr, %if.end9 ], [ %next, %cleanup ]
  %added_copy.1 = phi i32 [ %added_copy.0, %if.end9 ], [ %added_copy.2, %cleanup ], !dbg !7107
  %avail.0 = load %struct.occr*, %struct.occr** %avail.0.in, align 8, !dbg !7105
  call void @llvm.dbg.value(metadata i32 %added_copy.1, metadata !7072, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata %struct.occr* %avail.0, metadata !7075, metadata !DIExpression()), !dbg !7088
  %cmp11 = icmp eq %struct.occr* %avail.0, null, !dbg !7118
  br i1 %cmp11, label %for.inc31.loopexit, label %for.body12, !dbg !7119

for.body12:                                       ; preds = %for.cond10
  %insn13 = getelementptr inbounds %struct.occr, %struct.occr* %avail.0, i64 0, i32 1, !dbg !7120
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn13, align 8, !dbg !7120
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !7076, metadata !DIExpression()), !dbg !7121
  %copied_p = getelementptr inbounds %struct.occr, %struct.occr* %avail.0, i64 0, i32 3, !dbg !7122
  %6 = load i8, i8* %copied_p, align 1, !dbg !7122
  %tobool14 = icmp eq i8 %6, 0, !dbg !7124
  br i1 %tobool14, label %if.end16, label %cleanup, !dbg !7125

if.end16:                                         ; preds = %for.body12
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !7126
  %bf.load = load i32, i32* %7, align 8, !dbg !7126
  %bf.clear = and i32 %bf.load, 134217728, !dbg !7126
  %tobool17 = icmp eq i32 %bf.clear, 0, !dbg !7126
  br i1 %tobool17, label %if.end19, label %cleanup, !dbg !7128

if.end19:                                         ; preds = %if.end16
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 1, !dbg !7129
  %rt_bb = bitcast %struct.object_block** %arrayidx21 to %struct.basic_block_def**, !dbg !7129
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7129
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn22, align 8, !dbg !7130
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 1, !dbg !7130
  %rt_bb26 = bitcast %struct.object_block** %arrayidx25 to %struct.basic_block_def**, !dbg !7130
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb26, align 8, !dbg !7130
  %call = tail call fastcc i32 @pre_expr_reaches_here_p(%struct.basic_block_def* %8, %struct.expr* nonnull %expr.0, %struct.basic_block_def* %10) #7, !dbg !7131
  %tobool27 = icmp eq i32 %call, 0, !dbg !7131
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !7132

if.end29:                                         ; preds = %if.end19
  call void @llvm.dbg.value(metadata i32 1, metadata !7072, metadata !DIExpression()), !dbg !7088
  tail call fastcc void @pre_insert_copy_insn(%struct.expr* nonnull %expr.0, %struct.rtx_def* %5) #7, !dbg !7133
  store i8 1, i8* %copied_p, align 1, !dbg !7134
  br label %cleanup, !dbg !7135

cleanup:                                          ; preds = %if.end19, %if.end16, %for.body12, %if.end29
  %added_copy.2 = phi i32 [ 1, %if.end29 ], [ %added_copy.1, %for.body12 ], [ %added_copy.1, %if.end16 ], [ %added_copy.1, %if.end19 ], !dbg !7136
  call void @llvm.dbg.value(metadata i32 %added_copy.2, metadata !7072, metadata !DIExpression()), !dbg !7088
  %next = getelementptr inbounds %struct.occr, %struct.occr* %avail.0, i64 0, i32 0, !dbg !7137
  br label %for.cond10, !dbg !7138, !llvm.loop !7139

for.inc31.loopexit:                               ; preds = %for.cond10
  %added_copy.1.lcssa = phi i32 [ %added_copy.1, %for.cond10 ], !dbg !7107
  call void @llvm.dbg.value(metadata i32 %added_copy.1.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata i32 %added_copy.1.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata i32 %added_copy.1.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7088
  br label %for.inc31, !dbg !7141

for.inc31:                                        ; preds = %for.inc31.loopexit, %for.body7
  %added_copy.3 = phi i32 [ %added_copy.0, %for.body7 ], [ %added_copy.1.lcssa, %for.inc31.loopexit ], !dbg !7107
  call void @llvm.dbg.value(metadata i32 %added_copy.3, metadata !7072, metadata !DIExpression()), !dbg !7088
  %next32 = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 0, !dbg !7141
  br label %for.cond5, !dbg !7142, !llvm.loop !7143

for.end33:                                        ; preds = %for.cond5
  %added_copy.0.lcssa = phi i32 [ %added_copy.0, %for.cond5 ], !dbg !7107
  call void @llvm.dbg.value(metadata i32 %added_copy.0.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata i32 %added_copy.0.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.value(metadata i32 %added_copy.0.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7088
  %tobool34 = icmp eq i32 %added_copy.0.lcssa, 0, !dbg !7145
  br i1 %tobool34, label %for.inc37, label %if.then35, !dbg !7147

if.then35:                                        ; preds = %for.end33
  tail call fastcc void @update_ld_motion_stores(%struct.expr* nonnull %expr.0) #7, !dbg !7148
  br label %for.inc37, !dbg !7148

for.inc37:                                        ; preds = %for.end33, %if.then35, %for.body3
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !7149
  br label %for.cond1, !dbg !7150, !llvm.loop !7151

for.inc39:                                        ; preds = %for.cond1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7153
  br label %for.cond, !dbg !7154, !llvm.loop !7155

for.end40:                                        ; preds = %for.cond
  ret void, !dbg !7157
}

declare dso_local %struct.rtx_def* @gen_reg_rtx_and_attrs(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @gcse_emit_move_after(%struct.rtx_def* %src, %struct.rtx_def* %dest, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !7158 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !7162, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !7163, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7164, metadata !DIExpression()), !dbg !7170
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !7171
  %bf.load = load i32, i32* %0, align 8, !dbg !7171
  %bf.clear = and i32 %bf.load, 65535, !dbg !7171
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7171
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !7171

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !7171
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !7171

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !7171
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !7171

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !7171
  br i1 %cmp11, label %cond.true, label %cond.end25, !dbg !7171

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7171
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7171
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !7171
  %3 = load i32*, i32** %2, align 8, !dbg !7171
  %bf.load12 = load i32, i32* %3, align 8, !dbg !7171
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !7171
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !7171
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !7171
  br i1 %cmp14, label %cond.end25, label %cond.false, !dbg !7171

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %4) #6, !dbg !7171
  br label %cond.end25, !dbg !7171

cond.end25:                                       ; preds = %lor.lhs.false8, %cond.false, %cond.true
  %cond26 = phi %struct.rtx_def* [ %call, %cond.false ], [ %4, %cond.true ], [ null, %lor.lhs.false8 ], !dbg !7171
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond26, metadata !7166, metadata !DIExpression()), !dbg !7170
  %call27 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %dest, %struct.rtx_def* %src) #6, !dbg !7172
  %call28 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call27, %struct.rtx_def* %insn) #6, !dbg !7173
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !7165, metadata !DIExpression()), !dbg !7170
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 0, !dbg !7174
  %bf.load29 = load i32, i32* %5, align 8, !dbg !7174
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !7174
  %cmp31 = icmp eq i32 %bf.clear30, 8, !dbg !7174
  br i1 %cmp31, label %cond.true44, label %lor.lhs.false32, !dbg !7174

lor.lhs.false32:                                  ; preds = %cond.end25
  %cmp35 = icmp eq i32 %bf.clear30, 7, !dbg !7174
  br i1 %cmp35, label %cond.true44, label %lor.lhs.false36, !dbg !7174

lor.lhs.false36:                                  ; preds = %lor.lhs.false32
  %cmp39 = icmp eq i32 %bf.clear30, 9, !dbg !7174
  br i1 %cmp39, label %cond.true44, label %lor.lhs.false40, !dbg !7174

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %cmp43 = icmp eq i32 %bf.clear30, 10, !dbg !7174
  br i1 %cmp43, label %cond.true44, label %cond.end66, !dbg !7174

cond.true44:                                      ; preds = %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false32, %cond.end25
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 1, !dbg !7174
  %6 = getelementptr inbounds %union.u, %union.u* %u45, i64 1, i32 0, i32 0, i64 0, !dbg !7174
  %7 = bitcast %union.rtunion_def* %6 to i32**, !dbg !7174
  %8 = load i32*, i32** %7, align 8, !dbg !7174
  %bf.load49 = load i32, i32* %8, align 8, !dbg !7174
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !7174
  %cmp51 = icmp eq i32 %bf.clear50, 23, !dbg !7174
  %9 = bitcast i32* %8 to %struct.rtx_def*, !dbg !7174
  br i1 %cmp51, label %cond.end66, label %cond.false57, !dbg !7174

cond.false57:                                     ; preds = %cond.true44
  %call62 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call28, %struct.rtx_def* %9) #6, !dbg !7174
  br label %cond.end66, !dbg !7174

cond.end66:                                       ; preds = %lor.lhs.false40, %cond.false57, %cond.true44
  %cond67 = phi %struct.rtx_def* [ %call62, %cond.false57 ], [ %9, %cond.true44 ], [ null, %lor.lhs.false40 ], !dbg !7174
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond67, metadata !7167, metadata !DIExpression()), !dbg !7170
  %tobool = icmp eq %struct.rtx_def* %cond67, null, !dbg !7175
  br i1 %tobool, label %cleanup, label %lor.lhs.false68, !dbg !7177

lor.lhs.false68:                                  ; preds = %cond.end66
  %arrayidx71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond67, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7178
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !7178
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !7178
  %call73 = tail call i32 @rtx_equal_p(%struct.rtx_def* %10, %struct.rtx_def* %dest) #6, !dbg !7179
  %tobool74 = icmp eq i32 %call73, 0, !dbg !7179
  br i1 %tobool74, label %cleanup, label %if.end, !dbg !7180

if.end:                                           ; preds = %lor.lhs.false68
  %call75 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %insn) #6, !dbg !7181
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call75, metadata !7168, metadata !DIExpression()), !dbg !7170
  %tobool76 = icmp eq %struct.rtx_def* %call75, null, !dbg !7183
  br i1 %tobool76, label %if.else, label %if.then77, !dbg !7184

if.then77:                                        ; preds = %if.end
  %arrayidx80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call75, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7185
  br label %if.end86, !dbg !7186

if.else:                                          ; preds = %if.end
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond26, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7187
  br label %if.end86

if.end86:                                         ; preds = %if.else, %if.then77
  %eqv.0.in.in = phi %union.rtunion_def* [ %arrayidx80, %if.then77 ], [ %11, %if.else ]
  %eqv.0.in = bitcast %union.rtunion_def* %eqv.0.in.in to %struct.rtx_def**, !dbg !7188
  %eqv.0 = load %struct.rtx_def*, %struct.rtx_def** %eqv.0.in, align 8, !dbg !7188
  call void @llvm.dbg.value(metadata %struct.rtx_def* %eqv.0, metadata !7169, metadata !DIExpression()), !dbg !7170
  %call87 = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %eqv.0) #6, !dbg !7189
  %call88 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call28, i32 4, %struct.rtx_def* %call87) #6, !dbg !7190
  br label %cleanup, !dbg !7191

cleanup:                                          ; preds = %lor.lhs.false68, %cond.end66, %if.end86
  ret %struct.rtx_def* %call28, !dbg !7192
}

declare dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_insn_1(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_insn_end_basic_block(%struct.expr* %expr, %struct.basic_block_def* %bb, i32 %pre) unnamed_addr #4 !dbg !7193 {
entry:
  call void @llvm.dbg.value(metadata %struct.expr* %expr, metadata !7197, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7198, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i32 0, metadata !7199, metadata !DIExpression()), !dbg !7206
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !7207
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7207
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7207
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !7207
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7200, metadata !DIExpression()), !dbg !7206
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 5, !dbg !7208
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !7208
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7202, metadata !DIExpression()), !dbg !7206
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !7209
  call void @llvm.dbg.value(metadata i32 %call, metadata !7203, metadata !DIExpression()), !dbg !7206
  %call1 = tail call fastcc %struct.rtx_def* @process_insert_insn(%struct.expr* %expr) #7, !dbg !7210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !7204, metadata !DIExpression()), !dbg !7206
  %tobool = icmp eq %struct.rtx_def* %call1, null, !dbg !7211
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !7211

land.lhs.true:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 0, !dbg !7211
  %bf.load = load i32, i32* %3, align 8, !dbg !7211
  %bf.clear = and i32 %bf.load, 65535, !dbg !7211
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7211
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !7211

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !7211
  br i1 %cmp4, label %cond.end, label %lor.lhs.false5, !dbg !7211

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !7211
  br i1 %cmp8, label %cond.end, label %lor.lhs.false9, !dbg !7211

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !7211
  br i1 %cmp12, label %cond.end, label %cond.true, !dbg !7211

cond.true:                                        ; preds = %entry, %lor.lhs.false9
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 3425, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !7211
  br label %cond.end, !dbg !7211

cond.end:                                         ; preds = %land.lhs.true, %lor.lhs.false, %lor.lhs.false5, %lor.lhs.false9, %cond.true
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !7205, metadata !DIExpression()), !dbg !7206
  br label %while.cond, !dbg !7212

while.cond:                                       ; preds = %while.body, %cond.end
  %pat_end.0 = phi %struct.rtx_def* [ %call1, %cond.end ], [ %5, %while.body ], !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat_end.0, metadata !7205, metadata !DIExpression()), !dbg !7206
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat_end.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7213
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !7213
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7213
  %cmp13 = icmp eq %struct.rtx_def* %5, null, !dbg !7214
  br i1 %cmp13, label %while.end, label %while.body, !dbg !7212

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !7205, metadata !DIExpression()), !dbg !7206
  br label %while.cond, !dbg !7212, !llvm.loop !7215

while.end:                                        ; preds = %while.cond
  %pat_end.0.lcssa = phi %struct.rtx_def* [ %pat_end.0, %while.cond ], !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat_end.0.lcssa, metadata !7205, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat_end.0.lcssa, metadata !7205, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat_end.0.lcssa, metadata !7205, metadata !DIExpression()), !dbg !7206
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !7217
  %bf.load18 = load i32, i32* %6, align 8, !dbg !7217
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !7217
  %cmp20 = icmp eq i32 %bf.clear19, 9, !dbg !7217
  br i1 %cmp20, label %if.then, label %lor.lhs.false21, !dbg !7219

lor.lhs.false21:                                  ; preds = %while.end
  %cmp24 = icmp eq i32 %bf.clear19, 8, !dbg !7220
  br i1 %cmp24, label %land.lhs.true25, label %if.else, !dbg !7221

land.lhs.true25:                                  ; preds = %lor.lhs.false21
  %call26 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !7222
  %tobool27 = icmp eq i8 %call26, 0, !dbg !7222
  br i1 %tobool27, label %if.then, label %lor.lhs.false28, !dbg !7223

lor.lhs.false28:                                  ; preds = %land.lhs.true25
  %call29 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !7224
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call29, i64 0, i32 7, !dbg !7225
  %7 = load i32, i32* %flags, align 8, !dbg !7225
  %and = and i32 %7, 2, !dbg !7226
  %tobool30 = icmp eq i32 %and, 0, !dbg !7226
  br i1 %tobool30, label %lor.lhs.false28.if.else_crit_edge, label %if.then, !dbg !7227

lor.lhs.false28.if.else_crit_edge:                ; preds = %lor.lhs.false28
  %bf.load80.pre = load i32, i32* %6, align 8, !dbg !7228
  br label %if.else, !dbg !7227

if.then:                                          ; preds = %lor.lhs.false28, %land.lhs.true25, %while.end
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !7230
  %8 = getelementptr inbounds %union.u, %union.u* %u62, i64 1, i32 0, i32 0, i64 0, !dbg !7230
  %9 = bitcast %union.rtunion_def* %8 to i32**, !dbg !7230
  %10 = load i32*, i32** %9, align 8, !dbg !7230
  %bf.load66 = load i32, i32* %10, align 8, !dbg !7230
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !7230
  %cmp68 = icmp eq i32 %bf.clear67, 20, !dbg !7233
  br i1 %cmp68, label %if.then77, label %lor.lhs.false69, !dbg !7234

lor.lhs.false69:                                  ; preds = %if.then
  %cmp76 = icmp eq i32 %bf.clear67, 21, !dbg !7235
  br i1 %cmp76, label %if.then77, label %if.end, !dbg !7236

if.then77:                                        ; preds = %lor.lhs.false69, %if.then
  %call78 = tail call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %1) #6, !dbg !7237
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call78, metadata !7200, metadata !DIExpression()), !dbg !7206
  br label %if.end, !dbg !7238

if.end:                                           ; preds = %if.then77, %lor.lhs.false69
  %insn.0 = phi %struct.rtx_def* [ %call78, %if.then77 ], [ %1, %lor.lhs.false69 ], !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7200, metadata !DIExpression()), !dbg !7206
  %call79 = tail call %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def* %call1, %struct.rtx_def* %insn.0, %struct.basic_block_def* %bb) #6, !dbg !7239
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call79, metadata !7201, metadata !DIExpression()), !dbg !7206
  br label %if.end151, !dbg !7240

if.else:                                          ; preds = %lor.lhs.false28.if.else_crit_edge, %lor.lhs.false21
  %bf.load80 = phi i32 [ %bf.load80.pre, %lor.lhs.false28.if.else_crit_edge ], [ %bf.load18, %lor.lhs.false21 ], !dbg !7228
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !7228
  %cmp82 = icmp eq i32 %bf.clear81, 10, !dbg !7228
  br i1 %cmp82, label %land.lhs.true83, label %if.else148, !dbg !7241

land.lhs.true83:                                  ; preds = %if.else
  %call84 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !7242
  %tobool85 = icmp eq i8 %call84, 0, !dbg !7242
  br i1 %tobool85, label %if.then91, label %lor.lhs.false86, !dbg !7243

lor.lhs.false86:                                  ; preds = %land.lhs.true83
  %call87 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !7244
  %flags88 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call87, i64 0, i32 7, !dbg !7245
  %11 = load i32, i32* %flags88, align 8, !dbg !7245
  %and89 = and i32 %11, 2, !dbg !7246
  %tobool90 = icmp eq i32 %and89, 0, !dbg !7246
  br i1 %tobool90, label %if.else148, label %if.then91, !dbg !7247

if.then91:                                        ; preds = %lor.lhs.false86, %land.lhs.true83
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7248
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 0, !dbg !7248
  %13 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7248
  %call129 = tail call %struct.rtx_def* @find_first_parameter_load(%struct.rtx_def* %1, %struct.rtx_def* %13) #6, !dbg !7250
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call129, metadata !7200, metadata !DIExpression()), !dbg !7206
  br label %while.cond130, !dbg !7251

while.cond130:                                    ; preds = %while.body141, %if.then91
  %insn.1 = phi %struct.rtx_def* [ %call129, %if.then91 ], [ %18, %while.body141 ], !dbg !7252
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !7200, metadata !DIExpression()), !dbg !7206
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !7253
  %bf.load131 = load i32, i32* %14, align 8, !dbg !7253
  %bf.clear132 = and i32 %bf.load131, 65535, !dbg !7253
  %cmp133 = icmp eq i32 %bf.clear132, 12, !dbg !7253
  br i1 %cmp133, label %while.body141, label %lor.rhs, !dbg !7254

lor.rhs:                                          ; preds = %while.cond130
  %cmp136 = icmp eq i32 %bf.clear132, 13, !dbg !7255
  br i1 %cmp136, label %land.rhs, label %while.end146, !dbg !7255

land.rhs:                                         ; preds = %lor.rhs
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, !dbg !7255
  %15 = getelementptr inbounds %union.u, %union.u* %u137, i64 1, i32 0, i32 0, i64 0, !dbg !7255
  %rt_int = bitcast %union.rtunion_def* %15 to i32*, !dbg !7255
  %16 = load i32, i32* %rt_int, align 8, !dbg !7255
  %cmp140 = icmp eq i32 %16, 10, !dbg !7255
  br i1 %cmp140, label %while.body141, label %while.end146, !dbg !7251

while.body141:                                    ; preds = %while.cond130, %land.rhs
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7256
  %rt_rtx145 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !7256
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx145, align 8, !dbg !7256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !7200, metadata !DIExpression()), !dbg !7206
  br label %while.cond130, !dbg !7251, !llvm.loop !7257

while.end146:                                     ; preds = %lor.rhs, %land.rhs
  %insn.1.lcssa = phi %struct.rtx_def* [ %insn.1, %lor.rhs ], [ %insn.1, %land.rhs ], !dbg !7252
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !7200, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !7200, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !7200, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !7200, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !7200, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !7200, metadata !DIExpression()), !dbg !7206
  %call147 = tail call %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def* %call1, %struct.rtx_def* %insn.1.lcssa, %struct.basic_block_def* %bb) #6, !dbg !7258
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call147, metadata !7201, metadata !DIExpression()), !dbg !7206
  br label %if.end151, !dbg !7259

if.else148:                                       ; preds = %lor.lhs.false86, %if.else
  %call149 = tail call %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def* %call1, %struct.rtx_def* %1, %struct.basic_block_def* %bb) #6, !dbg !7260
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call149, metadata !7201, metadata !DIExpression()), !dbg !7206
  br label %if.end151

if.end151:                                        ; preds = %while.end146, %if.else148, %if.end
  %new_insn.1 = phi %struct.rtx_def* [ %call79, %if.end ], [ %call147, %while.end146 ], [ %call149, %if.else148 ], !dbg !7261
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.1, metadata !7201, metadata !DIExpression()), !dbg !7206
  br label %while.cond152, !dbg !7262

while.cond152:                                    ; preds = %if.end177, %if.end151
  %pat.0 = phi %struct.rtx_def* [ %call1, %if.end151 ], [ %23, %if.end177 ], !dbg !7206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.0, metadata !7204, metadata !DIExpression()), !dbg !7206
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat.0, i64 0, i32 0, !dbg !7263
  %bf.load154 = load i32, i32* %19, align 8, !dbg !7263
  %bf.clear155 = and i32 %bf.load154, 65535, !dbg !7263
  %cmp156 = icmp eq i32 %bf.clear155, 8, !dbg !7263
  br i1 %cmp156, label %if.then169, label %lor.lhs.false157, !dbg !7263

lor.lhs.false157:                                 ; preds = %while.cond152
  %cmp160 = icmp eq i32 %bf.clear155, 7, !dbg !7263
  br i1 %cmp160, label %if.then169, label %lor.lhs.false161, !dbg !7263

lor.lhs.false161:                                 ; preds = %lor.lhs.false157
  %cmp164 = icmp eq i32 %bf.clear155, 9, !dbg !7263
  br i1 %cmp164, label %if.then169, label %lor.lhs.false165, !dbg !7263

lor.lhs.false165:                                 ; preds = %lor.lhs.false161
  %cmp168 = icmp eq i32 %bf.clear155, 10, !dbg !7263
  br i1 %cmp168, label %if.then169, label %if.end174, !dbg !7266

if.then169:                                       ; preds = %lor.lhs.false165, %lor.lhs.false161, %lor.lhs.false157, %while.cond152
  %u170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat.0, i64 0, i32 1, !dbg !7267
  %20 = getelementptr inbounds %union.u, %union.u* %u170, i64 1, i32 0, i32 0, i64 0, !dbg !7267
  %rt_rtx173 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !7267
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx173, align 8, !dbg !7267
  tail call fastcc void @add_label_notes(%struct.rtx_def* %21, %struct.rtx_def* %new_insn.1) #7, !dbg !7268
  br label %if.end174, !dbg !7268

if.end174:                                        ; preds = %if.then169, %lor.lhs.false165
  %cmp175 = icmp eq %struct.rtx_def* %pat.0, %pat_end.0.lcssa, !dbg !7269
  br i1 %cmp175, label %while.end182, label %if.end177, !dbg !7271

if.end177:                                        ; preds = %if.end174
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %pat.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7272
  %rt_rtx181 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !7272
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx181, align 8, !dbg !7272
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !7204, metadata !DIExpression()), !dbg !7206
  br label %while.cond152, !dbg !7262, !llvm.loop !7273

while.end182:                                     ; preds = %if.end174
  %24 = load i32, i32* @gcse_create_count, align 4, !dbg !7275
  %inc = add nsw i32 %24, 1, !dbg !7275
  store i32 %inc, i32* @gcse_create_count, align 4, !dbg !7275
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7276
  %tobool183 = icmp eq %struct._IO_FILE* %25, null, !dbg !7276
  br i1 %tobool183, label %if.end193, label %if.then184, !dbg !7278

if.then184:                                       ; preds = %while.end182
  %index185 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7279
  %26 = load i32, i32* %index185, align 8, !dbg !7279
  %arrayidx188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_insn.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7281
  %rt_int189 = bitcast %union.rtunion_def* %arrayidx188 to i32*, !dbg !7281
  %27 = load i32, i32* %rt_int189, align 8, !dbg !7281
  %call190 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %25, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42, i64 0, i64 0), i32 %26, i32 %27) #6, !dbg !7282
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7283
  %bitmap_index191 = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 1, !dbg !7284
  %29 = load i32, i32* %bitmap_index191, align 8, !dbg !7284
  %call192 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0), i32 %29, i32 %call) #6, !dbg !7285
  br label %if.end193, !dbg !7286

if.end193:                                        ; preds = %while.end182, %if.then184
  ret void, !dbg !7287
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @process_insert_insn(%struct.expr* %expr) unnamed_addr #4 !dbg !7288 {
entry:
  call void @llvm.dbg.value(metadata %struct.expr* %expr, metadata !7292, metadata !DIExpression()), !dbg !7299
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 5, !dbg !7300
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !7300
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7293, metadata !DIExpression()), !dbg !7299
  %expr1 = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 0, !dbg !7301
  %1 = load %struct.rtx_def*, %struct.rtx_def** %expr1, align 8, !dbg !7301
  %call = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1) #6, !dbg !7302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7294, metadata !DIExpression()), !dbg !7299
  tail call void @start_sequence() #6, !dbg !7303
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !7304
  %bf.load = load i32, i32* %2, align 8, !dbg !7304
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7304
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7304
  %call2 = tail call i32 @general_operand(%struct.rtx_def* %call, i32 %bf.clear) #6, !dbg !7305
  %tobool = icmp eq i32 %call2, 0, !dbg !7305
  br i1 %tobool, label %if.else, label %if.then, !dbg !7306

if.then:                                          ; preds = %entry
  %call3 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %0, %struct.rtx_def* %call) #6, !dbg !7307
  br label %if.end9, !dbg !7307

if.else:                                          ; preds = %entry
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %0, %struct.rtx_def* %call) #6, !dbg !7308
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #6, !dbg !7309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !7296, metadata !DIExpression()), !dbg !7310
  %call6 = tail call i32 @insn_invalid_p(%struct.rtx_def* %call5) #6, !dbg !7311
  %tobool7 = icmp eq i32 %call6, 0, !dbg !7311
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !7313

if.then8:                                         ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 3397, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !7314
  br label %if.end9, !dbg !7314

if.end9:                                          ; preds = %if.else, %if.then8, %if.then
  %call10 = tail call %struct.rtx_def* @get_insns() #6, !dbg !7315
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !7295, metadata !DIExpression()), !dbg !7299
  tail call void @end_sequence() #6, !dbg !7316
  ret %struct.rtx_def* %call10, !dbg !7317
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_ld_motion_stores(%struct.expr* %expr) unnamed_addr #4 !dbg !7318 {
entry:
  call void @llvm.dbg.value(metadata %struct.expr* %expr, metadata !7322, metadata !DIExpression()), !dbg !7335
  %expr1 = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 0, !dbg !7336
  %0 = load %struct.rtx_def*, %struct.rtx_def** %expr1, align 8, !dbg !7336
  %call = tail call fastcc %struct.ls_expr* @find_rtx_in_ldst(%struct.rtx_def* %0) #7, !dbg !7337
  call void @llvm.dbg.value(metadata %struct.ls_expr* %call, metadata !7323, metadata !DIExpression()), !dbg !7335
  %tobool = icmp eq %struct.ls_expr* %call, null, !dbg !7338
  br i1 %tobool, label %if.end43, label %if.then, !dbg !7339

if.then:                                          ; preds = %entry
  %stores = getelementptr inbounds %struct.ls_expr, %struct.ls_expr* %call, i64 0, i32 4, !dbg !7340
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 5, !dbg !7341
  br label %for.cond, !dbg !7342

for.cond:                                         ; preds = %cleanup, %if.then
  %list.0.in = phi %struct.rtx_def** [ %stores, %if.then ], [ %rt_rtx42, %cleanup ]
  %list.0 = load %struct.rtx_def*, %struct.rtx_def** %list.0.in, align 8, !dbg !7343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.0, metadata !7324, metadata !DIExpression()), !dbg !7343
  %cmp = icmp eq %struct.rtx_def* %list.0, null, !dbg !7344
  br i1 %cmp, label %if.end43.loopexit, label %for.body, !dbg !7345

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7346
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7346
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7327, metadata !DIExpression()), !dbg !7341
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !7347
  %2 = getelementptr inbounds %union.u, %union.u* %u2, i64 1, i32 0, i32 0, i64 0, !dbg !7347
  %rt_rtx5 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7347
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !7347
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7331, metadata !DIExpression()), !dbg !7341
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7348
  %rt_rtx9 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !7348
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !7348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !7332, metadata !DIExpression()), !dbg !7341
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !7349
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !7333, metadata !DIExpression()), !dbg !7341
  %cmp11 = icmp eq %struct.rtx_def* %6, %5, !dbg !7350
  br i1 %cmp11, label %cleanup, label %if.end, !dbg !7352

if.end:                                           ; preds = %for.body
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7353
  %tobool13 = icmp eq %struct._IO_FILE* %7, null, !dbg !7353
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !7355

if.then14:                                        ; preds = %if.end
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !7356
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7358
  %9 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !7359
  tail call void @print_rtl(%struct._IO_FILE* %8, %struct.rtx_def* %9) #6, !dbg !7360
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7361
  %call17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !7362
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7363
  tail call void @print_inline_rtx(%struct._IO_FILE* %11, %struct.rtx_def* %1, i32 8) #6, !dbg !7364
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7365
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !7366
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !7367
  br label %if.end19, !dbg !7368

if.end19:                                         ; preds = %if.end, %if.then14
  %13 = phi %struct.rtx_def* [ %5, %if.end ], [ %.pre, %if.then14 ], !dbg !7367
  %call24 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %13) #6, !dbg !7369
  %call25 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %6, %struct.rtx_def* %call24) #6, !dbg !7370
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !7334, metadata !DIExpression()), !dbg !7341
  %call26 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call25, %struct.rtx_def* %1) #6, !dbg !7371
  store %struct.rtx_def* %6, %struct.rtx_def** %rt_rtx9, align 8, !dbg !7372
  %call31 = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* %1) #6, !dbg !7373
  %14 = getelementptr inbounds %union.u, %union.u* %u2, i64 1, i32 0, i32 0, i64 1, !dbg !7374
  %rt_int = bitcast %union.rtunion_def* %14 to i32*, !dbg !7374
  store i32 -1, i32* %rt_int, align 8, !dbg !7375
  %15 = load i32, i32* @gcse_create_count, align 4, !dbg !7376
  %inc = add nsw i32 %15, 1, !dbg !7376
  store i32 %inc, i32* @gcse_create_count, align 4, !dbg !7376
  br label %cleanup, !dbg !7377

cleanup:                                          ; preds = %for.body, %if.end19
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7378
  %rt_rtx42 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !7378
  br label %for.cond, !dbg !7379, !llvm.loop !7380

if.end43.loopexit:                                ; preds = %for.cond
  br label %if.end43, !dbg !7382

if.end43:                                         ; preds = %if.end43.loopexit, %entry
  ret void, !dbg !7382
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7383 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7385, metadata !DIExpression()), !dbg !7386
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7387
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7387
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7387
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7387

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7387
  br label %cond.end, !dbg !7387

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7387
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7387
  %cmp = icmp eq i32 %call, 1, !dbg !7388
  %conv2 = zext i1 %cmp to i8, !dbg !7387
  ret i8 %conv2, !dbg !7389
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7390 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7394, metadata !DIExpression()), !dbg !7395
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !7396
  %tobool = icmp eq i8 %call, 0, !dbg !7396
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7396

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !7396
  br label %cond.end, !dbg !7396

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7397
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7397
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7397
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !7397

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7397
  br label %cond.end5, !dbg !7397

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !7397
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !7397
  ret %struct.edge_def* %call7, !dbg !7398
}

declare dso_local %struct.rtx_def* @prev_real_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_before_noloc(%struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_first_parameter_load(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_after_noloc(%struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @add_label_notes(%struct.rtx_def* %x, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !7399 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7401, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7402, metadata !DIExpression()), !dbg !7407
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7408
  %bf.load = load i32, i32* %0, align 8, !dbg !7408
  %bf.clear = and i32 %bf.load, 65535, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7403, metadata !DIExpression()), !dbg !7407
  %cmp = icmp eq i32 %bf.clear, 44, !dbg !7409
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !7411

land.lhs.true:                                    ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 134217728, !dbg !7412
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !7412
  br i1 %tobool, label %if.then, label %if.end21, !dbg !7413

if.then:                                          ; preds = %land.lhs.true
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !7414
  %bf.load3 = load i32, i32* %1, align 8, !dbg !7414
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !7414
  %cmp5 = icmp eq i32 %bf.clear4, 9, !dbg !7414
  br i1 %cmp5, label %cond.true, label %cond.end, !dbg !7414

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 4030, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !7414
  br label %cond.end, !dbg !7414

cond.end:                                         ; preds = %if.then, %cond.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7416
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7416
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7416
  tail call void @add_reg_note(%struct.rtx_def* %insn, i32 10, %struct.rtx_def* %2) #6, !dbg !7417
  %3 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !7418
  %4 = load i32*, i32** %3, align 8, !dbg !7418
  %bf.load10 = load i32, i32* %4, align 8, !dbg !7418
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !7418
  %cmp12 = icmp eq i32 %bf.clear11, 12, !dbg !7418
  br i1 %cmp12, label %if.then13, label %cleanup.cont, !dbg !7420

if.then13:                                        ; preds = %cond.end
  %arrayidx20 = getelementptr inbounds i32, i32* %4, i64 10, !dbg !7421
  %5 = load i32, i32* %arrayidx20, align 8, !dbg !7422
  %inc = add nsw i32 %5, 1, !dbg !7422
  store i32 %inc, i32* %arrayidx20, align 8, !dbg !7422
  br label %cleanup.cont, !dbg !7421

if.end21:                                         ; preds = %land.lhs.true, %entry
  %idxprom = zext i32 %bf.clear to i64, !dbg !7423
  %arrayidx22 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom, !dbg !7423
  %6 = load i8, i8* %arrayidx22, align 1, !dbg !7423
  call void @llvm.dbg.value(metadata i8 %6, metadata !7404, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7407
  %arrayidx24 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !7425
  %7 = load i8*, i8** %arrayidx24, align 8, !dbg !7425
  call void @llvm.dbg.value(metadata i8* %7, metadata !7406, metadata !DIExpression()), !dbg !7407
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !7426
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !7426
  %8 = zext i8 %6 to i64, !dbg !7432
  br label %for.cond, !dbg !7432

for.cond:                                         ; preds = %for.inc62, %if.end21
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc62 ], [ %8, %if.end21 ]
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !7433
  call void @llvm.dbg.value(metadata i32 undef, metadata !7404, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7407
  %cmp25 = icmp sgt i64 %indvars.iv1, 0, !dbg !7434
  br i1 %cmp25, label %for.body, label %cleanup.cont.loopexit, !dbg !7435

for.body:                                         ; preds = %for.cond
  %arrayidx28 = getelementptr inbounds i8, i8* %7, i64 %indvars.iv.next2, !dbg !7436
  %9 = load i8, i8* %arrayidx28, align 1, !dbg !7436
  %cmp30 = icmp eq i8 %9, 101, !dbg !7437
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !7438

if.then32:                                        ; preds = %for.body
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 %indvars.iv.next2, !dbg !7439
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !7439
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !7439
  tail call fastcc void @add_label_notes(%struct.rtx_def* %10, %struct.rtx_def* %insn) #7, !dbg !7440
  br label %for.inc62, !dbg !7440

if.else:                                          ; preds = %for.body
  %cmp41 = icmp eq i8 %9, 69, !dbg !7441
  br i1 %cmp41, label %if.then43, label %for.inc62, !dbg !7442

if.then43:                                        ; preds = %if.else
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 %indvars.iv.next2, !dbg !7443
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtvec_def**, !dbg !7443
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7443
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 0, !dbg !7443
  %12 = load i32, i32* %num_elem, align 8, !dbg !7443
  call void @llvm.dbg.value(metadata i32 %12, metadata !7405, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7407
  %13 = sext i32 %12 to i64, !dbg !7444
  br label %for.cond49, !dbg !7444

for.cond49:                                       ; preds = %for.body52, %if.then43
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body52 ], [ %13, %if.then43 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !7426
  call void @llvm.dbg.value(metadata i32 undef, metadata !7405, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7407
  %cmp50 = icmp sgt i64 %indvars.iv, 0, !dbg !7445
  br i1 %cmp50, label %for.body52, label %for.inc62.loopexit, !dbg !7447

for.body52:                                       ; preds = %for.cond49
  %14 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7448
  %arrayidx59 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv.next, !dbg !7448
  %15 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx59, align 8, !dbg !7448
  tail call fastcc void @add_label_notes(%struct.rtx_def* %15, %struct.rtx_def* %insn) #7, !dbg !7449
  call void @llvm.dbg.value(metadata i32 undef, metadata !7405, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7407
  br label %for.cond49, !dbg !7450, !llvm.loop !7451

for.inc62.loopexit:                               ; preds = %for.cond49
  br label %for.inc62, !dbg !7453

for.inc62:                                        ; preds = %for.inc62.loopexit, %if.then32, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !7404, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7407
  br label %for.cond, !dbg !7453, !llvm.loop !7454

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !7456

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then13, %cond.end
  ret void, !dbg !7456
}

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @insn_invalid_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

declare dso_local void @print_inline_rtx(%struct._IO_FILE*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @pre_expr_reaches_here_p(%struct.basic_block_def* %occr_bb, %struct.expr* %expr, %struct.basic_block_def* %bb) unnamed_addr #4 !dbg !7457 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %occr_bb, metadata !7461, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata %struct.expr* %expr, metadata !7462, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7463, metadata !DIExpression()), !dbg !7466
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7467
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7467
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7467
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !7467
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !7467
  %conv = sext i32 %2 to i64, !dbg !7467
  %call = tail call i8* @xcalloc(i64 %conv, i64 1) #6, !dbg !7467
  call void @llvm.dbg.value(metadata i8* %call, metadata !7465, metadata !DIExpression()), !dbg !7466
  %call1 = tail call fastcc i32 @pre_expr_reaches_here_p_work(%struct.basic_block_def* %occr_bb, %struct.expr* %expr, %struct.basic_block_def* %bb, i8* %call) #7, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %call1, metadata !7464, metadata !DIExpression()), !dbg !7466
  tail call void @free(i8* %call) #6, !dbg !7469
  ret i32 %call1, !dbg !7470
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pre_insert_copy_insn(%struct.expr* %expr, %struct.rtx_def* %insn) unnamed_addr #4 !dbg !7471 {
entry:
  call void @llvm.dbg.value(metadata %struct.expr* %expr, metadata !7475, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7476, metadata !DIExpression()), !dbg !7491
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 5, !dbg !7492
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !7492
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7477, metadata !DIExpression()), !dbg !7491
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %0) #7, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %call, metadata !7478, metadata !DIExpression()), !dbg !7491
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 1, !dbg !7494
  %1 = load i32, i32* %bitmap_index, align 8, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %1, metadata !7479, metadata !DIExpression()), !dbg !7491
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7495
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7495
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7495
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7495
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7480, metadata !DIExpression()), !dbg !7491
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !7496
  %bf.load = load i32, i32* %4, align 8, !dbg !7496
  %trunc = trunc i32 %bf.load to i16, !dbg !7497
  switch i16 %trunc, label %sw.default [
    i16 23, label %sw.epilog
    i16 15, label %for.cond.preheader
  ], !dbg !7497

for.cond.preheader:                               ; preds = %entry
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7498
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtvec_def**, !dbg !7498
  %expr19 = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 0, !dbg !7499
  br label %for.cond, !dbg !7503

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !7504
  %set.0 = phi %struct.rtx_def* [ null, %for.cond.preheader ], [ %set.1, %for.inc ], !dbg !7504
  %first_set.0 = phi %struct.rtx_def* [ null, %for.cond.preheader ], [ %first_set.3, %for.inc ], !dbg !7504
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7485, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.0, metadata !7482, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.0, metadata !7481, metadata !DIExpression()), !dbg !7491
  %5 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7505
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 0, !dbg !7505
  %6 = load i32, i32* %num_elem, align 8, !dbg !7505
  %7 = sext i32 %6 to i64, !dbg !7506
  %cmp = icmp slt i64 %indvars.iv, %7, !dbg !7506
  br i1 %cmp, label %for.body, label %for.end, !dbg !7503

for.body:                                         ; preds = %for.cond
  %arrayidx9 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 1, i64 %indvars.iv, !dbg !7507
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx9, align 8, !dbg !7507
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !7486, metadata !DIExpression()), !dbg !7508
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !7509
  %bf.load10 = load i32, i32* %9, align 8, !dbg !7509
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !7509
  %cmp12 = icmp eq i32 %bf.clear11, 23, !dbg !7510
  br i1 %cmp12, label %if.then, label %if.end23, !dbg !7511

if.then:                                          ; preds = %for.body
  %cmp13 = icmp eq %struct.rtx_def* %first_set.0, null, !dbg !7512
  %spec.select = select i1 %cmp13, %struct.rtx_def* %8, %struct.rtx_def* %first_set.0, !dbg !7514
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !7482, metadata !DIExpression()), !dbg !7491
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7515
  %rt_rtx18 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !7515
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !7515
  %12 = load %struct.rtx_def*, %struct.rtx_def** %expr19, align 8, !dbg !7516
  %call20 = tail call fastcc i32 @expr_equiv_p(%struct.rtx_def* %11, %struct.rtx_def* %12) #7, !dbg !7517
  %tobool = icmp eq i32 %call20, 0, !dbg !7517
  br i1 %tobool, label %if.end23, label %cleanup, !dbg !7518

if.end23:                                         ; preds = %if.then, %for.body
  %first_set.2 = phi %struct.rtx_def* [ %first_set.0, %for.body ], [ %spec.select, %if.then ], !dbg !7504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.2, metadata !7482, metadata !DIExpression()), !dbg !7491
  br label %cleanup, !dbg !7519

cleanup:                                          ; preds = %if.then, %if.end23
  %set.1 = phi %struct.rtx_def* [ %set.0, %if.end23 ], [ %8, %if.then ], !dbg !7504
  %first_set.3 = phi %struct.rtx_def* [ %first_set.2, %if.end23 ], [ %spec.select, %if.then ], !dbg !7520
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end23 ], [ false, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.3, metadata !7482, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.1, metadata !7481, metadata !DIExpression()), !dbg !7491
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7521
  call void @llvm.dbg.value(metadata i32 undef, metadata !7485, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7491
  br label %for.cond, !dbg !7522, !llvm.loop !7523

for.end:                                          ; preds = %cleanup, %for.cond
  %set.2 = phi %struct.rtx_def* [ %set.1, %cleanup ], [ %set.0, %for.cond ], !dbg !7504
  %first_set.4 = phi %struct.rtx_def* [ %first_set.3, %cleanup ], [ %first_set.0, %for.cond ], !dbg !7504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_set.4, metadata !7482, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.2, metadata !7481, metadata !DIExpression()), !dbg !7491
  %tobool24 = icmp eq %struct.rtx_def* %first_set.4, null, !dbg !7525
  br i1 %tobool24, label %cond.true, label %cond.end, !dbg !7525

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 3676, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !7525
  br label %cond.end, !dbg !7525

cond.end:                                         ; preds = %for.end, %cond.true
  %cmp25 = icmp eq %struct.rtx_def* %set.2, null, !dbg !7526
  %spec.select1 = select i1 %cmp25, %struct.rtx_def* %first_set.4, %struct.rtx_def* %set.2, !dbg !7528
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select1, metadata !7481, metadata !DIExpression()), !dbg !7491
  br label %sw.epilog, !dbg !7529

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 3682, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !7530
  br label %sw.epilog, !dbg !7531

sw.epilog:                                        ; preds = %entry, %sw.default, %cond.end
  %set.4 = phi %struct.rtx_def* [ undef, %sw.default ], [ %spec.select1, %cond.end ], [ %3, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set.4, metadata !7481, metadata !DIExpression()), !dbg !7491
  %arrayidx30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set.4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7532
  %13 = bitcast %union.rtunion_def* %arrayidx30 to i32**, !dbg !7532
  %14 = load i32*, i32** %13, align 8, !dbg !7532
  %bf.load32 = load i32, i32* %14, align 8, !dbg !7532
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !7532
  %cmp34 = icmp eq i32 %bf.clear33, 37, !dbg !7532
  %15 = bitcast i32* %14 to %struct.rtx_def*, !dbg !7534
  br i1 %cmp34, label %if.then35, label %if.else52, !dbg !7534

if.then35:                                        ; preds = %sw.epilog
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !7535
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !7484, metadata !DIExpression()), !dbg !7491
  %call44 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx39, %struct.rtx_def* %0, i8 zeroext 0) #6, !dbg !7537
  %tobool45 = icmp eq i8 %call44, 0, !dbg !7537
  br i1 %tobool45, label %if.else, label %if.then46, !dbg !7539

if.then46:                                        ; preds = %if.then35
  %call47 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %15, %struct.rtx_def* %0) #6, !dbg !7540
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call47, metadata !7483, metadata !DIExpression()), !dbg !7491
  %call48 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call47, %struct.rtx_def* %insn) #6, !dbg !7542
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call48, metadata !7483, metadata !DIExpression()), !dbg !7491
  br label %if.end69, !dbg !7543

if.else:                                          ; preds = %if.then35
  %call49 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %0, %struct.rtx_def* %15) #6, !dbg !7544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !7483, metadata !DIExpression()), !dbg !7491
  %call50 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call49, %struct.rtx_def* %insn) #6, !dbg !7546
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !7483, metadata !DIExpression()), !dbg !7491
  br label %if.end69

if.else52:                                        ; preds = %sw.epilog
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set.4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7547
  %rt_rtx56 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !7547
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !7547
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !7484, metadata !DIExpression()), !dbg !7491
  %call57 = tail call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %0, %struct.rtx_def* %17) #6, !dbg !7549
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call57, metadata !7483, metadata !DIExpression()), !dbg !7491
  %call62 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx56, %struct.rtx_def* %0, i8 zeroext 0) #6, !dbg !7550
  %tobool63 = icmp eq i8 %call62, 0, !dbg !7550
  br i1 %tobool63, label %if.else66, label %if.then64, !dbg !7552

if.then64:                                        ; preds = %if.else52
  %call65 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call57, %struct.rtx_def* %insn) #6, !dbg !7553
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !7483, metadata !DIExpression()), !dbg !7491
  br label %if.end69, !dbg !7554

if.else66:                                        ; preds = %if.else52
  %call67 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call57, %struct.rtx_def* %insn) #6, !dbg !7555
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call67, metadata !7483, metadata !DIExpression()), !dbg !7491
  br label %if.end69

if.end69:                                         ; preds = %if.then64, %if.else66, %if.then46, %if.else
  %new_insn.2 = phi %struct.rtx_def* [ %call48, %if.then46 ], [ %call50, %if.else ], [ %call65, %if.then64 ], [ %call67, %if.else66 ], !dbg !7556
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_insn.2, metadata !7483, metadata !DIExpression()), !dbg !7491
  %18 = load i32, i32* @gcse_create_count, align 4, !dbg !7557
  %inc70 = add nsw i32 %18, 1, !dbg !7557
  store i32 %inc70, i32* @gcse_create_count, align 4, !dbg !7557
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7558
  %tobool71 = icmp eq %struct._IO_FILE* %19, null, !dbg !7558
  br i1 %tobool71, label %if.end84, label %if.then72, !dbg !7560

if.then72:                                        ; preds = %if.end69
  %arrayidx75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !7561
  %rt_bb = bitcast %struct.object_block** %arrayidx75 to %struct.basic_block_def**, !dbg !7561
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7561
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i64 0, i32 9, !dbg !7562
  %21 = load i32, i32* %index, align 8, !dbg !7562
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %new_insn.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7563
  %rt_int = bitcast %union.rtunion_def* %arrayidx78 to i32*, !dbg !7563
  %22 = load i32, i32* %rt_int, align 8, !dbg !7563
  %arrayidx81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7564
  %rt_int82 = bitcast %union.rtunion_def* %arrayidx81 to i32*, !dbg !7564
  %23 = load i32, i32* %rt_int82, align 8, !dbg !7564
  %call83 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.46, i64 0, i64 0), i32 %21, i32 %22, i32 %1, i32 %23, i32 %call) #6, !dbg !7565
  br label %if.end84, !dbg !7565

if.end84:                                         ; preds = %if.end69, %if.then72
  ret void, !dbg !7566
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @pre_expr_reaches_here_p_work(%struct.basic_block_def* %occr_bb, %struct.expr* %expr, %struct.basic_block_def* %bb, i8* %visited) unnamed_addr #4 !dbg !7567 {
entry:
  %pred = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %occr_bb, metadata !7571, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.value(metadata %struct.expr* %expr, metadata !7572, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7573, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.value(metadata i8* %visited, metadata !7574, metadata !DIExpression()), !dbg !7581
  %0 = bitcast %struct.edge_def** %pred to i8*, !dbg !7582
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7582
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7583
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7583
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7584
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7584
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7584
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !7584
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7584
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7584
  store i32 %4, i32* %3, align 8, !dbg !7584
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7584
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7584
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !7584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7584
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7584
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7585
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7585
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %expr, i64 0, i32 1, !dbg !7586
  br label %for.cond, !dbg !7584

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %7, align 8, !dbg !7589
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !7589
  call void @llvm.dbg.value(metadata %struct.edge_def** %pred, metadata !7575, metadata !DIExpression(DW_OP_deref)), !dbg !7581
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %pred) #7, !dbg !7589
  %tobool = icmp eq i8 %call1, 0, !dbg !7584
  br i1 %tobool, label %cleanup48, label %for.body, !dbg !7584

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !7590
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !7575, metadata !DIExpression()), !dbg !7581
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 0, !dbg !7591
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7591
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !7577, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !7575, metadata !DIExpression()), !dbg !7581
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7593
  %cfg = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !7593
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7593
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 0, !dbg !7593
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7593
  %cmp = icmp eq %struct.basic_block_def* %12, %15, !dbg !7594
  br i1 %cmp, label %if.end47, label %lor.lhs.false, !dbg !7595

lor.lhs.false:                                    ; preds = %for.body
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !7596
  %16 = load i32, i32* %index, align 8, !dbg !7596
  %idxprom = sext i32 %16 to i64, !dbg !7597
  %arrayidx = getelementptr inbounds i8, i8* %visited, i64 %idxprom, !dbg !7597
  %17 = load i8, i8* %arrayidx, align 1, !dbg !7597
  %tobool3 = icmp eq i8 %17, 0, !dbg !7597
  br i1 %tobool3, label %if.else, label %if.end47, !dbg !7598

if.else:                                          ; preds = %lor.lhs.false
  %18 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @comp, align 8, !dbg !7599
  %arrayidx6 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %18, i64 %idxprom, !dbg !7599
  %19 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx6, align 8, !dbg !7599
  %20 = load i32, i32* %bitmap_index, align 8, !dbg !7599
  %div = lshr i32 %20, 6, !dbg !7599
  %idxprom7 = zext i32 %div to i64, !dbg !7599
  %arrayidx8 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %19, i64 0, i32 3, i64 %idxprom7, !dbg !7599
  %21 = load i64, i64* %arrayidx8, align 8, !dbg !7599
  %rem = and i32 %20, 63, !dbg !7599
  %sh_prom = zext i32 %rem to i64, !dbg !7599
  %22 = shl i64 1, %sh_prom, !dbg !7599
  %23 = and i64 %21, %22, !dbg !7599
  %tobool10 = icmp eq i64 %23, 0, !dbg !7599
  br i1 %tobool10, label %if.else18, label %if.then11, !dbg !7600

if.then11:                                        ; preds = %if.else
  %cmp12 = icmp eq %struct.basic_block_def* %12, %occr_bb, !dbg !7601
  br i1 %cmp12, label %cleanup, label %if.end, !dbg !7604

if.end:                                           ; preds = %if.then11
  store i8 1, i8* %arrayidx, align 1, !dbg !7605
  br label %if.end47, !dbg !7606

if.else18:                                        ; preds = %if.else
  %24 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transp, align 8, !dbg !7607
  %arrayidx21 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %24, i64 %idxprom, !dbg !7607
  %25 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx21, align 8, !dbg !7607
  %arrayidx26 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %25, i64 0, i32 3, i64 %idxprom7, !dbg !7607
  %26 = load i64, i64* %arrayidx26, align 8, !dbg !7607
  %27 = and i64 %26, %22, !dbg !7607
  %tobool32 = icmp eq i64 %27, 0, !dbg !7607
  store i8 1, i8* %arrayidx, align 1, !dbg !7609
  br i1 %tobool32, label %if.end47, label %if.else37, !dbg !7610

if.else37:                                        ; preds = %if.else18
  %call41 = call fastcc i32 @pre_expr_reaches_here_p_work(%struct.basic_block_def* %occr_bb, %struct.expr* %expr, %struct.basic_block_def* %12, i8* %visited) #7, !dbg !7611
  %tobool42 = icmp eq i32 %call41, 0, !dbg !7611
  br i1 %tobool42, label %if.end47, label %cleanup, !dbg !7614

if.end47:                                         ; preds = %if.else37, %if.else18, %lor.lhs.false, %if.end, %for.body
  br label %cleanup, !dbg !7615

cleanup:                                          ; preds = %if.else37, %if.then11, %if.end47
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end47 ], [ false, %if.then11 ], [ false, %if.else37 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup48

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7576, metadata !DIExpression(DW_OP_deref)), !dbg !7581
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7589
  br label %for.cond, !dbg !7589, !llvm.loop !7616

cleanup48:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi i32 [ 1, %cleanup ], [ 0, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7618
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7618
  ret i32 %retval.2, !dbg !7618
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #1

declare dso_local zeroext i8 @optimize_function_for_size_p(%struct.function*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @one_code_hoisting_pass() unnamed_addr #4 !dbg !7619 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !7621, metadata !DIExpression()), !dbg !7622
  store i32 0, i32* @gcse_subst_count, align 4, !dbg !7623
  store i32 0, i32* @gcse_create_count, align 4, !dbg !7624
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7625
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7625
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7625
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !7625
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !7625
  %cmp = icmp slt i32 %2, 4, !dbg !7627
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !7628

lor.lhs.false:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_too_expensive(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i64 0, i64 0)) #7, !dbg !7629
  %tobool = icmp eq i8 %call, 0, !dbg !7629
  br i1 %tobool, label %if.end, label %cleanup, !dbg !7630

if.end:                                           ; preds = %lor.lhs.false
  tail call void @init_alias_analysis() #6, !dbg !7631
  store i32 0, i32* @bytes_used, align 4, !dbg !7632
  %call1 = tail call i32 @_obstack_begin(%struct.obstack* nonnull @gcse_obstack, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !7633
  tail call fastcc void @alloc_gcse_mem() #7, !dbg !7634
  tail call fastcc void @alloc_hash_table(%struct.hash_table_d* nonnull @expr_hash_table, i32 0) #7, !dbg !7635
  tail call fastcc void @compute_hash_table(%struct.hash_table_d* nonnull @expr_hash_table) #7, !dbg !7636
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7637
  %tobool2 = icmp eq %struct._IO_FILE* %3, null, !dbg !7637
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7639

if.then3:                                         ; preds = %if.end
  tail call fastcc void @dump_hash_table(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48, i64 0, i64 0), %struct.hash_table_d* nonnull @expr_hash_table) #7, !dbg !7640
  br label %if.end4, !dbg !7640

if.end4:                                          ; preds = %if.end, %if.then3
  %4 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 2), align 4, !dbg !7641
  %cmp5 = icmp eq i32 %4, 0, !dbg !7643
  br i1 %cmp5, label %if.end11, label %if.then7, !dbg !7644

if.then7:                                         ; preds = %if.end4
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7645
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !7645
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !7645
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 5, !dbg !7645
  %7 = load i32, i32* %x_last_basic_block, align 8, !dbg !7645
  tail call fastcc void @alloc_code_hoist_mem(i32 %7, i32 %4) #7, !dbg !7647
  tail call fastcc void @compute_code_hoist_data() #7, !dbg !7648
  %call10 = tail call fastcc i32 @hoist_code() #7, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %call10, metadata !7621, metadata !DIExpression()), !dbg !7622
  tail call fastcc void @free_code_hoist_mem() #7, !dbg !7650
  br label %if.end11, !dbg !7651

if.end11:                                         ; preds = %if.end4, %if.then7
  %changed.0 = phi i32 [ %call10, %if.then7 ], [ 0, %if.end4 ], !dbg !7622
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !7621, metadata !DIExpression()), !dbg !7622
  tail call fastcc void @free_hash_table(%struct.hash_table_d* nonnull @expr_hash_table) #7, !dbg !7652
  tail call fastcc void @free_gcse_mem() #7, !dbg !7653
  %8 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 1) to i64*), align 8, !dbg !7654
  %sub.ptr.sub = sub i64 0, %8, !dbg !7654
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 5), align 8, !dbg !7654
  %cmp12 = icmp sgt i64 %sub.ptr.sub, 0, !dbg !7654
  %9 = inttoptr i64 %8 to i8*, !dbg !7654
  br i1 %cmp12, label %land.lhs.true, label %cond.false, !dbg !7654

land.lhs.true:                                    ; preds = %if.end11
  %10 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 4) to i64*), align 8, !dbg !7654
  %sub.ptr.sub15 = sub i64 %10, %8, !dbg !7654
  %cmp16 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub, !dbg !7654
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !7654

cond.true:                                        ; preds = %land.lhs.true
  %add.ptr18 = getelementptr inbounds i8, i8* %9, i64 %sub.ptr.sub, !dbg !7654
  store i8* %add.ptr18, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 2), align 8, !dbg !7654
  store i8* %add.ptr18, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !dbg !7654
  br label %cond.end, !dbg !7654

cond.false:                                       ; preds = %land.lhs.true, %if.end11
  %add.ptr19 = getelementptr inbounds i8, i8* %9, i64 %sub.ptr.sub, !dbg !7654
  tail call void @obstack_free(%struct.obstack* nonnull @gcse_obstack, i8* %add.ptr19) #6, !dbg !7654
  br label %cond.end, !dbg !7654

cond.end:                                         ; preds = %cond.false, %cond.true
  tail call void @end_alias_analysis() #6, !dbg !7655
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7656
  %tobool20 = icmp eq %struct._IO_FILE* %11, null, !dbg !7656
  br i1 %tobool20, label %cleanup, label %if.then21, !dbg !7658

if.then21:                                        ; preds = %cond.end
  %call22 = tail call i8* @current_function_name() #6, !dbg !7659
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7661
  %cfg24 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !7661
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg24, align 8, !dbg !7661
  %x_n_basic_blocks25 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 3, !dbg !7661
  %14 = load i32, i32* %x_n_basic_blocks25, align 8, !dbg !7661
  %15 = load i32, i32* @bytes_used, align 4, !dbg !7662
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.49, i64 0, i64 0), i8* %call22, i32 %14, i32 %15) #6, !dbg !7663
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7664
  %17 = load i32, i32* @gcse_subst_count, align 4, !dbg !7665
  %18 = load i32, i32* @gcse_create_count, align 4, !dbg !7666
  %call27 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i32 %17, i32 %18) #6, !dbg !7667
  br label %cleanup, !dbg !7668

cleanup:                                          ; preds = %cond.end, %lor.lhs.false, %if.then21, %entry
  %retval.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %entry ], [ %changed.0, %if.then21 ], [ %changed.0, %cond.end ], !dbg !7622
  ret i32 %retval.0, !dbg !7669
}

; Function Attrs: nounwind uwtable
define internal fastcc void @alloc_code_hoist_mem(i32 %n_blocks, i32 %n_exprs) unnamed_addr #4 !dbg !7670 {
entry:
  call void @llvm.dbg.value(metadata i32 %n_blocks, metadata !7672, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i32 %n_exprs, metadata !7673, metadata !DIExpression()), !dbg !7674
  %call = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !7675
  store %struct.simple_bitmap_def** %call, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !7676
  %call1 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !7677
  store %struct.simple_bitmap_def** %call1, %struct.simple_bitmap_def*** @transp, align 8, !dbg !7678
  %call2 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !7679
  store %struct.simple_bitmap_def** %call2, %struct.simple_bitmap_def*** @comp, align 8, !dbg !7680
  %call3 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !7681
  store %struct.simple_bitmap_def** %call3, %struct.simple_bitmap_def*** @hoist_vbein, align 8, !dbg !7682
  %call4 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !7683
  store %struct.simple_bitmap_def** %call4, %struct.simple_bitmap_def*** @hoist_vbeout, align 8, !dbg !7684
  %call5 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !7685
  store %struct.simple_bitmap_def** %call5, %struct.simple_bitmap_def*** @hoist_exprs, align 8, !dbg !7686
  %call6 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %n_blocks, i32 %n_exprs) #6, !dbg !7687
  store %struct.simple_bitmap_def** %call6, %struct.simple_bitmap_def*** @transpout, align 8, !dbg !7688
  ret void, !dbg !7689
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_code_hoist_data() unnamed_addr #4 !dbg !7690 {
entry:
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transp, align 8, !dbg !7691
  %1 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @comp, align 8, !dbg !7692
  %2 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !7693
  tail call fastcc void @compute_local_properties(%struct.simple_bitmap_def** %0, %struct.simple_bitmap_def** %1, %struct.simple_bitmap_def** %2, %struct.hash_table_d* nonnull @expr_hash_table) #7, !dbg !7694
  tail call fastcc void @compute_transpout() #7, !dbg !7695
  tail call fastcc void @compute_code_hoist_vbeinout() #7, !dbg !7696
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !7697
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7698
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !7698
  br i1 %tobool, label %if.end, label %if.then, !dbg !7700

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !7701
  br label %if.end, !dbg !7701

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7702
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @hoist_code() unnamed_addr #4 !dbg !7703 {
entry:
  %dominated = alloca %struct.basic_block_def*, align 8
  %domby = alloca %struct.VEC_basic_block_heap*, align 8
  %0 = bitcast %struct.basic_block_def** %dominated to i8*, !dbg !7741
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7741
  %1 = bitcast %struct.VEC_basic_block_heap** %domby to i8*, !dbg !7742
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7742
  call void @llvm.dbg.value(metadata i32 0, metadata !7717, metadata !DIExpression()), !dbg !7743
  %2 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_exprs, align 8, !dbg !7744
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7745
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !7745
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7745
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 5, !dbg !7745
  %5 = load i32, i32* %x_last_basic_block, align 8, !dbg !7745
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %2, i32 %5) #6, !dbg !7746
  %6 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 2), align 4, !dbg !7747
  %conv = zext i32 %6 to i64, !dbg !7747
  %call = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !7747
  %7 = bitcast i8* %call to %struct.expr**, !dbg !7747
  call void @llvm.dbg.value(metadata %struct.expr** %7, metadata !7715, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 0, metadata !7713, metadata !DIExpression()), !dbg !7743
  br label %for.cond, !dbg !7748

for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.inc8 ], [ 0, %entry ], !dbg !7750
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !7713, metadata !DIExpression()), !dbg !7743
  %8 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 1), align 8, !dbg !7751
  %9 = zext i32 %8 to i64, !dbg !7753
  %cmp = icmp ult i64 %indvars.iv8, %9, !dbg !7753
  br i1 %cmp, label %for.body, label %for.end9, !dbg !7754

for.body:                                         ; preds = %for.cond
  %10 = load %struct.expr**, %struct.expr*** getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 0), align 8, !dbg !7755
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %10, i64 %indvars.iv8, !dbg !7757
  br label %for.cond2, !dbg !7758

for.cond2:                                        ; preds = %for.body5, %for.body
  %expr.0.in = phi %struct.expr** [ %arrayidx, %for.body ], [ %next_same_hash, %for.body5 ]
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !7759
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !7716, metadata !DIExpression()), !dbg !7743
  %cmp3 = icmp eq %struct.expr* %expr.0, null, !dbg !7760
  br i1 %cmp3, label %for.inc8, label %for.body5, !dbg !7762

for.body5:                                        ; preds = %for.cond2
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 1, !dbg !7763
  %11 = load i32, i32* %bitmap_index, align 8, !dbg !7763
  %idxprom6 = sext i32 %11 to i64, !dbg !7764
  %arrayidx7 = getelementptr inbounds %struct.expr*, %struct.expr** %7, i64 %idxprom6, !dbg !7764
  store %struct.expr* %expr.0, %struct.expr** %arrayidx7, align 8, !dbg !7765
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !7766
  br label %for.cond2, !dbg !7767, !llvm.loop !7768

for.inc8:                                         ; preds = %for.cond2
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !7770
  br label %for.cond, !dbg !7771, !llvm.loop !7772

for.end9:                                         ; preds = %for.cond
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7774
  %cfg11 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !7774
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !7774
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 0, !dbg !7774
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7774
  br label %for.cond12, !dbg !7774

for.cond12:                                       ; preds = %cleanup, %for.end9
  %15 = phi %struct.control_flow_graph* [ %13, %for.end9 ], [ %.pre2, %cleanup ], !dbg !7775
  %changed.0 = phi i32 [ 0, %for.end9 ], [ %changed.6, %cleanup ], !dbg !7776
  %.pn = phi %struct.basic_block_def* [ %14, %for.end9 ], [ %bb.0, %cleanup ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !7777
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7777
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7705, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !7717, metadata !DIExpression()), !dbg !7743
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 1, !dbg !7775
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7775
  %cmp15 = icmp eq %struct.basic_block_def* %bb.0, %16, !dbg !7775
  br i1 %cmp15, label %for.end231, label %for.body17, !dbg !7774

for.body17:                                       ; preds = %for.cond12
  call void @llvm.dbg.value(metadata i32 0, metadata !7718, metadata !DIExpression()), !dbg !7778
  %call18 = call %struct.VEC_basic_block_heap* @get_dominated_by(i32 1, %struct.basic_block_def* %bb.0) #6, !dbg !7779
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call18, metadata !7707, metadata !DIExpression()), !dbg !7743
  store %struct.VEC_basic_block_heap* %call18, %struct.VEC_basic_block_heap** %domby, align 8, !dbg !7780
  call void @llvm.dbg.value(metadata i32 0, metadata !7713, metadata !DIExpression()), !dbg !7743
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !7781
  br label %for.cond19, !dbg !7782

for.cond19:                                       ; preds = %for.inc80, %for.body17
  %found.0 = phi i32 [ 0, %for.body17 ], [ %found.2, %for.inc80 ], !dbg !7778
  %i.1 = phi i32 [ 0, %for.body17 ], [ %inc81, %for.inc80 ], !dbg !7783
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !7713, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %found.0, metadata !7718, metadata !DIExpression()), !dbg !7778
  %17 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_vbeout, align 8, !dbg !7784
  %18 = load i32, i32* %index, align 8, !dbg !7785
  %idxprom20 = sext i32 %18 to i64, !dbg !7784
  %arrayidx21 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %17, i64 %idxprom20, !dbg !7784
  %19 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx21, align 8, !dbg !7784
  %n_bits = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %19, i64 0, i32 1, !dbg !7786
  %20 = load i32, i32* %n_bits, align 8, !dbg !7786
  %cmp22 = icmp ult i32 %i.1, %20, !dbg !7787
  br i1 %cmp22, label %for.body24, label %for.end82, !dbg !7788

for.body24:                                       ; preds = %for.cond19
  call void @llvm.dbg.value(metadata i32 0, metadata !7723, metadata !DIExpression()), !dbg !7789
  %div = lshr i32 %i.1, 6, !dbg !7790
  %idxprom28 = zext i32 %div to i64, !dbg !7790
  %arrayidx29 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %19, i64 0, i32 3, i64 %idxprom28, !dbg !7790
  %21 = load i64, i64* %arrayidx29, align 8, !dbg !7790
  %rem = and i32 %i.1, 63, !dbg !7790
  %sh_prom = zext i32 %rem to i64, !dbg !7790
  %22 = shl i64 1, %sh_prom, !dbg !7790
  %23 = and i64 %21, %22, !dbg !7790
  %tobool = icmp eq i64 %23, 0, !dbg !7790
  br i1 %tobool, label %for.inc80, label %land.lhs.true, !dbg !7792

land.lhs.true:                                    ; preds = %for.body24
  %24 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transpout, align 8, !dbg !7793
  %arrayidx32 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %24, i64 %idxprom20, !dbg !7793
  %25 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx32, align 8, !dbg !7793
  %arrayidx36 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %25, i64 0, i32 3, i64 %idxprom28, !dbg !7793
  %26 = load i64, i64* %arrayidx36, align 8, !dbg !7793
  %27 = and i64 %26, %22, !dbg !7793
  %tobool41 = icmp eq i64 %27, 0, !dbg !7793
  br i1 %tobool41, label %for.inc80, label %for.cond42.preheader, !dbg !7794

for.cond42.preheader:                             ; preds = %land.lhs.true
  br label %for.cond42, !dbg !7795

for.cond42:                                       ; preds = %for.cond42.preheader, %for.inc69
  %hoistable.0 = phi i32 [ %hoistable.2, %for.inc69 ], [ 0, %for.cond42.preheader ], !dbg !7798
  %j.0 = phi i32 [ %inc70, %for.inc69 ], [ 0, %for.cond42.preheader ], !dbg !7799
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7714, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %hoistable.0, metadata !7723, metadata !DIExpression()), !dbg !7789
  %28 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %domby, align 8, !dbg !7800
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %28, metadata !7707, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %28, metadata !7707, metadata !DIExpression()), !dbg !7743
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %28, i64 0, i32 0, !dbg !7800
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %dominated, metadata !7706, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  %call44 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base, i32 %j.0, %struct.basic_block_def** nonnull %dominated) #7, !dbg !7800
  %tobool45 = icmp eq i32 %call44, 0, !dbg !7795
  br i1 %tobool45, label %for.end71, label %for.body46, !dbg !7795

for.body46:                                       ; preds = %for.cond42
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %dominated, align 8, !dbg !7802
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %29, metadata !7706, metadata !DIExpression()), !dbg !7743
  %cmp47 = icmp eq %struct.basic_block_def* %bb.0, %29, !dbg !7805
  br i1 %cmp47, label %for.inc69, label %if.end, !dbg !7806

if.end:                                           ; preds = %for.body46
  %30 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !7807
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %29, metadata !7706, metadata !DIExpression()), !dbg !7743
  %index50 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 9, !dbg !7807
  %31 = load i32, i32* %index50, align 8, !dbg !7807
  %idxprom51 = sext i32 %31 to i64, !dbg !7807
  %arrayidx52 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %30, i64 %idxprom51, !dbg !7807
  %32 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx52, align 8, !dbg !7807
  %arrayidx56 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %32, i64 0, i32 3, i64 %idxprom28, !dbg !7807
  %33 = load i64, i64* %arrayidx56, align 8, !dbg !7807
  %34 = and i64 %33, %22, !dbg !7807
  %tobool61 = icmp eq i64 %34, 0, !dbg !7807
  br i1 %tobool61, label %for.inc69, label %if.end63, !dbg !7809

if.end63:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %29, metadata !7706, metadata !DIExpression()), !dbg !7743
  %call64 = call fastcc i32 @hoist_expr_reaches_here_p(%struct.basic_block_def* %bb.0, i32 %i.1, %struct.basic_block_def* %29, i8* null) #7, !dbg !7810
  %tobool65 = icmp ne i32 %call64, 0, !dbg !7810
  %inc67 = zext i1 %tobool65 to i32, !dbg !7812
  %spec.select = add nsw i32 %hoistable.0, %inc67, !dbg !7812
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7723, metadata !DIExpression()), !dbg !7789
  br label %for.inc69, !dbg !7813

for.inc69:                                        ; preds = %if.end, %for.body46, %if.end63
  %hoistable.2 = phi i32 [ %spec.select, %if.end63 ], [ %hoistable.0, %for.body46 ], [ %hoistable.0, %if.end ], !dbg !7789
  call void @llvm.dbg.value(metadata i32 %hoistable.2, metadata !7723, metadata !DIExpression()), !dbg !7789
  %inc70 = add i32 %j.0, 1, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %inc70, metadata !7714, metadata !DIExpression()), !dbg !7743
  br label %for.cond42, !dbg !7815, !llvm.loop !7816

for.end71:                                        ; preds = %for.cond42
  %hoistable.0.lcssa = phi i32 [ %hoistable.0, %for.cond42 ], !dbg !7798
  call void @llvm.dbg.value(metadata i32 %hoistable.0.lcssa, metadata !7723, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.value(metadata i32 %hoistable.0.lcssa, metadata !7723, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.value(metadata i32 %hoistable.0.lcssa, metadata !7723, metadata !DIExpression()), !dbg !7789
  %cmp72 = icmp sgt i32 %hoistable.0.lcssa, 1, !dbg !7818
  br i1 %cmp72, label %if.then74, label %for.inc80, !dbg !7820

if.then74:                                        ; preds = %for.end71
  %35 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_exprs, align 8, !dbg !7821
  %36 = load i32, i32* %index, align 8, !dbg !7823
  %idxprom76 = sext i32 %36 to i64, !dbg !7821
  %arrayidx77 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %35, i64 %idxprom76, !dbg !7821
  %37 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx77, align 8, !dbg !7821
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %37, i32 %i.1) #7, !dbg !7824
  call void @llvm.dbg.value(metadata i32 1, metadata !7718, metadata !DIExpression()), !dbg !7778
  br label %for.inc80, !dbg !7825

for.inc80:                                        ; preds = %land.lhs.true, %for.body24, %if.then74, %for.end71
  %found.2 = phi i32 [ %found.0, %land.lhs.true ], [ %found.0, %for.body24 ], [ 1, %if.then74 ], [ %found.0, %for.end71 ], !dbg !7778
  call void @llvm.dbg.value(metadata i32 %found.2, metadata !7718, metadata !DIExpression()), !dbg !7778
  %inc81 = add i32 %i.1, 1, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %inc81, metadata !7713, metadata !DIExpression()), !dbg !7743
  br label %for.cond19, !dbg !7827, !llvm.loop !7828

for.end82:                                        ; preds = %for.cond19
  %found.0.lcssa = phi i32 [ %found.0, %for.cond19 ], !dbg !7778
  %.lcssa = phi i32 [ %18, %for.cond19 ], !dbg !7785
  call void @llvm.dbg.value(metadata i32 %found.0.lcssa, metadata !7718, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %found.0.lcssa, metadata !7718, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %found.0.lcssa, metadata !7718, metadata !DIExpression()), !dbg !7778
  %tobool83 = icmp eq i32 %found.0.lcssa, 0, !dbg !7830
  br i1 %tobool83, label %if.then84, label %for.cond86.preheader, !dbg !7832

for.cond86.preheader:                             ; preds = %for.end82
  br label %for.cond86, !dbg !7833

if.then84:                                        ; preds = %for.end82
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %domby, metadata !7707, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %domby) #7, !dbg !7834
  br label %cleanup, !dbg !7836

for.cond86:                                       ; preds = %for.cond86.preheader, %for.inc225
  %indvars.iv = phi i64 [ 0, %for.cond86.preheader ], [ %indvars.iv.next, %for.inc225 ]
  %.pre35 = phi i32 [ %.lcssa, %for.cond86.preheader ], [ %.pre3, %for.inc225 ]
  %38 = phi i32 [ %.lcssa, %for.cond86.preheader ], [ %.pre3, %for.inc225 ], !dbg !7837
  %changed.1 = phi i32 [ %changed.0, %for.cond86.preheader ], [ %changed.5, %for.inc225 ], !dbg !7776
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7713, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.1, metadata !7717, metadata !DIExpression()), !dbg !7743
  %39 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_exprs, align 8, !dbg !7838
  %idxprom88 = sext i32 %38 to i64, !dbg !7838
  %arrayidx89 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %39, i64 %idxprom88, !dbg !7838
  %40 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx89, align 8, !dbg !7838
  %n_bits90 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %40, i64 0, i32 1, !dbg !7839
  %41 = load i32, i32* %n_bits90, align 8, !dbg !7839
  %42 = zext i32 %41 to i64, !dbg !7840
  %cmp91 = icmp ult i64 %indvars.iv, %42, !dbg !7840
  br i1 %cmp91, label %for.body93, label %for.end227, !dbg !7833

for.body93:                                       ; preds = %for.cond86
  call void @llvm.dbg.value(metadata i32 0, metadata !7722, metadata !DIExpression()), !dbg !7778
  %div98 = lshr i64 %indvars.iv, 6, !dbg !7841
  %idxprom99 = and i64 %div98, 67108863, !dbg !7841
  %arrayidx100 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %40, i64 0, i32 3, i64 %idxprom99, !dbg !7841
  %43 = load i64, i64* %arrayidx100, align 8, !dbg !7841
  %rem101 = and i64 %indvars.iv, 63, !dbg !7841
  %44 = shl i64 1, %rem101, !dbg !7841
  %45 = and i64 %43, %44, !dbg !7841
  %tobool105 = icmp eq i64 %45, 0, !dbg !7841
  br i1 %tobool105, label %for.inc225, label %for.cond107.preheader, !dbg !7842

for.cond107.preheader:                            ; preds = %for.body93
  %arrayidx140 = getelementptr inbounds %struct.expr*, %struct.expr** %7, i64 %indvars.iv, !dbg !7843
  br label %for.cond107, !dbg !7844

for.cond107:                                      ; preds = %for.cond107.preheader, %for.inc221
  %insn_inserted_p.0 = phi i32 [ %insn_inserted_p.3, %for.inc221 ], [ 0, %for.cond107.preheader ], !dbg !7845
  %changed.2 = phi i32 [ %changed.4, %for.inc221 ], [ %changed.1, %for.cond107.preheader ], !dbg !7776
  %j.1 = phi i32 [ %inc222, %for.inc221 ], [ 0, %for.cond107.preheader ], !dbg !7846
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !7714, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.2, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %insn_inserted_p.0, metadata !7722, metadata !DIExpression()), !dbg !7778
  %46 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %domby, align 8, !dbg !7847
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %46, metadata !7707, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %46, metadata !7707, metadata !DIExpression()), !dbg !7743
  %base110 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %46, i64 0, i32 0, !dbg !7847
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %dominated, metadata !7706, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  %call114 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base110, i32 %j.1, %struct.basic_block_def** nonnull %dominated) #7, !dbg !7847
  %tobool115 = icmp eq i32 %call114, 0, !dbg !7844
  br i1 %tobool115, label %for.inc225.loopexit, label %for.body116, !dbg !7844

for.body116:                                      ; preds = %for.cond107
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %dominated, align 8, !dbg !7848
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %47, metadata !7706, metadata !DIExpression()), !dbg !7743
  %cmp117 = icmp eq %struct.basic_block_def* %bb.0, %47, !dbg !7850
  br i1 %cmp117, label %for.inc221, label %if.end120, !dbg !7851

if.end120:                                        ; preds = %for.body116
  %48 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !7852
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %47, metadata !7706, metadata !DIExpression()), !dbg !7743
  %index121 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %47, i64 0, i32 9, !dbg !7852
  %49 = load i32, i32* %index121, align 8, !dbg !7852
  %idxprom122 = sext i32 %49 to i64, !dbg !7852
  %arrayidx123 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %48, i64 %idxprom122, !dbg !7852
  %50 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx123, align 8, !dbg !7852
  %arrayidx127 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %50, i64 0, i32 3, i64 %idxprom99, !dbg !7852
  %51 = load i64, i64* %arrayidx127, align 8, !dbg !7852
  %52 = and i64 %51, %44, !dbg !7852
  %tobool132 = icmp eq i64 %52, 0, !dbg !7852
  br i1 %tobool132, label %for.inc221, label %if.end134, !dbg !7854

if.end134:                                        ; preds = %if.end120
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %47, metadata !7706, metadata !DIExpression()), !dbg !7743
  %53 = trunc i64 %indvars.iv to i32, !dbg !7855
  %call135 = call fastcc i32 @hoist_expr_reaches_here_p(%struct.basic_block_def* %bb.0, i32 %53, %struct.basic_block_def* %47, i8* null) #7, !dbg !7855
  %tobool136 = icmp eq i32 %call135, 0, !dbg !7855
  br i1 %tobool136, label %for.inc221, label %if.then137, !dbg !7856

if.then137:                                       ; preds = %if.end134
  %54 = load %struct.expr*, %struct.expr** %arrayidx140, align 8, !dbg !7857
  call void @llvm.dbg.value(metadata %struct.expr* %54, metadata !7727, metadata !DIExpression()), !dbg !7843
  %antic_occr = getelementptr inbounds %struct.expr, %struct.expr* %54, i64 0, i32 3, !dbg !7858
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %dominated, align 8, !dbg !7843
  br label %while.cond, !dbg !7859

while.cond:                                       ; preds = %while.body, %if.then137
  %occr.0.in = phi %struct.occr** [ %antic_occr, %if.then137 ], [ %next, %while.body ]
  %occr.0 = load %struct.occr*, %struct.occr** %occr.0.in, align 8, !dbg !7843
  call void @llvm.dbg.value(metadata %struct.occr* %occr.0, metadata !7738, metadata !DIExpression()), !dbg !7843
  %insn141 = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 1, !dbg !7860
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn141, align 8, !dbg !7860
  %arrayidx142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i64 0, i32 1, i32 0, i32 1, !dbg !7860
  %rt_bb = bitcast %struct.object_block** %arrayidx142 to %struct.basic_block_def**, !dbg !7860
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7860
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %55, metadata !7706, metadata !DIExpression()), !dbg !7743
  %cmp143 = icmp ne %struct.basic_block_def* %57, %55, !dbg !7861
  %tobool145 = icmp ne %struct.occr* %occr.0, null, !dbg !7862
  %spec.select1 = and i1 %tobool145, %cmp143, !dbg !7862
  br i1 %spec.select1, label %while.body, label %while.end, !dbg !7859

while.body:                                       ; preds = %while.cond
  %next = getelementptr inbounds %struct.occr, %struct.occr* %occr.0, i64 0, i32 0, !dbg !7863
  br label %while.cond, !dbg !7859, !llvm.loop !7864

while.end:                                        ; preds = %while.cond
  %occr.0.lcssa = phi %struct.occr* [ %occr.0, %while.cond ], !dbg !7843
  %insn141.lcssa = phi %struct.rtx_def** [ %insn141, %while.cond ], !dbg !7860
  %.lcssa10 = phi %struct.rtx_def* [ %56, %while.cond ], !dbg !7860
  %tobool146 = icmp eq %struct.occr* %occr.0.lcssa, null, !dbg !7865
  br i1 %tobool146, label %cond.true147, label %cond.end149, !dbg !7865

cond.true147:                                     ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 4384, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !7865
  %.pre4 = load %struct.rtx_def*, %struct.rtx_def** %insn141.lcssa, align 8, !dbg !7866
  br label %cond.end149, !dbg !7865

cond.end149:                                      ; preds = %while.end, %cond.true147
  %58 = phi %struct.rtx_def* [ %.lcssa10, %while.end ], [ %.pre4, %cond.true147 ], !dbg !7866
  call void @llvm.dbg.value(metadata %struct.rtx_def* %58, metadata !7739, metadata !DIExpression()), !dbg !7843
  %59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i64 0, i32 0, !dbg !7867
  %bf.load = load i32, i32* %59, align 8, !dbg !7867
  %bf.clear = and i32 %bf.load, 65535, !dbg !7867
  %cmp152 = icmp eq i32 %bf.clear, 8, !dbg !7867
  br i1 %cmp152, label %cond.true168, label %lor.lhs.false, !dbg !7867

lor.lhs.false:                                    ; preds = %cond.end149
  %cmp156 = icmp eq i32 %bf.clear, 7, !dbg !7867
  br i1 %cmp156, label %cond.true168, label %lor.lhs.false158, !dbg !7867

lor.lhs.false158:                                 ; preds = %lor.lhs.false
  %cmp161 = icmp eq i32 %bf.clear, 9, !dbg !7867
  br i1 %cmp161, label %cond.true168, label %lor.lhs.false163, !dbg !7867

lor.lhs.false163:                                 ; preds = %lor.lhs.false158
  %cmp166 = icmp eq i32 %bf.clear, 10, !dbg !7867
  br i1 %cmp166, label %cond.true168, label %cond.end190, !dbg !7867

cond.true168:                                     ; preds = %lor.lhs.false163, %lor.lhs.false158, %lor.lhs.false, %cond.end149
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i64 0, i32 1, !dbg !7867
  %60 = getelementptr inbounds %union.u, %union.u* %u169, i64 1, i32 0, i32 0, i64 0, !dbg !7867
  %61 = bitcast %union.rtunion_def* %60 to i32**, !dbg !7867
  %62 = load i32*, i32** %61, align 8, !dbg !7867
  %bf.load172 = load i32, i32* %62, align 8, !dbg !7867
  %bf.clear173 = and i32 %bf.load172, 65535, !dbg !7867
  %cmp174 = icmp eq i32 %bf.clear173, 23, !dbg !7867
  %63 = bitcast i32* %62 to %struct.rtx_def*, !dbg !7867
  br i1 %cmp174, label %cond.end190, label %cond.false181, !dbg !7867

cond.false181:                                    ; preds = %cond.true168
  %call186 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %58, %struct.rtx_def* %63) #6, !dbg !7867
  br label %cond.end190, !dbg !7867

cond.end190:                                      ; preds = %lor.lhs.false163, %cond.false181, %cond.true168
  %cond191 = phi %struct.rtx_def* [ %call186, %cond.false181 ], [ %63, %cond.true168 ], [ null, %lor.lhs.false163 ], !dbg !7867
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond191, metadata !7740, metadata !DIExpression()), !dbg !7843
  %tobool192 = icmp eq %struct.rtx_def* %cond191, null, !dbg !7868
  br i1 %tobool192, label %cond.true193, label %cond.end195, !dbg !7868

cond.true193:                                     ; preds = %cond.end190
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i32 4387, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !7868
  br label %cond.end195, !dbg !7868

cond.end195:                                      ; preds = %cond.end190, %cond.true193
  %reaching_reg = getelementptr inbounds %struct.expr, %struct.expr* %54, i64 0, i32 5, !dbg !7869
  %64 = load %struct.rtx_def*, %struct.rtx_def** %reaching_reg, align 8, !dbg !7869
  %cmp197 = icmp eq %struct.rtx_def* %64, null, !dbg !7871
  br i1 %cmp197, label %if.then199, label %cond.end195.if.end206_crit_edge, !dbg !7872

cond.end195.if.end206_crit_edge:                  ; preds = %cond.end195
  br label %if.end206, !dbg !7872

if.then199:                                       ; preds = %cond.end195
  %arrayidx202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond191, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7873
  %rt_rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**, !dbg !7873
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx203, align 8, !dbg !7873
  %call204 = call %struct.rtx_def* @gen_reg_rtx_and_attrs(%struct.rtx_def* %65) #6, !dbg !7874
  store %struct.rtx_def* %call204, %struct.rtx_def** %reaching_reg, align 8, !dbg !7875
  br label %if.end206, !dbg !7876

if.end206:                                        ; preds = %cond.end195.if.end206_crit_edge, %if.then199
  %66 = phi %struct.rtx_def* [ %call204, %if.then199 ], [ %64, %cond.end195.if.end206_crit_edge ], !dbg !7877
  %arrayidx210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond191, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7878
  %rt_rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**, !dbg !7878
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx211, align 8, !dbg !7878
  %call212 = call fastcc %struct.rtx_def* @gcse_emit_move_after(%struct.rtx_def* %66, %struct.rtx_def* %67, %struct.rtx_def* %58) #7, !dbg !7879
  %call213 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %58) #6, !dbg !7880
  %deleted_p = getelementptr inbounds %struct.occr, %struct.occr* %occr.0.lcssa, i64 0, i32 2, !dbg !7881
  store i8 1, i8* %deleted_p, align 8, !dbg !7882
  call void @llvm.dbg.value(metadata i32 1, metadata !7717, metadata !DIExpression()), !dbg !7743
  %68 = load i32, i32* @gcse_subst_count, align 4, !dbg !7883
  %inc214 = add nsw i32 %68, 1, !dbg !7883
  store i32 %inc214, i32* @gcse_subst_count, align 4, !dbg !7883
  %tobool215 = icmp eq i32 %insn_inserted_p.0, 0, !dbg !7884
  br i1 %tobool215, label %if.then216, label %for.inc221, !dbg !7886

if.then216:                                       ; preds = %if.end206
  %69 = load %struct.expr*, %struct.expr** %arrayidx140, align 8, !dbg !7887
  call fastcc void @insert_insn_end_basic_block(%struct.expr* %69, %struct.basic_block_def* %bb.0, i32 0) #7, !dbg !7889
  call void @llvm.dbg.value(metadata i32 1, metadata !7722, metadata !DIExpression()), !dbg !7778
  br label %for.inc221, !dbg !7890

for.inc221:                                       ; preds = %if.end206, %if.end134, %if.end120, %if.then216, %for.body116
  %insn_inserted_p.3 = phi i32 [ %insn_inserted_p.0, %for.body116 ], [ %insn_inserted_p.0, %if.end120 ], [ %insn_inserted_p.0, %if.end134 ], [ %insn_inserted_p.0, %if.end206 ], [ 1, %if.then216 ], !dbg !7845
  %changed.4 = phi i32 [ %changed.2, %for.body116 ], [ %changed.2, %if.end120 ], [ %changed.2, %if.end134 ], [ 1, %if.end206 ], [ 1, %if.then216 ], !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.4, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %insn_inserted_p.3, metadata !7722, metadata !DIExpression()), !dbg !7778
  %inc222 = add i32 %j.1, 1, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %inc222, metadata !7714, metadata !DIExpression()), !dbg !7743
  br label %for.cond107, !dbg !7892, !llvm.loop !7893

for.inc225.loopexit:                              ; preds = %for.cond107
  %changed.2.lcssa = phi i32 [ %changed.2, %for.cond107 ], !dbg !7776
  call void @llvm.dbg.value(metadata i32 %changed.2.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.2.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.2.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  %.pre3.pre = load i32, i32* %index, align 8, !dbg !7837
  br label %for.inc225, !dbg !7895

for.inc225:                                       ; preds = %for.inc225.loopexit, %for.body93
  %.pre3 = phi i32 [ %.pre35, %for.body93 ], [ %.pre3.pre, %for.inc225.loopexit ], !dbg !7837
  %changed.5 = phi i32 [ %changed.1, %for.body93 ], [ %changed.2.lcssa, %for.inc225.loopexit ], !dbg !7776
  call void @llvm.dbg.value(metadata i32 %changed.5, metadata !7717, metadata !DIExpression()), !dbg !7743
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7895
  br label %for.cond86, !dbg !7896, !llvm.loop !7897

for.end227:                                       ; preds = %for.cond86
  %changed.1.lcssa = phi i32 [ %changed.1, %for.cond86 ], !dbg !7776
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %domby, metadata !7707, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %domby) #7, !dbg !7899
  br label %cleanup, !dbg !7900

cleanup:                                          ; preds = %for.end227, %if.then84
  %changed.6 = phi i32 [ %changed.1.lcssa, %for.end227 ], [ %changed.0, %if.then84 ], !dbg !7776
  call void @llvm.dbg.value(metadata i32 %changed.6, metadata !7717, metadata !DIExpression()), !dbg !7743
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7775
  %cfg14.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !7901
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg14.phi.trans.insert, align 8, !dbg !7775
  br label %for.cond12, !dbg !7775, !llvm.loop !7902

for.end231:                                       ; preds = %for.cond12
  %changed.0.lcssa = phi i32 [ %changed.0, %for.cond12 ], !dbg !7776
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !7717, metadata !DIExpression()), !dbg !7743
  call void @free(i8* %call) #6, !dbg !7904
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7905
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7905
  ret i32 %changed.0.lcssa, !dbg !7906
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_code_hoist_mem() unnamed_addr #4 !dbg !7907 {
entry:
  %0 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @antloc to i8**), align 8, !dbg !7908
  tail call void @free(i8* %0) #6, !dbg !7908
  %1 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @transp to i8**), align 8, !dbg !7909
  tail call void @free(i8* %1) #6, !dbg !7909
  %2 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @comp to i8**), align 8, !dbg !7910
  tail call void @free(i8* %2) #6, !dbg !7910
  %3 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @hoist_vbein to i8**), align 8, !dbg !7911
  tail call void @free(i8* %3) #6, !dbg !7911
  %4 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @hoist_vbeout to i8**), align 8, !dbg !7912
  tail call void @free(i8* %4) #6, !dbg !7912
  %5 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @hoist_exprs to i8**), align 8, !dbg !7913
  tail call void @free(i8* %5) #6, !dbg !7913
  %6 = load i8*, i8** bitcast (%struct.simple_bitmap_def*** @transpout to i8**), align 8, !dbg !7914
  tail call void @free(i8* %6) #6, !dbg !7914
  tail call void @free_dominance_info(i32 1) #6, !dbg !7915
  ret void, !dbg !7916
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_transpout() unnamed_addr #4 !dbg !7917 {
entry:
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transpout, align 8, !dbg !7922
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7923
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !7923
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7923
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 5, !dbg !7923
  %3 = load i32, i32* %x_last_basic_block, align 8, !dbg !7923
  tail call void @sbitmap_vector_ones(%struct.simple_bitmap_def** %0, i32 %3) #6, !dbg !7924
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7925
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !7925
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !7925
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !7925
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7925
  br label %for.cond, !dbg !7925

for.cond:                                         ; preds = %for.inc36, %entry
  %7 = phi %struct.control_flow_graph* [ %5, %entry ], [ %.pre1, %for.inc36 ], !dbg !7927
  %.pn = phi %struct.basic_block_def* [ %6, %entry ], [ %bb.0, %for.inc36 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !7929
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7929
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7919, metadata !DIExpression()), !dbg !7930
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 1, !dbg !7927
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7927
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %8, !dbg !7927
  br i1 %cmp, label %for.end38, label %for.body, !dbg !7925

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !7931
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7931
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7931
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !7931
  %10 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !7931
  %11 = load i32*, i32** %10, align 8, !dbg !7931
  %bf.load = load i32, i32* %11, align 8, !dbg !7931
  %bf.clear = and i32 %bf.load, 65535, !dbg !7931
  %cmp5 = icmp eq i32 %bf.clear, 10, !dbg !7931
  br i1 %cmp5, label %for.cond6.preheader, label %for.inc36, !dbg !7934

for.cond6.preheader:                              ; preds = %for.body
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !7935
  br label %for.cond6, !dbg !7942

for.cond6:                                        ; preds = %for.cond6.preheader, %for.inc34
  %indvars.iv = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next, %for.inc34 ], !dbg !7943
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7920, metadata !DIExpression()), !dbg !7930
  %12 = load i32, i32* getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 1), align 8, !dbg !7944
  %13 = zext i32 %12 to i64, !dbg !7945
  %cmp7 = icmp ult i64 %indvars.iv, %13, !dbg !7945
  br i1 %cmp7, label %for.body8, label %for.inc36.loopexit, !dbg !7942

for.body8:                                        ; preds = %for.cond6
  %14 = load %struct.expr**, %struct.expr*** getelementptr inbounds (%struct.hash_table_d, %struct.hash_table_d* @expr_hash_table, i64 0, i32 0), align 8, !dbg !7946
  %arrayidx = getelementptr inbounds %struct.expr*, %struct.expr** %14, i64 %indvars.iv, !dbg !7947
  br label %for.cond9, !dbg !7948

for.cond9:                                        ; preds = %for.inc, %for.body8
  %expr.0.in = phi %struct.expr** [ %arrayidx, %for.body8 ], [ %next_same_hash, %for.inc ]
  %expr.0 = load %struct.expr*, %struct.expr** %expr.0.in, align 8, !dbg !7949
  call void @llvm.dbg.value(metadata %struct.expr* %expr.0, metadata !7921, metadata !DIExpression()), !dbg !7930
  %tobool = icmp eq %struct.expr* %expr.0, null, !dbg !7950
  br i1 %tobool, label %for.inc34, label %for.body10, !dbg !7950

for.body10:                                       ; preds = %for.cond9
  %15 = bitcast %struct.expr* %expr.0 to i32**, !dbg !7951
  %16 = load i32*, i32** %15, align 8, !dbg !7951
  %bf.load12 = load i32, i32* %16, align 8, !dbg !7951
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !7951
  %cmp14 = icmp eq i32 %bf.clear13, 43, !dbg !7951
  br i1 %cmp14, label %if.then15, label %for.inc, !dbg !7952

if.then15:                                        ; preds = %for.body10
  %arrayidx17 = getelementptr inbounds i32, i32* %16, i64 2, !dbg !7953
  %17 = bitcast i32* %arrayidx17 to i32**, !dbg !7953
  %18 = load i32*, i32** %17, align 8, !dbg !7953
  %bf.load18 = load i32, i32* %18, align 8, !dbg !7953
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !7953
  %cmp20 = icmp eq i32 %bf.clear19, 45, !dbg !7955
  br i1 %cmp20, label %land.lhs.true, label %if.end30, !dbg !7956

land.lhs.true:                                    ; preds = %if.then15
  %bf.clear27 = and i32 %bf.load18, 67108864, !dbg !7957
  %tobool28 = icmp eq i32 %bf.clear27, 0, !dbg !7957
  br i1 %tobool28, label %if.end30, label %for.inc, !dbg !7958

if.end30:                                         ; preds = %land.lhs.true, %if.then15
  %19 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transpout, align 8, !dbg !7959
  %20 = load i32, i32* %index, align 8, !dbg !7960
  %idxprom31 = sext i32 %20 to i64, !dbg !7959
  %arrayidx32 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %19, i64 %idxprom31, !dbg !7959
  %21 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx32, align 8, !dbg !7959
  %bitmap_index = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 1, !dbg !7961
  %22 = load i32, i32* %bitmap_index, align 8, !dbg !7961
  tail call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %21, i32 %22) #7, !dbg !7962
  br label %for.inc, !dbg !7963

for.inc:                                          ; preds = %land.lhs.true, %for.body10, %if.end30
  %next_same_hash = getelementptr inbounds %struct.expr, %struct.expr* %expr.0, i64 0, i32 2, !dbg !7964
  br label %for.cond9, !dbg !7965, !llvm.loop !7966

for.inc34:                                        ; preds = %for.cond9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7968
  br label %for.cond6, !dbg !7969, !llvm.loop !7970

for.inc36.loopexit:                               ; preds = %for.cond6
  br label %for.inc36, !dbg !7927

for.inc36:                                        ; preds = %for.inc36.loopexit, %for.body
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7927
  %cfg4.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !7972
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4.phi.trans.insert, align 8, !dbg !7927
  br label %for.cond, !dbg !7927, !llvm.loop !7973

for.end38:                                        ; preds = %for.cond
  ret void, !dbg !7975
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_code_hoist_vbeinout() unnamed_addr #4 !dbg !7976 {
entry:
  %0 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_vbeout, align 8, !dbg !7981
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7982
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !7982
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7982
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 5, !dbg !7982
  %3 = load i32, i32* %x_last_basic_block, align 8, !dbg !7982
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %0, i32 %3) #6, !dbg !7983
  %4 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_vbein, align 8, !dbg !7984
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7985
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !7985
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !7985
  %x_last_basic_block3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 5, !dbg !7985
  %7 = load i32, i32* %x_last_basic_block3, align 8, !dbg !7985
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %4, i32 %7) #6, !dbg !7986
  call void @llvm.dbg.value(metadata i32 0, metadata !7979, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 1, metadata !7978, metadata !DIExpression()), !dbg !7987
  br label %while.cond, !dbg !7988

while.cond:                                       ; preds = %for.end, %entry
  %passes.0 = phi i32 [ 0, %entry ], [ %inc, %for.end ], !dbg !7987
  %changed.0 = phi i32 [ 1, %entry ], [ %changed.1.lcssa, %for.end ], !dbg !7987
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !7978, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 %passes.0, metadata !7979, metadata !DIExpression()), !dbg !7987
  %tobool = icmp eq i32 %changed.0, 0, !dbg !7988
  br i1 %tobool, label %while.end, label %while.body, !dbg !7988

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !7978, metadata !DIExpression()), !dbg !7987
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7989
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !7989
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !7989
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !7989
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7989
  br label %for.cond, !dbg !7989

for.cond:                                         ; preds = %if.end, %while.body
  %11 = phi %struct.control_flow_graph* [ %9, %while.body ], [ %.pre1, %if.end ], !dbg !7992
  %.pn = phi %struct.basic_block_def* [ %10, %while.body ], [ %bb.0, %if.end ]
  %changed.1 = phi i32 [ 0, %while.body ], [ %or, %if.end ], !dbg !7994
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 5, !dbg !7995
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7995
  call void @llvm.dbg.value(metadata i32 %changed.1, metadata !7978, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7980, metadata !DIExpression()), !dbg !7987
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 0, !dbg !7992
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7992
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %12, !dbg !7992
  br i1 %cmp, label %for.end, label %for.body, !dbg !7989

for.body:                                         ; preds = %for.cond
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !7996
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !7996
  %x_exit_block_ptr10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 1, !dbg !7999
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr10, align 8, !dbg !7999
  %cmp11 = icmp eq %struct.basic_block_def* %13, %14, !dbg !8000
  br i1 %cmp11, label %if.end, label %if.then, !dbg !8001

if.then:                                          ; preds = %for.body
  %15 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_vbeout, align 8, !dbg !8002
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !8003
  %16 = load i32, i32* %index, align 8, !dbg !8003
  %idxprom = sext i32 %16 to i64, !dbg !8002
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %15, i64 %idxprom, !dbg !8002
  %17 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx, align 8, !dbg !8002
  %18 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_vbein, align 8, !dbg !8004
  tail call void @sbitmap_intersection_of_succs(%struct.simple_bitmap_def* %17, %struct.simple_bitmap_def** %18, i32 %16) #6, !dbg !8005
  br label %if.end, !dbg !8005

if.end:                                           ; preds = %for.body, %if.then
  %19 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_vbein, align 8, !dbg !8006
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !8007
  %20 = load i32, i32* %index13, align 8, !dbg !8007
  %idxprom14 = sext i32 %20 to i64, !dbg !8006
  %arrayidx15 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %19, i64 %idxprom14, !dbg !8006
  %21 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx15, align 8, !dbg !8006
  %22 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @antloc, align 8, !dbg !8008
  %arrayidx18 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %22, i64 %idxprom14, !dbg !8008
  %23 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx18, align 8, !dbg !8008
  %24 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @hoist_vbeout, align 8, !dbg !8009
  %arrayidx21 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %24, i64 %idxprom14, !dbg !8009
  %25 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx21, align 8, !dbg !8009
  %26 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transp, align 8, !dbg !8010
  %arrayidx24 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %26, i64 %idxprom14, !dbg !8010
  %27 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx24, align 8, !dbg !8010
  %call = tail call zeroext i8 @sbitmap_a_or_b_and_c_cg(%struct.simple_bitmap_def* %21, %struct.simple_bitmap_def* %23, %struct.simple_bitmap_def* %25, %struct.simple_bitmap_def* %27) #6, !dbg !8011
  %conv = zext i8 %call to i32, !dbg !8011
  %or = or i32 %changed.1, %conv, !dbg !8012
  call void @llvm.dbg.value(metadata i32 %or, metadata !7978, metadata !DIExpression()), !dbg !7987
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7992
  %cfg7.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !8013
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7.phi.trans.insert, align 8, !dbg !7992
  br label %for.cond, !dbg !7992, !llvm.loop !8014

for.end:                                          ; preds = %for.cond
  %changed.1.lcssa = phi i32 [ %changed.1, %for.cond ], !dbg !7994
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !7978, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !7978, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 %changed.1.lcssa, metadata !7978, metadata !DIExpression()), !dbg !7987
  %inc = add nuw nsw i32 %passes.0, 1, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7979, metadata !DIExpression()), !dbg !7987
  br label %while.cond, !dbg !7988, !llvm.loop !8017

while.end:                                        ; preds = %while.cond
  %passes.0.lcssa = phi i32 [ %passes.0, %while.cond ], !dbg !7987
  call void @llvm.dbg.value(metadata i32 %passes.0.lcssa, metadata !7979, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 %passes.0.lcssa, metadata !7979, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 %passes.0.lcssa, metadata !7979, metadata !DIExpression()), !dbg !7987
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8019
  %tobool26 = icmp eq %struct._IO_FILE* %28, null, !dbg !8019
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !8021

if.then27:                                        ; preds = %while.end
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %28, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.50, i64 0, i64 0), i32 %passes.0.lcssa) #6, !dbg !8022
  br label %if.end29, !dbg !8022

if.end29:                                         ; preds = %while.end, %if.then27
  ret void, !dbg !8023
}

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #1

declare dso_local void @sbitmap_intersection_of_succs(%struct.simple_bitmap_def*, %struct.simple_bitmap_def**, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @sbitmap_a_or_b_and_c_cg(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #1

declare dso_local %struct.VEC_basic_block_heap* @get_dominated_by(i32, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def** %ptr) unnamed_addr #0 !dbg !8024 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !8031, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8032, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %ptr, metadata !8033, metadata !DIExpression()), !dbg !8034
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !8035
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !8035

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !8035
  %0 = load i32, i32* %num, align 8, !dbg !8035
  %cmp = icmp ugt i32 %0, %ix_, !dbg !8035
  br i1 %cmp, label %if.then, label %if.else, !dbg !8037

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !8038
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8038
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !8038
  br label %return, !dbg !8038

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !8040

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.basic_block_def* [ null, %if.else ], [ %1, %if.then ], !dbg !8042
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !8042
  store %struct.basic_block_def* %storemerge, %struct.basic_block_def** %ptr, align 8, !dbg !8042
  ret i32 %retval.0, !dbg !8037
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @hoist_expr_reaches_here_p(%struct.basic_block_def* %expr_bb, i32 %expr_index, %struct.basic_block_def* %bb, i8* %visited) unnamed_addr #4 !dbg !8043 {
entry:
  %pred = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %expr_bb, metadata !8047, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i32 %expr_index, metadata !8048, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8049, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %visited, metadata !8050, metadata !DIExpression()), !dbg !8058
  %0 = bitcast %struct.edge_def** %pred to i8*, !dbg !8059
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8059
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8060
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8060
  call void @llvm.dbg.value(metadata i32 0, metadata !8053, metadata !DIExpression()), !dbg !8058
  %cmp = icmp eq i8* %visited, null, !dbg !8061
  br i1 %cmp, label %if.then, label %if.end, !dbg !8063

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, metadata !8053, metadata !DIExpression()), !dbg !8058
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8064
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !8064
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8064
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 5, !dbg !8064
  %4 = load i32, i32* %x_last_basic_block, align 8, !dbg !8064
  %conv = sext i32 %4 to i64, !dbg !8064
  %call = tail call i8* @xcalloc(i64 %conv, i64 1) #6, !dbg !8064
  call void @llvm.dbg.value(metadata i8* %call, metadata !8050, metadata !DIExpression()), !dbg !8058
  br label %if.end, !dbg !8066

if.end:                                           ; preds = %if.then, %entry
  %visited.addr.0 = phi i8* [ %call, %if.then ], [ %visited, %entry ]
  %visited_allocated_locally.0 = phi i32 [ 1, %if.then ], [ 0, %entry ], !dbg !8058
  call void @llvm.dbg.value(metadata i32 %visited_allocated_locally.0, metadata !8053, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %visited.addr.0, metadata !8050, metadata !DIExpression()), !dbg !8058
  %5 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8067
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !8067
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !8067
  %call1 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8067
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !8067
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 0, !dbg !8067
  store i32 %7, i32* %6, align 8, !dbg !8067
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !8067
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 1, !dbg !8067
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !8067
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !8067
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !8067
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8068
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8068
  %div = lshr i32 %expr_index, 6, !dbg !8069
  %idxprom19 = zext i32 %div to i64, !dbg !8069
  %rem = and i32 %expr_index, 63, !dbg !8069
  %sh_prom = zext i32 %rem to i64, !dbg !8069
  %12 = shl i64 1, %sh_prom, !dbg !8069
  br label %for.cond, !dbg !8067

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %10, align 8, !dbg !8074
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !8074
  call void @llvm.dbg.value(metadata %struct.edge_def** %pred, metadata !8051, metadata !DIExpression(DW_OP_deref)), !dbg !8058
  %call2 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %pred) #7, !dbg !8074
  %tobool = icmp eq i8 %call2, 0, !dbg !8067
  br i1 %tobool, label %for.end, label %for.body, !dbg !8067

for.body:                                         ; preds = %for.cond
  %15 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !8075
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !8051, metadata !DIExpression()), !dbg !8058
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 0, !dbg !8076
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8076
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %16, metadata !8054, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !8051, metadata !DIExpression()), !dbg !8058
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8078
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !8078
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !8078
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 0, !dbg !8078
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !8078
  %cmp6 = icmp eq %struct.basic_block_def* %16, %19, !dbg !8079
  br i1 %cmp6, label %cleanup, label %if.else, !dbg !8080

if.else:                                          ; preds = %for.body
  %cmp9 = icmp eq %struct.basic_block_def* %16, %expr_bb, !dbg !8081
  br i1 %cmp9, label %cleanup, label %if.else12, !dbg !8082

if.else12:                                        ; preds = %if.else
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 9, !dbg !8083
  %20 = load i32, i32* %index, align 8, !dbg !8083
  %idxprom = sext i32 %20 to i64, !dbg !8084
  %arrayidx = getelementptr inbounds i8, i8* %visited.addr.0, i64 %idxprom, !dbg !8084
  %21 = load i8, i8* %arrayidx, align 1, !dbg !8084
  %tobool13 = icmp eq i8 %21, 0, !dbg !8084
  br i1 %tobool13, label %if.else15, label %cleanup, !dbg !8085

if.else15:                                        ; preds = %if.else12
  %22 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @comp, align 8, !dbg !8086
  %arrayidx18 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %22, i64 %idxprom, !dbg !8086
  %23 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx18, align 8, !dbg !8086
  %arrayidx20 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %23, i64 0, i32 3, i64 %idxprom19, !dbg !8086
  %24 = load i64, i64* %arrayidx20, align 8, !dbg !8086
  %25 = and i64 %24, %12, !dbg !8086
  %tobool21 = icmp eq i64 %25, 0, !dbg !8086
  br i1 %tobool21, label %if.else23, label %cleanup, !dbg !8087

if.else23:                                        ; preds = %if.else15
  %26 = load %struct.simple_bitmap_def**, %struct.simple_bitmap_def*** @transp, align 8, !dbg !8088
  %arrayidx26 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %26, i64 %idxprom, !dbg !8088
  %27 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx26, align 8, !dbg !8088
  %arrayidx30 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %27, i64 0, i32 3, i64 %idxprom19, !dbg !8088
  %28 = load i64, i64* %arrayidx30, align 8, !dbg !8088
  %29 = and i64 %28, %12, !dbg !8088
  %tobool35 = icmp eq i64 %29, 0, !dbg !8088
  br i1 %tobool35, label %cleanup, label %if.else37, !dbg !8090

if.else37:                                        ; preds = %if.else23
  store i8 1, i8* %arrayidx, align 1, !dbg !8091
  %call41 = call fastcc i32 @hoist_expr_reaches_here_p(%struct.basic_block_def* %expr_bb, i32 %expr_index, %struct.basic_block_def* %16, i8* %visited.addr.0) #7, !dbg !8093
  %tobool42 = icmp eq i32 %call41, 0, !dbg !8093
  %spec.select = select i1 %tobool42, i32 2, i32 0, !dbg !8095
  br label %cleanup, !dbg !8095

cleanup:                                          ; preds = %if.else23, %if.else15, %if.else12, %if.else37, %if.else, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 2, %for.body ], [ 4, %if.else ], [ 4, %if.else12 ], [ 2, %if.else15 ], [ 2, %if.else23 ], [ %spec.select, %if.else37 ]
  %switch = icmp eq i32 %cleanup.dest.slot.0, 2
  br i1 %switch, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8052, metadata !DIExpression(DW_OP_deref)), !dbg !8058
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8074
  br label %for.cond, !dbg !8074, !llvm.loop !8096

for.end:                                          ; preds = %for.cond, %cleanup
  %tobool50 = icmp eq i32 %visited_allocated_locally.0, 0, !dbg !8098
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !8100

if.then51:                                        ; preds = %for.end
  call void @free(i8* %visited.addr.0) #6, !dbg !8101
  br label %if.end52, !dbg !8101

if.end52:                                         ; preds = %for.end, %if.then51
  %30 = load %struct.edge_def*, %struct.edge_def** %pred, align 8, !dbg !8102
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !8051, metadata !DIExpression()), !dbg !8058
  %cmp53 = icmp eq %struct.edge_def* %30, null, !dbg !8103
  %conv54 = zext i1 %cmp53 to i32, !dbg !8103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8104
  ret i32 %conv54, !dbg !8105
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !8106 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !8111, metadata !DIExpression()), !dbg !8112
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !8113
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !8113
  br i1 %tobool, label %if.end, label %if.then, !dbg !8115

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !8115
  tail call void @free(i8* nonnull %1) #6, !dbg !8113
  br label %if.end, !dbg !8113

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !8115
  ret void, !dbg !8115
}

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!136}
!llvm.module.flags = !{!2196, !2197, !2198}
!llvm.ident = !{!2199}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1 = distinct !DIGlobalVariable(name: "can_copy_init_p", scope: !2, file: !3, line: 582, type: !6, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "can_copy_p", scope: !3, file: !3, line: 580, type: !4, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2193)
!3 = !DIFile(filename: "gcse.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !7}
!6 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!7 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !8, line: 7, baseType: !9, size: 32, elements: !10)
!8 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!9 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!10 = !{!11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!11 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!12 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!14 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!15 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!16 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!17 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!18 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!19 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!20 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!21 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!22 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!23 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!24 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!25 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!26 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!27 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!28 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!29 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!30 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!31 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!32 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!33 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!34 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!35 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!36 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!37 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!38 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!39 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!40 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!41 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!42 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!43 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!44 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!45 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!46 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!47 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!48 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!49 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!50 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!51 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!52 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!53 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!54 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!55 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!56 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!57 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!58 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!59 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!60 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!61 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!62 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!63 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!64 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!65 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!66 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!67 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!68 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!69 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!70 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!71 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!72 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!73 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!74 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!75 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!76 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!77 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!78 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!79 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!80 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!81 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!82 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!83 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!84 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!85 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!86 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!87 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!88 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!89 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!90 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!91 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!92 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!93 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!94 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!95 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!96 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!97 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!134 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!135 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !137, retainedTypes: !770, globals: !2018, nameTableKind: None)
!137 = !{!7, !138, !145, !151, !156, !161, !180, !187, !194, !388, !395, !571, !593, !736}
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !139, line: 30, baseType: !9, size: 32, elements: !140)
!139 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!140 = !{!141, !142, !143, !144}
!141 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!143 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!144 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !146, line: 363, baseType: !9, size: 32, elements: !147)
!146 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149, !150}
!148 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !146, line: 355, baseType: !9, size: 32, elements: !152)
!152 = !{!153, !154, !155}
!153 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !157, line: 474, baseType: !9, size: 32, elements: !158)
!157 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!158 = !{!159, !160}
!159 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!160 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !162, line: 280, baseType: !9, size: 32, elements: !163)
!162 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!163 = !{!164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179}
!164 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!180 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !162, line: 1817, baseType: !9, size: 32, elements: !181)
!181 = !{!182, !183, !184, !185, !186}
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !162, line: 1805, baseType: !9, size: 32, elements: !188)
!188 = !{!189, !190, !191, !192, !193}
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!190 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!191 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!194 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !162, line: 39, baseType: !9, size: 32, elements: !195)
!195 = !{!196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387}
!196 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!197 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!198 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!199 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!200 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!201 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!202 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!203 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!204 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!205 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!206 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!207 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!208 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!209 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!210 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!211 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!212 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!213 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!214 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!215 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!216 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!217 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!218 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!219 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!220 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!221 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!222 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!223 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!224 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!226 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!227 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!228 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!229 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!230 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!231 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!232 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!233 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!234 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!235 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!236 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!238 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!239 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!240 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!241 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!242 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!243 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!244 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!245 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!246 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!247 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!248 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!249 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!250 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!251 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!252 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!253 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!254 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!255 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!256 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!257 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!258 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!259 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!260 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!261 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!262 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!267 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!268 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!269 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!270 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!271 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!272 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!273 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!275 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!276 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!277 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!278 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!279 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!280 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!281 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!282 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!283 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!284 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!285 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!286 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!289 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!290 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!291 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!292 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!293 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!294 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!295 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!296 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!297 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!298 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!299 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!300 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!301 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!302 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!303 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!304 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!305 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!306 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!307 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!308 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!309 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!310 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!311 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!312 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!313 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!314 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!316 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!317 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!318 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!319 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!320 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!321 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!322 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!323 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!324 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!325 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!326 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!327 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!328 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!329 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!330 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!331 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!332 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!333 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!334 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!335 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!336 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!337 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!338 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!339 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!340 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!341 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!342 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!343 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!344 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!345 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!346 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!347 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!348 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!360 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!361 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!362 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!363 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!364 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!365 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!381 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!382 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!383 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!384 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!385 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!386 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!387 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !389, line: 104, baseType: !9, size: 32, elements: !390)
!389 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!390 = !{!391, !392, !393, !394}
!391 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !396, line: 74, baseType: !9, size: 32, elements: !397)
!396 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!397 = !{!398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!398 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!570 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !572, line: 36, baseType: !9, size: 32, elements: !573)
!572 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!573 = !{!574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592}
!574 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!575 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!576 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!577 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!578 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!579 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!580 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!581 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!582 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!583 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!584 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!585 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!586 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!587 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!588 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!589 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!590 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!591 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!592 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!593 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !594, line: 45, baseType: !9, size: 32, elements: !595)
!594 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!595 = !{!596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735}
!596 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!597 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!598 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!599 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!600 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!601 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!602 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!603 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!604 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!605 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!606 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!607 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!608 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!609 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!610 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!611 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!612 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!613 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!614 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!615 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!616 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!617 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!618 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!619 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!620 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!621 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!622 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!623 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!624 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!625 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!626 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!627 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!628 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!629 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!630 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!631 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!632 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!633 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!634 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!635 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!636 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!637 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!638 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!639 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!640 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!641 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!642 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!643 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!644 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!645 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!646 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!647 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!648 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!649 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!650 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!651 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!652 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!653 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!654 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!655 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!656 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!657 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!658 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!659 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!660 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!661 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!662 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!663 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!664 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!665 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!666 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!667 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!668 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!669 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!670 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!671 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!672 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!673 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!674 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!675 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!676 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!677 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!678 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!679 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!680 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!681 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!682 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!683 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!684 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!685 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!686 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!687 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!688 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!689 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!690 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!691 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!692 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!693 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!694 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!695 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!696 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!697 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!698 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!699 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!700 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!701 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!702 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!703 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!704 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!705 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!706 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!707 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!708 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!709 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!710 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!711 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!712 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!713 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!714 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!715 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!716 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!717 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!718 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!719 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!720 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!721 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!722 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!723 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!724 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!725 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!726 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!727 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!728 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!729 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!730 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!731 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!732 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!733 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!734 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!735 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!736 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !594, line: 836, baseType: !9, size: 32, elements: !737)
!737 = !{!738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769}
!738 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!739 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!740 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!741 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!742 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!743 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!744 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!745 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!746 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!747 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!748 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!749 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!750 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!751 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!752 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!753 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!754 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!755 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!756 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!757 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!758 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!759 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!760 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!761 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!762 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!763 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!764 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!765 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!766 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!767 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!768 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!769 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!770 = !{!771, !6, !772, !773, !776, !777, !7, !571, !779, !783, !786, !593, !774, !1972, !9, !1276, !1973, !787, !736, !1974, !1976, !1993, !1999, !2001, !1977, !1984, !2014, !878, !2015, !2016, !1338}
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!772 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!776, !782}
!782 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{null, !776}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !788, line: 50, baseType: !789)
!788 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !594, line: 240, size: 384, elements: !791)
!791 = !{!792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !790, file: !594, line: 242, baseType: !9, size: 16, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !790, file: !594, line: 245, baseType: !9, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !790, file: !594, line: 252, baseType: !9, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !790, file: !594, line: 257, baseType: !9, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !790, file: !594, line: 265, baseType: !9, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !790, file: !594, line: 277, baseType: !9, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !790, file: !594, line: 291, baseType: !9, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !790, file: !594, line: 298, baseType: !9, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !790, file: !594, line: 305, baseType: !9, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !790, file: !594, line: 310, baseType: !9, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !790, file: !594, line: 321, baseType: !803, size: 320, offset: 64)
!803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !594, line: 315, size: 320, elements: !804)
!804 = !{!805, !1907, !1909, !1970, !1971}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !803, file: !594, line: 316, baseType: !806, size: 64)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 64, elements: !822)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !594, line: 183, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !594, line: 166, size: 64, elements: !809)
!809 = !{!810, !811, !812, !813, !814, !824, !825, !837, !861, !922, !1885, !1886, !1897, !1904}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !808, file: !594, line: 168, baseType: !772, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !808, file: !594, line: 169, baseType: !9, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !808, file: !594, line: 170, baseType: !777, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !808, file: !594, line: 171, baseType: !787, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !808, file: !594, line: 172, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !788, line: 53, baseType: !816)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !594, line: 359, size: 128, elements: !818)
!818 = !{!819, !820}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !817, file: !594, line: 360, baseType: !772, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !817, file: !594, line: 361, baseType: !821, size: 64, offset: 64)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 64, elements: !822)
!822 = !{!823}
!823 = !DISubrange(count: 1)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !808, file: !594, line: 173, baseType: !7, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !808, file: !594, line: 174, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !594, line: 133, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !594, line: 115, size: 32, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !827, file: !594, line: 118, baseType: !9, size: 8, flags: DIFlagBitField, extraData: i64 0)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !827, file: !594, line: 120, baseType: !9, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !827, file: !594, line: 121, baseType: !9, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !827, file: !594, line: 123, baseType: !9, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !827, file: !594, line: 125, baseType: !9, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !827, file: !594, line: 127, baseType: !9, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !827, file: !594, line: 130, baseType: !9, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !827, file: !594, line: 132, baseType: !9, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !808, file: !594, line: 175, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !840, line: 23, size: 320, elements: !841)
!840 = !DIFile(filename: "./cselib.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!841 = !{!842, !843, !844, !845, !852, !860}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !839, file: !840, line: 25, baseType: !9, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !839, file: !840, line: 28, baseType: !772, size: 32, offset: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "val_rtx", scope: !839, file: !840, line: 31, baseType: !787, size: 64, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "locs", scope: !839, file: !840, line: 35, baseType: !846, size: 64, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_loc_list", file: !840, line: 45, size: 192, elements: !848)
!848 = !{!849, !850, !851}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !847, file: !840, line: 47, baseType: !846, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !847, file: !840, line: 49, baseType: !787, size: 64, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "setting_insn", scope: !847, file: !840, line: 51, baseType: !787, size: 64, offset: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !839, file: !840, line: 39, baseType: !853, size: 64, offset: 192)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_list", file: !840, line: 55, size: 128, elements: !855)
!855 = !{!856, !857}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !854, file: !840, line: 56, baseType: !853, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "elt", scope: !854, file: !840, line: 57, baseType: !858, size: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "cselib_val", file: !840, line: 42, baseType: !839)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "next_containing_mem", scope: !839, file: !840, line: 41, baseType: !838, size: 64, offset: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !808, file: !594, line: 176, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !864, line: 75, size: 256, elements: !865)
!864 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!865 = !{!866, !881, !882, !883}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !863, file: !864, line: 76, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !864, line: 68, baseType: !869)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !864, line: 63, size: 320, elements: !870)
!870 = !{!871, !873, !874, !875}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !869, file: !864, line: 64, baseType: !872, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !869, file: !864, line: 65, baseType: !872, size: 64, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !869, file: !864, line: 66, baseType: !9, size: 32, offset: 128)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !869, file: !864, line: 67, baseType: !876, size: 128, offset: 192)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !877, size: 128, elements: !879)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !864, line: 29, baseType: !878)
!878 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!879 = !{!880}
!880 = !DISubrange(count: 2)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !863, file: !864, line: 77, baseType: !867, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !863, file: !864, line: 78, baseType: !9, size: 32, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !863, file: !864, line: 79, baseType: !884, size: 64, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !864, line: 49, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !864, line: 45, size: 832, elements: !887)
!887 = !{!888, !889, !890}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !886, file: !864, line: 46, baseType: !872, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !886, file: !864, line: 47, baseType: !862, size: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !886, file: !864, line: 48, baseType: !891, size: 704, offset: 128)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !892, line: 164, size: 704, elements: !893)
!892 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!893 = !{!894, !895, !905, !906, !907, !908, !909, !910, !914, !918, !919, !920, !921}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !891, file: !892, line: 166, baseType: !782, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !891, file: !892, line: 167, baseType: !896, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !892, line: 157, size: 192, elements: !898)
!898 = !{!899, !900, !901}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !897, file: !892, line: 159, baseType: !774, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !897, file: !892, line: 160, baseType: !896, size: 64, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !897, file: !892, line: 161, baseType: !902, size: 32, offset: 128)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 32, elements: !903)
!903 = !{!904}
!904 = !DISubrange(count: 4)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !891, file: !892, line: 168, baseType: !774, size: 64, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !891, file: !892, line: 169, baseType: !774, size: 64, offset: 192)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !891, file: !892, line: 170, baseType: !774, size: 64, offset: 256)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !891, file: !892, line: 171, baseType: !782, size: 64, offset: 320)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !891, file: !892, line: 172, baseType: !772, size: 32, offset: 384)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !891, file: !892, line: 176, baseType: !911, size: 64, offset: 448)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!896, !776, !782}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !891, file: !892, line: 177, baseType: !915, size: 64, offset: 512)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{null, !776, !896}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !891, file: !892, line: 178, baseType: !776, size: 64, offset: 576)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !891, file: !892, line: 179, baseType: !9, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !891, file: !892, line: 180, baseType: !9, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !891, file: !892, line: 184, baseType: !9, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !808, file: !594, line: 177, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !788, line: 56, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !162, line: 3371, size: 1792, elements: !926)
!926 = !{!927, !960, !966, !977, !996, !1007, !1012, !1019, !1025, !1038, !1050, !1088, !1093, !1121, !1129, !1130, !1135, !1144, !1150, !1155, !1159, !1163, !1521, !1570, !1576, !1582, !1589, !1615, !1629, !1646, !1658, !1680, !1695, !1867}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !925, file: !162, line: 3372, baseType: !928, size: 64)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !162, line: 360, size: 64, elements: !929)
!929 = !{!930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !928, file: !162, line: 361, baseType: !9, size: 16, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !928, file: !162, line: 363, baseType: !9, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !928, file: !162, line: 364, baseType: !9, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !928, file: !162, line: 365, baseType: !9, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !928, file: !162, line: 366, baseType: !9, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !928, file: !162, line: 367, baseType: !9, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !928, file: !162, line: 368, baseType: !9, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !928, file: !162, line: 369, baseType: !9, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !928, file: !162, line: 370, baseType: !9, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !928, file: !162, line: 372, baseType: !9, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !928, file: !162, line: 373, baseType: !9, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !928, file: !162, line: 374, baseType: !9, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !928, file: !162, line: 375, baseType: !9, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !928, file: !162, line: 376, baseType: !9, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !928, file: !162, line: 377, baseType: !9, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !928, file: !162, line: 378, baseType: !9, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !928, file: !162, line: 379, baseType: !9, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !928, file: !162, line: 381, baseType: !9, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !928, file: !162, line: 382, baseType: !9, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !928, file: !162, line: 383, baseType: !9, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !928, file: !162, line: 384, baseType: !9, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !928, file: !162, line: 385, baseType: !9, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !928, file: !162, line: 386, baseType: !9, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !928, file: !162, line: 387, baseType: !9, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !928, file: !162, line: 388, baseType: !9, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !928, file: !162, line: 390, baseType: !9, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !928, file: !162, line: 391, baseType: !9, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !928, file: !162, line: 392, baseType: !9, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !928, file: !162, line: 394, baseType: !9, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !928, file: !162, line: 399, baseType: !9, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !925, file: !162, line: 3373, baseType: !961, size: 192)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !162, line: 402, size: 192, elements: !962)
!962 = !{!963, !964, !965}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !961, file: !162, line: 403, baseType: !928, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !961, file: !162, line: 404, baseType: !923, size: 64, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !961, file: !162, line: 405, baseType: !923, size: 64, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !925, file: !162, line: 3374, baseType: !967, size: 320)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !162, line: 1384, size: 320, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !967, file: !162, line: 1385, baseType: !961, size: 192)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !967, file: !162, line: 1386, baseType: !971, size: 128, offset: 192)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !972, line: 58, baseType: !973)
!972 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !972, line: 54, size: 128, elements: !974)
!974 = !{!975, !976}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !973, file: !972, line: 56, baseType: !878, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !973, file: !972, line: 57, baseType: !782, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !925, file: !162, line: 3375, baseType: !978, size: 256)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !162, line: 1397, size: 256, elements: !979)
!979 = !{!980, !981}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !978, file: !162, line: 1398, baseType: !961, size: 192)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !978, file: !162, line: 1399, baseType: !982, size: 64, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !984, line: 52, size: 256, elements: !985)
!984 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!985 = !{!986, !987, !988, !989, !990, !991, !992}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !983, file: !984, line: 56, baseType: !9, size: 2, flags: DIFlagBitField, extraData: i64 0)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !983, file: !984, line: 57, baseType: !9, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !983, file: !984, line: 58, baseType: !9, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !983, file: !984, line: 59, baseType: !9, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !983, file: !984, line: 60, baseType: !9, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !983, file: !984, line: 61, baseType: !9, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !983, file: !984, line: 62, baseType: !993, size: 192, offset: 64)
!993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !878, size: 192, elements: !994)
!994 = !{!995}
!995 = !DISubrange(count: 3)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !925, file: !162, line: 3376, baseType: !997, size: 256)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !162, line: 1408, size: 256, elements: !998)
!998 = !{!999, !1000}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !997, file: !162, line: 1409, baseType: !961, size: 192)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !997, file: !162, line: 1410, baseType: !1001, size: 64, offset: 192)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1003, line: 27, size: 192, elements: !1004)
!1003 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1004 = !{!1005, !1006}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1002, file: !1003, line: 29, baseType: !971, size: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1002, file: !1003, line: 30, baseType: !7, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !925, file: !162, line: 3377, baseType: !1008, size: 256)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !162, line: 1437, size: 256, elements: !1009)
!1009 = !{!1010, !1011}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1008, file: !162, line: 1438, baseType: !961, size: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1008, file: !162, line: 1439, baseType: !923, size: 64, offset: 192)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !925, file: !162, line: 3378, baseType: !1013, size: 256)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !162, line: 1418, size: 256, elements: !1014)
!1014 = !{!1015, !1016, !1017}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1013, file: !162, line: 1419, baseType: !961, size: 192)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1013, file: !162, line: 1420, baseType: !772, size: 32, offset: 192)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1013, file: !162, line: 1421, baseType: !1018, size: 8, offset: 224)
!1018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 8, elements: !822)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !925, file: !162, line: 3379, baseType: !1020, size: 320)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !162, line: 1428, size: 320, elements: !1021)
!1021 = !{!1022, !1023, !1024}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1020, file: !162, line: 1429, baseType: !961, size: 192)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1020, file: !162, line: 1430, baseType: !923, size: 64, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1020, file: !162, line: 1431, baseType: !923, size: 64, offset: 256)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !925, file: !162, line: 3380, baseType: !1026, size: 320)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !162, line: 1460, size: 320, elements: !1027)
!1027 = !{!1028, !1029}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1026, file: !162, line: 1461, baseType: !961, size: 192)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1026, file: !162, line: 1462, baseType: !1030, size: 128, offset: 192)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1031, line: 31, size: 128, elements: !1032)
!1031 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1032 = !{!1033, !1036, !1037}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1030, file: !1031, line: 32, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1030, file: !1031, line: 33, baseType: !9, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1030, file: !1031, line: 34, baseType: !9, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !925, file: !162, line: 3381, baseType: !1039, size: 384)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !162, line: 2507, size: 384, elements: !1040)
!1040 = !{!1041, !1042, !1047, !1048, !1049}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1039, file: !162, line: 2508, baseType: !961, size: 192)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1039, file: !162, line: 2509, baseType: !1043, size: 32, offset: 192)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1044, line: 58, baseType: !1045)
!1044 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1046, line: 44, baseType: !9)
!1046 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1039, file: !162, line: 2510, baseType: !9, size: 32, offset: 224)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1039, file: !162, line: 2511, baseType: !923, size: 64, offset: 256)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1039, file: !162, line: 2512, baseType: !923, size: 64, offset: 320)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !925, file: !162, line: 3382, baseType: !1051, size: 896)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !162, line: 2652, size: 896, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1051, file: !162, line: 2653, baseType: !1039, size: 384)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1051, file: !162, line: 2654, baseType: !923, size: 64, offset: 384)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1051, file: !162, line: 2656, baseType: !9, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1051, file: !162, line: 2658, baseType: !9, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1051, file: !162, line: 2659, baseType: !9, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1051, file: !162, line: 2660, baseType: !9, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1051, file: !162, line: 2661, baseType: !9, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1051, file: !162, line: 2662, baseType: !9, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1051, file: !162, line: 2663, baseType: !9, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1051, file: !162, line: 2664, baseType: !9, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1051, file: !162, line: 2666, baseType: !9, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1051, file: !162, line: 2667, baseType: !9, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1051, file: !162, line: 2668, baseType: !9, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1051, file: !162, line: 2669, baseType: !9, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1051, file: !162, line: 2670, baseType: !9, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1051, file: !162, line: 2671, baseType: !9, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1051, file: !162, line: 2672, baseType: !9, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1051, file: !162, line: 2673, baseType: !9, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1051, file: !162, line: 2674, baseType: !9, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1051, file: !162, line: 2678, baseType: !9, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1051, file: !162, line: 2682, baseType: !9, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1051, file: !162, line: 2685, baseType: !9, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1051, file: !162, line: 2688, baseType: !9, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1051, file: !162, line: 2690, baseType: !9, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1051, file: !162, line: 2692, baseType: !9, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1051, file: !162, line: 2695, baseType: !9, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1051, file: !162, line: 2698, baseType: !9, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1051, file: !162, line: 2703, baseType: !9, size: 32, offset: 512)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1051, file: !162, line: 2705, baseType: !923, size: 64, offset: 576)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1051, file: !162, line: 2706, baseType: !923, size: 64, offset: 640)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1051, file: !162, line: 2707, baseType: !923, size: 64, offset: 704)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1051, file: !162, line: 2708, baseType: !923, size: 64, offset: 768)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1051, file: !162, line: 2711, baseType: !1086, size: 64, offset: 832)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !162, line: 2711, flags: DIFlagFwdDecl)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !925, file: !162, line: 3383, baseType: !1089, size: 960)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !162, line: 2756, size: 960, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1089, file: !162, line: 2757, baseType: !1051, size: 896)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1089, file: !162, line: 2758, baseType: !787, size: 64, offset: 896)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !925, file: !162, line: 3384, baseType: !1094, size: 1472)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !162, line: 3114, size: 1472, elements: !1095)
!1095 = !{!1096, !1117, !1118, !1119, !1120}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1094, file: !162, line: 3115, baseType: !1097, size: 1216)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !162, line: 2984, size: 1216, elements: !1098)
!1098 = !{!1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1097, file: !162, line: 2985, baseType: !1089, size: 960)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1097, file: !162, line: 2986, baseType: !923, size: 64, offset: 960)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1097, file: !162, line: 2987, baseType: !923, size: 64, offset: 1024)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1097, file: !162, line: 2988, baseType: !923, size: 64, offset: 1088)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1097, file: !162, line: 2991, baseType: !9, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1097, file: !162, line: 2992, baseType: !9, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1097, file: !162, line: 2993, baseType: !9, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1097, file: !162, line: 2994, baseType: !9, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1097, file: !162, line: 2995, baseType: !9, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1097, file: !162, line: 2996, baseType: !9, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1097, file: !162, line: 2998, baseType: !9, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1097, file: !162, line: 3000, baseType: !9, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1097, file: !162, line: 3002, baseType: !9, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1097, file: !162, line: 3003, baseType: !9, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1097, file: !162, line: 3004, baseType: !9, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1097, file: !162, line: 3005, baseType: !9, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1097, file: !162, line: 3007, baseType: !9, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1097, file: !162, line: 3010, baseType: !9, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1094, file: !162, line: 3117, baseType: !923, size: 64, offset: 1216)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1094, file: !162, line: 3119, baseType: !923, size: 64, offset: 1280)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1094, file: !162, line: 3121, baseType: !923, size: 64, offset: 1344)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1094, file: !162, line: 3123, baseType: !923, size: 64, offset: 1408)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !925, file: !162, line: 3385, baseType: !1122, size: 1088)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !162, line: 2874, size: 1088, elements: !1123)
!1123 = !{!1124, !1125, !1126}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1122, file: !162, line: 2875, baseType: !1089, size: 960)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1122, file: !162, line: 2876, baseType: !787, size: 64, offset: 960)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1122, file: !162, line: 2877, baseType: !1127, size: 64, offset: 1024)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !162, line: 2856, flags: DIFlagFwdDecl)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !925, file: !162, line: 3386, baseType: !1097, size: 1216)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !925, file: !162, line: 3387, baseType: !1131, size: 1280)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !162, line: 3093, size: 1280, elements: !1132)
!1132 = !{!1133, !1134}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1131, file: !162, line: 3094, baseType: !1097, size: 1216)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1131, file: !162, line: 3095, baseType: !1127, size: 64, offset: 1216)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !925, file: !162, line: 3388, baseType: !1136, size: 1216)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !162, line: 2824, size: 1216, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1142, !1143}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1136, file: !162, line: 2825, baseType: !1051, size: 896)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1136, file: !162, line: 2827, baseType: !923, size: 64, offset: 896)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1136, file: !162, line: 2828, baseType: !923, size: 64, offset: 960)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1136, file: !162, line: 2829, baseType: !923, size: 64, offset: 1024)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1136, file: !162, line: 2830, baseType: !923, size: 64, offset: 1088)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1136, file: !162, line: 2831, baseType: !923, size: 64, offset: 1152)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !925, file: !162, line: 3389, baseType: !1145, size: 1024)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !162, line: 2850, size: 1024, elements: !1146)
!1146 = !{!1147, !1148, !1149}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1145, file: !162, line: 2851, baseType: !1089, size: 960)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1145, file: !162, line: 2852, baseType: !772, size: 32, offset: 960)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1145, file: !162, line: 2853, baseType: !772, size: 32, offset: 992)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !925, file: !162, line: 3390, baseType: !1151, size: 1024)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !162, line: 2857, size: 1024, elements: !1152)
!1152 = !{!1153, !1154}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1151, file: !162, line: 2858, baseType: !1089, size: 960)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1151, file: !162, line: 2859, baseType: !1127, size: 64, offset: 960)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !925, file: !162, line: 3391, baseType: !1156, size: 960)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !162, line: 2862, size: 960, elements: !1157)
!1157 = !{!1158}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1156, file: !162, line: 2863, baseType: !1089, size: 960)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !925, file: !162, line: 3392, baseType: !1160, size: 1472)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !162, line: 3304, size: 1472, elements: !1161)
!1161 = !{!1162}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1160, file: !162, line: 3305, baseType: !1094, size: 1472)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !925, file: !162, line: 3393, baseType: !1164, size: 1792)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !162, line: 3248, size: 1792, elements: !1165)
!1165 = !{!1166, !1167, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1164, file: !162, line: 3249, baseType: !1094, size: 1472)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1164, file: !162, line: 3251, baseType: !1168, size: 64, offset: 1472)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1170, line: 463, size: 1152, elements: !1171)
!1170 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1171 = !{!1172, !1333, !1437, !1438, !1441, !1444, !1445, !1446, !1447, !1448, !1449, !1473, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1169, file: !1170, line: 464, baseType: !1173, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !139, line: 194, size: 384, elements: !1175)
!1175 = !{!1176, !1225, !1238, !1252, !1301, !1314}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1174, file: !139, line: 197, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !139, line: 182, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !139, line: 116, size: 704, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1185, !1186, !1213, !1222, !1223, !1224}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1179, file: !139, line: 119, baseType: !1178, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1179, file: !139, line: 122, baseType: !1178, size: 64, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1179, file: !139, line: 123, baseType: !1178, size: 64, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1179, file: !139, line: 126, baseType: !772, size: 32, offset: 192)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1179, file: !139, line: 129, baseType: !138, size: 32, offset: 224)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1179, file: !139, line: 165, baseType: !1187, size: 192, offset: 256)
!1187 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !139, line: 132, size: 192, elements: !1188)
!1188 = !{!1189, !1202, !1208}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1187, file: !139, line: 137, baseType: !1190, size: 128)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !139, line: 133, size: 128, elements: !1191)
!1191 = !{!1192, !1201}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1190, file: !139, line: 135, baseType: !1193, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !139, line: 93, size: 320, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199, !1200}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1194, file: !139, line: 96, baseType: !1193, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1194, file: !139, line: 97, baseType: !1193, size: 64, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1194, file: !139, line: 101, baseType: !923, size: 64, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1194, file: !139, line: 106, baseType: !923, size: 64, offset: 192)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1194, file: !139, line: 111, baseType: !923, size: 64, offset: 256)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1190, file: !139, line: 136, baseType: !1193, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1187, file: !139, line: 151, baseType: !1203, size: 192)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !139, line: 139, size: 192, elements: !1204)
!1204 = !{!1205, !1206, !1207}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1203, file: !139, line: 141, baseType: !923, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1203, file: !139, line: 145, baseType: !923, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1203, file: !139, line: 150, baseType: !772, size: 32, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1187, file: !139, line: 164, baseType: !1209, size: 128)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !139, line: 153, size: 128, elements: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1209, file: !139, line: 161, baseType: !923, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1209, file: !139, line: 163, baseType: !1043, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1179, file: !139, line: 168, baseType: !1214, size: 64, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !139, line: 67, size: 320, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1215, file: !139, line: 70, baseType: !1214, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1215, file: !139, line: 73, baseType: !1178, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1215, file: !139, line: 78, baseType: !923, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1215, file: !139, line: 85, baseType: !787, size: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1215, file: !139, line: 88, baseType: !772, size: 32, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1179, file: !139, line: 173, baseType: !787, size: 64, offset: 512)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1179, file: !139, line: 173, baseType: !787, size: 64, offset: 576)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1179, file: !139, line: 177, baseType: !6, size: 8, offset: 640)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1174, file: !139, line: 200, baseType: !1226, size: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !139, line: 185, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !139, line: 185, size: 128, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1228, file: !139, line: 185, baseType: !1231, size: 128)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !139, line: 184, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !139, line: 184, size: 128, elements: !1233)
!1233 = !{!1234, !1235, !1236}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1232, file: !139, line: 184, baseType: !9, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1232, file: !139, line: 184, baseType: !9, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1232, file: !139, line: 184, baseType: !1237, size: 64, offset: 64)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 64, elements: !822)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1174, file: !139, line: 203, baseType: !1239, size: 64, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !139, line: 189, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !139, line: 189, size: 128, elements: !1242)
!1242 = !{!1243}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1241, file: !139, line: 189, baseType: !1244, size: 128)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !139, line: 188, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !139, line: 188, size: 128, elements: !1246)
!1246 = !{!1247, !1248, !1249}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1245, file: !139, line: 188, baseType: !9, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1245, file: !139, line: 188, baseType: !9, size: 32, offset: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1245, file: !139, line: 188, baseType: !1250, size: 64, offset: 64)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1251, size: 64, elements: !822)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !139, line: 180, baseType: !1214)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1174, file: !139, line: 207, baseType: !1253, size: 64, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1254, line: 144, baseType: !1255)
!1254 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1254, line: 100, size: 896, elements: !1257)
!1257 = !{!1258, !1266, !1271, !1273, !1275, !1278, !1279, !1280, !1281, !1282, !1287, !1289, !1290, !1295, !1300}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1256, file: !1254, line: 102, baseType: !1259, size: 64)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1254, line: 52, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!1263, !1264}
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1254, line: 47, baseType: !9)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1256, file: !1254, line: 105, baseType: !1267, size: 64, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1254, line: 59, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!772, !1264, !1264}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1256, file: !1254, line: 108, baseType: !1272, size: 64, offset: 128)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1254, line: 63, baseType: !783)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1256, file: !1254, line: 111, baseType: !1274, size: 64, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1256, file: !1254, line: 114, baseType: !1276, size: 64, offset: 256)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1277, line: 46, baseType: !878)
!1277 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1256, file: !1254, line: 117, baseType: !1276, size: 64, offset: 320)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1256, file: !1254, line: 120, baseType: !1276, size: 64, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1256, file: !1254, line: 124, baseType: !9, size: 32, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1256, file: !1254, line: 128, baseType: !9, size: 32, offset: 480)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1256, file: !1254, line: 131, baseType: !1283, size: 64, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1254, line: 75, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!776, !1276, !1276}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1256, file: !1254, line: 132, baseType: !1288, size: 64, offset: 576)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1254, line: 78, baseType: !783)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1256, file: !1254, line: 135, baseType: !776, size: 64, offset: 640)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1256, file: !1254, line: 136, baseType: !1291, size: 64, offset: 704)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1254, line: 82, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!776, !776, !1276, !1276}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1256, file: !1254, line: 137, baseType: !1296, size: 64, offset: 768)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1254, line: 83, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{null, !776, !776}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1256, file: !1254, line: 141, baseType: !9, size: 32, offset: 832)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1174, file: !139, line: 211, baseType: !1302, size: 64, offset: 256)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !162, line: 183, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !162, line: 183, size: 128, elements: !1305)
!1305 = !{!1306}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1304, file: !162, line: 183, baseType: !1307, size: 128)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !162, line: 182, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !162, line: 182, size: 128, elements: !1309)
!1309 = !{!1310, !1311, !1312}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1308, file: !162, line: 182, baseType: !9, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1308, file: !162, line: 182, baseType: !9, size: 32, offset: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1308, file: !162, line: 182, baseType: !1313, size: 64, offset: 64)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 64, elements: !822)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1174, file: !139, line: 220, baseType: !1315, size: 64, offset: 320)
!1315 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !139, line: 217, size: 64, elements: !1316)
!1316 = !{!1317, !1318}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1315, file: !139, line: 218, baseType: !1302, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1315, file: !139, line: 219, baseType: !1319, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1321, line: 29, baseType: !1322)
!1321 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1321, line: 29, size: 96, elements: !1323)
!1323 = !{!1324}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1322, file: !1321, line: 29, baseType: !1325, size: 96)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1321, line: 27, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1321, line: 27, size: 96, elements: !1327)
!1327 = !{!1328, !1329, !1330}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1326, file: !1321, line: 27, baseType: !9, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1326, file: !1321, line: 27, baseType: !9, size: 32, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1326, file: !1321, line: 27, baseType: !1331, size: 8, offset: 64)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1332, size: 8, elements: !822)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1321, line: 26, baseType: !6)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1169, file: !1170, line: 467, baseType: !1334, size: 64, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !146, line: 374, size: 640, elements: !1336)
!1336 = !{!1337, !1412, !1413, !1426, !1427, !1428, !1429, !1430, !1431, !1433, !1435, !1436}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1335, file: !146, line: 377, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !788, line: 111, baseType: !1339)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !146, line: 217, size: 832, elements: !1341)
!1341 = !{!1342, !1377, !1378, !1379, !1382, !1386, !1387, !1388, !1406, !1407, !1408, !1409, !1410, !1411}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1340, file: !146, line: 219, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !146, line: 151, baseType: !1345)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !146, line: 151, size: 128, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1345, file: !146, line: 151, baseType: !1348, size: 128)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !146, line: 150, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !146, line: 150, size: 128, elements: !1350)
!1350 = !{!1351, !1352, !1353}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1349, file: !146, line: 150, baseType: !9, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1349, file: !146, line: 150, baseType: !9, size: 32, offset: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1349, file: !146, line: 150, baseType: !1354, size: 64, offset: 64)
!1354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1355, size: 64, elements: !822)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !788, line: 108, baseType: !1356)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !146, line: 122, size: 512, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1369, !1370, !1371, !1372, !1373, !1374, !1375}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1357, file: !146, line: 124, baseType: !1339, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1357, file: !146, line: 125, baseType: !1339, size: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1357, file: !146, line: 131, baseType: !1362, size: 64, offset: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !146, line: 128, size: 64, elements: !1363)
!1363 = !{!1364, !1368}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1362, file: !146, line: 129, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !788, line: 66, baseType: !1366)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !788, line: 65, flags: DIFlagFwdDecl)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1362, file: !146, line: 130, baseType: !787, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1357, file: !146, line: 134, baseType: !776, size: 64, offset: 192)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1357, file: !146, line: 137, baseType: !923, size: 64, offset: 256)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1357, file: !146, line: 138, baseType: !1043, size: 32, offset: 320)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1357, file: !146, line: 142, baseType: !9, size: 32, offset: 352)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1357, file: !146, line: 144, baseType: !772, size: 32, offset: 384)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1357, file: !146, line: 145, baseType: !772, size: 32, offset: 416)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1357, file: !146, line: 146, baseType: !1376, size: 64, offset: 448)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !146, line: 119, baseType: !782)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1340, file: !146, line: 220, baseType: !1343, size: 64, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1340, file: !146, line: 223, baseType: !776, size: 64, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1340, file: !146, line: 226, baseType: !1380, size: 64, offset: 192)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !146, line: 185, flags: DIFlagFwdDecl)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1340, file: !146, line: 229, baseType: !1383, size: 128, offset: 256)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1384, size: 128, elements: !879)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !146, line: 229, flags: DIFlagFwdDecl)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1340, file: !146, line: 232, baseType: !1339, size: 64, offset: 384)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1340, file: !146, line: 233, baseType: !1339, size: 64, offset: 448)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1340, file: !146, line: 238, baseType: !1389, size: 64, offset: 512)
!1389 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !146, line: 235, size: 64, elements: !1390)
!1390 = !{!1391, !1397}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1389, file: !146, line: 236, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !146, line: 273, size: 128, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1393, file: !146, line: 275, baseType: !1365, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1393, file: !146, line: 278, baseType: !1365, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1389, file: !146, line: 237, baseType: !1398, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !146, line: 259, size: 320, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404, !1405}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1399, file: !146, line: 261, baseType: !787, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1399, file: !146, line: 262, baseType: !787, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1399, file: !146, line: 266, baseType: !787, size: 64, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1399, file: !146, line: 267, baseType: !787, size: 64, offset: 192)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1399, file: !146, line: 270, baseType: !772, size: 32, offset: 256)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1340, file: !146, line: 241, baseType: !1376, size: 64, offset: 576)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1340, file: !146, line: 244, baseType: !772, size: 32, offset: 640)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1340, file: !146, line: 247, baseType: !772, size: 32, offset: 672)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1340, file: !146, line: 250, baseType: !772, size: 32, offset: 704)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1340, file: !146, line: 253, baseType: !772, size: 32, offset: 736)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1340, file: !146, line: 256, baseType: !772, size: 32, offset: 768)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1335, file: !146, line: 378, baseType: !1338, size: 64, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1335, file: !146, line: 381, baseType: !1414, size: 64, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !146, line: 282, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !146, line: 282, size: 128, elements: !1417)
!1417 = !{!1418}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1416, file: !146, line: 282, baseType: !1419, size: 128)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !146, line: 281, baseType: !1420)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !146, line: 281, size: 128, elements: !1421)
!1421 = !{!1422, !1423, !1424}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1420, file: !146, line: 281, baseType: !9, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1420, file: !146, line: 281, baseType: !9, size: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1420, file: !146, line: 281, baseType: !1425, size: 64, offset: 64)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1338, size: 64, elements: !822)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1335, file: !146, line: 384, baseType: !772, size: 32, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1335, file: !146, line: 387, baseType: !772, size: 32, offset: 224)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1335, file: !146, line: 390, baseType: !772, size: 32, offset: 256)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1335, file: !146, line: 394, baseType: !1414, size: 64, offset: 320)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1335, file: !146, line: 396, baseType: !145, size: 32, offset: 384)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1335, file: !146, line: 399, baseType: !1432, size: 64, offset: 416)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 64, elements: !879)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1335, file: !146, line: 402, baseType: !1434, size: 64, offset: 480)
!1434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 64, elements: !879)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1335, file: !146, line: 406, baseType: !772, size: 32, offset: 544)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1335, file: !146, line: 409, baseType: !772, size: 32, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1169, file: !1170, line: 470, baseType: !1366, size: 64, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1169, file: !1170, line: 473, baseType: !1439, size: 64, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1170, line: 166, flags: DIFlagFwdDecl)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1169, file: !1170, line: 476, baseType: !1442, size: 64, offset: 256)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1170, line: 476, flags: DIFlagFwdDecl)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1169, file: !1170, line: 479, baseType: !1253, size: 64, offset: 320)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1169, file: !1170, line: 484, baseType: !923, size: 64, offset: 384)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1169, file: !1170, line: 488, baseType: !923, size: 64, offset: 448)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1169, file: !1170, line: 493, baseType: !923, size: 64, offset: 512)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1169, file: !1170, line: 496, baseType: !923, size: 64, offset: 576)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1169, file: !1170, line: 501, baseType: !1450, size: 64, offset: 640)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !157, line: 2355, size: 576, elements: !1452)
!1452 = !{!1453, !1456, !1457, !1458, !1459, !1461, !1462, !1467, !1468, !1469, !1470, !1471, !1472}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1451, file: !157, line: 2356, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !157, line: 2356, flags: DIFlagFwdDecl)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1451, file: !157, line: 2357, baseType: !777, size: 64, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1451, file: !157, line: 2358, baseType: !772, size: 32, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1451, file: !157, line: 2359, baseType: !772, size: 32, offset: 160)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1451, file: !157, line: 2360, baseType: !1460, size: 128, offset: 192)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 128, elements: !903)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1451, file: !157, line: 2364, baseType: !772, size: 32, offset: 320)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1451, file: !157, line: 2367, baseType: !1463, size: 128, offset: 384)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !157, line: 2349, size: 128, elements: !1464)
!1464 = !{!1465, !1466}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1463, file: !157, line: 2351, baseType: !787, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1463, file: !157, line: 2352, baseType: !782, size: 64, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1451, file: !157, line: 2371, baseType: !156, size: 32, offset: 512)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1451, file: !157, line: 2374, baseType: !9, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1451, file: !157, line: 2377, baseType: !9, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1451, file: !157, line: 2381, baseType: !9, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1451, file: !157, line: 2392, baseType: !9, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1451, file: !157, line: 2396, baseType: !9, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1169, file: !1170, line: 504, baseType: !1474, size: 64, offset: 704)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1170, line: 504, flags: DIFlagFwdDecl)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1169, file: !1170, line: 507, baseType: !1253, size: 64, offset: 768)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1169, file: !1170, line: 510, baseType: !772, size: 32, offset: 832)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1169, file: !1170, line: 513, baseType: !772, size: 32, offset: 864)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1169, file: !1170, line: 516, baseType: !1043, size: 32, offset: 896)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1169, file: !1170, line: 519, baseType: !1043, size: 32, offset: 928)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1169, file: !1170, line: 522, baseType: !9, size: 32, offset: 960)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1169, file: !1170, line: 523, baseType: !9, size: 32, offset: 992)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1169, file: !1170, line: 528, baseType: !777, size: 64, offset: 1024)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1169, file: !1170, line: 535, baseType: !9, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1169, file: !1170, line: 539, baseType: !9, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1169, file: !1170, line: 543, baseType: !9, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1169, file: !1170, line: 546, baseType: !9, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1169, file: !1170, line: 550, baseType: !9, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1169, file: !1170, line: 554, baseType: !9, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1169, file: !1170, line: 559, baseType: !9, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1169, file: !1170, line: 562, baseType: !9, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1169, file: !1170, line: 571, baseType: !9, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1169, file: !1170, line: 573, baseType: !9, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1169, file: !1170, line: 574, baseType: !9, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1169, file: !1170, line: 581, baseType: !9, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1169, file: !1170, line: 585, baseType: !9, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1169, file: !1170, line: 588, baseType: !9, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1169, file: !1170, line: 592, baseType: !9, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1169, file: !1170, line: 598, baseType: !9, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1164, file: !162, line: 3254, baseType: !923, size: 64, offset: 1536)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1164, file: !162, line: 3257, baseType: !923, size: 64, offset: 1600)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1164, file: !162, line: 3258, baseType: !923, size: 64, offset: 1664)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1164, file: !162, line: 3264, baseType: !9, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1164, file: !162, line: 3265, baseType: !9, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1164, file: !162, line: 3267, baseType: !9, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1164, file: !162, line: 3268, baseType: !9, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1164, file: !162, line: 3269, baseType: !9, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1164, file: !162, line: 3271, baseType: !9, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1164, file: !162, line: 3272, baseType: !9, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1164, file: !162, line: 3273, baseType: !9, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1164, file: !162, line: 3274, baseType: !9, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1164, file: !162, line: 3275, baseType: !9, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1164, file: !162, line: 3276, baseType: !9, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1164, file: !162, line: 3277, baseType: !9, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1164, file: !162, line: 3279, baseType: !9, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1164, file: !162, line: 3280, baseType: !9, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1164, file: !162, line: 3281, baseType: !9, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1164, file: !162, line: 3282, baseType: !9, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1164, file: !162, line: 3283, baseType: !9, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1164, file: !162, line: 3284, baseType: !9, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !925, file: !162, line: 3394, baseType: !1522, size: 1344)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !162, line: 2279, size: 1344, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1549, !1550, !1551, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1522, file: !162, line: 2280, baseType: !961, size: 192)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1522, file: !162, line: 2281, baseType: !923, size: 64, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1522, file: !162, line: 2282, baseType: !923, size: 64, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1522, file: !162, line: 2283, baseType: !923, size: 64, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1522, file: !162, line: 2284, baseType: !923, size: 64, offset: 384)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1522, file: !162, line: 2285, baseType: !9, size: 32, offset: 448)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1522, file: !162, line: 2287, baseType: !9, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1522, file: !162, line: 2288, baseType: !9, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1522, file: !162, line: 2289, baseType: !9, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1522, file: !162, line: 2290, baseType: !9, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1522, file: !162, line: 2291, baseType: !9, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1522, file: !162, line: 2292, baseType: !9, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1522, file: !162, line: 2294, baseType: !9, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1522, file: !162, line: 2296, baseType: !9, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1522, file: !162, line: 2297, baseType: !9, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1522, file: !162, line: 2298, baseType: !9, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1522, file: !162, line: 2299, baseType: !9, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1522, file: !162, line: 2300, baseType: !9, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1522, file: !162, line: 2301, baseType: !9, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1522, file: !162, line: 2302, baseType: !9, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1522, file: !162, line: 2303, baseType: !9, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1522, file: !162, line: 2305, baseType: !9, size: 32, offset: 512)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1522, file: !162, line: 2306, baseType: !1547, size: 32, offset: 544)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1548, line: 31, baseType: !772)
!1548 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1522, file: !162, line: 2307, baseType: !923, size: 64, offset: 576)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1522, file: !162, line: 2308, baseType: !923, size: 64, offset: 640)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1522, file: !162, line: 2314, baseType: !1552, size: 64, offset: 704)
!1552 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !162, line: 2309, size: 64, elements: !1553)
!1553 = !{!1554, !1555, !1556}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1552, file: !162, line: 2310, baseType: !772, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1552, file: !162, line: 2311, baseType: !777, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1552, file: !162, line: 2312, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !162, line: 2277, flags: DIFlagFwdDecl)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1522, file: !162, line: 2315, baseType: !923, size: 64, offset: 768)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1522, file: !162, line: 2316, baseType: !923, size: 64, offset: 832)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1522, file: !162, line: 2317, baseType: !923, size: 64, offset: 896)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1522, file: !162, line: 2318, baseType: !923, size: 64, offset: 960)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1522, file: !162, line: 2319, baseType: !923, size: 64, offset: 1024)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1522, file: !162, line: 2320, baseType: !923, size: 64, offset: 1088)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1522, file: !162, line: 2321, baseType: !923, size: 64, offset: 1152)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1522, file: !162, line: 2322, baseType: !923, size: 64, offset: 1216)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1522, file: !162, line: 2324, baseType: !1568, size: 64, offset: 1280)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !162, line: 2324, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !925, file: !162, line: 3395, baseType: !1571, size: 320)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !162, line: 1469, size: 320, elements: !1572)
!1572 = !{!1573, !1574, !1575}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1571, file: !162, line: 1470, baseType: !961, size: 192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1571, file: !162, line: 1471, baseType: !923, size: 64, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1571, file: !162, line: 1472, baseType: !923, size: 64, offset: 256)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !925, file: !162, line: 3396, baseType: !1577, size: 320)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !162, line: 1482, size: 320, elements: !1578)
!1578 = !{!1579, !1580, !1581}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1577, file: !162, line: 1483, baseType: !961, size: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1577, file: !162, line: 1484, baseType: !772, size: 32, offset: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1577, file: !162, line: 1485, baseType: !1313, size: 64, offset: 256)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !925, file: !162, line: 3397, baseType: !1583, size: 384)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !162, line: 1829, size: 384, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1583, file: !162, line: 1830, baseType: !961, size: 192)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1583, file: !162, line: 1831, baseType: !1043, size: 32, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1583, file: !162, line: 1832, baseType: !923, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1583, file: !162, line: 1835, baseType: !1313, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !925, file: !162, line: 3398, baseType: !1590, size: 704)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !162, line: 1898, size: 704, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1598, !1599, !1602}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1590, file: !162, line: 1899, baseType: !961, size: 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1590, file: !162, line: 1902, baseType: !923, size: 64, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1590, file: !162, line: 1905, baseType: !1595, size: 64, offset: 256)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !788, line: 58, baseType: !1596)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !788, line: 57, flags: DIFlagFwdDecl)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1590, file: !162, line: 1908, baseType: !9, size: 32, offset: 320)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1590, file: !162, line: 1911, baseType: !1600, size: 64, offset: 384)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !162, line: 1876, flags: DIFlagFwdDecl)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1590, file: !162, line: 1914, baseType: !1603, size: 256, offset: 448)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !162, line: 1883, size: 256, elements: !1604)
!1604 = !{!1605, !1607, !1608, !1613}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1603, file: !162, line: 1884, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1603, file: !162, line: 1885, baseType: !1606, size: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1603, file: !162, line: 1891, baseType: !1609, size: 64, offset: 128)
!1609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1603, file: !162, line: 1891, size: 64, elements: !1610)
!1610 = !{!1611, !1612}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1609, file: !162, line: 1891, baseType: !1595, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1609, file: !162, line: 1891, baseType: !923, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1603, file: !162, line: 1892, baseType: !1614, size: 64, offset: 192)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !925, file: !162, line: 3399, baseType: !1616, size: 704)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !162, line: 2008, size: 704, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1616, file: !162, line: 2009, baseType: !961, size: 192)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1616, file: !162, line: 2011, baseType: !9, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1616, file: !162, line: 2012, baseType: !9, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1616, file: !162, line: 2014, baseType: !1043, size: 32, offset: 224)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1616, file: !162, line: 2016, baseType: !923, size: 64, offset: 256)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1616, file: !162, line: 2017, baseType: !1302, size: 64, offset: 320)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1616, file: !162, line: 2019, baseType: !923, size: 64, offset: 384)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1616, file: !162, line: 2020, baseType: !923, size: 64, offset: 448)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1616, file: !162, line: 2021, baseType: !923, size: 64, offset: 512)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1616, file: !162, line: 2022, baseType: !923, size: 64, offset: 576)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1616, file: !162, line: 2023, baseType: !923, size: 64, offset: 640)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !925, file: !162, line: 3400, baseType: !1630, size: 832)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !162, line: 2430, size: 832, elements: !1631)
!1631 = !{!1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1630, file: !162, line: 2431, baseType: !961, size: 192)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1630, file: !162, line: 2433, baseType: !923, size: 64, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1630, file: !162, line: 2434, baseType: !923, size: 64, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1630, file: !162, line: 2435, baseType: !923, size: 64, offset: 320)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1630, file: !162, line: 2436, baseType: !923, size: 64, offset: 384)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1630, file: !162, line: 2437, baseType: !1302, size: 64, offset: 448)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1630, file: !162, line: 2438, baseType: !923, size: 64, offset: 512)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1630, file: !162, line: 2440, baseType: !923, size: 64, offset: 576)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1630, file: !162, line: 2441, baseType: !923, size: 64, offset: 640)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1630, file: !162, line: 2443, baseType: !1642, size: 128, offset: 704)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !162, line: 182, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !162, line: 182, size: 128, elements: !1644)
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1643, file: !162, line: 182, baseType: !1307, size: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !925, file: !162, line: 3401, baseType: !1647, size: 320)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !162, line: 3327, size: 320, elements: !1648)
!1648 = !{!1649, !1650, !1657}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1647, file: !162, line: 3329, baseType: !961, size: 192)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1647, file: !162, line: 3330, baseType: !1651, size: 64, offset: 192)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !162, line: 3320, size: 192, elements: !1653)
!1653 = !{!1654, !1655, !1656}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1652, file: !162, line: 3322, baseType: !1651, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1652, file: !162, line: 3323, baseType: !1651, size: 64, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1652, file: !162, line: 3324, baseType: !923, size: 64, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1647, file: !162, line: 3331, baseType: !1651, size: 64, offset: 256)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !925, file: !162, line: 3402, baseType: !1659, size: 256)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !162, line: 1540, size: 256, elements: !1660)
!1660 = !{!1661, !1662}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1659, file: !162, line: 1541, baseType: !961, size: 192)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1659, file: !162, line: 1542, baseType: !1663, size: 64, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !162, line: 1538, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !162, line: 1538, size: 192, elements: !1666)
!1666 = !{!1667}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1665, file: !162, line: 1538, baseType: !1668, size: 192)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !162, line: 1537, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !162, line: 1537, size: 192, elements: !1670)
!1670 = !{!1671, !1672, !1673}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1669, file: !162, line: 1537, baseType: !9, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1669, file: !162, line: 1537, baseType: !9, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1669, file: !162, line: 1537, baseType: !1674, size: 128, offset: 64)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1675, size: 128, elements: !822)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !162, line: 1535, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !162, line: 1532, size: 128, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1676, file: !162, line: 1533, baseType: !923, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1676, file: !162, line: 1534, baseType: !923, size: 64, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !925, file: !162, line: 3403, baseType: !1681, size: 512)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !162, line: 1938, size: 512, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686, !1692, !1693, !1694}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1681, file: !162, line: 1939, baseType: !961, size: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1681, file: !162, line: 1940, baseType: !1043, size: 32, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1681, file: !162, line: 1941, baseType: !161, size: 32, offset: 224)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1681, file: !162, line: 1946, baseType: !1687, size: 32, offset: 256)
!1687 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !162, line: 1942, size: 32, elements: !1688)
!1688 = !{!1689, !1690, !1691}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1687, file: !162, line: 1943, baseType: !180, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1687, file: !162, line: 1944, baseType: !187, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1687, file: !162, line: 1945, baseType: !194, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1681, file: !162, line: 1950, baseType: !1365, size: 64, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1681, file: !162, line: 1951, baseType: !1365, size: 64, offset: 384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1681, file: !162, line: 1953, baseType: !1313, size: 64, offset: 448)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !925, file: !162, line: 3404, baseType: !1696, size: 1664)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !162, line: 3337, size: 1664, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1696, file: !162, line: 3338, baseType: !961, size: 192)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1696, file: !162, line: 3341, baseType: !1700, size: 1472, offset: 192)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1701, line: 410, size: 1472, elements: !1702)
!1701 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1702 = !{!1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1700, file: !1701, line: 412, baseType: !772, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1700, file: !1701, line: 413, baseType: !772, size: 32, offset: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1700, file: !1701, line: 414, baseType: !772, size: 32, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1700, file: !1701, line: 415, baseType: !772, size: 32, offset: 96)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1700, file: !1701, line: 416, baseType: !772, size: 32, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1700, file: !1701, line: 417, baseType: !772, size: 32, offset: 160)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1700, file: !1701, line: 418, baseType: !6, size: 8, offset: 192)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1700, file: !1701, line: 419, baseType: !6, size: 8, offset: 200)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1700, file: !1701, line: 420, baseType: !1712, size: 8, offset: 208)
!1712 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1700, file: !1701, line: 421, baseType: !1712, size: 8, offset: 216)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1700, file: !1701, line: 422, baseType: !1712, size: 8, offset: 224)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1700, file: !1701, line: 423, baseType: !1712, size: 8, offset: 232)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1700, file: !1701, line: 424, baseType: !1712, size: 8, offset: 240)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1700, file: !1701, line: 425, baseType: !1712, size: 8, offset: 248)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1700, file: !1701, line: 426, baseType: !1712, size: 8, offset: 256)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1700, file: !1701, line: 427, baseType: !1712, size: 8, offset: 264)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1700, file: !1701, line: 428, baseType: !1712, size: 8, offset: 272)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1700, file: !1701, line: 429, baseType: !1712, size: 8, offset: 280)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1700, file: !1701, line: 430, baseType: !1712, size: 8, offset: 288)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1700, file: !1701, line: 431, baseType: !1712, size: 8, offset: 296)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1700, file: !1701, line: 432, baseType: !1712, size: 8, offset: 304)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1700, file: !1701, line: 433, baseType: !1712, size: 8, offset: 312)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1700, file: !1701, line: 434, baseType: !1712, size: 8, offset: 320)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1700, file: !1701, line: 435, baseType: !1712, size: 8, offset: 328)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1700, file: !1701, line: 436, baseType: !1712, size: 8, offset: 336)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1700, file: !1701, line: 437, baseType: !1712, size: 8, offset: 344)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1700, file: !1701, line: 438, baseType: !1712, size: 8, offset: 352)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1700, file: !1701, line: 439, baseType: !1712, size: 8, offset: 360)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1700, file: !1701, line: 440, baseType: !1712, size: 8, offset: 368)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1700, file: !1701, line: 441, baseType: !1712, size: 8, offset: 376)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1700, file: !1701, line: 442, baseType: !1712, size: 8, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1700, file: !1701, line: 443, baseType: !1712, size: 8, offset: 392)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1700, file: !1701, line: 444, baseType: !1712, size: 8, offset: 400)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1700, file: !1701, line: 445, baseType: !1712, size: 8, offset: 408)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1700, file: !1701, line: 446, baseType: !1712, size: 8, offset: 416)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1700, file: !1701, line: 447, baseType: !1712, size: 8, offset: 424)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1700, file: !1701, line: 448, baseType: !1712, size: 8, offset: 432)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1700, file: !1701, line: 449, baseType: !1712, size: 8, offset: 440)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1700, file: !1701, line: 450, baseType: !1712, size: 8, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1700, file: !1701, line: 451, baseType: !1712, size: 8, offset: 456)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1700, file: !1701, line: 452, baseType: !1712, size: 8, offset: 464)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1700, file: !1701, line: 453, baseType: !1712, size: 8, offset: 472)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1700, file: !1701, line: 454, baseType: !1712, size: 8, offset: 480)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1700, file: !1701, line: 455, baseType: !1712, size: 8, offset: 488)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1700, file: !1701, line: 456, baseType: !1712, size: 8, offset: 496)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1700, file: !1701, line: 457, baseType: !1712, size: 8, offset: 504)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1700, file: !1701, line: 458, baseType: !1712, size: 8, offset: 512)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1700, file: !1701, line: 459, baseType: !1712, size: 8, offset: 520)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1700, file: !1701, line: 460, baseType: !1712, size: 8, offset: 528)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1700, file: !1701, line: 461, baseType: !1712, size: 8, offset: 536)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1700, file: !1701, line: 462, baseType: !1712, size: 8, offset: 544)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1700, file: !1701, line: 463, baseType: !1712, size: 8, offset: 552)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1700, file: !1701, line: 464, baseType: !1712, size: 8, offset: 560)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1700, file: !1701, line: 465, baseType: !1712, size: 8, offset: 568)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1700, file: !1701, line: 466, baseType: !1712, size: 8, offset: 576)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1700, file: !1701, line: 467, baseType: !1712, size: 8, offset: 584)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1700, file: !1701, line: 468, baseType: !1712, size: 8, offset: 592)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1700, file: !1701, line: 469, baseType: !1712, size: 8, offset: 600)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1700, file: !1701, line: 470, baseType: !1712, size: 8, offset: 608)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1700, file: !1701, line: 471, baseType: !1712, size: 8, offset: 616)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1700, file: !1701, line: 472, baseType: !1712, size: 8, offset: 624)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1700, file: !1701, line: 473, baseType: !1712, size: 8, offset: 632)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1700, file: !1701, line: 474, baseType: !1712, size: 8, offset: 640)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1700, file: !1701, line: 475, baseType: !1712, size: 8, offset: 648)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1700, file: !1701, line: 476, baseType: !1712, size: 8, offset: 656)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1700, file: !1701, line: 477, baseType: !1712, size: 8, offset: 664)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1700, file: !1701, line: 478, baseType: !1712, size: 8, offset: 672)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1700, file: !1701, line: 479, baseType: !1712, size: 8, offset: 680)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1700, file: !1701, line: 480, baseType: !1712, size: 8, offset: 688)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1700, file: !1701, line: 481, baseType: !1712, size: 8, offset: 696)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1700, file: !1701, line: 482, baseType: !1712, size: 8, offset: 704)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1700, file: !1701, line: 483, baseType: !1712, size: 8, offset: 712)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1700, file: !1701, line: 484, baseType: !1712, size: 8, offset: 720)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1700, file: !1701, line: 485, baseType: !1712, size: 8, offset: 728)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1700, file: !1701, line: 486, baseType: !1712, size: 8, offset: 736)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1700, file: !1701, line: 487, baseType: !1712, size: 8, offset: 744)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1700, file: !1701, line: 488, baseType: !1712, size: 8, offset: 752)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1700, file: !1701, line: 489, baseType: !1712, size: 8, offset: 760)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1700, file: !1701, line: 490, baseType: !1712, size: 8, offset: 768)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1700, file: !1701, line: 491, baseType: !1712, size: 8, offset: 776)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1700, file: !1701, line: 492, baseType: !1712, size: 8, offset: 784)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1700, file: !1701, line: 493, baseType: !1712, size: 8, offset: 792)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1700, file: !1701, line: 494, baseType: !1712, size: 8, offset: 800)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1700, file: !1701, line: 495, baseType: !1712, size: 8, offset: 808)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1700, file: !1701, line: 496, baseType: !1712, size: 8, offset: 816)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1700, file: !1701, line: 497, baseType: !1712, size: 8, offset: 824)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1700, file: !1701, line: 498, baseType: !1712, size: 8, offset: 832)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1700, file: !1701, line: 499, baseType: !1712, size: 8, offset: 840)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1700, file: !1701, line: 500, baseType: !1712, size: 8, offset: 848)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1700, file: !1701, line: 501, baseType: !1712, size: 8, offset: 856)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1700, file: !1701, line: 502, baseType: !1712, size: 8, offset: 864)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1700, file: !1701, line: 503, baseType: !1712, size: 8, offset: 872)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1700, file: !1701, line: 504, baseType: !1712, size: 8, offset: 880)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1700, file: !1701, line: 505, baseType: !1712, size: 8, offset: 888)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1700, file: !1701, line: 506, baseType: !1712, size: 8, offset: 896)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1700, file: !1701, line: 507, baseType: !1712, size: 8, offset: 904)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1700, file: !1701, line: 508, baseType: !1712, size: 8, offset: 912)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1700, file: !1701, line: 509, baseType: !1712, size: 8, offset: 920)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1700, file: !1701, line: 510, baseType: !1712, size: 8, offset: 928)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1700, file: !1701, line: 511, baseType: !1712, size: 8, offset: 936)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1700, file: !1701, line: 512, baseType: !1712, size: 8, offset: 944)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1700, file: !1701, line: 513, baseType: !1712, size: 8, offset: 952)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1700, file: !1701, line: 514, baseType: !1712, size: 8, offset: 960)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1700, file: !1701, line: 515, baseType: !1712, size: 8, offset: 968)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1700, file: !1701, line: 516, baseType: !1712, size: 8, offset: 976)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1700, file: !1701, line: 517, baseType: !1712, size: 8, offset: 984)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1700, file: !1701, line: 518, baseType: !1712, size: 8, offset: 992)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1700, file: !1701, line: 519, baseType: !1712, size: 8, offset: 1000)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1700, file: !1701, line: 520, baseType: !1712, size: 8, offset: 1008)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1700, file: !1701, line: 521, baseType: !1712, size: 8, offset: 1016)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1700, file: !1701, line: 522, baseType: !1712, size: 8, offset: 1024)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1700, file: !1701, line: 523, baseType: !1712, size: 8, offset: 1032)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1700, file: !1701, line: 524, baseType: !1712, size: 8, offset: 1040)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1700, file: !1701, line: 525, baseType: !1712, size: 8, offset: 1048)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1700, file: !1701, line: 526, baseType: !1712, size: 8, offset: 1056)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1700, file: !1701, line: 527, baseType: !1712, size: 8, offset: 1064)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1700, file: !1701, line: 528, baseType: !1712, size: 8, offset: 1072)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1700, file: !1701, line: 529, baseType: !1712, size: 8, offset: 1080)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1700, file: !1701, line: 530, baseType: !1712, size: 8, offset: 1088)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1700, file: !1701, line: 531, baseType: !1712, size: 8, offset: 1096)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1700, file: !1701, line: 532, baseType: !1712, size: 8, offset: 1104)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1700, file: !1701, line: 533, baseType: !1712, size: 8, offset: 1112)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1700, file: !1701, line: 534, baseType: !1712, size: 8, offset: 1120)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1700, file: !1701, line: 535, baseType: !1712, size: 8, offset: 1128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1700, file: !1701, line: 536, baseType: !1712, size: 8, offset: 1136)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1700, file: !1701, line: 537, baseType: !1712, size: 8, offset: 1144)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1700, file: !1701, line: 538, baseType: !1712, size: 8, offset: 1152)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1700, file: !1701, line: 539, baseType: !1712, size: 8, offset: 1160)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1700, file: !1701, line: 540, baseType: !1712, size: 8, offset: 1168)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1700, file: !1701, line: 541, baseType: !1712, size: 8, offset: 1176)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1700, file: !1701, line: 542, baseType: !1712, size: 8, offset: 1184)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1700, file: !1701, line: 543, baseType: !1712, size: 8, offset: 1192)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1700, file: !1701, line: 544, baseType: !1712, size: 8, offset: 1200)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1700, file: !1701, line: 545, baseType: !1712, size: 8, offset: 1208)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1700, file: !1701, line: 546, baseType: !1712, size: 8, offset: 1216)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1700, file: !1701, line: 547, baseType: !1712, size: 8, offset: 1224)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1700, file: !1701, line: 548, baseType: !1712, size: 8, offset: 1232)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1700, file: !1701, line: 549, baseType: !1712, size: 8, offset: 1240)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1700, file: !1701, line: 550, baseType: !1712, size: 8, offset: 1248)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1700, file: !1701, line: 551, baseType: !1712, size: 8, offset: 1256)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1700, file: !1701, line: 552, baseType: !1712, size: 8, offset: 1264)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1700, file: !1701, line: 553, baseType: !1712, size: 8, offset: 1272)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1700, file: !1701, line: 554, baseType: !1712, size: 8, offset: 1280)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1700, file: !1701, line: 555, baseType: !1712, size: 8, offset: 1288)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1700, file: !1701, line: 556, baseType: !1712, size: 8, offset: 1296)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1700, file: !1701, line: 557, baseType: !1712, size: 8, offset: 1304)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1700, file: !1701, line: 558, baseType: !1712, size: 8, offset: 1312)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1700, file: !1701, line: 559, baseType: !1712, size: 8, offset: 1320)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1700, file: !1701, line: 560, baseType: !1712, size: 8, offset: 1328)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1700, file: !1701, line: 561, baseType: !1712, size: 8, offset: 1336)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1700, file: !1701, line: 562, baseType: !1712, size: 8, offset: 1344)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1700, file: !1701, line: 563, baseType: !1712, size: 8, offset: 1352)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1700, file: !1701, line: 564, baseType: !1712, size: 8, offset: 1360)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1700, file: !1701, line: 565, baseType: !1712, size: 8, offset: 1368)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1700, file: !1701, line: 566, baseType: !1712, size: 8, offset: 1376)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1700, file: !1701, line: 567, baseType: !1712, size: 8, offset: 1384)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1700, file: !1701, line: 568, baseType: !1712, size: 8, offset: 1392)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1700, file: !1701, line: 569, baseType: !1712, size: 8, offset: 1400)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1700, file: !1701, line: 570, baseType: !1712, size: 8, offset: 1408)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1700, file: !1701, line: 571, baseType: !1712, size: 8, offset: 1416)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1700, file: !1701, line: 572, baseType: !1712, size: 8, offset: 1424)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1700, file: !1701, line: 573, baseType: !1712, size: 8, offset: 1432)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1700, file: !1701, line: 574, baseType: !1712, size: 8, offset: 1440)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !925, file: !162, line: 3405, baseType: !1868, size: 384)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !162, line: 3352, size: 384, elements: !1869)
!1869 = !{!1870, !1871}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1868, file: !162, line: 3353, baseType: !961, size: 192)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1868, file: !162, line: 3356, baseType: !1872, size: 192, offset: 192)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1701, line: 578, size: 192, elements: !1873)
!1873 = !{!1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1872, file: !1701, line: 580, baseType: !772, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1872, file: !1701, line: 581, baseType: !772, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1872, file: !1701, line: 582, baseType: !772, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1872, file: !1701, line: 583, baseType: !772, size: 32, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1872, file: !1701, line: 584, baseType: !6, size: 8, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1872, file: !1701, line: 585, baseType: !6, size: 8, offset: 136)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1872, file: !1701, line: 586, baseType: !6, size: 8, offset: 144)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1872, file: !1701, line: 587, baseType: !6, size: 8, offset: 152)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1872, file: !1701, line: 588, baseType: !6, size: 8, offset: 160)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1872, file: !1701, line: 589, baseType: !6, size: 8, offset: 168)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1872, file: !1701, line: 590, baseType: !6, size: 8, offset: 176)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !808, file: !594, line: 178, baseType: !1339, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !808, file: !594, line: 179, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !594, line: 150, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !594, line: 142, size: 320, elements: !1890)
!1890 = !{!1891, !1892, !1893, !1894, !1895, !1896}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1889, file: !594, line: 144, baseType: !923, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1889, file: !594, line: 145, baseType: !787, size: 64, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1889, file: !594, line: 146, baseType: !787, size: 64, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1889, file: !594, line: 147, baseType: !1547, size: 32, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1889, file: !594, line: 148, baseType: !9, size: 32, offset: 224)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1889, file: !594, line: 149, baseType: !6, size: 8, offset: 256)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !808, file: !594, line: 180, baseType: !1898, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !594, line: 162, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !594, line: 159, size: 128, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1900, file: !594, line: 160, baseType: !923, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1900, file: !594, line: 161, baseType: !782, size: 64, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !808, file: !594, line: 181, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !594, line: 181, flags: DIFlagFwdDecl)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !803, file: !594, line: 317, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !782, size: 64, elements: !822)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !803, file: !594, line: 318, baseType: !1910, size: 320)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !594, line: 188, size: 320, elements: !1911)
!1911 = !{!1912, !1914, !1969}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1910, file: !594, line: 190, baseType: !1913, size: 192)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 192, elements: !994)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1910, file: !594, line: 193, baseType: !1915, size: 64, offset: 192)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !594, line: 206, size: 320, elements: !1917)
!1917 = !{!1918, !1954, !1955, !1956, !1968}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1916, file: !594, line: 208, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !788, line: 62, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1922, line: 538, size: 256, elements: !1923)
!1922 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1923 = !{!1924, !1928, !1934, !1945}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1921, file: !1922, line: 539, baseType: !1925, size: 32)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1922, line: 482, size: 32, elements: !1926)
!1926 = !{!1927}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1925, file: !1922, line: 484, baseType: !9, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1921, file: !1922, line: 540, baseType: !1929, size: 192)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1922, line: 488, size: 192, elements: !1930)
!1930 = !{!1931, !1932, !1933}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1929, file: !1922, line: 489, baseType: !1925, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1929, file: !1922, line: 492, baseType: !777, size: 64, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1929, file: !1922, line: 496, baseType: !923, size: 64, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1921, file: !1922, line: 541, baseType: !1935, size: 256)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1922, line: 504, size: 256, elements: !1936)
!1936 = !{!1937, !1938, !1943, !1944}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1935, file: !1922, line: 505, baseType: !1925, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1935, file: !1922, line: 509, baseType: !1939, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1922, line: 501, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{null, !1264}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1935, file: !1922, line: 510, baseType: !1264, size: 64, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1935, file: !1922, line: 513, baseType: !1919, size: 64, offset: 192)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1921, file: !1922, line: 542, baseType: !1946, size: 128)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1922, line: 530, size: 128, elements: !1947)
!1947 = !{!1948, !1949}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1946, file: !1922, line: 531, baseType: !1925, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1946, file: !1922, line: 534, baseType: !1950, size: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1922, line: 525, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!6, !923, !777, !878, !878}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1916, file: !594, line: 211, baseType: !9, size: 32, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1916, file: !594, line: 214, baseType: !782, size: 64, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1916, file: !594, line: 224, baseType: !1957, size: 64, offset: 192)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !594, line: 202, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !594, line: 202, size: 128, elements: !1960)
!1960 = !{!1961}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1959, file: !594, line: 202, baseType: !1962, size: 128)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !594, line: 200, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !594, line: 200, size: 128, elements: !1964)
!1964 = !{!1965, !1966, !1967}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1963, file: !594, line: 200, baseType: !9, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1963, file: !594, line: 200, baseType: !9, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1963, file: !594, line: 200, baseType: !821, size: 64, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1916, file: !594, line: 234, baseType: !1957, size: 64, offset: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1910, file: !594, line: 197, baseType: !782, size: 64, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !803, file: !594, line: 319, baseType: !983, size: 256)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !803, file: !594, line: 320, baseType: !1002, size: 192)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1277, line: 35, baseType: !782)
!1973 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expr", file: !3, line: 276, size: 384, elements: !1979)
!1979 = !{!1980, !1981, !1982, !1983, !1991, !1992}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1978, file: !3, line: 279, baseType: !787, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap_index", scope: !1978, file: !3, line: 281, baseType: !772, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "next_same_hash", scope: !1978, file: !3, line: 283, baseType: !1977, size: 64, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "antic_occr", scope: !1978, file: !3, line: 289, baseType: !1984, size: 64, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "occr", file: !3, line: 305, size: 192, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1985, file: !3, line: 308, baseType: !1984, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1985, file: !3, line: 310, baseType: !787, size: 64, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "deleted_p", scope: !1985, file: !3, line: 312, baseType: !775, size: 8, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "copied_p", scope: !1985, file: !3, line: 317, baseType: !775, size: 8, offset: 136)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "avail_occr", scope: !1978, file: !3, line: 294, baseType: !1984, size: 64, offset: 256)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "reaching_reg", scope: !1978, file: !3, line: 298, baseType: !787, size: 64, offset: 320)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_avail_info", file: !3, line: 743, size: 128, elements: !1995)
!1995 = !{!1996, !1997, !1998}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "last_bb", scope: !1994, file: !3, line: 745, baseType: !1338, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "first_set", scope: !1994, file: !3, line: 746, baseType: !772, size: 32, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "last_set", scope: !1994, file: !3, line: 747, baseType: !772, size: 32, offset: 96)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !2000, line: 42, baseType: !878)
!2000 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ls_expr", file: !3, line: 362, size: 576, elements: !2003)
!2003 = !{!2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2002, file: !3, line: 364, baseType: !1977, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !2002, file: !3, line: 365, baseType: !787, size: 64, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_regs", scope: !2002, file: !3, line: 366, baseType: !787, size: 64, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "loads", scope: !2002, file: !3, line: 367, baseType: !787, size: 64, offset: 192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "stores", scope: !2002, file: !3, line: 368, baseType: !787, size: 64, offset: 256)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2002, file: !3, line: 369, baseType: !2001, size: 64, offset: 320)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !2002, file: !3, line: 370, baseType: !772, size: 32, offset: 384)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2002, file: !3, line: 371, baseType: !772, size: 32, offset: 416)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "hash_index", scope: !2002, file: !3, line: 372, baseType: !9, size: 32, offset: 448)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "reaching_reg", scope: !2002, file: !3, line: 373, baseType: !787, size: 64, offset: 512)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !788, line: 47, baseType: !862)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2002)
!2018 = !{!2019, !2020, !2048, !2050, !2052, !2066, !2068, !2073, !2075, !2077, !2079, !2081, !2083, !2085, !2087, !2090, !2092, !2094, !2096, !2098, !2100, !2108, !2110, !2118, !2120, !2122, !2127, !2129, !2131, !2133, !2146, !2148, !2150, !2152, !2154, !2156, !2158, !2160, !2162, !2164, !2166, !2168, !2170, !2172, !2174, !2176, !2185, !2187, !2189, !2191}
!2019 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(name: "pass_rtl_cprop", scope: !136, file: !3, line: 5108, type: !2022, isLocal: false, isDefinition: true)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !389, line: 162, size: 640, elements: !2023)
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2022, file: !389, line: 164, baseType: !2025, size: 640)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !389, line: 114, size: 640, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2033, !2037, !2039, !2040, !2041, !2043, !2044, !2045, !2046, !2047}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2025, file: !389, line: 117, baseType: !388, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2025, file: !389, line: 121, baseType: !777, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2025, file: !389, line: 125, baseType: !2030, size: 64, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!6}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2025, file: !389, line: 130, baseType: !2034, size: 64, offset: 192)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!9}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2025, file: !389, line: 133, baseType: !2038, size: 64, offset: 256)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2025, file: !389, line: 136, baseType: !2038, size: 64, offset: 320)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2025, file: !389, line: 139, baseType: !772, size: 32, offset: 384)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2025, file: !389, line: 143, baseType: !2042, size: 32, offset: 416)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !396, line: 80, baseType: !395)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2025, file: !389, line: 146, baseType: !9, size: 32, offset: 448)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2025, file: !389, line: 147, baseType: !9, size: 32, offset: 480)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2025, file: !389, line: 148, baseType: !9, size: 32, offset: 512)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2025, file: !389, line: 151, baseType: !9, size: 32, offset: 544)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2025, file: !389, line: 152, baseType: !9, size: 32, offset: 576)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "pass_rtl_pre", scope: !136, file: !3, line: 5129, type: !2022, isLocal: false, isDefinition: true)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "pass_rtl_hoist", scope: !136, file: !3, line: 5150, type: !2022, isLocal: false, isDefinition: true)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_gcse_h", scope: !136, file: !2054, line: 24, type: !2055, isLocal: false, isDefinition: true)
!2054 = !DIFile(filename: "./gt-gcse.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2056, size: 640, elements: !879)
!2056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2057)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2058, line: 69, size: 320, elements: !2059)
!2058 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2059 = !{!2060, !2061, !2062, !2063, !2065}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2057, file: !2058, line: 70, baseType: !776, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2057, file: !2058, line: 71, baseType: !1276, size: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2057, file: !2058, line: 72, baseType: !1276, size: 64, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2057, file: !2058, line: 73, baseType: !2064, size: 64, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2058, line: 65, baseType: !783)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2057, file: !2058, line: 74, baseType: !2064, size: 64, offset: 256)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "flag_rerun_cse_after_global_opts", scope: !136, file: !3, line: 267, type: !772, isLocal: false, isDefinition: true)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "can_copy", scope: !136, file: !3, line: 545, type: !2070, isLocal: true, isDefinition: true)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 696, elements: !2071)
!2071 = !{!2072}
!2072 = !DISubrange(count: 87)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "test_insn", scope: !136, file: !3, line: 786, type: !787, isLocal: true, isDefinition: true)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "local_const_prop_count", scope: !136, file: !3, line: 414, type: !772, isLocal: true, isDefinition: true)
!2077 = !DIGlobalVariableExpression(var: !2078, expr: !DIExpression())
!2078 = distinct !DIGlobalVariable(name: "global_const_prop_count", scope: !136, file: !3, line: 418, type: !772, isLocal: true, isDefinition: true)
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "local_copy_prop_count", scope: !136, file: !3, line: 416, type: !772, isLocal: true, isDefinition: true)
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "global_copy_prop_count", scope: !136, file: !3, line: 420, type: !772, isLocal: true, isDefinition: true)
!2083 = !DIGlobalVariableExpression(var: !2084, expr: !DIExpression())
!2084 = distinct !DIGlobalVariable(name: "bytes_used", scope: !136, file: !3, line: 407, type: !772, isLocal: true, isDefinition: true)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "gcse_obstack", scope: !136, file: !3, line: 270, type: !891, isLocal: true, isDefinition: true)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "reg_set_bitmap", scope: !136, file: !3, line: 388, type: !2089, isLocal: true, isDefinition: true)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !146, line: 37, baseType: !2015)
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(name: "modify_mem_list", scope: !136, file: !3, line: 392, type: !786, isLocal: true, isDefinition: true)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "canon_modify_mem_list", scope: !136, file: !3, line: 396, type: !786, isLocal: true, isDefinition: true)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(name: "modify_mem_list_set", scope: !136, file: !3, line: 393, type: !2015, isLocal: true, isDefinition: true)
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(name: "blocks_with_calls", scope: !136, file: !3, line: 400, type: !2015, isLocal: true, isDefinition: true)
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(name: "reg_use_count", scope: !136, file: !3, line: 2175, type: !772, isLocal: true, isDefinition: true)
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(name: "reg_use_table", scope: !136, file: !3, line: 2172, type: !2102, isLocal: true, isDefinition: true)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2103, size: 512, elements: !2106)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_use", file: !3, line: 272, size: 64, elements: !2104)
!2104 = !{!2105}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "reg_rtx", scope: !2103, file: !3, line: 272, baseType: !787, size: 64)
!2106 = !{!2107}
!2107 = !DISubrange(count: 8)
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(name: "implicit_sets", scope: !136, file: !3, line: 377, type: !786, isLocal: true, isDefinition: true)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "set_hash_table", scope: !136, file: !3, line: 349, type: !2112, isLocal: true, isDefinition: true)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table_d", file: !3, line: 329, size: 192, elements: !2113)
!2113 = !{!2114, !2115, !2116, !2117}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2112, file: !3, line: 333, baseType: !1976, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2112, file: !3, line: 336, baseType: !9, size: 32, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "n_elems", scope: !2112, file: !3, line: 339, baseType: !9, size: 32, offset: 96)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "set_p", scope: !2112, file: !3, line: 342, baseType: !772, size: 32, offset: 128)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "reg_avail_info", scope: !136, file: !3, line: 750, type: !1993, isLocal: true, isDefinition: true)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(name: "current_bb", scope: !136, file: !3, line: 751, type: !1338, isLocal: true, isDefinition: true)
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(name: "gcse_mem_operand", scope: !136, file: !3, line: 934, type: !2124, isLocal: true, isDefinition: true)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !788, line: 51, baseType: !2125)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "gcse_mems_conflict_p", scope: !136, file: !3, line: 928, type: !772, isLocal: true, isDefinition: true)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "pre_ldst_mems", scope: !136, file: !3, line: 380, type: !2001, isLocal: true, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "pre_ldst_table", scope: !136, file: !3, line: 383, type: !1253, isLocal: true, isDefinition: true)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "cprop_pavloc", scope: !136, file: !3, line: 1990, type: !2135, isLocal: true, isDefinition: true)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2137, line: 45, baseType: !2138)
!2137 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2137, line: 39, size: 192, elements: !2140)
!2140 = !{!2141, !2142, !2143, !2144}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2139, file: !2137, line: 41, baseType: !771, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2139, file: !2137, line: 42, baseType: !9, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2139, file: !2137, line: 43, baseType: !9, size: 32, offset: 96)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2139, file: !2137, line: 44, baseType: !2145, size: 64, offset: 128)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !878, size: 64, elements: !822)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "cprop_absaltered", scope: !136, file: !3, line: 1991, type: !2135, isLocal: true, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "cprop_avin", scope: !136, file: !3, line: 1994, type: !2135, isLocal: true, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "cprop_avout", scope: !136, file: !3, line: 1995, type: !2135, isLocal: true, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "bypass_last_basic_block", scope: !136, file: !3, line: 2882, type: !772, isLocal: true, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "gcse_subst_count", scope: !136, file: !3, line: 410, type: !772, isLocal: true, isDefinition: true)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "gcse_create_count", scope: !136, file: !3, line: 412, type: !772, isLocal: true, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "expr_hash_table", scope: !136, file: !3, line: 346, type: !2112, isLocal: true, isDefinition: true)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "transp", scope: !136, file: !3, line: 3169, type: !2135, isLocal: true, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "comp", scope: !136, file: !3, line: 3177, type: !2135, isLocal: true, isDefinition: true)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(name: "antloc", scope: !136, file: !3, line: 3180, type: !2135, isLocal: true, isDefinition: true)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "pre_optimal", scope: !136, file: !3, line: 3184, type: !2135, isLocal: true, isDefinition: true)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "pre_redundant", scope: !136, file: !3, line: 3187, type: !2135, isLocal: true, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "pre_insert_map", scope: !136, file: !3, line: 3190, type: !2135, isLocal: true, isDefinition: true)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "pre_delete_map", scope: !136, file: !3, line: 3193, type: !2135, isLocal: true, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "ae_kill", scope: !136, file: !3, line: 423, type: !2135, isLocal: true, isDefinition: true)
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "edge_list", scope: !136, file: !3, line: 3196, type: !2178, isLocal: true, isDefinition: true)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_list", file: !146, line: 572, size: 128, elements: !2180)
!2180 = !{!2181, !2182, !2183}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !2179, file: !146, line: 574, baseType: !772, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "num_edges", scope: !2179, file: !146, line: 575, baseType: !772, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "index_to_edge", scope: !2179, file: !146, line: 576, baseType: !2184, size: 64, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "hoist_vbein", scope: !136, file: !3, line: 4098, type: !2135, isLocal: true, isDefinition: true)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "hoist_vbeout", scope: !136, file: !3, line: 4099, type: !2135, isLocal: true, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "hoist_exprs", scope: !136, file: !3, line: 4102, type: !2135, isLocal: true, isDefinition: true)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "transpout", scope: !136, file: !3, line: 3174, type: !2135, isLocal: true, isDefinition: true)
!2193 = !{!2194}
!2194 = !DILocalVariable(name: "mode", arg: 1, scope: !2, file: !3, line: 580, type: !7)
!2195 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2196 = !{i32 2, !"Dwarf Version", i32 4}
!2197 = !{i32 2, !"Debug Info Version", i32 3}
!2198 = !{i32 1, !"wchar_size", i32 4}
!2199 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2200 = distinct !DISubprogram(name: "vprintf", scope: !2201, file: !2201, line: 39, type: !2202, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2212)
!2201 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!772, !2204, !2205}
!2204 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !777)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2207)
!2207 = !{!2208, !2209, !2210, !2211}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2206, file: !3, baseType: !9, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2206, file: !3, baseType: !9, size: 32, offset: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2206, file: !3, baseType: !776, size: 64, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2206, file: !3, baseType: !776, size: 64, offset: 128)
!2212 = !{!2213, !2214}
!2213 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2200, file: !2201, line: 39, type: !2204)
!2214 = !DILocalVariable(name: "__arg", arg: 2, scope: !2200, file: !2201, line: 39, type: !2205)
!2215 = !DILocation(line: 0, scope: !2200)
!2216 = !DILocation(line: 41, column: 20, scope: !2200)
!2217 = !DILocation(line: 41, column: 10, scope: !2200)
!2218 = !DILocation(line: 41, column: 3, scope: !2200)
!2219 = distinct !DISubprogram(name: "getchar", scope: !2201, file: !2201, line: 47, type: !2220, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2220 = !DISubroutineType(types: !2221)
!2221 = !{!772}
!2222 = !{}
!2223 = !DILocation(line: 49, column: 16, scope: !2219)
!2224 = !DILocation(line: 49, column: 10, scope: !2219)
!2225 = !DILocation(line: 49, column: 3, scope: !2219)
!2226 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2201, file: !2201, line: 56, type: !2227, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2279)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!772, !2229}
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2231, line: 7, baseType: !2232)
!2231 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2233, line: 49, size: 1728, elements: !2234)
!2233 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2234 = !{!2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2250, !2252, !2253, !2254, !2257, !2258, !2259, !2260, !2263, !2265, !2268, !2271, !2272, !2273, !2274, !2275}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2232, file: !2233, line: 51, baseType: !772, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2232, file: !2233, line: 54, baseType: !774, size: 64, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2232, file: !2233, line: 55, baseType: !774, size: 64, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2232, file: !2233, line: 56, baseType: !774, size: 64, offset: 192)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2232, file: !2233, line: 57, baseType: !774, size: 64, offset: 256)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2232, file: !2233, line: 58, baseType: !774, size: 64, offset: 320)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2232, file: !2233, line: 59, baseType: !774, size: 64, offset: 384)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2232, file: !2233, line: 60, baseType: !774, size: 64, offset: 448)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2232, file: !2233, line: 61, baseType: !774, size: 64, offset: 512)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2232, file: !2233, line: 64, baseType: !774, size: 64, offset: 576)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2232, file: !2233, line: 65, baseType: !774, size: 64, offset: 640)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2232, file: !2233, line: 66, baseType: !774, size: 64, offset: 704)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2232, file: !2233, line: 68, baseType: !2248, size: 64, offset: 768)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2233, line: 36, flags: DIFlagFwdDecl)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2232, file: !2233, line: 70, baseType: !2251, size: 64, offset: 832)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2232, file: !2233, line: 72, baseType: !772, size: 32, offset: 896)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2232, file: !2233, line: 73, baseType: !772, size: 32, offset: 928)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2232, file: !2233, line: 74, baseType: !2255, size: 64, offset: 960)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2256, line: 152, baseType: !782)
!2256 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2232, file: !2233, line: 77, baseType: !1973, size: 16, offset: 1024)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2232, file: !2233, line: 78, baseType: !1712, size: 8, offset: 1040)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2232, file: !2233, line: 79, baseType: !1018, size: 8, offset: 1048)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2232, file: !2233, line: 81, baseType: !2261, size: 64, offset: 1088)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2233, line: 43, baseType: null)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2232, file: !2233, line: 89, baseType: !2264, size: 64, offset: 1152)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2256, line: 153, baseType: !782)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2232, file: !2233, line: 91, baseType: !2266, size: 64, offset: 1216)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2233, line: 37, flags: DIFlagFwdDecl)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2232, file: !2233, line: 92, baseType: !2269, size: 64, offset: 1280)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2233, line: 38, flags: DIFlagFwdDecl)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2232, file: !2233, line: 93, baseType: !2251, size: 64, offset: 1344)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2232, file: !2233, line: 94, baseType: !776, size: 64, offset: 1408)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2232, file: !2233, line: 95, baseType: !1276, size: 64, offset: 1472)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2232, file: !2233, line: 96, baseType: !772, size: 32, offset: 1536)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2232, file: !2233, line: 98, baseType: !2276, size: 160, offset: 1568)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 160, elements: !2277)
!2277 = !{!2278}
!2278 = !DISubrange(count: 20)
!2279 = !{!2280}
!2280 = !DILocalVariable(name: "__fp", arg: 1, scope: !2226, file: !2201, line: 56, type: !2229)
!2281 = !DILocation(line: 0, scope: !2226)
!2282 = !DILocation(line: 58, column: 10, scope: !2226)
!2283 = !DILocation(line: 58, column: 3, scope: !2226)
!2284 = distinct !DISubprogram(name: "getc_unlocked", scope: !2201, file: !2201, line: 66, type: !2227, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2285)
!2285 = !{!2286}
!2286 = !DILocalVariable(name: "__fp", arg: 1, scope: !2284, file: !2201, line: 66, type: !2229)
!2287 = !DILocation(line: 0, scope: !2284)
!2288 = !DILocation(line: 68, column: 10, scope: !2284)
!2289 = !DILocation(line: 68, column: 3, scope: !2284)
!2290 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2201, file: !2201, line: 73, type: !2220, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2291 = !DILocation(line: 75, column: 10, scope: !2290)
!2292 = !DILocation(line: 75, column: 3, scope: !2290)
!2293 = distinct !DISubprogram(name: "putchar", scope: !2201, file: !2201, line: 82, type: !2294, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2296)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!772, !772}
!2296 = !{!2297}
!2297 = !DILocalVariable(name: "__c", arg: 1, scope: !2293, file: !2201, line: 82, type: !772)
!2298 = !DILocation(line: 0, scope: !2293)
!2299 = !DILocation(line: 84, column: 21, scope: !2293)
!2300 = !DILocation(line: 84, column: 10, scope: !2293)
!2301 = !DILocation(line: 84, column: 3, scope: !2293)
!2302 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2201, file: !2201, line: 91, type: !2303, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2305)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{!772, !772, !2229}
!2305 = !{!2306, !2307}
!2306 = !DILocalVariable(name: "__c", arg: 1, scope: !2302, file: !2201, line: 91, type: !772)
!2307 = !DILocalVariable(name: "__stream", arg: 2, scope: !2302, file: !2201, line: 91, type: !2229)
!2308 = !DILocation(line: 0, scope: !2302)
!2309 = !DILocation(line: 93, column: 10, scope: !2302)
!2310 = !DILocation(line: 93, column: 3, scope: !2302)
!2311 = distinct !DISubprogram(name: "putc_unlocked", scope: !2201, file: !2201, line: 101, type: !2303, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2312)
!2312 = !{!2313, !2314}
!2313 = !DILocalVariable(name: "__c", arg: 1, scope: !2311, file: !2201, line: 101, type: !772)
!2314 = !DILocalVariable(name: "__stream", arg: 2, scope: !2311, file: !2201, line: 101, type: !2229)
!2315 = !DILocation(line: 0, scope: !2311)
!2316 = !DILocation(line: 103, column: 10, scope: !2311)
!2317 = !DILocation(line: 103, column: 3, scope: !2311)
!2318 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2201, file: !2201, line: 108, type: !2294, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2319)
!2319 = !{!2320}
!2320 = !DILocalVariable(name: "__c", arg: 1, scope: !2318, file: !2201, line: 108, type: !772)
!2321 = !DILocation(line: 0, scope: !2318)
!2322 = !DILocation(line: 110, column: 10, scope: !2318)
!2323 = !DILocation(line: 110, column: 3, scope: !2318)
!2324 = distinct !DISubprogram(name: "getline", scope: !2201, file: !2201, line: 118, type: !2325, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2329)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!2327, !773, !2328, !2229}
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2256, line: 193, baseType: !782)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!2329 = !{!2330, !2331, !2332}
!2330 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2324, file: !2201, line: 118, type: !773)
!2331 = !DILocalVariable(name: "__n", arg: 2, scope: !2324, file: !2201, line: 118, type: !2328)
!2332 = !DILocalVariable(name: "__stream", arg: 3, scope: !2324, file: !2201, line: 118, type: !2229)
!2333 = !DILocation(line: 0, scope: !2324)
!2334 = !DILocation(line: 120, column: 10, scope: !2324)
!2335 = !DILocation(line: 120, column: 3, scope: !2324)
!2336 = distinct !DISubprogram(name: "feof_unlocked", scope: !2201, file: !2201, line: 128, type: !2227, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2337)
!2337 = !{!2338}
!2338 = !DILocalVariable(name: "__stream", arg: 1, scope: !2336, file: !2201, line: 128, type: !2229)
!2339 = !DILocation(line: 0, scope: !2336)
!2340 = !DILocation(line: 130, column: 10, scope: !2336)
!2341 = !DILocation(line: 130, column: 3, scope: !2336)
!2342 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2201, file: !2201, line: 135, type: !2227, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2343)
!2343 = !{!2344}
!2344 = !DILocalVariable(name: "__stream", arg: 1, scope: !2342, file: !2201, line: 135, type: !2229)
!2345 = !DILocation(line: 0, scope: !2342)
!2346 = !DILocation(line: 137, column: 10, scope: !2342)
!2347 = !DILocation(line: 137, column: 3, scope: !2342)
!2348 = distinct !DISubprogram(name: "tolower", scope: !2349, file: !2349, line: 207, type: !2294, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2350)
!2349 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2350 = !{!2351}
!2351 = !DILocalVariable(name: "__c", arg: 1, scope: !2348, file: !2349, line: 207, type: !772)
!2352 = !DILocation(line: 0, scope: !2348)
!2353 = !DILocation(line: 209, column: 22, scope: !2348)
!2354 = !DILocation(line: 209, column: 39, scope: !2348)
!2355 = !DILocation(line: 209, column: 38, scope: !2348)
!2356 = !DILocation(line: 209, column: 37, scope: !2348)
!2357 = !DILocation(line: 209, column: 10, scope: !2348)
!2358 = !DILocation(line: 209, column: 3, scope: !2348)
!2359 = distinct !DISubprogram(name: "toupper", scope: !2349, file: !2349, line: 213, type: !2294, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2360)
!2360 = !{!2361}
!2361 = !DILocalVariable(name: "__c", arg: 1, scope: !2359, file: !2349, line: 213, type: !772)
!2362 = !DILocation(line: 0, scope: !2359)
!2363 = !DILocation(line: 215, column: 22, scope: !2359)
!2364 = !DILocation(line: 215, column: 39, scope: !2359)
!2365 = !DILocation(line: 215, column: 38, scope: !2359)
!2366 = !DILocation(line: 215, column: 37, scope: !2359)
!2367 = !DILocation(line: 215, column: 10, scope: !2359)
!2368 = !DILocation(line: 215, column: 3, scope: !2359)
!2369 = distinct !DISubprogram(name: "atoi", scope: !2370, file: !2370, line: 361, type: !2371, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2373)
!2370 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!772, !777}
!2373 = !{!2374}
!2374 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2369, file: !2370, line: 361, type: !777)
!2375 = !DILocation(line: 0, scope: !2369)
!2376 = !DILocation(line: 363, column: 16, scope: !2369)
!2377 = !DILocation(line: 363, column: 10, scope: !2369)
!2378 = !DILocation(line: 363, column: 3, scope: !2369)
!2379 = distinct !DISubprogram(name: "atol", scope: !2370, file: !2370, line: 366, type: !2380, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2382)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!782, !777}
!2382 = !{!2383}
!2383 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2379, file: !2370, line: 366, type: !777)
!2384 = !DILocation(line: 0, scope: !2379)
!2385 = !DILocation(line: 368, column: 10, scope: !2379)
!2386 = !DILocation(line: 368, column: 3, scope: !2379)
!2387 = distinct !DISubprogram(name: "atoll", scope: !2370, file: !2370, line: 373, type: !2388, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2391)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{!2390, !777}
!2390 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2391 = !{!2392}
!2392 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2387, file: !2370, line: 373, type: !777)
!2393 = !DILocation(line: 0, scope: !2387)
!2394 = !DILocation(line: 375, column: 10, scope: !2387)
!2395 = !DILocation(line: 375, column: 3, scope: !2387)
!2396 = distinct !DISubprogram(name: "bsearch", scope: !2397, file: !2397, line: 20, type: !2398, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2401)
!2397 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2398 = !DISubroutineType(types: !2399)
!2399 = !{!776, !1264, !1264, !1276, !1276, !2400}
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2370, line: 808, baseType: !1268)
!2401 = !{!2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411}
!2402 = !DILocalVariable(name: "__key", arg: 1, scope: !2396, file: !2397, line: 20, type: !1264)
!2403 = !DILocalVariable(name: "__base", arg: 2, scope: !2396, file: !2397, line: 20, type: !1264)
!2404 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2396, file: !2397, line: 20, type: !1276)
!2405 = !DILocalVariable(name: "__size", arg: 4, scope: !2396, file: !2397, line: 20, type: !1276)
!2406 = !DILocalVariable(name: "__compar", arg: 5, scope: !2396, file: !2397, line: 21, type: !2400)
!2407 = !DILocalVariable(name: "__l", scope: !2396, file: !2397, line: 23, type: !1276)
!2408 = !DILocalVariable(name: "__u", scope: !2396, file: !2397, line: 23, type: !1276)
!2409 = !DILocalVariable(name: "__idx", scope: !2396, file: !2397, line: 23, type: !1276)
!2410 = !DILocalVariable(name: "__p", scope: !2396, file: !2397, line: 24, type: !1264)
!2411 = !DILocalVariable(name: "__comparison", scope: !2396, file: !2397, line: 25, type: !772)
!2412 = !DILocation(line: 0, scope: !2396)
!2413 = !DILocation(line: 29, column: 3, scope: !2396)
!2414 = !DILocation(line: 27, column: 7, scope: !2396)
!2415 = !DILocation(line: 29, column: 14, scope: !2396)
!2416 = !DILocation(line: 31, column: 20, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2396, file: !2397, line: 30, column: 5)
!2418 = !DILocation(line: 31, column: 27, scope: !2417)
!2419 = !DILocation(line: 32, column: 56, scope: !2417)
!2420 = !DILocation(line: 32, column: 47, scope: !2417)
!2421 = !DILocation(line: 33, column: 22, scope: !2417)
!2422 = !DILocation(line: 34, column: 24, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2417, file: !2397, line: 34, column: 11)
!2424 = !DILocation(line: 34, column: 11, scope: !2417)
!2425 = !DILocation(line: 36, column: 29, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2423, file: !2397, line: 36, column: 16)
!2427 = !DILocation(line: 36, column: 16, scope: !2423)
!2428 = !DILocation(line: 37, column: 14, scope: !2426)
!2429 = distinct !{!2429, !2413, !2430}
!2430 = !DILocation(line: 40, column: 5, scope: !2396)
!2431 = !DILocation(line: 43, column: 1, scope: !2396)
!2432 = distinct !DISubprogram(name: "atof", scope: !2433, file: !2433, line: 25, type: !2434, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2437)
!2433 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!2436, !777}
!2436 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2437 = !{!2438}
!2438 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2432, file: !2433, line: 25, type: !777)
!2439 = !DILocation(line: 0, scope: !2432)
!2440 = !DILocation(line: 27, column: 10, scope: !2432)
!2441 = !DILocation(line: 27, column: 3, scope: !2432)
!2442 = distinct !DISubprogram(name: "strtoimax", scope: !2443, file: !2443, line: 324, type: !2444, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2450)
!2443 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2444 = !DISubroutineType(types: !2445)
!2445 = !{!2446, !2204, !2449, !772}
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2447, line: 101, baseType: !2448)
!2447 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2256, line: 72, baseType: !782)
!2449 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !773)
!2450 = !{!2451, !2452, !2453}
!2451 = !DILocalVariable(name: "nptr", arg: 1, scope: !2442, file: !2443, line: 324, type: !2204)
!2452 = !DILocalVariable(name: "endptr", arg: 2, scope: !2442, file: !2443, line: 324, type: !2449)
!2453 = !DILocalVariable(name: "base", arg: 3, scope: !2442, file: !2443, line: 324, type: !772)
!2454 = !DILocation(line: 0, scope: !2442)
!2455 = !DILocation(line: 327, column: 10, scope: !2442)
!2456 = !DILocation(line: 327, column: 3, scope: !2442)
!2457 = distinct !DISubprogram(name: "strtoumax", scope: !2443, file: !2443, line: 336, type: !2458, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2462)
!2458 = !DISubroutineType(types: !2459)
!2459 = !{!2460, !2204, !2449, !772}
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2447, line: 102, baseType: !2461)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2256, line: 73, baseType: !878)
!2462 = !{!2463, !2464, !2465}
!2463 = !DILocalVariable(name: "nptr", arg: 1, scope: !2457, file: !2443, line: 336, type: !2204)
!2464 = !DILocalVariable(name: "endptr", arg: 2, scope: !2457, file: !2443, line: 336, type: !2449)
!2465 = !DILocalVariable(name: "base", arg: 3, scope: !2457, file: !2443, line: 336, type: !772)
!2466 = !DILocation(line: 0, scope: !2457)
!2467 = !DILocation(line: 339, column: 10, scope: !2457)
!2468 = !DILocation(line: 339, column: 3, scope: !2457)
!2469 = distinct !DISubprogram(name: "wcstoimax", scope: !2443, file: !2443, line: 348, type: !2470, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2479)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!2446, !2472, !2476, !772}
!2472 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2473)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2443, line: 34, baseType: !772)
!2476 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2477)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2479 = !{!2480, !2481, !2482}
!2480 = !DILocalVariable(name: "nptr", arg: 1, scope: !2469, file: !2443, line: 348, type: !2472)
!2481 = !DILocalVariable(name: "endptr", arg: 2, scope: !2469, file: !2443, line: 348, type: !2476)
!2482 = !DILocalVariable(name: "base", arg: 3, scope: !2469, file: !2443, line: 348, type: !772)
!2483 = !DILocation(line: 0, scope: !2469)
!2484 = !DILocation(line: 351, column: 10, scope: !2469)
!2485 = !DILocation(line: 351, column: 3, scope: !2469)
!2486 = distinct !DISubprogram(name: "wcstoumax", scope: !2443, file: !2443, line: 362, type: !2487, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2489)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!2460, !2472, !2476, !772}
!2489 = !{!2490, !2491, !2492}
!2490 = !DILocalVariable(name: "nptr", arg: 1, scope: !2486, file: !2443, line: 362, type: !2472)
!2491 = !DILocalVariable(name: "endptr", arg: 2, scope: !2486, file: !2443, line: 362, type: !2476)
!2492 = !DILocalVariable(name: "base", arg: 3, scope: !2486, file: !2443, line: 362, type: !772)
!2493 = !DILocation(line: 0, scope: !2486)
!2494 = !DILocation(line: 365, column: 10, scope: !2486)
!2495 = !DILocation(line: 365, column: 3, scope: !2486)
!2496 = distinct !DISubprogram(name: "stat", scope: !2497, file: !2497, line: 453, type: !2498, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2535)
!2497 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!772, !777, !2500}
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2502, line: 46, size: 1152, elements: !2503)
!2502 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2503 = !{!2504, !2506, !2508, !2510, !2512, !2514, !2516, !2517, !2518, !2519, !2521, !2523, !2531, !2532, !2533}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2501, file: !2502, line: 48, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2256, line: 145, baseType: !878)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2501, file: !2502, line: 53, baseType: !2507, size: 64, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2256, line: 148, baseType: !878)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2501, file: !2502, line: 61, baseType: !2509, size: 64, offset: 128)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2256, line: 151, baseType: !878)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2501, file: !2502, line: 62, baseType: !2511, size: 32, offset: 192)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2256, line: 150, baseType: !9)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2501, file: !2502, line: 64, baseType: !2513, size: 32, offset: 224)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2256, line: 146, baseType: !9)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2501, file: !2502, line: 65, baseType: !2515, size: 32, offset: 256)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2256, line: 147, baseType: !9)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2501, file: !2502, line: 67, baseType: !772, size: 32, offset: 288)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2501, file: !2502, line: 69, baseType: !2505, size: 64, offset: 320)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2501, file: !2502, line: 74, baseType: !2255, size: 64, offset: 384)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2501, file: !2502, line: 78, baseType: !2520, size: 64, offset: 448)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2256, line: 174, baseType: !782)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2501, file: !2502, line: 80, baseType: !2522, size: 64, offset: 512)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2256, line: 179, baseType: !782)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2501, file: !2502, line: 91, baseType: !2524, size: 128, offset: 576)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2525, line: 10, size: 128, elements: !2526)
!2525 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2526 = !{!2527, !2529}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2524, file: !2525, line: 12, baseType: !2528, size: 64)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2256, line: 160, baseType: !782)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2524, file: !2525, line: 16, baseType: !2530, size: 64, offset: 64)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2256, line: 196, baseType: !782)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2501, file: !2502, line: 92, baseType: !2524, size: 128, offset: 704)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2501, file: !2502, line: 93, baseType: !2524, size: 128, offset: 832)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2501, file: !2502, line: 106, baseType: !2534, size: 192, offset: 960)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2530, size: 192, elements: !994)
!2535 = !{!2536, !2537}
!2536 = !DILocalVariable(name: "__path", arg: 1, scope: !2496, file: !2497, line: 453, type: !777)
!2537 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2496, file: !2497, line: 453, type: !2500)
!2538 = !DILocation(line: 0, scope: !2496)
!2539 = !DILocation(line: 455, column: 10, scope: !2496)
!2540 = !DILocation(line: 455, column: 3, scope: !2496)
!2541 = distinct !DISubprogram(name: "lstat", scope: !2497, file: !2497, line: 460, type: !2498, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2542)
!2542 = !{!2543, !2544}
!2543 = !DILocalVariable(name: "__path", arg: 1, scope: !2541, file: !2497, line: 460, type: !777)
!2544 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2541, file: !2497, line: 460, type: !2500)
!2545 = !DILocation(line: 0, scope: !2541)
!2546 = !DILocation(line: 462, column: 10, scope: !2541)
!2547 = !DILocation(line: 462, column: 3, scope: !2541)
!2548 = distinct !DISubprogram(name: "fstat", scope: !2497, file: !2497, line: 467, type: !2549, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2551)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{!772, !772, !2500}
!2551 = !{!2552, !2553}
!2552 = !DILocalVariable(name: "__fd", arg: 1, scope: !2548, file: !2497, line: 467, type: !772)
!2553 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2548, file: !2497, line: 467, type: !2500)
!2554 = !DILocation(line: 0, scope: !2548)
!2555 = !DILocation(line: 469, column: 10, scope: !2548)
!2556 = !DILocation(line: 469, column: 3, scope: !2548)
!2557 = distinct !DISubprogram(name: "fstatat", scope: !2497, file: !2497, line: 474, type: !2558, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2560)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!772, !772, !777, !2500, !772}
!2560 = !{!2561, !2562, !2563, !2564}
!2561 = !DILocalVariable(name: "__fd", arg: 1, scope: !2557, file: !2497, line: 474, type: !772)
!2562 = !DILocalVariable(name: "__filename", arg: 2, scope: !2557, file: !2497, line: 474, type: !777)
!2563 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2557, file: !2497, line: 474, type: !2500)
!2564 = !DILocalVariable(name: "__flag", arg: 4, scope: !2557, file: !2497, line: 474, type: !772)
!2565 = !DILocation(line: 0, scope: !2557)
!2566 = !DILocation(line: 477, column: 10, scope: !2557)
!2567 = !DILocation(line: 477, column: 3, scope: !2557)
!2568 = distinct !DISubprogram(name: "mknod", scope: !2497, file: !2497, line: 483, type: !2569, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2571)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!772, !777, !2511, !2505}
!2571 = !{!2572, !2573, !2574}
!2572 = !DILocalVariable(name: "__path", arg: 1, scope: !2568, file: !2497, line: 483, type: !777)
!2573 = !DILocalVariable(name: "__mode", arg: 2, scope: !2568, file: !2497, line: 483, type: !2511)
!2574 = !DILocalVariable(name: "__dev", arg: 3, scope: !2568, file: !2497, line: 483, type: !2505)
!2575 = !DILocation(line: 0, scope: !2568)
!2576 = !DILocation(line: 485, column: 10, scope: !2568)
!2577 = !DILocation(line: 485, column: 3, scope: !2568)
!2578 = distinct !DISubprogram(name: "mknodat", scope: !2497, file: !2497, line: 491, type: !2579, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2581)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!772, !772, !777, !2511, !2505}
!2581 = !{!2582, !2583, !2584, !2585}
!2582 = !DILocalVariable(name: "__fd", arg: 1, scope: !2578, file: !2497, line: 491, type: !772)
!2583 = !DILocalVariable(name: "__path", arg: 2, scope: !2578, file: !2497, line: 491, type: !777)
!2584 = !DILocalVariable(name: "__mode", arg: 3, scope: !2578, file: !2497, line: 491, type: !2511)
!2585 = !DILocalVariable(name: "__dev", arg: 4, scope: !2578, file: !2497, line: 491, type: !2505)
!2586 = !DILocation(line: 0, scope: !2578)
!2587 = !DILocation(line: 494, column: 10, scope: !2578)
!2588 = !DILocation(line: 494, column: 3, scope: !2578)
!2589 = distinct !DISubprogram(name: "stat64", scope: !2497, file: !2497, line: 502, type: !2590, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2612)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!772, !777, !2592}
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2502, line: 119, size: 1152, elements: !2594)
!2594 = !{!2595, !2596, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2608, !2609, !2610, !2611}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2593, file: !2502, line: 121, baseType: !2505, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2593, file: !2502, line: 123, baseType: !2597, size: 64, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2256, line: 149, baseType: !878)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2593, file: !2502, line: 124, baseType: !2509, size: 64, offset: 128)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2593, file: !2502, line: 125, baseType: !2511, size: 32, offset: 192)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2593, file: !2502, line: 132, baseType: !2513, size: 32, offset: 224)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2593, file: !2502, line: 133, baseType: !2515, size: 32, offset: 256)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2593, file: !2502, line: 135, baseType: !772, size: 32, offset: 288)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2593, file: !2502, line: 136, baseType: !2505, size: 64, offset: 320)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2593, file: !2502, line: 137, baseType: !2255, size: 64, offset: 384)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2593, file: !2502, line: 143, baseType: !2520, size: 64, offset: 448)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2593, file: !2502, line: 144, baseType: !2607, size: 64, offset: 512)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2256, line: 180, baseType: !782)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2593, file: !2502, line: 152, baseType: !2524, size: 128, offset: 576)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2593, file: !2502, line: 153, baseType: !2524, size: 128, offset: 704)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2593, file: !2502, line: 154, baseType: !2524, size: 128, offset: 832)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2593, file: !2502, line: 164, baseType: !2534, size: 192, offset: 960)
!2612 = !{!2613, !2614}
!2613 = !DILocalVariable(name: "__path", arg: 1, scope: !2589, file: !2497, line: 502, type: !777)
!2614 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2589, file: !2497, line: 502, type: !2592)
!2615 = !DILocation(line: 0, scope: !2589)
!2616 = !DILocation(line: 504, column: 10, scope: !2589)
!2617 = !DILocation(line: 504, column: 3, scope: !2589)
!2618 = distinct !DISubprogram(name: "lstat64", scope: !2497, file: !2497, line: 509, type: !2590, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2619)
!2619 = !{!2620, !2621}
!2620 = !DILocalVariable(name: "__path", arg: 1, scope: !2618, file: !2497, line: 509, type: !777)
!2621 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2618, file: !2497, line: 509, type: !2592)
!2622 = !DILocation(line: 0, scope: !2618)
!2623 = !DILocation(line: 511, column: 10, scope: !2618)
!2624 = !DILocation(line: 511, column: 3, scope: !2618)
!2625 = distinct !DISubprogram(name: "fstat64", scope: !2497, file: !2497, line: 516, type: !2626, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2628)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!772, !772, !2592}
!2628 = !{!2629, !2630}
!2629 = !DILocalVariable(name: "__fd", arg: 1, scope: !2625, file: !2497, line: 516, type: !772)
!2630 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2625, file: !2497, line: 516, type: !2592)
!2631 = !DILocation(line: 0, scope: !2625)
!2632 = !DILocation(line: 518, column: 10, scope: !2625)
!2633 = !DILocation(line: 518, column: 3, scope: !2625)
!2634 = distinct !DISubprogram(name: "fstatat64", scope: !2497, file: !2497, line: 523, type: !2635, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2637)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{!772, !772, !777, !2592, !772}
!2637 = !{!2638, !2639, !2640, !2641}
!2638 = !DILocalVariable(name: "__fd", arg: 1, scope: !2634, file: !2497, line: 523, type: !772)
!2639 = !DILocalVariable(name: "__filename", arg: 2, scope: !2634, file: !2497, line: 523, type: !777)
!2640 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2634, file: !2497, line: 523, type: !2592)
!2641 = !DILocalVariable(name: "__flag", arg: 4, scope: !2634, file: !2497, line: 523, type: !772)
!2642 = !DILocation(line: 0, scope: !2634)
!2643 = !DILocation(line: 526, column: 10, scope: !2634)
!2644 = !DILocation(line: 526, column: 3, scope: !2634)
!2645 = !DILocation(line: 0, scope: !2)
!2646 = !DILocation(line: 584, column: 9, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2, file: !3, line: 584, column: 7)
!2648 = !DILocation(line: 584, column: 7, scope: !2)
!2649 = !DILocation(line: 586, column: 7, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 585, column: 5)
!2651 = !DILocation(line: 587, column: 23, scope: !2650)
!2652 = !DILocation(line: 588, column: 5, scope: !2650)
!2653 = !DILocation(line: 590, column: 10, scope: !2)
!2654 = !DILocation(line: 590, column: 25, scope: !2)
!2655 = !DILocation(line: 590, column: 3, scope: !2)
!2656 = distinct !DISubprogram(name: "compute_can_copy", scope: !3, file: !3, line: 550, type: !2657, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2659)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{null}
!2659 = !{!2660}
!2660 = !DILocalVariable(name: "i", scope: !2656, file: !3, line: 552, type: !772)
!2661 = !DILocation(line: 556, column: 3, scope: !2656)
!2662 = !DILocation(line: 558, column: 3, scope: !2656)
!2663 = !DILocation(line: 0, scope: !2656)
!2664 = !DILocation(line: 559, column: 8, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 559, column: 3)
!2666 = !DILocation(line: 0, scope: !2665)
!2667 = !DILocation(line: 559, column: 17, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 559, column: 3)
!2669 = !DILocation(line: 559, column: 3, scope: !2665)
!2670 = !DILocation(line: 560, column: 9, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 560, column: 9)
!2672 = !DILocation(line: 560, column: 28, scope: !2671)
!2673 = !DILocation(line: 0, scope: !2671)
!2674 = !DILocation(line: 560, column: 9, scope: !2668)
!2675 = !DILocation(line: 570, column: 7, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 561, column: 7)
!2677 = !DILocation(line: 559, column: 39, scope: !2668)
!2678 = !DILocation(line: 559, column: 3, scope: !2668)
!2679 = distinct !{!2679, !2669, !2680}
!2680 = !DILocation(line: 572, column: 21, scope: !2665)
!2681 = !DILocation(line: 574, column: 3, scope: !2656)
!2682 = !DILocation(line: 575, column: 1, scope: !2656)
!2683 = distinct !DISubprogram(name: "can_assign_to_reg_without_clobbers_p", scope: !3, file: !3, line: 801, type: !2684, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2686)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!6, !787}
!2686 = !{!2687, !2688, !2689}
!2687 = !DILocalVariable(name: "x", arg: 1, scope: !2683, file: !3, line: 801, type: !787)
!2688 = !DILocalVariable(name: "num_clobbers", scope: !2683, file: !3, line: 803, type: !772)
!2689 = !DILocalVariable(name: "icode", scope: !2683, file: !3, line: 804, type: !772)
!2690 = !DILocation(line: 0, scope: !2683)
!2691 = !DILocation(line: 803, column: 3, scope: !2683)
!2692 = !DILocation(line: 803, column: 7, scope: !2683)
!2693 = !DILocation(line: 807, column: 27, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 807, column: 7)
!2695 = !DILocation(line: 807, column: 7, scope: !2694)
!2696 = !DILocation(line: 807, column: 7, scope: !2683)
!2697 = !DILocation(line: 809, column: 12, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 809, column: 12)
!2699 = !DILocation(line: 809, column: 25, scope: !2698)
!2700 = !DILocation(line: 809, column: 12, scope: !2694)
!2701 = !DILocation(line: 814, column: 7, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 814, column: 7)
!2703 = !DILocation(line: 814, column: 17, scope: !2702)
!2704 = !DILocation(line: 814, column: 7, scope: !2683)
!2705 = !DILocation(line: 817, column: 19, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 815, column: 5)
!2707 = !DILocation(line: 817, column: 4, scope: !2706)
!2708 = !DILocation(line: 817, column: 2, scope: !2706)
!2709 = !DILocation(line: 821, column: 31, scope: !2706)
!2710 = !DILocation(line: 821, column: 53, scope: !2706)
!2711 = !DILocation(line: 821, column: 7, scope: !2706)
!2712 = !DILocation(line: 821, column: 29, scope: !2706)
!2713 = !DILocation(line: 826, column: 3, scope: !2683)
!2714 = !DILocation(line: 822, column: 5, scope: !2706)
!2715 = !DILocation(line: 827, column: 3, scope: !2683)
!2716 = !DILocation(line: 827, column: 33, scope: !2683)
!2717 = !DILocation(line: 829, column: 18, scope: !2683)
!2718 = !DILocation(line: 829, column: 11, scope: !2683)
!2719 = !DILocation(line: 830, column: 13, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 830, column: 7)
!2721 = !DILocation(line: 830, column: 7, scope: !2683)
!2722 = !DILocation(line: 833, column: 7, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 833, column: 7)
!2724 = !DILocation(line: 833, column: 20, scope: !2723)
!2725 = !DILocation(line: 833, column: 24, scope: !2723)
!2726 = !DILocation(line: 833, column: 27, scope: !2723)
!2727 = !DILocation(line: 833, column: 7, scope: !2683)
!2728 = !DILocation(line: 836, column: 15, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 836, column: 7)
!2730 = !DILocation(line: 836, column: 7, scope: !2729)
!2731 = !DILocation(line: 836, column: 34, scope: !2729)
!2732 = !DILocation(line: 836, column: 65, scope: !2729)
!2733 = !DILocation(line: 836, column: 37, scope: !2729)
!2734 = !DILocation(line: 836, column: 7, scope: !2683)
!2735 = !DILocation(line: 839, column: 3, scope: !2683)
!2736 = !DILocation(line: 840, column: 1, scope: !2683)
!2737 = distinct !DISubprogram(name: "fis_get_condition", scope: !3, file: !3, line: 2780, type: !2738, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2740)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{!787, !787}
!2740 = !{!2741}
!2741 = !DILocalVariable(name: "jump", arg: 1, scope: !2737, file: !3, line: 2780, type: !787)
!2742 = !DILocation(line: 0, scope: !2737)
!2743 = !DILocation(line: 2782, column: 10, scope: !2737)
!2744 = !DILocation(line: 2782, column: 3, scope: !2737)
!2745 = distinct !DISubprogram(name: "gate_rtl_cprop", scope: !3, file: !3, line: 5052, type: !2031, scopeLine: 5053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2746 = !DILocation(line: 5054, column: 10, scope: !2745)
!2747 = !DILocation(line: 5054, column: 19, scope: !2745)
!2748 = !DILocation(line: 5054, column: 26, scope: !2745)
!2749 = !DILocation(line: 5054, column: 23, scope: !2745)
!2750 = !DILocation(line: 5055, column: 9, scope: !2745)
!2751 = !DILocation(line: 5055, column: 15, scope: !2745)
!2752 = !DILocation(line: 5056, column: 5, scope: !2745)
!2753 = !DILocation(line: 5056, column: 8, scope: !2745)
!2754 = !DILocation(line: 5054, column: 3, scope: !2745)
!2755 = distinct !DISubprogram(name: "execute_rtl_cprop", scope: !3, file: !3, line: 5060, type: !2035, scopeLine: 5061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2756 = !DILocation(line: 5062, column: 3, scope: !2755)
!2757 = !DILocation(line: 5063, column: 3, scope: !2755)
!2758 = !DILocation(line: 5064, column: 3, scope: !2755)
!2759 = !DILocation(line: 5065, column: 39, scope: !2755)
!2760 = !DILocation(line: 5065, column: 36, scope: !2755)
!2761 = !DILocation(line: 5066, column: 3, scope: !2755)
!2762 = distinct !DISubprogram(name: "gate_rtl_pre", scope: !3, file: !3, line: 5070, type: !2031, scopeLine: 5071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2763 = !DILocation(line: 5072, column: 10, scope: !2762)
!2764 = !DILocation(line: 5072, column: 19, scope: !2762)
!2765 = !DILocation(line: 5072, column: 26, scope: !2762)
!2766 = !DILocation(line: 5072, column: 23, scope: !2762)
!2767 = !DILocation(line: 5073, column: 9, scope: !2762)
!2768 = !DILocation(line: 5073, column: 15, scope: !2762)
!2769 = !DILocation(line: 5074, column: 5, scope: !2762)
!2770 = !DILocation(line: 5074, column: 8, scope: !2762)
!2771 = !DILocation(line: 5075, column: 5, scope: !2762)
!2772 = !DILocation(line: 5075, column: 8, scope: !2762)
!2773 = !DILocation(line: 5072, column: 3, scope: !2762)
!2774 = distinct !DISubprogram(name: "execute_rtl_pre", scope: !3, file: !3, line: 5079, type: !2035, scopeLine: 5080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2775 = !DILocation(line: 5081, column: 3, scope: !2774)
!2776 = !DILocation(line: 5082, column: 3, scope: !2774)
!2777 = !DILocation(line: 5083, column: 39, scope: !2774)
!2778 = !DILocation(line: 5083, column: 36, scope: !2774)
!2779 = !DILocation(line: 5084, column: 3, scope: !2774)
!2780 = distinct !DISubprogram(name: "gate_rtl_hoist", scope: !3, file: !3, line: 5088, type: !2031, scopeLine: 5089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2781 = !DILocation(line: 5090, column: 10, scope: !2780)
!2782 = !DILocation(line: 5090, column: 19, scope: !2780)
!2783 = !DILocation(line: 5090, column: 26, scope: !2780)
!2784 = !DILocation(line: 5090, column: 23, scope: !2780)
!2785 = !DILocation(line: 5091, column: 9, scope: !2780)
!2786 = !DILocation(line: 5091, column: 15, scope: !2780)
!2787 = !DILocation(line: 5095, column: 5, scope: !2780)
!2788 = !DILocation(line: 5095, column: 8, scope: !2780)
!2789 = !DILocation(line: 5096, column: 5, scope: !2780)
!2790 = !DILocation(line: 5096, column: 8, scope: !2780)
!2791 = !DILocation(line: 5090, column: 3, scope: !2780)
!2792 = distinct !DISubprogram(name: "execute_rtl_hoist", scope: !3, file: !3, line: 5100, type: !2035, scopeLine: 5101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2793 = !DILocation(line: 5102, column: 3, scope: !2792)
!2794 = !DILocation(line: 5103, column: 3, scope: !2792)
!2795 = !DILocation(line: 5104, column: 39, scope: !2792)
!2796 = !DILocation(line: 5104, column: 36, scope: !2792)
!2797 = !DILocation(line: 5105, column: 3, scope: !2792)
!2798 = distinct !DISubprogram(name: "one_cprop_pass", scope: !3, file: !3, line: 4944, type: !2220, scopeLine: 4945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2799)
!2799 = !{!2800, !2801, !2804}
!2800 = !DILocalVariable(name: "changed", scope: !2798, file: !3, line: 4946, type: !772)
!2801 = !DILocalVariable(name: "bb", scope: !2802, file: !3, line: 4994, type: !1338)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 4993, column: 5)
!2803 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 4992, column: 7)
!2804 = !DILocalVariable(name: "insn", scope: !2802, file: !3, line: 4995, type: !787)
!2805 = !DILocation(line: 0, scope: !2798)
!2806 = !DILocation(line: 4949, column: 7, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 4949, column: 7)
!2808 = !DILocation(line: 4949, column: 22, scope: !2807)
!2809 = !DILocation(line: 4950, column: 7, scope: !2807)
!2810 = !DILocation(line: 4950, column: 10, scope: !2807)
!2811 = !DILocation(line: 4949, column: 7, scope: !2798)
!2812 = !DILocation(line: 4953, column: 52, scope: !2798)
!2813 = !DILocation(line: 4953, column: 27, scope: !2798)
!2814 = !DILocation(line: 4954, column: 50, scope: !2798)
!2815 = !DILocation(line: 4954, column: 26, scope: !2798)
!2816 = !DILocation(line: 4956, column: 14, scope: !2798)
!2817 = !DILocation(line: 4957, column: 3, scope: !2798)
!2818 = !DILocation(line: 4958, column: 3, scope: !2798)
!2819 = !DILocation(line: 4973, column: 7, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 4973, column: 7)
!2821 = !DILocation(line: 4973, column: 7, scope: !2798)
!2822 = !DILocation(line: 4975, column: 7, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2820, file: !3, line: 4974, column: 5)
!2824 = !DILocation(line: 4976, column: 7, scope: !2823)
!2825 = !DILocation(line: 4977, column: 5, scope: !2823)
!2826 = !DILocation(line: 4980, column: 19, scope: !2798)
!2827 = !DILocation(line: 4980, column: 17, scope: !2798)
!2828 = !DILocation(line: 4981, column: 3, scope: !2798)
!2829 = !DILocation(line: 4983, column: 3, scope: !2798)
!2830 = !DILocation(line: 4984, column: 3, scope: !2798)
!2831 = !DILocation(line: 4987, column: 9, scope: !2798)
!2832 = !DILocation(line: 4987, column: 3, scope: !2798)
!2833 = !DILocation(line: 4988, column: 17, scope: !2798)
!2834 = !DILocation(line: 4990, column: 7, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 4990, column: 7)
!2836 = !DILocation(line: 4990, column: 7, scope: !2798)
!2837 = !DILocation(line: 4991, column: 5, scope: !2835)
!2838 = !DILocation(line: 4992, column: 22, scope: !2803)
!2839 = !DILocation(line: 4992, column: 30, scope: !2803)
!2840 = !DILocation(line: 4992, column: 7, scope: !2798)
!2841 = !DILocation(line: 4997, column: 24, scope: !2802)
!2842 = !DILocation(line: 4997, column: 7, scope: !2802)
!2843 = !DILocation(line: 4998, column: 7, scope: !2802)
!2844 = !DILocation(line: 5000, column: 7, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 5000, column: 7)
!2846 = !DILocation(line: 5000, column: 7, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 5000, column: 7)
!2848 = !DILocation(line: 4946, column: 7, scope: !2798)
!2849 = !DILocation(line: 0, scope: !2845)
!2850 = !DILocation(line: 0, scope: !2802)
!2851 = !DILocation(line: 5004, column: 4, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 5001, column: 2)
!2853 = !DILocation(line: 5006, column: 4, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 5006, column: 4)
!2855 = !DILocation(line: 0, scope: !2854)
!2856 = !DILocation(line: 5006, column: 4, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 5006, column: 4)
!2858 = !DILocation(line: 5007, column: 10, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 5007, column: 10)
!2860 = !DILocation(line: 5007, column: 10, scope: !2857)
!2861 = !DILocation(line: 5009, column: 14, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 5008, column: 8)
!2863 = !DILocation(line: 5009, column: 11, scope: !2862)
!2864 = !DILocation(line: 5015, column: 9, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 5015, column: 7)
!2866 = !DILocation(line: 5015, column: 7, scope: !2862)
!2867 = !DILocation(line: 5016, column: 5, scope: !2865)
!2868 = distinct !{!2868, !2853, !2869}
!2869 = !DILocation(line: 5017, column: 8, scope: !2854)
!2870 = !DILocation(line: 0, scope: !2847)
!2871 = distinct !{!2871, !2844, !2872}
!2872 = !DILocation(line: 5018, column: 2, scope: !2845)
!2873 = !DILocation(line: 5020, column: 18, scope: !2802)
!2874 = !DILocation(line: 5020, column: 15, scope: !2802)
!2875 = !DILocation(line: 5021, column: 7, scope: !2802)
!2876 = !DILocation(line: 5022, column: 5, scope: !2802)
!2877 = !DILocation(line: 5024, column: 3, scope: !2798)
!2878 = !DILocation(line: 5025, column: 3, scope: !2798)
!2879 = !DILocation(line: 5026, column: 3, scope: !2798)
!2880 = !DILocation(line: 5028, column: 7, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 5028, column: 7)
!2882 = !DILocation(line: 5028, column: 7, scope: !2798)
!2883 = !DILocation(line: 5031, column: 9, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 5029, column: 5)
!2885 = !DILocation(line: 5031, column: 35, scope: !2884)
!2886 = !DILocation(line: 5031, column: 51, scope: !2884)
!2887 = !DILocation(line: 5030, column: 7, scope: !2884)
!2888 = !DILocation(line: 5032, column: 16, scope: !2884)
!2889 = !DILocation(line: 5033, column: 9, scope: !2884)
!2890 = !DILocation(line: 5033, column: 33, scope: !2884)
!2891 = !DILocation(line: 5032, column: 7, scope: !2884)
!2892 = !DILocation(line: 5034, column: 16, scope: !2884)
!2893 = !DILocation(line: 5035, column: 9, scope: !2884)
!2894 = !DILocation(line: 5035, column: 34, scope: !2884)
!2895 = !DILocation(line: 5034, column: 7, scope: !2884)
!2896 = !DILocation(line: 5036, column: 5, scope: !2884)
!2897 = !DILocation(line: 5039, column: 1, scope: !2798)
!2898 = distinct !DISubprogram(name: "is_too_expensive", scope: !3, file: !3, line: 4904, type: !2899, scopeLine: 4905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2901)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{!6, !777}
!2901 = !{!2902}
!2902 = !DILocalVariable(name: "pass", arg: 1, scope: !2898, file: !3, line: 4904, type: !777)
!2903 = !DILocation(line: 0, scope: !2898)
!2904 = !DILocation(line: 4915, column: 7, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 4915, column: 7)
!2906 = !DILocation(line: 4915, column: 25, scope: !2905)
!2907 = !DILocation(line: 4915, column: 40, scope: !2905)
!2908 = !DILocation(line: 4915, column: 23, scope: !2905)
!2909 = !DILocation(line: 4915, column: 15, scope: !2905)
!2910 = !DILocation(line: 4915, column: 7, scope: !2898)
!2911 = !DILocation(line: 4919, column: 39, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 4916, column: 5)
!2913 = !DILocation(line: 4917, column: 7, scope: !2912)
!2914 = !DILocation(line: 4921, column: 7, scope: !2912)
!2915 = !DILocation(line: 4927, column: 10, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 4926, column: 7)
!2917 = !DILocation(line: 4927, column: 8, scope: !2916)
!2918 = !DILocation(line: 4926, column: 8, scope: !2916)
!2919 = !DILocation(line: 4928, column: 8, scope: !2916)
!2920 = !DILocation(line: 4928, column: 39, scope: !2916)
!2921 = !DILocation(line: 4928, column: 37, scope: !2916)
!2922 = !DILocation(line: 4926, column: 7, scope: !2898)
!2923 = !DILocation(line: 4932, column: 15, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2916, file: !3, line: 4929, column: 5)
!2925 = !DILocation(line: 4932, column: 31, scope: !2924)
!2926 = !DILocation(line: 4930, column: 7, scope: !2924)
!2927 = !DILocation(line: 4934, column: 7, scope: !2924)
!2928 = !DILocation(line: 4938, column: 1, scope: !2898)
!2929 = distinct !DISubprogram(name: "alloc_gcse_mem", scope: !3, file: !3, line: 625, type: !2657, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!2930 = !DILocation(line: 628, column: 20, scope: !2929)
!2931 = !DILocation(line: 628, column: 18, scope: !2929)
!2932 = !DILocation(line: 632, column: 21, scope: !2929)
!2933 = !DILocation(line: 632, column: 19, scope: !2929)
!2934 = !DILocation(line: 633, column: 27, scope: !2929)
!2935 = !DILocation(line: 633, column: 25, scope: !2929)
!2936 = !DILocation(line: 634, column: 25, scope: !2929)
!2937 = !DILocation(line: 634, column: 23, scope: !2929)
!2938 = !DILocation(line: 635, column: 23, scope: !2929)
!2939 = !DILocation(line: 635, column: 21, scope: !2929)
!2940 = !DILocation(line: 636, column: 1, scope: !2929)
!2941 = distinct !DISubprogram(name: "local_cprop_pass", scope: !3, file: !3, line: 2720, type: !2220, scopeLine: 2721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2942)
!2942 = !{!2943, !2944, !2945, !2947, !2948}
!2943 = !DILocalVariable(name: "bb", scope: !2941, file: !3, line: 2722, type: !1338)
!2944 = !DILocalVariable(name: "insn", scope: !2941, file: !3, line: 2723, type: !787)
!2945 = !DILocalVariable(name: "reg_used", scope: !2941, file: !3, line: 2724, type: !2946)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2947 = !DILocalVariable(name: "changed", scope: !2941, file: !3, line: 2725, type: !6)
!2948 = !DILocalVariable(name: "note", scope: !2949, file: !3, line: 2734, type: !787)
!2949 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 2733, column: 6)
!2950 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 2732, column: 8)
!2951 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 2731, column: 2)
!2952 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2730, column: 7)
!2953 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 2730, column: 7)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 2729, column: 5)
!2955 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 2728, column: 3)
!2956 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 2728, column: 3)
!2957 = !DILocation(line: 0, scope: !2941)
!2958 = !DILocation(line: 2727, column: 3, scope: !2941)
!2959 = !DILocation(line: 2728, column: 3, scope: !2956)
!2960 = !DILocation(line: 2728, column: 3, scope: !2955)
!2961 = !DILocation(line: 2725, column: 8, scope: !2941)
!2962 = !DILocation(line: 0, scope: !2956)
!2963 = !DILocation(line: 2730, column: 7, scope: !2953)
!2964 = !DILocation(line: 0, scope: !2953)
!2965 = !DILocation(line: 2730, column: 7, scope: !2952)
!2966 = !DILocation(line: 2732, column: 8, scope: !2950)
!2967 = !DILocation(line: 2732, column: 8, scope: !2951)
!2968 = !DILocation(line: 2734, column: 19, scope: !2949)
!2969 = !DILocation(line: 0, scope: !2949)
!2970 = !DILocation(line: 0, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 2736, column: 3)
!2972 = !DILocation(line: 0, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 2740, column: 9)
!2974 = !DILocation(line: 2735, column: 8, scope: !2949)
!2975 = !DILocation(line: 2737, column: 19, scope: !2971)
!2976 = !DILocation(line: 2738, column: 5, scope: !2971)
!2977 = !DILocation(line: 2743, column: 40, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 2743, column: 5)
!2979 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 2743, column: 5)
!2980 = !DILocation(line: 2743, column: 10, scope: !2979)
!2981 = !DILocation(line: 0, scope: !2979)
!2982 = !DILocation(line: 2743, column: 54, scope: !2978)
!2983 = !DILocation(line: 2743, column: 5, scope: !2979)
!2984 = !DILocation(line: 2746, column: 39, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 2746, column: 13)
!2986 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 2745, column: 7)
!2987 = !DILocation(line: 2746, column: 13, scope: !2985)
!2988 = !DILocation(line: 2746, column: 13, scope: !2986)
!2989 = !DILocation(line: 2755, column: 15, scope: !2949)
!2990 = !DILocation(line: 2752, column: 9, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 2752, column: 9)
!2992 = !DILocation(line: 2754, column: 3, scope: !2971)
!2993 = !DILocation(line: 2752, column: 9, scope: !2971)
!2994 = distinct !{!2994, !2974, !2995}
!2995 = !DILocation(line: 2755, column: 28, scope: !2949)
!2996 = !DILocation(line: 2744, column: 18, scope: !2978)
!2997 = !DILocation(line: 2744, column: 35, scope: !2978)
!2998 = !DILocation(line: 2743, column: 5, scope: !2978)
!2999 = distinct !{!2999, !2983, !3000}
!3000 = !DILocation(line: 2751, column: 7, scope: !2979)
!3001 = !DILocation(line: 2757, column: 4, scope: !2951)
!3002 = !DILocation(line: 2741, column: 7, scope: !2973)
!3003 = distinct !{!3003, !2963, !3004}
!3004 = !DILocation(line: 2758, column: 2, scope: !2953)
!3005 = !DILocation(line: 2761, column: 7, scope: !2954)
!3006 = !DILocation(line: 0, scope: !2955)
!3007 = distinct !{!3007, !2959, !3008}
!3008 = !DILocation(line: 2762, column: 5, scope: !2956)
!3009 = !DILocation(line: 2764, column: 3, scope: !2941)
!3010 = !DILocation(line: 2766, column: 10, scope: !2941)
!3011 = !DILocation(line: 2766, column: 3, scope: !2941)
!3012 = distinct !DISubprogram(name: "find_implicit_sets", scope: !3, file: !3, line: 2830, type: !2657, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018}
!3014 = !DILocalVariable(name: "bb", scope: !3012, file: !3, line: 2832, type: !1338)
!3015 = !DILocalVariable(name: "dest", scope: !3012, file: !3, line: 2832, type: !1338)
!3016 = !DILocalVariable(name: "count", scope: !3012, file: !3, line: 2833, type: !9)
!3017 = !DILocalVariable(name: "cond", scope: !3012, file: !3, line: 2834, type: !787)
!3018 = !DILocalVariable(name: "new_rtx", scope: !3012, file: !3, line: 2834, type: !787)
!3019 = !DILocation(line: 0, scope: !3012)
!3020 = !DILocation(line: 2837, column: 3, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 2837, column: 3)
!3022 = !DILocation(line: 2837, column: 3, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 2837, column: 3)
!3024 = !DILocation(line: 0, scope: !3021)
!3025 = !DILocation(line: 2839, column: 9, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 2839, column: 9)
!3027 = !DILocation(line: 2839, column: 32, scope: !3026)
!3028 = !DILocation(line: 2839, column: 9, scope: !3023)
!3029 = !DILocation(line: 2841, column: 28, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 2840, column: 7)
!3031 = !DILocation(line: 2841, column: 9, scope: !3030)
!3032 = !DILocation(line: 2843, column: 6, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 2843, column: 6)
!3034 = !DILocation(line: 2844, column: 6, scope: !3033)
!3035 = !DILocation(line: 2844, column: 10, scope: !3033)
!3036 = !DILocation(line: 2844, column: 26, scope: !3033)
!3037 = !DILocation(line: 2844, column: 32, scope: !3033)
!3038 = !DILocation(line: 2844, column: 51, scope: !3033)
!3039 = !DILocation(line: 2845, column: 6, scope: !3033)
!3040 = !DILocation(line: 2845, column: 9, scope: !3033)
!3041 = !DILocation(line: 2846, column: 6, scope: !3033)
!3042 = !DILocation(line: 2846, column: 9, scope: !3033)
!3043 = !DILocation(line: 2846, column: 32, scope: !3033)
!3044 = !DILocation(line: 2847, column: 6, scope: !3033)
!3045 = !DILocation(line: 2847, column: 9, scope: !3033)
!3046 = !DILocation(line: 2843, column: 6, scope: !3030)
!3047 = !DILocation(line: 2849, column: 13, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 2848, column: 4)
!3049 = !DILocation(line: 2849, column: 29, scope: !3048)
!3050 = !DILocation(line: 0, scope: !3048)
!3051 = !DILocation(line: 2849, column: 37, scope: !3048)
!3052 = !DILocation(line: 2850, column: 9, scope: !3048)
!3053 = !DILocation(line: 2852, column: 10, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 2852, column: 10)
!3055 = !DILocation(line: 2854, column: 3, scope: !3054)
!3056 = !DILocation(line: 2854, column: 6, scope: !3054)
!3057 = !DILocation(line: 2855, column: 3, scope: !3054)
!3058 = !DILocation(line: 2855, column: 14, scope: !3054)
!3059 = !DILocation(line: 2855, column: 11, scope: !3054)
!3060 = !DILocation(line: 2852, column: 10, scope: !3048)
!3061 = !DILocation(line: 2857, column: 13, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 2856, column: 8)
!3063 = !DILocation(line: 2859, column: 3, scope: !3062)
!3064 = !DILocation(line: 2859, column: 23, scope: !3062)
!3065 = !DILocation(line: 2859, column: 30, scope: !3062)
!3066 = !DILocation(line: 2860, column: 7, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 2860, column: 7)
!3068 = !DILocation(line: 2860, column: 7, scope: !3062)
!3069 = !DILocation(line: 2863, column: 8, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 2861, column: 5)
!3071 = !DILocation(line: 2862, column: 7, scope: !3070)
!3072 = !DILocation(line: 2864, column: 15, scope: !3070)
!3073 = !DILocation(line: 2864, column: 52, scope: !3070)
!3074 = !DILocation(line: 2864, column: 7, scope: !3070)
!3075 = !DILocation(line: 2865, column: 5, scope: !3070)
!3076 = !DILocation(line: 2866, column: 8, scope: !3062)
!3077 = !DILocation(line: 2867, column: 8, scope: !3062)
!3078 = !DILocation(line: 0, scope: !3023)
!3079 = distinct !{!3079, !3020, !3080}
!3080 = !DILocation(line: 2869, column: 7, scope: !3021)
!3081 = !DILocation(line: 2871, column: 7, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 2871, column: 7)
!3083 = !DILocation(line: 2871, column: 7, scope: !3012)
!3084 = !DILocation(line: 2872, column: 5, scope: !3082)
!3085 = !DILocation(line: 2873, column: 1, scope: !3012)
!3086 = distinct !DISubprogram(name: "alloc_hash_table", scope: !3, file: !3, line: 1710, type: !3087, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3090)
!3087 = !DISubroutineType(types: !3088)
!3088 = !{null, !3089, !772}
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!3090 = !{!3091, !3092, !3093}
!3091 = !DILocalVariable(name: "table", arg: 1, scope: !3086, file: !3, line: 1710, type: !3089)
!3092 = !DILocalVariable(name: "set_p", arg: 2, scope: !3086, file: !3, line: 1710, type: !772)
!3093 = !DILocalVariable(name: "n", scope: !3086, file: !3, line: 1712, type: !772)
!3094 = !DILocation(line: 0, scope: !3086)
!3095 = !DILocation(line: 1714, column: 7, scope: !3086)
!3096 = !DILocation(line: 1716, column: 19, scope: !3086)
!3097 = !DILocation(line: 1716, column: 10, scope: !3086)
!3098 = !DILocation(line: 1717, column: 19, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 1717, column: 7)
!3100 = !DILocation(line: 1717, column: 7, scope: !3086)
!3101 = !DILocation(line: 1718, column: 5, scope: !3099)
!3102 = !DILocation(line: 1723, column: 15, scope: !3086)
!3103 = !DILocation(line: 1724, column: 19, scope: !3086)
!3104 = !DILocation(line: 1725, column: 18, scope: !3086)
!3105 = !DILocation(line: 1725, column: 16, scope: !3086)
!3106 = !DILocation(line: 1726, column: 10, scope: !3086)
!3107 = !DILocation(line: 1726, column: 16, scope: !3086)
!3108 = !DILocation(line: 1727, column: 1, scope: !3086)
!3109 = distinct !DISubprogram(name: "compute_hash_table", scope: !3, file: !3, line: 1741, type: !3110, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3112)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{null, !3089}
!3112 = !{!3113}
!3113 = !DILocalVariable(name: "table", arg: 1, scope: !3109, file: !3, line: 1741, type: !3089)
!3114 = !DILocation(line: 0, scope: !3109)
!3115 = !DILocation(line: 1744, column: 10, scope: !3109)
!3116 = !DILocation(line: 1744, column: 18, scope: !3109)
!3117 = !DILocation(line: 1745, column: 18, scope: !3109)
!3118 = !DILocation(line: 1745, column: 35, scope: !3109)
!3119 = !DILocation(line: 1745, column: 28, scope: !3109)
!3120 = !DILocation(line: 1745, column: 40, scope: !3109)
!3121 = !DILocation(line: 1745, column: 3, scope: !3109)
!3122 = !DILocation(line: 1747, column: 3, scope: !3109)
!3123 = !DILocation(line: 1748, column: 1, scope: !3109)
!3124 = distinct !DISubprogram(name: "dump_hash_table", scope: !3, file: !3, line: 1491, type: !3125, scopeLine: 1492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3127)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{null, !2229, !777, !3089}
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133, !3134}
!3128 = !DILocalVariable(name: "file", arg: 1, scope: !3124, file: !3, line: 1491, type: !2229)
!3129 = !DILocalVariable(name: "name", arg: 2, scope: !3124, file: !3, line: 1491, type: !777)
!3130 = !DILocalVariable(name: "table", arg: 3, scope: !3124, file: !3, line: 1491, type: !3089)
!3131 = !DILocalVariable(name: "i", scope: !3124, file: !3, line: 1493, type: !772)
!3132 = !DILocalVariable(name: "flat_table", scope: !3124, file: !3, line: 1495, type: !1976)
!3133 = !DILocalVariable(name: "hash_val", scope: !3124, file: !3, line: 1496, type: !2014)
!3134 = !DILocalVariable(name: "expr", scope: !3124, file: !3, line: 1497, type: !1977)
!3135 = !DILocation(line: 0, scope: !3124)
!3136 = !DILocation(line: 1499, column: 16, scope: !3124)
!3137 = !DILocation(line: 1500, column: 14, scope: !3124)
!3138 = !DILocation(line: 0, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 1502, column: 3)
!3140 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 1502, column: 3)
!3141 = !DILocation(line: 0, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 1503, column: 5)
!3143 = !DILocation(line: 1502, column: 8, scope: !3140)
!3144 = !DILocation(line: 0, scope: !3140)
!3145 = !DILocation(line: 1502, column: 32, scope: !3139)
!3146 = !DILocation(line: 1502, column: 17, scope: !3139)
!3147 = !DILocation(line: 1502, column: 3, scope: !3140)
!3148 = !DILocation(line: 1503, column: 24, scope: !3142)
!3149 = !DILocation(line: 1503, column: 17, scope: !3142)
!3150 = !DILocation(line: 1503, column: 10, scope: !3142)
!3151 = !DILocation(line: 1503, column: 39, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 1503, column: 5)
!3153 = !DILocation(line: 1503, column: 5, scope: !3142)
!3154 = !DILocation(line: 1505, column: 19, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3152, file: !3, line: 1504, column: 7)
!3156 = !DILocation(line: 1505, column: 2, scope: !3155)
!3157 = !DILocation(line: 1505, column: 33, scope: !3155)
!3158 = !DILocation(line: 1506, column: 17, scope: !3155)
!3159 = !DILocation(line: 1506, column: 2, scope: !3155)
!3160 = !DILocation(line: 1506, column: 31, scope: !3155)
!3161 = !DILocation(line: 1503, column: 61, scope: !3152)
!3162 = !DILocation(line: 1503, column: 5, scope: !3152)
!3163 = distinct !{!3163, !3153, !3164}
!3164 = !DILocation(line: 1507, column: 7, scope: !3142)
!3165 = !DILocation(line: 1502, column: 39, scope: !3139)
!3166 = !DILocation(line: 1502, column: 3, scope: !3139)
!3167 = distinct !{!3167, !3147, !3168}
!3168 = !DILocation(line: 1507, column: 7, scope: !3140)
!3169 = !DILocation(line: 1510, column: 31, scope: !3124)
!3170 = !DILocation(line: 1509, column: 3, scope: !3124)
!3171 = !DILocation(line: 1512, column: 8, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 1512, column: 3)
!3173 = !DILocation(line: 0, scope: !3172)
!3174 = !DILocation(line: 1512, column: 32, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3172, file: !3, line: 1512, column: 3)
!3176 = !DILocation(line: 1512, column: 17, scope: !3175)
!3177 = !DILocation(line: 1512, column: 3, scope: !3172)
!3178 = !DILocation(line: 1513, column: 9, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 1513, column: 9)
!3180 = !DILocation(line: 1513, column: 23, scope: !3179)
!3181 = !DILocation(line: 1513, column: 9, scope: !3175)
!3182 = !DILocation(line: 1517, column: 10, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 1514, column: 7)
!3184 = !DILocation(line: 1517, column: 24, scope: !3183)
!3185 = !DILocation(line: 1516, column: 2, scope: !3183)
!3186 = !DILocation(line: 1518, column: 25, scope: !3183)
!3187 = !DILocation(line: 1518, column: 2, scope: !3183)
!3188 = !DILocation(line: 1519, column: 2, scope: !3183)
!3189 = !DILocation(line: 1520, column: 7, scope: !3183)
!3190 = !DILocation(line: 1512, column: 42, scope: !3175)
!3191 = !DILocation(line: 1512, column: 3, scope: !3175)
!3192 = distinct !{!3192, !3177, !3193}
!3193 = !DILocation(line: 1520, column: 7, scope: !3172)
!3194 = !DILocation(line: 1522, column: 3, scope: !3124)
!3195 = !DILocation(line: 1524, column: 3, scope: !3124)
!3196 = !DILocation(line: 1525, column: 3, scope: !3124)
!3197 = !DILocation(line: 1526, column: 1, scope: !3124)
!3198 = distinct !DISubprogram(name: "alloc_cprop_mem", scope: !3, file: !3, line: 2001, type: !3199, scopeLine: 2002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3201)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{null, !772, !772}
!3201 = !{!3202, !3203}
!3202 = !DILocalVariable(name: "n_blocks", arg: 1, scope: !3198, file: !3, line: 2001, type: !772)
!3203 = !DILocalVariable(name: "n_sets", arg: 2, scope: !3198, file: !3, line: 2001, type: !772)
!3204 = !DILocation(line: 0, scope: !3198)
!3205 = !DILocation(line: 2003, column: 18, scope: !3198)
!3206 = !DILocation(line: 2003, column: 16, scope: !3198)
!3207 = !DILocation(line: 2004, column: 22, scope: !3198)
!3208 = !DILocation(line: 2004, column: 20, scope: !3198)
!3209 = !DILocation(line: 2006, column: 16, scope: !3198)
!3210 = !DILocation(line: 2006, column: 14, scope: !3198)
!3211 = !DILocation(line: 2007, column: 17, scope: !3198)
!3212 = !DILocation(line: 2007, column: 15, scope: !3198)
!3213 = !DILocation(line: 2008, column: 1, scope: !3198)
!3214 = distinct !DISubprogram(name: "compute_cprop_data", scope: !3, file: !3, line: 2158, type: !2657, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!3215 = !DILocation(line: 2160, column: 29, scope: !3214)
!3216 = !DILocation(line: 2160, column: 47, scope: !3214)
!3217 = !DILocation(line: 2160, column: 3, scope: !3214)
!3218 = !DILocation(line: 2161, column: 22, scope: !3214)
!3219 = !DILocation(line: 2161, column: 36, scope: !3214)
!3220 = !DILocation(line: 2162, column: 8, scope: !3214)
!3221 = !DILocation(line: 2162, column: 21, scope: !3214)
!3222 = !DILocation(line: 2161, column: 3, scope: !3214)
!3223 = !DILocation(line: 2163, column: 1, scope: !3214)
!3224 = distinct !DISubprogram(name: "reset_opr_set_tables", scope: !3, file: !3, line: 1833, type: !2657, scopeLine: 1834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!3225 = !DILocation(line: 1837, column: 3, scope: !3224)
!3226 = !DILocation(line: 1842, column: 3, scope: !3224)
!3227 = !DILocation(line: 1843, column: 1, scope: !3224)
!3228 = distinct !DISubprogram(name: "cprop_insn", scope: !3, file: !3, line: 2516, type: !3229, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3231)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!772, !787}
!3231 = !{!3232, !3233, !3234, !3235, !3236, !3240, !3241, !3242}
!3232 = !DILocalVariable(name: "insn", arg: 1, scope: !3228, file: !3, line: 2516, type: !787)
!3233 = !DILocalVariable(name: "reg_used", scope: !3228, file: !3, line: 2518, type: !2946)
!3234 = !DILocalVariable(name: "changed", scope: !3228, file: !3, line: 2519, type: !772)
!3235 = !DILocalVariable(name: "note", scope: !3228, file: !3, line: 2520, type: !787)
!3236 = !DILocalVariable(name: "regno", scope: !3237, file: !3, line: 2537, type: !9)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 2536, column: 5)
!3238 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 2534, column: 3)
!3239 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 2534, column: 3)
!3240 = !DILocalVariable(name: "pat", scope: !3237, file: !3, line: 2538, type: !787)
!3241 = !DILocalVariable(name: "src", scope: !3237, file: !3, line: 2538, type: !787)
!3242 = !DILocalVariable(name: "set", scope: !3237, file: !3, line: 2539, type: !1977)
!3243 = !DILocation(line: 0, scope: !3228)
!3244 = !DILocation(line: 2522, column: 8, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 2522, column: 7)
!3246 = !DILocation(line: 2522, column: 7, scope: !3228)
!3247 = !DILocation(line: 2525, column: 17, scope: !3228)
!3248 = !DILocation(line: 2526, column: 15, scope: !3228)
!3249 = !DILocation(line: 2526, column: 3, scope: !3228)
!3250 = !DILocation(line: 2528, column: 10, scope: !3228)
!3251 = !DILocation(line: 2531, column: 7, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 2531, column: 7)
!3253 = !DILocation(line: 2531, column: 7, scope: !3228)
!3254 = !DILocation(line: 2532, column: 22, scope: !3252)
!3255 = !DILocation(line: 2532, column: 5, scope: !3252)
!3256 = !DILocation(line: 0, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 2566, column: 3)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2565, column: 12)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 2562, column: 6)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 2561, column: 15)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 2560, column: 2)
!3262 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 2559, column: 11)
!3263 = !DILocation(line: 2534, column: 38, scope: !3238)
!3264 = !DILocation(line: 2534, column: 8, scope: !3239)
!3265 = !DILocation(line: 0, scope: !3239)
!3266 = !DILocation(line: 2534, column: 52, scope: !3238)
!3267 = !DILocation(line: 2534, column: 3, scope: !3239)
!3268 = !DILocation(line: 2537, column: 28, scope: !3237)
!3269 = !DILocation(line: 0, scope: !3237)
!3270 = !DILocation(line: 2543, column: 39, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 2543, column: 11)
!3272 = !DILocation(line: 2543, column: 13, scope: !3271)
!3273 = !DILocation(line: 2543, column: 11, scope: !3237)
!3274 = !DILocation(line: 2548, column: 13, scope: !3237)
!3275 = !DILocation(line: 2549, column: 13, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 2549, column: 11)
!3277 = !DILocation(line: 2549, column: 11, scope: !3237)
!3278 = !DILocation(line: 2552, column: 18, scope: !3237)
!3279 = !DILocation(line: 2554, column: 7, scope: !3237)
!3280 = !DILocation(line: 2556, column: 13, scope: !3237)
!3281 = !DILocation(line: 2559, column: 11, scope: !3262)
!3282 = !DILocation(line: 2559, column: 11, scope: !3237)
!3283 = !DILocation(line: 2561, column: 51, scope: !3260)
!3284 = !DILocation(line: 2561, column: 15, scope: !3260)
!3285 = !DILocation(line: 2561, column: 15, scope: !3261)
!3286 = !DILocation(line: 2564, column: 31, scope: !3259)
!3287 = !DILocation(line: 2565, column: 12, scope: !3258)
!3288 = !DILocation(line: 2565, column: 22, scope: !3258)
!3289 = !DILocation(line: 2565, column: 12, scope: !3259)
!3290 = !DILocation(line: 2567, column: 5, scope: !3257)
!3291 = !DILocation(line: 2568, column: 14, scope: !3257)
!3292 = !DILocation(line: 2568, column: 51, scope: !3257)
!3293 = !DILocation(line: 2568, column: 5, scope: !3257)
!3294 = !DILocation(line: 2569, column: 16, scope: !3257)
!3295 = !DILocation(line: 2569, column: 5, scope: !3257)
!3296 = !DILocation(line: 2570, column: 14, scope: !3257)
!3297 = !DILocation(line: 2570, column: 5, scope: !3257)
!3298 = !DILocation(line: 2571, column: 3, scope: !3257)
!3299 = !DILocation(line: 2572, column: 12, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2572, column: 12)
!3301 = !DILocation(line: 2572, column: 12, scope: !3259)
!3302 = !DILocation(line: 2576, column: 16, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 2576, column: 16)
!3304 = !DILocation(line: 2577, column: 9, scope: !3303)
!3305 = !DILocation(line: 2577, column: 12, scope: !3303)
!3306 = !DILocation(line: 2577, column: 24, scope: !3303)
!3307 = !DILocation(line: 2578, column: 9, scope: !3303)
!3308 = !DILocation(line: 2578, column: 12, scope: !3303)
!3309 = !DILocation(line: 2578, column: 24, scope: !3303)
!3310 = !DILocation(line: 2576, column: 16, scope: !3262)
!3311 = !DILocation(line: 2580, column: 35, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 2580, column: 8)
!3313 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 2579, column: 2)
!3314 = !DILocation(line: 2580, column: 8, scope: !3312)
!3315 = !DILocation(line: 2580, column: 8, scope: !3313)
!3316 = !DILocation(line: 2583, column: 30, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 2581, column: 6)
!3318 = !DILocation(line: 2584, column: 12, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 2584, column: 12)
!3320 = !DILocation(line: 2584, column: 22, scope: !3319)
!3321 = !DILocation(line: 2584, column: 12, scope: !3317)
!3322 = !DILocation(line: 2587, column: 14, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 2585, column: 3)
!3324 = !DILocation(line: 2586, column: 5, scope: !3323)
!3325 = !DILocation(line: 2588, column: 14, scope: !3323)
!3326 = !DILocation(line: 2588, column: 43, scope: !3323)
!3327 = !DILocation(line: 2588, column: 5, scope: !3323)
!3328 = !DILocation(line: 2589, column: 3, scope: !3323)
!3329 = !DILocation(line: 0, scope: !3262)
!3330 = !DILocation(line: 2598, column: 5, scope: !3238)
!3331 = !DILocation(line: 2535, column: 16, scope: !3238)
!3332 = !DILocation(line: 2535, column: 33, scope: !3238)
!3333 = !DILocation(line: 2534, column: 3, scope: !3238)
!3334 = distinct !{!3334, !3267, !3335}
!3335 = !DILocation(line: 2598, column: 5, scope: !3239)
!3336 = !DILocation(line: 2600, column: 7, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 2600, column: 7)
!3338 = !DILocation(line: 2600, column: 15, scope: !3337)
!3339 = !DILocation(line: 2600, column: 18, scope: !3337)
!3340 = !DILocation(line: 2600, column: 7, scope: !3228)
!3341 = !DILocation(line: 2603, column: 3, scope: !3228)
!3342 = !DILocation(line: 2604, column: 1, scope: !3228)
!3343 = distinct !DISubprogram(name: "mark_oprs_set", scope: !3, file: !3, line: 1960, type: !3344, scopeLine: 1961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3346)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{null, !787}
!3346 = !{!3347, !3348, !3349, !3350}
!3347 = !DILocalVariable(name: "insn", arg: 1, scope: !3343, file: !3, line: 1960, type: !787)
!3348 = !DILocalVariable(name: "pat", scope: !3343, file: !3, line: 1962, type: !787)
!3349 = !DILocalVariable(name: "i", scope: !3343, file: !3, line: 1963, type: !772)
!3350 = !DILocalVariable(name: "x", scope: !3351, file: !3, line: 1970, type: !787)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 1969, column: 7)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 1968, column: 5)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 1968, column: 5)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 1967, column: 12)
!3355 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 1965, column: 7)
!3356 = !DILocation(line: 0, scope: !3343)
!3357 = !DILocation(line: 1962, column: 13, scope: !3343)
!3358 = !DILocation(line: 1965, column: 7, scope: !3355)
!3359 = !DILocation(line: 1965, column: 22, scope: !3355)
!3360 = !DILocation(line: 1965, column: 7, scope: !3343)
!3361 = !DILocation(line: 1966, column: 5, scope: !3355)
!3362 = !DILocation(line: 1967, column: 27, scope: !3354)
!3363 = !DILocation(line: 1967, column: 12, scope: !3355)
!3364 = !DILocation(line: 0, scope: !3352)
!3365 = !DILocation(line: 1968, column: 5, scope: !3353)
!3366 = !DILocation(line: 0, scope: !3353)
!3367 = !DILocation(line: 1968, column: 21, scope: !3352)
!3368 = !DILocation(line: 1968, column: 19, scope: !3352)
!3369 = !DILocation(line: 1970, column: 10, scope: !3351)
!3370 = !DILocation(line: 0, scope: !3351)
!3371 = !DILocation(line: 1972, column: 6, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 1972, column: 6)
!3373 = !DILocation(line: 1972, column: 19, scope: !3372)
!3374 = !DILocation(line: 1972, column: 6, scope: !3351)
!3375 = !DILocation(line: 1973, column: 4, scope: !3372)
!3376 = !DILocation(line: 1974, column: 24, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 1974, column: 11)
!3378 = !DILocation(line: 1974, column: 11, scope: !3372)
!3379 = !DILocation(line: 1975, column: 4, scope: !3377)
!3380 = !DILocation(line: 1976, column: 24, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1976, column: 11)
!3382 = !DILocation(line: 1976, column: 11, scope: !3377)
!3383 = !DILocation(line: 1977, column: 4, scope: !3381)
!3384 = !DILocation(line: 1968, column: 40, scope: !3352)
!3385 = !DILocation(line: 1968, column: 5, scope: !3352)
!3386 = distinct !{!3386, !3365, !3387}
!3387 = !DILocation(line: 1978, column: 7, scope: !3353)
!3388 = !DILocation(line: 1980, column: 27, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 1980, column: 12)
!3390 = !DILocation(line: 1980, column: 12, scope: !3354)
!3391 = !DILocation(line: 1981, column: 5, scope: !3389)
!3392 = !DILocation(line: 1982, column: 27, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 1982, column: 12)
!3394 = !DILocation(line: 1982, column: 12, scope: !3389)
!3395 = !DILocation(line: 1983, column: 5, scope: !3393)
!3396 = !DILocation(line: 1984, column: 1, scope: !3343)
!3397 = distinct !DISubprogram(name: "bypass_conditional_jumps", scope: !3, file: !3, line: 3106, type: !2220, scopeLine: 3107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3398)
!3398 = !{!3399, !3400, !3401, !3402, !3403}
!3399 = !DILocalVariable(name: "bb", scope: !3397, file: !3, line: 3108, type: !1338)
!3400 = !DILocalVariable(name: "changed", scope: !3397, file: !3, line: 3109, type: !772)
!3401 = !DILocalVariable(name: "setcc", scope: !3397, file: !3, line: 3110, type: !787)
!3402 = !DILocalVariable(name: "insn", scope: !3397, file: !3, line: 3111, type: !787)
!3403 = !DILocalVariable(name: "dest", scope: !3397, file: !3, line: 3112, type: !787)
!3404 = !DILocation(line: 3115, column: 7, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 3115, column: 7)
!3406 = !DILocation(line: 3115, column: 24, scope: !3405)
!3407 = !DILocation(line: 3115, column: 35, scope: !3405)
!3408 = !DILocation(line: 3115, column: 32, scope: !3405)
!3409 = !DILocation(line: 3115, column: 7, scope: !3397)
!3410 = !DILocation(line: 3118, column: 29, scope: !3397)
!3411 = !DILocation(line: 3118, column: 27, scope: !3397)
!3412 = !DILocation(line: 3119, column: 3, scope: !3397)
!3413 = !DILocation(line: 0, scope: !3397)
!3414 = !DILocation(line: 3122, column: 3, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 3122, column: 3)
!3416 = !DILocation(line: 3122, column: 3, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 3122, column: 3)
!3418 = !DILocation(line: 3121, column: 11, scope: !3397)
!3419 = !DILocation(line: 0, scope: !3415)
!3420 = !DILocation(line: 3126, column: 12, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 3126, column: 11)
!3422 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 3124, column: 5)
!3423 = !DILocation(line: 3126, column: 11, scope: !3422)
!3424 = !DILocation(line: 3129, column: 4, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 3129, column: 4)
!3426 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 3127, column: 2)
!3427 = !DILocation(line: 3128, column: 10, scope: !3426)
!3428 = !DILocation(line: 0, scope: !3425)
!3429 = !DILocation(line: 3129, column: 4, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 3129, column: 4)
!3431 = !DILocation(line: 3130, column: 10, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 3130, column: 10)
!3433 = !DILocation(line: 3130, column: 10, scope: !3430)
!3434 = !DILocation(line: 3132, column: 15, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 3132, column: 15)
!3436 = !DILocation(line: 3132, column: 15, scope: !3432)
!3437 = !DILocation(line: 3134, column: 7, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 3134, column: 7)
!3439 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 3133, column: 8)
!3440 = !DILocation(line: 3134, column: 7, scope: !3439)
!3441 = !DILocation(line: 3136, column: 7, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 3136, column: 7)
!3443 = !DILocation(line: 3136, column: 33, scope: !3442)
!3444 = !DILocation(line: 3136, column: 7, scope: !3439)
!3445 = !DILocation(line: 3139, column: 10, scope: !3439)
!3446 = !DILocation(line: 3140, column: 7, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 3140, column: 7)
!3448 = !DILocation(line: 3140, column: 20, scope: !3447)
!3449 = !DILocation(line: 3145, column: 15, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 3145, column: 15)
!3451 = !DILocation(line: 3145, column: 15, scope: !3435)
!3452 = !DILocation(line: 3147, column: 8, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 3147, column: 7)
!3454 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 3146, column: 8)
!3455 = !DILocation(line: 3147, column: 30, scope: !3453)
!3456 = !DILocation(line: 3147, column: 33, scope: !3453)
!3457 = !DILocation(line: 3148, column: 7, scope: !3453)
!3458 = !DILocation(line: 3148, column: 10, scope: !3453)
!3459 = !DILocation(line: 3147, column: 7, scope: !3454)
!3460 = !DILocation(line: 3149, column: 16, scope: !3453)
!3461 = !DILocation(line: 3149, column: 13, scope: !3453)
!3462 = !DILocation(line: 3149, column: 5, scope: !3453)
!3463 = !DILocation(line: 3152, column: 15, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 3152, column: 15)
!3465 = !DILocation(line: 3152, column: 15, scope: !3450)
!3466 = !DILocation(line: 0, scope: !3426)
!3467 = distinct !{!3467, !3424, !3468}
!3468 = !DILocation(line: 3153, column: 8, scope: !3425)
!3469 = !DILocation(line: 0, scope: !3417)
!3470 = distinct !{!3470, !3414, !3471}
!3471 = !DILocation(line: 3155, column: 5, scope: !3415)
!3472 = !DILocation(line: 3159, column: 7, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 3159, column: 7)
!3474 = !DILocation(line: 3159, column: 7, scope: !3397)
!3475 = !DILocation(line: 3160, column: 5, scope: !3473)
!3476 = !DILocation(line: 3163, column: 1, scope: !3397)
!3477 = distinct !DISubprogram(name: "free_cprop_mem", scope: !3, file: !3, line: 2013, type: !2657, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!3478 = !DILocation(line: 2015, column: 3, scope: !3477)
!3479 = !DILocation(line: 2016, column: 3, scope: !3477)
!3480 = !DILocation(line: 2017, column: 3, scope: !3477)
!3481 = !DILocation(line: 2018, column: 3, scope: !3477)
!3482 = !DILocation(line: 2019, column: 1, scope: !3477)
!3483 = distinct !DISubprogram(name: "free_hash_table", scope: !3, file: !3, line: 1732, type: !3110, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3484)
!3484 = !{!3485}
!3485 = !DILocalVariable(name: "table", arg: 1, scope: !3483, file: !3, line: 1732, type: !3089)
!3486 = !DILocation(line: 0, scope: !3483)
!3487 = !DILocation(line: 1734, column: 16, scope: !3483)
!3488 = !DILocation(line: 1734, column: 3, scope: !3483)
!3489 = !DILocation(line: 1735, column: 1, scope: !3483)
!3490 = distinct !DISubprogram(name: "free_gcse_mem", scope: !3, file: !3, line: 641, type: !2657, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!3491 = !DILocation(line: 643, column: 3, scope: !3490)
!3492 = !DILocation(line: 644, column: 3, scope: !3490)
!3493 = !DILocation(line: 645, column: 3, scope: !3490)
!3494 = !DILocation(line: 646, column: 1, scope: !3490)
!3495 = distinct !DISubprogram(name: "gcalloc", scope: !3, file: !3, line: 606, type: !1285, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3496)
!3496 = !{!3497, !3498}
!3497 = !DILocalVariable(name: "nelem", arg: 1, scope: !3495, file: !3, line: 606, type: !1276)
!3498 = !DILocalVariable(name: "elsize", arg: 2, scope: !3495, file: !3, line: 606, type: !1276)
!3499 = !DILocation(line: 0, scope: !3495)
!3500 = !DILocation(line: 608, column: 14, scope: !3495)
!3501 = !DILocation(line: 609, column: 10, scope: !3495)
!3502 = !DILocation(line: 609, column: 3, scope: !3495)
!3503 = distinct !DISubprogram(name: "local_cprop_find_used_regs", scope: !3, file: !3, line: 2612, type: !3504, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{null, !786, !776}
!3506 = !{!3507, !3508, !3509}
!3507 = !DILocalVariable(name: "xptr", arg: 1, scope: !3503, file: !3, line: 2612, type: !786)
!3508 = !DILocalVariable(name: "data", arg: 2, scope: !3503, file: !3, line: 2612, type: !776)
!3509 = !DILocalVariable(name: "x", scope: !3503, file: !3, line: 2614, type: !787)
!3510 = !DILocation(line: 0, scope: !3503)
!3511 = !DILocation(line: 2614, column: 11, scope: !3503)
!3512 = !DILocation(line: 2616, column: 9, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 2616, column: 7)
!3514 = !DILocation(line: 2616, column: 7, scope: !3503)
!3515 = !DILocation(line: 2619, column: 11, scope: !3503)
!3516 = !DILocation(line: 2619, column: 3, scope: !3503)
!3517 = !DILocation(line: 2640, column: 11, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 2640, column: 11)
!3519 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 2620, column: 5)
!3520 = !DILocation(line: 2640, column: 56, scope: !3518)
!3521 = !DILocation(line: 2640, column: 11, scope: !3519)
!3522 = !DILocation(line: 2648, column: 3, scope: !3503)
!3523 = !DILocation(line: 2649, column: 1, scope: !3503)
!3524 = distinct !DISubprogram(name: "do_local_cprop", scope: !3, file: !3, line: 2654, type: !3525, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3527)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!6, !787, !787}
!3527 = !{!3528, !3529, !3530, !3531, !3532, !3535, !3536, !3540}
!3528 = !DILocalVariable(name: "x", arg: 1, scope: !3524, file: !3, line: 2654, type: !787)
!3529 = !DILocalVariable(name: "insn", arg: 2, scope: !3524, file: !3, line: 2654, type: !787)
!3530 = !DILocalVariable(name: "newreg", scope: !3524, file: !3, line: 2656, type: !787)
!3531 = !DILocalVariable(name: "newcnst", scope: !3524, file: !3, line: 2656, type: !787)
!3532 = !DILocalVariable(name: "val", scope: !3533, file: !3, line: 2665, type: !858)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 2664, column: 5)
!3534 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 2660, column: 7)
!3535 = !DILocalVariable(name: "l", scope: !3533, file: !3, line: 2666, type: !846)
!3536 = !DILocalVariable(name: "this_rtx", scope: !3537, file: !3, line: 2672, type: !787)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 2671, column: 2)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 2670, column: 7)
!3539 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 2670, column: 7)
!3540 = !DILocalVariable(name: "note", scope: !3537, file: !3, line: 2673, type: !787)
!3541 = !DILocation(line: 0, scope: !3524)
!3542 = !DILocation(line: 2660, column: 7, scope: !3534)
!3543 = !DILocation(line: 2661, column: 7, scope: !3534)
!3544 = !DILocation(line: 2661, column: 11, scope: !3534)
!3545 = !DILocation(line: 2661, column: 21, scope: !3534)
!3546 = !DILocation(line: 2662, column: 11, scope: !3534)
!3547 = !DILocation(line: 2662, column: 15, scope: !3534)
!3548 = !DILocation(line: 2662, column: 41, scope: !3534)
!3549 = !DILocation(line: 2663, column: 8, scope: !3534)
!3550 = !DILocation(line: 2663, column: 11, scope: !3534)
!3551 = !DILocation(line: 2663, column: 42, scope: !3534)
!3552 = !DILocation(line: 2660, column: 7, scope: !3524)
!3553 = !DILocation(line: 2665, column: 43, scope: !3533)
!3554 = !DILocation(line: 2665, column: 25, scope: !3533)
!3555 = !DILocation(line: 0, scope: !3533)
!3556 = !DILocation(line: 2668, column: 12, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 2668, column: 11)
!3558 = !DILocation(line: 2668, column: 11, scope: !3533)
!3559 = !DILocation(line: 2670, column: 21, scope: !3539)
!3560 = !DILocation(line: 2670, column: 12, scope: !3539)
!3561 = !DILocation(line: 2656, column: 7, scope: !3524)
!3562 = !DILocation(line: 0, scope: !3539)
!3563 = !DILocation(line: 2670, column: 7, scope: !3539)
!3564 = !DILocation(line: 2672, column: 22, scope: !3537)
!3565 = !DILocation(line: 0, scope: !3537)
!3566 = !DILocation(line: 2675, column: 8, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 2675, column: 8)
!3568 = !DILocation(line: 2675, column: 8, scope: !3537)
!3569 = !DILocation(line: 2677, column: 8, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 2677, column: 8)
!3571 = !DILocation(line: 2677, column: 25, scope: !3570)
!3572 = !DILocation(line: 2677, column: 28, scope: !3570)
!3573 = !DILocation(line: 2677, column: 45, scope: !3570)
!3574 = !DILocation(line: 2683, column: 8, scope: !3570)
!3575 = !DILocation(line: 2683, column: 39, scope: !3570)
!3576 = !DILocation(line: 2683, column: 21, scope: !3570)
!3577 = !DILocation(line: 2683, column: 19, scope: !3570)
!3578 = !DILocation(line: 2684, column: 5, scope: !3570)
!3579 = !DILocation(line: 2684, column: 10, scope: !3570)
!3580 = !DILocation(line: 2677, column: 8, scope: !3537)
!3581 = !DILocation(line: 2685, column: 6, scope: !3570)
!3582 = !DILocation(line: 2670, column: 37, scope: !3538)
!3583 = !DILocation(line: 2670, column: 7, scope: !3538)
!3584 = distinct !{!3584, !3563, !3585}
!3585 = !DILocation(line: 2686, column: 2, scope: !3539)
!3586 = !DILocation(line: 2687, column: 11, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 2687, column: 11)
!3588 = !DILocation(line: 2687, column: 19, scope: !3587)
!3589 = !DILocation(line: 2687, column: 22, scope: !3587)
!3590 = !DILocation(line: 2687, column: 11, scope: !3533)
!3591 = !DILocation(line: 2689, column: 8, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 2689, column: 8)
!3593 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2688, column: 2)
!3594 = !DILocation(line: 2689, column: 18, scope: !3592)
!3595 = !DILocation(line: 2689, column: 8, scope: !3593)
!3596 = !DILocation(line: 2692, column: 10, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 2690, column: 6)
!3598 = !DILocation(line: 2691, column: 8, scope: !3597)
!3599 = !DILocation(line: 2693, column: 17, scope: !3597)
!3600 = !DILocation(line: 2694, column: 10, scope: !3597)
!3601 = !DILocation(line: 2693, column: 8, scope: !3597)
!3602 = !DILocation(line: 2695, column: 19, scope: !3597)
!3603 = !DILocation(line: 2695, column: 8, scope: !3597)
!3604 = !DILocation(line: 2696, column: 17, scope: !3597)
!3605 = !DILocation(line: 2696, column: 8, scope: !3597)
!3606 = !DILocation(line: 2697, column: 6, scope: !3597)
!3607 = !DILocation(line: 2698, column: 26, scope: !3593)
!3608 = !DILocation(line: 2699, column: 4, scope: !3593)
!3609 = !DILocation(line: 2701, column: 16, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2701, column: 16)
!3611 = !DILocation(line: 2701, column: 33, scope: !3610)
!3612 = !DILocation(line: 2701, column: 23, scope: !3610)
!3613 = !DILocation(line: 2701, column: 41, scope: !3610)
!3614 = !DILocation(line: 2701, column: 16, scope: !3587)
!3615 = !DILocation(line: 2703, column: 8, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 2703, column: 8)
!3617 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 2702, column: 2)
!3618 = !DILocation(line: 2703, column: 18, scope: !3616)
!3619 = !DILocation(line: 2703, column: 8, scope: !3617)
!3620 = !DILocation(line: 2707, column: 10, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 2704, column: 6)
!3622 = !DILocation(line: 2707, column: 21, scope: !3621)
!3623 = !DILocation(line: 2705, column: 8, scope: !3621)
!3624 = !DILocation(line: 2708, column: 17, scope: !3621)
!3625 = !DILocation(line: 2708, column: 46, scope: !3621)
!3626 = !DILocation(line: 2708, column: 8, scope: !3621)
!3627 = !DILocation(line: 2709, column: 6, scope: !3621)
!3628 = !DILocation(line: 2710, column: 25, scope: !3617)
!3629 = !DILocation(line: 2711, column: 4, scope: !3617)
!3630 = !DILocation(line: 2714, column: 3, scope: !3524)
!3631 = !DILocation(line: 2715, column: 1, scope: !3524)
!3632 = distinct !DISubprogram(name: "find_used_regs", scope: !3, file: !3, line: 2185, type: !3504, scopeLine: 2186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3633)
!3633 = !{!3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641}
!3634 = !DILocalVariable(name: "xptr", arg: 1, scope: !3632, file: !3, line: 2185, type: !786)
!3635 = !DILocalVariable(name: "data", arg: 2, scope: !3632, file: !3, line: 2185, type: !776)
!3636 = !DILocalVariable(name: "i", scope: !3632, file: !3, line: 2187, type: !772)
!3637 = !DILocalVariable(name: "j", scope: !3632, file: !3, line: 2187, type: !772)
!3638 = !DILocalVariable(name: "code", scope: !3632, file: !3, line: 2188, type: !593)
!3639 = !DILocalVariable(name: "fmt", scope: !3632, file: !3, line: 2189, type: !777)
!3640 = !DILocalVariable(name: "x", scope: !3632, file: !3, line: 2190, type: !787)
!3641 = !DILabel(scope: !3632, name: "repeat", file: !3, line: 2194)
!3642 = !DILocation(line: 0, scope: !3632)
!3643 = !DILocation(line: 2190, column: 3, scope: !3632)
!3644 = !DILocation(line: 2194, column: 2, scope: !3632)
!3645 = !DILocation(line: 2195, column: 9, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 2195, column: 7)
!3647 = !DILocation(line: 2195, column: 7, scope: !3632)
!3648 = !DILocation(line: 2198, column: 10, scope: !3632)
!3649 = !DILocation(line: 2199, column: 7, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 2199, column: 7)
!3651 = !DILocation(line: 2199, column: 7, scope: !3632)
!3652 = !DILocation(line: 2201, column: 11, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 2201, column: 11)
!3654 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 2200, column: 5)
!3655 = !DILocation(line: 2201, column: 25, scope: !3653)
!3656 = !DILocation(line: 2201, column: 11, scope: !3654)
!3657 = !DILocation(line: 2204, column: 7, scope: !3654)
!3658 = !DILocation(line: 2204, column: 36, scope: !3654)
!3659 = !DILocation(line: 2204, column: 44, scope: !3654)
!3660 = !DILocation(line: 2205, column: 20, scope: !3654)
!3661 = !DILocation(line: 2206, column: 5, scope: !3654)
!3662 = !DILocation(line: 2210, column: 12, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 2210, column: 3)
!3664 = !DILocation(line: 2210, column: 45, scope: !3663)
!3665 = !DILocation(line: 0, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 2226, column: 2)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 2226, column: 2)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 2225, column: 16)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 2212, column: 11)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 2211, column: 5)
!3671 = distinct !DILexicalBlock(scope: !3663, file: !3, line: 2210, column: 3)
!3672 = !DILocation(line: 2210, column: 8, scope: !3663)
!3673 = !DILocation(line: 0, scope: !3663)
!3674 = !DILocation(line: 2210, column: 70, scope: !3671)
!3675 = !DILocation(line: 2210, column: 3, scope: !3663)
!3676 = !DILocation(line: 2212, column: 11, scope: !3669)
!3677 = !DILocation(line: 2212, column: 18, scope: !3669)
!3678 = !DILocation(line: 2212, column: 11, scope: !3670)
!3679 = !DILocation(line: 2217, column: 8, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 2213, column: 2)
!3681 = !DILocation(line: 2219, column: 12, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 2218, column: 6)
!3683 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 2217, column: 8)
!3684 = !DILocation(line: 2220, column: 8, scope: !3682)
!3685 = !DILocation(line: 2223, column: 21, scope: !3680)
!3686 = !DILocation(line: 2223, column: 4, scope: !3680)
!3687 = !DILocation(line: 2224, column: 2, scope: !3680)
!3688 = !DILocation(line: 2225, column: 23, scope: !3668)
!3689 = !DILocation(line: 2225, column: 16, scope: !3669)
!3690 = !DILocation(line: 2226, column: 2, scope: !3667)
!3691 = !DILocation(line: 0, scope: !3667)
!3692 = !DILocation(line: 2226, column: 18, scope: !3666)
!3693 = !DILocation(line: 2226, column: 16, scope: !3666)
!3694 = !DILocation(line: 2227, column: 21, scope: !3666)
!3695 = !DILocation(line: 2227, column: 4, scope: !3666)
!3696 = !DILocation(line: 2226, column: 35, scope: !3666)
!3697 = !DILocation(line: 2226, column: 2, scope: !3666)
!3698 = distinct !{!3698, !3690, !3699}
!3699 = !DILocation(line: 2227, column: 44, scope: !3667)
!3700 = !DILocation(line: 2210, column: 3, scope: !3671)
!3701 = distinct !{!3701, !3675, !3702}
!3702 = !DILocation(line: 2228, column: 5, scope: !3663)
!3703 = !DILocation(line: 2229, column: 1, scope: !3632)
!3704 = distinct !DISubprogram(name: "rhs_regno", scope: !594, file: !594, line: 1051, type: !3705, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3707)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!9, !2124}
!3707 = !{!3708}
!3708 = !DILocalVariable(name: "x", arg: 1, scope: !3704, file: !594, line: 1051, type: !2124)
!3709 = !DILocation(line: 0, scope: !3704)
!3710 = !DILocation(line: 1053, column: 10, scope: !3704)
!3711 = !DILocation(line: 1053, column: 3, scope: !3704)
!3712 = distinct !DISubprogram(name: "gcse_constant_p", scope: !3, file: !3, line: 1271, type: !3713, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3715)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!6, !2124}
!3715 = !{!3716}
!3716 = !DILocalVariable(name: "x", arg: 1, scope: !3712, file: !3, line: 1271, type: !2124)
!3717 = !DILocation(line: 0, scope: !3712)
!3718 = !DILocation(line: 1274, column: 7, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 1274, column: 7)
!3720 = !DILocation(line: 1274, column: 20, scope: !3719)
!3721 = !DILocation(line: 1275, column: 7, scope: !3719)
!3722 = !DILocation(line: 1275, column: 10, scope: !3719)
!3723 = !DILocation(line: 1276, column: 7, scope: !3719)
!3724 = !DILocation(line: 1276, column: 10, scope: !3719)
!3725 = !DILocation(line: 1274, column: 7, scope: !3712)
!3726 = !DILocation(line: 1282, column: 7, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 1281, column: 7)
!3728 = !DILocation(line: 1282, column: 10, scope: !3727)
!3729 = !DILocation(line: 1282, column: 30, scope: !3727)
!3730 = !DILocation(line: 1282, column: 33, scope: !3727)
!3731 = !DILocation(line: 1283, column: 7, scope: !3727)
!3732 = !DILocation(line: 1283, column: 10, scope: !3727)
!3733 = !DILocation(line: 1283, column: 33, scope: !3727)
!3734 = !DILocation(line: 1283, column: 30, scope: !3727)
!3735 = !DILocation(line: 1284, column: 7, scope: !3727)
!3736 = !DILocation(line: 1284, column: 12, scope: !3727)
!3737 = !DILocation(line: 1285, column: 7, scope: !3727)
!3738 = !DILocation(line: 1285, column: 12, scope: !3727)
!3739 = !DILocation(line: 1281, column: 7, scope: !3712)
!3740 = !DILocation(line: 1290, column: 10, scope: !3712)
!3741 = !DILocation(line: 1290, column: 25, scope: !3712)
!3742 = !DILocation(line: 1290, column: 42, scope: !3712)
!3743 = !DILocation(line: 1290, column: 51, scope: !3712)
!3744 = !DILocation(line: 1290, column: 54, scope: !3712)
!3745 = !DILocation(line: 1290, column: 3, scope: !3712)
!3746 = !DILocation(line: 1291, column: 1, scope: !3712)
!3747 = distinct !DISubprogram(name: "constprop_register", scope: !3, file: !3, line: 2480, type: !3748, scopeLine: 2481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3750)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!6, !787, !787, !787}
!3750 = !{!3751, !3752, !3753, !3754, !3755}
!3751 = !DILocalVariable(name: "insn", arg: 1, scope: !3747, file: !3, line: 2480, type: !787)
!3752 = !DILocalVariable(name: "from", arg: 2, scope: !3747, file: !3, line: 2480, type: !787)
!3753 = !DILocalVariable(name: "to", arg: 3, scope: !3747, file: !3, line: 2480, type: !787)
!3754 = !DILocalVariable(name: "sset", scope: !3747, file: !3, line: 2482, type: !787)
!3755 = !DILocalVariable(name: "dest", scope: !3756, file: !3, line: 2490, type: !787)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !3, line: 2489, column: 5)
!3757 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 2486, column: 7)
!3758 = !DILocation(line: 0, scope: !3747)
!3759 = !DILocation(line: 2486, column: 15, scope: !3757)
!3760 = !DILocation(line: 2486, column: 34, scope: !3757)
!3761 = !DILocation(line: 2487, column: 7, scope: !3757)
!3762 = !DILocation(line: 2487, column: 10, scope: !3757)
!3763 = !DILocation(line: 2488, column: 7, scope: !3757)
!3764 = !DILocation(line: 2488, column: 10, scope: !3757)
!3765 = !DILocation(line: 2488, column: 44, scope: !3757)
!3766 = !DILocation(line: 2488, column: 59, scope: !3757)
!3767 = !DILocation(line: 2488, column: 47, scope: !3757)
!3768 = !DILocation(line: 2486, column: 7, scope: !3747)
!3769 = !DILocation(line: 2490, column: 18, scope: !3756)
!3770 = !DILocation(line: 2491, column: 12, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 2491, column: 11)
!3772 = !DILocation(line: 2491, column: 25, scope: !3771)
!3773 = !DILocation(line: 2492, column: 19, scope: !3771)
!3774 = !DILocation(line: 2492, column: 48, scope: !3771)
!3775 = !DILocation(line: 2492, column: 7, scope: !3771)
!3776 = !DILocation(line: 2491, column: 11, scope: !3756)
!3777 = !DILocation(line: 2494, column: 5, scope: !3757)
!3778 = !DILocation(line: 2497, column: 7, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 2497, column: 7)
!3780 = !DILocation(line: 2498, column: 7, scope: !3779)
!3781 = !DILocation(line: 2498, column: 10, scope: !3779)
!3782 = !DILocation(line: 2497, column: 7, scope: !3747)
!3783 = !DILocation(line: 2507, column: 12, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 2507, column: 12)
!3785 = !DILocation(line: 2507, column: 34, scope: !3784)
!3786 = !DILocation(line: 2507, column: 37, scope: !3784)
!3787 = !DILocation(line: 2507, column: 12, scope: !3779)
!3788 = !DILocation(line: 2508, column: 24, scope: !3784)
!3789 = !DILocation(line: 2508, column: 12, scope: !3784)
!3790 = !DILocation(line: 2508, column: 5, scope: !3784)
!3791 = !DILocation(line: 2510, column: 1, scope: !3747)
!3792 = distinct !DISubprogram(name: "try_replace_reg", scope: !3, file: !3, line: 2235, type: !3793, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3795)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!772, !787, !787, !787}
!3795 = !{!3796, !3797, !3798, !3799, !3800, !3801, !3802}
!3796 = !DILocalVariable(name: "from", arg: 1, scope: !3792, file: !3, line: 2235, type: !787)
!3797 = !DILocalVariable(name: "to", arg: 2, scope: !3792, file: !3, line: 2235, type: !787)
!3798 = !DILocalVariable(name: "insn", arg: 3, scope: !3792, file: !3, line: 2235, type: !787)
!3799 = !DILocalVariable(name: "note", scope: !3792, file: !3, line: 2237, type: !787)
!3800 = !DILocalVariable(name: "src", scope: !3792, file: !3, line: 2238, type: !787)
!3801 = !DILocalVariable(name: "success", scope: !3792, file: !3, line: 2239, type: !772)
!3802 = !DILocalVariable(name: "set", scope: !3792, file: !3, line: 2240, type: !787)
!3803 = !DILocation(line: 0, scope: !3792)
!3804 = !DILocation(line: 2237, column: 14, scope: !3792)
!3805 = !DILocation(line: 2240, column: 13, scope: !3792)
!3806 = !DILocation(line: 2245, column: 8, scope: !3792)
!3807 = !DILocation(line: 2247, column: 3, scope: !3792)
!3808 = !DILocation(line: 2248, column: 7, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2248, column: 7)
!3810 = !DILocation(line: 2248, column: 30, scope: !3809)
!3811 = !DILocation(line: 2248, column: 33, scope: !3809)
!3812 = !DILocation(line: 2248, column: 7, scope: !3792)
!3813 = !DILocation(line: 2252, column: 7, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2252, column: 7)
!3815 = !DILocation(line: 2252, column: 18, scope: !3814)
!3816 = !DILocation(line: 2252, column: 15, scope: !3814)
!3817 = !DILocation(line: 2252, column: 25, scope: !3814)
!3818 = !DILocation(line: 2252, column: 7, scope: !3792)
!3819 = !DILocation(line: 2254, column: 27, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 2253, column: 5)
!3821 = !DILocation(line: 2254, column: 13, scope: !3820)
!3822 = !DILocation(line: 2256, column: 11, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 2256, column: 11)
!3824 = !DILocation(line: 2256, column: 11, scope: !3820)
!3825 = !DILocation(line: 2257, column: 2, scope: !3823)
!3826 = !DILocation(line: 2262, column: 12, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2262, column: 7)
!3828 = !DILocation(line: 2262, column: 17, scope: !3827)
!3829 = !DILocation(line: 2262, column: 20, scope: !3827)
!3830 = !DILocation(line: 2262, column: 41, scope: !3827)
!3831 = !DILocation(line: 2262, column: 7, scope: !3792)
!3832 = !DILocation(line: 2264, column: 27, scope: !3827)
!3833 = !DILocation(line: 2264, column: 5, scope: !3827)
!3834 = !DILocation(line: 2263, column: 5, scope: !3827)
!3835 = !DILocation(line: 2265, column: 8, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2265, column: 7)
!3837 = !DILocation(line: 2265, column: 16, scope: !3836)
!3838 = !DILocation(line: 2265, column: 49, scope: !3836)
!3839 = !DILocation(line: 2265, column: 26, scope: !3836)
!3840 = !DILocation(line: 2265, column: 7, scope: !3792)
!3841 = !DILocation(line: 2270, column: 35, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 2266, column: 5)
!3843 = !DILocation(line: 2270, column: 13, scope: !3842)
!3844 = !DILocation(line: 2272, column: 30, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 2272, column: 11)
!3846 = !DILocation(line: 2272, column: 12, scope: !3845)
!3847 = !DILocation(line: 2273, column: 4, scope: !3845)
!3848 = !DILocation(line: 2273, column: 7, scope: !3845)
!3849 = !DILocation(line: 2272, column: 11, scope: !3842)
!3850 = !DILocation(line: 2279, column: 12, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 2279, column: 11)
!3852 = !DILocation(line: 2279, column: 20, scope: !3851)
!3853 = !DILocation(line: 2280, column: 7, scope: !3851)
!3854 = !DILocation(line: 2280, column: 33, scope: !3851)
!3855 = !DILocation(line: 2281, column: 4, scope: !3851)
!3856 = !DILocation(line: 2281, column: 33, scope: !3851)
!3857 = !DILocation(line: 2279, column: 11, scope: !3842)
!3858 = !DILocation(line: 2282, column: 47, scope: !3851)
!3859 = !DILocation(line: 2282, column: 9, scope: !3851)
!3860 = !DILocation(line: 2282, column: 2, scope: !3851)
!3861 = !DILocation(line: 2237, column: 7, scope: !3792)
!3862 = !DILocation(line: 2249, column: 13, scope: !3809)
!3863 = !DILocation(line: 2289, column: 7, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2289, column: 7)
!3865 = !DILocation(line: 2289, column: 12, scope: !3864)
!3866 = !DILocation(line: 2289, column: 15, scope: !3864)
!3867 = !DILocation(line: 2289, column: 36, scope: !3864)
!3868 = !DILocation(line: 2289, column: 49, scope: !3864)
!3869 = !DILocation(line: 2289, column: 52, scope: !3864)
!3870 = !DILocation(line: 2289, column: 7, scope: !3792)
!3871 = !DILocation(line: 2290, column: 5, scope: !3864)
!3872 = !DILocation(line: 2292, column: 3, scope: !3792)
!3873 = distinct !DISubprogram(name: "cprop_jump", scope: !3, file: !3, line: 2371, type: !3874, scopeLine: 2372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3876)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!772, !1338, !787, !787, !787, !787}
!3876 = !{!3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3890, !3891, !3892, !3895}
!3877 = !DILocalVariable(name: "bb", arg: 1, scope: !3873, file: !3, line: 2371, type: !1338)
!3878 = !DILocalVariable(name: "setcc", arg: 2, scope: !3873, file: !3, line: 2371, type: !787)
!3879 = !DILocalVariable(name: "jump", arg: 3, scope: !3873, file: !3, line: 2371, type: !787)
!3880 = !DILocalVariable(name: "from", arg: 4, scope: !3873, file: !3, line: 2371, type: !787)
!3881 = !DILocalVariable(name: "src", arg: 5, scope: !3873, file: !3, line: 2371, type: !787)
!3882 = !DILocalVariable(name: "new_rtx", scope: !3873, file: !3, line: 2373, type: !787)
!3883 = !DILocalVariable(name: "set_src", scope: !3873, file: !3, line: 2373, type: !787)
!3884 = !DILocalVariable(name: "note_src", scope: !3873, file: !3, line: 2373, type: !787)
!3885 = !DILocalVariable(name: "set", scope: !3873, file: !3, line: 2374, type: !787)
!3886 = !DILocalVariable(name: "note", scope: !3873, file: !3, line: 2375, type: !787)
!3887 = !DILocalVariable(name: "setcc_src", scope: !3888, file: !3, line: 2394, type: !787)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 2393, column: 5)
!3889 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2390, column: 7)
!3890 = !DILocalVariable(name: "setcc_set", scope: !3888, file: !3, line: 2395, type: !787)
!3891 = !DILocalVariable(name: "setcc_note", scope: !3888, file: !3, line: 2396, type: !787)
!3892 = !DILocalVariable(name: "e", scope: !3893, file: !3, line: 2463, type: !1355)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 2462, column: 5)
!3894 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2461, column: 7)
!3895 = !DILocalVariable(name: "ei", scope: !3893, file: !3, line: 2464, type: !3896)
!3896 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !146, line: 682, baseType: !3897)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 679, size: 128, elements: !3898)
!3898 = !{!3899, !3900}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3897, file: !146, line: 680, baseType: !9, size: 32)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3897, file: !146, line: 681, baseType: !3901, size: 64, offset: 64)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!3902 = !DILocation(line: 0, scope: !3873)
!3903 = !DILocation(line: 2374, column: 13, scope: !3873)
!3904 = !DILocation(line: 2375, column: 14, scope: !3873)
!3905 = !DILocation(line: 2377, column: 7, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2377, column: 7)
!3907 = !DILocation(line: 2377, column: 7, scope: !3873)
!3908 = !DILocation(line: 2379, column: 18, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 2378, column: 5)
!3910 = !DILocation(line: 2380, column: 11, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 2380, column: 11)
!3912 = !DILocation(line: 2380, column: 31, scope: !3911)
!3913 = !DILocation(line: 2380, column: 11, scope: !3909)
!3914 = !DILocation(line: 2382, column: 5, scope: !3909)
!3915 = !DILocation(line: 0, scope: !3906)
!3916 = !DILocation(line: 2386, column: 13, scope: !3873)
!3917 = !DILocation(line: 2386, column: 35, scope: !3873)
!3918 = !DILocation(line: 2390, column: 13, scope: !3889)
!3919 = !DILocation(line: 2391, column: 7, scope: !3889)
!3920 = !DILocation(line: 2391, column: 11, scope: !3889)
!3921 = !DILocation(line: 2392, column: 7, scope: !3889)
!3922 = !DILocation(line: 2392, column: 11, scope: !3889)
!3923 = !DILocation(line: 2390, column: 7, scope: !3873)
!3924 = !DILocation(line: 2395, column: 23, scope: !3888)
!3925 = !DILocation(line: 0, scope: !3888)
!3926 = !DILocation(line: 2396, column: 24, scope: !3888)
!3927 = !DILocation(line: 2397, column: 20, scope: !3888)
!3928 = !DILocation(line: 2397, column: 31, scope: !3888)
!3929 = !DILocation(line: 2397, column: 34, scope: !3888)
!3930 = !DILocation(line: 2397, column: 66, scope: !3888)
!3931 = !DILocation(line: 2397, column: 19, scope: !3888)
!3932 = !DILocation(line: 2398, column: 28, scope: !3888)
!3933 = !DILocation(line: 2399, column: 48, scope: !3888)
!3934 = !DILocation(line: 2399, column: 17, scope: !3888)
!3935 = !DILocation(line: 2401, column: 5, scope: !3888)
!3936 = !DILocation(line: 2405, column: 13, scope: !3873)
!3937 = !DILocation(line: 2408, column: 29, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2408, column: 7)
!3939 = !DILocation(line: 2408, column: 7, scope: !3938)
!3940 = !DILocation(line: 2408, column: 7, scope: !3873)
!3941 = !DILocation(line: 2412, column: 18, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2412, column: 7)
!3943 = !DILocation(line: 2412, column: 15, scope: !3942)
!3944 = !DILocation(line: 2412, column: 7, scope: !3873)
!3945 = !DILocation(line: 2413, column: 5, scope: !3942)
!3946 = !DILocation(line: 2418, column: 11, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 2418, column: 11)
!3948 = distinct !DILexicalBlock(scope: !3942, file: !3, line: 2415, column: 5)
!3949 = !DILocation(line: 2418, column: 17, scope: !3947)
!3950 = !DILocation(line: 2418, column: 20, scope: !3947)
!3951 = !DILocation(line: 2418, column: 11, scope: !3948)
!3952 = !DILocation(line: 2420, column: 13, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 2420, column: 11)
!3954 = !DILocation(line: 2420, column: 11, scope: !3948)
!3955 = !DILocation(line: 2431, column: 9, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 2431, column: 8)
!3957 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 2421, column: 2)
!3958 = !DILocation(line: 2431, column: 8, scope: !3957)
!3959 = !DILocation(line: 2432, column: 44, scope: !3956)
!3960 = !DILocation(line: 2432, column: 6, scope: !3956)
!3961 = !DILocation(line: 2437, column: 11, scope: !3948)
!3962 = !DILocation(line: 2438, column: 2, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 2437, column: 11)
!3964 = !DILocation(line: 2447, column: 26, scope: !3873)
!3965 = !DILocation(line: 2448, column: 7, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2448, column: 7)
!3967 = !DILocation(line: 2448, column: 17, scope: !3966)
!3968 = !DILocation(line: 2448, column: 7, scope: !3873)
!3969 = !DILocation(line: 2452, column: 9, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 2449, column: 5)
!3971 = !DILocation(line: 2452, column: 23, scope: !3970)
!3972 = !DILocation(line: 2450, column: 7, scope: !3970)
!3973 = !DILocation(line: 2453, column: 18, scope: !3970)
!3974 = !DILocation(line: 2453, column: 7, scope: !3970)
!3975 = !DILocation(line: 2454, column: 16, scope: !3970)
!3976 = !DILocation(line: 2454, column: 7, scope: !3970)
!3977 = !DILocation(line: 2455, column: 5, scope: !3970)
!3978 = !DILocation(line: 2456, column: 3, scope: !3873)
!3979 = !DILocation(line: 2461, column: 18, scope: !3894)
!3980 = !DILocation(line: 2461, column: 15, scope: !3894)
!3981 = !DILocation(line: 2461, column: 25, scope: !3894)
!3982 = !DILocation(line: 2461, column: 28, scope: !3894)
!3983 = !DILocation(line: 2461, column: 7, scope: !3873)
!3984 = !DILocation(line: 2464, column: 7, scope: !3893)
!3985 = !DILocation(line: 2466, column: 17, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 2466, column: 7)
!3987 = !DILocation(line: 0, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 2466, column: 7)
!3989 = !DILocation(line: 0, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 2467, column: 6)
!3991 = !DILocation(line: 2466, column: 12, scope: !3986)
!3992 = !DILocation(line: 2466, column: 44, scope: !3988)
!3993 = !DILocation(line: 0, scope: !3893)
!3994 = !DILocation(line: 2466, column: 7, scope: !3986)
!3995 = !DILocation(line: 2467, column: 9, scope: !3990)
!3996 = !DILocation(line: 2467, column: 17, scope: !3990)
!3997 = !DILocation(line: 2467, column: 14, scope: !3990)
!3998 = !DILocation(line: 2468, column: 6, scope: !3990)
!3999 = !DILocation(line: 2468, column: 9, scope: !3990)
!4000 = !DILocation(line: 2468, column: 30, scope: !3990)
!4001 = !DILocation(line: 2468, column: 27, scope: !3990)
!4002 = !DILocation(line: 2467, column: 6, scope: !3988)
!4003 = !DILocation(line: 2470, column: 9, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 2469, column: 4)
!4005 = !DILocation(line: 2470, column: 15, scope: !4004)
!4006 = !DILocation(line: 2471, column: 6, scope: !4004)
!4007 = !DILocation(line: 2466, column: 64, scope: !3988)
!4008 = !DILocation(line: 2466, column: 7, scope: !3988)
!4009 = distinct !{!4009, !3994, !4010}
!4010 = !DILocation(line: 2472, column: 4, scope: !3986)
!4011 = !DILocation(line: 2473, column: 7, scope: !3893)
!4012 = !DILocation(line: 2474, column: 5, scope: !3894)
!4013 = !DILocation(line: 2474, column: 5, scope: !3893)
!4014 = !DILocation(line: 2477, column: 1, scope: !3873)
!4015 = distinct !DISubprogram(name: "ei_start_1", scope: !146, file: !146, line: 696, type: !4016, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4018)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!3896, !3901}
!4018 = !{!4019, !4020}
!4019 = !DILocalVariable(name: "ev", arg: 1, scope: !4015, file: !146, line: 696, type: !3901)
!4020 = !DILocalVariable(name: "i", scope: !4015, file: !146, line: 698, type: !3896)
!4021 = !DILocation(line: 0, scope: !4015)
!4022 = !DILocation(line: 700, column: 5, scope: !4015)
!4023 = !DILocation(line: 700, column: 11, scope: !4015)
!4024 = !DILocation(line: 701, column: 5, scope: !4015)
!4025 = !DILocation(line: 701, column: 15, scope: !4015)
!4026 = !DILocation(line: 703, column: 3, scope: !4015)
!4027 = distinct !DISubprogram(name: "ei_safe_edge", scope: !146, file: !146, line: 761, type: !4028, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4030)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!1355, !3896}
!4030 = !{!4031}
!4031 = !DILocalVariable(name: "i", arg: 1, scope: !4027, file: !146, line: 761, type: !3896)
!4032 = !DILocation(line: 763, column: 11, scope: !4027)
!4033 = !DILocation(line: 763, column: 10, scope: !4027)
!4034 = !DILocation(line: 763, column: 26, scope: !4027)
!4035 = !DILocation(line: 763, column: 3, scope: !4027)
!4036 = distinct !DISubprogram(name: "ei_next", scope: !146, file: !146, line: 736, type: !4037, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4040)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{null, !4039}
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!4040 = !{!4041}
!4041 = !DILocalVariable(name: "i", arg: 1, scope: !4036, file: !146, line: 736, type: !4039)
!4042 = !DILocation(line: 0, scope: !4036)
!4043 = !DILocation(line: 738, column: 3, scope: !4036)
!4044 = !DILocation(line: 739, column: 11, scope: !4036)
!4045 = !DILocation(line: 740, column: 1, scope: !4036)
!4046 = distinct !DISubprogram(name: "ei_end_p", scope: !146, file: !146, line: 721, type: !4047, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4049)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!6, !3896}
!4049 = !{!4050}
!4050 = !DILocalVariable(name: "i", arg: 1, scope: !4046, file: !146, line: 721, type: !3896)
!4051 = !DILocation(line: 723, column: 22, scope: !4046)
!4052 = !DILocation(line: 723, column: 19, scope: !4046)
!4053 = !DILocation(line: 723, column: 10, scope: !4046)
!4054 = !DILocation(line: 723, column: 3, scope: !4046)
!4055 = distinct !DISubprogram(name: "ei_edge", scope: !146, file: !146, line: 752, type: !4028, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4056)
!4056 = !{!4057}
!4057 = !DILocalVariable(name: "i", arg: 1, scope: !4055, file: !146, line: 752, type: !3896)
!4058 = !DILocation(line: 754, column: 10, scope: !4055)
!4059 = !DILocation(line: 754, column: 3, scope: !4055)
!4060 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !146, file: !146, line: 150, type: !4061, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4065)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!9, !4063}
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1348)
!4065 = !{!4066}
!4066 = !DILocalVariable(name: "vec_", arg: 1, scope: !4060, file: !146, line: 150, type: !4063)
!4067 = !DILocation(line: 0, scope: !4060)
!4068 = !DILocation(line: 150, column: 1, scope: !4060)
!4069 = distinct !DISubprogram(name: "ei_container", scope: !146, file: !146, line: 685, type: !4070, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4072)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!1343, !3896}
!4072 = !{!4073}
!4073 = !DILocalVariable(name: "i", arg: 1, scope: !4069, file: !146, line: 685, type: !3896)
!4074 = !DILocation(line: 687, column: 3, scope: !4069)
!4075 = !DILocation(line: 688, column: 10, scope: !4069)
!4076 = !DILocation(line: 688, column: 3, scope: !4069)
!4077 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !146, file: !146, line: 150, type: !4078, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4080)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!1355, !4063, !9}
!4080 = !{!4081, !4082}
!4081 = !DILocalVariable(name: "vec_", arg: 1, scope: !4077, file: !146, line: 150, type: !4063)
!4082 = !DILocalVariable(name: "ix_", arg: 2, scope: !4077, file: !146, line: 150, type: !9)
!4083 = !DILocation(line: 0, scope: !4077)
!4084 = !DILocation(line: 150, column: 1, scope: !4077)
!4085 = distinct !DISubprogram(name: "implicit_set_cond_p", scope: !3, file: !3, line: 2789, type: !3713, scopeLine: 2790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4086)
!4086 = !{!4087, !4088, !4090, !4091}
!4087 = !DILocalVariable(name: "cond", arg: 1, scope: !4085, file: !3, line: 2789, type: !2124)
!4088 = !DILocalVariable(name: "mode", scope: !4085, file: !3, line: 2791, type: !4089)
!4089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4090 = !DILocalVariable(name: "cst", scope: !4085, file: !3, line: 2792, type: !2124)
!4091 = !DILocalVariable(name: "d", scope: !4092, file: !3, line: 2805, type: !983)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 2804, column: 2)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 2803, column: 11)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 2797, column: 5)
!4095 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 2796, column: 7)
!4096 = !DILocation(line: 0, scope: !4085)
!4097 = !DILocation(line: 2791, column: 34, scope: !4085)
!4098 = !DILocation(line: 2792, column: 19, scope: !4085)
!4099 = !DILocation(line: 2796, column: 7, scope: !4095)
!4100 = !DILocation(line: 0, scope: !4095)
!4101 = !DILocation(line: 2803, column: 11, scope: !4093)
!4102 = !DILocation(line: 2803, column: 26, scope: !4093)
!4103 = !DILocation(line: 2803, column: 11, scope: !4094)
!4104 = !DILocation(line: 2805, column: 4, scope: !4092)
!4105 = !DILocation(line: 2806, column: 4, scope: !4092)
!4106 = !DILocation(line: 0, scope: !4092)
!4107 = !DILocation(line: 2807, column: 8, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 2807, column: 8)
!4109 = !DILocation(line: 2809, column: 2, scope: !4093)
!4110 = !DILocation(line: 2814, column: 10, scope: !4085)
!4111 = !DILocation(line: 2814, column: 3, scope: !4085)
!4112 = !DILocation(line: 2815, column: 1, scope: !4085)
!4113 = distinct !DISubprogram(name: "single_pred_p", scope: !146, file: !146, line: 634, type: !4114, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4119)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!6, !4116}
!4116 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !788, line: 112, baseType: !4117)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!4119 = !{!4120}
!4120 = !DILocalVariable(name: "bb", arg: 1, scope: !4113, file: !146, line: 634, type: !4116)
!4121 = !DILocation(line: 0, scope: !4113)
!4122 = !DILocation(line: 636, column: 10, scope: !4113)
!4123 = !DILocation(line: 636, column: 33, scope: !4113)
!4124 = !DILocation(line: 636, column: 3, scope: !4113)
!4125 = distinct !DISubprogram(name: "gmalloc", scope: !3, file: !3, line: 597, type: !4126, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4128)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!776, !1276}
!4128 = !{!4129}
!4129 = !DILocalVariable(name: "size", arg: 1, scope: !4125, file: !3, line: 597, type: !1276)
!4130 = !DILocation(line: 0, scope: !4125)
!4131 = !DILocation(line: 599, column: 14, scope: !4125)
!4132 = !DILocation(line: 600, column: 10, scope: !4125)
!4133 = !DILocation(line: 600, column: 3, scope: !4125)
!4134 = distinct !DISubprogram(name: "compute_hash_table_work", scope: !3, file: !3, line: 1652, type: !3110, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4135)
!4135 = !{!4136, !4137, !4138, !4142}
!4136 = !DILocalVariable(name: "table", arg: 1, scope: !4134, file: !3, line: 1652, type: !3089)
!4137 = !DILocalVariable(name: "i", scope: !4134, file: !3, line: 1654, type: !772)
!4138 = !DILocalVariable(name: "insn", scope: !4139, file: !3, line: 1666, type: !787)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 1665, column: 5)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 1664, column: 3)
!4141 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 1664, column: 3)
!4142 = !DILocalVariable(name: "regno", scope: !4139, file: !3, line: 1667, type: !9)
!4143 = !DILocation(line: 0, scope: !4134)
!4144 = !DILocation(line: 1657, column: 3, scope: !4134)
!4145 = !DILocation(line: 1659, column: 20, scope: !4134)
!4146 = !DILocation(line: 1659, column: 18, scope: !4134)
!4147 = !DILocation(line: 1661, column: 8, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 1661, column: 3)
!4149 = !DILocation(line: 0, scope: !4148)
!4150 = !DILocation(line: 1661, column: 19, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 1661, column: 3)
!4152 = !DILocation(line: 1661, column: 17, scope: !4151)
!4153 = !DILocation(line: 1661, column: 3, scope: !4148)
!4154 = !DILocation(line: 1662, column: 5, scope: !4151)
!4155 = !DILocation(line: 1662, column: 23, scope: !4151)
!4156 = !DILocation(line: 1662, column: 31, scope: !4151)
!4157 = !DILocation(line: 1661, column: 35, scope: !4151)
!4158 = !DILocation(line: 1661, column: 3, scope: !4151)
!4159 = distinct !{!4159, !4153, !4160}
!4160 = !DILocation(line: 1662, column: 33, scope: !4148)
!4161 = !DILocation(line: 1664, column: 3, scope: !4141)
!4162 = !DILocation(line: 0, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1689, column: 11)
!4164 = !DILocation(line: 1664, column: 3, scope: !4140)
!4165 = !DILocation(line: 0, scope: !4141)
!4166 = !DILocation(line: 1671, column: 7, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1671, column: 7)
!4168 = !DILocation(line: 0, scope: !4167)
!4169 = !DILocation(line: 0, scope: !4139)
!4170 = !DILocation(line: 1671, column: 7, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 1671, column: 7)
!4172 = !DILocation(line: 1673, column: 10, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 1673, column: 8)
!4174 = distinct !DILexicalBlock(scope: !4171, file: !3, line: 1672, column: 2)
!4175 = !DILocation(line: 1673, column: 8, scope: !4174)
!4176 = !DILocation(line: 1676, column: 8, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 1676, column: 8)
!4178 = !DILocation(line: 1676, column: 8, scope: !4174)
!4179 = !DILocation(line: 1678, column: 8, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !3, line: 1678, column: 8)
!4181 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1677, column: 6)
!4182 = !DILocation(line: 0, scope: !4180)
!4183 = !DILocation(line: 1678, column: 30, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 1678, column: 8)
!4185 = !DILocation(line: 1679, column: 7, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 1679, column: 7)
!4187 = !DILocation(line: 1679, column: 7, scope: !4184)
!4188 = !DILocation(line: 1680, column: 5, scope: !4186)
!4189 = !DILocation(line: 1678, column: 60, scope: !4184)
!4190 = !DILocation(line: 1678, column: 8, scope: !4184)
!4191 = distinct !{!4191, !4179, !4192}
!4192 = !DILocation(line: 1680, column: 42, scope: !4180)
!4193 = !DILocation(line: 1682, column: 8, scope: !4181)
!4194 = !DILocation(line: 1683, column: 6, scope: !4181)
!4195 = !DILocation(line: 1685, column: 17, scope: !4174)
!4196 = !DILocation(line: 1685, column: 55, scope: !4174)
!4197 = !DILocation(line: 1685, column: 4, scope: !4174)
!4198 = !DILocation(line: 1686, column: 2, scope: !4174)
!4199 = distinct !{!4199, !4166, !4200}
!4200 = !DILocation(line: 1686, column: 2, scope: !4167)
!4201 = !DILocation(line: 1689, column: 18, scope: !4163)
!4202 = !DILocation(line: 1689, column: 11, scope: !4163)
!4203 = !DILocation(line: 1690, column: 4, scope: !4163)
!4204 = !DILocation(line: 1690, column: 7, scope: !4163)
!4205 = !DILocation(line: 1690, column: 21, scope: !4163)
!4206 = !DILocation(line: 1690, column: 33, scope: !4163)
!4207 = !DILocation(line: 1690, column: 40, scope: !4163)
!4208 = !DILocation(line: 1689, column: 11, scope: !4139)
!4209 = !DILocation(line: 1692, column: 10, scope: !4163)
!4210 = !DILocation(line: 1691, column: 2, scope: !4163)
!4211 = !DILocation(line: 1695, column: 7, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1695, column: 7)
!4213 = !DILocation(line: 0, scope: !4212)
!4214 = !DILocation(line: 1695, column: 7, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1695, column: 7)
!4216 = !DILocation(line: 1696, column: 6, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1696, column: 6)
!4218 = !DILocation(line: 1696, column: 6, scope: !4215)
!4219 = !DILocation(line: 1697, column: 4, scope: !4217)
!4220 = distinct !{!4220, !4211, !4221}
!4221 = !DILocation(line: 1697, column: 31, scope: !4212)
!4222 = !DILocation(line: 0, scope: !4140)
!4223 = distinct !{!4223, !4161, !4224}
!4224 = !DILocation(line: 1698, column: 5, scope: !4141)
!4225 = !DILocation(line: 1700, column: 9, scope: !4134)
!4226 = !DILocation(line: 1700, column: 3, scope: !4134)
!4227 = !DILocation(line: 1701, column: 18, scope: !4134)
!4228 = !DILocation(line: 1702, column: 1, scope: !4134)
!4229 = distinct !DISubprogram(name: "clear_modify_mem_tables", scope: !3, file: !3, line: 1803, type: !2657, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4230)
!4230 = !{!4231, !4232}
!4231 = !DILocalVariable(name: "i", scope: !4229, file: !3, line: 1805, type: !9)
!4232 = !DILocalVariable(name: "bi", scope: !4229, file: !3, line: 1806, type: !4233)
!4233 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !864, line: 218, baseType: !4234)
!4234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !864, line: 203, size: 256, elements: !4235)
!4235 = !{!4236, !4237, !4238, !4239}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !4234, file: !864, line: 206, baseType: !867, size: 64)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !4234, file: !864, line: 209, baseType: !867, size: 64, offset: 64)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !4234, file: !864, line: 212, baseType: !9, size: 32, offset: 128)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4234, file: !864, line: 217, baseType: !877, size: 64, offset: 192)
!4240 = !DILocation(line: 1805, column: 3, scope: !4229)
!4241 = !DILocation(line: 1806, column: 3, scope: !4229)
!4242 = !DILocation(line: 1808, column: 3, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 1808, column: 3)
!4244 = !DILocation(line: 0, scope: !4229)
!4245 = !DILocation(line: 1808, column: 3, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1808, column: 3)
!4247 = !DILocation(line: 1810, column: 28, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 1809, column: 5)
!4249 = !DILocation(line: 1810, column: 46, scope: !4248)
!4250 = !DILocation(line: 1810, column: 44, scope: !4248)
!4251 = !DILocation(line: 1810, column: 7, scope: !4248)
!4252 = !DILocation(line: 1811, column: 33, scope: !4248)
!4253 = !DILocation(line: 1811, column: 57, scope: !4248)
!4254 = !DILocation(line: 1811, column: 55, scope: !4248)
!4255 = !DILocation(line: 1811, column: 7, scope: !4248)
!4256 = distinct !{!4256, !4242, !4257}
!4257 = !DILocation(line: 1812, column: 5, scope: !4243)
!4258 = !DILocation(line: 1813, column: 17, scope: !4229)
!4259 = !DILocation(line: 1813, column: 3, scope: !4229)
!4260 = !DILocation(line: 1814, column: 17, scope: !4229)
!4261 = !DILocation(line: 1814, column: 3, scope: !4229)
!4262 = !DILocation(line: 1815, column: 1, scope: !4229)
!4263 = distinct !DISubprogram(name: "record_last_reg_set_info", scope: !3, file: !3, line: 1540, type: !4264, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4266)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{null, !787, !772}
!4266 = !{!4267, !4268, !4269, !4270}
!4267 = !DILocalVariable(name: "insn", arg: 1, scope: !4263, file: !3, line: 1540, type: !787)
!4268 = !DILocalVariable(name: "regno", arg: 2, scope: !4263, file: !3, line: 1540, type: !772)
!4269 = !DILocalVariable(name: "info", scope: !4263, file: !3, line: 1542, type: !1993)
!4270 = !DILocalVariable(name: "luid", scope: !4263, file: !3, line: 1543, type: !772)
!4271 = !DILocation(line: 0, scope: !4263)
!4272 = !DILocation(line: 1542, column: 34, scope: !4263)
!4273 = !DILocation(line: 1543, column: 14, scope: !4263)
!4274 = !DILocation(line: 1545, column: 9, scope: !4263)
!4275 = !DILocation(line: 1545, column: 18, scope: !4263)
!4276 = !DILocation(line: 1546, column: 13, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 1546, column: 7)
!4278 = !DILocation(line: 1546, column: 24, scope: !4277)
!4279 = !DILocation(line: 1546, column: 21, scope: !4277)
!4280 = !DILocation(line: 1546, column: 7, scope: !4263)
!4281 = !DILocation(line: 1548, column: 21, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 1547, column: 5)
!4283 = !DILocation(line: 1549, column: 13, scope: !4282)
!4284 = !DILocation(line: 1549, column: 23, scope: !4282)
!4285 = !DILocation(line: 1550, column: 5, scope: !4282)
!4286 = !DILocation(line: 1551, column: 1, scope: !4263)
!4287 = distinct !DISubprogram(name: "mark_call", scope: !3, file: !3, line: 1913, type: !3344, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4288)
!4288 = !{!4289}
!4289 = !DILocalVariable(name: "insn", arg: 1, scope: !4287, file: !3, line: 1913, type: !787)
!4290 = !DILocation(line: 0, scope: !4287)
!4291 = !DILocation(line: 1915, column: 9, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 1915, column: 7)
!4293 = !DILocation(line: 1915, column: 7, scope: !4287)
!4294 = !DILocation(line: 1916, column: 5, scope: !4292)
!4295 = !DILocation(line: 1917, column: 1, scope: !4287)
!4296 = distinct !DISubprogram(name: "record_last_set_info", scope: !3, file: !3, line: 1620, type: !4297, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4299)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{null, !787, !2124, !776}
!4299 = !{!4300, !4301, !4302, !4303}
!4300 = !DILocalVariable(name: "dest", arg: 1, scope: !4296, file: !3, line: 1620, type: !787)
!4301 = !DILocalVariable(name: "setter", arg: 2, scope: !4296, file: !3, line: 1620, type: !2124)
!4302 = !DILocalVariable(name: "data", arg: 3, scope: !4296, file: !3, line: 1620, type: !776)
!4303 = !DILocalVariable(name: "last_set_insn", scope: !4296, file: !3, line: 1622, type: !787)
!4304 = !DILocation(line: 0, scope: !4296)
!4305 = !DILocation(line: 1622, column: 23, scope: !4296)
!4306 = !DILocation(line: 1624, column: 7, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 1624, column: 7)
!4308 = !DILocation(line: 1624, column: 23, scope: !4307)
!4309 = !DILocation(line: 1624, column: 7, scope: !4296)
!4310 = !DILocation(line: 1625, column: 12, scope: !4307)
!4311 = !DILocation(line: 0, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 1627, column: 7)
!4313 = !DILocation(line: 1627, column: 7, scope: !4312)
!4314 = !DILocation(line: 1625, column: 5, scope: !4307)
!4315 = !DILocation(line: 1627, column: 7, scope: !4296)
!4316 = !DILocation(line: 1628, column: 46, scope: !4312)
!4317 = !DILocation(line: 1628, column: 5, scope: !4312)
!4318 = !DILocation(line: 1629, column: 12, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 1629, column: 12)
!4320 = !DILocation(line: 1631, column: 5, scope: !4319)
!4321 = !DILocation(line: 1631, column: 30, scope: !4319)
!4322 = !DILocation(line: 1631, column: 10, scope: !4319)
!4323 = !DILocation(line: 1629, column: 12, scope: !4312)
!4324 = !DILocation(line: 1632, column: 5, scope: !4319)
!4325 = !DILocation(line: 1633, column: 1, scope: !4296)
!4326 = distinct !DISubprogram(name: "hash_scan_set", scope: !3, file: !3, line: 1297, type: !4327, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4329)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{null, !787, !787, !3089}
!4329 = !{!4330, !4331, !4332, !4333, !4334, !4335, !4336, !4340, !4341, !4344, !4345, !4348, !4351}
!4330 = !DILocalVariable(name: "pat", arg: 1, scope: !4326, file: !3, line: 1297, type: !787)
!4331 = !DILocalVariable(name: "insn", arg: 2, scope: !4326, file: !3, line: 1297, type: !787)
!4332 = !DILocalVariable(name: "table", arg: 3, scope: !4326, file: !3, line: 1297, type: !3089)
!4333 = !DILocalVariable(name: "src", scope: !4326, file: !3, line: 1299, type: !787)
!4334 = !DILocalVariable(name: "dest", scope: !4326, file: !3, line: 1300, type: !787)
!4335 = !DILocalVariable(name: "note", scope: !4326, file: !3, line: 1301, type: !787)
!4336 = !DILocalVariable(name: "regno", scope: !4337, file: !3, line: 1308, type: !9)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1307, column: 5)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 1306, column: 12)
!4339 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 1303, column: 7)
!4340 = !DILocalVariable(name: "tmp", scope: !4337, file: !3, line: 1309, type: !787)
!4341 = !DILocalVariable(name: "antic_p", scope: !4342, file: !3, line: 1362, type: !772)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 1356, column: 2)
!4343 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 1336, column: 11)
!4344 = !DILocalVariable(name: "avail_p", scope: !4342, file: !3, line: 1368, type: !772)
!4345 = !DILocalVariable(name: "regno", scope: !4346, file: !3, line: 1396, type: !9)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 1395, column: 7)
!4347 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1394, column: 12)
!4348 = !DILocalVariable(name: "antic_p", scope: !4349, file: !3, line: 1420, type: !772)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 1418, column: 14)
!4350 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1399, column: 13)
!4351 = !DILocalVariable(name: "avail_p", scope: !4349, file: !3, line: 1425, type: !772)
!4352 = !DILocation(line: 0, scope: !4326)
!4353 = !DILocation(line: 1299, column: 13, scope: !4326)
!4354 = !DILocation(line: 1300, column: 14, scope: !4326)
!4355 = !DILocation(line: 1303, column: 7, scope: !4339)
!4356 = !DILocation(line: 1303, column: 22, scope: !4339)
!4357 = !DILocation(line: 1303, column: 7, scope: !4326)
!4358 = !DILocation(line: 1304, column: 5, scope: !4339)
!4359 = !DILocation(line: 1306, column: 12, scope: !4338)
!4360 = !DILocation(line: 1306, column: 12, scope: !4339)
!4361 = !DILocation(line: 1308, column: 28, scope: !4337)
!4362 = !DILocation(line: 0, scope: !4337)
!4363 = !DILocation(line: 1326, column: 14, scope: !4337)
!4364 = !DILocation(line: 1327, column: 16, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 1327, column: 11)
!4366 = !DILocation(line: 1328, column: 4, scope: !4365)
!4367 = !DILocation(line: 1328, column: 7, scope: !4365)
!4368 = !DILocation(line: 1328, column: 28, scope: !4365)
!4369 = !DILocation(line: 1329, column: 4, scope: !4365)
!4370 = !DILocation(line: 1329, column: 8, scope: !4365)
!4371 = !DILocation(line: 1330, column: 4, scope: !4365)
!4372 = !DILocation(line: 1330, column: 15, scope: !4365)
!4373 = !DILocation(line: 1330, column: 8, scope: !4365)
!4374 = !DILocation(line: 0, scope: !4365)
!4375 = !DILocation(line: 1327, column: 11, scope: !4337)
!4376 = !DILocation(line: 1331, column: 10, scope: !4365)
!4377 = !DILocation(line: 1332, column: 10, scope: !4365)
!4378 = !DILocation(line: 1333, column: 8, scope: !4365)
!4379 = !DILocation(line: 1333, column: 30, scope: !4365)
!4380 = !DILocation(line: 1333, column: 2, scope: !4365)
!4381 = !DILocation(line: 1336, column: 20, scope: !4343)
!4382 = !DILocation(line: 1336, column: 13, scope: !4343)
!4383 = !DILocation(line: 1337, column: 13, scope: !4343)
!4384 = !DILocation(line: 1337, column: 4, scope: !4343)
!4385 = !DILocation(line: 1339, column: 19, scope: !4343)
!4386 = !DILocation(line: 1339, column: 7, scope: !4343)
!4387 = !DILocation(line: 1345, column: 4, scope: !4343)
!4388 = !DILocation(line: 1345, column: 8, scope: !4343)
!4389 = !DILocation(line: 1347, column: 4, scope: !4343)
!4390 = !DILocation(line: 1347, column: 7, scope: !4343)
!4391 = !DILocation(line: 1349, column: 4, scope: !4343)
!4392 = !DILocation(line: 1349, column: 9, scope: !4343)
!4393 = !DILocation(line: 1355, column: 4, scope: !4343)
!4394 = !DILocation(line: 1355, column: 25, scope: !4343)
!4395 = !DILocation(line: 1355, column: 30, scope: !4343)
!4396 = !DILocation(line: 1336, column: 11, scope: !4337)
!4397 = !DILocation(line: 1362, column: 18, scope: !4342)
!4398 = !DILocation(line: 1363, column: 4, scope: !4342)
!4399 = !DILocation(line: 1363, column: 8, scope: !4342)
!4400 = !DILocation(line: 1363, column: 7, scope: !4342)
!4401 = !DILocation(line: 0, scope: !4342)
!4402 = !DILocation(line: 1368, column: 19, scope: !4342)
!4403 = !DILocation(line: 1369, column: 5, scope: !4342)
!4404 = !DILocation(line: 1369, column: 10, scope: !4342)
!4405 = !DILocation(line: 1371, column: 31, scope: !4342)
!4406 = !DILocation(line: 1371, column: 4, scope: !4342)
!4407 = !DILocation(line: 1372, column: 2, scope: !4342)
!4408 = !DILocation(line: 1375, column: 23, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 1375, column: 16)
!4410 = !DILocation(line: 1375, column: 16, scope: !4409)
!4411 = !DILocation(line: 1376, column: 9, scope: !4409)
!4412 = !DILocation(line: 1377, column: 14, scope: !4409)
!4413 = !DILocation(line: 1378, column: 7, scope: !4409)
!4414 = !DILocation(line: 1378, column: 10, scope: !4409)
!4415 = !DILocation(line: 1378, column: 22, scope: !4409)
!4416 = !DILocation(line: 1379, column: 7, scope: !4409)
!4417 = !DILocation(line: 1379, column: 22, scope: !4409)
!4418 = !DILocation(line: 1379, column: 10, scope: !4409)
!4419 = !DILocation(line: 1380, column: 7, scope: !4409)
!4420 = !DILocation(line: 1380, column: 10, scope: !4409)
!4421 = !DILocation(line: 1380, column: 22, scope: !4409)
!4422 = !DILocation(line: 1381, column: 6, scope: !4409)
!4423 = !DILocation(line: 1381, column: 9, scope: !4409)
!4424 = !DILocation(line: 1385, column: 9, scope: !4409)
!4425 = !DILocation(line: 1385, column: 21, scope: !4409)
!4426 = !DILocation(line: 1385, column: 18, scope: !4409)
!4427 = !DILocation(line: 1386, column: 6, scope: !4409)
!4428 = !DILocation(line: 1386, column: 16, scope: !4409)
!4429 = !DILocation(line: 1386, column: 42, scope: !4409)
!4430 = !DILocation(line: 1387, column: 6, scope: !4409)
!4431 = !DILocation(line: 1387, column: 9, scope: !4409)
!4432 = !DILocation(line: 1387, column: 33, scope: !4409)
!4433 = !DILocation(line: 1387, column: 30, scope: !4409)
!4434 = !DILocation(line: 1388, column: 6, scope: !4409)
!4435 = !DILocation(line: 1388, column: 9, scope: !4409)
!4436 = !DILocation(line: 1375, column: 16, scope: !4343)
!4437 = !DILocation(line: 1389, column: 2, scope: !4409)
!4438 = !DILocation(line: 1394, column: 12, scope: !4347)
!4439 = !DILocation(line: 1394, column: 26, scope: !4347)
!4440 = !DILocation(line: 1394, column: 29, scope: !4347)
!4441 = !DILocation(line: 1394, column: 41, scope: !4347)
!4442 = !DILocation(line: 1394, column: 44, scope: !4347)
!4443 = !DILocation(line: 1394, column: 12, scope: !4338)
!4444 = !DILocation(line: 1396, column: 30, scope: !4346)
!4445 = !DILocation(line: 0, scope: !4346)
!4446 = !DILocation(line: 1399, column: 22, scope: !4350)
!4447 = !DILocation(line: 1399, column: 15, scope: !4350)
!4448 = !DILocation(line: 1401, column: 15, scope: !4350)
!4449 = !DILocation(line: 1401, column: 6, scope: !4350)
!4450 = !DILocation(line: 1403, column: 20, scope: !4350)
!4451 = !DILocation(line: 1403, column: 8, scope: !4350)
!4452 = !DILocation(line: 1406, column: 5, scope: !4350)
!4453 = !DILocation(line: 1406, column: 9, scope: !4350)
!4454 = !DILocation(line: 1408, column: 5, scope: !4350)
!4455 = !DILocation(line: 1408, column: 8, scope: !4350)
!4456 = !DILocation(line: 1410, column: 5, scope: !4350)
!4457 = !DILocation(line: 1410, column: 10, scope: !4350)
!4458 = !DILocation(line: 1416, column: 5, scope: !4350)
!4459 = !DILocation(line: 1416, column: 17, scope: !4350)
!4460 = !DILocation(line: 1416, column: 60, scope: !4350)
!4461 = !DILocation(line: 1417, column: 9, scope: !4350)
!4462 = !DILocation(line: 1417, column: 14, scope: !4350)
!4463 = !DILocation(line: 1399, column: 13, scope: !4346)
!4464 = !DILocation(line: 0, scope: !4349)
!4465 = !DILocation(line: 1425, column: 30, scope: !4349)
!4466 = !DILocation(line: 1426, column: 9, scope: !4349)
!4467 = !DILocation(line: 1426, column: 14, scope: !4349)
!4468 = !DILocation(line: 1429, column: 37, scope: !4349)
!4469 = !DILocation(line: 1429, column: 9, scope: !4349)
!4470 = !DILocation(line: 1431, column: 14, scope: !4349)
!4471 = !DILocation(line: 1433, column: 1, scope: !4326)
!4472 = distinct !DISubprogram(name: "hash_scan_insn", scope: !3, file: !3, line: 1461, type: !4473, scopeLine: 1462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4475)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{null, !787, !3089}
!4475 = !{!4476, !4477, !4478, !4479, !4480}
!4476 = !DILocalVariable(name: "insn", arg: 1, scope: !4472, file: !3, line: 1461, type: !787)
!4477 = !DILocalVariable(name: "table", arg: 2, scope: !4472, file: !3, line: 1461, type: !3089)
!4478 = !DILocalVariable(name: "pat", scope: !4472, file: !3, line: 1463, type: !787)
!4479 = !DILocalVariable(name: "i", scope: !4472, file: !3, line: 1464, type: !772)
!4480 = !DILocalVariable(name: "x", scope: !4481, file: !3, line: 1474, type: !787)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 1473, column: 7)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 1472, column: 5)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1472, column: 5)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 1471, column: 12)
!4485 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 1469, column: 7)
!4486 = !DILocation(line: 0, scope: !4472)
!4487 = !DILocation(line: 1463, column: 13, scope: !4472)
!4488 = !DILocation(line: 1469, column: 7, scope: !4485)
!4489 = !DILocation(line: 1469, column: 22, scope: !4485)
!4490 = !DILocation(line: 1469, column: 7, scope: !4472)
!4491 = !DILocation(line: 1470, column: 5, scope: !4485)
!4492 = !DILocation(line: 1471, column: 27, scope: !4484)
!4493 = !DILocation(line: 1471, column: 12, scope: !4485)
!4494 = !DILocation(line: 0, scope: !4482)
!4495 = !DILocation(line: 1472, column: 5, scope: !4483)
!4496 = !DILocation(line: 0, scope: !4483)
!4497 = !DILocation(line: 1472, column: 21, scope: !4482)
!4498 = !DILocation(line: 1472, column: 19, scope: !4482)
!4499 = !DILocation(line: 1474, column: 10, scope: !4481)
!4500 = !DILocation(line: 0, scope: !4481)
!4501 = !DILocation(line: 1476, column: 6, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4481, file: !3, line: 1476, column: 6)
!4503 = !DILocation(line: 1476, column: 19, scope: !4502)
!4504 = !DILocation(line: 1476, column: 6, scope: !4481)
!4505 = !DILocation(line: 1477, column: 4, scope: !4502)
!4506 = !DILocation(line: 1478, column: 24, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 1478, column: 11)
!4508 = !DILocation(line: 1478, column: 11, scope: !4502)
!4509 = !DILocation(line: 1479, column: 4, scope: !4507)
!4510 = !DILocation(line: 1480, column: 24, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 1480, column: 11)
!4512 = !DILocation(line: 1480, column: 11, scope: !4507)
!4513 = !DILocation(line: 1481, column: 4, scope: !4511)
!4514 = !DILocation(line: 1472, column: 40, scope: !4482)
!4515 = !DILocation(line: 1472, column: 5, scope: !4482)
!4516 = distinct !{!4516, !4495, !4517}
!4517 = !DILocation(line: 1482, column: 7, scope: !4483)
!4518 = !DILocation(line: 1484, column: 27, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1484, column: 12)
!4520 = !DILocation(line: 1484, column: 12, scope: !4484)
!4521 = !DILocation(line: 1485, column: 5, scope: !4519)
!4522 = !DILocation(line: 1486, column: 27, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 1486, column: 12)
!4524 = !DILocation(line: 1486, column: 12, scope: !4519)
!4525 = !DILocation(line: 1487, column: 5, scope: !4523)
!4526 = !DILocation(line: 1488, column: 1, scope: !4472)
!4527 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !864, file: !864, line: 224, type: !4528, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4534)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{null, !4530, !4531, !9, !2014}
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !788, line: 48, baseType: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !863)
!4534 = !{!4535, !4536, !4537, !4538}
!4535 = !DILocalVariable(name: "bi", arg: 1, scope: !4527, file: !864, line: 224, type: !4530)
!4536 = !DILocalVariable(name: "map", arg: 2, scope: !4527, file: !864, line: 224, type: !4531)
!4537 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4527, file: !864, line: 225, type: !9)
!4538 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4527, file: !864, line: 225, type: !2014)
!4539 = !DILocation(line: 0, scope: !4527)
!4540 = !DILocation(line: 227, column: 19, scope: !4527)
!4541 = !DILocation(line: 227, column: 12, scope: !4527)
!4542 = !DILocation(line: 228, column: 7, scope: !4527)
!4543 = !DILocation(line: 228, column: 12, scope: !4527)
!4544 = !DILocation(line: 0, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !864, line: 233, column: 11)
!4546 = distinct !DILexicalBlock(scope: !4527, file: !864, line: 232, column: 5)
!4547 = !DILocation(line: 231, column: 3, scope: !4527)
!4548 = !DILocation(line: 233, column: 12, scope: !4545)
!4549 = !DILocation(line: 233, column: 11, scope: !4546)
!4550 = !DILocation(line: 235, column: 13, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4545, file: !864, line: 234, column: 2)
!4552 = !DILocation(line: 236, column: 4, scope: !4551)
!4553 = !DILocation(line: 239, column: 11, scope: !4546)
!4554 = distinct !{!4554, !4547, !4555}
!4555 = !DILocation(line: 242, column: 5, scope: !4527)
!4556 = !DILocation(line: 245, column: 11, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4527, file: !864, line: 245, column: 7)
!4558 = !DILocation(line: 245, column: 17, scope: !4557)
!4559 = !DILocation(line: 245, column: 22, scope: !4557)
!4560 = !DILocation(line: 245, column: 7, scope: !4527)
!4561 = !DILocation(line: 246, column: 27, scope: !4557)
!4562 = !DILocation(line: 246, column: 32, scope: !4557)
!4563 = !DILocation(line: 246, column: 5, scope: !4557)
!4564 = !DILocation(line: 249, column: 7, scope: !4527)
!4565 = !DILocation(line: 249, column: 15, scope: !4527)
!4566 = !DILocation(line: 250, column: 14, scope: !4527)
!4567 = !DILocation(line: 251, column: 7, scope: !4527)
!4568 = !DILocation(line: 251, column: 12, scope: !4527)
!4569 = !DILocation(line: 257, column: 16, scope: !4527)
!4570 = !DILocation(line: 257, column: 13, scope: !4527)
!4571 = !DILocation(line: 259, column: 11, scope: !4527)
!4572 = !DILocation(line: 260, column: 1, scope: !4527)
!4573 = distinct !DISubprogram(name: "bmp_iter_set", scope: !864, file: !864, line: 393, type: !4574, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4576)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{!6, !4530, !2014}
!4576 = !{!4577, !4578, !4579}
!4577 = !DILocalVariable(name: "bi", arg: 1, scope: !4573, file: !864, line: 393, type: !4530)
!4578 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4573, file: !864, line: 393, type: !2014)
!4579 = !DILabel(scope: !4580, name: "next_bit", file: !864, line: 398)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !864, line: 397, column: 5)
!4581 = distinct !DILexicalBlock(scope: !4573, file: !864, line: 396, column: 7)
!4582 = !DILocation(line: 0, scope: !4573)
!4583 = !DILocation(line: 396, column: 11, scope: !4581)
!4584 = !DILocation(line: 396, column: 7, scope: !4581)
!4585 = !DILocation(line: 396, column: 7, scope: !4573)
!4586 = !DILocation(line: 419, column: 15, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !864, line: 418, column: 2)
!4588 = distinct !DILexicalBlock(scope: !4573, file: !864, line: 415, column: 5)
!4589 = !DILocation(line: 399, column: 7, scope: !4580)
!4590 = !DILocation(line: 398, column: 5, scope: !4580)
!4591 = !DILocation(line: 399, column: 20, scope: !4580)
!4592 = !DILocation(line: 399, column: 25, scope: !4580)
!4593 = !DILocation(line: 399, column: 14, scope: !4580)
!4594 = !DILocation(line: 401, column: 13, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4580, file: !864, line: 400, column: 2)
!4596 = !DILocation(line: 402, column: 12, scope: !4595)
!4597 = distinct !{!4597, !4589, !4598}
!4598 = !DILocation(line: 403, column: 2, scope: !4580)
!4599 = !DILocation(line: 410, column: 15, scope: !4573)
!4600 = !DILocation(line: 410, column: 42, scope: !4573)
!4601 = !DILocation(line: 411, column: 26, scope: !4573)
!4602 = !DILocation(line: 410, column: 11, scope: !4573)
!4603 = !DILocation(line: 412, column: 7, scope: !4573)
!4604 = !DILocation(line: 412, column: 14, scope: !4573)
!4605 = !DILocation(line: 0, scope: !4588)
!4606 = !DILocation(line: 414, column: 3, scope: !4573)
!4607 = !DILocation(line: 417, column: 7, scope: !4588)
!4608 = !DILocation(line: 417, column: 18, scope: !4588)
!4609 = !DILocation(line: 417, column: 26, scope: !4588)
!4610 = !DILocation(line: 419, column: 13, scope: !4587)
!4611 = !DILocation(line: 420, column: 8, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4587, file: !864, line: 420, column: 8)
!4613 = !DILocation(line: 420, column: 8, scope: !4587)
!4614 = !DILocation(line: 422, column: 12, scope: !4587)
!4615 = !DILocation(line: 423, column: 15, scope: !4587)
!4616 = distinct !{!4616, !4607, !4617}
!4617 = !DILocation(line: 424, column: 2, scope: !4588)
!4618 = !DILocation(line: 427, column: 28, scope: !4588)
!4619 = !DILocation(line: 427, column: 16, scope: !4588)
!4620 = !DILocation(line: 428, column: 12, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4588, file: !864, line: 428, column: 11)
!4622 = !DILocation(line: 428, column: 11, scope: !4588)
!4623 = !DILocation(line: 430, column: 27, scope: !4588)
!4624 = !DILocation(line: 430, column: 32, scope: !4588)
!4625 = !DILocation(line: 430, column: 15, scope: !4588)
!4626 = !DILocation(line: 431, column: 19, scope: !4588)
!4627 = distinct !{!4627, !4606, !4628}
!4628 = !DILocation(line: 432, column: 5, scope: !4573)
!4629 = !DILocation(line: 433, column: 1, scope: !4573)
!4630 = distinct !DISubprogram(name: "free_insn_expr_list_list", scope: !3, file: !3, line: 1785, type: !4631, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4633)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{null, !786}
!4633 = !{!4634, !4635, !4636}
!4634 = !DILocalVariable(name: "listp", arg: 1, scope: !4630, file: !3, line: 1785, type: !786)
!4635 = !DILocalVariable(name: "list", scope: !4630, file: !3, line: 1787, type: !787)
!4636 = !DILocalVariable(name: "next", scope: !4630, file: !3, line: 1787, type: !787)
!4637 = !DILocation(line: 0, scope: !4630)
!4638 = !DILocation(line: 1789, column: 15, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 1789, column: 3)
!4640 = !DILocation(line: 1789, column: 8, scope: !4639)
!4641 = !DILocation(line: 0, scope: !4639)
!4642 = !DILocation(line: 1789, column: 3, scope: !4639)
!4643 = !DILocation(line: 1791, column: 14, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1790, column: 5)
!4645 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 1789, column: 3)
!4646 = !DILocation(line: 1792, column: 11, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 1792, column: 11)
!4648 = !DILocation(line: 1792, column: 27, scope: !4647)
!4649 = !DILocation(line: 1792, column: 11, scope: !4644)
!4650 = !DILocation(line: 1793, column: 2, scope: !4647)
!4651 = !DILocation(line: 1795, column: 2, scope: !4647)
!4652 = !DILocation(line: 1789, column: 3, scope: !4645)
!4653 = distinct !{!4653, !4642, !4654}
!4654 = !DILocation(line: 1796, column: 5, scope: !4639)
!4655 = !DILocation(line: 1798, column: 10, scope: !4630)
!4656 = !DILocation(line: 1799, column: 1, scope: !4630)
!4657 = distinct !DISubprogram(name: "bmp_iter_next", scope: !864, file: !864, line: 382, type: !4658, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4660)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{null, !4530, !2014}
!4660 = !{!4661, !4662}
!4661 = !DILocalVariable(name: "bi", arg: 1, scope: !4657, file: !864, line: 382, type: !4530)
!4662 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4657, file: !864, line: 382, type: !2014)
!4663 = !DILocation(line: 0, scope: !4657)
!4664 = !DILocation(line: 384, column: 7, scope: !4657)
!4665 = !DILocation(line: 384, column: 12, scope: !4657)
!4666 = !DILocation(line: 385, column: 11, scope: !4657)
!4667 = !DILocation(line: 386, column: 1, scope: !4657)
!4668 = distinct !DISubprogram(name: "record_last_mem_set_info", scope: !3, file: !3, line: 1593, type: !3344, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4669)
!4669 = !{!4670, !4671}
!4670 = !DILocalVariable(name: "insn", arg: 1, scope: !4668, file: !3, line: 1593, type: !787)
!4671 = !DILocalVariable(name: "bb", scope: !4668, file: !3, line: 1595, type: !772)
!4672 = !DILocation(line: 0, scope: !4668)
!4673 = !DILocation(line: 1595, column: 12, scope: !4668)
!4674 = !DILocation(line: 1595, column: 35, scope: !4668)
!4675 = !DILocation(line: 1599, column: 48, scope: !4668)
!4676 = !DILocation(line: 1599, column: 25, scope: !4668)
!4677 = !DILocation(line: 1599, column: 3, scope: !4668)
!4678 = !DILocation(line: 1599, column: 23, scope: !4668)
!4679 = !DILocation(line: 1600, column: 19, scope: !4668)
!4680 = !DILocation(line: 1600, column: 3, scope: !4668)
!4681 = !DILocation(line: 1602, column: 7, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 1602, column: 7)
!4683 = !DILocation(line: 1602, column: 7, scope: !4668)
!4684 = !DILocation(line: 1608, column: 25, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 1603, column: 5)
!4686 = !DILocation(line: 1608, column: 2, scope: !4685)
!4687 = !DILocation(line: 1607, column: 7, scope: !4685)
!4688 = !DILocation(line: 1607, column: 33, scope: !4685)
!4689 = !DILocation(line: 1609, column: 23, scope: !4685)
!4690 = !DILocation(line: 1609, column: 7, scope: !4685)
!4691 = !DILocation(line: 1610, column: 5, scope: !4685)
!4692 = !DILocation(line: 1612, column: 18, scope: !4682)
!4693 = !DILocation(line: 1612, column: 53, scope: !4682)
!4694 = !DILocation(line: 1612, column: 5, scope: !4682)
!4695 = !DILocation(line: 1613, column: 1, scope: !4668)
!4696 = distinct !DISubprogram(name: "canon_list_insert", scope: !3, file: !3, line: 1559, type: !4297, scopeLine: 1561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4697)
!4697 = !{!4698, !4699, !4700, !4701, !4702, !4703}
!4698 = !DILocalVariable(name: "dest", arg: 1, scope: !4696, file: !3, line: 1559, type: !787)
!4699 = !DILocalVariable(name: "unused1", arg: 2, scope: !4696, file: !3, line: 1559, type: !2124)
!4700 = !DILocalVariable(name: "v_insn", arg: 3, scope: !4696, file: !3, line: 1560, type: !776)
!4701 = !DILocalVariable(name: "dest_addr", scope: !4696, file: !3, line: 1562, type: !787)
!4702 = !DILocalVariable(name: "insn", scope: !4696, file: !3, line: 1562, type: !787)
!4703 = !DILocalVariable(name: "bb", scope: !4696, file: !3, line: 1563, type: !772)
!4704 = !DILocation(line: 0, scope: !4696)
!4705 = !DILocation(line: 1565, column: 3, scope: !4696)
!4706 = !DILocation(line: 1565, column: 10, scope: !4696)
!4707 = !DILocation(line: 1565, column: 26, scope: !4696)
!4708 = !DILocation(line: 1566, column: 7, scope: !4696)
!4709 = !DILocation(line: 1566, column: 26, scope: !4696)
!4710 = !DILocation(line: 1567, column: 26, scope: !4696)
!4711 = !DILocation(line: 1567, column: 7, scope: !4696)
!4712 = !DILocation(line: 1568, column: 12, scope: !4696)
!4713 = distinct !{!4713, !4705, !4712}
!4714 = !DILocation(line: 1574, column: 9, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 1574, column: 7)
!4716 = !DILocation(line: 1574, column: 7, scope: !4696)
!4717 = !DILocation(line: 1577, column: 25, scope: !4696)
!4718 = !DILocation(line: 1577, column: 15, scope: !4696)
!4719 = !DILocation(line: 1578, column: 15, scope: !4696)
!4720 = !DILocation(line: 1580, column: 8, scope: !4696)
!4721 = !DILocation(line: 1580, column: 31, scope: !4696)
!4722 = !DILocation(line: 1583, column: 43, scope: !4696)
!4723 = !DILocation(line: 1583, column: 5, scope: !4696)
!4724 = !DILocation(line: 1582, column: 3, scope: !4696)
!4725 = !DILocation(line: 1582, column: 29, scope: !4696)
!4726 = !DILocation(line: 1585, column: 38, scope: !4696)
!4727 = !DILocation(line: 1585, column: 5, scope: !4696)
!4728 = !DILocation(line: 1584, column: 3, scope: !4696)
!4729 = !DILocation(line: 1584, column: 29, scope: !4696)
!4730 = !DILocation(line: 1586, column: 1, scope: !4696)
!4731 = distinct !DISubprogram(name: "hash_scan_call", scope: !3, file: !3, line: 1443, type: !4327, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4732)
!4732 = !{!4733, !4734, !4735}
!4733 = !DILocalVariable(name: "x", arg: 1, scope: !4731, file: !3, line: 1443, type: !787)
!4734 = !DILocalVariable(name: "insn", arg: 2, scope: !4731, file: !3, line: 1443, type: !787)
!4735 = !DILocalVariable(name: "table", arg: 3, scope: !4731, file: !3, line: 1444, type: !3089)
!4736 = !DILocation(line: 0, scope: !4731)
!4737 = !DILocation(line: 1447, column: 1, scope: !4731)
!4738 = distinct !DISubprogram(name: "want_to_gcse_p", scope: !3, file: !3, line: 758, type: !3229, scopeLine: 759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4739)
!4739 = !{!4740}
!4740 = !DILocalVariable(name: "x", arg: 1, scope: !4738, file: !3, line: 758, type: !787)
!4741 = !DILocation(line: 0, scope: !4738)
!4742 = !DILocation(line: 764, column: 7, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 764, column: 7)
!4744 = !DILocation(line: 764, column: 7, scope: !4738)
!4745 = !DILocation(line: 765, column: 9, scope: !4743)
!4746 = !DILocation(line: 768, column: 11, scope: !4738)
!4747 = !DILocation(line: 765, column: 5, scope: !4743)
!4748 = !DILocation(line: 768, column: 3, scope: !4738)
!4749 = !DILocation(line: 780, column: 14, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 769, column: 5)
!4751 = !DILocation(line: 780, column: 7, scope: !4750)
!4752 = !DILocation(line: 0, scope: !4750)
!4753 = !DILocation(line: 782, column: 1, scope: !4738)
!4754 = distinct !DISubprogram(name: "oprs_anticipatable_p", scope: !3, file: !3, line: 1027, type: !4755, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4757)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!772, !2124, !2124}
!4757 = !{!4758, !4759}
!4758 = !DILocalVariable(name: "x", arg: 1, scope: !4754, file: !3, line: 1027, type: !2124)
!4759 = !DILocalVariable(name: "insn", arg: 2, scope: !4754, file: !3, line: 1027, type: !2124)
!4760 = !DILocation(line: 0, scope: !4754)
!4761 = !DILocation(line: 1029, column: 10, scope: !4754)
!4762 = !DILocation(line: 1029, column: 3, scope: !4754)
!4763 = distinct !DISubprogram(name: "oprs_available_p", scope: !3, file: !3, line: 1036, type: !4755, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4764)
!4764 = !{!4765, !4766}
!4765 = !DILocalVariable(name: "x", arg: 1, scope: !4763, file: !3, line: 1036, type: !2124)
!4766 = !DILocalVariable(name: "insn", arg: 2, scope: !4763, file: !3, line: 1036, type: !2124)
!4767 = !DILocation(line: 0, scope: !4763)
!4768 = !DILocation(line: 1038, column: 10, scope: !4763)
!4769 = !DILocation(line: 1038, column: 3, scope: !4763)
!4770 = distinct !DISubprogram(name: "insert_expr_in_table", scope: !3, file: !3, line: 1096, type: !4771, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4773)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{null, !787, !7, !787, !772, !772, !3089}
!4773 = !{!4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786}
!4774 = !DILocalVariable(name: "x", arg: 1, scope: !4770, file: !3, line: 1096, type: !787)
!4775 = !DILocalVariable(name: "mode", arg: 2, scope: !4770, file: !3, line: 1096, type: !7)
!4776 = !DILocalVariable(name: "insn", arg: 3, scope: !4770, file: !3, line: 1096, type: !787)
!4777 = !DILocalVariable(name: "antic_p", arg: 4, scope: !4770, file: !3, line: 1096, type: !772)
!4778 = !DILocalVariable(name: "avail_p", arg: 5, scope: !4770, file: !3, line: 1097, type: !772)
!4779 = !DILocalVariable(name: "table", arg: 6, scope: !4770, file: !3, line: 1097, type: !3089)
!4780 = !DILocalVariable(name: "found", scope: !4770, file: !3, line: 1099, type: !772)
!4781 = !DILocalVariable(name: "do_not_record_p", scope: !4770, file: !3, line: 1099, type: !772)
!4782 = !DILocalVariable(name: "hash", scope: !4770, file: !3, line: 1100, type: !9)
!4783 = !DILocalVariable(name: "cur_expr", scope: !4770, file: !3, line: 1101, type: !1977)
!4784 = !DILocalVariable(name: "last_expr", scope: !4770, file: !3, line: 1101, type: !1977)
!4785 = !DILocalVariable(name: "antic_occr", scope: !4770, file: !3, line: 1102, type: !1984)
!4786 = !DILocalVariable(name: "avail_occr", scope: !4770, file: !3, line: 1102, type: !1984)
!4787 = !DILocation(line: 0, scope: !4770)
!4788 = !DILocation(line: 1099, column: 3, scope: !4770)
!4789 = !DILocation(line: 1104, column: 55, scope: !4770)
!4790 = !DILocation(line: 1104, column: 10, scope: !4770)
!4791 = !DILocation(line: 1109, column: 7, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 1109, column: 7)
!4793 = !DILocation(line: 1109, column: 7, scope: !4770)
!4794 = !DILocation(line: 1112, column: 21, scope: !4770)
!4795 = !DILocation(line: 1112, column: 14, scope: !4770)
!4796 = !DILocation(line: 1115, column: 3, scope: !4770)
!4797 = !DILocation(line: 1115, column: 10, scope: !4770)
!4798 = !DILocation(line: 1115, column: 19, scope: !4770)
!4799 = !DILocation(line: 1115, column: 60, scope: !4770)
!4800 = !DILocation(line: 1115, column: 36, scope: !4770)
!4801 = !DILocation(line: 1115, column: 24, scope: !4770)
!4802 = !DILocation(line: 1120, column: 28, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 1116, column: 5)
!4804 = distinct !{!4804, !4796, !4805}
!4805 = !DILocation(line: 1121, column: 5, scope: !4770)
!4806 = !DILocation(line: 1123, column: 9, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 1123, column: 7)
!4808 = !DILocation(line: 1123, column: 7, scope: !4770)
!4809 = !DILocation(line: 1125, column: 18, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 1124, column: 5)
!4811 = !DILocation(line: 1126, column: 18, scope: !4810)
!4812 = !DILocation(line: 1127, column: 18, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 1127, column: 11)
!4814 = !DILocation(line: 1127, column: 11, scope: !4813)
!4815 = !DILocation(line: 1127, column: 30, scope: !4813)
!4816 = !DILocation(line: 1127, column: 11, scope: !4810)
!4817 = !DILocation(line: 1129, column: 21, scope: !4813)
!4818 = !DILocation(line: 1129, column: 2, scope: !4813)
!4819 = !DILocation(line: 1132, column: 13, scope: !4813)
!4820 = !DILocation(line: 1132, column: 28, scope: !4813)
!4821 = !DILocation(line: 1135, column: 17, scope: !4810)
!4822 = !DILocation(line: 1135, column: 22, scope: !4810)
!4823 = !DILocation(line: 1136, column: 39, scope: !4810)
!4824 = !DILocation(line: 1136, column: 46, scope: !4810)
!4825 = !DILocation(line: 1136, column: 17, scope: !4810)
!4826 = !DILocation(line: 1136, column: 30, scope: !4810)
!4827 = !DILocation(line: 1137, column: 17, scope: !4810)
!4828 = !DILocation(line: 1137, column: 32, scope: !4810)
!4829 = !DILocation(line: 1138, column: 17, scope: !4810)
!4830 = !DILocation(line: 1138, column: 28, scope: !4810)
!4831 = !DILocation(line: 1139, column: 17, scope: !4810)
!4832 = !DILocation(line: 1139, column: 28, scope: !4810)
!4833 = !DILocation(line: 1140, column: 5, scope: !4810)
!4834 = !DILocation(line: 1143, column: 7, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 1143, column: 7)
!4836 = !DILocation(line: 1143, column: 7, scope: !4770)
!4837 = !DILocation(line: 1145, column: 30, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 1144, column: 5)
!4839 = !DILocation(line: 1147, column: 11, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 1147, column: 11)
!4841 = !DILocation(line: 1148, column: 4, scope: !4840)
!4842 = !DILocation(line: 1148, column: 7, scope: !4840)
!4843 = !DILocation(line: 1148, column: 44, scope: !4840)
!4844 = !DILocation(line: 1148, column: 41, scope: !4840)
!4845 = !DILocation(line: 1147, column: 11, scope: !4838)
!4846 = !DILocation(line: 1151, column: 11, scope: !4838)
!4847 = !DILocation(line: 1159, column: 17, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 1157, column: 2)
!4849 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 1151, column: 11)
!4850 = !DILocation(line: 1160, column: 15, scope: !4848)
!4851 = !DILocation(line: 1161, column: 16, scope: !4848)
!4852 = !DILocation(line: 1161, column: 21, scope: !4848)
!4853 = !DILocation(line: 1162, column: 33, scope: !4848)
!4854 = !DILocation(line: 1162, column: 21, scope: !4848)
!4855 = !DILocation(line: 1163, column: 16, scope: !4848)
!4856 = !DILocation(line: 1163, column: 26, scope: !4848)
!4857 = !DILocation(line: 1164, column: 25, scope: !4848)
!4858 = !DILocation(line: 1168, column: 7, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 1168, column: 7)
!4860 = !DILocation(line: 1168, column: 7, scope: !4770)
!4861 = !DILocation(line: 1170, column: 30, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 1169, column: 5)
!4863 = !DILocation(line: 1172, column: 11, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1172, column: 11)
!4865 = !DILocation(line: 1173, column: 4, scope: !4864)
!4866 = !DILocation(line: 1173, column: 7, scope: !4864)
!4867 = !DILocation(line: 1173, column: 44, scope: !4864)
!4868 = !DILocation(line: 1173, column: 41, scope: !4864)
!4869 = !DILocation(line: 1172, column: 11, scope: !4862)
!4870 = !DILocation(line: 1179, column: 21, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1174, column: 2)
!4872 = !DILocation(line: 1180, column: 2, scope: !4871)
!4873 = !DILocation(line: 1184, column: 17, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1182, column: 2)
!4875 = !DILocation(line: 1185, column: 15, scope: !4874)
!4876 = !DILocation(line: 1186, column: 16, scope: !4874)
!4877 = !DILocation(line: 1186, column: 21, scope: !4874)
!4878 = !DILocation(line: 1187, column: 33, scope: !4874)
!4879 = !DILocation(line: 1187, column: 21, scope: !4874)
!4880 = !DILocation(line: 1188, column: 16, scope: !4874)
!4881 = !DILocation(line: 1188, column: 26, scope: !4874)
!4882 = !DILocation(line: 1189, column: 25, scope: !4874)
!4883 = !DILocation(line: 1192, column: 1, scope: !4770)
!4884 = distinct !DISubprogram(name: "insert_set_in_table", scope: !3, file: !3, line: 1200, type: !4327, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4885)
!4885 = !{!4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893}
!4886 = !DILocalVariable(name: "x", arg: 1, scope: !4884, file: !3, line: 1200, type: !787)
!4887 = !DILocalVariable(name: "insn", arg: 2, scope: !4884, file: !3, line: 1200, type: !787)
!4888 = !DILocalVariable(name: "table", arg: 3, scope: !4884, file: !3, line: 1200, type: !3089)
!4889 = !DILocalVariable(name: "found", scope: !4884, file: !3, line: 1202, type: !772)
!4890 = !DILocalVariable(name: "hash", scope: !4884, file: !3, line: 1203, type: !9)
!4891 = !DILocalVariable(name: "cur_expr", scope: !4884, file: !3, line: 1204, type: !1977)
!4892 = !DILocalVariable(name: "last_expr", scope: !4884, file: !3, line: 1204, type: !1977)
!4893 = !DILocalVariable(name: "cur_occr", scope: !4884, file: !3, line: 1205, type: !1984)
!4894 = !DILocation(line: 0, scope: !4884)
!4895 = !DILocation(line: 1207, column: 3, scope: !4884)
!4896 = !DILocation(line: 1209, column: 20, scope: !4884)
!4897 = !DILocation(line: 1209, column: 49, scope: !4884)
!4898 = !DILocation(line: 1209, column: 10, scope: !4884)
!4899 = !DILocation(line: 1211, column: 21, scope: !4884)
!4900 = !DILocation(line: 1211, column: 14, scope: !4884)
!4901 = !DILocation(line: 1214, column: 3, scope: !4884)
!4902 = !DILocation(line: 1214, column: 10, scope: !4884)
!4903 = !DILocation(line: 1214, column: 19, scope: !4884)
!4904 = !DILocation(line: 1214, column: 60, scope: !4884)
!4905 = !DILocation(line: 1214, column: 36, scope: !4884)
!4906 = !DILocation(line: 1214, column: 24, scope: !4884)
!4907 = !DILocation(line: 1219, column: 28, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 1215, column: 5)
!4909 = distinct !{!4909, !4901, !4910}
!4910 = !DILocation(line: 1220, column: 5, scope: !4884)
!4911 = !DILocation(line: 1222, column: 9, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 1222, column: 7)
!4913 = !DILocation(line: 1222, column: 7, scope: !4884)
!4914 = !DILocation(line: 1224, column: 18, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 1223, column: 5)
!4916 = !DILocation(line: 1225, column: 18, scope: !4915)
!4917 = !DILocation(line: 1226, column: 18, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 1226, column: 11)
!4919 = !DILocation(line: 1226, column: 11, scope: !4918)
!4920 = !DILocation(line: 1226, column: 30, scope: !4918)
!4921 = !DILocation(line: 1226, column: 11, scope: !4915)
!4922 = !DILocation(line: 1228, column: 21, scope: !4918)
!4923 = !DILocation(line: 1228, column: 2, scope: !4918)
!4924 = !DILocation(line: 1231, column: 13, scope: !4918)
!4925 = !DILocation(line: 1231, column: 28, scope: !4918)
!4926 = !DILocation(line: 1236, column: 24, scope: !4915)
!4927 = !DILocation(line: 1236, column: 17, scope: !4915)
!4928 = !DILocation(line: 1236, column: 22, scope: !4915)
!4929 = !DILocation(line: 1237, column: 39, scope: !4915)
!4930 = !DILocation(line: 1237, column: 46, scope: !4915)
!4931 = !DILocation(line: 1237, column: 17, scope: !4915)
!4932 = !DILocation(line: 1237, column: 30, scope: !4915)
!4933 = !DILocation(line: 1238, column: 17, scope: !4915)
!4934 = !DILocation(line: 1238, column: 32, scope: !4915)
!4935 = !DILocation(line: 1239, column: 17, scope: !4915)
!4936 = !DILocation(line: 1239, column: 28, scope: !4915)
!4937 = !DILocation(line: 1240, column: 17, scope: !4915)
!4938 = !DILocation(line: 1240, column: 28, scope: !4915)
!4939 = !DILocation(line: 1241, column: 5, scope: !4915)
!4940 = !DILocation(line: 1244, column: 24, scope: !4884)
!4941 = !DILocation(line: 1246, column: 7, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 1246, column: 7)
!4943 = !DILocation(line: 1247, column: 7, scope: !4942)
!4944 = !DILocation(line: 1247, column: 10, scope: !4942)
!4945 = !DILocation(line: 1247, column: 45, scope: !4942)
!4946 = !DILocation(line: 1247, column: 42, scope: !4942)
!4947 = !DILocation(line: 1246, column: 7, scope: !4884)
!4948 = !DILocation(line: 1253, column: 22, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 1248, column: 5)
!4950 = !DILocation(line: 1254, column: 5, scope: !4949)
!4951 = !DILocation(line: 1258, column: 18, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 1256, column: 5)
!4953 = !DILocation(line: 1259, column: 18, scope: !4952)
!4954 = !DILocation(line: 1260, column: 17, scope: !4952)
!4955 = !DILocation(line: 1260, column: 22, scope: !4952)
!4956 = !DILocation(line: 1261, column: 34, scope: !4952)
!4957 = !DILocation(line: 1261, column: 22, scope: !4952)
!4958 = !DILocation(line: 1262, column: 17, scope: !4952)
!4959 = !DILocation(line: 1262, column: 27, scope: !4952)
!4960 = !DILocation(line: 1263, column: 28, scope: !4952)
!4961 = !DILocation(line: 1265, column: 1, scope: !4884)
!4962 = distinct !DISubprogram(name: "oprs_unchanged_p", scope: !3, file: !3, line: 847, type: !4963, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !4965)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!772, !2124, !2124, !772}
!4965 = !{!4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973}
!4966 = !DILocalVariable(name: "x", arg: 1, scope: !4962, file: !3, line: 847, type: !2124)
!4967 = !DILocalVariable(name: "insn", arg: 2, scope: !4962, file: !3, line: 847, type: !2124)
!4968 = !DILocalVariable(name: "avail_p", arg: 3, scope: !4962, file: !3, line: 847, type: !772)
!4969 = !DILocalVariable(name: "i", scope: !4962, file: !3, line: 849, type: !772)
!4970 = !DILocalVariable(name: "j", scope: !4962, file: !3, line: 849, type: !772)
!4971 = !DILocalVariable(name: "code", scope: !4962, file: !3, line: 850, type: !593)
!4972 = !DILocalVariable(name: "fmt", scope: !4962, file: !3, line: 851, type: !777)
!4973 = !DILocalVariable(name: "info", scope: !4974, file: !3, line: 861, type: !1993)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 860, column: 7)
!4975 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 858, column: 5)
!4976 = !DILocation(line: 0, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 872, column: 11)
!4978 = !DILocation(line: 876, column: 9, scope: !4977)
!4979 = !DILocation(line: 0, scope: !4962)
!4980 = !DILocation(line: 853, column: 9, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 853, column: 7)
!4982 = !DILocation(line: 853, column: 7, scope: !4962)
!4983 = !DILocation(line: 856, column: 10, scope: !4962)
!4984 = !DILocation(line: 857, column: 3, scope: !4962)
!4985 = !DILocation(line: 861, column: 33, scope: !4974)
!4986 = !DILocation(line: 861, column: 48, scope: !4974)
!4987 = !DILocation(line: 0, scope: !4974)
!4988 = !DILocation(line: 863, column: 12, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 863, column: 6)
!4990 = !DILocation(line: 863, column: 23, scope: !4989)
!4991 = !DILocation(line: 863, column: 20, scope: !4989)
!4992 = !DILocation(line: 863, column: 6, scope: !4974)
!4993 = !DILocation(line: 865, column: 6, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 865, column: 6)
!4995 = !DILocation(line: 865, column: 6, scope: !4974)
!4996 = !DILocation(line: 866, column: 17, scope: !4994)
!4997 = !DILocation(line: 866, column: 28, scope: !4994)
!4998 = !DILocation(line: 866, column: 26, scope: !4994)
!4999 = !DILocation(line: 866, column: 4, scope: !4994)
!5000 = !DILocation(line: 868, column: 17, scope: !4994)
!5001 = !DILocation(line: 868, column: 30, scope: !4994)
!5002 = !DILocation(line: 868, column: 27, scope: !4994)
!5003 = !DILocation(line: 868, column: 4, scope: !4994)
!5004 = !DILocation(line: 872, column: 35, scope: !4977)
!5005 = !DILocation(line: 872, column: 47, scope: !4977)
!5006 = !DILocation(line: 872, column: 11, scope: !4977)
!5007 = !DILocation(line: 872, column: 11, scope: !4975)
!5008 = !DILocation(line: 876, column: 27, scope: !4977)
!5009 = !DILocation(line: 897, column: 7, scope: !4975)
!5010 = !DILocation(line: 903, column: 12, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 903, column: 3)
!5012 = !DILocation(line: 903, column: 45, scope: !5011)
!5013 = !DILocation(line: 0, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 917, column: 2)
!5015 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 917, column: 2)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 916, column: 16)
!5017 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 905, column: 11)
!5018 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 904, column: 5)
!5019 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 903, column: 3)
!5020 = !DILocation(line: 903, column: 8, scope: !5011)
!5021 = !DILocation(line: 0, scope: !5011)
!5022 = !DILocation(line: 903, column: 70, scope: !5019)
!5023 = !DILocation(line: 903, column: 3, scope: !5011)
!5024 = !DILocation(line: 905, column: 11, scope: !5017)
!5025 = !DILocation(line: 905, column: 18, scope: !5017)
!5026 = !DILocation(line: 905, column: 11, scope: !5018)
!5027 = !DILocation(line: 0, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 910, column: 8)
!5029 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 906, column: 2)
!5030 = !DILocation(line: 910, column: 8, scope: !5029)
!5031 = !DILocation(line: 913, column: 15, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 913, column: 13)
!5033 = !DILocation(line: 913, column: 13, scope: !5028)
!5034 = !DILocation(line: 916, column: 23, scope: !5016)
!5035 = !DILocation(line: 916, column: 16, scope: !5017)
!5036 = !DILocation(line: 917, column: 2, scope: !5015)
!5037 = !DILocation(line: 0, scope: !5015)
!5038 = !DILocation(line: 917, column: 18, scope: !5014)
!5039 = !DILocation(line: 917, column: 16, scope: !5014)
!5040 = !DILocation(line: 918, column: 28, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 918, column: 8)
!5042 = !DILocation(line: 918, column: 10, scope: !5041)
!5043 = !DILocation(line: 918, column: 8, scope: !5014)
!5044 = !DILocation(line: 917, column: 35, scope: !5014)
!5045 = !DILocation(line: 917, column: 2, scope: !5014)
!5046 = distinct !{!5046, !5036, !5047}
!5047 = !DILocation(line: 919, column: 13, scope: !5015)
!5048 = !DILocation(line: 903, column: 3, scope: !5019)
!5049 = distinct !{!5049, !5023, !5050}
!5050 = !DILocation(line: 920, column: 5, scope: !5011)
!5051 = !DILocation(line: 923, column: 1, scope: !4962)
!5052 = distinct !DISubprogram(name: "load_killed_in_block_p", scope: !3, file: !3, line: 979, type: !5053, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5055)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!772, !4116, !772, !2124, !772}
!5055 = !{!5056, !5057, !5058, !5059, !5060, !5061}
!5056 = !DILocalVariable(name: "bb", arg: 1, scope: !5052, file: !3, line: 979, type: !4116)
!5057 = !DILocalVariable(name: "uid_limit", arg: 2, scope: !5052, file: !3, line: 979, type: !772)
!5058 = !DILocalVariable(name: "x", arg: 3, scope: !5052, file: !3, line: 979, type: !2124)
!5059 = !DILocalVariable(name: "avail_p", arg: 4, scope: !5052, file: !3, line: 979, type: !772)
!5060 = !DILocalVariable(name: "list_entry", scope: !5052, file: !3, line: 981, type: !787)
!5061 = !DILocalVariable(name: "setter", scope: !5062, file: !3, line: 989, type: !787)
!5062 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 988, column: 5)
!5063 = !DILocation(line: 0, scope: !5052)
!5064 = !DILocation(line: 981, column: 20, scope: !5052)
!5065 = !DILocation(line: 981, column: 40, scope: !5052)
!5066 = !DILocation(line: 984, column: 7, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 984, column: 7)
!5068 = !DILocation(line: 984, column: 7, scope: !5052)
!5069 = !DILocation(line: 0, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 991, column: 11)
!5071 = !DILocation(line: 987, column: 3, scope: !5052)
!5072 = !DILocation(line: 994, column: 11, scope: !5070)
!5073 = !DILocation(line: 994, column: 47, scope: !5070)
!5074 = !DILocation(line: 991, column: 11, scope: !5062)
!5075 = !DILocation(line: 0, scope: !5062)
!5076 = !DILocation(line: 1005, column: 11, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 1005, column: 11)
!5078 = !DILocation(line: 1005, column: 11, scope: !5062)
!5079 = !DILocation(line: 1013, column: 24, scope: !5062)
!5080 = !DILocation(line: 1014, column: 28, scope: !5062)
!5081 = !DILocation(line: 1015, column: 20, scope: !5062)
!5082 = !DILocation(line: 1015, column: 7, scope: !5062)
!5083 = !DILocation(line: 1016, column: 11, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 1016, column: 11)
!5085 = !DILocation(line: 1016, column: 11, scope: !5062)
!5086 = !DILocation(line: 1018, column: 20, scope: !5062)
!5087 = !DILocation(line: 1019, column: 5, scope: !5052)
!5088 = !DILocation(line: 996, column: 17, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 995, column: 2)
!5090 = !DILocation(line: 997, column: 4, scope: !5089)
!5091 = distinct !{!5091, !5071, !5087}
!5092 = !DILocation(line: 1021, column: 1, scope: !5052)
!5093 = !DILocation(line: 992, column: 8, scope: !5070)
!5094 = !DILocation(line: 992, column: 44, scope: !5070)
!5095 = !DILocation(line: 993, column: 4, scope: !5070)
!5096 = distinct !DISubprogram(name: "mems_conflict_for_gcse_p", scope: !3, file: !3, line: 941, type: !4297, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5097)
!5097 = !{!5098, !5099, !5100}
!5098 = !DILocalVariable(name: "dest", arg: 1, scope: !5096, file: !3, line: 941, type: !787)
!5099 = !DILocalVariable(name: "setter", arg: 2, scope: !5096, file: !3, line: 941, type: !2124)
!5100 = !DILocalVariable(name: "data", arg: 3, scope: !5096, file: !3, line: 942, type: !776)
!5101 = !DILocation(line: 0, scope: !5096)
!5102 = !DILocation(line: 944, column: 3, scope: !5096)
!5103 = !DILocation(line: 944, column: 10, scope: !5096)
!5104 = !DILocation(line: 944, column: 26, scope: !5096)
!5105 = !DILocation(line: 945, column: 3, scope: !5096)
!5106 = !DILocation(line: 945, column: 22, scope: !5096)
!5107 = !DILocation(line: 946, column: 22, scope: !5096)
!5108 = !DILocation(line: 946, column: 3, scope: !5096)
!5109 = !DILocation(line: 947, column: 12, scope: !5096)
!5110 = distinct !{!5110, !5102, !5109}
!5111 = !DILocation(line: 952, column: 9, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 952, column: 7)
!5113 = !DILocation(line: 952, column: 7, scope: !5096)
!5114 = !DILocation(line: 958, column: 27, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 958, column: 7)
!5116 = !DILocation(line: 958, column: 7, scope: !5115)
!5117 = !DILocation(line: 958, column: 48, scope: !5115)
!5118 = !DILocation(line: 958, column: 62, scope: !5115)
!5119 = !DILocation(line: 958, column: 45, scope: !5115)
!5120 = !DILocation(line: 960, column: 12, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 960, column: 11)
!5122 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 959, column: 5)
!5123 = !DILocation(line: 960, column: 11, scope: !5122)
!5124 = !DILocation(line: 961, column: 23, scope: !5121)
!5125 = !DILocation(line: 961, column: 2, scope: !5121)
!5126 = !DILocation(line: 965, column: 30, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 965, column: 7)
!5128 = !DILocation(line: 965, column: 47, scope: !5127)
!5129 = !DILocation(line: 965, column: 7, scope: !5127)
!5130 = !DILocation(line: 965, column: 7, scope: !5096)
!5131 = !DILocation(line: 967, column: 26, scope: !5127)
!5132 = !DILocation(line: 967, column: 5, scope: !5127)
!5133 = !DILocation(line: 968, column: 1, scope: !5096)
!5134 = distinct !DISubprogram(name: "expr_equiv_p", scope: !3, file: !3, line: 1080, type: !4755, scopeLine: 1081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5135)
!5135 = !{!5136, !5137}
!5136 = !DILocalVariable(name: "x", arg: 1, scope: !5134, file: !3, line: 1080, type: !2124)
!5137 = !DILocalVariable(name: "y", arg: 2, scope: !5134, file: !3, line: 1080, type: !2124)
!5138 = !DILocation(line: 0, scope: !5134)
!5139 = !DILocation(line: 1082, column: 10, scope: !5134)
!5140 = !DILocation(line: 1082, column: 3, scope: !5134)
!5141 = distinct !DISubprogram(name: "find_rtx_in_ldst", scope: !3, file: !3, line: 4623, type: !5142, scopeLine: 4624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5144)
!5142 = !DISubroutineType(types: !5143)
!5143 = !{!2001, !787}
!5144 = !{!5145, !5146, !5147}
!5145 = !DILocalVariable(name: "x", arg: 1, scope: !5141, file: !3, line: 4623, type: !787)
!5146 = !DILocalVariable(name: "e", scope: !5141, file: !3, line: 4625, type: !2002)
!5147 = !DILocalVariable(name: "slot", scope: !5141, file: !3, line: 4626, type: !1274)
!5148 = !DILocation(line: 0, scope: !5141)
!5149 = !DILocation(line: 4625, column: 3, scope: !5141)
!5150 = !DILocation(line: 4627, column: 8, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 4627, column: 7)
!5152 = !DILocation(line: 4627, column: 7, scope: !5141)
!5153 = !DILocation(line: 4629, column: 5, scope: !5141)
!5154 = !DILocation(line: 4629, column: 13, scope: !5141)
!5155 = !DILocation(line: 4630, column: 10, scope: !5141)
!5156 = !DILocation(line: 4631, column: 8, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 4631, column: 7)
!5158 = !DILocation(line: 4631, column: 13, scope: !5157)
!5159 = !DILocation(line: 4631, column: 35, scope: !5157)
!5160 = !DILocation(line: 4631, column: 43, scope: !5157)
!5161 = !DILocation(line: 4631, column: 16, scope: !5157)
!5162 = !DILocation(line: 4631, column: 7, scope: !5141)
!5163 = !DILocation(line: 4633, column: 3, scope: !5141)
!5164 = !DILocation(line: 4634, column: 1, scope: !5141)
!5165 = distinct !DISubprogram(name: "hash_expr", scope: !3, file: !3, line: 1049, type: !5166, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5169)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{!9, !2124, !7, !5168, !772}
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!5169 = !{!5170, !5171, !5172, !5173, !5174}
!5170 = !DILocalVariable(name: "x", arg: 1, scope: !5165, file: !3, line: 1049, type: !2124)
!5171 = !DILocalVariable(name: "mode", arg: 2, scope: !5165, file: !3, line: 1049, type: !7)
!5172 = !DILocalVariable(name: "do_not_record_p", arg: 3, scope: !5165, file: !3, line: 1049, type: !5168)
!5173 = !DILocalVariable(name: "hash_table_size", arg: 4, scope: !5165, file: !3, line: 1050, type: !772)
!5174 = !DILocalVariable(name: "hash", scope: !5165, file: !3, line: 1052, type: !9)
!5175 = !DILocation(line: 0, scope: !5165)
!5176 = !DILocation(line: 1054, column: 20, scope: !5165)
!5177 = !DILocation(line: 1056, column: 10, scope: !5165)
!5178 = !DILocation(line: 1058, column: 15, scope: !5165)
!5179 = !DILocation(line: 1058, column: 3, scope: !5165)
!5180 = distinct !DISubprogram(name: "gcse_alloc", scope: !3, file: !3, line: 615, type: !5181, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5183)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!776, !878}
!5183 = !{!5184}
!5184 = !DILocalVariable(name: "size", arg: 1, scope: !5180, file: !3, line: 615, type: !878)
!5185 = !DILocation(line: 0, scope: !5180)
!5186 = !DILocation(line: 617, column: 14, scope: !5180)
!5187 = !DILocation(line: 618, column: 10, scope: !5180)
!5188 = !DILocation(line: 618, column: 3, scope: !5180)
!5189 = distinct !DISubprogram(name: "hash_set", scope: !3, file: !3, line: 1069, type: !5190, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5192)
!5190 = !DISubroutineType(types: !5191)
!5191 = !{!9, !772, !772}
!5192 = !{!5193, !5194, !5195}
!5193 = !DILocalVariable(name: "regno", arg: 1, scope: !5189, file: !3, line: 1069, type: !772)
!5194 = !DILocalVariable(name: "hash_table_size", arg: 2, scope: !5189, file: !3, line: 1069, type: !772)
!5195 = !DILocalVariable(name: "hash", scope: !5189, file: !3, line: 1071, type: !9)
!5196 = !DILocation(line: 0, scope: !5189)
!5197 = !DILocation(line: 1074, column: 15, scope: !5189)
!5198 = !DILocation(line: 1074, column: 3, scope: !5189)
!5199 = distinct !DISubprogram(name: "hash_scan_clobber", scope: !3, file: !3, line: 1436, type: !4327, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5200)
!5200 = !{!5201, !5202, !5203}
!5201 = !DILocalVariable(name: "x", arg: 1, scope: !5199, file: !3, line: 1436, type: !787)
!5202 = !DILocalVariable(name: "insn", arg: 2, scope: !5199, file: !3, line: 1436, type: !787)
!5203 = !DILocalVariable(name: "table", arg: 3, scope: !5199, file: !3, line: 1437, type: !3089)
!5204 = !DILocation(line: 0, scope: !5199)
!5205 = !DILocation(line: 1440, column: 1, scope: !5199)
!5206 = distinct !DISubprogram(name: "compute_local_properties", scope: !3, file: !3, line: 676, type: !5207, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5209)
!5207 = !DISubroutineType(types: !5208)
!5208 = !{null, !2135, !2135, !2135, !3089}
!5209 = !{!5210, !5211, !5212, !5213, !5214, !5215, !5219, !5223}
!5210 = !DILocalVariable(name: "transp", arg: 1, scope: !5206, file: !3, line: 676, type: !2135)
!5211 = !DILocalVariable(name: "comp", arg: 2, scope: !5206, file: !3, line: 676, type: !2135)
!5212 = !DILocalVariable(name: "antloc", arg: 3, scope: !5206, file: !3, line: 676, type: !2135)
!5213 = !DILocalVariable(name: "table", arg: 4, scope: !5206, file: !3, line: 677, type: !3089)
!5214 = !DILocalVariable(name: "i", scope: !5206, file: !3, line: 679, type: !9)
!5215 = !DILocalVariable(name: "expr", scope: !5216, file: !3, line: 697, type: !1977)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 696, column: 5)
!5217 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 695, column: 3)
!5218 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 695, column: 3)
!5219 = !DILocalVariable(name: "indx", scope: !5220, file: !3, line: 701, type: !772)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 700, column: 2)
!5221 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 699, column: 7)
!5222 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 699, column: 7)
!5223 = !DILocalVariable(name: "occr", scope: !5220, file: !3, line: 702, type: !1984)
!5224 = !DILocation(line: 0, scope: !5206)
!5225 = !DILocation(line: 682, column: 7, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 682, column: 7)
!5227 = !DILocation(line: 682, column: 7, scope: !5206)
!5228 = !DILocation(line: 684, column: 18, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 684, column: 11)
!5230 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 683, column: 5)
!5231 = !DILocation(line: 684, column: 11, scope: !5229)
!5232 = !DILocation(line: 0, scope: !5229)
!5233 = !DILocation(line: 684, column: 11, scope: !5230)
!5234 = !DILocation(line: 685, column: 2, scope: !5229)
!5235 = !DILocation(line: 687, column: 2, scope: !5229)
!5236 = !DILocation(line: 690, column: 7, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 690, column: 7)
!5238 = !DILocation(line: 690, column: 7, scope: !5206)
!5239 = !DILocation(line: 691, column: 32, scope: !5237)
!5240 = !DILocation(line: 691, column: 5, scope: !5237)
!5241 = !DILocation(line: 692, column: 7, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 692, column: 7)
!5243 = !DILocation(line: 692, column: 7, scope: !5206)
!5244 = !DILocation(line: 693, column: 34, scope: !5242)
!5245 = !DILocation(line: 693, column: 5, scope: !5242)
!5246 = !DILocation(line: 0, scope: !5217)
!5247 = !DILocation(line: 0, scope: !5222)
!5248 = !DILocation(line: 0, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 707, column: 8)
!5250 = !DILocation(line: 695, column: 8, scope: !5218)
!5251 = !DILocation(line: 0, scope: !5218)
!5252 = !DILocation(line: 695, column: 26, scope: !5217)
!5253 = !DILocation(line: 695, column: 17, scope: !5217)
!5254 = !DILocation(line: 695, column: 3, scope: !5218)
!5255 = !DILocation(line: 699, column: 26, scope: !5222)
!5256 = !DILocation(line: 699, column: 19, scope: !5222)
!5257 = !DILocation(line: 699, column: 12, scope: !5222)
!5258 = !DILocation(line: 0, scope: !5216)
!5259 = !DILocation(line: 699, column: 41, scope: !5221)
!5260 = !DILocation(line: 699, column: 7, scope: !5222)
!5261 = !DILocation(line: 701, column: 21, scope: !5220)
!5262 = !DILocation(line: 0, scope: !5220)
!5263 = !DILocation(line: 712, column: 8, scope: !5220)
!5264 = !DILocation(line: 713, column: 24, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 713, column: 6)
!5266 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 712, column: 8)
!5267 = !DILocation(line: 713, column: 11, scope: !5265)
!5268 = !DILocation(line: 0, scope: !5265)
!5269 = !DILocation(line: 713, column: 41, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 713, column: 6)
!5271 = !DILocation(line: 713, column: 6, scope: !5265)
!5272 = !DILocation(line: 715, column: 19, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 714, column: 8)
!5274 = !DILocation(line: 715, column: 48, scope: !5273)
!5275 = !DILocation(line: 715, column: 12, scope: !5273)
!5276 = !DILocation(line: 715, column: 3, scope: !5273)
!5277 = !DILocation(line: 719, column: 9, scope: !5273)
!5278 = !DILocation(line: 719, column: 19, scope: !5273)
!5279 = !DILocation(line: 713, column: 63, scope: !5270)
!5280 = !DILocation(line: 713, column: 6, scope: !5270)
!5281 = distinct !{!5281, !5271, !5282}
!5282 = !DILocation(line: 720, column: 8, scope: !5265)
!5283 = !DILocation(line: 724, column: 8, scope: !5220)
!5284 = !DILocation(line: 725, column: 24, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 725, column: 6)
!5286 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 724, column: 8)
!5287 = !DILocation(line: 725, column: 11, scope: !5285)
!5288 = !DILocation(line: 0, scope: !5285)
!5289 = !DILocation(line: 725, column: 41, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 725, column: 6)
!5291 = !DILocation(line: 725, column: 6, scope: !5285)
!5292 = !DILocation(line: 727, column: 17, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 726, column: 8)
!5294 = !DILocation(line: 727, column: 46, scope: !5293)
!5295 = !DILocation(line: 727, column: 12, scope: !5293)
!5296 = !DILocation(line: 727, column: 3, scope: !5293)
!5297 = !DILocation(line: 731, column: 9, scope: !5293)
!5298 = !DILocation(line: 731, column: 18, scope: !5293)
!5299 = !DILocation(line: 725, column: 63, scope: !5290)
!5300 = !DILocation(line: 725, column: 6, scope: !5290)
!5301 = distinct !{!5301, !5291, !5302}
!5302 = !DILocation(line: 732, column: 8, scope: !5285)
!5303 = !DILocation(line: 736, column: 10, scope: !5220)
!5304 = !DILocation(line: 736, column: 23, scope: !5220)
!5305 = !DILocation(line: 699, column: 63, scope: !5221)
!5306 = !DILocation(line: 699, column: 7, scope: !5221)
!5307 = distinct !{!5307, !5260, !5308}
!5308 = !DILocation(line: 737, column: 2, scope: !5222)
!5309 = !DILocation(line: 724, column: 8, scope: !5286)
!5310 = !DILocation(line: 695, column: 33, scope: !5217)
!5311 = !DILocation(line: 708, column: 28, scope: !5249)
!5312 = !DILocation(line: 708, column: 55, scope: !5249)
!5313 = !DILocation(line: 708, column: 6, scope: !5249)
!5314 = !DILocation(line: 695, column: 3, scope: !5217)
!5315 = distinct !{!5315, !5254, !5316}
!5316 = !DILocation(line: 738, column: 5, scope: !5218)
!5317 = !DILocation(line: 739, column: 1, scope: !5206)
!5318 = distinct !DISubprogram(name: "compute_transp", scope: !3, file: !3, line: 2028, type: !5319, scopeLine: 2029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5321)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{null, !2124, !772, !2135, !772}
!5321 = !{!5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5395, !5397, !5400, !5401, !5405, !5407, !5408}
!5322 = !DILocalVariable(name: "x", arg: 1, scope: !5318, file: !3, line: 2028, type: !2124)
!5323 = !DILocalVariable(name: "indx", arg: 2, scope: !5318, file: !3, line: 2028, type: !772)
!5324 = !DILocalVariable(name: "bmap", arg: 3, scope: !5318, file: !3, line: 2028, type: !2135)
!5325 = !DILocalVariable(name: "set_p", arg: 4, scope: !5318, file: !3, line: 2028, type: !772)
!5326 = !DILocalVariable(name: "i", scope: !5318, file: !3, line: 2030, type: !772)
!5327 = !DILocalVariable(name: "j", scope: !5318, file: !3, line: 2030, type: !772)
!5328 = !DILocalVariable(name: "code", scope: !5318, file: !3, line: 2031, type: !593)
!5329 = !DILocalVariable(name: "fmt", scope: !5318, file: !3, line: 2032, type: !777)
!5330 = !DILocalVariable(name: "def", scope: !5331, file: !3, line: 2047, type: !5334)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 2046, column: 2)
!5332 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 2045, column: 11)
!5333 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 2043, column: 5)
!5334 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !5335, line: 429, baseType: !5336)
!5335 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5337, size: 64)
!5337 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !5335, line: 422, size: 704, elements: !5338)
!5338 = !{!5339, !5378, !5383, !5388}
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5337, file: !5335, line: 424, baseType: !5340, size: 512)
!5340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !5335, line: 356, size: 512, elements: !5341)
!5341 = !{!5342, !5343, !5344, !5345, !5346, !5352, !5373, !5374, !5375, !5376, !5377}
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !5340, file: !5335, line: 360, baseType: !9, size: 8, flags: DIFlagBitField, extraData: i64 0)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5340, file: !5335, line: 362, baseType: !9, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5340, file: !5335, line: 364, baseType: !772, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !5340, file: !5335, line: 365, baseType: !787, size: 64, offset: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5340, file: !5335, line: 366, baseType: !5347, size: 64, offset: 128)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !5335, line: 449, size: 128, elements: !5349)
!5349 = !{!5350, !5351}
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5348, file: !5335, line: 451, baseType: !5334, size: 64)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5348, file: !5335, line: 452, baseType: !5347, size: 64, offset: 64)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !5340, file: !5335, line: 370, baseType: !5353, size: 64, offset: 192)
!5353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5354, size: 64)
!5354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !5335, line: 433, size: 384, elements: !5355)
!5355 = !{!5356, !5357, !5359, !5360, !5361, !5372}
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5354, file: !5335, line: 435, baseType: !787, size: 64)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !5354, file: !5335, line: 436, baseType: !5358, size: 64, offset: 64)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5334, size: 64)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !5354, file: !5335, line: 437, baseType: !5358, size: 64, offset: 128)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !5354, file: !5335, line: 439, baseType: !5358, size: 64, offset: 192)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !5354, file: !5335, line: 440, baseType: !5362, size: 64, offset: 256)
!5362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5363, size: 64)
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5364, size: 64)
!5364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !5335, line: 339, size: 192, elements: !5365)
!5365 = !{!5366, !5367, !5368, !5369, !5370, !5371}
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !5364, file: !5335, line: 341, baseType: !787, size: 64)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5364, file: !5335, line: 344, baseType: !9, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5364, file: !5335, line: 346, baseType: !772, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !5364, file: !5335, line: 347, baseType: !9, size: 32, offset: 96)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !5364, file: !5335, line: 348, baseType: !9, size: 32, offset: 128)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !5364, file: !5335, line: 349, baseType: !9, size: 32, offset: 160)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !5354, file: !5335, line: 444, baseType: !772, size: 32, offset: 320)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !5340, file: !5335, line: 374, baseType: !5336, size: 64, offset: 256)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !5340, file: !5335, line: 375, baseType: !5336, size: 64, offset: 320)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !5340, file: !5335, line: 376, baseType: !9, size: 32, offset: 384)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5340, file: !5335, line: 379, baseType: !772, size: 32, offset: 416)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !5340, file: !5335, line: 382, baseType: !9, size: 32, offset: 448)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !5337, file: !5335, line: 425, baseType: !5379, size: 576)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !5335, line: 398, size: 576, elements: !5380)
!5380 = !{!5381, !5382}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5379, file: !5335, line: 400, baseType: !5340, size: 512)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !5379, file: !5335, line: 405, baseType: !786, size: 64, offset: 512)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !5337, file: !5335, line: 426, baseType: !5384, size: 576)
!5384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !5335, line: 388, size: 576, elements: !5385)
!5385 = !{!5386, !5387}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5384, file: !5335, line: 390, baseType: !5340, size: 512)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !5384, file: !5335, line: 394, baseType: !1338, size: 64, offset: 512)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !5337, file: !5335, line: 427, baseType: !5389, size: 704)
!5389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !5335, line: 413, size: 704, elements: !5390)
!5390 = !{!5391, !5392, !5393, !5394}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5389, file: !5335, line: 415, baseType: !5379, size: 576)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5389, file: !5335, line: 416, baseType: !772, size: 32, offset: 576)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5389, file: !5335, line: 417, baseType: !772, size: 32, offset: 608)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5389, file: !5335, line: 418, baseType: !7, size: 32, offset: 640)
!5395 = !DILocalVariable(name: "def", scope: !5396, file: !3, line: 2055, type: !5334)
!5396 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 2054, column: 2)
!5397 = !DILocalVariable(name: "bi", scope: !5398, file: !3, line: 2067, type: !4233)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 2066, column: 2)
!5399 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 2065, column: 11)
!5400 = !DILocalVariable(name: "bb_index", scope: !5398, file: !3, line: 2068, type: !9)
!5401 = !DILocalVariable(name: "list_entry", scope: !5402, file: !3, line: 2086, type: !787)
!5402 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 2085, column: 8)
!5403 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 2082, column: 6)
!5404 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2082, column: 6)
!5405 = !DILocalVariable(name: "dest", scope: !5406, file: !3, line: 2090, type: !787)
!5406 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 2089, column: 5)
!5407 = !DILocalVariable(name: "dest_addr", scope: !5406, file: !3, line: 2090, type: !787)
!5408 = !DILabel(scope: !5318, name: "repeat", file: !3, line: 2036)
!5409 = !DILocation(line: 0, scope: !5318)
!5410 = !DILocation(line: 0, scope: !5398)
!5411 = !DILocation(line: 0, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 2074, column: 12)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 2073, column: 6)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 2072, column: 4)
!5415 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2072, column: 4)
!5416 = !DILocation(line: 2032, column: 3, scope: !5318)
!5417 = !DILocation(line: 0, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 2136, column: 2)
!5419 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 2135, column: 11)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 2134, column: 5)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 2133, column: 3)
!5422 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 2133, column: 3)
!5423 = !DILocation(line: 2038, column: 7, scope: !5318)
!5424 = !DILocation(line: 2036, column: 2, scope: !5318)
!5425 = !DILocation(line: 2038, column: 9, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 2038, column: 7)
!5427 = !DILocation(line: 2041, column: 10, scope: !5318)
!5428 = !DILocation(line: 2042, column: 3, scope: !5318)
!5429 = !DILocation(line: 0, scope: !5332)
!5430 = !DILocation(line: 2045, column: 11, scope: !5333)
!5431 = !DILocation(line: 2048, column: 4, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2048, column: 4)
!5433 = !DILocation(line: 2056, column: 4, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 2056, column: 4)
!5435 = !DILocation(line: 0, scope: !5432)
!5436 = !DILocation(line: 0, scope: !5331)
!5437 = !DILocation(line: 2051, column: 20, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 2048, column: 4)
!5439 = !DILocation(line: 2051, column: 37, scope: !5438)
!5440 = !DILocation(line: 2051, column: 15, scope: !5438)
!5441 = !DILocation(line: 2051, column: 6, scope: !5438)
!5442 = !DILocation(line: 2050, column: 15, scope: !5438)
!5443 = !DILocation(line: 2048, column: 4, scope: !5438)
!5444 = distinct !{!5444, !5431, !5445}
!5445 = !DILocation(line: 2051, column: 49, scope: !5432)
!5446 = !DILocation(line: 0, scope: !5434)
!5447 = !DILocation(line: 0, scope: !5396)
!5448 = !DILocation(line: 2059, column: 22, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 2056, column: 4)
!5450 = !DILocation(line: 2059, column: 39, scope: !5449)
!5451 = !DILocation(line: 2059, column: 17, scope: !5449)
!5452 = !DILocation(line: 2059, column: 6, scope: !5449)
!5453 = !DILocation(line: 2058, column: 15, scope: !5449)
!5454 = !DILocation(line: 2056, column: 4, scope: !5449)
!5455 = distinct !{!5455, !5433, !5456}
!5456 = !DILocation(line: 2059, column: 51, scope: !5434)
!5457 = !DILocation(line: 2065, column: 13, scope: !5399)
!5458 = !DILocation(line: 2065, column: 11, scope: !5333)
!5459 = !DILocation(line: 2067, column: 4, scope: !5398)
!5460 = !DILocation(line: 2068, column: 4, scope: !5398)
!5461 = !DILocation(line: 2072, column: 4, scope: !5415)
!5462 = !DILocation(line: 2072, column: 4, scope: !5414)
!5463 = !DILocation(line: 2077, column: 3, scope: !5412)
!5464 = distinct !{!5464, !5461, !5465}
!5465 = !DILocation(line: 2078, column: 6, scope: !5415)
!5466 = !DILocation(line: 2082, column: 6, scope: !5404)
!5467 = !DILocation(line: 2075, column: 3, scope: !5412)
!5468 = !DILocation(line: 2082, column: 6, scope: !5403)
!5469 = !DILocation(line: 2086, column: 20, scope: !5402)
!5470 = !DILocation(line: 2086, column: 42, scope: !5402)
!5471 = !DILocation(line: 0, scope: !5402)
!5472 = !DILocation(line: 2088, column: 3, scope: !5402)
!5473 = !DILocation(line: 2095, column: 14, scope: !5406)
!5474 = !DILocation(line: 0, scope: !5406)
!5475 = !DILocation(line: 2096, column: 20, scope: !5406)
!5476 = !DILocation(line: 2097, column: 19, scope: !5406)
!5477 = !DILocation(line: 2099, column: 40, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 2099, column: 11)
!5479 = !DILocation(line: 2099, column: 11, scope: !5478)
!5480 = !DILocation(line: 2099, column: 11, scope: !5406)
!5481 = !DILocation(line: 0, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 2102, column: 8)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 2101, column: 9)
!5484 = !DILocation(line: 2105, column: 6, scope: !5482)
!5485 = !DILocation(line: 2108, column: 20, scope: !5406)
!5486 = !DILocation(line: 2109, column: 12, scope: !5402)
!5487 = distinct !{!5487, !5472, !5486}
!5488 = !DILocation(line: 2103, column: 6, scope: !5482)
!5489 = distinct !{!5489, !5466, !5490}
!5490 = !DILocation(line: 2110, column: 8, scope: !5404)
!5491 = !DILocation(line: 2111, column: 2, scope: !5399)
!5492 = !DILocation(line: 2111, column: 2, scope: !5398)
!5493 = !DILocation(line: 2113, column: 11, scope: !5333)
!5494 = !DILocation(line: 2114, column: 7, scope: !5333)
!5495 = !DILocation(line: 2133, column: 12, scope: !5422)
!5496 = !DILocation(line: 2133, column: 45, scope: !5422)
!5497 = !DILocation(line: 0, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 2149, column: 2)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 2149, column: 2)
!5500 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 2148, column: 16)
!5501 = !DILocation(line: 2133, column: 8, scope: !5422)
!5502 = !DILocation(line: 0, scope: !5422)
!5503 = !DILocation(line: 2133, column: 70, scope: !5421)
!5504 = !DILocation(line: 2133, column: 3, scope: !5422)
!5505 = !DILocation(line: 2135, column: 11, scope: !5419)
!5506 = !DILocation(line: 2135, column: 18, scope: !5419)
!5507 = !DILocation(line: 2135, column: 11, scope: !5420)
!5508 = !DILocation(line: 2140, column: 8, scope: !5418)
!5509 = !DILocation(line: 2146, column: 4, scope: !5418)
!5510 = !DILocation(line: 2147, column: 2, scope: !5418)
!5511 = !DILocation(line: 2148, column: 23, scope: !5500)
!5512 = !DILocation(line: 2148, column: 16, scope: !5419)
!5513 = !DILocation(line: 2149, column: 2, scope: !5499)
!5514 = !DILocation(line: 0, scope: !5499)
!5515 = !DILocation(line: 2149, column: 18, scope: !5498)
!5516 = !DILocation(line: 2149, column: 16, scope: !5498)
!5517 = !DILocation(line: 2150, column: 20, scope: !5498)
!5518 = !DILocation(line: 2150, column: 4, scope: !5498)
!5519 = !DILocation(line: 2149, column: 35, scope: !5498)
!5520 = !DILocation(line: 2149, column: 2, scope: !5498)
!5521 = distinct !{!5521, !5513, !5522}
!5522 = !DILocation(line: 2150, column: 56, scope: !5499)
!5523 = !DILocation(line: 2133, column: 3, scope: !5421)
!5524 = distinct !{!5524, !5504, !5525}
!5525 = !DILocation(line: 2151, column: 5, scope: !5422)
!5526 = !DILocation(line: 2152, column: 1, scope: !5318)
!5527 = distinct !DISubprogram(name: "SET_BIT", scope: !2137, file: !2137, line: 63, type: !5528, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5530)
!5528 = !DISubroutineType(types: !5529)
!5529 = !{null, !2136, !9}
!5530 = !{!5531, !5532, !5533}
!5531 = !DILocalVariable(name: "map", arg: 1, scope: !5527, file: !2137, line: 63, type: !2136)
!5532 = !DILocalVariable(name: "bitno", arg: 2, scope: !5527, file: !2137, line: 63, type: !9)
!5533 = !DILocalVariable(name: "oldbit", scope: !5534, file: !2137, line: 67, type: !6)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !2137, line: 66, column: 5)
!5535 = distinct !DILexicalBlock(scope: !5527, file: !2137, line: 65, column: 7)
!5536 = !DILocation(line: 0, scope: !5527)
!5537 = !DILocation(line: 65, column: 12, scope: !5535)
!5538 = !DILocation(line: 65, column: 7, scope: !5535)
!5539 = !DILocation(line: 65, column: 7, scope: !5527)
!5540 = !DILocation(line: 73, column: 40, scope: !5527)
!5541 = !DILocation(line: 73, column: 29, scope: !5527)
!5542 = !DILocation(line: 72, column: 19, scope: !5527)
!5543 = !DILocation(line: 72, column: 3, scope: !5527)
!5544 = !DILocation(line: 68, column: 16, scope: !5534)
!5545 = !DILocation(line: 69, column: 12, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5534, file: !2137, line: 69, column: 11)
!5547 = !DILocation(line: 69, column: 11, scope: !5534)
!5548 = !DILocation(line: 70, column: 2, scope: !5546)
!5549 = !DILocation(line: 70, column: 41, scope: !5546)
!5550 = !DILocation(line: 73, column: 5, scope: !5527)
!5551 = !DILocation(line: 74, column: 1, scope: !5527)
!5552 = distinct !DISubprogram(name: "RESET_BIT", scope: !2137, file: !2137, line: 82, type: !5528, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5553)
!5553 = !{!5554, !5555, !5556}
!5554 = !DILocalVariable(name: "map", arg: 1, scope: !5552, file: !2137, line: 82, type: !2136)
!5555 = !DILocalVariable(name: "bitno", arg: 2, scope: !5552, file: !2137, line: 82, type: !9)
!5556 = !DILocalVariable(name: "oldbit", scope: !5557, file: !2137, line: 86, type: !6)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !2137, line: 85, column: 5)
!5558 = distinct !DILexicalBlock(scope: !5552, file: !2137, line: 84, column: 7)
!5559 = !DILocation(line: 0, scope: !5552)
!5560 = !DILocation(line: 84, column: 12, scope: !5558)
!5561 = !DILocation(line: 84, column: 7, scope: !5558)
!5562 = !DILocation(line: 84, column: 7, scope: !5552)
!5563 = !DILocation(line: 92, column: 42, scope: !5552)
!5564 = !DILocation(line: 92, column: 31, scope: !5552)
!5565 = !DILocation(line: 91, column: 19, scope: !5552)
!5566 = !DILocation(line: 91, column: 3, scope: !5552)
!5567 = !DILocation(line: 87, column: 16, scope: !5557)
!5568 = !DILocation(line: 88, column: 11, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5557, file: !2137, line: 88, column: 11)
!5570 = !DILocation(line: 88, column: 11, scope: !5557)
!5571 = !DILocation(line: 89, column: 2, scope: !5569)
!5572 = !DILocation(line: 89, column: 41, scope: !5569)
!5573 = !DILocation(line: 92, column: 8, scope: !5552)
!5574 = !DILocation(line: 92, column: 5, scope: !5552)
!5575 = !DILocation(line: 93, column: 1, scope: !5552)
!5576 = distinct !DISubprogram(name: "bmp_iter_and_compl_init", scope: !864, file: !864, line: 334, type: !5577, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5579)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{null, !4530, !4531, !4531, !9, !2014}
!5579 = !{!5580, !5581, !5582, !5583, !5584}
!5580 = !DILocalVariable(name: "bi", arg: 1, scope: !5576, file: !864, line: 334, type: !4530)
!5581 = !DILocalVariable(name: "map1", arg: 2, scope: !5576, file: !864, line: 334, type: !4531)
!5582 = !DILocalVariable(name: "map2", arg: 3, scope: !5576, file: !864, line: 334, type: !4531)
!5583 = !DILocalVariable(name: "start_bit", arg: 4, scope: !5576, file: !864, line: 335, type: !9)
!5584 = !DILocalVariable(name: "bit_no", arg: 5, scope: !5576, file: !864, line: 335, type: !2014)
!5585 = !DILocation(line: 0, scope: !5576)
!5586 = !DILocation(line: 337, column: 20, scope: !5576)
!5587 = !DILocation(line: 337, column: 12, scope: !5576)
!5588 = !DILocation(line: 338, column: 20, scope: !5576)
!5589 = !DILocation(line: 338, column: 7, scope: !5576)
!5590 = !DILocation(line: 338, column: 12, scope: !5576)
!5591 = !DILocation(line: 0, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5593, file: !864, line: 343, column: 11)
!5593 = distinct !DILexicalBlock(scope: !5576, file: !864, line: 342, column: 5)
!5594 = !DILocation(line: 341, column: 3, scope: !5576)
!5595 = !DILocation(line: 343, column: 12, scope: !5592)
!5596 = !DILocation(line: 343, column: 11, scope: !5593)
!5597 = !DILocation(line: 345, column: 13, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5592, file: !864, line: 344, column: 2)
!5599 = !DILocation(line: 346, column: 4, scope: !5598)
!5600 = !DILocation(line: 349, column: 11, scope: !5593)
!5601 = distinct !{!5601, !5594, !5602}
!5602 = !DILocation(line: 352, column: 5, scope: !5576)
!5603 = !DILocation(line: 355, column: 26, scope: !5576)
!5604 = !DILocation(line: 355, column: 3, scope: !5576)
!5605 = !DILocation(line: 355, column: 14, scope: !5576)
!5606 = !DILocation(line: 355, column: 10, scope: !5576)
!5607 = !DILocation(line: 355, column: 19, scope: !5576)
!5608 = !DILocation(line: 355, column: 32, scope: !5576)
!5609 = !DILocation(line: 355, column: 49, scope: !5576)
!5610 = !DILocation(line: 355, column: 37, scope: !5576)
!5611 = !DILocation(line: 356, column: 26, scope: !5576)
!5612 = !DILocation(line: 356, column: 14, scope: !5576)
!5613 = distinct !{!5613, !5604, !5611}
!5614 = !DILocation(line: 360, column: 17, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5576, file: !864, line: 360, column: 7)
!5616 = !DILocation(line: 360, column: 22, scope: !5615)
!5617 = !DILocation(line: 360, column: 7, scope: !5576)
!5618 = !DILocation(line: 361, column: 27, scope: !5615)
!5619 = !DILocation(line: 361, column: 32, scope: !5615)
!5620 = !DILocation(line: 361, column: 5, scope: !5615)
!5621 = !DILocation(line: 363, column: 7, scope: !5576)
!5622 = !DILocation(line: 363, column: 15, scope: !5576)
!5623 = !DILocation(line: 364, column: 14, scope: !5576)
!5624 = !DILocation(line: 364, column: 7, scope: !5576)
!5625 = !DILocation(line: 364, column: 12, scope: !5576)
!5626 = !DILocation(line: 365, column: 7, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5576, file: !864, line: 365, column: 7)
!5628 = !DILocation(line: 365, column: 16, scope: !5627)
!5629 = !DILocation(line: 365, column: 29, scope: !5627)
!5630 = !DILocation(line: 365, column: 47, scope: !5627)
!5631 = !DILocation(line: 365, column: 34, scope: !5627)
!5632 = !DILocation(line: 365, column: 7, scope: !5576)
!5633 = !DILocation(line: 366, column: 18, scope: !5627)
!5634 = !DILocation(line: 366, column: 17, scope: !5627)
!5635 = !DILocation(line: 366, column: 14, scope: !5627)
!5636 = !DILocation(line: 366, column: 5, scope: !5627)
!5637 = !DILocation(line: 367, column: 12, scope: !5576)
!5638 = !DILocation(line: 373, column: 16, scope: !5576)
!5639 = !DILocation(line: 373, column: 13, scope: !5576)
!5640 = !DILocation(line: 375, column: 11, scope: !5576)
!5641 = !DILocation(line: 376, column: 1, scope: !5576)
!5642 = distinct !DISubprogram(name: "bmp_iter_and_compl", scope: !864, file: !864, line: 507, type: !4574, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5643)
!5643 = !{!5644, !5645, !5646}
!5644 = !DILocalVariable(name: "bi", arg: 1, scope: !5642, file: !864, line: 507, type: !4530)
!5645 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5642, file: !864, line: 507, type: !2014)
!5646 = !DILabel(scope: !5647, name: "next_bit", file: !864, line: 512)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !864, line: 511, column: 5)
!5648 = distinct !DILexicalBlock(scope: !5642, file: !864, line: 510, column: 7)
!5649 = !DILocation(line: 0, scope: !5642)
!5650 = !DILocation(line: 510, column: 11, scope: !5648)
!5651 = !DILocation(line: 510, column: 7, scope: !5648)
!5652 = !DILocation(line: 510, column: 7, scope: !5642)
!5653 = !DILocation(line: 536, column: 12, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !864, line: 536, column: 8)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !864, line: 532, column: 2)
!5656 = distinct !DILexicalBlock(scope: !5642, file: !864, line: 529, column: 5)
!5657 = !DILocation(line: 513, column: 7, scope: !5647)
!5658 = !DILocation(line: 512, column: 5, scope: !5647)
!5659 = !DILocation(line: 513, column: 20, scope: !5647)
!5660 = !DILocation(line: 513, column: 25, scope: !5647)
!5661 = !DILocation(line: 513, column: 14, scope: !5647)
!5662 = !DILocation(line: 515, column: 13, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5647, file: !864, line: 514, column: 2)
!5664 = !DILocation(line: 516, column: 12, scope: !5663)
!5665 = distinct !{!5665, !5657, !5666}
!5666 = !DILocation(line: 517, column: 2, scope: !5647)
!5667 = !DILocation(line: 524, column: 15, scope: !5642)
!5668 = !DILocation(line: 524, column: 42, scope: !5642)
!5669 = !DILocation(line: 525, column: 26, scope: !5642)
!5670 = !DILocation(line: 524, column: 11, scope: !5642)
!5671 = !DILocation(line: 526, column: 7, scope: !5642)
!5672 = !DILocation(line: 526, column: 14, scope: !5642)
!5673 = !DILocation(line: 0, scope: !5656)
!5674 = !DILocation(line: 0, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5655, file: !864, line: 534, column: 8)
!5676 = !DILocation(line: 528, column: 3, scope: !5642)
!5677 = !DILocation(line: 531, column: 7, scope: !5656)
!5678 = !DILocation(line: 531, column: 18, scope: !5656)
!5679 = !DILocation(line: 531, column: 26, scope: !5656)
!5680 = !DILocation(line: 533, column: 15, scope: !5655)
!5681 = !DILocation(line: 533, column: 13, scope: !5655)
!5682 = !DILocation(line: 534, column: 12, scope: !5675)
!5683 = !DILocation(line: 534, column: 8, scope: !5675)
!5684 = !DILocation(line: 534, column: 17, scope: !5675)
!5685 = !DILocation(line: 534, column: 30, scope: !5675)
!5686 = !DILocation(line: 534, column: 48, scope: !5675)
!5687 = !DILocation(line: 534, column: 35, scope: !5675)
!5688 = !DILocation(line: 534, column: 8, scope: !5655)
!5689 = !DILocation(line: 535, column: 19, scope: !5675)
!5690 = !DILocation(line: 535, column: 18, scope: !5675)
!5691 = !DILocation(line: 535, column: 15, scope: !5675)
!5692 = !DILocation(line: 535, column: 6, scope: !5675)
!5693 = !DILocation(line: 536, column: 8, scope: !5654)
!5694 = !DILocation(line: 536, column: 8, scope: !5655)
!5695 = !DILocation(line: 538, column: 12, scope: !5655)
!5696 = !DILocation(line: 539, column: 15, scope: !5655)
!5697 = distinct !{!5697, !5677, !5698}
!5698 = !DILocation(line: 540, column: 2, scope: !5656)
!5699 = !DILocation(line: 543, column: 28, scope: !5656)
!5700 = !DILocation(line: 543, column: 16, scope: !5656)
!5701 = !DILocation(line: 544, column: 12, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5656, file: !864, line: 544, column: 11)
!5703 = !DILocation(line: 544, column: 11, scope: !5656)
!5704 = !DILocation(line: 548, column: 18, scope: !5656)
!5705 = !DILocation(line: 548, column: 7, scope: !5656)
!5706 = !DILocation(line: 548, column: 14, scope: !5656)
!5707 = !DILocation(line: 548, column: 23, scope: !5656)
!5708 = !DILocation(line: 548, column: 36, scope: !5656)
!5709 = !DILocation(line: 548, column: 53, scope: !5656)
!5710 = !DILocation(line: 548, column: 41, scope: !5656)
!5711 = !DILocation(line: 549, column: 23, scope: !5656)
!5712 = !DILocation(line: 549, column: 11, scope: !5656)
!5713 = distinct !{!5713, !5705, !5711}
!5714 = !DILocation(line: 551, column: 27, scope: !5656)
!5715 = !DILocation(line: 551, column: 32, scope: !5656)
!5716 = !DILocation(line: 551, column: 15, scope: !5656)
!5717 = !DILocation(line: 552, column: 19, scope: !5656)
!5718 = distinct !{!5718, !5676, !5719}
!5719 = !DILocation(line: 553, column: 5, scope: !5642)
!5720 = !DILocation(line: 554, column: 1, scope: !5642)
!5721 = distinct !DISubprogram(name: "oprs_not_set_p", scope: !3, file: !3, line: 1849, type: !4755, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5722)
!5722 = !{!5723, !5724, !5725, !5726, !5727, !5728}
!5723 = !DILocalVariable(name: "x", arg: 1, scope: !5721, file: !3, line: 1849, type: !2124)
!5724 = !DILocalVariable(name: "insn", arg: 2, scope: !5721, file: !3, line: 1849, type: !2124)
!5725 = !DILocalVariable(name: "i", scope: !5721, file: !3, line: 1851, type: !772)
!5726 = !DILocalVariable(name: "j", scope: !5721, file: !3, line: 1851, type: !772)
!5727 = !DILocalVariable(name: "code", scope: !5721, file: !3, line: 1852, type: !593)
!5728 = !DILocalVariable(name: "fmt", scope: !5721, file: !3, line: 1853, type: !777)
!5729 = !DILocation(line: 0, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1875, column: 11)
!5731 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 1860, column: 5)
!5732 = !DILocation(line: 1879, column: 9, scope: !5730)
!5733 = !DILocation(line: 0, scope: !5721)
!5734 = !DILocation(line: 1855, column: 9, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 1855, column: 7)
!5736 = !DILocation(line: 1855, column: 7, scope: !5721)
!5737 = !DILocation(line: 1858, column: 10, scope: !5721)
!5738 = !DILocation(line: 1859, column: 3, scope: !5721)
!5739 = !DILocation(line: 1875, column: 35, scope: !5730)
!5740 = !DILocation(line: 1876, column: 7, scope: !5730)
!5741 = !DILocation(line: 1875, column: 11, scope: !5730)
!5742 = !DILocation(line: 1875, column: 11, scope: !5731)
!5743 = !DILocation(line: 1879, column: 25, scope: !5730)
!5744 = !DILocation(line: 1882, column: 16, scope: !5731)
!5745 = !DILocation(line: 1882, column: 14, scope: !5731)
!5746 = !DILocation(line: 1882, column: 7, scope: !5731)
!5747 = !DILocation(line: 1888, column: 12, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 1888, column: 3)
!5749 = !DILocation(line: 1888, column: 45, scope: !5748)
!5750 = !DILocation(line: 0, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 1902, column: 2)
!5752 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1902, column: 2)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1901, column: 16)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1890, column: 11)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1889, column: 5)
!5756 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1888, column: 3)
!5757 = !DILocation(line: 1888, column: 8, scope: !5748)
!5758 = !DILocation(line: 0, scope: !5748)
!5759 = !DILocation(line: 1888, column: 70, scope: !5756)
!5760 = !DILocation(line: 1888, column: 3, scope: !5748)
!5761 = !DILocation(line: 1890, column: 11, scope: !5754)
!5762 = !DILocation(line: 1890, column: 18, scope: !5754)
!5763 = !DILocation(line: 1890, column: 11, scope: !5755)
!5764 = !DILocation(line: 0, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1891, column: 2)
!5766 = !DILocation(line: 1895, column: 8, scope: !5765)
!5767 = !DILocation(line: 1898, column: 10, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 1898, column: 8)
!5769 = !DILocation(line: 1898, column: 8, scope: !5765)
!5770 = !DILocation(line: 1901, column: 23, scope: !5753)
!5771 = !DILocation(line: 1901, column: 16, scope: !5754)
!5772 = !DILocation(line: 1902, column: 2, scope: !5752)
!5773 = !DILocation(line: 0, scope: !5752)
!5774 = !DILocation(line: 1902, column: 18, scope: !5751)
!5775 = !DILocation(line: 1902, column: 16, scope: !5751)
!5776 = !DILocation(line: 1903, column: 26, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 1903, column: 8)
!5778 = !DILocation(line: 1903, column: 10, scope: !5777)
!5779 = !DILocation(line: 1903, column: 8, scope: !5751)
!5780 = !DILocation(line: 1902, column: 35, scope: !5751)
!5781 = !DILocation(line: 1902, column: 2, scope: !5751)
!5782 = distinct !{!5782, !5772, !5783}
!5783 = !DILocation(line: 1904, column: 13, scope: !5752)
!5784 = !DILocation(line: 1888, column: 3, scope: !5756)
!5785 = distinct !{!5785, !5760, !5786}
!5786 = !DILocation(line: 1905, column: 5, scope: !5748)
!5787 = !DILocation(line: 1908, column: 1, scope: !5721)
!5788 = distinct !DISubprogram(name: "find_avail_set", scope: !3, file: !3, line: 2299, type: !5789, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5791)
!5789 = !DISubroutineType(types: !5790)
!5790 = !{!1977, !772, !787}
!5791 = !{!5792, !5793, !5794, !5795, !5797}
!5792 = !DILocalVariable(name: "regno", arg: 1, scope: !5788, file: !3, line: 2299, type: !772)
!5793 = !DILocalVariable(name: "insn", arg: 2, scope: !5788, file: !3, line: 2299, type: !787)
!5794 = !DILocalVariable(name: "set1", scope: !5788, file: !3, line: 2303, type: !1977)
!5795 = !DILocalVariable(name: "src", scope: !5796, file: !3, line: 2316, type: !787)
!5796 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 2315, column: 5)
!5797 = !DILocalVariable(name: "set", scope: !5796, file: !3, line: 2317, type: !1977)
!5798 = !DILocation(line: 0, scope: !5788)
!5799 = !DILocation(line: 0, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 2323, column: 8)
!5801 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 2322, column: 2)
!5802 = !DILocation(line: 2314, column: 3, scope: !5788)
!5803 = !DILocation(line: 2303, column: 16, scope: !5788)
!5804 = !DILocation(line: 2317, column: 26, scope: !5796)
!5805 = !DILocation(line: 0, scope: !5796)
!5806 = !DILocation(line: 2321, column: 7, scope: !5796)
!5807 = !DILocation(line: 2323, column: 8, scope: !5800)
!5808 = !DILocation(line: 2323, column: 8, scope: !5801)
!5809 = !DILocation(line: 2326, column: 10, scope: !5801)
!5810 = distinct !{!5810, !5806, !5811}
!5811 = !DILocation(line: 2327, column: 2, scope: !5796)
!5812 = !DILocation(line: 2334, column: 7, scope: !5796)
!5813 = !DILocation(line: 2336, column: 13, scope: !5796)
!5814 = !DILocation(line: 2345, column: 11, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 2345, column: 11)
!5816 = !DILocation(line: 2345, column: 33, scope: !5815)
!5817 = !DILocation(line: 2345, column: 36, scope: !5815)
!5818 = !DILocation(line: 2345, column: 11, scope: !5796)
!5819 = !DILocation(line: 2346, column: 2, scope: !5815)
!5820 = !DILocation(line: 2350, column: 13, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 2350, column: 11)
!5822 = !DILocation(line: 2350, column: 11, scope: !5796)
!5823 = !DILocation(line: 2355, column: 15, scope: !5796)
!5824 = !DILocation(line: 2356, column: 5, scope: !5788)
!5825 = distinct !{!5825, !5802, !5824}
!5826 = !DILocation(line: 2360, column: 3, scope: !5788)
!5827 = distinct !DISubprogram(name: "lookup_set", scope: !3, file: !3, line: 1756, type: !5828, scopeLine: 1757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5830)
!5828 = !DISubroutineType(types: !5829)
!5829 = !{!1977, !9, !3089}
!5830 = !{!5831, !5832, !5833, !5834}
!5831 = !DILocalVariable(name: "regno", arg: 1, scope: !5827, file: !3, line: 1756, type: !9)
!5832 = !DILocalVariable(name: "table", arg: 2, scope: !5827, file: !3, line: 1756, type: !3089)
!5833 = !DILocalVariable(name: "hash", scope: !5827, file: !3, line: 1758, type: !9)
!5834 = !DILocalVariable(name: "expr", scope: !5827, file: !3, line: 1759, type: !1977)
!5835 = !DILocation(line: 0, scope: !5827)
!5836 = !DILocation(line: 1758, column: 47, scope: !5827)
!5837 = !DILocation(line: 1758, column: 23, scope: !5827)
!5838 = !DILocation(line: 1761, column: 17, scope: !5827)
!5839 = !DILocation(line: 1761, column: 10, scope: !5827)
!5840 = !DILocation(line: 1763, column: 3, scope: !5827)
!5841 = !DILocation(line: 1763, column: 10, scope: !5827)
!5842 = !DILocation(line: 1763, column: 15, scope: !5827)
!5843 = !DILocation(line: 1763, column: 18, scope: !5827)
!5844 = !DILocation(line: 1763, column: 48, scope: !5827)
!5845 = !DILocation(line: 1764, column: 18, scope: !5827)
!5846 = distinct !{!5846, !5840, !5845}
!5847 = !DILocation(line: 1766, column: 3, scope: !5827)
!5848 = distinct !DISubprogram(name: "next_set", scope: !3, file: !3, line: 1772, type: !5849, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5851)
!5849 = !DISubroutineType(types: !5850)
!5850 = !{!1977, !9, !1977}
!5851 = !{!5852, !5853}
!5852 = !DILocalVariable(name: "regno", arg: 1, scope: !5848, file: !3, line: 1772, type: !9)
!5853 = !DILocalVariable(name: "expr", arg: 2, scope: !5848, file: !3, line: 1772, type: !1977)
!5854 = !DILocation(line: 0, scope: !5848)
!5855 = !DILocation(line: 1774, column: 3, scope: !5848)
!5856 = !DILocation(line: 1775, column: 18, scope: !5848)
!5857 = !DILocation(line: 1776, column: 10, scope: !5848)
!5858 = !DILocation(line: 1776, column: 15, scope: !5848)
!5859 = !DILocation(line: 1776, column: 18, scope: !5848)
!5860 = !DILocation(line: 1776, column: 48, scope: !5848)
!5861 = !DILocation(line: 1775, column: 5, scope: !5848)
!5862 = distinct !{!5862, !5855, !5863}
!5863 = !DILocation(line: 1776, column: 56, scope: !5848)
!5864 = !DILocation(line: 1778, column: 3, scope: !5848)
!5865 = distinct !DISubprogram(name: "mark_set", scope: !3, file: !3, line: 1922, type: !5866, scopeLine: 1923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5868)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{null, !787, !787}
!5868 = !{!5869, !5870, !5871}
!5869 = !DILocalVariable(name: "pat", arg: 1, scope: !5865, file: !3, line: 1922, type: !787)
!5870 = !DILocalVariable(name: "insn", arg: 2, scope: !5865, file: !3, line: 1922, type: !787)
!5871 = !DILocalVariable(name: "dest", scope: !5865, file: !3, line: 1924, type: !787)
!5872 = !DILocation(line: 0, scope: !5865)
!5873 = !DILocation(line: 1926, column: 3, scope: !5865)
!5874 = !DILocation(line: 1926, column: 10, scope: !5865)
!5875 = !DILocation(line: 1926, column: 26, scope: !5865)
!5876 = !DILocation(line: 1927, column: 3, scope: !5865)
!5877 = !DILocation(line: 1927, column: 22, scope: !5865)
!5878 = !DILocation(line: 1928, column: 22, scope: !5865)
!5879 = !DILocation(line: 1928, column: 3, scope: !5865)
!5880 = distinct !{!5880, !5873, !5881}
!5881 = !DILocation(line: 1929, column: 12, scope: !5865)
!5882 = !DILocation(line: 1931, column: 7, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1931, column: 7)
!5884 = !DILocation(line: 1931, column: 7, scope: !5865)
!5885 = !DILocation(line: 1932, column: 5, scope: !5883)
!5886 = !DILocation(line: 1933, column: 12, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 1933, column: 12)
!5888 = !DILocation(line: 1933, column: 12, scope: !5883)
!5889 = !DILocation(line: 1934, column: 5, scope: !5887)
!5890 = !DILocation(line: 1936, column: 7, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1936, column: 7)
!5892 = !DILocation(line: 1936, column: 32, scope: !5891)
!5893 = !DILocation(line: 1936, column: 7, scope: !5865)
!5894 = !DILocation(line: 1937, column: 5, scope: !5891)
!5895 = !DILocation(line: 1938, column: 1, scope: !5865)
!5896 = distinct !DISubprogram(name: "mark_clobber", scope: !3, file: !3, line: 1943, type: !5866, scopeLine: 1944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5897)
!5897 = !{!5898, !5899, !5900}
!5898 = !DILocalVariable(name: "pat", arg: 1, scope: !5896, file: !3, line: 1943, type: !787)
!5899 = !DILocalVariable(name: "insn", arg: 2, scope: !5896, file: !3, line: 1943, type: !787)
!5900 = !DILocalVariable(name: "clob", scope: !5896, file: !3, line: 1945, type: !787)
!5901 = !DILocation(line: 0, scope: !5896)
!5902 = !DILocation(line: 1947, column: 3, scope: !5896)
!5903 = !DILocation(line: 1947, column: 10, scope: !5896)
!5904 = !DILocation(line: 1947, column: 36, scope: !5896)
!5905 = distinct !{!5905, !5902, !5906}
!5906 = !DILocation(line: 1948, column: 12, scope: !5896)
!5907 = !DILocation(line: 1950, column: 7, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1950, column: 7)
!5909 = !DILocation(line: 1950, column: 7, scope: !5896)
!5910 = !DILocation(line: 1951, column: 5, scope: !5908)
!5911 = !DILocation(line: 1953, column: 5, scope: !5908)
!5912 = !DILocation(line: 1954, column: 1, scope: !5896)
!5913 = distinct !DISubprogram(name: "bypass_block", scope: !3, file: !3, line: 2952, type: !5914, scopeLine: 2953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !5916)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!772, !1338, !787, !787}
!5916 = !{!5917, !5918, !5919, !5920, !5921, !5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5936, !5937, !5938, !5939, !5940, !5941, !5942}
!5917 = !DILocalVariable(name: "bb", arg: 1, scope: !5913, file: !3, line: 2952, type: !1338)
!5918 = !DILocalVariable(name: "setcc", arg: 2, scope: !5913, file: !3, line: 2952, type: !787)
!5919 = !DILocalVariable(name: "jump", arg: 3, scope: !5913, file: !3, line: 2952, type: !787)
!5920 = !DILocalVariable(name: "insn", scope: !5913, file: !3, line: 2954, type: !787)
!5921 = !DILocalVariable(name: "note", scope: !5913, file: !3, line: 2954, type: !787)
!5922 = !DILocalVariable(name: "e", scope: !5913, file: !3, line: 2955, type: !1355)
!5923 = !DILocalVariable(name: "edest", scope: !5913, file: !3, line: 2955, type: !1355)
!5924 = !DILocalVariable(name: "i", scope: !5913, file: !3, line: 2956, type: !772)
!5925 = !DILocalVariable(name: "change", scope: !5913, file: !3, line: 2956, type: !772)
!5926 = !DILocalVariable(name: "may_be_loop_header", scope: !5913, file: !3, line: 2957, type: !772)
!5927 = !DILocalVariable(name: "removed_p", scope: !5913, file: !3, line: 2958, type: !9)
!5928 = !DILocalVariable(name: "ei", scope: !5913, file: !3, line: 2959, type: !3896)
!5929 = !DILocalVariable(name: "reg_used", scope: !5930, file: !3, line: 3008, type: !2946)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 3007, column: 2)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 3006, column: 7)
!5932 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 3006, column: 7)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2980, column: 5)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 2979, column: 3)
!5935 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2979, column: 3)
!5936 = !DILocalVariable(name: "regno", scope: !5930, file: !3, line: 3009, type: !9)
!5937 = !DILocalVariable(name: "dest", scope: !5930, file: !3, line: 3010, type: !1338)
!5938 = !DILocalVariable(name: "old_dest", scope: !5930, file: !3, line: 3010, type: !1338)
!5939 = !DILocalVariable(name: "set", scope: !5930, file: !3, line: 3011, type: !1977)
!5940 = !DILocalVariable(name: "src", scope: !5930, file: !3, line: 3012, type: !787)
!5941 = !DILocalVariable(name: "new_rtx", scope: !5930, file: !3, line: 3012, type: !787)
!5942 = !DILocalVariable(name: "pat", scope: !5943, file: !3, line: 3073, type: !787)
!5943 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 3072, column: 3)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 3071, column: 12)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 3066, column: 13)
!5946 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 3063, column: 8)
!5947 = !DILocation(line: 0, scope: !5913)
!5948 = !DILocation(line: 2955, column: 3, scope: !5913)
!5949 = !DILocation(line: 2959, column: 3, scope: !5913)
!5950 = !DILocation(line: 2961, column: 17, scope: !5913)
!5951 = !DILocation(line: 2961, column: 10, scope: !5913)
!5952 = !DILocation(line: 2964, column: 17, scope: !5913)
!5953 = !DILocation(line: 2965, column: 15, scope: !5913)
!5954 = !DILocation(line: 2965, column: 3, scope: !5913)
!5955 = !DILocation(line: 2966, column: 10, scope: !5913)
!5956 = !DILocation(line: 2967, column: 7, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2967, column: 7)
!5958 = !DILocation(line: 2967, column: 7, scope: !5913)
!5959 = !DILocation(line: 2968, column: 22, scope: !5957)
!5960 = !DILocation(line: 2968, column: 5, scope: !5957)
!5961 = !DILocation(line: 2971, column: 3, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2971, column: 3)
!5963 = !DILocation(line: 0, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 2971, column: 3)
!5965 = !DILocation(line: 2971, column: 3, scope: !5964)
!5966 = !DILocation(line: 2972, column: 9, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2972, column: 9)
!5968 = !DILocation(line: 2972, column: 12, scope: !5967)
!5969 = !DILocation(line: 2972, column: 18, scope: !5967)
!5970 = !DILocation(line: 2972, column: 9, scope: !5964)
!5971 = distinct !{!5971, !5961, !5972}
!5972 = !DILocation(line: 2976, column: 7, scope: !5962)
!5973 = !DILocation(line: 2979, column: 13, scope: !5935)
!5974 = !DILocation(line: 0, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 3025, column: 8)
!5976 = !DILocation(line: 0, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 3039, column: 6)
!5978 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 3038, column: 8)
!5979 = !DILocation(line: 0, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 3058, column: 8)
!5981 = !DILocation(line: 0, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 3079, column: 3)
!5983 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 3078, column: 12)
!5984 = !DILocation(line: 2979, column: 8, scope: !5935)
!5985 = !DILocation(line: 2979, column: 3, scope: !5935)
!5986 = !DILocation(line: 2979, column: 40, scope: !5934)
!5987 = !DILocation(line: 2979, column: 38, scope: !5934)
!5988 = !DILocation(line: 2983, column: 14, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 2983, column: 11)
!5990 = !DILocation(line: 2983, column: 20, scope: !5989)
!5991 = !DILocation(line: 2983, column: 11, scope: !5933)
!5992 = !DILocation(line: 2985, column: 4, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 2984, column: 2)
!5994 = !DILocation(line: 2986, column: 4, scope: !5993)
!5995 = !DILocation(line: 2990, column: 14, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 2990, column: 11)
!5997 = !DILocation(line: 2990, column: 19, scope: !5996)
!5998 = !DILocation(line: 2990, column: 28, scope: !5996)
!5999 = !DILocation(line: 2990, column: 25, scope: !5996)
!6000 = !DILocation(line: 2990, column: 11, scope: !5933)
!6001 = !DILocation(line: 2992, column: 4, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2991, column: 2)
!6003 = !DILocation(line: 2993, column: 4, scope: !6002)
!6004 = !DILocation(line: 3006, column: 12, scope: !5932)
!6005 = distinct !{!6005, !5985, !6006}
!6006 = !DILocation(line: 3094, column: 5, scope: !5935)
!6007 = !DILocation(line: 3096, column: 1, scope: !5913)
!6008 = !DILocation(line: 3000, column: 18, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 2999, column: 11)
!6010 = !DILocation(line: 2999, column: 11, scope: !5933)
!6011 = !DILocation(line: 3002, column: 4, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 3001, column: 2)
!6013 = !DILocation(line: 3003, column: 4, scope: !6012)
!6014 = !DILocation(line: 2978, column: 10, scope: !5913)
!6015 = !DILocation(line: 2981, column: 17, scope: !5933)
!6016 = !DILocation(line: 3006, column: 23, scope: !5931)
!6017 = !DILocation(line: 3006, column: 21, scope: !5931)
!6018 = !DILocation(line: 3006, column: 7, scope: !5932)
!6019 = !DILocation(line: 3009, column: 25, scope: !5930)
!6020 = !DILocation(line: 0, scope: !5930)
!6021 = !DILocation(line: 3014, column: 34, scope: !5930)
!6022 = !DILocation(line: 3014, column: 37, scope: !5930)
!6023 = !DILocation(line: 3014, column: 42, scope: !5930)
!6024 = !DILocation(line: 3014, column: 10, scope: !5930)
!6025 = !DILocation(line: 3016, column: 10, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 3016, column: 8)
!6027 = !DILocation(line: 3016, column: 8, scope: !5930)
!6028 = !DILocation(line: 3020, column: 8, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 3020, column: 8)
!6030 = !DILocation(line: 3020, column: 11, scope: !6029)
!6031 = !DILocation(line: 3020, column: 17, scope: !6029)
!6032 = !DILocation(line: 3020, column: 19, scope: !6029)
!6033 = !DILocation(line: 3020, column: 52, scope: !6029)
!6034 = !DILocation(line: 3020, column: 22, scope: !6029)
!6035 = !DILocation(line: 3020, column: 8, scope: !5930)
!6036 = !DILocation(line: 3023, column: 10, scope: !5930)
!6037 = !DILocation(line: 3025, column: 8, scope: !5930)
!6038 = !DILocation(line: 3027, column: 6, scope: !5975)
!6039 = !DILocation(line: 3028, column: 6, scope: !5975)
!6040 = !DILocation(line: 3026, column: 12, scope: !5975)
!6041 = !DILocation(line: 3026, column: 6, scope: !5975)
!6042 = !DILocation(line: 3030, column: 51, scope: !5930)
!6043 = !DILocation(line: 3031, column: 8, scope: !5930)
!6044 = !DILocation(line: 3030, column: 14, scope: !5930)
!6045 = !DILocation(line: 3038, column: 19, scope: !5978)
!6046 = !DILocation(line: 3038, column: 16, scope: !5978)
!6047 = !DILocation(line: 3038, column: 8, scope: !5930)
!6048 = !DILocation(line: 3040, column: 16, scope: !5977)
!6049 = !DILocation(line: 3041, column: 22, scope: !5977)
!6050 = !DILocation(line: 3041, column: 28, scope: !5977)
!6051 = !DILocation(line: 3041, column: 15, scope: !5977)
!6052 = !DILocation(line: 3041, column: 46, scope: !5977)
!6053 = !DILocation(line: 3043, column: 13, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 3043, column: 13)
!6055 = !DILocation(line: 3043, column: 32, scope: !6054)
!6056 = !DILocation(line: 3043, column: 13, scope: !5978)
!6057 = !DILocation(line: 3045, column: 15, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 3044, column: 6)
!6059 = !DILocation(line: 3047, column: 16, scope: !6058)
!6060 = !DILocation(line: 3048, column: 12, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 3048, column: 12)
!6062 = !DILocation(line: 3048, column: 18, scope: !6061)
!6063 = !DILocation(line: 3048, column: 28, scope: !6061)
!6064 = !DILocation(line: 3048, column: 34, scope: !6061)
!6065 = !DILocation(line: 3048, column: 21, scope: !6061)
!6066 = !DILocation(line: 3048, column: 12, scope: !6058)
!6067 = !DILocation(line: 0, scope: !5978)
!6068 = !DILocation(line: 3058, column: 8, scope: !5980)
!6069 = !DILocation(line: 3058, column: 13, scope: !5980)
!6070 = !DILocation(line: 3059, column: 22, scope: !5980)
!6071 = !DILocation(line: 3059, column: 25, scope: !5980)
!6072 = !DILocation(line: 3059, column: 11, scope: !5980)
!6073 = !DILocation(line: 3058, column: 8, scope: !5930)
!6074 = !DILocation(line: 3062, column: 15, scope: !5930)
!6075 = !DILocation(line: 3062, column: 18, scope: !5930)
!6076 = !DILocation(line: 3063, column: 13, scope: !5946)
!6077 = !DILocation(line: 3064, column: 16, scope: !5946)
!6078 = !DILocation(line: 3064, column: 8, scope: !5946)
!6079 = !DILocation(line: 3065, column: 19, scope: !5946)
!6080 = !DILocation(line: 3065, column: 16, scope: !5946)
!6081 = !DILocation(line: 3063, column: 8, scope: !5930)
!6082 = !DILocation(line: 3067, column: 8, scope: !5945)
!6083 = !DILocation(line: 3071, column: 12, scope: !5945)
!6084 = !DILocation(line: 3073, column: 15, scope: !5943)
!6085 = !DILocation(line: 0, scope: !5943)
!6086 = !DILocation(line: 3075, column: 28, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 3074, column: 9)
!6088 = !DILocation(line: 3075, column: 45, scope: !6087)
!6089 = !DILocation(line: 3075, column: 7, scope: !6087)
!6090 = !DILocation(line: 3076, column: 3, scope: !5943)
!6091 = !DILocation(line: 3078, column: 12, scope: !5983)
!6092 = !DILocation(line: 3078, column: 22, scope: !5983)
!6093 = !DILocation(line: 3078, column: 12, scope: !5945)
!6094 = !DILocation(line: 3082, column: 14, scope: !5982)
!6095 = !DILocation(line: 3080, column: 5, scope: !5982)
!6096 = !DILocation(line: 3083, column: 16, scope: !5982)
!6097 = !DILocation(line: 3083, column: 27, scope: !5982)
!6098 = !DILocation(line: 3083, column: 5, scope: !5982)
!6099 = !DILocation(line: 3084, column: 14, scope: !5982)
!6100 = !DILocation(line: 3085, column: 7, scope: !5982)
!6101 = !DILocation(line: 3085, column: 10, scope: !5982)
!6102 = !DILocation(line: 3085, column: 15, scope: !5982)
!6103 = !DILocation(line: 3085, column: 32, scope: !5982)
!6104 = !DILocation(line: 3085, column: 45, scope: !5982)
!6105 = !DILocation(line: 3084, column: 5, scope: !5982)
!6106 = !DILocation(line: 3086, column: 3, scope: !5982)
!6107 = !DILocation(line: 0, scope: !5933)
!6108 = !DILocation(line: 3006, column: 39, scope: !5931)
!6109 = !DILocation(line: 3006, column: 7, scope: !5931)
!6110 = distinct !{!6110, !6018, !6111}
!6111 = !DILocation(line: 3091, column: 2, scope: !5932)
!6112 = !DILocation(line: 3092, column: 12, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 3092, column: 11)
!6114 = !DILocation(line: 3092, column: 11, scope: !5933)
!6115 = !DILocation(line: 3093, column: 2, scope: !6113)
!6116 = !DILocation(line: 2979, column: 3, scope: !5934)
!6117 = !DILocation(line: 3095, column: 3, scope: !5913)
!6118 = distinct !DISubprogram(name: "ei_cond", scope: !146, file: !146, line: 771, type: !6119, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!6, !3896, !2184}
!6121 = !{!6122, !6123}
!6122 = !DILocalVariable(name: "ei", arg: 1, scope: !6118, file: !146, line: 771, type: !3896)
!6123 = !DILocalVariable(name: "p", arg: 2, scope: !6118, file: !146, line: 771, type: !2184)
!6124 = !DILocation(line: 0, scope: !6118)
!6125 = !DILocation(line: 773, column: 8, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6118, file: !146, line: 773, column: 7)
!6127 = !DILocation(line: 773, column: 7, scope: !6118)
!6128 = !DILocation(line: 775, column: 12, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6126, file: !146, line: 774, column: 5)
!6130 = !DILocation(line: 776, column: 7, scope: !6129)
!6131 = !DILocation(line: 781, column: 7, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6126, file: !146, line: 779, column: 5)
!6133 = !DILocation(line: 0, scope: !6126)
!6134 = !DILocation(line: 783, column: 1, scope: !6118)
!6135 = distinct !DISubprogram(name: "find_bypass_set", scope: !3, file: !3, line: 2889, type: !6136, scopeLine: 2890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6138)
!6136 = !DISubroutineType(types: !6137)
!6137 = !{!1977, !772, !772}
!6138 = !{!6139, !6140, !6141, !6142, !6146}
!6139 = !DILocalVariable(name: "regno", arg: 1, scope: !6135, file: !3, line: 2889, type: !772)
!6140 = !DILocalVariable(name: "bb", arg: 2, scope: !6135, file: !3, line: 2889, type: !772)
!6141 = !DILocalVariable(name: "result", scope: !6135, file: !3, line: 2891, type: !1977)
!6142 = !DILocalVariable(name: "src", scope: !6143, file: !3, line: 2895, type: !787)
!6143 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 2894, column: 5)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 2893, column: 3)
!6145 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 2893, column: 3)
!6146 = !DILocalVariable(name: "set", scope: !6143, file: !3, line: 2896, type: !1977)
!6147 = !DILocation(line: 0, scope: !6135)
!6148 = !DILocation(line: 0, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 2900, column: 8)
!6150 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 2899, column: 2)
!6151 = !DILocation(line: 2893, column: 3, scope: !6135)
!6152 = !DILocation(line: 2891, column: 16, scope: !6135)
!6153 = !DILocation(line: 2896, column: 26, scope: !6143)
!6154 = !DILocation(line: 0, scope: !6143)
!6155 = !DILocation(line: 2898, column: 7, scope: !6143)
!6156 = !DILocation(line: 2900, column: 8, scope: !6149)
!6157 = !DILocation(line: 2900, column: 8, scope: !6150)
!6158 = !DILocation(line: 2902, column: 10, scope: !6150)
!6159 = distinct !{!6159, !6155, !6160}
!6160 = !DILocation(line: 2903, column: 2, scope: !6143)
!6161 = !DILocation(line: 2908, column: 7, scope: !6143)
!6162 = !DILocation(line: 2910, column: 13, scope: !6143)
!6163 = !DILocation(line: 2911, column: 11, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 2911, column: 11)
!6165 = !DILocation(line: 2911, column: 11, scope: !6143)
!6166 = !DILocation(line: 2914, column: 13, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 2914, column: 11)
!6168 = !DILocation(line: 2914, column: 11, scope: !6143)
!6169 = !DILocation(line: 2917, column: 15, scope: !6143)
!6170 = !DILocation(line: 2918, column: 5, scope: !6144)
!6171 = distinct !{!6171, !6172, !6173}
!6172 = !DILocation(line: 2893, column: 3, scope: !6145)
!6173 = !DILocation(line: 2918, column: 5, scope: !6145)
!6174 = !DILocation(line: 2919, column: 3, scope: !6135)
!6175 = distinct !DISubprogram(name: "reg_killed_on_edge", scope: !3, file: !3, line: 2930, type: !6176, scopeLine: 2931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6181)
!6176 = !DISubroutineType(types: !6177)
!6177 = !{!6, !2124, !6178}
!6178 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_edge", file: !788, line: 109, baseType: !6179)
!6179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6180, size: 64)
!6180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!6181 = !{!6182, !6183, !6184}
!6182 = !DILocalVariable(name: "reg", arg: 1, scope: !6175, file: !3, line: 2930, type: !2124)
!6183 = !DILocalVariable(name: "e", arg: 2, scope: !6175, file: !3, line: 2930, type: !6178)
!6184 = !DILocalVariable(name: "insn", scope: !6175, file: !3, line: 2932, type: !787)
!6185 = !DILocation(line: 0, scope: !6175)
!6186 = !DILocation(line: 2934, column: 18, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 2934, column: 3)
!6188 = !DILocation(line: 2934, column: 24, scope: !6187)
!6189 = !DILocation(line: 2934, column: 8, scope: !6187)
!6190 = !DILocation(line: 0, scope: !6187)
!6191 = !DILocation(line: 2934, column: 3, scope: !6187)
!6192 = !DILocation(line: 2935, column: 9, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 2935, column: 9)
!6194 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 2934, column: 3)
!6195 = !DILocation(line: 2935, column: 23, scope: !6193)
!6196 = !DILocation(line: 2935, column: 26, scope: !6193)
!6197 = !DILocation(line: 2935, column: 9, scope: !6194)
!6198 = !DILocation(line: 2934, column: 40, scope: !6194)
!6199 = !DILocation(line: 2934, column: 3, scope: !6194)
!6200 = distinct !{!6200, !6191, !6201}
!6201 = !DILocation(line: 2936, column: 14, scope: !6187)
!6202 = !DILocation(line: 2939, column: 1, scope: !6175)
!6203 = distinct !DISubprogram(name: "free_modify_mem_tables", scope: !3, file: !3, line: 1820, type: !2657, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!6204 = !DILocation(line: 1822, column: 3, scope: !6203)
!6205 = !DILocation(line: 1823, column: 9, scope: !6203)
!6206 = !DILocation(line: 1823, column: 3, scope: !6203)
!6207 = !DILocation(line: 1824, column: 9, scope: !6203)
!6208 = !DILocation(line: 1824, column: 3, scope: !6203)
!6209 = !DILocation(line: 1825, column: 19, scope: !6203)
!6210 = !DILocation(line: 1826, column: 25, scope: !6203)
!6211 = !DILocation(line: 1827, column: 1, scope: !6203)
!6212 = distinct !DISubprogram(name: "one_pre_gcse_pass", scope: !3, file: !3, line: 3943, type: !2220, scopeLine: 3944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6213)
!6213 = !{!6214}
!6214 = !DILocalVariable(name: "changed", scope: !6212, file: !3, line: 3945, type: !772)
!6215 = !DILocation(line: 0, scope: !6212)
!6216 = !DILocation(line: 3947, column: 20, scope: !6212)
!6217 = !DILocation(line: 3948, column: 21, scope: !6212)
!6218 = !DILocation(line: 3951, column: 7, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 3951, column: 7)
!6220 = !DILocation(line: 3951, column: 22, scope: !6219)
!6221 = !DILocation(line: 3952, column: 7, scope: !6219)
!6222 = !DILocation(line: 3952, column: 10, scope: !6219)
!6223 = !DILocation(line: 3951, column: 7, scope: !6212)
!6224 = !DILocation(line: 3956, column: 3, scope: !6212)
!6225 = !DILocation(line: 3958, column: 14, scope: !6212)
!6226 = !DILocation(line: 3959, column: 3, scope: !6212)
!6227 = !DILocation(line: 3960, column: 3, scope: !6212)
!6228 = !DILocation(line: 3962, column: 3, scope: !6212)
!6229 = !DILocation(line: 3963, column: 3, scope: !6212)
!6230 = !DILocation(line: 3964, column: 7, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 3964, column: 7)
!6232 = !DILocation(line: 3964, column: 7, scope: !6212)
!6233 = !DILocation(line: 3965, column: 5, scope: !6231)
!6234 = !DILocation(line: 3967, column: 3, scope: !6212)
!6235 = !DILocation(line: 3968, column: 3, scope: !6212)
!6236 = !DILocation(line: 3969, column: 7, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 3969, column: 7)
!6238 = !DILocation(line: 3969, column: 7, scope: !6212)
!6239 = !DILocation(line: 3970, column: 5, scope: !6237)
!6240 = !DILocation(line: 3972, column: 23, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 3972, column: 7)
!6242 = !DILocation(line: 3972, column: 31, scope: !6241)
!6243 = !DILocation(line: 3972, column: 7, scope: !6212)
!6244 = !DILocation(line: 3974, column: 22, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 3973, column: 5)
!6246 = !DILocation(line: 3974, column: 7, scope: !6245)
!6247 = !DILocation(line: 3975, column: 7, scope: !6245)
!6248 = !DILocation(line: 3976, column: 18, scope: !6245)
!6249 = !DILocation(line: 3977, column: 23, scope: !6245)
!6250 = !DILocation(line: 3977, column: 7, scope: !6245)
!6251 = !DILocation(line: 3978, column: 7, scope: !6245)
!6252 = !DILocation(line: 3979, column: 5, scope: !6245)
!6253 = !DILocation(line: 3981, column: 3, scope: !6212)
!6254 = !DILocation(line: 3982, column: 3, scope: !6212)
!6255 = !DILocation(line: 3983, column: 3, scope: !6212)
!6256 = !DILocation(line: 3985, column: 3, scope: !6212)
!6257 = !DILocation(line: 3986, column: 3, scope: !6212)
!6258 = !DILocation(line: 3989, column: 3, scope: !6212)
!6259 = !DILocation(line: 3991, column: 7, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 3991, column: 7)
!6261 = !DILocation(line: 3991, column: 7, scope: !6212)
!6262 = !DILocation(line: 3994, column: 9, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 3992, column: 5)
!6264 = !DILocation(line: 3994, column: 35, scope: !6263)
!6265 = !DILocation(line: 3994, column: 51, scope: !6263)
!6266 = !DILocation(line: 3993, column: 7, scope: !6263)
!6267 = !DILocation(line: 3995, column: 16, scope: !6263)
!6268 = !DILocation(line: 3996, column: 9, scope: !6263)
!6269 = !DILocation(line: 3996, column: 27, scope: !6263)
!6270 = !DILocation(line: 3995, column: 7, scope: !6263)
!6271 = !DILocation(line: 3997, column: 5, scope: !6263)
!6272 = !DILocation(line: 4000, column: 1, scope: !6212)
!6273 = distinct !DISubprogram(name: "compute_ld_motion_mems", scope: !3, file: !3, line: 4733, type: !2657, scopeLine: 4734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6274)
!6274 = !{!6275, !6276, !6277, !6278, !6289}
!6275 = !DILocalVariable(name: "ptr", scope: !6273, file: !3, line: 4735, type: !2001)
!6276 = !DILocalVariable(name: "bb", scope: !6273, file: !3, line: 4736, type: !1338)
!6277 = !DILocalVariable(name: "insn", scope: !6273, file: !3, line: 4737, type: !787)
!6278 = !DILocalVariable(name: "src", scope: !6279, file: !3, line: 4751, type: !787)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 4750, column: 3)
!6280 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 4749, column: 12)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 4748, column: 6)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 4747, column: 8)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 4746, column: 2)
!6284 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 4745, column: 7)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 4745, column: 7)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4744, column: 5)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 4743, column: 3)
!6288 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 4743, column: 3)
!6289 = !DILocalVariable(name: "dest", scope: !6279, file: !3, line: 4752, type: !787)
!6290 = !DILocation(line: 4739, column: 17, scope: !6273)
!6291 = !DILocation(line: 4740, column: 20, scope: !6273)
!6292 = !DILocation(line: 4740, column: 18, scope: !6273)
!6293 = !DILocation(line: 4743, column: 3, scope: !6288)
!6294 = !DILocation(line: 4743, column: 3, scope: !6287)
!6295 = !DILocation(line: 0, scope: !6288)
!6296 = !DILocation(line: 0, scope: !6273)
!6297 = !DILocation(line: 4745, column: 7, scope: !6285)
!6298 = !DILocation(line: 0, scope: !6285)
!6299 = !DILocation(line: 4745, column: 7, scope: !6284)
!6300 = !DILocation(line: 4747, column: 8, scope: !6282)
!6301 = !DILocation(line: 4747, column: 8, scope: !6283)
!6302 = !DILocation(line: 4749, column: 12, scope: !6280)
!6303 = !DILocation(line: 4749, column: 38, scope: !6280)
!6304 = !DILocation(line: 4749, column: 12, scope: !6281)
!6305 = !DILocation(line: 4751, column: 15, scope: !6279)
!6306 = !DILocation(line: 0, scope: !6279)
!6307 = !DILocation(line: 4752, column: 16, scope: !6279)
!6308 = !DILocation(line: 4755, column: 9, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 4755, column: 9)
!6310 = !DILocation(line: 4755, column: 21, scope: !6309)
!6311 = !DILocation(line: 4755, column: 24, scope: !6309)
!6312 = !DILocation(line: 4755, column: 9, scope: !6279)
!6313 = !DILocation(line: 4757, column: 15, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 4756, column: 7)
!6315 = !DILocation(line: 4758, column: 13, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 4758, column: 13)
!6317 = !DILocation(line: 4758, column: 13, scope: !6314)
!6318 = !DILocation(line: 4759, column: 45, scope: !6316)
!6319 = !DILocation(line: 4759, column: 17, scope: !6316)
!6320 = !DILocation(line: 4759, column: 15, scope: !6316)
!6321 = !DILocation(line: 4759, column: 4, scope: !6316)
!6322 = !DILocation(line: 4761, column: 9, scope: !6316)
!6323 = !DILocation(line: 4761, column: 17, scope: !6316)
!6324 = !DILocation(line: 4766, column: 9, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 4764, column: 7)
!6326 = !DILocation(line: 4773, column: 9, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 4773, column: 9)
!6328 = !DILocation(line: 4773, column: 22, scope: !6327)
!6329 = !DILocation(line: 4773, column: 25, scope: !6327)
!6330 = !DILocation(line: 4773, column: 9, scope: !6279)
!6331 = !DILocation(line: 4775, column: 15, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 4774, column: 7)
!6333 = !DILocation(line: 4777, column: 15, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 4777, column: 13)
!6335 = !DILocation(line: 4778, column: 6, scope: !6334)
!6336 = !DILocation(line: 4778, column: 24, scope: !6334)
!6337 = !DILocation(line: 4781, column: 6, scope: !6334)
!6338 = !DILocation(line: 4781, column: 9, scope: !6334)
!6339 = !DILocation(line: 4777, column: 13, scope: !6332)
!6340 = !DILocation(line: 4782, column: 46, scope: !6334)
!6341 = !DILocation(line: 4782, column: 18, scope: !6334)
!6342 = !DILocation(line: 4782, column: 16, scope: !6334)
!6343 = !DILocation(line: 4782, column: 4, scope: !6334)
!6344 = !DILocation(line: 4784, column: 9, scope: !6334)
!6345 = !DILocation(line: 4784, column: 17, scope: !6334)
!6346 = !DILocation(line: 0, scope: !6280)
!6347 = !DILocation(line: 4788, column: 3, scope: !6280)
!6348 = distinct !{!6348, !6297, !6349}
!6349 = !DILocation(line: 4790, column: 2, scope: !6285)
!6350 = !DILocation(line: 0, scope: !6287)
!6351 = distinct !{!6351, !6293, !6352}
!6352 = !DILocation(line: 4791, column: 5, scope: !6288)
!6353 = !DILocation(line: 4792, column: 1, scope: !6273)
!6354 = distinct !DISubprogram(name: "trim_ld_motion_mems", scope: !3, file: !3, line: 4798, type: !2657, scopeLine: 4799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6355)
!6355 = !{!6356, !6358, !6359, !6361}
!6356 = !DILocalVariable(name: "last", scope: !6354, file: !3, line: 4800, type: !6357)
!6357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!6358 = !DILocalVariable(name: "ptr", scope: !6354, file: !3, line: 4801, type: !2001)
!6359 = !DILocalVariable(name: "expr", scope: !6360, file: !3, line: 4805, type: !1977)
!6360 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 4804, column: 5)
!6361 = !DILocalVariable(name: "hash", scope: !6362, file: !3, line: 4811, type: !9)
!6362 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 4809, column: 2)
!6363 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 4808, column: 11)
!6364 = !DILocation(line: 0, scope: !6354)
!6365 = !DILocation(line: 4801, column: 26, scope: !6354)
!6366 = !DILocation(line: 4803, column: 3, scope: !6354)
!6367 = !DILocation(line: 4803, column: 14, scope: !6354)
!6368 = !DILocation(line: 4808, column: 18, scope: !6363)
!6369 = !DILocation(line: 4808, column: 13, scope: !6363)
!6370 = !DILocation(line: 4808, column: 11, scope: !6360)
!6371 = !DILocation(line: 4811, column: 29, scope: !6362)
!6372 = !DILocation(line: 4811, column: 58, scope: !6362)
!6373 = !DILocation(line: 4811, column: 40, scope: !6362)
!6374 = !DILocation(line: 0, scope: !6362)
!6375 = !DILocation(line: 4813, column: 32, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4813, column: 4)
!6377 = !DILocation(line: 4813, column: 16, scope: !6376)
!6378 = !DILocation(line: 0, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 4816, column: 10)
!6380 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 4813, column: 4)
!6381 = !DILocation(line: 4813, column: 9, scope: !6376)
!6382 = !DILocation(line: 0, scope: !6376)
!6383 = !DILocation(line: 0, scope: !6360)
!6384 = !DILocation(line: 4814, column: 14, scope: !6380)
!6385 = !DILocation(line: 4813, column: 4, scope: !6376)
!6386 = !DILocation(line: 4816, column: 30, scope: !6379)
!6387 = !DILocation(line: 4816, column: 41, scope: !6379)
!6388 = !DILocation(line: 4816, column: 10, scope: !6379)
!6389 = !DILocation(line: 4816, column: 10, scope: !6380)
!6390 = !DILocation(line: 4815, column: 22, scope: !6380)
!6391 = !DILocation(line: 4813, column: 4, scope: !6380)
!6392 = distinct !{!6392, !6385, !6393}
!6393 = !DILocation(line: 4817, column: 8, scope: !6376)
!6394 = !DILocation(line: 4822, column: 11, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 4822, column: 11)
!6396 = !DILocation(line: 0, scope: !6363)
!6397 = !DILocation(line: 4822, column: 11, scope: !6360)
!6398 = !DILocation(line: 4825, column: 9, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 4823, column: 2)
!6400 = !DILocation(line: 4825, column: 14, scope: !6399)
!6401 = !DILocation(line: 4826, column: 18, scope: !6399)
!6402 = !DILocation(line: 4827, column: 15, scope: !6399)
!6403 = !DILocation(line: 4828, column: 2, scope: !6399)
!6404 = !DILocation(line: 4831, column: 17, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 4830, column: 2)
!6406 = !DILocation(line: 4831, column: 10, scope: !6405)
!6407 = !DILocation(line: 4832, column: 31, scope: !6405)
!6408 = !DILocation(line: 4832, column: 57, scope: !6405)
!6409 = !DILocation(line: 4832, column: 4, scope: !6405)
!6410 = !DILocation(line: 4833, column: 4, scope: !6405)
!6411 = !DILocation(line: 4834, column: 10, scope: !6405)
!6412 = !DILocation(line: 0, scope: !6395)
!6413 = distinct !{!6413, !6366, !6414}
!6414 = !DILocation(line: 4836, column: 5, scope: !6354)
!6415 = !DILocation(line: 4839, column: 7, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 4839, column: 7)
!6417 = !DILocation(line: 4839, column: 20, scope: !6416)
!6418 = !DILocation(line: 4839, column: 34, scope: !6416)
!6419 = !DILocation(line: 4839, column: 17, scope: !6416)
!6420 = !DILocation(line: 4840, column: 5, scope: !6416)
!6421 = !DILocation(line: 4841, column: 1, scope: !6354)
!6422 = distinct !DISubprogram(name: "alloc_pre_mem", scope: !3, file: !3, line: 3201, type: !3199, scopeLine: 3202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6423)
!6423 = !{!6424, !6425}
!6424 = !DILocalVariable(name: "n_blocks", arg: 1, scope: !6422, file: !3, line: 3201, type: !772)
!6425 = !DILocalVariable(name: "n_exprs", arg: 2, scope: !6422, file: !3, line: 3201, type: !772)
!6426 = !DILocation(line: 0, scope: !6422)
!6427 = !DILocation(line: 3203, column: 12, scope: !6422)
!6428 = !DILocation(line: 3203, column: 10, scope: !6422)
!6429 = !DILocation(line: 3204, column: 10, scope: !6422)
!6430 = !DILocation(line: 3204, column: 8, scope: !6422)
!6431 = !DILocation(line: 3205, column: 12, scope: !6422)
!6432 = !DILocation(line: 3205, column: 10, scope: !6422)
!6433 = !DILocation(line: 3209, column: 18, scope: !6422)
!6434 = !DILocation(line: 3210, column: 18, scope: !6422)
!6435 = !DILocation(line: 3211, column: 13, scope: !6422)
!6436 = !DILocation(line: 3211, column: 11, scope: !6422)
!6437 = !DILocation(line: 3214, column: 1, scope: !6422)
!6438 = distinct !DISubprogram(name: "compute_pre_data", scope: !3, file: !3, line: 3242, type: !2657, scopeLine: 3243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6439)
!6439 = !{!6440, !6441, !6442, !6443, !6447, !6451}
!6440 = !DILocalVariable(name: "trapping_expr", scope: !6438, file: !3, line: 3244, type: !2136)
!6441 = !DILocalVariable(name: "bb", scope: !6438, file: !3, line: 3245, type: !1338)
!6442 = !DILocalVariable(name: "ui", scope: !6438, file: !3, line: 3246, type: !9)
!6443 = !DILocalVariable(name: "e", scope: !6444, file: !3, line: 3256, type: !1977)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 3255, column: 5)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 3254, column: 3)
!6446 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 3254, column: 3)
!6447 = !DILocalVariable(name: "e", scope: !6448, file: !3, line: 3269, type: !1355)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 3268, column: 5)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 3267, column: 3)
!6450 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 3267, column: 3)
!6451 = !DILocalVariable(name: "ei", scope: !6448, file: !3, line: 3270, type: !3896)
!6452 = !DILocation(line: 3248, column: 29, scope: !6438)
!6453 = !DILocation(line: 3248, column: 37, scope: !6438)
!6454 = !DILocation(line: 3248, column: 43, scope: !6438)
!6455 = !DILocation(line: 3248, column: 3, scope: !6438)
!6456 = !DILocation(line: 3249, column: 24, scope: !6438)
!6457 = !DILocation(line: 3249, column: 33, scope: !6438)
!6458 = !DILocation(line: 3249, column: 3, scope: !6438)
!6459 = !DILocation(line: 3252, column: 50, scope: !6438)
!6460 = !DILocation(line: 3252, column: 19, scope: !6438)
!6461 = !DILocation(line: 0, scope: !6438)
!6462 = !DILocation(line: 3253, column: 3, scope: !6438)
!6463 = !DILocation(line: 3254, column: 8, scope: !6446)
!6464 = !DILocation(line: 0, scope: !6446)
!6465 = !DILocation(line: 3254, column: 37, scope: !6445)
!6466 = !DILocation(line: 3254, column: 19, scope: !6445)
!6467 = !DILocation(line: 3254, column: 3, scope: !6446)
!6468 = !DILocation(line: 3257, column: 32, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 3257, column: 7)
!6470 = !DILocation(line: 3257, column: 16, scope: !6469)
!6471 = !DILocation(line: 3257, column: 12, scope: !6469)
!6472 = !DILocation(line: 0, scope: !6469)
!6473 = !DILocation(line: 0, scope: !6444)
!6474 = !DILocation(line: 3257, column: 45, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 3257, column: 7)
!6476 = !DILocation(line: 3257, column: 7, scope: !6469)
!6477 = !DILocation(line: 3258, column: 21, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3258, column: 6)
!6479 = !DILocation(line: 3258, column: 6, scope: !6478)
!6480 = !DILocation(line: 3258, column: 6, scope: !6475)
!6481 = !DILocation(line: 3259, column: 31, scope: !6478)
!6482 = !DILocation(line: 3259, column: 4, scope: !6478)
!6483 = !DILocation(line: 3257, column: 61, scope: !6475)
!6484 = !DILocation(line: 3257, column: 7, scope: !6475)
!6485 = distinct !{!6485, !6476, !6486}
!6486 = !DILocation(line: 3259, column: 43, scope: !6469)
!6487 = !DILocation(line: 3254, column: 45, scope: !6445)
!6488 = !DILocation(line: 3254, column: 3, scope: !6445)
!6489 = distinct !{!6489, !6467, !6490}
!6490 = !DILocation(line: 3260, column: 5, scope: !6446)
!6491 = !DILocation(line: 3267, column: 3, scope: !6450)
!6492 = !DILocation(line: 0, scope: !6448)
!6493 = !DILocation(line: 0, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 3276, column: 7)
!6495 = !DILocation(line: 0, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 3276, column: 7)
!6497 = !DILocation(line: 3267, column: 3, scope: !6449)
!6498 = !DILocation(line: 0, scope: !6450)
!6499 = !DILocation(line: 3269, column: 7, scope: !6448)
!6500 = !DILocation(line: 3270, column: 7, scope: !6448)
!6501 = !DILocation(line: 3276, column: 7, scope: !6494)
!6502 = !DILocation(line: 3276, column: 7, scope: !6496)
!6503 = !DILocation(line: 3277, column: 6, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 3277, column: 6)
!6505 = !DILocation(line: 3277, column: 9, scope: !6504)
!6506 = !DILocation(line: 3277, column: 15, scope: !6504)
!6507 = !DILocation(line: 3277, column: 6, scope: !6496)
!6508 = !DILocation(line: 3279, column: 26, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 3278, column: 4)
!6510 = !DILocation(line: 3279, column: 37, scope: !6509)
!6511 = !DILocation(line: 3279, column: 6, scope: !6509)
!6512 = !DILocation(line: 3280, column: 26, scope: !6509)
!6513 = !DILocation(line: 3280, column: 37, scope: !6509)
!6514 = !DILocation(line: 3280, column: 6, scope: !6509)
!6515 = !DILocation(line: 3281, column: 6, scope: !6509)
!6516 = distinct !{!6516, !6501, !6517}
!6517 = !DILocation(line: 3282, column: 4, scope: !6494)
!6518 = !DILocation(line: 3284, column: 23, scope: !6448)
!6519 = !DILocation(line: 3284, column: 35, scope: !6448)
!6520 = !DILocation(line: 3284, column: 43, scope: !6448)
!6521 = !DILocation(line: 3284, column: 62, scope: !6448)
!6522 = !DILocation(line: 3284, column: 7, scope: !6448)
!6523 = !DILocation(line: 3285, column: 20, scope: !6448)
!6524 = !DILocation(line: 3285, column: 32, scope: !6448)
!6525 = !DILocation(line: 3285, column: 7, scope: !6448)
!6526 = !DILocation(line: 3286, column: 5, scope: !6449)
!6527 = !DILocation(line: 0, scope: !6449)
!6528 = distinct !{!6528, !6491, !6529}
!6529 = !DILocation(line: 3286, column: 5, scope: !6450)
!6530 = !DILocation(line: 3288, column: 45, scope: !6438)
!6531 = !DILocation(line: 3288, column: 54, scope: !6438)
!6532 = !DILocation(line: 3288, column: 62, scope: !6438)
!6533 = !DILocation(line: 3288, column: 68, scope: !6438)
!6534 = !DILocation(line: 3289, column: 8, scope: !6438)
!6535 = !DILocation(line: 3288, column: 15, scope: !6438)
!6536 = !DILocation(line: 3288, column: 13, scope: !6438)
!6537 = !DILocation(line: 3290, column: 3, scope: !6438)
!6538 = !DILocation(line: 3291, column: 10, scope: !6438)
!6539 = !DILocation(line: 3292, column: 3, scope: !6438)
!6540 = !DILocation(line: 3293, column: 11, scope: !6438)
!6541 = !DILocation(line: 3294, column: 3, scope: !6438)
!6542 = !DILocation(line: 3295, column: 1, scope: !6438)
!6543 = distinct !DISubprogram(name: "pre_gcse", scope: !3, file: !3, line: 3902, type: !2220, scopeLine: 3903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6544)
!6544 = !{!6545, !6546, !6547, !6548, !6549}
!6545 = !DILocalVariable(name: "i", scope: !6543, file: !3, line: 3904, type: !9)
!6546 = !DILocalVariable(name: "did_insert", scope: !6543, file: !3, line: 3905, type: !772)
!6547 = !DILocalVariable(name: "changed", scope: !6543, file: !3, line: 3905, type: !772)
!6548 = !DILocalVariable(name: "index_map", scope: !6543, file: !3, line: 3906, type: !1976)
!6549 = !DILocalVariable(name: "expr", scope: !6543, file: !3, line: 3907, type: !1977)
!6550 = !DILocation(line: 3912, column: 15, scope: !6543)
!6551 = !DILocation(line: 0, scope: !6543)
!6552 = !DILocation(line: 3913, column: 8, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 3913, column: 3)
!6554 = !DILocation(line: 0, scope: !6553)
!6555 = !DILocation(line: 3913, column: 35, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 3913, column: 3)
!6557 = !DILocation(line: 3913, column: 17, scope: !6556)
!6558 = !DILocation(line: 3913, column: 3, scope: !6553)
!6559 = !DILocation(line: 3914, column: 33, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 3914, column: 5)
!6561 = !DILocation(line: 3914, column: 17, scope: !6560)
!6562 = !DILocation(line: 3914, column: 10, scope: !6560)
!6563 = !DILocation(line: 0, scope: !6560)
!6564 = !DILocation(line: 3914, column: 48, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 3914, column: 5)
!6566 = !DILocation(line: 3914, column: 5, scope: !6560)
!6567 = !DILocation(line: 3915, column: 23, scope: !6565)
!6568 = !DILocation(line: 3915, column: 7, scope: !6565)
!6569 = !DILocation(line: 3915, column: 37, scope: !6565)
!6570 = !DILocation(line: 3914, column: 70, scope: !6565)
!6571 = !DILocation(line: 3914, column: 5, scope: !6565)
!6572 = distinct !{!6572, !6566, !6573}
!6573 = !DILocation(line: 3915, column: 39, scope: !6560)
!6574 = !DILocation(line: 3913, column: 42, scope: !6556)
!6575 = !DILocation(line: 3913, column: 3, scope: !6556)
!6576 = distinct !{!6576, !6558, !6577}
!6577 = !DILocation(line: 3915, column: 39, scope: !6553)
!6578 = !DILocation(line: 3922, column: 13, scope: !6543)
!6579 = !DILocation(line: 3923, column: 33, scope: !6543)
!6580 = !DILocation(line: 3923, column: 16, scope: !6543)
!6581 = !DILocation(line: 3927, column: 3, scope: !6543)
!6582 = !DILocation(line: 3928, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 3928, column: 7)
!6584 = !DILocation(line: 3928, column: 7, scope: !6543)
!6585 = !DILocation(line: 3930, column: 7, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 3929, column: 5)
!6587 = !DILocation(line: 3932, column: 5, scope: !6586)
!6588 = !DILocation(line: 3934, column: 3, scope: !6543)
!6589 = !DILocation(line: 3935, column: 3, scope: !6543)
!6590 = distinct !DISubprogram(name: "free_pre_mem", scope: !3, file: !3, line: 3219, type: !2657, scopeLine: 3220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!6591 = !DILocation(line: 3221, column: 3, scope: !6590)
!6592 = !DILocation(line: 3222, column: 3, scope: !6590)
!6593 = !DILocation(line: 3230, column: 7, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3230, column: 7)
!6595 = !DILocation(line: 3230, column: 7, scope: !6590)
!6596 = !DILocation(line: 3231, column: 5, scope: !6594)
!6597 = !DILocation(line: 3232, column: 7, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3232, column: 7)
!6599 = !DILocation(line: 3232, column: 7, scope: !6590)
!6600 = !DILocation(line: 3233, column: 5, scope: !6598)
!6601 = !DILocation(line: 3235, column: 17, scope: !6590)
!6602 = !DILocation(line: 3235, column: 10, scope: !6590)
!6603 = !DILocation(line: 3236, column: 65, scope: !6590)
!6604 = !DILocation(line: 3236, column: 48, scope: !6590)
!6605 = !DILocation(line: 3237, column: 1, scope: !6590)
!6606 = distinct !DISubprogram(name: "free_ldst_mems", scope: !3, file: !3, line: 4567, type: !2657, scopeLine: 4568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6607)
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "tmp", scope: !6609, file: !3, line: 4575, type: !2001)
!6609 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 4574, column: 5)
!6610 = !DILocation(line: 4569, column: 7, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 4569, column: 7)
!6612 = !DILocation(line: 4569, column: 7, scope: !6606)
!6613 = !DILocation(line: 4570, column: 5, scope: !6611)
!6614 = !DILocation(line: 4571, column: 18, scope: !6606)
!6615 = !DILocation(line: 4573, column: 3, scope: !6606)
!6616 = !DILocation(line: 4573, column: 10, scope: !6606)
!6617 = !DILocation(line: 0, scope: !6609)
!6618 = !DILocation(line: 4577, column: 38, scope: !6609)
!6619 = !DILocation(line: 4577, column: 21, scope: !6609)
!6620 = !DILocation(line: 4579, column: 7, scope: !6609)
!6621 = distinct !{!6621, !6615, !6622}
!6622 = !DILocation(line: 4580, column: 5, scope: !6606)
!6623 = !DILocation(line: 4582, column: 17, scope: !6606)
!6624 = !DILocation(line: 4583, column: 1, scope: !6606)
!6625 = distinct !DISubprogram(name: "pre_ldst_expr_hash", scope: !3, file: !3, line: 4500, type: !1261, scopeLine: 4501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6626)
!6626 = !{!6627, !6628, !6629}
!6627 = !DILocalVariable(name: "p", arg: 1, scope: !6625, file: !3, line: 4500, type: !1264)
!6628 = !DILocalVariable(name: "do_not_record_p", scope: !6625, file: !3, line: 4502, type: !772)
!6629 = !DILocalVariable(name: "x", scope: !6625, file: !3, line: 4503, type: !6630)
!6630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2016)
!6631 = !DILocation(line: 0, scope: !6625)
!6632 = !DILocation(line: 4502, column: 3, scope: !6625)
!6633 = !DILocation(line: 4502, column: 7, scope: !6625)
!6634 = !DILocation(line: 4504, column: 23, scope: !6625)
!6635 = !DILocation(line: 4504, column: 32, scope: !6625)
!6636 = !DILocation(line: 4504, column: 10, scope: !6625)
!6637 = !DILocation(line: 4505, column: 1, scope: !6625)
!6638 = !DILocation(line: 4504, column: 3, scope: !6625)
!6639 = distinct !DISubprogram(name: "pre_ldst_expr_eq", scope: !3, file: !3, line: 4508, type: !1269, scopeLine: 4509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6640)
!6640 = !{!6641, !6642, !6643, !6644}
!6641 = !DILocalVariable(name: "p1", arg: 1, scope: !6639, file: !3, line: 4508, type: !1264)
!6642 = !DILocalVariable(name: "p2", arg: 2, scope: !6639, file: !3, line: 4508, type: !1264)
!6643 = !DILocalVariable(name: "ptr1", scope: !6639, file: !3, line: 4510, type: !6630)
!6644 = !DILocalVariable(name: "ptr2", scope: !6639, file: !3, line: 4511, type: !6630)
!6645 = !DILocation(line: 0, scope: !6639)
!6646 = !DILocation(line: 4512, column: 30, scope: !6639)
!6647 = !DILocation(line: 4512, column: 45, scope: !6639)
!6648 = !DILocation(line: 4512, column: 10, scope: !6639)
!6649 = !DILocation(line: 4512, column: 3, scope: !6639)
!6650 = distinct !DISubprogram(name: "simple_mem", scope: !3, file: !3, line: 4659, type: !6651, scopeLine: 4660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6653)
!6651 = !DISubroutineType(types: !6652)
!6652 = !{!772, !2124}
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "x", arg: 1, scope: !6650, file: !3, line: 4659, type: !2124)
!6655 = !DILocation(line: 0, scope: !6650)
!6656 = !DILocation(line: 4661, column: 9, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4661, column: 7)
!6658 = !DILocation(line: 4661, column: 7, scope: !6650)
!6659 = !DILocation(line: 4664, column: 7, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4664, column: 7)
!6661 = !DILocation(line: 4664, column: 7, scope: !6650)
!6662 = !DILocation(line: 4667, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4667, column: 7)
!6664 = !DILocation(line: 4667, column: 20, scope: !6663)
!6665 = !DILocation(line: 4667, column: 7, scope: !6650)
!6666 = !DILocation(line: 4673, column: 7, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4673, column: 7)
!6668 = !DILocation(line: 4673, column: 32, scope: !6667)
!6669 = !DILocation(line: 4673, column: 35, scope: !6667)
!6670 = !DILocation(line: 4673, column: 7, scope: !6650)
!6671 = !DILocation(line: 4676, column: 7, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4676, column: 7)
!6673 = !DILocation(line: 4676, column: 7, scope: !6650)
!6674 = !DILocation(line: 4680, column: 24, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4680, column: 7)
!6676 = !DILocation(line: 4680, column: 7, scope: !6675)
!6677 = !DILocation(line: 4680, column: 7, scope: !6650)
!6678 = !DILocation(line: 4683, column: 7, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4683, column: 7)
!6680 = !DILocation(line: 4683, column: 24, scope: !6679)
!6681 = !DILocation(line: 4683, column: 27, scope: !6679)
!6682 = !DILocation(line: 4683, column: 7, scope: !6650)
!6683 = !DILocation(line: 4686, column: 3, scope: !6650)
!6684 = !DILocation(line: 4687, column: 1, scope: !6650)
!6685 = distinct !DISubprogram(name: "ldst_entry", scope: !3, file: !3, line: 4519, type: !5142, scopeLine: 4520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6686)
!6686 = !{!6687, !6688, !6689, !6690, !6691, !6692}
!6687 = !DILocalVariable(name: "x", arg: 1, scope: !6685, file: !3, line: 4519, type: !787)
!6688 = !DILocalVariable(name: "do_not_record_p", scope: !6685, file: !3, line: 4521, type: !772)
!6689 = !DILocalVariable(name: "ptr", scope: !6685, file: !3, line: 4522, type: !2001)
!6690 = !DILocalVariable(name: "hash", scope: !6685, file: !3, line: 4523, type: !9)
!6691 = !DILocalVariable(name: "slot", scope: !6685, file: !3, line: 4524, type: !1274)
!6692 = !DILocalVariable(name: "e", scope: !6685, file: !3, line: 4525, type: !2002)
!6693 = !DILocation(line: 0, scope: !6685)
!6694 = !DILocation(line: 4521, column: 3, scope: !6685)
!6695 = !DILocation(line: 4521, column: 7, scope: !6685)
!6696 = !DILocation(line: 4525, column: 3, scope: !6685)
!6697 = !DILocation(line: 4527, column: 23, scope: !6685)
!6698 = !DILocation(line: 4527, column: 10, scope: !6685)
!6699 = !DILocation(line: 4530, column: 5, scope: !6685)
!6700 = !DILocation(line: 4530, column: 13, scope: !6685)
!6701 = !DILocation(line: 4531, column: 36, scope: !6685)
!6702 = !DILocation(line: 4531, column: 10, scope: !6685)
!6703 = !DILocation(line: 4532, column: 7, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 4532, column: 7)
!6705 = !DILocation(line: 4532, column: 7, scope: !6685)
!6706 = !DILocation(line: 4533, column: 5, scope: !6704)
!6707 = !DILocation(line: 4535, column: 9, scope: !6685)
!6708 = !DILocation(line: 4537, column: 23, scope: !6685)
!6709 = !DILocation(line: 4537, column: 8, scope: !6685)
!6710 = !DILocation(line: 4537, column: 21, scope: !6685)
!6711 = !DILocation(line: 4538, column: 8, scope: !6685)
!6712 = !DILocation(line: 4538, column: 21, scope: !6685)
!6713 = !DILocation(line: 4539, column: 8, scope: !6685)
!6714 = !DILocation(line: 4539, column: 21, scope: !6685)
!6715 = !DILocation(line: 4540, column: 8, scope: !6685)
!6716 = !DILocation(line: 4540, column: 21, scope: !6685)
!6717 = !DILocation(line: 4541, column: 8, scope: !6685)
!6718 = !DILocation(line: 4541, column: 21, scope: !6685)
!6719 = !DILocation(line: 4542, column: 8, scope: !6685)
!6720 = !DILocation(line: 4542, column: 21, scope: !6685)
!6721 = !DILocation(line: 4543, column: 8, scope: !6685)
!6722 = !DILocation(line: 4543, column: 21, scope: !6685)
!6723 = !DILocation(line: 4544, column: 8, scope: !6685)
!6724 = !DILocation(line: 4544, column: 21, scope: !6685)
!6725 = !DILocation(line: 4545, column: 8, scope: !6685)
!6726 = !DILocation(line: 4545, column: 21, scope: !6685)
!6727 = !DILocation(line: 4546, column: 8, scope: !6685)
!6728 = !DILocation(line: 4546, column: 21, scope: !6685)
!6729 = !DILocation(line: 4547, column: 21, scope: !6685)
!6730 = !DILocation(line: 4548, column: 9, scope: !6685)
!6731 = !DILocation(line: 4550, column: 3, scope: !6685)
!6732 = !DILocation(line: 4551, column: 1, scope: !6685)
!6733 = distinct !DISubprogram(name: "invalidate_any_buried_refs", scope: !3, file: !3, line: 4698, type: !3344, scopeLine: 4699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6734)
!6734 = !{!6735, !6736, !6737, !6738, !6739}
!6735 = !DILocalVariable(name: "x", arg: 1, scope: !6733, file: !3, line: 4698, type: !787)
!6736 = !DILocalVariable(name: "fmt", scope: !6733, file: !3, line: 4700, type: !777)
!6737 = !DILocalVariable(name: "i", scope: !6733, file: !3, line: 4701, type: !772)
!6738 = !DILocalVariable(name: "j", scope: !6733, file: !3, line: 4701, type: !772)
!6739 = !DILocalVariable(name: "ptr", scope: !6733, file: !3, line: 4702, type: !2001)
!6740 = !DILocation(line: 0, scope: !6733)
!6741 = !DILocation(line: 4705, column: 7, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 4705, column: 7)
!6743 = !DILocation(line: 4705, column: 17, scope: !6742)
!6744 = !DILocation(line: 4705, column: 20, scope: !6742)
!6745 = !DILocation(line: 4705, column: 7, scope: !6733)
!6746 = !DILocation(line: 4707, column: 13, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 4706, column: 5)
!6748 = !DILocation(line: 4708, column: 12, scope: !6747)
!6749 = !DILocation(line: 4708, column: 20, scope: !6747)
!6750 = !DILocation(line: 4709, column: 5, scope: !6747)
!6751 = !DILocation(line: 4712, column: 9, scope: !6733)
!6752 = !DILocation(line: 4714, column: 12, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 4714, column: 3)
!6754 = !DILocation(line: 0, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 4719, column: 2)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 4718, column: 16)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 4716, column: 11)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 4715, column: 5)
!6759 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4714, column: 3)
!6760 = !DILocation(line: 4714, column: 8, scope: !6753)
!6761 = !DILocation(line: 0, scope: !6753)
!6762 = !DILocation(line: 4714, column: 49, scope: !6759)
!6763 = !DILocation(line: 4714, column: 3, scope: !6753)
!6764 = !DILocation(line: 4716, column: 11, scope: !6757)
!6765 = !DILocation(line: 4716, column: 18, scope: !6757)
!6766 = !DILocation(line: 4716, column: 11, scope: !6758)
!6767 = !DILocation(line: 4717, column: 30, scope: !6757)
!6768 = !DILocation(line: 4717, column: 2, scope: !6757)
!6769 = !DILocation(line: 4718, column: 23, scope: !6756)
!6770 = !DILocation(line: 4718, column: 16, scope: !6757)
!6771 = !DILocation(line: 4719, column: 11, scope: !6755)
!6772 = !DILocation(line: 4719, column: 7, scope: !6755)
!6773 = !DILocation(line: 4719, column: 33, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 4719, column: 2)
!6775 = !DILocation(line: 4719, column: 2, scope: !6755)
!6776 = !DILocation(line: 4720, column: 32, scope: !6774)
!6777 = !DILocation(line: 4720, column: 4, scope: !6774)
!6778 = !DILocation(line: 4719, column: 2, scope: !6774)
!6779 = distinct !{!6779, !6775, !6780}
!6780 = !DILocation(line: 4720, column: 49, scope: !6755)
!6781 = !DILocation(line: 4714, column: 3, scope: !6759)
!6782 = distinct !{!6782, !6763, !6783}
!6783 = !DILocation(line: 4721, column: 5, scope: !6753)
!6784 = !DILocation(line: 4722, column: 1, scope: !6733)
!6785 = distinct !DISubprogram(name: "free_ldst_entry", scope: !3, file: !3, line: 4556, type: !6786, scopeLine: 4557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6788)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{null, !2001}
!6788 = !{!6789}
!6789 = !DILocalVariable(name: "ptr", arg: 1, scope: !6785, file: !3, line: 4556, type: !2001)
!6790 = !DILocation(line: 0, scope: !6785)
!6791 = !DILocation(line: 4558, column: 31, scope: !6785)
!6792 = !DILocation(line: 4558, column: 3, scope: !6785)
!6793 = !DILocation(line: 4559, column: 31, scope: !6785)
!6794 = !DILocation(line: 4559, column: 3, scope: !6785)
!6795 = !DILocation(line: 4561, column: 9, scope: !6785)
!6796 = !DILocation(line: 4561, column: 3, scope: !6785)
!6797 = !DILocation(line: 4562, column: 1, scope: !6785)
!6798 = distinct !DISubprogram(name: "print_ldst_list", scope: !3, file: !3, line: 4588, type: !6799, scopeLine: 4589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6801)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{null, !2229}
!6801 = !{!6802, !6803}
!6802 = !DILocalVariable(name: "file", arg: 1, scope: !6798, file: !3, line: 4588, type: !2229)
!6803 = !DILocalVariable(name: "ptr", scope: !6798, file: !3, line: 4590, type: !2001)
!6804 = !DILocation(line: 0, scope: !6798)
!6805 = !DILocation(line: 4592, column: 3, scope: !6798)
!6806 = !DILocation(line: 4594, column: 14, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 4594, column: 3)
!6808 = !DILocation(line: 4594, column: 8, scope: !6807)
!6809 = !DILocation(line: 0, scope: !6807)
!6810 = !DILocation(line: 4594, column: 36, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 4594, column: 3)
!6812 = !DILocation(line: 4594, column: 3, scope: !6807)
!6813 = !DILocation(line: 4596, column: 48, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4595, column: 5)
!6815 = !DILocation(line: 4596, column: 7, scope: !6814)
!6816 = !DILocation(line: 4598, column: 29, scope: !6814)
!6817 = !DILocation(line: 4598, column: 7, scope: !6814)
!6818 = !DILocation(line: 4600, column: 7, scope: !6814)
!6819 = !DILocation(line: 4602, column: 16, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 4602, column: 11)
!6821 = !DILocation(line: 4602, column: 11, scope: !6820)
!6822 = !DILocation(line: 4602, column: 11, scope: !6814)
!6823 = !DILocation(line: 4603, column: 2, scope: !6820)
!6824 = !DILocation(line: 4605, column: 2, scope: !6820)
!6825 = !DILocation(line: 4607, column: 7, scope: !6814)
!6826 = !DILocation(line: 4609, column: 16, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 4609, column: 11)
!6828 = !DILocation(line: 4609, column: 11, scope: !6827)
!6829 = !DILocation(line: 4609, column: 11, scope: !6814)
!6830 = !DILocation(line: 4610, column: 2, scope: !6827)
!6831 = !DILocation(line: 4612, column: 2, scope: !6827)
!6832 = !DILocation(line: 4614, column: 7, scope: !6814)
!6833 = !DILocation(line: 4594, column: 51, scope: !6811)
!6834 = !DILocation(line: 4594, column: 3, scope: !6811)
!6835 = distinct !{!6835, !6812, !6836}
!6836 = !DILocation(line: 4615, column: 5, scope: !6807)
!6837 = !DILocation(line: 4617, column: 3, scope: !6798)
!6838 = !DILocation(line: 4618, column: 1, scope: !6798)
!6839 = distinct !DISubprogram(name: "first_ls_expr", scope: !3, file: !3, line: 4639, type: !6840, scopeLine: 4640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!6840 = !DISubroutineType(types: !6841)
!6841 = !{!2001}
!6842 = !DILocation(line: 4641, column: 10, scope: !6839)
!6843 = !DILocation(line: 4641, column: 3, scope: !6839)
!6844 = distinct !DISubprogram(name: "next_ls_expr", scope: !3, file: !3, line: 4647, type: !6845, scopeLine: 4648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6847)
!6845 = !DISubroutineType(types: !6846)
!6846 = !{!2001, !2001}
!6847 = !{!6848}
!6848 = !DILocalVariable(name: "ptr", arg: 1, scope: !6844, file: !3, line: 4647, type: !2001)
!6849 = !DILocation(line: 0, scope: !6844)
!6850 = !DILocation(line: 4649, column: 15, scope: !6844)
!6851 = !DILocation(line: 4649, column: 3, scope: !6844)
!6852 = distinct !DISubprogram(name: "pre_delete", scope: !3, file: !3, line: 3825, type: !2220, scopeLine: 3826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6853)
!6853 = !{!6854, !6855, !6856, !6857, !6858, !6864, !6868, !6869}
!6854 = !DILocalVariable(name: "i", scope: !6852, file: !3, line: 3827, type: !9)
!6855 = !DILocalVariable(name: "changed", scope: !6852, file: !3, line: 3828, type: !772)
!6856 = !DILocalVariable(name: "expr", scope: !6852, file: !3, line: 3829, type: !1977)
!6857 = !DILocalVariable(name: "occr", scope: !6852, file: !3, line: 3830, type: !1984)
!6858 = !DILocalVariable(name: "indx", scope: !6859, file: !3, line: 3838, type: !772)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 3837, column: 7)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 3834, column: 5)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 3834, column: 5)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 3833, column: 3)
!6863 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 3833, column: 3)
!6864 = !DILocalVariable(name: "insn", scope: !6865, file: !3, line: 3845, type: !787)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 3844, column: 4)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 3843, column: 2)
!6867 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 3843, column: 2)
!6868 = !DILocalVariable(name: "set", scope: !6865, file: !3, line: 3846, type: !787)
!6869 = !DILocalVariable(name: "bb", scope: !6865, file: !3, line: 3847, type: !1338)
!6870 = !DILocation(line: 0, scope: !6852)
!6871 = !DILocation(line: 3833, column: 8, scope: !6863)
!6872 = !DILocation(line: 3832, column: 11, scope: !6852)
!6873 = !DILocation(line: 3833, column: 35, scope: !6862)
!6874 = !DILocation(line: 3833, column: 17, scope: !6862)
!6875 = !DILocation(line: 3833, column: 3, scope: !6863)
!6876 = !DILocation(line: 3834, column: 33, scope: !6861)
!6877 = !DILocation(line: 3834, column: 17, scope: !6861)
!6878 = !DILocation(line: 3834, column: 10, scope: !6861)
!6879 = !DILocation(line: 0, scope: !6861)
!6880 = !DILocation(line: 3835, column: 8, scope: !6860)
!6881 = !DILocation(line: 3834, column: 5, scope: !6861)
!6882 = !DILocation(line: 3838, column: 19, scope: !6859)
!6883 = !DILocation(line: 0, scope: !6859)
!6884 = !DILocation(line: 3843, column: 20, scope: !6867)
!6885 = !DILocation(line: 0, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 3850, column: 10)
!6887 = !DILocation(line: 0, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 3857, column: 7)
!6889 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 3853, column: 8)
!6890 = !DILocation(line: 3843, column: 7, scope: !6867)
!6891 = !DILocation(line: 0, scope: !6867)
!6892 = !DILocation(line: 3843, column: 37, scope: !6866)
!6893 = !DILocation(line: 3843, column: 2, scope: !6867)
!6894 = !DILocation(line: 3845, column: 23, scope: !6865)
!6895 = !DILocation(line: 0, scope: !6865)
!6896 = !DILocation(line: 3847, column: 23, scope: !6865)
!6897 = !DILocation(line: 3850, column: 10, scope: !6886)
!6898 = !DILocation(line: 3851, column: 3, scope: !6886)
!6899 = !DILocation(line: 3851, column: 13, scope: !6886)
!6900 = !DILocation(line: 3851, column: 32, scope: !6886)
!6901 = !DILocation(line: 3852, column: 17, scope: !6886)
!6902 = !DILocation(line: 3852, column: 20, scope: !6886)
!6903 = !DILocation(line: 3850, column: 10, scope: !6865)
!6904 = !DILocation(line: 3857, column: 13, scope: !6888)
!6905 = !DILocation(line: 3857, column: 26, scope: !6888)
!6906 = !DILocation(line: 3857, column: 7, scope: !6889)
!6907 = !DILocation(line: 3858, column: 49, scope: !6888)
!6908 = !DILocation(line: 3858, column: 26, scope: !6888)
!6909 = !DILocation(line: 3858, column: 24, scope: !6888)
!6910 = !DILocation(line: 3858, column: 5, scope: !6888)
!6911 = !DILocation(line: 3860, column: 31, scope: !6889)
!6912 = !DILocation(line: 3860, column: 45, scope: !6889)
!6913 = !DILocation(line: 3860, column: 3, scope: !6889)
!6914 = !DILocation(line: 3861, column: 3, scope: !6889)
!6915 = !DILocation(line: 3862, column: 9, scope: !6889)
!6916 = !DILocation(line: 3862, column: 19, scope: !6889)
!6917 = !DILocation(line: 3864, column: 19, scope: !6889)
!6918 = !DILocation(line: 3866, column: 7, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 3866, column: 7)
!6920 = !DILocation(line: 3866, column: 7, scope: !6889)
!6921 = !DILocation(line: 3870, column: 11, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 3867, column: 5)
!6923 = !DILocation(line: 3868, column: 7, scope: !6922)
!6924 = !DILocation(line: 3871, column: 16, scope: !6922)
!6925 = !DILocation(line: 3872, column: 13, scope: !6922)
!6926 = !DILocation(line: 3872, column: 20, scope: !6922)
!6927 = !DILocation(line: 3871, column: 7, scope: !6922)
!6928 = !DILocation(line: 3873, column: 5, scope: !6922)
!6929 = !DILocation(line: 3843, column: 59, scope: !6866)
!6930 = !DILocation(line: 3843, column: 2, scope: !6866)
!6931 = distinct !{!6931, !6893, !6932}
!6932 = !DILocation(line: 3875, column: 4, scope: !6867)
!6933 = !DILocation(line: 3836, column: 16, scope: !6860)
!6934 = !DILocation(line: 3834, column: 5, scope: !6860)
!6935 = distinct !{!6935, !6881, !6936}
!6936 = !DILocation(line: 3876, column: 7, scope: !6861)
!6937 = !DILocation(line: 3833, column: 42, scope: !6862)
!6938 = !DILocation(line: 3833, column: 3, scope: !6862)
!6939 = distinct !{!6939, !6875, !6940}
!6940 = !DILocation(line: 3876, column: 7, scope: !6863)
!6941 = !DILocation(line: 3878, column: 3, scope: !6852)
!6942 = distinct !DISubprogram(name: "pre_edge_insert", scope: !3, file: !3, line: 3541, type: !6943, scopeLine: 3542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !6945)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{!772, !2178, !1976}
!6945 = !{!6946, !6947, !6948, !6949, !6950, !6951, !6952, !6953, !6954, !6955, !6959, !6960, !6964, !6969, !6970, !6976}
!6946 = !DILocalVariable(name: "edge_list", arg: 1, scope: !6942, file: !3, line: 3541, type: !2178)
!6947 = !DILocalVariable(name: "index_map", arg: 2, scope: !6942, file: !3, line: 3541, type: !1976)
!6948 = !DILocalVariable(name: "e", scope: !6942, file: !3, line: 3543, type: !772)
!6949 = !DILocalVariable(name: "i", scope: !6942, file: !3, line: 3543, type: !772)
!6950 = !DILocalVariable(name: "j", scope: !6942, file: !3, line: 3543, type: !772)
!6951 = !DILocalVariable(name: "num_edges", scope: !6942, file: !3, line: 3543, type: !772)
!6952 = !DILocalVariable(name: "set_size", scope: !6942, file: !3, line: 3543, type: !772)
!6953 = !DILocalVariable(name: "did_insert", scope: !6942, file: !3, line: 3543, type: !772)
!6954 = !DILocalVariable(name: "inserted", scope: !6942, file: !3, line: 3544, type: !2135)
!6955 = !DILocalVariable(name: "indx", scope: !6956, file: !3, line: 3556, type: !772)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 3555, column: 5)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 3554, column: 3)
!6958 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3554, column: 3)
!6959 = !DILocalVariable(name: "bb", scope: !6956, file: !3, line: 3557, type: !1338)
!6960 = !DILocalVariable(name: "insert", scope: !6961, file: !3, line: 3561, type: !878)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 3560, column: 2)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 3559, column: 7)
!6963 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 3559, column: 7)
!6964 = !DILocalVariable(name: "expr", scope: !6965, file: !3, line: 3566, type: !1977)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 3565, column: 8)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 3564, column: 10)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 3563, column: 4)
!6968 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 3563, column: 4)
!6969 = !DILocalVariable(name: "occr", scope: !6965, file: !3, line: 3567, type: !1984)
!6970 = !DILocalVariable(name: "insn", scope: !6971, file: !3, line: 3579, type: !787)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 3578, column: 9)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 3577, column: 11)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 3571, column: 5)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 3570, column: 3)
!6975 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 3570, column: 3)
!6976 = !DILocalVariable(name: "eg", scope: !6971, file: !3, line: 3580, type: !1355)
!6977 = !DILocation(line: 0, scope: !6942)
!6978 = !DILocation(line: 3549, column: 14, scope: !6942)
!6979 = !DILocation(line: 3549, column: 33, scope: !6942)
!6980 = !DILocation(line: 3550, column: 15, scope: !6942)
!6981 = !DILocation(line: 3551, column: 63, scope: !6942)
!6982 = !DILocation(line: 3551, column: 14, scope: !6942)
!6983 = !DILocation(line: 3552, column: 3, scope: !6942)
!6984 = !DILocation(line: 0, scope: !6956)
!6985 = !DILocation(line: 3554, column: 8, scope: !6958)
!6986 = !DILocation(line: 3543, column: 37, scope: !6942)
!6987 = !DILocation(line: 3554, column: 17, scope: !6957)
!6988 = !DILocation(line: 3554, column: 3, scope: !6958)
!6989 = !DILocation(line: 3557, column: 24, scope: !6956)
!6990 = !DILocation(line: 0, scope: !6972)
!6991 = !DILocation(line: 0, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3598, column: 6)
!6993 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 3597, column: 8)
!6994 = !DILocation(line: 3559, column: 12, scope: !6963)
!6995 = !DILocation(line: 0, scope: !6963)
!6996 = !DILocation(line: 3559, column: 28, scope: !6962)
!6997 = !DILocation(line: 3559, column: 7, scope: !6963)
!6998 = !DILocation(line: 3561, column: 30, scope: !6961)
!6999 = !DILocation(line: 0, scope: !6961)
!7000 = !DILocation(line: 3563, column: 9, scope: !6968)
!7001 = !DILocation(line: 3563, column: 19, scope: !6967)
!7002 = !DILocation(line: 3563, column: 26, scope: !6967)
!7003 = !DILocation(line: 3563, column: 4, scope: !6968)
!7004 = !DILocation(line: 3564, column: 18, scope: !6966)
!7005 = !DILocation(line: 3564, column: 23, scope: !6966)
!7006 = !DILocation(line: 3564, column: 28, scope: !6966)
!7007 = !DILocation(line: 3564, column: 31, scope: !6966)
!7008 = !DILocation(line: 3564, column: 45, scope: !6966)
!7009 = !DILocation(line: 3564, column: 58, scope: !6966)
!7010 = !DILocation(line: 3564, column: 10, scope: !6967)
!7011 = !DILocation(line: 0, scope: !6965)
!7012 = !DILocation(line: 3570, column: 21, scope: !6975)
!7013 = !DILocation(line: 3570, column: 8, scope: !6975)
!7014 = !DILocation(line: 0, scope: !6975)
!7015 = !DILocation(line: 3570, column: 38, scope: !6974)
!7016 = !DILocation(line: 3570, column: 3, scope: !6975)
!7017 = !DILocation(line: 3572, column: 19, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 3572, column: 11)
!7019 = !DILocation(line: 3572, column: 13, scope: !7018)
!7020 = !DILocation(line: 3572, column: 11, scope: !6973)
!7021 = !DILocation(line: 3577, column: 12, scope: !6972)
!7022 = !DILocation(line: 3577, column: 11, scope: !6973)
!7023 = !DILocation(line: 3580, column: 14, scope: !6971)
!7024 = !DILocation(line: 0, scope: !6971)
!7025 = !DILocation(line: 3589, column: 12, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 3589, column: 8)
!7027 = !DILocation(line: 3589, column: 18, scope: !7026)
!7028 = !DILocation(line: 0, scope: !7026)
!7029 = !DILocation(line: 3589, column: 8, scope: !6971)
!7030 = !DILocation(line: 3590, column: 6, scope: !7026)
!7031 = !DILocation(line: 3593, column: 15, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3592, column: 6)
!7033 = !DILocation(line: 3594, column: 8, scope: !7032)
!7034 = !DILocation(line: 3597, column: 8, scope: !6993)
!7035 = !DILocation(line: 3597, column: 8, scope: !6971)
!7036 = !DILocation(line: 3600, column: 14, scope: !6992)
!7037 = !DILocation(line: 3601, column: 10, scope: !6992)
!7038 = !DILocation(line: 3601, column: 45, scope: !6992)
!7039 = !DILocation(line: 3599, column: 8, scope: !6992)
!7040 = !DILocation(line: 3602, column: 17, scope: !6992)
!7041 = !DILocation(line: 3603, column: 16, scope: !6992)
!7042 = !DILocation(line: 3602, column: 8, scope: !6992)
!7043 = !DILocation(line: 3604, column: 6, scope: !6992)
!7044 = !DILocation(line: 3606, column: 4, scope: !6971)
!7045 = !DILocation(line: 3607, column: 13, scope: !6971)
!7046 = !DILocation(line: 3607, column: 4, scope: !6971)
!7047 = !DILocation(line: 3609, column: 21, scope: !6971)
!7048 = !DILocation(line: 3610, column: 9, scope: !6971)
!7049 = !DILocation(line: 3570, column: 60, scope: !6974)
!7050 = !DILocation(line: 3570, column: 3, scope: !6974)
!7051 = distinct !{!7051, !7016, !7052}
!7052 = !DILocation(line: 3611, column: 5, scope: !6975)
!7053 = !DILocation(line: 3563, column: 65, scope: !6967)
!7054 = !DILocation(line: 3563, column: 76, scope: !6967)
!7055 = !DILocation(line: 3563, column: 4, scope: !6967)
!7056 = distinct !{!7056, !7003, !7057}
!7057 = !DILocation(line: 3612, column: 8, scope: !6968)
!7058 = !DILocation(line: 3559, column: 41, scope: !6962)
!7059 = !DILocation(line: 3559, column: 50, scope: !6962)
!7060 = !DILocation(line: 3559, column: 7, scope: !6962)
!7061 = distinct !{!7061, !6997, !7062}
!7062 = !DILocation(line: 3613, column: 2, scope: !6963)
!7063 = !DILocation(line: 3554, column: 31, scope: !6957)
!7064 = !DILocation(line: 3554, column: 3, scope: !6957)
!7065 = distinct !{!7065, !6988, !7066}
!7066 = !DILocation(line: 3614, column: 5, scope: !6958)
!7067 = !DILocation(line: 3616, column: 3, scope: !6942)
!7068 = !DILocation(line: 3617, column: 3, scope: !6942)
!7069 = distinct !DISubprogram(name: "pre_insert_copies", scope: !3, file: !3, line: 3725, type: !2657, scopeLine: 3726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7070)
!7070 = !{!7071, !7072, !7073, !7074, !7075, !7076}
!7071 = !DILocalVariable(name: "i", scope: !7069, file: !3, line: 3727, type: !9)
!7072 = !DILocalVariable(name: "added_copy", scope: !7069, file: !3, line: 3727, type: !9)
!7073 = !DILocalVariable(name: "expr", scope: !7069, file: !3, line: 3728, type: !1977)
!7074 = !DILocalVariable(name: "occr", scope: !7069, file: !3, line: 3729, type: !1984)
!7075 = !DILocalVariable(name: "avail", scope: !7069, file: !3, line: 3730, type: !1984)
!7076 = !DILocalVariable(name: "insn", scope: !7077, file: !3, line: 3759, type: !787)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 3758, column: 8)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 3757, column: 6)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 3757, column: 6)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 3753, column: 4)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 3752, column: 2)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 3752, column: 2)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 3740, column: 7)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 3739, column: 5)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 3739, column: 5)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 3738, column: 3)
!7087 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 3738, column: 3)
!7088 = !DILocation(line: 0, scope: !7069)
!7089 = !DILocation(line: 3738, column: 8, scope: !7087)
!7090 = !DILocation(line: 0, scope: !7087)
!7091 = !DILocation(line: 3738, column: 35, scope: !7086)
!7092 = !DILocation(line: 3738, column: 17, scope: !7086)
!7093 = !DILocation(line: 3738, column: 3, scope: !7087)
!7094 = !DILocation(line: 3739, column: 33, scope: !7085)
!7095 = !DILocation(line: 3739, column: 17, scope: !7085)
!7096 = !DILocation(line: 3739, column: 10, scope: !7085)
!7097 = !DILocation(line: 0, scope: !7085)
!7098 = !DILocation(line: 3739, column: 48, scope: !7084)
!7099 = !DILocation(line: 3739, column: 5, scope: !7085)
!7100 = !DILocation(line: 3746, column: 12, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 3746, column: 6)
!7102 = !DILocation(line: 3746, column: 25, scope: !7101)
!7103 = !DILocation(line: 3746, column: 6, scope: !7083)
!7104 = !DILocation(line: 3752, column: 20, scope: !7082)
!7105 = !DILocation(line: 0, scope: !7079)
!7106 = !DILocation(line: 3752, column: 7, scope: !7082)
!7107 = !DILocation(line: 3750, column: 13, scope: !7083)
!7108 = !DILocation(line: 0, scope: !7082)
!7109 = !DILocation(line: 3752, column: 37, scope: !7081)
!7110 = !DILocation(line: 3752, column: 2, scope: !7082)
!7111 = !DILocation(line: 3754, column: 18, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 3754, column: 10)
!7113 = !DILocation(line: 3754, column: 12, scope: !7112)
!7114 = !DILocation(line: 3754, column: 10, scope: !7080)
!7115 = !DILocation(line: 0, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 3770, column: 7)
!7117 = !DILocation(line: 3757, column: 11, scope: !7079)
!7118 = !DILocation(line: 3757, column: 43, scope: !7078)
!7119 = !DILocation(line: 3757, column: 6, scope: !7079)
!7120 = !DILocation(line: 3759, column: 21, scope: !7077)
!7121 = !DILocation(line: 0, scope: !7077)
!7122 = !DILocation(line: 3762, column: 14, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 3762, column: 7)
!7124 = !DILocation(line: 3762, column: 7, scope: !7123)
!7125 = !DILocation(line: 3762, column: 7, scope: !7077)
!7126 = !DILocation(line: 3766, column: 7, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 3766, column: 7)
!7128 = !DILocation(line: 3766, column: 7, scope: !7077)
!7129 = !DILocation(line: 3770, column: 34, scope: !7116)
!7130 = !DILocation(line: 3772, column: 13, scope: !7116)
!7131 = !DILocation(line: 3770, column: 9, scope: !7116)
!7132 = !DILocation(line: 3770, column: 7, scope: !7077)
!7133 = !DILocation(line: 3778, column: 3, scope: !7077)
!7134 = !DILocation(line: 3779, column: 19, scope: !7077)
!7135 = !DILocation(line: 3780, column: 8, scope: !7078)
!7136 = !DILocation(line: 0, scope: !7083)
!7137 = !DILocation(line: 3757, column: 67, scope: !7078)
!7138 = !DILocation(line: 3757, column: 6, scope: !7078)
!7139 = distinct !{!7139, !7119, !7140}
!7140 = !DILocation(line: 3780, column: 8, scope: !7079)
!7141 = !DILocation(line: 3752, column: 59, scope: !7081)
!7142 = !DILocation(line: 3752, column: 2, scope: !7081)
!7143 = distinct !{!7143, !7110, !7144}
!7144 = !DILocation(line: 3781, column: 4, scope: !7082)
!7145 = !DILocation(line: 3783, column: 8, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 3783, column: 8)
!7147 = !DILocation(line: 3783, column: 8, scope: !7083)
!7148 = !DILocation(line: 3784, column: 13, scope: !7146)
!7149 = !DILocation(line: 3739, column: 70, scope: !7084)
!7150 = !DILocation(line: 3739, column: 5, scope: !7084)
!7151 = distinct !{!7151, !7099, !7152}
!7152 = !DILocation(line: 3785, column: 7, scope: !7085)
!7153 = !DILocation(line: 3738, column: 42, scope: !7086)
!7154 = !DILocation(line: 3738, column: 3, scope: !7086)
!7155 = distinct !{!7155, !7093, !7156}
!7156 = !DILocation(line: 3785, column: 7, scope: !7087)
!7157 = !DILocation(line: 3786, column: 1, scope: !7069)
!7158 = distinct !DISubprogram(name: "gcse_emit_move_after", scope: !3, file: !3, line: 3791, type: !7159, scopeLine: 3792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7161)
!7159 = !DISubroutineType(types: !7160)
!7160 = !{!787, !787, !787, !787}
!7161 = !{!7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169}
!7162 = !DILocalVariable(name: "src", arg: 1, scope: !7158, file: !3, line: 3791, type: !787)
!7163 = !DILocalVariable(name: "dest", arg: 2, scope: !7158, file: !3, line: 3791, type: !787)
!7164 = !DILocalVariable(name: "insn", arg: 3, scope: !7158, file: !3, line: 3791, type: !787)
!7165 = !DILocalVariable(name: "new_rtx", scope: !7158, file: !3, line: 3793, type: !787)
!7166 = !DILocalVariable(name: "set", scope: !7158, file: !3, line: 3794, type: !787)
!7167 = !DILocalVariable(name: "set2", scope: !7158, file: !3, line: 3794, type: !787)
!7168 = !DILocalVariable(name: "note", scope: !7158, file: !3, line: 3795, type: !787)
!7169 = !DILocalVariable(name: "eqv", scope: !7158, file: !3, line: 3796, type: !787)
!7170 = !DILocation(line: 0, scope: !7158)
!7171 = !DILocation(line: 3794, column: 13, scope: !7158)
!7172 = !DILocation(line: 3801, column: 30, scope: !7158)
!7173 = !DILocation(line: 3801, column: 13, scope: !7158)
!7174 = !DILocation(line: 3804, column: 10, scope: !7158)
!7175 = !DILocation(line: 3805, column: 8, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 3805, column: 7)
!7177 = !DILocation(line: 3805, column: 13, scope: !7176)
!7178 = !DILocation(line: 3805, column: 30, scope: !7176)
!7179 = !DILocation(line: 3805, column: 17, scope: !7176)
!7180 = !DILocation(line: 3805, column: 7, scope: !7158)
!7181 = !DILocation(line: 3807, column: 15, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 3807, column: 7)
!7183 = !DILocation(line: 3807, column: 13, scope: !7182)
!7184 = !DILocation(line: 3807, column: 7, scope: !7158)
!7185 = !DILocation(line: 3808, column: 11, scope: !7182)
!7186 = !DILocation(line: 3808, column: 5, scope: !7182)
!7187 = !DILocation(line: 3810, column: 11, scope: !7182)
!7188 = !DILocation(line: 0, scope: !7182)
!7189 = !DILocation(line: 3812, column: 44, scope: !7158)
!7190 = !DILocation(line: 3812, column: 3, scope: !7158)
!7191 = !DILocation(line: 3814, column: 3, scope: !7158)
!7192 = !DILocation(line: 3815, column: 1, scope: !7158)
!7193 = distinct !DISubprogram(name: "insert_insn_end_basic_block", scope: !3, file: !3, line: 3416, type: !7194, scopeLine: 3417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7196)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{null, !1977, !1338, !772}
!7196 = !{!7197, !7198, !7199, !7200, !7201, !7202, !7203, !7204, !7205}
!7197 = !DILocalVariable(name: "expr", arg: 1, scope: !7193, file: !3, line: 3416, type: !1977)
!7198 = !DILocalVariable(name: "bb", arg: 2, scope: !7193, file: !3, line: 3416, type: !1338)
!7199 = !DILocalVariable(name: "pre", arg: 3, scope: !7193, file: !3, line: 3416, type: !772)
!7200 = !DILocalVariable(name: "insn", scope: !7193, file: !3, line: 3418, type: !787)
!7201 = !DILocalVariable(name: "new_insn", scope: !7193, file: !3, line: 3419, type: !787)
!7202 = !DILocalVariable(name: "reg", scope: !7193, file: !3, line: 3420, type: !787)
!7203 = !DILocalVariable(name: "regno", scope: !7193, file: !3, line: 3421, type: !772)
!7204 = !DILocalVariable(name: "pat", scope: !7193, file: !3, line: 3422, type: !787)
!7205 = !DILocalVariable(name: "pat_end", scope: !7193, file: !3, line: 3422, type: !787)
!7206 = !DILocation(line: 0, scope: !7193)
!7207 = !DILocation(line: 3418, column: 14, scope: !7193)
!7208 = !DILocation(line: 3420, column: 19, scope: !7193)
!7209 = !DILocation(line: 3421, column: 15, scope: !7193)
!7210 = !DILocation(line: 3424, column: 9, scope: !7193)
!7211 = !DILocation(line: 3425, column: 3, scope: !7193)
!7212 = !DILocation(line: 3428, column: 3, scope: !7193)
!7213 = !DILocation(line: 3428, column: 10, scope: !7193)
!7214 = !DILocation(line: 3428, column: 30, scope: !7193)
!7215 = distinct !{!7215, !7212, !7216}
!7216 = !DILocation(line: 3429, column: 15, scope: !7193)
!7217 = !DILocation(line: 3435, column: 7, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 3435, column: 7)
!7219 = !DILocation(line: 3436, column: 7, scope: !7218)
!7220 = !DILocation(line: 3436, column: 11, scope: !7218)
!7221 = !DILocation(line: 3437, column: 4, scope: !7218)
!7222 = !DILocation(line: 3437, column: 9, scope: !7218)
!7223 = !DILocation(line: 3438, column: 8, scope: !7218)
!7224 = !DILocation(line: 3438, column: 11, scope: !7218)
!7225 = !DILocation(line: 3438, column: 34, scope: !7218)
!7226 = !DILocation(line: 3438, column: 40, scope: !7218)
!7227 = !DILocation(line: 3435, column: 7, scope: !7193)
!7228 = !DILocation(line: 3478, column: 12, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 3478, column: 12)
!7230 = !DILocation(line: 3453, column: 11, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 3453, column: 11)
!7232 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 3439, column: 5)
!7233 = !DILocation(line: 3453, column: 37, scope: !7231)
!7234 = !DILocation(line: 3454, column: 4, scope: !7231)
!7235 = !DILocation(line: 3454, column: 33, scope: !7231)
!7236 = !DILocation(line: 3453, column: 11, scope: !7232)
!7237 = !DILocation(line: 3455, column: 9, scope: !7231)
!7238 = !DILocation(line: 3455, column: 2, scope: !7231)
!7239 = !DILocation(line: 3473, column: 18, scope: !7232)
!7240 = !DILocation(line: 3474, column: 5, scope: !7232)
!7241 = !DILocation(line: 3479, column: 5, scope: !7229)
!7242 = !DILocation(line: 3479, column: 10, scope: !7229)
!7243 = !DILocation(line: 3480, column: 9, scope: !7229)
!7244 = !DILocation(line: 3480, column: 12, scope: !7229)
!7245 = !DILocation(line: 3480, column: 35, scope: !7229)
!7246 = !DILocation(line: 3480, column: 41, scope: !7229)
!7247 = !DILocation(line: 3478, column: 12, scope: !7218)
!7248 = !DILocation(line: 3498, column: 47, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 3481, column: 5)
!7250 = !DILocation(line: 3498, column: 14, scope: !7249)
!7251 = !DILocation(line: 3508, column: 7, scope: !7249)
!7252 = !DILocation(line: 0, scope: !7249)
!7253 = !DILocation(line: 3508, column: 14, scope: !7249)
!7254 = !DILocation(line: 3509, column: 7, scope: !7249)
!7255 = !DILocation(line: 3509, column: 10, scope: !7249)
!7256 = !DILocation(line: 3510, column: 9, scope: !7249)
!7257 = distinct !{!7257, !7251, !7256}
!7258 = !DILocation(line: 3512, column: 18, scope: !7249)
!7259 = !DILocation(line: 3513, column: 5, scope: !7249)
!7260 = !DILocation(line: 3515, column: 16, scope: !7229)
!7261 = !DILocation(line: 0, scope: !7218)
!7262 = !DILocation(line: 3517, column: 3, scope: !7193)
!7263 = !DILocation(line: 3519, column: 11, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 3519, column: 11)
!7265 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 3518, column: 5)
!7266 = !DILocation(line: 3519, column: 11, scope: !7265)
!7267 = !DILocation(line: 3520, column: 19, scope: !7264)
!7268 = !DILocation(line: 3520, column: 2, scope: !7264)
!7269 = !DILocation(line: 3521, column: 15, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 3521, column: 11)
!7271 = !DILocation(line: 3521, column: 11, scope: !7265)
!7272 = !DILocation(line: 3523, column: 13, scope: !7265)
!7273 = distinct !{!7273, !7262, !7274}
!7274 = !DILocation(line: 3524, column: 5, scope: !7193)
!7275 = !DILocation(line: 3526, column: 20, scope: !7193)
!7276 = !DILocation(line: 3528, column: 7, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 3528, column: 7)
!7278 = !DILocation(line: 3528, column: 7, scope: !7193)
!7279 = !DILocation(line: 3531, column: 13, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 3529, column: 5)
!7281 = !DILocation(line: 3531, column: 20, scope: !7280)
!7282 = !DILocation(line: 3530, column: 7, scope: !7280)
!7283 = !DILocation(line: 3532, column: 16, scope: !7280)
!7284 = !DILocation(line: 3533, column: 15, scope: !7280)
!7285 = !DILocation(line: 3532, column: 7, scope: !7280)
!7286 = !DILocation(line: 3534, column: 5, scope: !7280)
!7287 = !DILocation(line: 3535, column: 1, scope: !7193)
!7288 = distinct !DISubprogram(name: "process_insert_insn", scope: !3, file: !3, line: 3376, type: !7289, scopeLine: 3377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7291)
!7289 = !DISubroutineType(types: !7290)
!7290 = !{!787, !1977}
!7291 = !{!7292, !7293, !7294, !7295, !7296}
!7292 = !DILocalVariable(name: "expr", arg: 1, scope: !7288, file: !3, line: 3376, type: !1977)
!7293 = !DILocalVariable(name: "reg", scope: !7288, file: !3, line: 3378, type: !787)
!7294 = !DILocalVariable(name: "exp", scope: !7288, file: !3, line: 3379, type: !787)
!7295 = !DILocalVariable(name: "pat", scope: !7288, file: !3, line: 3380, type: !787)
!7296 = !DILocalVariable(name: "insn", scope: !7297, file: !3, line: 3394, type: !787)
!7297 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 3393, column: 5)
!7298 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 3386, column: 7)
!7299 = !DILocation(line: 0, scope: !7288)
!7300 = !DILocation(line: 3378, column: 19, scope: !7288)
!7301 = !DILocation(line: 3379, column: 29, scope: !7288)
!7302 = !DILocation(line: 3379, column: 13, scope: !7288)
!7303 = !DILocation(line: 3382, column: 3, scope: !7288)
!7304 = !DILocation(line: 3386, column: 29, scope: !7298)
!7305 = !DILocation(line: 3386, column: 7, scope: !7298)
!7306 = !DILocation(line: 3386, column: 7, scope: !7288)
!7307 = !DILocation(line: 3387, column: 5, scope: !7298)
!7308 = !DILocation(line: 3394, column: 29, scope: !7297)
!7309 = !DILocation(line: 3394, column: 18, scope: !7297)
!7310 = !DILocation(line: 0, scope: !7297)
!7311 = !DILocation(line: 3396, column: 11, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 3396, column: 11)
!7313 = !DILocation(line: 3396, column: 11, scope: !7297)
!7314 = !DILocation(line: 3397, column: 2, scope: !7312)
!7315 = !DILocation(line: 3401, column: 9, scope: !7288)
!7316 = !DILocation(line: 3402, column: 3, scope: !7288)
!7317 = !DILocation(line: 3404, column: 3, scope: !7288)
!7318 = distinct !DISubprogram(name: "update_ld_motion_stores", scope: !3, file: !3, line: 4851, type: !7319, scopeLine: 4852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7321)
!7319 = !DISubroutineType(types: !7320)
!7320 = !{null, !1977}
!7321 = !{!7322, !7323, !7324, !7327, !7331, !7332, !7333, !7334}
!7322 = !DILocalVariable(name: "expr", arg: 1, scope: !7318, file: !3, line: 4851, type: !1977)
!7323 = !DILocalVariable(name: "mem_ptr", scope: !7318, file: !3, line: 4853, type: !2001)
!7324 = !DILocalVariable(name: "list", scope: !7325, file: !3, line: 4865, type: !787)
!7325 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 4856, column: 5)
!7326 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 4855, column: 7)
!7327 = !DILocalVariable(name: "insn", scope: !7328, file: !3, line: 4869, type: !787)
!7328 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 4868, column: 2)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 4867, column: 7)
!7330 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 4867, column: 7)
!7331 = !DILocalVariable(name: "pat", scope: !7328, file: !3, line: 4870, type: !787)
!7332 = !DILocalVariable(name: "src", scope: !7328, file: !3, line: 4871, type: !787)
!7333 = !DILocalVariable(name: "reg", scope: !7328, file: !3, line: 4872, type: !787)
!7334 = !DILocalVariable(name: "copy", scope: !7328, file: !3, line: 4873, type: !787)
!7335 = !DILocation(line: 0, scope: !7318)
!7336 = !DILocation(line: 4855, column: 42, scope: !7326)
!7337 = !DILocation(line: 4855, column: 18, scope: !7326)
!7338 = !DILocation(line: 4855, column: 16, scope: !7326)
!7339 = !DILocation(line: 4855, column: 7, scope: !7318)
!7340 = !DILocation(line: 4865, column: 27, scope: !7325)
!7341 = !DILocation(line: 0, scope: !7328)
!7342 = !DILocation(line: 4867, column: 7, scope: !7325)
!7343 = !DILocation(line: 0, scope: !7325)
!7344 = !DILocation(line: 4867, column: 20, scope: !7329)
!7345 = !DILocation(line: 4867, column: 7, scope: !7330)
!7346 = !DILocation(line: 4869, column: 15, scope: !7328)
!7347 = !DILocation(line: 4870, column: 14, scope: !7328)
!7348 = !DILocation(line: 4871, column: 14, scope: !7328)
!7349 = !DILocation(line: 4872, column: 20, scope: !7328)
!7350 = !DILocation(line: 4876, column: 27, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 4876, column: 8)
!7352 = !DILocation(line: 4876, column: 8, scope: !7328)
!7353 = !DILocation(line: 4879, column: 8, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 4879, column: 8)
!7355 = !DILocation(line: 4879, column: 8, scope: !7328)
!7356 = !DILocation(line: 4881, column: 8, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 4880, column: 6)
!7358 = !DILocation(line: 4882, column: 19, scope: !7357)
!7359 = !DILocation(line: 4882, column: 36, scope: !7357)
!7360 = !DILocation(line: 4882, column: 8, scope: !7357)
!7361 = !DILocation(line: 4883, column: 17, scope: !7357)
!7362 = !DILocation(line: 4883, column: 8, scope: !7357)
!7363 = !DILocation(line: 4884, column: 26, scope: !7357)
!7364 = !DILocation(line: 4884, column: 8, scope: !7357)
!7365 = !DILocation(line: 4885, column: 17, scope: !7357)
!7366 = !DILocation(line: 4885, column: 8, scope: !7357)
!7367 = !DILocation(line: 4888, column: 41, scope: !7328)
!7368 = !DILocation(line: 4886, column: 6, scope: !7357)
!7369 = !DILocation(line: 4888, column: 31, scope: !7328)
!7370 = !DILocation(line: 4888, column: 11, scope: !7328)
!7371 = !DILocation(line: 4889, column: 4, scope: !7328)
!7372 = !DILocation(line: 4890, column: 18, scope: !7328)
!7373 = !DILocation(line: 4891, column: 4, scope: !7328)
!7374 = !DILocation(line: 4894, column: 4, scope: !7328)
!7375 = !DILocation(line: 4894, column: 21, scope: !7328)
!7376 = !DILocation(line: 4895, column: 21, scope: !7328)
!7377 = !DILocation(line: 4896, column: 2, scope: !7329)
!7378 = !DILocation(line: 4867, column: 40, scope: !7329)
!7379 = !DILocation(line: 4867, column: 7, scope: !7329)
!7380 = distinct !{!7380, !7345, !7381}
!7381 = !DILocation(line: 4896, column: 2, scope: !7330)
!7382 = !DILocation(line: 4898, column: 1, scope: !7318)
!7383 = distinct !DISubprogram(name: "single_succ_p", scope: !146, file: !146, line: 626, type: !4114, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7384)
!7384 = !{!7385}
!7385 = !DILocalVariable(name: "bb", arg: 1, scope: !7383, file: !146, line: 626, type: !4116)
!7386 = !DILocation(line: 0, scope: !7383)
!7387 = !DILocation(line: 628, column: 10, scope: !7383)
!7388 = !DILocation(line: 628, column: 33, scope: !7383)
!7389 = !DILocation(line: 628, column: 3, scope: !7383)
!7390 = distinct !DISubprogram(name: "single_succ_edge", scope: !146, file: !146, line: 643, type: !7391, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7393)
!7391 = !DISubroutineType(types: !7392)
!7392 = !{!1355, !4116}
!7393 = !{!7394}
!7394 = !DILocalVariable(name: "bb", arg: 1, scope: !7390, file: !146, line: 643, type: !4116)
!7395 = !DILocation(line: 0, scope: !7390)
!7396 = !DILocation(line: 645, column: 3, scope: !7390)
!7397 = !DILocation(line: 646, column: 10, scope: !7390)
!7398 = !DILocation(line: 646, column: 3, scope: !7390)
!7399 = distinct !DISubprogram(name: "add_label_notes", scope: !3, file: !3, line: 4013, type: !5866, scopeLine: 4014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7400)
!7400 = !{!7401, !7402, !7403, !7404, !7405, !7406}
!7401 = !DILocalVariable(name: "x", arg: 1, scope: !7399, file: !3, line: 4013, type: !787)
!7402 = !DILocalVariable(name: "insn", arg: 2, scope: !7399, file: !3, line: 4013, type: !787)
!7403 = !DILocalVariable(name: "code", scope: !7399, file: !3, line: 4015, type: !593)
!7404 = !DILocalVariable(name: "i", scope: !7399, file: !3, line: 4016, type: !772)
!7405 = !DILocalVariable(name: "j", scope: !7399, file: !3, line: 4016, type: !772)
!7406 = !DILocalVariable(name: "fmt", scope: !7399, file: !3, line: 4017, type: !777)
!7407 = !DILocation(line: 0, scope: !7399)
!7408 = !DILocation(line: 4015, column: 24, scope: !7399)
!7409 = !DILocation(line: 4019, column: 12, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 4019, column: 7)
!7411 = !DILocation(line: 4019, column: 25, scope: !7410)
!7412 = !DILocation(line: 4019, column: 29, scope: !7410)
!7413 = !DILocation(line: 4019, column: 7, scope: !7399)
!7414 = !DILocation(line: 4030, column: 7, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 4020, column: 5)
!7416 = !DILocation(line: 4031, column: 46, scope: !7415)
!7417 = !DILocation(line: 4031, column: 7, scope: !7415)
!7418 = !DILocation(line: 4033, column: 11, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 4033, column: 11)
!7420 = !DILocation(line: 4033, column: 11, scope: !7415)
!7421 = !DILocation(line: 4034, column: 2, scope: !7419)
!7422 = !DILocation(line: 4034, column: 27, scope: !7419)
!7423 = !DILocation(line: 4039, column: 12, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 4039, column: 3)
!7425 = !DILocation(line: 4039, column: 45, scope: !7424)
!7426 = !DILocation(line: 0, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 4044, column: 2)
!7428 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 4043, column: 16)
!7429 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 4041, column: 11)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 4040, column: 5)
!7431 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 4039, column: 3)
!7432 = !DILocation(line: 4039, column: 8, scope: !7424)
!7433 = !DILocation(line: 0, scope: !7424)
!7434 = !DILocation(line: 4039, column: 70, scope: !7431)
!7435 = !DILocation(line: 4039, column: 3, scope: !7424)
!7436 = !DILocation(line: 4041, column: 11, scope: !7429)
!7437 = !DILocation(line: 4041, column: 18, scope: !7429)
!7438 = !DILocation(line: 4041, column: 11, scope: !7430)
!7439 = !DILocation(line: 4042, column: 19, scope: !7429)
!7440 = !DILocation(line: 4042, column: 2, scope: !7429)
!7441 = !DILocation(line: 4043, column: 23, scope: !7428)
!7442 = !DILocation(line: 4043, column: 16, scope: !7429)
!7443 = !DILocation(line: 4044, column: 11, scope: !7427)
!7444 = !DILocation(line: 4044, column: 7, scope: !7427)
!7445 = !DILocation(line: 4044, column: 33, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 4044, column: 2)
!7447 = !DILocation(line: 4044, column: 2, scope: !7427)
!7448 = !DILocation(line: 4045, column: 21, scope: !7446)
!7449 = !DILocation(line: 4045, column: 4, scope: !7446)
!7450 = !DILocation(line: 4044, column: 2, scope: !7446)
!7451 = distinct !{!7451, !7447, !7452}
!7452 = !DILocation(line: 4045, column: 44, scope: !7427)
!7453 = !DILocation(line: 4039, column: 3, scope: !7431)
!7454 = distinct !{!7454, !7435, !7455}
!7455 = !DILocation(line: 4046, column: 5, scope: !7424)
!7456 = !DILocation(line: 4047, column: 1, scope: !7399)
!7457 = distinct !DISubprogram(name: "pre_expr_reaches_here_p", scope: !3, file: !3, line: 3359, type: !7458, scopeLine: 3360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7460)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!772, !1338, !1977, !1338}
!7460 = !{!7461, !7462, !7463, !7464, !7465}
!7461 = !DILocalVariable(name: "occr_bb", arg: 1, scope: !7457, file: !3, line: 3359, type: !1338)
!7462 = !DILocalVariable(name: "expr", arg: 2, scope: !7457, file: !3, line: 3359, type: !1977)
!7463 = !DILocalVariable(name: "bb", arg: 3, scope: !7457, file: !3, line: 3359, type: !1338)
!7464 = !DILocalVariable(name: "rval", scope: !7457, file: !3, line: 3361, type: !772)
!7465 = !DILocalVariable(name: "visited", scope: !7457, file: !3, line: 3362, type: !774)
!7466 = !DILocation(line: 0, scope: !7457)
!7467 = !DILocation(line: 3362, column: 19, scope: !7457)
!7468 = !DILocation(line: 3364, column: 10, scope: !7457)
!7469 = !DILocation(line: 3366, column: 3, scope: !7457)
!7470 = !DILocation(line: 3367, column: 3, scope: !7457)
!7471 = distinct !DISubprogram(name: "pre_insert_copy_insn", scope: !3, file: !3, line: 3636, type: !7472, scopeLine: 3637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7474)
!7472 = !DISubroutineType(types: !7473)
!7473 = !{null, !1977, !787}
!7474 = !{!7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486}
!7475 = !DILocalVariable(name: "expr", arg: 1, scope: !7471, file: !3, line: 3636, type: !1977)
!7476 = !DILocalVariable(name: "insn", arg: 2, scope: !7471, file: !3, line: 3636, type: !787)
!7477 = !DILocalVariable(name: "reg", scope: !7471, file: !3, line: 3638, type: !787)
!7478 = !DILocalVariable(name: "regno", scope: !7471, file: !3, line: 3639, type: !772)
!7479 = !DILocalVariable(name: "indx", scope: !7471, file: !3, line: 3640, type: !772)
!7480 = !DILocalVariable(name: "pat", scope: !7471, file: !3, line: 3641, type: !787)
!7481 = !DILocalVariable(name: "set", scope: !7471, file: !3, line: 3642, type: !787)
!7482 = !DILocalVariable(name: "first_set", scope: !7471, file: !3, line: 3642, type: !787)
!7483 = !DILocalVariable(name: "new_insn", scope: !7471, file: !3, line: 3642, type: !787)
!7484 = !DILocalVariable(name: "old_reg", scope: !7471, file: !3, line: 3643, type: !787)
!7485 = !DILocalVariable(name: "i", scope: !7471, file: !3, line: 3644, type: !772)
!7486 = !DILocalVariable(name: "x", scope: !7487, file: !3, line: 3660, type: !787)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 3659, column: 2)
!7488 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 3658, column: 7)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 3658, column: 7)
!7490 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 3648, column: 5)
!7491 = !DILocation(line: 0, scope: !7471)
!7492 = !DILocation(line: 3638, column: 19, scope: !7471)
!7493 = !DILocation(line: 3639, column: 15, scope: !7471)
!7494 = !DILocation(line: 3640, column: 20, scope: !7471)
!7495 = !DILocation(line: 3641, column: 13, scope: !7471)
!7496 = !DILocation(line: 3647, column: 11, scope: !7471)
!7497 = !DILocation(line: 3647, column: 3, scope: !7471)
!7498 = !DILocation(line: 0, scope: !7488)
!7499 = !DILocation(line: 0, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 3668, column: 12)
!7501 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 3662, column: 6)
!7502 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 3661, column: 8)
!7503 = !DILocation(line: 3658, column: 7, scope: !7489)
!7504 = !DILocation(line: 0, scope: !7490)
!7505 = !DILocation(line: 3658, column: 23, scope: !7488)
!7506 = !DILocation(line: 3658, column: 21, scope: !7488)
!7507 = !DILocation(line: 3660, column: 12, scope: !7487)
!7508 = !DILocation(line: 0, scope: !7487)
!7509 = !DILocation(line: 3661, column: 8, scope: !7502)
!7510 = !DILocation(line: 3661, column: 21, scope: !7502)
!7511 = !DILocation(line: 3661, column: 8, scope: !7487)
!7512 = !DILocation(line: 3666, column: 22, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 3666, column: 12)
!7514 = !DILocation(line: 3666, column: 12, scope: !7501)
!7515 = !DILocation(line: 3668, column: 26, scope: !7500)
!7516 = !DILocation(line: 3668, column: 45, scope: !7500)
!7517 = !DILocation(line: 3668, column: 12, scope: !7500)
!7518 = !DILocation(line: 3668, column: 12, scope: !7501)
!7519 = !DILocation(line: 3674, column: 2, scope: !7488)
!7520 = !DILocation(line: 3667, column: 13, scope: !7513)
!7521 = !DILocation(line: 3658, column: 42, scope: !7488)
!7522 = !DILocation(line: 3658, column: 7, scope: !7488)
!7523 = distinct !{!7523, !7503, !7524}
!7524 = !DILocation(line: 3674, column: 2, scope: !7489)
!7525 = !DILocation(line: 3676, column: 7, scope: !7490)
!7526 = !DILocation(line: 3677, column: 15, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 3677, column: 11)
!7528 = !DILocation(line: 3677, column: 11, scope: !7490)
!7529 = !DILocation(line: 3679, column: 7, scope: !7490)
!7530 = !DILocation(line: 3682, column: 7, scope: !7490)
!7531 = !DILocation(line: 3683, column: 5, scope: !7490)
!7532 = !DILocation(line: 3685, column: 7, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 3685, column: 7)
!7534 = !DILocation(line: 3685, column: 7, scope: !7471)
!7535 = !DILocation(line: 3687, column: 17, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 3686, column: 5)
!7537 = !DILocation(line: 3689, column: 11, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 3689, column: 11)
!7539 = !DILocation(line: 3689, column: 11, scope: !7536)
!7540 = !DILocation(line: 3691, column: 22, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 3690, column: 9)
!7542 = !DILocation(line: 3692, column: 22, scope: !7541)
!7543 = !DILocation(line: 3693, column: 9, scope: !7541)
!7544 = !DILocation(line: 3696, column: 22, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 3695, column: 9)
!7546 = !DILocation(line: 3697, column: 22, scope: !7545)
!7547 = !DILocation(line: 3702, column: 17, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 3701, column: 5)
!7549 = !DILocation(line: 3703, column: 18, scope: !7548)
!7550 = !DILocation(line: 3706, column: 11, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 3706, column: 11)
!7552 = !DILocation(line: 3706, column: 11, scope: !7548)
!7553 = !DILocation(line: 3707, column: 20, scope: !7551)
!7554 = !DILocation(line: 3707, column: 9, scope: !7551)
!7555 = !DILocation(line: 3709, column: 20, scope: !7551)
!7556 = !DILocation(line: 0, scope: !7533)
!7557 = !DILocation(line: 3712, column: 20, scope: !7471)
!7558 = !DILocation(line: 3714, column: 7, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 3714, column: 7)
!7560 = !DILocation(line: 3714, column: 7, scope: !7471)
!7561 = !DILocation(line: 3717, column: 8, scope: !7559)
!7562 = !DILocation(line: 3717, column: 31, scope: !7559)
!7563 = !DILocation(line: 3717, column: 38, scope: !7559)
!7564 = !DILocation(line: 3718, column: 8, scope: !7559)
!7565 = !DILocation(line: 3715, column: 5, scope: !7559)
!7566 = !DILocation(line: 3719, column: 1, scope: !7471)
!7567 = distinct !DISubprogram(name: "pre_expr_reaches_here_p_work", scope: !3, file: !3, line: 3313, type: !7568, scopeLine: 3314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7570)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!772, !1338, !1977, !1338, !774}
!7570 = !{!7571, !7572, !7573, !7574, !7575, !7576, !7577}
!7571 = !DILocalVariable(name: "occr_bb", arg: 1, scope: !7567, file: !3, line: 3313, type: !1338)
!7572 = !DILocalVariable(name: "expr", arg: 2, scope: !7567, file: !3, line: 3313, type: !1977)
!7573 = !DILocalVariable(name: "bb", arg: 3, scope: !7567, file: !3, line: 3313, type: !1338)
!7574 = !DILocalVariable(name: "visited", arg: 4, scope: !7567, file: !3, line: 3313, type: !774)
!7575 = !DILocalVariable(name: "pred", scope: !7567, file: !3, line: 3315, type: !1355)
!7576 = !DILocalVariable(name: "ei", scope: !7567, file: !3, line: 3316, type: !3896)
!7577 = !DILocalVariable(name: "pred_bb", scope: !7578, file: !3, line: 3320, type: !1338)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 3319, column: 5)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 3318, column: 3)
!7580 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 3318, column: 3)
!7581 = !DILocation(line: 0, scope: !7567)
!7582 = !DILocation(line: 3315, column: 3, scope: !7567)
!7583 = !DILocation(line: 3316, column: 3, scope: !7567)
!7584 = !DILocation(line: 3318, column: 3, scope: !7580)
!7585 = !DILocation(line: 0, scope: !7579)
!7586 = !DILocation(line: 0, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 3328, column: 16)
!7588 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 3322, column: 11)
!7589 = !DILocation(line: 3318, column: 3, scope: !7579)
!7590 = !DILocation(line: 3320, column: 29, scope: !7578)
!7591 = !DILocation(line: 3320, column: 35, scope: !7578)
!7592 = !DILocation(line: 0, scope: !7578)
!7593 = !DILocation(line: 3322, column: 24, scope: !7588)
!7594 = !DILocation(line: 3322, column: 21, scope: !7588)
!7595 = !DILocation(line: 3324, column: 4, scope: !7588)
!7596 = !DILocation(line: 3324, column: 24, scope: !7588)
!7597 = !DILocation(line: 3324, column: 7, scope: !7588)
!7598 = !DILocation(line: 3322, column: 11, scope: !7578)
!7599 = !DILocation(line: 3328, column: 16, scope: !7587)
!7600 = !DILocation(line: 3328, column: 16, scope: !7588)
!7601 = !DILocation(line: 3333, column: 16, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 3333, column: 8)
!7603 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 3329, column: 2)
!7604 = !DILocation(line: 3333, column: 8, scope: !7603)
!7605 = !DILocation(line: 3336, column: 28, scope: !7603)
!7606 = !DILocation(line: 3337, column: 2, scope: !7603)
!7607 = !DILocation(line: 3339, column: 18, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 3339, column: 16)
!7609 = !DILocation(line: 0, scope: !7608)
!7610 = !DILocation(line: 3339, column: 16, scope: !7587)
!7611 = !DILocation(line: 3346, column: 8, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3346, column: 8)
!7613 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 3344, column: 2)
!7614 = !DILocation(line: 3346, column: 8, scope: !7613)
!7615 = !DILocation(line: 3349, column: 5, scope: !7579)
!7616 = distinct !{!7616, !7584, !7617}
!7617 = !DILocation(line: 3349, column: 5, scope: !7580)
!7618 = !DILocation(line: 3353, column: 1, scope: !7567)
!7619 = distinct !DISubprogram(name: "one_code_hoisting_pass", scope: !3, file: !3, line: 4424, type: !2220, scopeLine: 4425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7620)
!7620 = !{!7621}
!7621 = !DILocalVariable(name: "changed", scope: !7619, file: !3, line: 4426, type: !772)
!7622 = !DILocation(line: 0, scope: !7619)
!7623 = !DILocation(line: 4428, column: 20, scope: !7619)
!7624 = !DILocation(line: 4429, column: 21, scope: !7619)
!7625 = !DILocation(line: 4432, column: 7, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 4432, column: 7)
!7627 = !DILocation(line: 4432, column: 22, scope: !7626)
!7628 = !DILocation(line: 4433, column: 7, scope: !7626)
!7629 = !DILocation(line: 4433, column: 10, scope: !7626)
!7630 = !DILocation(line: 4432, column: 7, scope: !7619)
!7631 = !DILocation(line: 4437, column: 3, scope: !7619)
!7632 = !DILocation(line: 4439, column: 14, scope: !7619)
!7633 = !DILocation(line: 4440, column: 3, scope: !7619)
!7634 = !DILocation(line: 4441, column: 3, scope: !7619)
!7635 = !DILocation(line: 4443, column: 3, scope: !7619)
!7636 = !DILocation(line: 4444, column: 3, scope: !7619)
!7637 = !DILocation(line: 4445, column: 7, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 4445, column: 7)
!7639 = !DILocation(line: 4445, column: 7, scope: !7619)
!7640 = !DILocation(line: 4446, column: 5, scope: !7638)
!7641 = !DILocation(line: 4448, column: 23, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 4448, column: 7)
!7643 = !DILocation(line: 4448, column: 31, scope: !7642)
!7644 = !DILocation(line: 4448, column: 7, scope: !7619)
!7645 = !DILocation(line: 4450, column: 29, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 4449, column: 5)
!7647 = !DILocation(line: 4450, column: 7, scope: !7646)
!7648 = !DILocation(line: 4451, column: 7, scope: !7646)
!7649 = !DILocation(line: 4452, column: 17, scope: !7646)
!7650 = !DILocation(line: 4453, column: 7, scope: !7646)
!7651 = !DILocation(line: 4454, column: 5, scope: !7646)
!7652 = !DILocation(line: 4456, column: 3, scope: !7619)
!7653 = !DILocation(line: 4457, column: 3, scope: !7619)
!7654 = !DILocation(line: 4458, column: 3, scope: !7619)
!7655 = !DILocation(line: 4461, column: 3, scope: !7619)
!7656 = !DILocation(line: 4463, column: 7, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 4463, column: 7)
!7658 = !DILocation(line: 4463, column: 7, scope: !7619)
!7659 = !DILocation(line: 4466, column: 9, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 4464, column: 5)
!7661 = !DILocation(line: 4466, column: 35, scope: !7660)
!7662 = !DILocation(line: 4466, column: 51, scope: !7660)
!7663 = !DILocation(line: 4465, column: 7, scope: !7660)
!7664 = !DILocation(line: 4467, column: 16, scope: !7660)
!7665 = !DILocation(line: 4468, column: 9, scope: !7660)
!7666 = !DILocation(line: 4468, column: 27, scope: !7660)
!7667 = !DILocation(line: 4467, column: 7, scope: !7660)
!7668 = !DILocation(line: 4469, column: 5, scope: !7660)
!7669 = !DILocation(line: 4472, column: 1, scope: !7619)
!7670 = distinct !DISubprogram(name: "alloc_code_hoist_mem", scope: !3, file: !3, line: 4114, type: !3199, scopeLine: 4115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7671)
!7671 = !{!7672, !7673}
!7672 = !DILocalVariable(name: "n_blocks", arg: 1, scope: !7670, file: !3, line: 4114, type: !772)
!7673 = !DILocalVariable(name: "n_exprs", arg: 2, scope: !7670, file: !3, line: 4114, type: !772)
!7674 = !DILocation(line: 0, scope: !7670)
!7675 = !DILocation(line: 4116, column: 12, scope: !7670)
!7676 = !DILocation(line: 4116, column: 10, scope: !7670)
!7677 = !DILocation(line: 4117, column: 12, scope: !7670)
!7678 = !DILocation(line: 4117, column: 10, scope: !7670)
!7679 = !DILocation(line: 4118, column: 10, scope: !7670)
!7680 = !DILocation(line: 4118, column: 8, scope: !7670)
!7681 = !DILocation(line: 4120, column: 17, scope: !7670)
!7682 = !DILocation(line: 4120, column: 15, scope: !7670)
!7683 = !DILocation(line: 4121, column: 18, scope: !7670)
!7684 = !DILocation(line: 4121, column: 16, scope: !7670)
!7685 = !DILocation(line: 4122, column: 17, scope: !7670)
!7686 = !DILocation(line: 4122, column: 15, scope: !7670)
!7687 = !DILocation(line: 4123, column: 15, scope: !7670)
!7688 = !DILocation(line: 4123, column: 13, scope: !7670)
!7689 = !DILocation(line: 4124, column: 1, scope: !7670)
!7690 = distinct !DISubprogram(name: "compute_code_hoist_data", scope: !3, file: !3, line: 4188, type: !2657, scopeLine: 4189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!7691 = !DILocation(line: 4190, column: 29, scope: !7690)
!7692 = !DILocation(line: 4190, column: 37, scope: !7690)
!7693 = !DILocation(line: 4190, column: 43, scope: !7690)
!7694 = !DILocation(line: 4190, column: 3, scope: !7690)
!7695 = !DILocation(line: 4191, column: 3, scope: !7690)
!7696 = !DILocation(line: 4192, column: 3, scope: !7690)
!7697 = !DILocation(line: 4193, column: 3, scope: !7690)
!7698 = !DILocation(line: 4194, column: 7, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 4194, column: 7)
!7700 = !DILocation(line: 4194, column: 7, scope: !7690)
!7701 = !DILocation(line: 4195, column: 5, scope: !7699)
!7702 = !DILocation(line: 4196, column: 1, scope: !7690)
!7703 = distinct !DISubprogram(name: "hoist_code", scope: !3, file: !3, line: 4260, type: !2220, scopeLine: 4261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7704)
!7704 = !{!7705, !7706, !7707, !7713, !7714, !7715, !7716, !7717, !7718, !7722, !7723, !7727, !7738, !7739, !7740}
!7705 = !DILocalVariable(name: "bb", scope: !7703, file: !3, line: 4262, type: !1338)
!7706 = !DILocalVariable(name: "dominated", scope: !7703, file: !3, line: 4262, type: !1338)
!7707 = !DILocalVariable(name: "domby", scope: !7703, file: !3, line: 4263, type: !7708)
!7708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7709, size: 64)
!7709 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !146, line: 283, baseType: !7710)
!7710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !146, line: 283, size: 128, elements: !7711)
!7711 = !{!7712}
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7710, file: !146, line: 283, baseType: !1419, size: 128)
!7713 = !DILocalVariable(name: "i", scope: !7703, file: !3, line: 4264, type: !9)
!7714 = !DILocalVariable(name: "j", scope: !7703, file: !3, line: 4264, type: !9)
!7715 = !DILocalVariable(name: "index_map", scope: !7703, file: !3, line: 4265, type: !1976)
!7716 = !DILocalVariable(name: "expr", scope: !7703, file: !3, line: 4266, type: !1977)
!7717 = !DILocalVariable(name: "changed", scope: !7703, file: !3, line: 4267, type: !772)
!7718 = !DILocalVariable(name: "found", scope: !7719, file: !3, line: 4283, type: !772)
!7719 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 4282, column: 5)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4281, column: 3)
!7721 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 4281, column: 3)
!7722 = !DILocalVariable(name: "insn_inserted_p", scope: !7719, file: !3, line: 4284, type: !772)
!7723 = !DILocalVariable(name: "hoistable", scope: !7724, file: !3, line: 4291, type: !772)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !3, line: 4290, column: 2)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 4289, column: 7)
!7726 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 4289, column: 7)
!7727 = !DILocalVariable(name: "expr", scope: !7728, file: !3, line: 4375, type: !1977)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 4374, column: 7)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 4373, column: 9)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 4357, column: 3)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 4356, column: 8)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 4356, column: 8)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 4352, column: 6)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 4351, column: 8)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !3, line: 4345, column: 2)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 4344, column: 7)
!7737 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 4344, column: 7)
!7738 = !DILocalVariable(name: "occr", scope: !7728, file: !3, line: 4376, type: !1984)
!7739 = !DILocalVariable(name: "insn", scope: !7728, file: !3, line: 4377, type: !787)
!7740 = !DILocalVariable(name: "set", scope: !7728, file: !3, line: 4378, type: !787)
!7741 = !DILocation(line: 4262, column: 3, scope: !7703)
!7742 = !DILocation(line: 4263, column: 3, scope: !7703)
!7743 = !DILocation(line: 0, scope: !7703)
!7744 = !DILocation(line: 4269, column: 24, scope: !7703)
!7745 = !DILocation(line: 4269, column: 37, scope: !7703)
!7746 = !DILocation(line: 4269, column: 3, scope: !7703)
!7747 = !DILocation(line: 4274, column: 15, scope: !7703)
!7748 = !DILocation(line: 4275, column: 8, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 4275, column: 3)
!7750 = !DILocation(line: 0, scope: !7749)
!7751 = !DILocation(line: 4275, column: 35, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 4275, column: 3)
!7753 = !DILocation(line: 4275, column: 17, scope: !7752)
!7754 = !DILocation(line: 4275, column: 3, scope: !7749)
!7755 = !DILocation(line: 4276, column: 33, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 4276, column: 5)
!7757 = !DILocation(line: 4276, column: 17, scope: !7756)
!7758 = !DILocation(line: 4276, column: 10, scope: !7756)
!7759 = !DILocation(line: 0, scope: !7756)
!7760 = !DILocation(line: 4276, column: 48, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 4276, column: 5)
!7762 = !DILocation(line: 4276, column: 5, scope: !7756)
!7763 = !DILocation(line: 4277, column: 23, scope: !7761)
!7764 = !DILocation(line: 4277, column: 7, scope: !7761)
!7765 = !DILocation(line: 4277, column: 37, scope: !7761)
!7766 = !DILocation(line: 4276, column: 70, scope: !7761)
!7767 = !DILocation(line: 4276, column: 5, scope: !7761)
!7768 = distinct !{!7768, !7762, !7769}
!7769 = !DILocation(line: 4277, column: 39, scope: !7756)
!7770 = !DILocation(line: 4275, column: 42, scope: !7752)
!7771 = !DILocation(line: 4275, column: 3, scope: !7752)
!7772 = distinct !{!7772, !7754, !7773}
!7773 = !DILocation(line: 4277, column: 39, scope: !7749)
!7774 = !DILocation(line: 4281, column: 3, scope: !7721)
!7775 = !DILocation(line: 4281, column: 3, scope: !7720)
!7776 = !DILocation(line: 4267, column: 7, scope: !7703)
!7777 = !DILocation(line: 0, scope: !7721)
!7778 = !DILocation(line: 0, scope: !7719)
!7779 = !DILocation(line: 4286, column: 15, scope: !7719)
!7780 = !DILocation(line: 4286, column: 13, scope: !7719)
!7781 = !DILocation(line: 0, scope: !7725)
!7782 = !DILocation(line: 4289, column: 12, scope: !7726)
!7783 = !DILocation(line: 0, scope: !7726)
!7784 = !DILocation(line: 4289, column: 23, scope: !7725)
!7785 = !DILocation(line: 4289, column: 40, scope: !7725)
!7786 = !DILocation(line: 4289, column: 48, scope: !7725)
!7787 = !DILocation(line: 4289, column: 21, scope: !7725)
!7788 = !DILocation(line: 4289, column: 7, scope: !7726)
!7789 = !DILocation(line: 0, scope: !7724)
!7790 = !DILocation(line: 4293, column: 8, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 4293, column: 8)
!7792 = !DILocation(line: 4294, column: 8, scope: !7791)
!7793 = !DILocation(line: 4294, column: 11, scope: !7791)
!7794 = !DILocation(line: 4293, column: 8, scope: !7724)
!7795 = !DILocation(line: 4299, column: 8, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 4299, column: 8)
!7797 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 4295, column: 6)
!7798 = !DILocation(line: 4291, column: 8, scope: !7724)
!7799 = !DILocation(line: 0, scope: !7796)
!7800 = !DILocation(line: 4299, column: 20, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 4299, column: 8)
!7802 = !DILocation(line: 4302, column: 15, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 4302, column: 9)
!7804 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 4300, column: 3)
!7805 = !DILocation(line: 4302, column: 12, scope: !7803)
!7806 = !DILocation(line: 4302, column: 9, scope: !7804)
!7807 = !DILocation(line: 4307, column: 10, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 4307, column: 9)
!7809 = !DILocation(line: 4307, column: 9, scope: !7804)
!7810 = !DILocation(line: 4315, column: 9, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 4315, column: 9)
!7812 = !DILocation(line: 4315, column: 9, scope: !7804)
!7813 = !DILocation(line: 4317, column: 3, scope: !7804)
!7814 = !DILocation(line: 4299, column: 69, scope: !7801)
!7815 = !DILocation(line: 4299, column: 8, scope: !7801)
!7816 = distinct !{!7816, !7795, !7817}
!7817 = !DILocation(line: 4317, column: 3, scope: !7796)
!7818 = !DILocation(line: 4329, column: 22, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 4329, column: 12)
!7820 = !DILocation(line: 4329, column: 12, scope: !7797)
!7821 = !DILocation(line: 4331, column: 14, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7819, file: !3, line: 4330, column: 3)
!7823 = !DILocation(line: 4331, column: 30, scope: !7822)
!7824 = !DILocation(line: 4331, column: 5, scope: !7822)
!7825 = !DILocation(line: 4333, column: 3, scope: !7822)
!7826 = !DILocation(line: 4289, column: 57, scope: !7725)
!7827 = !DILocation(line: 4289, column: 7, scope: !7725)
!7828 = distinct !{!7828, !7788, !7829}
!7829 = !DILocation(line: 4335, column: 2, scope: !7726)
!7830 = !DILocation(line: 4337, column: 13, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 4337, column: 11)
!7832 = !DILocation(line: 4337, column: 11, scope: !7719)
!7833 = !DILocation(line: 4344, column: 7, scope: !7737)
!7834 = !DILocation(line: 4339, column: 4, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 4338, column: 9)
!7836 = !DILocation(line: 4340, column: 4, scope: !7835)
!7837 = !DILocation(line: 4344, column: 39, scope: !7736)
!7838 = !DILocation(line: 4344, column: 23, scope: !7736)
!7839 = !DILocation(line: 4344, column: 47, scope: !7736)
!7840 = !DILocation(line: 4344, column: 21, scope: !7736)
!7841 = !DILocation(line: 4351, column: 8, scope: !7734)
!7842 = !DILocation(line: 4351, column: 8, scope: !7735)
!7843 = !DILocation(line: 0, scope: !7728)
!7844 = !DILocation(line: 4356, column: 8, scope: !7732)
!7845 = !DILocation(line: 4348, column: 20, scope: !7735)
!7846 = !DILocation(line: 0, scope: !7732)
!7847 = !DILocation(line: 4356, column: 20, scope: !7731)
!7848 = !DILocation(line: 4359, column: 15, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 4359, column: 9)
!7850 = !DILocation(line: 4359, column: 12, scope: !7849)
!7851 = !DILocation(line: 4359, column: 9, scope: !7730)
!7852 = !DILocation(line: 4365, column: 10, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 4365, column: 9)
!7854 = !DILocation(line: 4365, column: 9, scope: !7730)
!7855 = !DILocation(line: 4373, column: 9, scope: !7729)
!7856 = !DILocation(line: 4373, column: 9, scope: !7730)
!7857 = !DILocation(line: 4375, column: 29, scope: !7728)
!7858 = !DILocation(line: 4376, column: 35, scope: !7728)
!7859 = !DILocation(line: 4381, column: 9, scope: !7728)
!7860 = !DILocation(line: 4381, column: 16, scope: !7728)
!7861 = !DILocation(line: 4381, column: 44, scope: !7728)
!7862 = !DILocation(line: 4381, column: 57, scope: !7728)
!7863 = !DILocation(line: 4382, column: 17, scope: !7728)
!7864 = distinct !{!7864, !7859, !7863}
!7865 = !DILocation(line: 4384, column: 9, scope: !7728)
!7866 = !DILocation(line: 4385, column: 22, scope: !7728)
!7867 = !DILocation(line: 4386, column: 15, scope: !7728)
!7868 = !DILocation(line: 4387, column: 9, scope: !7728)
!7869 = !DILocation(line: 4392, column: 19, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 4392, column: 13)
!7871 = !DILocation(line: 4392, column: 32, scope: !7870)
!7872 = !DILocation(line: 4392, column: 13, scope: !7728)
!7873 = !DILocation(line: 4394, column: 31, scope: !7870)
!7874 = !DILocation(line: 4394, column: 8, scope: !7870)
!7875 = !DILocation(line: 4394, column: 6, scope: !7870)
!7876 = !DILocation(line: 4393, column: 4, scope: !7870)
!7877 = !DILocation(line: 4396, column: 37, scope: !7728)
!7878 = !DILocation(line: 4396, column: 51, scope: !7728)
!7879 = !DILocation(line: 4396, column: 9, scope: !7728)
!7880 = !DILocation(line: 4397, column: 9, scope: !7728)
!7881 = !DILocation(line: 4398, column: 15, scope: !7728)
!7882 = !DILocation(line: 4398, column: 25, scope: !7728)
!7883 = !DILocation(line: 4400, column: 25, scope: !7728)
!7884 = !DILocation(line: 4402, column: 14, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 4402, column: 13)
!7886 = !DILocation(line: 4402, column: 13, scope: !7728)
!7887 = !DILocation(line: 4404, column: 35, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 4403, column: 4)
!7889 = !DILocation(line: 4404, column: 6, scope: !7888)
!7890 = !DILocation(line: 4406, column: 4, scope: !7888)
!7891 = !DILocation(line: 4356, column: 69, scope: !7731)
!7892 = !DILocation(line: 4356, column: 8, scope: !7731)
!7893 = distinct !{!7893, !7844, !7894}
!7894 = !DILocation(line: 4408, column: 3, scope: !7732)
!7895 = !DILocation(line: 4344, column: 56, scope: !7736)
!7896 = !DILocation(line: 4344, column: 7, scope: !7736)
!7897 = distinct !{!7897, !7833, !7898}
!7898 = !DILocation(line: 4410, column: 2, scope: !7737)
!7899 = !DILocation(line: 4411, column: 7, scope: !7719)
!7900 = !DILocation(line: 4412, column: 5, scope: !7720)
!7901 = !DILocation(line: 0, scope: !7720)
!7902 = distinct !{!7902, !7774, !7903}
!7903 = !DILocation(line: 4412, column: 5, scope: !7721)
!7904 = !DILocation(line: 4414, column: 3, scope: !7703)
!7905 = !DILocation(line: 4417, column: 1, scope: !7703)
!7906 = !DILocation(line: 4416, column: 3, scope: !7703)
!7907 = distinct !DISubprogram(name: "free_code_hoist_mem", scope: !3, file: !3, line: 4129, type: !2657, scopeLine: 4130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !2222)
!7908 = !DILocation(line: 4131, column: 3, scope: !7907)
!7909 = !DILocation(line: 4132, column: 3, scope: !7907)
!7910 = !DILocation(line: 4133, column: 3, scope: !7907)
!7911 = !DILocation(line: 4135, column: 3, scope: !7907)
!7912 = !DILocation(line: 4136, column: 3, scope: !7907)
!7913 = !DILocation(line: 4137, column: 3, scope: !7907)
!7914 = !DILocation(line: 4138, column: 3, scope: !7907)
!7915 = !DILocation(line: 4140, column: 3, scope: !7907)
!7916 = !DILocation(line: 4141, column: 1, scope: !7907)
!7917 = distinct !DISubprogram(name: "compute_transpout", scope: !3, file: !3, line: 4063, type: !2657, scopeLine: 4064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7918)
!7918 = !{!7919, !7920, !7921}
!7919 = !DILocalVariable(name: "bb", scope: !7917, file: !3, line: 4065, type: !1338)
!7920 = !DILocalVariable(name: "i", scope: !7917, file: !3, line: 4066, type: !9)
!7921 = !DILocalVariable(name: "expr", scope: !7917, file: !3, line: 4067, type: !1977)
!7922 = !DILocation(line: 4069, column: 24, scope: !7917)
!7923 = !DILocation(line: 4069, column: 35, scope: !7917)
!7924 = !DILocation(line: 4069, column: 3, scope: !7917)
!7925 = !DILocation(line: 4071, column: 3, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 4071, column: 3)
!7927 = !DILocation(line: 4071, column: 3, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 4071, column: 3)
!7929 = !DILocation(line: 0, scope: !7926)
!7930 = !DILocation(line: 0, scope: !7917)
!7931 = !DILocation(line: 4076, column: 13, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 4076, column: 11)
!7933 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4072, column: 5)
!7934 = !DILocation(line: 4076, column: 11, scope: !7933)
!7935 = !DILocation(line: 0, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 4082, column: 6)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 4081, column: 8)
!7938 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 4080, column: 2)
!7939 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 4080, column: 2)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 4079, column: 7)
!7941 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 4079, column: 7)
!7942 = !DILocation(line: 4079, column: 7, scope: !7941)
!7943 = !DILocation(line: 0, scope: !7941)
!7944 = !DILocation(line: 4079, column: 39, scope: !7940)
!7945 = !DILocation(line: 4079, column: 21, scope: !7940)
!7946 = !DILocation(line: 4080, column: 30, scope: !7939)
!7947 = !DILocation(line: 4080, column: 14, scope: !7939)
!7948 = !DILocation(line: 4080, column: 7, scope: !7939)
!7949 = !DILocation(line: 0, scope: !7939)
!7950 = !DILocation(line: 4080, column: 2, scope: !7939)
!7951 = !DILocation(line: 4081, column: 8, scope: !7937)
!7952 = !DILocation(line: 4081, column: 8, scope: !7938)
!7953 = !DILocation(line: 4083, column: 12, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 4083, column: 12)
!7955 = !DILocation(line: 4083, column: 44, scope: !7954)
!7956 = !DILocation(line: 4084, column: 5, scope: !7954)
!7957 = !DILocation(line: 4084, column: 8, scope: !7954)
!7958 = !DILocation(line: 4083, column: 12, scope: !7936)
!7959 = !DILocation(line: 4090, column: 19, scope: !7936)
!7960 = !DILocation(line: 4090, column: 33, scope: !7936)
!7961 = !DILocation(line: 4090, column: 47, scope: !7936)
!7962 = !DILocation(line: 4090, column: 8, scope: !7936)
!7963 = !DILocation(line: 4091, column: 6, scope: !7936)
!7964 = !DILocation(line: 4080, column: 60, scope: !7938)
!7965 = !DILocation(line: 4080, column: 2, scope: !7938)
!7966 = distinct !{!7966, !7950, !7967}
!7967 = !DILocation(line: 4091, column: 6, scope: !7939)
!7968 = !DILocation(line: 4079, column: 46, scope: !7940)
!7969 = !DILocation(line: 4079, column: 7, scope: !7940)
!7970 = distinct !{!7970, !7942, !7971}
!7971 = !DILocation(line: 4091, column: 6, scope: !7941)
!7972 = !DILocation(line: 0, scope: !7928)
!7973 = distinct !{!7973, !7925, !7974}
!7974 = !DILocation(line: 4092, column: 5, scope: !7926)
!7975 = !DILocation(line: 4093, column: 1, scope: !7917)
!7976 = distinct !DISubprogram(name: "compute_code_hoist_vbeinout", scope: !3, file: !3, line: 4149, type: !2657, scopeLine: 4150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !7977)
!7977 = !{!7978, !7979, !7980}
!7978 = !DILocalVariable(name: "changed", scope: !7976, file: !3, line: 4151, type: !772)
!7979 = !DILocalVariable(name: "passes", scope: !7976, file: !3, line: 4151, type: !772)
!7980 = !DILocalVariable(name: "bb", scope: !7976, file: !3, line: 4152, type: !1338)
!7981 = !DILocation(line: 4154, column: 24, scope: !7976)
!7982 = !DILocation(line: 4154, column: 38, scope: !7976)
!7983 = !DILocation(line: 4154, column: 3, scope: !7976)
!7984 = !DILocation(line: 4155, column: 24, scope: !7976)
!7985 = !DILocation(line: 4155, column: 37, scope: !7976)
!7986 = !DILocation(line: 4155, column: 3, scope: !7976)
!7987 = !DILocation(line: 0, scope: !7976)
!7988 = !DILocation(line: 4160, column: 3, scope: !7976)
!7989 = !DILocation(line: 4166, column: 7, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 4166, column: 7)
!7991 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 4161, column: 5)
!7992 = !DILocation(line: 4166, column: 7, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 4166, column: 7)
!7994 = !DILocation(line: 0, scope: !7991)
!7995 = !DILocation(line: 0, scope: !7990)
!7996 = !DILocation(line: 4168, column: 12, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 4168, column: 8)
!7998 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 4167, column: 2)
!7999 = !DILocation(line: 4168, column: 23, scope: !7997)
!8000 = !DILocation(line: 4168, column: 20, scope: !7997)
!8001 = !DILocation(line: 4168, column: 8, scope: !7998)
!8002 = !DILocation(line: 4169, column: 37, scope: !7997)
!8003 = !DILocation(line: 4169, column: 54, scope: !7997)
!8004 = !DILocation(line: 4170, column: 9, scope: !7997)
!8005 = !DILocation(line: 4169, column: 6, scope: !7997)
!8006 = !DILocation(line: 4172, column: 40, scope: !7998)
!8007 = !DILocation(line: 4172, column: 56, scope: !7998)
!8008 = !DILocation(line: 4173, column: 12, scope: !7998)
!8009 = !DILocation(line: 4174, column: 12, scope: !7998)
!8010 = !DILocation(line: 4175, column: 12, scope: !7998)
!8011 = !DILocation(line: 4172, column: 15, scope: !7998)
!8012 = !DILocation(line: 4172, column: 12, scope: !7998)
!8013 = !DILocation(line: 0, scope: !7993)
!8014 = distinct !{!8014, !7989, !8015}
!8015 = !DILocation(line: 4176, column: 2, scope: !7990)
!8016 = !DILocation(line: 4178, column: 13, scope: !7991)
!8017 = distinct !{!8017, !7988, !8018}
!8018 = !DILocation(line: 4179, column: 5, scope: !7976)
!8019 = !DILocation(line: 4181, column: 7, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 4181, column: 7)
!8021 = !DILocation(line: 4181, column: 7, scope: !7976)
!8022 = !DILocation(line: 4182, column: 5, scope: !8020)
!8023 = !DILocation(line: 4183, column: 1, scope: !7976)
!8024 = distinct !DISubprogram(name: "VEC_basic_block_base_iterate", scope: !146, file: !146, line: 281, type: !8025, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !8030)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!772, !8027, !9, !8029}
!8027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8028, size: 64)
!8028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!8029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!8030 = !{!8031, !8032, !8033}
!8031 = !DILocalVariable(name: "vec_", arg: 1, scope: !8024, file: !146, line: 281, type: !8027)
!8032 = !DILocalVariable(name: "ix_", arg: 2, scope: !8024, file: !146, line: 281, type: !9)
!8033 = !DILocalVariable(name: "ptr", arg: 3, scope: !8024, file: !146, line: 281, type: !8029)
!8034 = !DILocation(line: 0, scope: !8024)
!8035 = !DILocation(line: 281, column: 1, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8024, file: !146, line: 281, column: 1)
!8037 = !DILocation(line: 281, column: 1, scope: !8024)
!8038 = !DILocation(line: 281, column: 1, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8036, file: !146, line: 281, column: 1)
!8040 = !DILocation(line: 281, column: 1, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8036, file: !146, line: 281, column: 1)
!8042 = !DILocation(line: 0, scope: !8036)
!8043 = distinct !DISubprogram(name: "hoist_expr_reaches_here_p", scope: !3, file: !3, line: 4212, type: !8044, scopeLine: 4213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !8046)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{!772, !1338, !772, !1338, !774}
!8046 = !{!8047, !8048, !8049, !8050, !8051, !8052, !8053, !8054}
!8047 = !DILocalVariable(name: "expr_bb", arg: 1, scope: !8043, file: !3, line: 4212, type: !1338)
!8048 = !DILocalVariable(name: "expr_index", arg: 2, scope: !8043, file: !3, line: 4212, type: !772)
!8049 = !DILocalVariable(name: "bb", arg: 3, scope: !8043, file: !3, line: 4212, type: !1338)
!8050 = !DILocalVariable(name: "visited", arg: 4, scope: !8043, file: !3, line: 4212, type: !774)
!8051 = !DILocalVariable(name: "pred", scope: !8043, file: !3, line: 4214, type: !1355)
!8052 = !DILocalVariable(name: "ei", scope: !8043, file: !3, line: 4215, type: !3896)
!8053 = !DILocalVariable(name: "visited_allocated_locally", scope: !8043, file: !3, line: 4216, type: !772)
!8054 = !DILocalVariable(name: "pred_bb", scope: !8055, file: !3, line: 4227, type: !1338)
!8055 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 4226, column: 5)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 4225, column: 3)
!8057 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 4225, column: 3)
!8058 = !DILocation(line: 0, scope: !8043)
!8059 = !DILocation(line: 4214, column: 3, scope: !8043)
!8060 = !DILocation(line: 4215, column: 3, scope: !8043)
!8061 = !DILocation(line: 4219, column: 15, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 4219, column: 7)
!8063 = !DILocation(line: 4219, column: 7, scope: !8043)
!8064 = !DILocation(line: 4222, column: 17, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 4220, column: 5)
!8066 = !DILocation(line: 4223, column: 5, scope: !8065)
!8067 = !DILocation(line: 4225, column: 3, scope: !8057)
!8068 = !DILocation(line: 0, scope: !8056)
!8069 = !DILocation(line: 0, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 4237, column: 16)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 4233, column: 16)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 4231, column: 16)
!8073 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 4229, column: 11)
!8074 = !DILocation(line: 4225, column: 3, scope: !8056)
!8075 = !DILocation(line: 4227, column: 29, scope: !8055)
!8076 = !DILocation(line: 4227, column: 35, scope: !8055)
!8077 = !DILocation(line: 0, scope: !8055)
!8078 = !DILocation(line: 4229, column: 24, scope: !8073)
!8079 = !DILocation(line: 4229, column: 21, scope: !8073)
!8080 = !DILocation(line: 4229, column: 11, scope: !8055)
!8081 = !DILocation(line: 4231, column: 24, scope: !8072)
!8082 = !DILocation(line: 4231, column: 16, scope: !8073)
!8083 = !DILocation(line: 4233, column: 33, scope: !8071)
!8084 = !DILocation(line: 4233, column: 16, scope: !8071)
!8085 = !DILocation(line: 4233, column: 16, scope: !8072)
!8086 = !DILocation(line: 4237, column: 16, scope: !8070)
!8087 = !DILocation(line: 4237, column: 16, scope: !8071)
!8088 = !DILocation(line: 4239, column: 18, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 4239, column: 16)
!8090 = !DILocation(line: 4239, column: 16, scope: !8070)
!8091 = !DILocation(line: 4245, column: 28, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 4244, column: 2)
!8093 = !DILocation(line: 4246, column: 10, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 4246, column: 8)
!8095 = !DILocation(line: 4246, column: 8, scope: !8092)
!8096 = distinct !{!8096, !8067, !8097}
!8097 = !DILocation(line: 4250, column: 5, scope: !8057)
!8098 = !DILocation(line: 4251, column: 7, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 4251, column: 7)
!8100 = !DILocation(line: 4251, column: 7, scope: !8043)
!8101 = !DILocation(line: 4252, column: 5, scope: !8099)
!8102 = !DILocation(line: 4254, column: 11, scope: !8043)
!8103 = !DILocation(line: 4254, column: 16, scope: !8043)
!8104 = !DILocation(line: 4255, column: 1, scope: !8043)
!8105 = !DILocation(line: 4254, column: 3, scope: !8043)
!8106 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !146, file: !146, line: 283, type: !8107, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !8110)
!8107 = !DISubroutineType(types: !8108)
!8108 = !{null, !8109}
!8109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7708, size: 64)
!8110 = !{!8111}
!8111 = !DILocalVariable(name: "vec_", arg: 1, scope: !8106, file: !146, line: 283, type: !8109)
!8112 = !DILocation(line: 0, scope: !8106)
!8113 = !DILocation(line: 283, column: 1, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8106, file: !146, line: 283, column: 1)
!8115 = !DILocation(line: 283, column: 1, scope: !8106)
