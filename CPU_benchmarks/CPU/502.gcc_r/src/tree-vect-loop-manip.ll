; ModuleID = 'tree-vect-loop-manip.bc'
source_filename = "tree-vect-loop-manip.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_vec_void_p_heap = type { %struct.VEC_vec_void_p_base }
%struct.VEC_vec_void_p_base = type { i32, i32, [1 x i8*] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.VEC_adjust_info_stack = type { %struct.VEC_adjust_info_base }
%struct.VEC_adjust_info_base = type { i32, i32, [1 x %struct.adjust_info] }
%struct.adjust_info = type { %union.tree_node*, %union.tree_node*, %struct.basic_block_def* }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct._loop_vec_info = type { %struct.loop*, %struct.basic_block_def**, %union.tree_node*, %union.tree_node*, i32, i8, i32, %struct.data_reference*, i32, i32, %struct.VEC_data_reference_p_heap*, %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap*, %struct.VEC_gimple_heap*, i32, %struct.VEC_gimple_heap*, %struct.VEC_slp_instance_heap*, i32 }
%struct.data_reference = type { %union.gimple_statement_d*, %union.tree_node*, i8*, i8, %struct.innermost_loop_behavior, %struct.indices, %struct.dr_alias, %struct.access_matrix* }
%struct.innermost_loop_behavior = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.indices = type { %union.tree_node*, %struct.VEC_tree_heap* }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.dr_alias = type { %struct.ptr_info_def*, %struct.bitmap_head_def* }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.access_matrix = type { %struct.VEC_loop_p_heap*, i32, %struct.VEC_tree_heap*, %struct.VEC_lambda_vector_gc* }
%struct.VEC_loop_p_heap = type { %struct.VEC_loop_p_base }
%struct.VEC_lambda_vector_gc = type { %struct.VEC_lambda_vector_base }
%struct.VEC_lambda_vector_base = type { i32, i32, [1 x i32*] }
%struct.VEC_data_reference_p_heap = type { %struct.VEC_data_reference_p_base }
%struct.VEC_data_reference_p_base = type { i32, i32, [1 x %struct.data_reference*] }
%struct.VEC_ddr_p_heap = type { %struct.VEC_ddr_p_base }
%struct.VEC_ddr_p_base = type { i32, i32, [1 x %struct.data_dependence_relation*] }
%struct.data_dependence_relation = type { %struct.data_reference*, %struct.data_reference*, %union.tree_node*, %struct.VEC_subscript_p_heap*, %struct.VEC_loop_p_heap*, %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap*, i32, i8, i8, i8 }
%struct.VEC_subscript_p_heap = type { %struct.VEC_subscript_p_base }
%struct.VEC_subscript_p_base = type { i32, i32, [1 x %struct.subscript*] }
%struct.subscript = type { %struct.conflict_function*, %struct.conflict_function*, %union.tree_node*, %union.tree_node* }
%struct.conflict_function = type { i32, [2 x %struct.VEC_tree_heap*] }
%struct.VEC_lambda_vector_heap = type { %struct.VEC_lambda_vector_base }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.VEC_slp_instance_heap = type { %struct.VEC_slp_instance_base }
%struct.VEC_slp_instance_base = type { i32, i32, [1 x %struct._slp_instance*] }
%struct._slp_instance = type { %struct._slp_tree*, i32, i32, %struct.anon.0, %struct.VEC_int_heap*, %struct.VEC_slp_tree_heap*, %union.gimple_statement_d* }
%struct._slp_tree = type { %struct._slp_tree*, %struct._slp_tree*, %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap*, i32, %struct.anon }
%struct.anon = type { i32, i32 }
%struct.anon.0 = type { i32, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_slp_tree_heap = type { %struct.VEC_slp_tree_base }
%struct.VEC_slp_tree_base = type { i32, i32, [1 x %struct._slp_tree*] }
%struct._stmt_vec_info = type { i32, %union.gimple_statement_d*, %struct._loop_vec_info*, i32, i8, %union.tree_node*, %union.gimple_statement_d*, %struct.data_reference*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8, %union.gimple_statement_d*, %struct.VEC_dr_p_heap*, i32, %union.gimple_statement_d*, %union.gimple_statement_d*, i32, i32, i32, %union.gimple_statement_d*, i8, %struct.anon.1, i32, %struct._bb_vec_info* }
%struct.VEC_dr_p_heap = type { %struct.VEC_dr_p_base }
%struct.VEC_dr_p_base = type { i32, i32, [1 x %struct.data_reference*] }
%struct.anon.1 = type { i32, i32 }
%struct._bb_vec_info = type { %struct.basic_block_def*, %struct.VEC_gimple_heap*, %struct.VEC_slp_instance_heap*, %struct.VEC_data_reference_p_heap*, %struct.VEC_ddr_p_heap* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [23 x i8] c"tree-vect-loop-manip.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [17 x i8] c"\0Aloop at %s:%d: \00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@vect_dump = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [24 x i8] c"vect_can_advance_ivs_p:\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"Analyze phi: \00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"virtual phi. skip.\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"reduc phi. skip.\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"No Access function.\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"Access function of PHI: \00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"No evolution.\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"=== vect_do_peeling_for_loop_bound ===\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"=== vect_do_peeling_for_alignment ===\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.12 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@stmt_vec_info_vec = external dso_local local_unnamed_addr global %struct.VEC_vec_void_p_heap*, align 8
@.str.15 = private unnamed_addr constant [20 x i8] c"./tree-vectorizer.h\00", align 1
@chrec_dont_know = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@chrec_known = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.16 = private unnamed_addr constant [4 x i8] c"bnd\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"ratio_mult_vf\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.18 = private unnamed_addr constant [47 x i8] c"Profitability threshold is %u loop iterations.\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"\0A%s:%d: note: \00", align 1
@.str.20 = private unnamed_addr constant [41 x i8] c"tree_duplicate_loop_to_edge_cfg failed.\0A\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@adjust_vec = internal global %struct.VEC_adjust_info_stack* null, align 8, !dbg !0
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.21 = private unnamed_addr constant [27 x i8] c"prologue_after_cost_adjust\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"vect_update_ivs_after_vectorizer: phi: \00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.23 = private unnamed_addr constant [4 x i8] c"tmp\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"niters\00", align 1
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@.str.25 = private unnamed_addr constant [22 x i8] c"known alignment = %d.\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.26 = private unnamed_addr constant [25 x i8] c"niters for prolog loop: \00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"prolog_loop_niters\00", align 1
@.str.28 = private unnamed_addr constant [32 x i8] c"=== vect_update_inits_of_dr ===\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"%s%d\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"addr2int\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"orptrs\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"andmask\00", align 1
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@.str.33 = private unnamed_addr constant [42 x i8] c"create runtime check for data references \00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c" and \00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"created %u versioning for alias checks.\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2176 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2189, metadata !DIExpression()), !dbg !2191
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2190, metadata !DIExpression()), !dbg !2191
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2192
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2193
  ret i32 %call, !dbg !2194
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2195 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2199
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2200
  ret i32 %call, !dbg !2201
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2202 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2256, metadata !DIExpression()), !dbg !2257
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2258
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2258
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2258
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2258
  %cmp = icmp uge i8* %0, %1, !dbg !2258
  %conv1 = zext i1 %cmp to i64, !dbg !2258
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2258
  %tobool = icmp eq i64 %expval, 0, !dbg !2258
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2258

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2258
  br label %cond.end, !dbg !2258

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2258
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2258
  %2 = load i8, i8* %0, align 1, !dbg !2258
  %conv3 = zext i8 %2 to i32, !dbg !2258
  br label %cond.end, !dbg !2258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2258
  ret i32 %cond, !dbg !2259
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2260 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2262, metadata !DIExpression()), !dbg !2263
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2264
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2264
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2264
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2264
  %cmp = icmp uge i8* %0, %1, !dbg !2264
  %conv1 = zext i1 %cmp to i64, !dbg !2264
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2264
  %tobool = icmp eq i64 %expval, 0, !dbg !2264
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2264

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2264
  br label %cond.end, !dbg !2264

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2264
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2264
  %2 = load i8, i8* %0, align 1, !dbg !2264
  %conv3 = zext i8 %2 to i32, !dbg !2264
  br label %cond.end, !dbg !2264

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2264
  ret i32 %cond, !dbg !2265
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2266 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2267
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2267
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2267
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2267
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2267
  %cmp = icmp uge i8* %1, %2, !dbg !2267
  %conv1 = zext i1 %cmp to i64, !dbg !2267
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2267
  %tobool = icmp eq i64 %expval, 0, !dbg !2267
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2267

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2267
  br label %cond.end, !dbg !2267

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2267
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2267
  %3 = load i8, i8* %1, align 1, !dbg !2267
  %conv3 = zext i8 %3 to i32, !dbg !2267
  br label %cond.end, !dbg !2267

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2267
  ret i32 %cond, !dbg !2268
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2269 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2273, metadata !DIExpression()), !dbg !2274
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2275
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2276
  ret i32 %call, !dbg !2277
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2278 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2282, metadata !DIExpression()), !dbg !2284
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2283, metadata !DIExpression()), !dbg !2284
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2285
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2285
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2285
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2285
  %cmp = icmp uge i8* %0, %1, !dbg !2285
  %conv1 = zext i1 %cmp to i64, !dbg !2285
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2285
  %tobool = icmp eq i64 %expval, 0, !dbg !2285
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2285

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2285
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2285
  br label %cond.end, !dbg !2285

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2285
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2285
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2285
  store i8 %conv2, i8* %0, align 1, !dbg !2285
  %conv6 = and i32 %__c, 255, !dbg !2285
  br label %cond.end, !dbg !2285

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2285
  ret i32 %cond, !dbg !2286
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2287 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2289, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2290, metadata !DIExpression()), !dbg !2291
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2292
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2292
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2292
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2292
  %cmp = icmp uge i8* %0, %1, !dbg !2292
  %conv1 = zext i1 %cmp to i64, !dbg !2292
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2292
  %tobool = icmp eq i64 %expval, 0, !dbg !2292
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2292

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2292
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2292
  br label %cond.end, !dbg !2292

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2292
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2292
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2292
  store i8 %conv2, i8* %0, align 1, !dbg !2292
  %conv6 = and i32 %__c, 255, !dbg !2292
  br label %cond.end, !dbg !2292

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2292
  ret i32 %cond, !dbg !2293
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2294 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2296, metadata !DIExpression()), !dbg !2297
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2298
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2298
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2298
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2298
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2298
  %cmp = icmp uge i8* %1, %2, !dbg !2298
  %conv1 = zext i1 %cmp to i64, !dbg !2298
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2298
  %tobool = icmp eq i64 %expval, 0, !dbg !2298
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2298

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2298
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2298
  br label %cond.end, !dbg !2298

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2298
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2298
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2298
  store i8 %conv4, i8* %1, align 1, !dbg !2298
  %conv6 = and i32 %__c, 255, !dbg !2298
  br label %cond.end, !dbg !2298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2298
  ret i32 %cond, !dbg !2299
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2300 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2306, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2307, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2308, metadata !DIExpression()), !dbg !2309
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2310
  ret i64 %call, !dbg !2311
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2312 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2314, metadata !DIExpression()), !dbg !2315
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2316
  %0 = load i32, i32* %_flags, align 8, !dbg !2316
  %and = lshr i32 %0, 4, !dbg !2316
  %and.lobit = and i32 %and, 1, !dbg !2316
  ret i32 %and.lobit, !dbg !2317
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2318 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2320, metadata !DIExpression()), !dbg !2321
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2322
  %0 = load i32, i32* %_flags, align 8, !dbg !2322
  %and = lshr i32 %0, 5, !dbg !2322
  %and.lobit = and i32 %and, 1, !dbg !2322
  ret i32 %and.lobit, !dbg !2323
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2324 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2327, metadata !DIExpression()), !dbg !2328
  %__c.off = add i32 %__c, 128, !dbg !2329
  %0 = icmp ult i32 %__c.off, 384, !dbg !2329
  br i1 %0, label %cond.true, label %cond.end, !dbg !2329

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2330
  %1 = load i32*, i32** %call, align 8, !dbg !2331
  %idxprom = sext i32 %__c to i64, !dbg !2332
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2332
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2332
  br label %cond.end, !dbg !2333

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2333
  ret i32 %cond, !dbg !2334
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2335 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2337, metadata !DIExpression()), !dbg !2338
  %__c.off = add i32 %__c, 128, !dbg !2339
  %0 = icmp ult i32 %__c.off, 384, !dbg !2339
  br i1 %0, label %cond.true, label %cond.end, !dbg !2339

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2340
  %1 = load i32*, i32** %call, align 8, !dbg !2341
  %idxprom = sext i32 %__c to i64, !dbg !2342
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2342
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2342
  br label %cond.end, !dbg !2343

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2343
  ret i32 %cond, !dbg !2344
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2345 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2350, metadata !DIExpression()), !dbg !2351
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2352
  %conv = trunc i64 %call to i32, !dbg !2353
  ret i32 %conv, !dbg !2354
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2355 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2359, metadata !DIExpression()), !dbg !2360
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2361
  ret i64 %call, !dbg !2362
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2363 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2368, metadata !DIExpression()), !dbg !2369
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2370
  ret i64 %call, !dbg !2371
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2372 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2378, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2379, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2380, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2381, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2382, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i64 0, metadata !2383, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2384, metadata !DIExpression()), !dbg !2388
  br label %while.cond, !dbg !2389

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2390
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2388
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2384, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2383, metadata !DIExpression()), !dbg !2388
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2391
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2389

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2392
  %div = lshr i64 %add, 1, !dbg !2394
  call void @llvm.dbg.value(metadata i64 %div, metadata !2385, metadata !DIExpression()), !dbg !2388
  %mul = mul i64 %div, %__size, !dbg !2395
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2396
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2386, metadata !DIExpression()), !dbg !2388
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2397
  call void @llvm.dbg.value(metadata i32 %call, metadata !2387, metadata !DIExpression()), !dbg !2388
  %cmp1 = icmp slt i32 %call, 0, !dbg !2398
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2400

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2401
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2403

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2404
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2383, metadata !DIExpression()), !dbg !2388
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2388
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2388
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2384, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2383, metadata !DIExpression()), !dbg !2388
  br label %while.cond, !dbg !2389, !llvm.loop !2405

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2388
  ret i8* %retval.0, !dbg !2407
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2408 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2414, metadata !DIExpression()), !dbg !2415
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2416
  ret double %call, !dbg !2417
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2418 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2427, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2428, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i32 %base, metadata !2429, metadata !DIExpression()), !dbg !2430
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2431
  ret i64 %call, !dbg !2432
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2433 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2439, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2440, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i32 %base, metadata !2441, metadata !DIExpression()), !dbg !2442
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2443
  ret i64 %call, !dbg !2444
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2445 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2456, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2457, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.value(metadata i32 %base, metadata !2458, metadata !DIExpression()), !dbg !2459
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2460
  ret i64 %call, !dbg !2461
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2462 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2466, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2467, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.value(metadata i32 %base, metadata !2468, metadata !DIExpression()), !dbg !2469
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2470
  ret i64 %call, !dbg !2471
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2472 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2512, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2513, metadata !DIExpression()), !dbg !2514
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2515
  ret i32 %call, !dbg !2516
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2517 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2519, metadata !DIExpression()), !dbg !2521
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2520, metadata !DIExpression()), !dbg !2521
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2522
  ret i32 %call, !dbg !2523
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2524 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2528, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2529, metadata !DIExpression()), !dbg !2530
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2531
  ret i32 %call, !dbg !2532
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2533 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2537, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2538, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2539, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2540, metadata !DIExpression()), !dbg !2541
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2542
  ret i32 %call, !dbg !2543
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2544 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2548, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2549, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2550, metadata !DIExpression()), !dbg !2551
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2550, metadata !DIExpression(DW_OP_deref)), !dbg !2551
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2552
  ret i32 %call, !dbg !2553
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2554 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2558, metadata !DIExpression()), !dbg !2562
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2559, metadata !DIExpression()), !dbg !2562
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2560, metadata !DIExpression()), !dbg !2562
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2561, metadata !DIExpression()), !dbg !2562
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2561, metadata !DIExpression(DW_OP_deref)), !dbg !2562
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2563
  ret i32 %call, !dbg !2564
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2565 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2589, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2590, metadata !DIExpression()), !dbg !2591
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2592
  ret i32 %call, !dbg !2593
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2594 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2596, metadata !DIExpression()), !dbg !2598
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2597, metadata !DIExpression()), !dbg !2598
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2599
  ret i32 %call, !dbg !2600
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2601 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2605, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2606, metadata !DIExpression()), !dbg !2607
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2608
  ret i32 %call, !dbg !2609
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2610 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2614, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2615, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2616, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2617, metadata !DIExpression()), !dbg !2618
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2619
  ret i32 %call, !dbg !2620
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @rename_variables_in_bb(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !2621 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp11 = alloca %struct.edge_iterator, align 8
  %tmp19 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2625, metadata !DIExpression()), !dbg !2657
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !2658
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2658
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !2659
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !2659
  %2 = bitcast %struct.edge_def** %e to i8*, !dbg !2660
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !2660
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2661
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7, !dbg !2661
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !2662
  %4 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !2662
  call void @llvm.dbg.value(metadata %struct.loop* %4, metadata !2656, metadata !DIExpression()), !dbg !2657
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2663
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !2663
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #8, !dbg !2663
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !2663
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !2663
  br label %for.cond, !dbg !2665

for.cond:                                         ; preds = %for.inc9, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2626, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2666
  %tobool = icmp eq i8 %call, 0, !dbg !2668
  br i1 %tobool, label %for.body, label %for.end10, !dbg !2669

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2626, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2670
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !2633, metadata !DIExpression()), !dbg !2657
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !2635, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  %call2 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call1, i32 5) #8, !dbg !2672
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call2, metadata !2634, metadata !DIExpression()), !dbg !2657
  br label %for.cond3, !dbg !2672

for.cond3:                                        ; preds = %for.body7, %for.body
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call2, %for.body ], [ %call8, %for.body7 ], !dbg !2674
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !2634, metadata !DIExpression()), !dbg !2657
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !2635, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  %call4 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !2675
  %tobool5 = icmp eq i8 %call4, 0, !dbg !2675
  br i1 %tobool5, label %for.body7, label %for.inc9, !dbg !2672

for.body7:                                        ; preds = %for.cond3
  call fastcc void @rename_use_op(%struct.ssa_use_operand_d* %use_p.0) #8, !dbg !2677
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !2635, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  %call8 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !2675
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call8, metadata !2634, metadata !DIExpression()), !dbg !2657
  br label %for.cond3, !dbg !2675, !llvm.loop !2678

for.inc9:                                         ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2626, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !2680
  br label %for.cond, !dbg !2681, !llvm.loop !2682

for.end10:                                        ; preds = %for.cond
  %6 = bitcast %struct.edge_iterator* %tmp11 to i8*, !dbg !2684
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7, !dbg !2684
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !2684
  %call12 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !2684
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp11, i64 0, i32 0, !dbg !2684
  %8 = extractvalue { i32, %struct.VEC_edge_gc** } %call12, 0, !dbg !2684
  store i32 %8, i32* %7, align 8, !dbg !2684
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp11, i64 0, i32 1, !dbg !2684
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call12, 1, !dbg !2684
  store %struct.VEC_edge_gc** %10, %struct.VEC_edge_gc*** %9, align 8, !dbg !2684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !2684
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7, !dbg !2684
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2686
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2686
  %13 = bitcast %struct.gimple_stmt_iterator* %tmp19 to i8*, !dbg !2688
  br label %for.cond13, !dbg !2684

for.cond13:                                       ; preds = %for.inc30, %for.end10
  %14 = load i32, i32* %11, align 8, !dbg !2691
  %15 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !2691
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2648, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  %call14 = call fastcc zeroext i8 @ei_cond(i32 %14, %struct.VEC_edge_gc** %15, %struct.edge_def** nonnull %e) #8, !dbg !2691
  %tobool15 = icmp eq i8 %call14, 0, !dbg !2684
  br i1 %tobool15, label %for.end31, label %for.body16, !dbg !2684

for.body16:                                       ; preds = %for.cond13
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2692
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !2648, metadata !DIExpression()), !dbg !2657
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 1, !dbg !2694
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2694
  %call17 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %4, %struct.basic_block_def* %17) #6, !dbg !2695
  %tobool18 = icmp eq i8 %call17, 0, !dbg !2695
  br i1 %tobool18, label %for.inc30, label %if.end, !dbg !2696

if.end:                                           ; preds = %for.body16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #7, !dbg !2697
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2698
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !2648, metadata !DIExpression()), !dbg !2657
  %dest20 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %18, i64 0, i32 1, !dbg !2699
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest20, align 8, !dbg !2699
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp19, %struct.basic_block_def* %19) #6, !dbg !2697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %13, i64 24, i1 false), !dbg !2697
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #7, !dbg !2697
  br label %for.cond21, !dbg !2700

for.cond21:                                       ; preds = %for.body25, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2626, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  %call22 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2701
  %tobool23 = icmp eq i8 %call22, 0, !dbg !2703
  br i1 %tobool23, label %for.body25, label %for.inc30.loopexit, !dbg !2704

for.body25:                                       ; preds = %for.cond21
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2626, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  %call26 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2705
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2705
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !2648, metadata !DIExpression()), !dbg !2657
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 6, !dbg !2705
  %21 = load i32, i32* %dest_idx, align 4, !dbg !2705
  %call27 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call26, i32 %21) #8, !dbg !2705
  call fastcc void @rename_use_op(%struct.ssa_use_operand_d* %call27) #8, !dbg !2706
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2626, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !2707
  br label %for.cond21, !dbg !2708, !llvm.loop !2709

for.inc30.loopexit:                               ; preds = %for.cond21
  br label %for.inc30, !dbg !2691

for.inc30:                                        ; preds = %for.inc30.loopexit, %for.body16
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2649, metadata !DIExpression(DW_OP_deref)), !dbg !2657
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !2691
  br label %for.cond13, !dbg !2691, !llvm.loop !2711

for.end31:                                        ; preds = %for.cond13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7, !dbg !2713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !2713
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !2713
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2713
  ret void, !dbg !2713
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !2714 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2718, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !2719, metadata !DIExpression()), !dbg !2722
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !2723
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !2720, metadata !DIExpression()), !dbg !2721
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !2724
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !2725
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2726
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !2727
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !2728
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !2729
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !2730
  ret void, !dbg !2731
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !2732 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !2736, metadata !DIExpression()), !dbg !2737
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2738
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2738
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !2739
  %conv1 = zext i1 %cmp to i8, !dbg !2740
  ret i8 %conv1, !dbg !2741
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !2742 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !2746, metadata !DIExpression()), !dbg !2747
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2748
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2748
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !2749
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !2749
  ret %union.gimple_statement_d* %1, !dbg !2750
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !2751 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !2757, metadata !DIExpression()), !dbg !2760
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2758, metadata !DIExpression()), !dbg !2760
  call void @llvm.dbg.value(metadata i32 %flags, metadata !2759, metadata !DIExpression()), !dbg !2760
  %0 = and i32 %flags, 11, !dbg !2761
  %1 = icmp eq i32 %0, 1, !dbg !2761
  br i1 %1, label %cond.end, label %cond.true, !dbg !2761

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2761
  br label %cond.end, !dbg !2761

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #8, !dbg !2762
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !2763
  store i32 2, i32* %iter_type, align 4, !dbg !2764
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !2765
  ret %struct.ssa_use_operand_d* %call, !dbg !2766
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !2767 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !2773, metadata !DIExpression()), !dbg !2774
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !2775
  %0 = load i8, i8* %done, align 8, !dbg !2775
  ret i8 %0, !dbg !2776
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rename_use_op(%struct.ssa_use_operand_d* %op_p) unnamed_addr #5 !dbg !2777 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %op_p, metadata !2781, metadata !DIExpression()), !dbg !2783
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %op_p) #8, !dbg !2784
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2784
  %bf.load = load i64, i64* %0, align 8, !dbg !2784
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2786
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !2786
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !2787

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %op_p) #8, !dbg !2788
  %call2 = tail call %union.tree_node* @get_current_def(%union.tree_node* %call1) #6, !dbg !2789
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !2782, metadata !DIExpression()), !dbg !2783
  %tobool = icmp eq %union.tree_node* %call2, null, !dbg !2790
  br i1 %tobool, label %cleanup.cont, label %if.end4, !dbg !2792

if.end4:                                          ; preds = %if.end
  tail call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %op_p, %union.tree_node* nonnull %call2) #8, !dbg !2793
  br label %cleanup.cont, !dbg !2794

cleanup.cont:                                     ; preds = %if.end, %entry, %if.end4
  ret void, !dbg !2794
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !2795 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !2799, metadata !DIExpression()), !dbg !2801
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !2802
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !2802
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !2804
  br i1 %tobool, label %if.end, label %if.then, !dbg !2805

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !2806
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !2800, metadata !DIExpression()), !dbg !2801
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !2808
  %2 = load i64, i64* %1, align 8, !dbg !2808
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !2809
  store i64 %2, i64* %3, align 8, !dbg !2809
  br label %cleanup, !dbg !2810

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !2811
  %4 = load i32, i32* %phi_i, align 8, !dbg !2811
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !2813
  %5 = load i32, i32* %num_phi, align 4, !dbg !2813
  %cmp = icmp slt i32 %4, %5, !dbg !2814
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !2815

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !2816
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !2816
  %inc = add nsw i32 %4, 1, !dbg !2816
  store i32 %inc, i32* %phi_i, align 8, !dbg !2816
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #8, !dbg !2816
  br label %cleanup, !dbg !2818

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !2819
  store i8 1, i8* %done, align 8, !dbg !2820
  br label %cleanup, !dbg !2821

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !2801
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !2822
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !2823 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !2828, metadata !DIExpression()), !dbg !2829
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !2830
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !2830
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !2831
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !2831
  %2 = load i64, i64* %1, align 8, !dbg !2831
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !2832
  store i64 %2, i64* %3, align 8, !dbg !2832
  ret void, !dbg !2833
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !2834 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !2838, metadata !DIExpression()), !dbg !2840
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !2841
  store i32 0, i32* %index, align 8, !dbg !2842
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !2843
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !2844
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !2845
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !2845
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !2845
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !2846 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !2852, metadata !DIExpression()), !dbg !2853
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !2854
  %tobool = icmp eq i8 %call, 0, !dbg !2854
  br i1 %tobool, label %if.then, label %if.else, !dbg !2856

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !2857
  br label %return, !dbg !2859

if.else:                                          ; preds = %entry
  br label %return, !dbg !2860

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !2862
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !2862
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !2862
  ret i8 %retval.0, !dbg !2863
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !2864 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2868, metadata !DIExpression()), !dbg !2870
  call void @llvm.dbg.value(metadata i32 %i, metadata !2869, metadata !DIExpression()), !dbg !2870
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #8, !dbg !2871
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !2872
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !2873
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !2874 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !2879, metadata !DIExpression()), !dbg !2880
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !2881
  %0 = load i32, i32* %index, align 8, !dbg !2881
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !2881
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2881
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #8, !dbg !2881
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !2881
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2881

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !2881
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2881
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #8, !dbg !2881
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !2881
  br label %cond.end, !dbg !2881

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2881
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !2881
  %cmp = icmp ult i32 %0, %call2, !dbg !2881
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !2881

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2881
  br label %cond.end5, !dbg !2881

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !2882
  %inc = add i32 %5, 1, !dbg !2882
  store i32 %inc, i32* %index, align 8, !dbg !2882
  ret void, !dbg !2883
}

; Function Attrs: nounwind uwtable
define dso_local void @rename_variables_in_loop(%struct.loop* %loop) local_unnamed_addr #5 !dbg !2884 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2888, metadata !DIExpression()), !dbg !2891
  %call = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* %loop) #6, !dbg !2892
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !2890, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i32 0, metadata !2889, metadata !DIExpression()), !dbg !2891
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !2893
  br label %for.cond, !dbg !2896

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !2897
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2889, metadata !DIExpression()), !dbg !2891
  %0 = load i32, i32* %num_nodes, align 4, !dbg !2898
  %1 = zext i32 %0 to i64, !dbg !2899
  %cmp = icmp ult i64 %indvars.iv, %1, !dbg !2899
  br i1 %cmp, label %for.body, label %for.end, !dbg !2900

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !2901
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !2901
  tail call void @rename_variables_in_bb(%struct.basic_block_def* %2) #8, !dbg !2902
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2903
  br label %for.cond, !dbg !2904, !llvm.loop !2905

for.end:                                          ; preds = %for.cond
  %3 = bitcast %struct.basic_block_def** %call to i8*, !dbg !2907
  tail call void @free(i8* %3) #6, !dbg !2908
  ret void, !dbg !2909
}

declare dso_local %struct.basic_block_def** @get_loop_body(%struct.loop*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @slpeel_make_loop_iterate_ntimes(%struct.loop* %loop, %union.tree_node* %niters) local_unnamed_addr #5 !dbg !2910 {
entry:
  %indx_before_incr = alloca %union.tree_node*, align 8
  %indx_after_incr = alloca %union.tree_node*, align 8
  %loop_cond_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %incr_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %insert_after = alloca i8, align 1
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp16 = alloca %struct.expanded_location, align 8
  %tmp17 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2914, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.value(metadata %union.tree_node* %niters, metadata !2915, metadata !DIExpression()), !dbg !2928
  %0 = bitcast %union.tree_node** %indx_before_incr to i8*, !dbg !2929
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2929
  %1 = bitcast %union.tree_node** %indx_after_incr to i8*, !dbg !2929
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2929
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !2930
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !2920, metadata !DIExpression()), !dbg !2928
  %2 = bitcast %struct.gimple_stmt_iterator* %loop_cond_gsi to i8*, !dbg !2931
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !2931
  %3 = bitcast %struct.gimple_stmt_iterator* %incr_gsi to i8*, !dbg !2932
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7, !dbg !2932
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !2923, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %insert_after) #7, !dbg !2933
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %niters, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2934
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2934
  %call1 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %4, i64 0) #6, !dbg !2935
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !2924, metadata !DIExpression()), !dbg !2928
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2936
  %call4 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %5, i64 1) #6, !dbg !2937
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !2925, metadata !DIExpression()), !dbg !2928
  %call5 = tail call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* %loop) #6, !dbg !2938
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !2919, metadata !DIExpression()), !dbg !2928
  %tobool = icmp eq %union.gimple_statement_d* %call5, null, !dbg !2939
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2939

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2939
  br label %cond.end, !dbg !2939

cond.end:                                         ; preds = %entry, %cond.true
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2940
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7, !dbg !2940
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %call5) #6, !dbg !2940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !2940
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7, !dbg !2940
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %incr_gsi, metadata !2922, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !2923, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @standard_iv_increment_position(%struct.loop* %loop, %struct.gimple_stmt_iterator* nonnull %incr_gsi, i8* nonnull %insert_after) #6, !dbg !2941
  %7 = load i8, i8* %insert_after, align 1, !dbg !2942
  call void @llvm.dbg.value(metadata i8 %7, metadata !2923, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.value(metadata %union.tree_node** %indx_before_incr, metadata !2916, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @llvm.dbg.value(metadata %union.tree_node** %indx_after_incr, metadata !2917, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %incr_gsi, metadata !2922, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @create_iv(%union.tree_node* %call1, %union.tree_node* %call4, %union.tree_node* null, %struct.loop* %loop, %struct.gimple_stmt_iterator* nonnull %incr_gsi, i8 zeroext %7, %union.tree_node** nonnull %indx_before_incr, %union.tree_node** nonnull %indx_after_incr) #6, !dbg !2943
  %8 = load %union.tree_node*, %union.tree_node** %indx_after_incr, align 8, !dbg !2944
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !2917, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %loop_cond_gsi, metadata !2921, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  %call6 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %loop_cond_gsi, %union.tree_node* %8, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !2945
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !2917, metadata !DIExpression()), !dbg !2928
  store %union.tree_node* %call6, %union.tree_node** %indx_after_incr, align 8, !dbg !2946
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %loop_cond_gsi, metadata !2921, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  %call7 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %loop_cond_gsi, %union.tree_node* %niters, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !2947
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !2915, metadata !DIExpression()), !dbg !2928
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 7, !dbg !2948
  %9 = load i32, i32* %flags, align 8, !dbg !2948
  %and = and i32 %9, 1024, !dbg !2949
  %tobool8 = icmp eq i32 %and, 0, !dbg !2950
  %cond9 = select i1 %tobool8, i32 97, i32 100, !dbg !2950
  call void @llvm.dbg.value(metadata i32 %cond9, metadata !2927, metadata !DIExpression()), !dbg !2928
  %10 = load %union.tree_node*, %union.tree_node** %indx_after_incr, align 8, !dbg !2951
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !2917, metadata !DIExpression()), !dbg !2928
  %call10 = call %union.gimple_statement_d* @gimple_build_cond(i32 %cond9, %union.tree_node* %10, %union.tree_node* %call7, %union.tree_node* null, %union.tree_node* null) #6, !dbg !2952
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !2918, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %loop_cond_gsi, metadata !2921, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %loop_cond_gsi, %union.gimple_statement_d* %call10, i32 1) #6, !dbg !2953
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %loop_cond_gsi, metadata !2921, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %loop_cond_gsi, i8 zeroext 1) #6, !dbg !2954
  %call11 = call i32 @find_loop_location(%struct.loop* %loop) #8, !dbg !2955
  call void @llvm.dbg.value(metadata i32 %call11, metadata !2926, metadata !DIExpression()), !dbg !2928
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2956
  %tobool12 = icmp eq %struct._IO_FILE* %11, null, !dbg !2956
  br i1 %tobool12, label %if.end19, label %land.lhs.true, !dbg !2958

land.lhs.true:                                    ; preds = %cond.end
  %12 = load i32, i32* @dump_flags, align 4, !dbg !2959
  %and13 = and i32 %12, 8, !dbg !2960
  %tobool14 = icmp eq i32 %and13, 0, !dbg !2960
  br i1 %tobool14, label %if.end19, label %if.then, !dbg !2961

if.then:                                          ; preds = %land.lhs.true
  %cmp = icmp eq i32 %call11, 0, !dbg !2962
  br i1 %cmp, label %if.end, label %if.then15, !dbg !2965

if.then15:                                        ; preds = %if.then
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp16, i32 %call11) #6, !dbg !2966
  %file = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp16, i64 0, i32 0, !dbg !2966
  %13 = load i8*, i8** %file, align 8, !dbg !2966
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp17, i32 %call11) #6, !dbg !2967
  %line = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp17, i64 0, i32 1, !dbg !2967
  %14 = load i32, i32* %line, align 8, !dbg !2967
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %13, i32 %14) #6, !dbg !2968
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2969
  br label %if.end, !dbg !2968

if.end:                                           ; preds = %if.then, %if.then15
  %15 = phi %struct._IO_FILE* [ %11, %if.then ], [ %.pre, %if.then15 ], !dbg !2969
  call void @print_gimple_stmt(%struct._IO_FILE* %15, %union.gimple_statement_d* %call10, i32 0, i32 2) #6, !dbg !2970
  br label %if.end19, !dbg !2971

if.end19:                                         ; preds = %land.lhs.true, %cond.end, %if.end
  %nb_iterations = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 11, !dbg !2972
  store %union.tree_node* %call7, %union.tree_node** %nb_iterations, align 8, !dbg !2973
  call void @llvm.dbg.value(metadata i8* %insert_after, metadata !2923, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %insert_after) #7, !dbg !2974
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7, !dbg !2974
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !2974
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2974
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2974
  ret void, !dbg !2974
}

declare dso_local %struct.edge_def* @single_exit(%struct.loop*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @standard_iv_increment_position(%struct.loop*, %struct.gimple_stmt_iterator*, i8*) local_unnamed_addr #2

declare dso_local void @create_iv(%union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.loop*, %struct.gimple_stmt_iterator*, i8 zeroext, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_cond(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @find_loop_location(%struct.loop* %loop) local_unnamed_addr #5 !dbg !2975 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2979, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !2980, metadata !DIExpression()), !dbg !2983
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !2984
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2984
  %tobool = icmp eq %struct.loop* %loop, null, !dbg !2985
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2987

if.end:                                           ; preds = %entry
  %call = tail call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* nonnull %loop) #6, !dbg !2988
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !2980, metadata !DIExpression()), !dbg !2983
  %tobool1 = icmp eq %union.gimple_statement_d* %call, null, !dbg !2989
  br i1 %tobool1, label %if.end5, label %land.lhs.true, !dbg !2991

land.lhs.true:                                    ; preds = %if.end
  %call2 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %call) #8, !dbg !2992
  %cmp = icmp eq i32 %call2, 0, !dbg !2993
  br i1 %cmp, label %if.end5, label %if.then3, !dbg !2994

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %call) #8, !dbg !2995
  br label %cleanup, !dbg !2996

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !2997
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !2997
  %tobool6 = icmp eq %struct.basic_block_def* %1, null, !dbg !2999
  br i1 %tobool6, label %cleanup, label %if.end8, !dbg !3000

if.end8:                                          ; preds = %if.end5
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !2981, metadata !DIExpression()), !dbg !2983
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3001
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3001
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* nonnull %1) #8, !dbg !3001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !3001
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3001
  br label %for.cond, !dbg !3003

for.cond:                                         ; preds = %for.inc, %if.end8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !2982, metadata !DIExpression(DW_OP_deref)), !dbg !2983
  %call10 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !3004
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3006
  br i1 %tobool11, label %for.body, label %cleanup.loopexit, !dbg !3007

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !2982, metadata !DIExpression(DW_OP_deref)), !dbg !2983
  %call12 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !3008
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !2980, metadata !DIExpression()), !dbg !2983
  %call13 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call12) #8, !dbg !3010
  %cmp14 = icmp eq i32 %call13, 0, !dbg !3012
  br i1 %cmp14, label %for.inc, label %if.then15, !dbg !3013

if.then15:                                        ; preds = %for.body
  %call12.lcssa = phi %union.gimple_statement_d* [ %call12, %for.body ], !dbg !3008
  %call16 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call12.lcssa) #8, !dbg !3014
  br label %cleanup, !dbg !3015

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !2982, metadata !DIExpression(DW_OP_deref)), !dbg !2983
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #8, !dbg !3016
  br label %for.cond, !dbg !3017, !llvm.loop !3018

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !3020

cleanup:                                          ; preds = %cleanup.loopexit, %if.end5, %entry, %if.then15, %if.then3
  %retval.0 = phi i32 [ %call4, %if.then3 ], [ %call16, %if.then15 ], [ 0, %entry ], [ 0, %if.end5 ], [ 0, %cleanup.loopexit ], !dbg !2983
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3020
  ret i32 %retval.0, !dbg !3020
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.loop* @slpeel_tree_duplicate_loop_to_edge_cfg(%struct.loop* %loop, %struct.edge_def* %e) local_unnamed_addr #5 !dbg !3021 {
entry:
  %exit = alloca %struct.edge_def*, align 8
  %new_exit = alloca %struct.edge_def*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp127 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3025, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3026, metadata !DIExpression()), !dbg !3050
  %0 = bitcast %struct.edge_def** %exit to i8*, !dbg !3051
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3051
  %1 = bitcast %struct.edge_def** %new_exit to i8*, !dbg !3051
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3051
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3052
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3052
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3053
  %cmp = icmp eq %struct.edge_def* %call, %e, !dbg !3054
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !3030, metadata !DIExpression()), !dbg !3050
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !3055

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !3057
  %cmp3 = icmp eq %struct.edge_def* %call2, %e, !dbg !3058
  br i1 %cmp3, label %if.end, label %cleanup, !dbg !3059

if.end:                                           ; preds = %land.lhs.true, %entry
  %call5 = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* %loop) #6, !dbg !3060
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call5, metadata !3029, metadata !DIExpression()), !dbg !3050
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3061
  %3 = load i32, i32* %num_nodes, align 4, !dbg !3061
  %call6 = tail call zeroext i8 @can_copy_bbs_p(%struct.basic_block_def** %call5, i32 %3) #6, !dbg !3063
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3063
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !3064

if.then8:                                         ; preds = %if.end
  %4 = bitcast %struct.basic_block_def** %call5 to i8*, !dbg !3065
  tail call void @free(i8* %4) #6, !dbg !3067
  br label %cleanup, !dbg !3068

if.end9:                                          ; preds = %if.end
  %call10 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %loop) #8, !dbg !3069
  %call11 = tail call %struct.loop* @duplicate_loop(%struct.loop* %loop, %struct.loop* %call10) #6, !dbg !3070
  call void @llvm.dbg.value(metadata %struct.loop* %call11, metadata !3027, metadata !DIExpression()), !dbg !3050
  %tobool12 = icmp eq %struct.loop* %call11, null, !dbg !3071
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !3073

if.then13:                                        ; preds = %if.end9
  %5 = bitcast %struct.basic_block_def** %call5 to i8*, !dbg !3074
  tail call void @free(i8* %5) #6, !dbg !3076
  br label %cleanup, !dbg !3077

if.end14:                                         ; preds = %if.end9
  %call15 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3078
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 1, !dbg !3079
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3079
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %6, metadata !3032, metadata !DIExpression()), !dbg !3050
  %call16 = tail call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* %6) #6, !dbg !3080
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3081
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3081
  call void @llvm.dbg.value(metadata i1 %cmp17, metadata !3031, metadata !DIExpression()), !dbg !3050
  %8 = load i32, i32* %num_nodes, align 4, !dbg !3082
  %conv21 = zext i32 %8 to i64, !dbg !3082
  %mul = shl nuw nsw i64 %conv21, 3, !dbg !3082
  %call22 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3082
  %9 = bitcast i8* %call22 to %struct.basic_block_def**, !dbg !3082
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %9, metadata !3028, metadata !DIExpression()), !dbg !3050
  %call23 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3083
  call void @llvm.dbg.value(metadata %struct.edge_def* %call23, metadata !3035, metadata !DIExpression()), !dbg !3050
  store %struct.edge_def* %call23, %struct.edge_def** %exit, align 8, !dbg !3084
  %10 = load i32, i32* %num_nodes, align 4, !dbg !3085
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3086
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3086
  call void @llvm.dbg.value(metadata %struct.edge_def** %exit, metadata !3035, metadata !DIExpression(DW_OP_deref)), !dbg !3050
  call void @llvm.dbg.value(metadata %struct.edge_def** %new_exit, metadata !3036, metadata !DIExpression(DW_OP_deref)), !dbg !3050
  call void @copy_bbs(%struct.basic_block_def** %call5, i32 %10, %struct.basic_block_def** %9, %struct.edge_def** nonnull %exit, i32 1, %struct.edge_def** nonnull %new_exit, %struct.loop* null, %struct.basic_block_def* %11) #6, !dbg !3087
  %12 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3088
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #7, !dbg !3088
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %6) #6, !dbg !3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !3088
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #7, !dbg !3088
  %header35 = getelementptr inbounds %struct.loop, %struct.loop* %call11, i64 0, i32 2, !dbg !3089
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %call11, i64 0, i32 3, !dbg !3089
  br label %for.cond, !dbg !3091

for.cond:                                         ; preds = %for.inc, %if.end14
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3037, metadata !DIExpression(DW_OP_deref)), !dbg !3050
  %call25 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3092
  %tobool26 = icmp eq i8 %call25, 0, !dbg !3093
  br i1 %tobool26, label %for.body, label %for.end, !dbg !3094

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3037, metadata !DIExpression(DW_OP_deref)), !dbg !3050
  %call27 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3095
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call27, metadata !3033, metadata !DIExpression()), !dbg !3050
  %call28 = call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3096
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call28, i64 0, i32 6, !dbg !3096
  %13 = load i32, i32* %dest_idx, align 4, !dbg !3096
  %call29 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call27, i32 %13) #8, !dbg !3096
  %call30 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call29) #8, !dbg !3096
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !3034, metadata !DIExpression()), !dbg !3050
  %tobool31 = icmp eq %union.tree_node* %call30, null, !dbg !3097
  br i1 %tobool31, label %for.inc, label %if.then32, !dbg !3098

if.then32:                                        ; preds = %for.body
  %call33 = call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3099
  %call34 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call27, %struct.edge_def* %call33) #8, !dbg !3100
  call void @llvm.dbg.value(metadata i32 %call34, metadata !3044, metadata !DIExpression()), !dbg !3101
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3102
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 1, !dbg !3102
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3102
  %tobool36 = icmp eq %struct.VEC_edge_gc* %15, null, !dbg !3102
  br i1 %tobool36, label %cond.end, label %cond.true, !dbg !3102

cond.true:                                        ; preds = %if.then32
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !3102
  br label %cond.end, !dbg !3102

cond.end:                                         ; preds = %if.then32, %cond.true
  %cond39 = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.then32 ], !dbg !3102
  %call40 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond39, i32 0) #8, !dbg !3102
  %dest41 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call40, i64 0, i32 1, !dbg !3103
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest41, align 8, !dbg !3103
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3104
  %cmp42 = icmp eq %struct.basic_block_def* %16, %17, !dbg !3105
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3089
  %succs46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 1, !dbg !3089
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs46, align 8, !dbg !3089
  %tobool47 = icmp ne %struct.VEC_edge_gc* %19, null, !dbg !3089
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !3106

if.then44:                                        ; preds = %cond.end
  br i1 %tobool47, label %cond.true48, label %cond.end53, !dbg !3107

cond.true48:                                      ; preds = %if.then44
  %base51 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !3107
  br label %cond.end53, !dbg !3107

cond.end53:                                       ; preds = %if.then44, %cond.true48
  %cond54 = phi %struct.VEC_edge_base* [ %base51, %cond.true48 ], [ null, %if.then44 ], !dbg !3107
  %call55 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond54, i32 1) #8, !dbg !3107
  call void @llvm.dbg.value(metadata %struct.edge_def* %call55, metadata !3038, metadata !DIExpression()), !dbg !3101
  br label %if.end67, !dbg !3108

if.else:                                          ; preds = %cond.end
  br i1 %tobool47, label %cond.true59, label %cond.end64, !dbg !3109

cond.true59:                                      ; preds = %if.else
  %base62 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !3109
  br label %cond.end64, !dbg !3109

cond.end64:                                       ; preds = %if.else, %cond.true59
  %cond65 = phi %struct.VEC_edge_base* [ %base62, %cond.true59 ], [ null, %if.else ], !dbg !3109
  %call66 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond65, i32 0) #8, !dbg !3109
  call void @llvm.dbg.value(metadata %struct.edge_def* %call66, metadata !3038, metadata !DIExpression()), !dbg !3101
  br label %if.end67

if.end67:                                         ; preds = %cond.end64, %cond.end53
  %new_loop_exit_edge.0 = phi %struct.edge_def* [ %call55, %cond.end53 ], [ %call66, %cond.end64 ], !dbg !3089
  call void @llvm.dbg.value(metadata %struct.edge_def* %new_loop_exit_edge.0, metadata !3038, metadata !DIExpression()), !dbg !3101
  call void @add_phi_arg(%union.gimple_statement_d* %call27, %union.tree_node* nonnull %call30, %struct.edge_def* %new_loop_exit_edge.0, i32 %call34) #6, !dbg !3110
  br label %for.inc, !dbg !3111

for.inc:                                          ; preds = %for.body, %if.end67
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3037, metadata !DIExpression(DW_OP_deref)), !dbg !3050
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3112
  br label %for.cond, !dbg !3113, !llvm.loop !3114

for.end:                                          ; preds = %for.cond
  br i1 %cmp, label %if.then70, label %if.else79, !dbg !3116

if.then70:                                        ; preds = %for.end
  %cmp17 = icmp eq %struct.basic_block_def* %call16, %7, !dbg !3117
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3118
  %call72 = call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %e, %struct.basic_block_def* %20) #6, !dbg !3120
  %g = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 2, i32 0, !dbg !3121
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %g, align 8, !dbg !3122
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3123
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3124
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %21, %struct.basic_block_def* %22) #6, !dbg !3125
  br i1 %cmp17, label %if.then76, label %if.end149, !dbg !3126

if.then76:                                        ; preds = %if.then70
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3127
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %6, %struct.basic_block_def* %23) #6, !dbg !3129
  br label %if.end149, !dbg !3129

if.else79:                                        ; preds = %for.end
  %call80 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !3130
  call void @llvm.dbg.value(metadata %struct.edge_def* %call80, metadata !3048, metadata !DIExpression()), !dbg !3131
  %src81 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call80, i64 0, i32 0, !dbg !3132
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %src81, align 8, !dbg !3132
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %24, metadata !3049, metadata !DIExpression()), !dbg !3131
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3133
  %succs83 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i64 0, i32 1, !dbg !3133
  %26 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs83, align 8, !dbg !3133
  %tobool84 = icmp eq %struct.VEC_edge_gc* %26, null, !dbg !3133
  br i1 %tobool84, label %cond.end90, label %cond.true85, !dbg !3133

cond.true85:                                      ; preds = %if.else79
  %base88 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %26, i64 0, i32 0, !dbg !3133
  br label %cond.end90, !dbg !3133

cond.end90:                                       ; preds = %if.else79, %cond.true85
  %cond91 = phi %struct.VEC_edge_base* [ %base88, %cond.true85 ], [ null, %if.else79 ], !dbg !3133
  %call92 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond91, i32 0) #8, !dbg !3133
  %dest93 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call92, i64 0, i32 1, !dbg !3135
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %dest93, align 8, !dbg !3135
  %call94 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* nonnull %call11, %struct.basic_block_def* %27) #6, !dbg !3136
  %tobool95 = icmp eq i8 %call94, 0, !dbg !3136
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3137
  %succs110 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %28, i64 0, i32 1, !dbg !3137
  %29 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs110, align 8, !dbg !3137
  %tobool111 = icmp ne %struct.VEC_edge_gc* %29, null, !dbg !3137
  br i1 %tobool95, label %if.then96, label %if.else108, !dbg !3138

if.then96:                                        ; preds = %cond.end90
  br i1 %tobool111, label %cond.true100, label %cond.end105, !dbg !3139

cond.true100:                                     ; preds = %if.then96
  %base103 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %29, i64 0, i32 0, !dbg !3139
  br label %cond.end105, !dbg !3139

cond.end105:                                      ; preds = %if.then96, %cond.true100
  %cond106 = phi %struct.VEC_edge_base* [ %base103, %cond.true100 ], [ null, %if.then96 ], !dbg !3139
  %call107 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond106, i32 0) #8, !dbg !3139
  call void @llvm.dbg.value(metadata %struct.edge_def* %call107, metadata !3045, metadata !DIExpression()), !dbg !3131
  br label %if.end120, !dbg !3140

if.else108:                                       ; preds = %cond.end90
  br i1 %tobool111, label %cond.true112, label %cond.end117, !dbg !3141

cond.true112:                                     ; preds = %if.else108
  %base115 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %29, i64 0, i32 0, !dbg !3141
  br label %cond.end117, !dbg !3141

cond.end117:                                      ; preds = %if.else108, %cond.true112
  %cond118 = phi %struct.VEC_edge_base* [ %base115, %cond.true112 ], [ null, %if.else108 ], !dbg !3141
  %call119 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond118, i32 1) #8, !dbg !3141
  call void @llvm.dbg.value(metadata %struct.edge_def* %call119, metadata !3045, metadata !DIExpression()), !dbg !3131
  br label %if.end120

if.end120:                                        ; preds = %cond.end117, %cond.end105
  %new_exit_e.0 = phi %struct.edge_def* [ %call119, %cond.end117 ], [ %call107, %cond.end105 ], !dbg !3137
  call void @llvm.dbg.value(metadata %struct.edge_def* %new_exit_e.0, metadata !3045, metadata !DIExpression()), !dbg !3131
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3142
  %call122 = call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %new_exit_e.0, %struct.basic_block_def* %30) #6, !dbg !3143
  %g124 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %new_exit_e.0, i64 0, i32 2, i32 0, !dbg !3144
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %g124, align 8, !dbg !3145
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3146
  %src126 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %new_exit_e.0, i64 0, i32 0, !dbg !3147
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %src126, align 8, !dbg !3147
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %31, %struct.basic_block_def* %32) #6, !dbg !3148
  %33 = bitcast %struct.gimple_stmt_iterator* %tmp127 to i8*, !dbg !3149
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #7, !dbg !3149
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3151
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp127, %struct.basic_block_def* %34) #6, !dbg !3149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %33, i64 24, i1 false), !dbg !3149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #7, !dbg !3149
  %dest_idx135 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call80, i64 0, i32 6, !dbg !3152
  br label %for.cond129, !dbg !3155

for.cond129:                                      ; preds = %for.inc142, %if.end120
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3037, metadata !DIExpression(DW_OP_deref)), !dbg !3050
  %call130 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3156
  %tobool131 = icmp eq i8 %call130, 0, !dbg !3157
  br i1 %tobool131, label %for.body133, label %for.end143, !dbg !3158

for.body133:                                      ; preds = %for.cond129
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3037, metadata !DIExpression(DW_OP_deref)), !dbg !3050
  %call134 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3159
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call134, metadata !3033, metadata !DIExpression()), !dbg !3050
  %35 = load i32, i32* %dest_idx135, align 4, !dbg !3160
  %call136 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call134, i32 %35) #8, !dbg !3160
  %call137 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call136) #8, !dbg !3160
  call void @llvm.dbg.value(metadata %union.tree_node* %call137, metadata !3034, metadata !DIExpression()), !dbg !3050
  %tobool138 = icmp eq %union.tree_node* %call137, null, !dbg !3161
  br i1 %tobool138, label %for.inc142, label %if.then139, !dbg !3163

if.then139:                                       ; preds = %for.body133
  %call140 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call134, %struct.edge_def* %call80) #8, !dbg !3164
  call void @add_phi_arg(%union.gimple_statement_d* %call134, %union.tree_node* nonnull %call137, %struct.edge_def* %new_exit_e.0, i32 %call140) #6, !dbg !3165
  br label %for.inc142, !dbg !3165

for.inc142:                                       ; preds = %for.body133, %if.then139
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3037, metadata !DIExpression(DW_OP_deref)), !dbg !3050
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3166
  br label %for.cond129, !dbg !3167, !llvm.loop !3168

for.end143:                                       ; preds = %for.cond129
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3170
  %call145 = call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %call80, %struct.basic_block_def* %36) #6, !dbg !3171
  %g147 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call80, i64 0, i32 2, i32 0, !dbg !3172
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %g147, align 8, !dbg !3173
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %header35, align 8, !dbg !3174
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %37, %struct.basic_block_def* %24) #6, !dbg !3175
  br label %if.end149

if.end149:                                        ; preds = %if.then70, %if.then76, %for.end143
  call void @free(i8* %call22) #6, !dbg !3176
  %38 = bitcast %struct.basic_block_def** %call5 to i8*, !dbg !3177
  call void @free(i8* %38) #6, !dbg !3178
  br label %cleanup, !dbg !3179

cleanup:                                          ; preds = %land.lhs.true, %if.end149, %if.then13, %if.then8
  %retval.0 = phi %struct.loop* [ %call11, %if.end149 ], [ null, %if.then13 ], [ null, %if.then8 ], [ null, %land.lhs.true ], !dbg !3050
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3180
  ret %struct.loop* %retval.0, !dbg !3180
}

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local zeroext i8 @can_copy_bbs_p(%struct.basic_block_def**, i32) local_unnamed_addr #2

declare dso_local %struct.loop* @duplicate_loop(%struct.loop*, %struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !3181 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3187, metadata !DIExpression()), !dbg !3189
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !3190
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3190
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !3190
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3190

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !3190
  br label %cond.end, !dbg !3190

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3190
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !3190
  call void @llvm.dbg.value(metadata i32 %call, metadata !3188, metadata !DIExpression()), !dbg !3189
  %cmp = icmp eq i32 %call, 0, !dbg !3191
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3193

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3194
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !3194
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !3194

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !3194
  br label %cond.end8, !dbg !3194

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !3194
  %sub = add i32 %call, -1, !dbg !3194
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #8, !dbg !3194
  br label %cleanup, !dbg !3195

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !3189
  ret %struct.loop* %retval.0, !dbg !3196
}

declare dso_local %struct.basic_block_def* @get_immediate_dominator(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local void @copy_bbs(%struct.basic_block_def**, i32, %struct.basic_block_def**, %struct.edge_def**, i32, %struct.edge_def**, %struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !3197 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !3201, metadata !DIExpression()), !dbg !3202
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !3203
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !3203
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3204
  ret %union.tree_node* %1, !dbg !3205
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %gs, %struct.edge_def* %e) unnamed_addr #0 !dbg !3206 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3210, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3211, metadata !DIExpression()), !dbg !3212
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 6, !dbg !3213
  %0 = load i32, i32* %dest_idx, align 4, !dbg !3213
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %0) #8, !dbg !3214
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !3215
  %1 = load i32, i32* %locus, align 8, !dbg !3215
  ret i32 %1, !dbg !3216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3217 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3223, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3224, metadata !DIExpression()), !dbg !3225
  br label %land.end, !dbg !3226

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3226
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3226
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !3226
  ret %struct.edge_def* %0, !dbg !3226
}

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @set_immediate_dominator(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @slpeel_can_duplicate_loop_p(%struct.loop* %loop, %struct.edge_def* %e) local_unnamed_addr #5 !dbg !3227 {
entry:
  %loop_exit_gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3234, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3235, metadata !DIExpression()), !dbg !3240
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3241
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !3236, metadata !DIExpression()), !dbg !3240
  %call1 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !3242
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !3237, metadata !DIExpression()), !dbg !3240
  %call2 = tail call %union.gimple_statement_d* @get_loop_exit_condition(%struct.loop* %loop) #6, !dbg !3243
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !3238, metadata !DIExpression()), !dbg !3240
  %0 = bitcast %struct.gimple_stmt_iterator* %loop_exit_gsi to i8*, !dbg !3244
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3244
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !3245
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3245
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %loop_exit_gsi, metadata !3239, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %loop_exit_gsi, %struct.basic_block_def* %1) #8, !dbg !3246
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3247
  %call3 = call zeroext i8 @need_ssa_update_p(%struct.function* %2) #6, !dbg !3249
  %tobool = icmp eq i8 %call3, 0, !dbg !3249
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3250

if.end:                                           ; preds = %entry
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !3251
  %3 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3251
  %tobool4 = icmp eq %struct.loop* %3, null, !dbg !3253
  br i1 %tobool4, label %lor.lhs.false, label %cleanup, !dbg !3254

lor.lhs.false:                                    ; preds = %if.end
  %call5 = call fastcc %struct.loop* @loop_outer(%struct.loop* %loop) #8, !dbg !3255
  %tobool6 = icmp eq %struct.loop* %call5, null, !dbg !3255
  br i1 %tobool6, label %cleanup, label %lor.lhs.false7, !dbg !3256

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3257
  %4 = load i32, i32* %num_nodes, align 4, !dbg !3257
  %cmp = icmp eq i32 %4, 2, !dbg !3258
  br i1 %cmp, label %lor.lhs.false8, label %cleanup, !dbg !3259

lor.lhs.false8:                                   ; preds = %lor.lhs.false7
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !3260
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3260
  %call9 = call zeroext i8 @empty_block_p(%struct.basic_block_def* %5) #6, !dbg !3261
  %tobool10 = icmp eq i8 %call9, 0, !dbg !3261
  br i1 %tobool10, label %cleanup, label %lor.lhs.false11, !dbg !3262

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %call12 = call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3263
  %tobool13 = icmp ne %struct.edge_def* %call12, null, !dbg !3263
  %tobool15 = icmp ne %union.gimple_statement_d* %call2, null, !dbg !3264
  %or.cond = and i1 %tobool13, %tobool15, !dbg !3265
  br i1 %or.cond, label %lor.lhs.false16, label %cleanup, !dbg !3265

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %loop_exit_gsi, metadata !3239, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call17 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %loop_exit_gsi) #8, !dbg !3266
  %cmp18 = icmp eq %union.gimple_statement_d* %call2, %call17, !dbg !3267
  br i1 %cmp18, label %lor.lhs.false19, label %cleanup, !dbg !3268

lor.lhs.false19:                                  ; preds = %lor.lhs.false16
  %cmp20 = icmp eq %struct.edge_def* %call, %e, !dbg !3269
  %cmp21 = icmp eq %struct.edge_def* %call1, %e, !dbg !3270
  %not.or.cond1 = or i1 %cmp21, %cmp20, !dbg !3271
  %spec.select = zext i1 %not.or.cond1 to i8, !dbg !3271
  br label %cleanup, !dbg !3271

cleanup:                                          ; preds = %lor.lhs.false16, %lor.lhs.false8, %lor.lhs.false7, %lor.lhs.false, %if.end, %entry, %lor.lhs.false19, %lor.lhs.false11
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %lor.lhs.false16 ], [ 0, %lor.lhs.false11 ], [ 0, %lor.lhs.false8 ], [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ %spec.select, %lor.lhs.false19 ], !dbg !3240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3272
  ret i8 %retval.0, !dbg !3272
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3273 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3275, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !3276, metadata !DIExpression()), !dbg !3279
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !3280
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !3277, metadata !DIExpression()), !dbg !3278
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %call) #8, !dbg !3281
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !3282
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3283
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !3284
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !3285
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !3286
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !3287
  ret void, !dbg !3288
}

declare dso_local zeroext i8 @need_ssa_update_p(%struct.function*) local_unnamed_addr #2

declare dso_local zeroext i8 @empty_block_p(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3289 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3296, metadata !DIExpression()), !dbg !3297
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !3298
  %0 = load i32, i32* %location, align 8, !dbg !3298
  ret i32 %0, !dbg !3299
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vect_can_advance_ivs_p(%struct._loop_vec_info* %loop_vinfo) local_unnamed_addr #5 !dbg !3300 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !3304, metadata !DIExpression()), !dbg !3314
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !3315
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !3315
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !3305, metadata !DIExpression()), !dbg !3314
  %header = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 2, !dbg !3316
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3316
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !3306, metadata !DIExpression()), !dbg !3314
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3317
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3317
  %call = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3318
  %tobool = icmp eq i8 %call, 0, !dbg !3318
  br i1 %tobool, label %if.end, label %if.then, !dbg !3320

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3321
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3322
  br label %if.end, !dbg !3322

if.end:                                           ; preds = %entry, %if.then
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3323
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !3323
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %1) #6, !dbg !3323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !3323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !3323
  %num = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 0, !dbg !3324
  br label %for.cond, !dbg !3325

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3308, metadata !DIExpression(DW_OP_deref)), !dbg !3314
  %call3 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3326
  %tobool4 = icmp eq i8 %call3, 0, !dbg !3327
  br i1 %tobool4, label %for.body, label %cleanup61, !dbg !3328

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3309, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3308, metadata !DIExpression(DW_OP_deref)), !dbg !3314
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3329
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !3307, metadata !DIExpression()), !dbg !3314
  %call6 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3330
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3330
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !3332

if.then8:                                         ; preds = %for.body
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3333
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3335
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3336
  call void @print_gimple_stmt(%struct._IO_FILE* %6, %union.gimple_statement_d* %call5, i32 0, i32 2) #6, !dbg !3337
  br label %if.end10, !dbg !3338

if.end10:                                         ; preds = %for.body, %if.then8
  %call11 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call5) #8, !dbg !3339
  %call12 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call11) #8, !dbg !3339
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3339
  %7 = bitcast i32* %var to %union.tree_node**, !dbg !3339
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !3339
  %call13 = call zeroext i8 @is_gimple_reg(%union.tree_node* %8) #6, !dbg !3341
  %tobool14 = icmp eq i8 %call13, 0, !dbg !3341
  br i1 %tobool14, label %if.then15, label %if.end21, !dbg !3342

if.then15:                                        ; preds = %if.end10
  %call16 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3343
  %tobool17 = icmp eq i8 %call16, 0, !dbg !3343
  br i1 %tobool17, label %cleanup, label %if.then18, !dbg !3346

if.then18:                                        ; preds = %if.then15
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3347
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3348
  br label %cleanup, !dbg !3348

if.end21:                                         ; preds = %if.end10
  %call22 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call5) #8, !dbg !3349
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call22, i64 0, i32 16, !dbg !3349
  %10 = load i32, i32* %def_type, align 8, !dbg !3349
  %cmp = icmp eq i32 %10, 5, !dbg !3351
  br i1 %cmp, label %if.then23, label %if.end29, !dbg !3352

if.then23:                                        ; preds = %if.end21
  %call24 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3353
  %tobool25 = icmp eq i8 %call24, 0, !dbg !3353
  br i1 %tobool25, label %cleanup, label %if.then26, !dbg !3356

if.then26:                                        ; preds = %if.then23
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3357
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3358
  br label %cleanup, !dbg !3358

if.end29:                                         ; preds = %if.end21
  %call30 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call5) #8, !dbg !3359
  %call31 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call30) #8, !dbg !3359
  %call32 = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %0, %union.tree_node* %call31) #6, !dbg !3360
  %call33 = call fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %0, %union.tree_node* %call32) #8, !dbg !3361
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !3309, metadata !DIExpression()), !dbg !3324
  %tobool34 = icmp eq %union.tree_node* %call33, null, !dbg !3362
  %call42 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3324
  %tobool43 = icmp ne i8 %call42, 0, !dbg !3324
  br i1 %tobool34, label %if.then35, label %if.end41, !dbg !3364

if.then35:                                        ; preds = %if.end29
  br i1 %tobool43, label %if.then38, label %cleanup, !dbg !3365

if.then38:                                        ; preds = %if.then35
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3367
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3369
  br label %cleanup, !dbg !3369

if.end41:                                         ; preds = %if.end29
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !3370

if.then44:                                        ; preds = %if.end41
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3371
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3374
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3375
  call void @print_generic_expr(%struct._IO_FILE* %14, %union.tree_node* nonnull %call33, i32 2) #6, !dbg !3376
  br label %if.end46, !dbg !3377

if.end46:                                         ; preds = %if.then44, %if.end41
  %15 = load i32, i32* %num, align 8, !dbg !3378
  %call47 = call %union.tree_node* @evolution_part_in_loop_num(%union.tree_node* nonnull %call33, i32 %15) #6, !dbg !3379
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !3313, metadata !DIExpression()), !dbg !3324
  %cmp48 = icmp eq %union.tree_node* %call47, null, !dbg !3380
  br i1 %cmp48, label %if.then49, label %if.end55, !dbg !3382

if.then49:                                        ; preds = %if.end46
  %call50 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3383
  %tobool51 = icmp eq i8 %call50, 0, !dbg !3383
  br i1 %tobool51, label %cleanup, label %if.then52, !dbg !3386

if.then52:                                        ; preds = %if.then49
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3387
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3388
  br label %cleanup, !dbg !3388

if.end55:                                         ; preds = %if.end46
  %call56 = call fastcc zeroext i8 @tree_is_chrec(%union.tree_node* nonnull %call47) #8, !dbg !3389
  %tobool57 = icmp ne i8 %call56, 0, !dbg !3389
  %. = zext i1 %tobool57 to i32, !dbg !3391
  br label %cleanup, !dbg !3391

cleanup:                                          ; preds = %if.then23, %if.then49, %if.then15, %if.end55, %if.then52, %if.then35, %if.then38, %if.then26, %if.then18
  %cleanup.dest.slot.0 = phi i32 [ 4, %if.then18 ], [ 4, %if.then15 ], [ 4, %if.then26 ], [ 4, %if.then23 ], [ 1, %if.then38 ], [ 1, %if.then35 ], [ 1, %if.then52 ], [ 1, %if.then49 ], [ %., %if.end55 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup61 [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3308, metadata !DIExpression(DW_OP_deref)), !dbg !3314
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3392
  br label %for.cond, !dbg !3393, !llvm.loop !3394

cleanup61:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi i8 [ 0, %cleanup ], [ 1, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3396
  ret i8 %retval.2, !dbg !3396
}

declare dso_local zeroext i8 @vect_print_dump_info(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !3397 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !3402, metadata !DIExpression()), !dbg !3403
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !3404
  ret %union.tree_node* %0, !dbg !3405
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3406 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3410, metadata !DIExpression()), !dbg !3411
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !3412
  ret %union.tree_node** %result, !dbg !3413
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !3414 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3418, metadata !DIExpression()), !dbg !3420
  %call = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %stmt) #8, !dbg !3421
  call void @llvm.dbg.value(metadata i32 %call, metadata !3419, metadata !DIExpression()), !dbg !3420
  %cmp = icmp eq i32 %call, 0, !dbg !3422
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3424

if.end:                                           ; preds = %entry
  %0 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !3425
  %base = getelementptr inbounds %struct.VEC_vec_void_p_heap, %struct.VEC_vec_void_p_heap* %0, i64 0, i32 0, !dbg !3425
  %call1 = tail call fastcc i32 @VEC_vec_void_p_base_length(%struct.VEC_vec_void_p_base* %base) #8, !dbg !3425
  %cmp2 = icmp ugt i32 %call, %call1, !dbg !3425
  br i1 %cmp2, label %cond.true3, label %cond.end5, !dbg !3425

cond.true3:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0), i32 629, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3425
  br label %cond.end5, !dbg !3425

cond.end5:                                        ; preds = %if.end, %cond.true3
  %1 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !3426
  %base9 = getelementptr inbounds %struct.VEC_vec_void_p_heap, %struct.VEC_vec_void_p_heap* %1, i64 0, i32 0, !dbg !3426
  %sub = add i32 %call, -1, !dbg !3426
  %call13 = tail call fastcc i8* @VEC_vec_void_p_base_index(%struct.VEC_vec_void_p_base* %base9, i32 %sub) #8, !dbg !3426
  %2 = bitcast i8* %call13 to %struct._stmt_vec_info*, !dbg !3427
  br label %cleanup, !dbg !3428

cleanup:                                          ; preds = %entry, %cond.end5
  %retval.0 = phi %struct._stmt_vec_info* [ %2, %cond.end5 ], [ null, %entry ], !dbg !3420
  ret %struct._stmt_vec_info* %retval.0, !dbg !3429
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @instantiate_parameters(%struct.loop* %loop, %union.tree_node* %chrec) unnamed_addr #0 !dbg !3430 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3435, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !3436, metadata !DIExpression()), !dbg !3437
  %call = tail call fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) #8, !dbg !3438
  %call1 = tail call %union.tree_node* @instantiate_scev(%struct.basic_block_def* %call, %struct.loop* %loop, %union.tree_node* %chrec) #6, !dbg !3439
  ret %union.tree_node* %call1, !dbg !3440
}

declare dso_local %union.tree_node* @analyze_scalar_evolution(%struct.loop*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @evolution_part_in_loop_num(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tree_is_chrec(%union.tree_node* %expr) unnamed_addr #0 !dbg !3441 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3447, metadata !DIExpression()), !dbg !3448
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3449
  %bf.load = load i64, i64* %0, align 8, !dbg !3449
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3451
  %cmp = icmp eq i64 %bf.cast1, 146, !dbg !3451
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !3452

lor.lhs.false:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %expr) #8, !dbg !3453
  %tobool = icmp ne i8 %call, 0, !dbg !3453
  %spec.select = zext i1 %tobool to i8, !dbg !3454
  ret i8 %spec.select, !dbg !3454

return:                                           ; preds = %entry
  ret i8 1, !dbg !3455
}

; Function Attrs: nounwind uwtable
define dso_local void @vect_do_peeling_for_loop_bound(%struct._loop_vec_info* %loop_vinfo, %union.tree_node** %ratio, %union.tree_node* %cond_expr, %struct.gimple_seq_d* %cond_expr_stmt_list) local_unnamed_addr #5 !dbg !3456 {
entry:
  %ni_name = alloca %union.tree_node*, align 8
  %ratio_mult_vf_name = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !3460, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata %union.tree_node** %ratio, metadata !3461, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata %union.tree_node* %cond_expr, metadata !3462, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %cond_expr_stmt_list, metadata !3463, metadata !DIExpression()), !dbg !3474
  %0 = bitcast %union.tree_node** %ni_name to i8*, !dbg !3475
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3475
  %1 = bitcast %union.tree_node** %ratio_mult_vf_name to i8*, !dbg !3475
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3475
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !3476
  %2 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !3476
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !3466, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 0, metadata !3471, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 0, metadata !3472, metadata !DIExpression()), !dbg !3474
  %call = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3477
  %tobool = icmp eq i8 %call, 0, !dbg !3477
  br i1 %tobool, label %if.end, label %if.then, !dbg !3479

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3480
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3481
  br label %if.end, !dbg !3481

if.end:                                           ; preds = %entry, %if.then
  tail call void @initialize_original_copy_tables() #6, !dbg !3482
  call void @llvm.dbg.value(metadata %union.tree_node** %ni_name, metadata !3464, metadata !DIExpression(DW_OP_deref)), !dbg !3474
  call void @llvm.dbg.value(metadata %union.tree_node** %ratio_mult_vf_name, metadata !3465, metadata !DIExpression(DW_OP_deref)), !dbg !3474
  call fastcc void @vect_generate_tmps_on_preheader(%struct._loop_vec_info* %loop_vinfo, %union.tree_node** nonnull %ni_name, %union.tree_node** nonnull %ratio_mult_vf_name, %union.tree_node** %ratio, %struct.gimple_seq_d* %cond_expr_stmt_list) #8, !dbg !3483
  %num = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 0, !dbg !3484
  %4 = load i32, i32* %num, align 8, !dbg !3484
  call void @llvm.dbg.value(metadata i32 %4, metadata !3470, metadata !DIExpression()), !dbg !3474
  %may_misalign_stmts = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 13, !dbg !3485
  %5 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %may_misalign_stmts, align 8, !dbg !3485
  %tobool3 = icmp eq %struct.VEC_gimple_heap* %5, null, !dbg !3485
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3485

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %5, i64 0, i32 0, !dbg !3485
  br label %cond.end, !dbg !3485

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3485
  %call5 = call fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %cond) #8, !dbg !3485
  %cmp = icmp eq i32 %call5, 0, !dbg !3485
  br i1 %cmp, label %land.lhs.true, label %if.end22, !dbg !3487

land.lhs.true:                                    ; preds = %cond.end
  %may_alias_ddrs = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 12, !dbg !3488
  %6 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %may_alias_ddrs, align 8, !dbg !3488
  %tobool6 = icmp eq %struct.VEC_ddr_p_heap* %6, null, !dbg !3488
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !3488

cond.true7:                                       ; preds = %land.lhs.true
  %base9 = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %6, i64 0, i32 0, !dbg !3488
  br label %cond.end11, !dbg !3488

cond.end11:                                       ; preds = %land.lhs.true, %cond.true7
  %cond12 = phi %struct.VEC_ddr_p_base* [ %base9, %cond.true7 ], [ null, %land.lhs.true ], !dbg !3488
  %call13 = call fastcc i32 @VEC_ddr_p_base_length(%struct.VEC_ddr_p_base* %cond12) #8, !dbg !3488
  %cmp14 = icmp eq i32 %call13, 0, !dbg !3488
  br i1 %cmp14, label %land.lhs.true15, label %if.end22, !dbg !3489

land.lhs.true15:                                  ; preds = %cond.end11
  %peeling_for_alignment = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 8, !dbg !3490
  %7 = load i32, i32* %peeling_for_alignment, align 8, !dbg !3490
  %tobool16 = icmp ne i32 %7, 0, !dbg !3490
  %tobool18 = icmp ne %union.tree_node* %cond_expr, null, !dbg !3491
  %or.cond = or i1 %tobool16, %tobool18, !dbg !3492
  br i1 %or.cond, label %if.end22, label %if.then19, !dbg !3492

if.then19:                                        ; preds = %land.lhs.true15
  call void @llvm.dbg.value(metadata i8 1, metadata !3471, metadata !DIExpression()), !dbg !3474
  %min_profitable_iters20 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 4, !dbg !3493
  %8 = load i32, i32* %min_profitable_iters20, align 8, !dbg !3493
  call void @llvm.dbg.value(metadata i32 %8, metadata !3473, metadata !DIExpression()), !dbg !3474
  %call21 = call fastcc i32 @conservative_cost_threshold(%struct._loop_vec_info* %loop_vinfo, i32 %8) #8, !dbg !3495
  call void @llvm.dbg.value(metadata i32 %call21, metadata !3472, metadata !DIExpression()), !dbg !3474
  br label %if.end22, !dbg !3496

if.end22:                                         ; preds = %cond.end11, %cond.end, %if.then19, %land.lhs.true15
  %check_profitability.0 = phi i8 [ 0, %cond.end ], [ 0, %cond.end11 ], [ 0, %land.lhs.true15 ], [ 1, %if.then19 ], !dbg !3474
  %th.0 = phi i32 [ 0, %cond.end ], [ 0, %cond.end11 ], [ 0, %land.lhs.true15 ], [ %call21, %if.then19 ], !dbg !3474
  call void @llvm.dbg.value(metadata i32 %th.0, metadata !3472, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 %check_profitability.0, metadata !3471, metadata !DIExpression()), !dbg !3474
  %call23 = call %struct.edge_def* @single_exit(%struct.loop* %2) #6, !dbg !3497
  %9 = load %union.tree_node*, %union.tree_node** %ratio_mult_vf_name, align 8, !dbg !3498
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3465, metadata !DIExpression()), !dbg !3474
  %10 = load %union.tree_node*, %union.tree_node** %ni_name, align 8, !dbg !3499
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !3464, metadata !DIExpression()), !dbg !3474
  %call24 = call fastcc %struct.loop* @slpeel_tree_peel_loop_to_edge(%struct.loop* %2, %struct.edge_def* %call23, %union.tree_node* %9, %union.tree_node* %10, i8 zeroext 0, i32 %th.0, i8 zeroext %check_profitability.0, %union.tree_node* %cond_expr, %struct.gimple_seq_d* %cond_expr_stmt_list) #8, !dbg !3500
  call void @llvm.dbg.value(metadata %struct.loop* %call24, metadata !3467, metadata !DIExpression()), !dbg !3474
  %tobool25 = icmp eq %struct.loop* %call24, null, !dbg !3501
  br i1 %tobool25, label %cond.true26, label %cond.end28, !dbg !3501

cond.true26:                                      ; preds = %if.end22
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1904, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3501
  br label %cond.end28, !dbg !3501

cond.end28:                                       ; preds = %if.end22, %cond.true26
  %11 = load i32, i32* %num, align 8, !dbg !3502
  %cmp31 = icmp eq i32 %4, %11, !dbg !3502
  br i1 %cmp31, label %cond.end34, label %cond.true32, !dbg !3502

cond.true32:                                      ; preds = %cond.end28
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1905, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3502
  br label %cond.end34, !dbg !3502

cond.end34:                                       ; preds = %cond.end28, %cond.true32
  %call36 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %call24) #6, !dbg !3503
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call36, i64 0, i32 0, !dbg !3504
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3504
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !3469, metadata !DIExpression()), !dbg !3474
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 0, !dbg !3505
  %13 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3505
  %tobool37 = icmp eq %struct.VEC_edge_gc* %13, null, !dbg !3505
  br i1 %tobool37, label %cond.end42, label %cond.true38, !dbg !3505

cond.true38:                                      ; preds = %cond.end34
  %base40 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %13, i64 0, i32 0, !dbg !3505
  br label %cond.end42, !dbg !3505

cond.end42:                                       ; preds = %cond.end34, %cond.true38
  %cond43 = phi %struct.VEC_edge_base* [ %base40, %cond.true38 ], [ null, %cond.end34 ], !dbg !3505
  %call44 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond43, i32 0) #8, !dbg !3505
  %src45 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call44, i64 0, i32 0, !dbg !3507
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %src45, align 8, !dbg !3507
  %call46 = call %struct.edge_def* @single_exit(%struct.loop* %2) #6, !dbg !3508
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call46, i64 0, i32 1, !dbg !3509
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3509
  %cmp47 = icmp eq %struct.basic_block_def* %14, %15, !dbg !3510
  %16 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3511
  %tobool50 = icmp ne %struct.VEC_edge_gc* %16, null, !dbg !3511
  br i1 %cmp47, label %if.then48, label %if.else, !dbg !3512

if.then48:                                        ; preds = %cond.end42
  br i1 %tobool50, label %cond.true51, label %cond.end55, !dbg !3513

cond.true51:                                      ; preds = %if.then48
  %base53 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %16, i64 0, i32 0, !dbg !3513
  br label %cond.end55, !dbg !3513

cond.end55:                                       ; preds = %if.then48, %cond.true51
  %cond56 = phi %struct.VEC_edge_base* [ %base53, %cond.true51 ], [ null, %if.then48 ], !dbg !3513
  %call57 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond56, i32 0) #8, !dbg !3513
  call void @llvm.dbg.value(metadata %struct.edge_def* %call57, metadata !3468, metadata !DIExpression()), !dbg !3474
  br label %if.end67, !dbg !3514

if.else:                                          ; preds = %cond.end42
  br i1 %tobool50, label %cond.true60, label %cond.end64, !dbg !3515

cond.true60:                                      ; preds = %if.else
  %base62 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %16, i64 0, i32 0, !dbg !3515
  br label %cond.end64, !dbg !3515

cond.end64:                                       ; preds = %if.else, %cond.true60
  %cond65 = phi %struct.VEC_edge_base* [ %base62, %cond.true60 ], [ null, %if.else ], !dbg !3515
  %call66 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond65, i32 1) #8, !dbg !3515
  call void @llvm.dbg.value(metadata %struct.edge_def* %call66, metadata !3468, metadata !DIExpression()), !dbg !3474
  br label %if.end67

if.end67:                                         ; preds = %cond.end64, %cond.end55
  %update_e.0 = phi %struct.edge_def* [ %call57, %cond.end55 ], [ %call66, %cond.end64 ], !dbg !3511
  call void @llvm.dbg.value(metadata %struct.edge_def* %update_e.0, metadata !3468, metadata !DIExpression()), !dbg !3474
  %17 = load %union.tree_node*, %union.tree_node** %ratio_mult_vf_name, align 8, !dbg !3516
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3465, metadata !DIExpression()), !dbg !3474
  call fastcc void @vect_update_ivs_after_vectorizer(%struct._loop_vec_info* %loop_vinfo, %union.tree_node* %17, %struct.edge_def* %update_e.0) #8, !dbg !3517
  call void @scev_reset() #6, !dbg !3518
  call void @free_original_copy_tables() #6, !dbg !3519
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3520
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3520
  ret void, !dbg !3520
}

declare dso_local void @initialize_original_copy_tables() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_generate_tmps_on_preheader(%struct._loop_vec_info* %loop_vinfo, %union.tree_node** %ni_name_ptr, %union.tree_node** %ratio_mult_vf_name_ptr, %union.tree_node** %ratio_name_ptr, %struct.gimple_seq_d* %cond_expr_stmt_list) unnamed_addr #5 !dbg !3521 {
entry:
  %cond_expr_stmt_list.addr = alloca %struct.gimple_seq_d*, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !3525, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %union.tree_node** %ni_name_ptr, metadata !3526, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %union.tree_node** %ratio_mult_vf_name_ptr, metadata !3527, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %union.tree_node** %ratio_name_ptr, metadata !3528, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %cond_expr_stmt_list, metadata !3529, metadata !DIExpression()), !dbg !3541
  store %struct.gimple_seq_d* %cond_expr_stmt_list, %struct.gimple_seq_d** %cond_expr_stmt_list.addr, align 8
  %0 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !3542
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3542
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !3543
  %1 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !3543
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !3537, metadata !DIExpression()), !dbg !3541
  %num_iters = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 2, !dbg !3544
  %2 = load %union.tree_node*, %union.tree_node** %num_iters, align 8, !dbg !3544
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3538, metadata !DIExpression()), !dbg !3541
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 6, !dbg !3545
  %3 = load i32, i32* %vectorization_factor, align 8, !dbg !3545
  call void @llvm.dbg.value(metadata i32 %3, metadata !3539, metadata !DIExpression()), !dbg !3541
  %call = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %1) #6, !dbg !3546
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !3530, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %cond_expr_stmt_list, metadata !3529, metadata !DIExpression()), !dbg !3541
  %call2 = tail call fastcc %union.tree_node* @vect_build_loop_niters(%struct._loop_vec_info* %loop_vinfo, %struct.gimple_seq_d* %cond_expr_stmt_list) #8, !dbg !3547
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3533, metadata !DIExpression()), !dbg !3541
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3548
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3548
  %conv = sext i32 %3 to i64, !dbg !3549
  %call3 = tail call i32 @exact_log2(i64 %conv) #6, !dbg !3550
  %conv4 = sext i32 %call3 to i64, !dbg !3550
  %call5 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %4, i64 %conv4) #6, !dbg !3551
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3540, metadata !DIExpression()), !dbg !3541
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3552
  %5 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !3552
  %call8 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 84, %union.tree_node* %5, %union.tree_node* %call2, %union.tree_node* %call5) #6, !dbg !3552
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !3535, metadata !DIExpression()), !dbg !3541
  %call9 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call8) #6, !dbg !3553
  %tobool = icmp eq i8 %call9, 0, !dbg !3553
  br i1 %tobool, label %if.then, label %if.end20, !dbg !3555

if.then:                                          ; preds = %entry
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3556
  %call12 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !3558
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !3534, metadata !DIExpression()), !dbg !3541
  %call13 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call12) #6, !dbg !3559
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !3532, metadata !DIExpression()), !dbg !3541
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !3560
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3532, metadata !DIExpression(DW_OP_deref)), !dbg !3541
  %call14 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call8, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* %call12) #6, !dbg !3561
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !3535, metadata !DIExpression()), !dbg !3541
  %7 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cond_expr_stmt_list.addr, align 8, !dbg !3562
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %7, metadata !3529, metadata !DIExpression()), !dbg !3541
  %tobool15 = icmp eq %struct.gimple_seq_d* %7, null, !dbg !3562
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !3564

if.then16:                                        ; preds = %if.then
  %8 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3565
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %8, metadata !3532, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cond_expr_stmt_list.addr, metadata !3529, metadata !DIExpression(DW_OP_deref)), !dbg !3541
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %cond_expr_stmt_list.addr, %struct.gimple_seq_d* %8) #6, !dbg !3566
  br label %if.end20, !dbg !3566

if.else:                                          ; preds = %if.then
  %call17 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %1) #6, !dbg !3567
  call void @llvm.dbg.value(metadata %struct.edge_def* %call17, metadata !3530, metadata !DIExpression()), !dbg !3541
  %9 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3569
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %9, metadata !3532, metadata !DIExpression()), !dbg !3541
  %call18 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call17, %struct.gimple_seq_d* %9) #6, !dbg !3570
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call18, metadata !3531, metadata !DIExpression()), !dbg !3541
  %tobool19 = icmp eq %struct.basic_block_def* %call18, null, !dbg !3571
  br i1 %tobool19, label %if.end20, label %cond.true, !dbg !3571

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1552, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3571
  br label %if.end20, !dbg !3571

if.end20:                                         ; preds = %if.else, %entry, %if.then16, %cond.true
  %ratio_name.0 = phi %union.tree_node* [ %call8, %entry ], [ %call14, %cond.true ], [ %call14, %if.else ], [ %call14, %if.then16 ], !dbg !3541
  call void @llvm.dbg.value(metadata %union.tree_node* %ratio_name.0, metadata !3535, metadata !DIExpression()), !dbg !3541
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %ratio_name.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3572
  %10 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !3572
  %call23 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 83, %union.tree_node* %10, %union.tree_node* %ratio_name.0, %union.tree_node* %call5) #6, !dbg !3572
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !3536, metadata !DIExpression()), !dbg !3541
  %call24 = call zeroext i8 @is_gimple_val(%union.tree_node* %call23) #6, !dbg !3573
  %tobool25 = icmp eq i8 %call24, 0, !dbg !3573
  br i1 %tobool25, label %if.then26, label %if.end43, !dbg !3575

if.then26:                                        ; preds = %if.end20
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3576
  %call29 = call %union.tree_node* @create_tmp_var(%union.tree_node* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !3578
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !3534, metadata !DIExpression()), !dbg !3541
  %call30 = call zeroext i8 @add_referenced_var(%union.tree_node* %call29) #6, !dbg !3579
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !3532, metadata !DIExpression()), !dbg !3541
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !3580
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3532, metadata !DIExpression(DW_OP_deref)), !dbg !3541
  %call31 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call23, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* %call29) #6, !dbg !3581
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !3536, metadata !DIExpression()), !dbg !3541
  %12 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cond_expr_stmt_list.addr, align 8, !dbg !3582
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %12, metadata !3529, metadata !DIExpression()), !dbg !3541
  %tobool32 = icmp eq %struct.gimple_seq_d* %12, null, !dbg !3582
  br i1 %tobool32, label %if.else34, label %if.then33, !dbg !3584

if.then33:                                        ; preds = %if.then26
  %13 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3585
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %13, metadata !3532, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cond_expr_stmt_list.addr, metadata !3529, metadata !DIExpression(DW_OP_deref)), !dbg !3541
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %cond_expr_stmt_list.addr, %struct.gimple_seq_d* %13) #6, !dbg !3586
  br label %if.end43, !dbg !3586

if.else34:                                        ; preds = %if.then26
  %call35 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %1) #6, !dbg !3587
  call void @llvm.dbg.value(metadata %struct.edge_def* %call35, metadata !3530, metadata !DIExpression()), !dbg !3541
  %14 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3589
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %14, metadata !3532, metadata !DIExpression()), !dbg !3541
  %call36 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call35, %struct.gimple_seq_d* %14) #6, !dbg !3590
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call36, metadata !3531, metadata !DIExpression()), !dbg !3541
  %tobool37 = icmp eq %struct.basic_block_def* %call36, null, !dbg !3591
  br i1 %tobool37, label %if.end43, label %cond.true38, !dbg !3591

cond.true38:                                      ; preds = %if.else34
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1574, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3591
  br label %if.end43, !dbg !3591

if.end43:                                         ; preds = %if.else34, %if.end20, %if.then33, %cond.true38
  %ratio_mult_vf_name.0 = phi %union.tree_node* [ %call23, %if.end20 ], [ %call31, %cond.true38 ], [ %call31, %if.else34 ], [ %call31, %if.then33 ], !dbg !3541
  call void @llvm.dbg.value(metadata %union.tree_node* %ratio_mult_vf_name.0, metadata !3536, metadata !DIExpression()), !dbg !3541
  store %union.tree_node* %call2, %union.tree_node** %ni_name_ptr, align 8, !dbg !3592
  store %union.tree_node* %ratio_mult_vf_name.0, %union.tree_node** %ratio_mult_vf_name_ptr, align 8, !dbg !3593
  store %union.tree_node* %ratio_name.0, %union.tree_node** %ratio_name_ptr, align 8, !dbg !3594
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3595
  ret void, !dbg !3595
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !3596 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !3602, metadata !DIExpression()), !dbg !3603
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !3604
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3604

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !3604
  %0 = load i32, i32* %num, align 8, !dbg !3604
  br label %cond.end, !dbg !3604

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3604
  ret i32 %cond, !dbg !3604
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ddr_p_base_length(%struct.VEC_ddr_p_base* %vec_) unnamed_addr #0 !dbg !3605 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !3611, metadata !DIExpression()), !dbg !3612
  %tobool = icmp eq %struct.VEC_ddr_p_base* %vec_, null, !dbg !3613
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3613

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 0, !dbg !3613
  %0 = load i32, i32* %num, align 8, !dbg !3613
  br label %cond.end, !dbg !3613

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3613
  ret i32 %cond, !dbg !3613
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @conservative_cost_threshold(%struct._loop_vec_info* %loop_vinfo, i32 %min_profitable_iters) unnamed_addr #5 !dbg !3614 {
entry:
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !3618, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32 %min_profitable_iters, metadata !3619, metadata !DIExpression()), !dbg !3622
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3623
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 11, i32 1, !dbg !3623
  %1 = load i32, i32* %value, align 8, !dbg !3623
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 6, !dbg !3624
  %2 = load i32, i32* %vectorization_factor, align 8, !dbg !3624
  %mul = mul nsw i32 %1, %2, !dbg !3625
  %sub = add nsw i32 %mul, -1, !dbg !3626
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3621, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3620, metadata !DIExpression()), !dbg !3622
  %tobool = icmp eq i32 %min_profitable_iters, 0, !dbg !3627
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3629

land.lhs.true:                                    ; preds = %entry
  %tobool1 = icmp eq i32 %sub, 0, !dbg !3630
  %cmp = icmp sle i32 %mul, %min_profitable_iters, !dbg !3631
  %or.cond = or i1 %tobool1, %cmp, !dbg !3632
  %spec.select = select i1 %or.cond, i32 %min_profitable_iters, i32 %sub, !dbg !3632
  br label %if.end, !dbg !3632

if.end:                                           ; preds = %entry, %land.lhs.true
  %th.0 = phi i32 [ %sub, %entry ], [ %spec.select, %land.lhs.true ], !dbg !3622
  call void @llvm.dbg.value(metadata i32 %th.0, metadata !3620, metadata !DIExpression()), !dbg !3622
  %tobool2 = icmp eq i32 %th.0, 0, !dbg !3633
  br i1 %tobool2, label %if.end7, label %land.lhs.true3, !dbg !3635

land.lhs.true3:                                   ; preds = %if.end
  %call = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !3636
  %tobool4 = icmp eq i8 %call, 0, !dbg !3636
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !3637

if.then5:                                         ; preds = %land.lhs.true3
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3638
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.18, i64 0, i64 0), i32 %th.0) #6, !dbg !3639
  br label %if.end7, !dbg !3639

if.end7:                                          ; preds = %land.lhs.true3, %if.end, %if.then5
  ret i32 %th.0, !dbg !3640
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.loop* @slpeel_tree_peel_loop_to_edge(%struct.loop* %loop, %struct.edge_def* %e, %union.tree_node* %first_niters, %union.tree_node* %niters, i8 zeroext %update_first_loop_count, i32 %th, i8 zeroext %check_profitability, %union.tree_node* %cond_expr, %struct.gimple_seq_d* %cond_expr_stmt_list) unnamed_addr #5 !dbg !3641 {
entry:
  %definitions = alloca %struct.bitmap_head_def*, align 8
  %new_exit_bb = alloca %struct.basic_block_def*, align 8
  %tmp = alloca %struct.expanded_location, align 8
  %tmp10 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3645, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3646, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %union.tree_node* %first_niters, metadata !3647, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %union.tree_node* %niters, metadata !3648, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i8 %update_first_loop_count, metadata !3649, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i32 %th, metadata !3650, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i8 %check_profitability, metadata !3651, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %union.tree_node* %cond_expr, metadata !3652, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %cond_expr_stmt_list, metadata !3653, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %struct.loop* null, metadata !3654, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3658, metadata !DIExpression()), !dbg !3673
  %0 = bitcast %struct.bitmap_head_def** %definitions to i8*, !dbg !3674
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3674
  %1 = bitcast %struct.basic_block_def** %new_exit_bb to i8*, !dbg !3675
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3675
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !3676
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !3665, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3667, metadata !DIExpression()), !dbg !3673
  %call1 = tail call zeroext i8 @slpeel_can_duplicate_loop_p(%struct.loop* %loop, %struct.edge_def* %e) #8, !dbg !3677
  %tobool = icmp eq i8 %call1, 0, !dbg !3677
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3679

if.end:                                           ; preds = %entry
  tail call void @gimple_register_cfg_hooks() #6, !dbg !3680
  %call2 = tail call %struct.loop* @slpeel_tree_duplicate_loop_to_edge_cfg(%struct.loop* %loop, %struct.edge_def* %e) #8, !dbg !3681
  call void @llvm.dbg.value(metadata %struct.loop* %call2, metadata !3654, metadata !DIExpression()), !dbg !3673
  %tobool3 = icmp eq %struct.loop* %call2, null, !dbg !3683
  br i1 %tobool3, label %if.then4, label %if.end15, !dbg !3684

if.then4:                                         ; preds = %if.end
  %call5 = tail call i32 @find_loop_location(%struct.loop* %loop) #8, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3666, metadata !DIExpression()), !dbg !3673
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3687
  %tobool6 = icmp eq %struct._IO_FILE* %2, null, !dbg !3687
  br i1 %tobool6, label %cleanup, label %land.lhs.true, !dbg !3689

land.lhs.true:                                    ; preds = %if.then4
  %3 = load i32, i32* @dump_flags, align 4, !dbg !3690
  %and = and i32 %3, 8, !dbg !3691
  %tobool7 = icmp eq i32 %and, 0, !dbg !3691
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !3692

if.then8:                                         ; preds = %land.lhs.true
  %cmp = icmp eq i32 %call5, 0, !dbg !3693
  br i1 %cmp, label %if.end12, label %if.then9, !dbg !3696

if.then9:                                         ; preds = %if.then8
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %call5) #6, !dbg !3697
  %file = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 0, !dbg !3697
  %4 = load i8*, i8** %file, align 8, !dbg !3697
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp10, i32 %call5) #6, !dbg !3698
  %line = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp10, i64 0, i32 1, !dbg !3698
  %5 = load i32, i32* %line, align 8, !dbg !3698
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* %4, i32 %5) #6, !dbg !3699
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3700
  br label %if.end12, !dbg !3699

if.end12:                                         ; preds = %if.then8, %if.then9
  %6 = phi %struct._IO_FILE* [ %2, %if.then8 ], [ %.pre, %if.then9 ], !dbg !3700
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !3701
  br label %cleanup, !dbg !3702

if.end15:                                         ; preds = %if.end
  %7 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3703
  %tobool16 = icmp eq i32 %7, 0, !dbg !3703
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !3705

if.then17:                                        ; preds = %if.end15
  %8 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !3706
  %tobool18 = icmp eq %struct.VEC_adjust_info_stack* %8, null, !dbg !3706
  br i1 %tobool18, label %cond.end, label %cond.true, !dbg !3706

cond.true:                                        ; preds = %if.then17
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1218, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3706
  br label %cond.end, !dbg !3706

cond.end:                                         ; preds = %if.then17, %cond.true
  %call19 = tail call fastcc i64 @VEC_adjust_info_base_embedded_size(i32 32) #8, !dbg !3708
  %9 = alloca [776 x i8], align 16, !dbg !3708
  %10 = bitcast [776 x i8]* %9 to %struct.VEC_adjust_info_stack*, !dbg !3708
  %call20 = call fastcc %struct.VEC_adjust_info_stack* @VEC_adjust_info_stack_alloc1(i32 32, %struct.VEC_adjust_info_stack* nonnull %10) #8, !dbg !3708
  store %struct.VEC_adjust_info_stack* %call20, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !3709
  br label %if.end21, !dbg !3710

if.end21:                                         ; preds = %if.end15, %cond.end
  %cmp22 = icmp eq %struct.edge_def* %call, %e, !dbg !3711
  %loop.call2 = select i1 %cmp22, %struct.loop* %loop, %struct.loop* %call2
  %call2.loop = select i1 %cmp22, %struct.loop* %call2, %struct.loop* %loop
  call void @llvm.dbg.value(metadata %struct.loop* %call2.loop, metadata !3656, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %struct.loop* %loop.call2, metadata !3655, metadata !DIExpression()), !dbg !3673
  %call25 = call %struct.bitmap_head_def* @ssa_names_to_replace() #6, !dbg !3713
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call25, metadata !3659, metadata !DIExpression()), !dbg !3673
  store %struct.bitmap_head_def* %call25, %struct.bitmap_head_def** %definitions, align 8, !dbg !3714
  %conv27 = zext i1 %cmp22 to i8, !dbg !3715
  call fastcc void @slpeel_update_phis_for_duplicate_loop(%struct.loop* %loop, %struct.loop* nonnull %call2, i8 zeroext %conv27) #8, !dbg !3716
  call void @rename_variables_in_loop(%struct.loop* nonnull %call2) #8, !dbg !3717
  %call28 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop.call2) #6, !dbg !3718
  %call29 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %call28) #6, !dbg !3719
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call29, metadata !3662, metadata !DIExpression()), !dbg !3673
  %call30 = call %struct.edge_def* @single_exit(%struct.loop* %loop.call2) #6, !dbg !3720
  %call31 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %call30) #6, !dbg !3721
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call31, metadata !3660, metadata !DIExpression()), !dbg !3673
  %tobool32 = icmp eq i8 %update_first_loop_count, 0, !dbg !3722
  br i1 %tobool32, label %if.then33, label %if.else52, !dbg !3723

if.then33:                                        ; preds = %if.end21
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3724
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %first_niters, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3724
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3724
  %call34 = call %union.tree_node* @build_int_cst(%union.tree_node* %12, i64 0) #6, !dbg !3724
  %call35 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 98, %union.tree_node* %11, %union.tree_node* %first_niters, %union.tree_node* %call34) #6, !dbg !3724
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !3658, metadata !DIExpression()), !dbg !3673
  %tobool36 = icmp eq i8 %check_profitability, 0, !dbg !3725
  br i1 %tobool36, label %if.end46, label %if.then37, !dbg !3726

if.then37:                                        ; preds = %if.then33
  %call38 = call fastcc %struct._loop_vec_info* @loop_vec_info_for_loop(%struct.loop* %loop) #8, !dbg !3727
  %num_iters_unchanged = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %call38, i64 0, i32 3, !dbg !3727
  %13 = load %union.tree_node*, %union.tree_node** %num_iters_unchanged, align 8, !dbg !3727
  %call39 = call %union.tree_node* @unshare_expr(%union.tree_node* %13) #6, !dbg !3728
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !3668, metadata !DIExpression()), !dbg !3729
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3730
  %type41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3730
  %15 = load %union.tree_node*, %union.tree_node** %type41, align 8, !dbg !3730
  %conv42 = zext i32 %th to i64, !dbg !3730
  %call43 = call %union.tree_node* @build_int_cst(%union.tree_node* %15, i64 %conv42) #6, !dbg !3730
  %call44 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 98, %union.tree_node* %14, %union.tree_node* %call39, %union.tree_node* %call43) #6, !dbg !3730
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !3667, metadata !DIExpression()), !dbg !3673
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3731
  %call45 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 94, %union.tree_node* %16, %union.tree_node* %call44, %union.tree_node* %call35) #6, !dbg !3731
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !3658, metadata !DIExpression()), !dbg !3673
  br label %if.end46, !dbg !3732

if.end46:                                         ; preds = %if.then33, %if.then37
  %pre_condition.0 = phi %union.tree_node* [ %call45, %if.then37 ], [ %call35, %if.then33 ], !dbg !3733
  call void @llvm.dbg.value(metadata %union.tree_node* %pre_condition.0, metadata !3658, metadata !DIExpression()), !dbg !3673
  %tobool47 = icmp eq %union.tree_node* %cond_expr, null, !dbg !3734
  br i1 %tobool47, label %if.end60, label %if.then48, !dbg !3736

if.then48:                                        ; preds = %if.end46
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3737
  %call49 = call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 96, %union.tree_node* %17, %union.tree_node* nonnull %cond_expr) #6, !dbg !3737
  %call50 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 94, %union.tree_node* %17, %union.tree_node* %pre_condition.0, %union.tree_node* %call49) #6, !dbg !3737
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !3658, metadata !DIExpression()), !dbg !3673
  br label %if.end60, !dbg !3739

if.else52:                                        ; preds = %if.end21
  %tobool53 = icmp eq i8 %check_profitability, 0, !dbg !3740
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !3743

if.then54:                                        ; preds = %if.else52
  call fastcc void @set_prologue_iterations(%struct.basic_block_def* %call29, %union.tree_node* %first_niters, %struct.loop* %loop, i32 %th) #8, !dbg !3744
  br label %if.end55, !dbg !3744

if.end55:                                         ; preds = %if.else52, %if.then54
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3745
  %type57 = getelementptr inbounds %union.tree_node, %union.tree_node* %first_niters, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3745
  %19 = load %union.tree_node*, %union.tree_node** %type57, align 8, !dbg !3745
  %call58 = call %union.tree_node* @build_int_cst(%union.tree_node* %19, i64 0) #6, !dbg !3745
  %call59 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 98, %union.tree_node* %18, %union.tree_node* %first_niters, %union.tree_node* %call58) #6, !dbg !3745
  call void @llvm.dbg.value(metadata %union.tree_node* %call59, metadata !3658, metadata !DIExpression()), !dbg !3673
  br label %if.end60

if.end60:                                         ; preds = %if.end46, %if.then48, %if.end55
  %pre_condition.2 = phi %union.tree_node* [ %call59, %if.end55 ], [ %call50, %if.then48 ], [ %pre_condition.0, %if.end46 ], !dbg !3746
  call void @llvm.dbg.value(metadata %union.tree_node* %pre_condition.2, metadata !3658, metadata !DIExpression()), !dbg !3673
  %call61 = call fastcc %struct.edge_def* @slpeel_add_loop_guard(%struct.basic_block_def* %call29, %union.tree_node* %pre_condition.2, %struct.gimple_seq_d* %cond_expr_stmt_list, %struct.basic_block_def* %call31, %struct.basic_block_def* %call29) #8, !dbg !3747
  call void @llvm.dbg.value(metadata %struct.edge_def* %call61, metadata !3657, metadata !DIExpression()), !dbg !3673
  %cmp62 = icmp eq %struct.loop* %loop.call2, %call2, !dbg !3748
  %conv64 = zext i1 %cmp62 to i8, !dbg !3749
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %definitions, metadata !3659, metadata !DIExpression(DW_OP_deref)), !dbg !3673
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %new_exit_bb, metadata !3664, metadata !DIExpression(DW_OP_deref)), !dbg !3673
  call fastcc void @slpeel_update_phi_nodes_for_guard1(%struct.edge_def* %call61, %struct.loop* %loop.call2, i8 zeroext %conv64, %struct.basic_block_def** nonnull %new_exit_bb, %struct.bitmap_head_def** nonnull %definitions) #8, !dbg !3750
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %new_exit_bb, align 8, !dbg !3751
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %20, metadata !3664, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %20, metadata !3663, metadata !DIExpression()), !dbg !3673
  %call65 = call %struct.edge_def* @single_exit(%struct.loop* %call2.loop) #6, !dbg !3752
  %call66 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %call65) #6, !dbg !3753
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call66, metadata !3661, metadata !DIExpression()), !dbg !3673
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3754
  %call67 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 101, %union.tree_node* %21, %union.tree_node* %first_niters, %union.tree_node* %niters) #6, !dbg !3754
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !3658, metadata !DIExpression()), !dbg !3673
  %call68 = call fastcc %struct.edge_def* @slpeel_add_loop_guard(%struct.basic_block_def* %20, %union.tree_node* %call67, %struct.gimple_seq_d* null, %struct.basic_block_def* %call66, %struct.basic_block_def* %call29) #8, !dbg !3755
  call void @llvm.dbg.value(metadata %struct.edge_def* %call68, metadata !3657, metadata !DIExpression()), !dbg !3673
  %cmp69 = icmp eq %struct.loop* %call2.loop, %call2, !dbg !3756
  %conv71 = zext i1 %cmp69 to i8, !dbg !3757
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %new_exit_bb, metadata !3664, metadata !DIExpression(DW_OP_deref)), !dbg !3673
  call fastcc void @slpeel_update_phi_nodes_for_guard2(%struct.edge_def* %call68, %struct.loop* %call2.loop, i8 zeroext %conv71, %struct.basic_block_def** nonnull %new_exit_bb) #8, !dbg !3758
  br i1 %tobool32, label %if.end74, label %if.then73, !dbg !3759

if.then73:                                        ; preds = %if.end60
  call void @slpeel_make_loop_iterate_ntimes(%struct.loop* %loop.call2, %union.tree_node* %first_niters) #8, !dbg !3760
  br label %if.end74, !dbg !3760

if.end74:                                         ; preds = %if.end60, %if.then73
  call fastcc void @adjust_vec_debug_stmts() #8, !dbg !3762
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %definitions, align 8, !dbg !3763
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %22, metadata !3659, metadata !DIExpression()), !dbg !3673
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %22) #6, !dbg !3763
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3659, metadata !DIExpression()), !dbg !3673
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %definitions, align 8, !dbg !3763
  call void @delete_update_ssa() #6, !dbg !3764
  br label %cleanup, !dbg !3765

cleanup:                                          ; preds = %land.lhs.true, %if.then4, %entry, %if.end12, %if.end74
  %retval.0 = phi %struct.loop* [ %call2, %if.end74 ], [ null, %entry ], [ null, %if.end12 ], [ null, %land.lhs.true ], [ null, %if.then4 ], !dbg !3673
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3766
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3766
  ret %struct.loop* %retval.0, !dbg !3766
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_update_ivs_after_vectorizer(%struct._loop_vec_info* %loop_vinfo, %union.tree_node* %niters, %struct.edge_def* %update_e) unnamed_addr #5 !dbg !3767 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gsi1 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp4 = alloca %struct.gimple_stmt_iterator, align 8
  %last_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp93 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !3771, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata %union.tree_node* %niters, metadata !3772, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata %struct.edge_def* %update_e, metadata !3773, metadata !DIExpression()), !dbg !3794
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !3795
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !3795
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !3774, metadata !DIExpression()), !dbg !3794
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %0) #6, !dbg !3796
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !3797
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3797
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !3775, metadata !DIExpression()), !dbg !3794
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3798
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3798
  %3 = bitcast %struct.gimple_stmt_iterator* %gsi1 to i8*, !dbg !3798
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7, !dbg !3798
  %dest2 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %update_e, i64 0, i32 1, !dbg !3799
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !3799
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !3780, metadata !DIExpression()), !dbg !3794
  %call3 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %1) #8, !dbg !3800
  %tobool = icmp eq i8 %call3, 0, !dbg !3800
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3800

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1730, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3800
  br label %cond.end, !dbg !3800

cond.end:                                         ; preds = %entry, %cond.true
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3801
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !3801
  %header = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 2, !dbg !3802
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3802
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %6) #6, !dbg !3801
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !3801
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !3801
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp4 to i8*, !dbg !3803
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7, !dbg !3803
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp4, %struct.basic_block_def* %4) #6, !dbg !3803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !3803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7, !dbg !3803
  %8 = bitcast %struct.gimple_stmt_iterator* %last_gsi to i8*, !dbg !3804
  %num = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 0, !dbg !3804
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp93 to i8*, !dbg !3804
  br label %for.cond, !dbg !3805

for.cond:                                         ; preds = %cleanup, %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3778, metadata !DIExpression(DW_OP_deref)), !dbg !3794
  %call5 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3806
  %tobool6 = icmp eq i8 %call5, 0, !dbg !3806
  br i1 %tobool6, label %land.rhs, label %for.end, !dbg !3807

land.rhs:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi1, metadata !3779, metadata !DIExpression(DW_OP_deref)), !dbg !3794
  %call7 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi1) #8, !dbg !3808
  %tobool8 = icmp eq i8 %call7, 0, !dbg !3809
  br i1 %tobool8, label %for.body, label %for.end, !dbg !3810

for.body:                                         ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3781, metadata !DIExpression()), !dbg !3804
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7, !dbg !3811
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3778, metadata !DIExpression(DW_OP_deref)), !dbg !3794
  %call9 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3812
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !3776, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi1, metadata !3779, metadata !DIExpression(DW_OP_deref)), !dbg !3794
  %call10 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi1) #8, !dbg !3813
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !3777, metadata !DIExpression()), !dbg !3794
  %call11 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3814
  %tobool12 = icmp eq i8 %call11, 0, !dbg !3814
  br i1 %tobool12, label %if.end, label %if.then, !dbg !3816

if.then:                                          ; preds = %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3817
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !3819
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3820
  call void @print_gimple_stmt(%struct._IO_FILE* %11, %union.gimple_statement_d* %call9, i32 0, i32 2) #6, !dbg !3821
  br label %if.end, !dbg !3822

if.end:                                           ; preds = %for.body, %if.then
  %call14 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call9) #8, !dbg !3823
  %call15 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call14) #8, !dbg !3823
  %var16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3823
  %12 = bitcast i32* %var16 to %union.tree_node**, !dbg !3823
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !3823
  %call17 = call zeroext i8 @is_gimple_reg(%union.tree_node* %13) #6, !dbg !3825
  %tobool18 = icmp eq i8 %call17, 0, !dbg !3825
  br i1 %tobool18, label %if.then19, label %if.end25, !dbg !3826

if.then19:                                        ; preds = %if.end
  %call20 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3827
  %tobool21 = icmp eq i8 %call20, 0, !dbg !3827
  br i1 %tobool21, label %cleanup, label %if.then22, !dbg !3830

if.then22:                                        ; preds = %if.then19
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3831
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3832
  br label %cleanup, !dbg !3832

if.end25:                                         ; preds = %if.end
  %call26 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call9) #8, !dbg !3833
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call26, i64 0, i32 16, !dbg !3833
  %15 = load i32, i32* %def_type, align 8, !dbg !3833
  %cmp = icmp eq i32 %15, 5, !dbg !3835
  br i1 %cmp, label %if.then27, label %if.end33, !dbg !3836

if.then27:                                        ; preds = %if.end25
  %call28 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3837
  %tobool29 = icmp eq i8 %call28, 0, !dbg !3837
  br i1 %tobool29, label %cleanup, label %if.then30, !dbg !3840

if.then30:                                        ; preds = %if.then27
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3841
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3842
  br label %cleanup, !dbg !3842

if.end33:                                         ; preds = %if.end25
  %call34 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call9) #8, !dbg !3843
  %call35 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call34) #8, !dbg !3843
  %call36 = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %0, %union.tree_node* %call35) #6, !dbg !3844
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !3781, metadata !DIExpression()), !dbg !3804
  %tobool37 = icmp eq %union.tree_node* %call36, null, !dbg !3845
  br i1 %tobool37, label %cond.true38, label %cond.end40, !dbg !3845

cond.true38:                                      ; preds = %if.end33
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1769, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3845
  br label %cond.end40, !dbg !3845

cond.end40:                                       ; preds = %if.end33, %cond.true38
  %type42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3846
  %17 = load %union.tree_node*, %union.tree_node** %type42, align 8, !dbg !3846
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3789, metadata !DIExpression()), !dbg !3804
  %call43 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %call36) #6, !dbg !3847
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !3781, metadata !DIExpression()), !dbg !3804
  %18 = load i32, i32* %num, align 8, !dbg !3848
  %call44 = call %union.tree_node* @evolution_part_in_loop_num(%union.tree_node* %call43, i32 %18) #6, !dbg !3849
  %call45 = call %union.tree_node* @unshare_expr(%union.tree_node* %call44) #6, !dbg !3850
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !3785, metadata !DIExpression()), !dbg !3804
  %cmp46 = icmp eq %union.tree_node* %call45, null, !dbg !3851
  br i1 %cmp46, label %cond.true47, label %cond.end49, !dbg !3851

cond.true47:                                      ; preds = %cond.end40
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1778, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3851
  br label %cond.end49, !dbg !3851

cond.end49:                                       ; preds = %cond.end40, %cond.true47
  %call51 = call fastcc zeroext i8 @tree_is_chrec(%union.tree_node* %call45) #8, !dbg !3852
  %tobool52 = icmp eq i8 %call51, 0, !dbg !3852
  br i1 %tobool52, label %cond.end55, label %cond.true53, !dbg !3852

cond.true53:                                      ; preds = %cond.end49
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1782, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3852
  br label %cond.end55, !dbg !3852

cond.end55:                                       ; preds = %cond.end49, %cond.true53
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !3787, metadata !DIExpression()), !dbg !3804
  %19 = load i32, i32* %num, align 8, !dbg !3853
  %call58 = call %union.tree_node* @initial_condition_in_loop_num(%union.tree_node* %call43, i32 %19) #6, !dbg !3854
  %call59 = call %union.tree_node* @unshare_expr(%union.tree_node* %call58) #6, !dbg !3855
  call void @llvm.dbg.value(metadata %union.tree_node* %call59, metadata !3786, metadata !DIExpression()), !dbg !3804
  %call60 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %17, %union.tree_node* %call59) #6, !dbg !3856
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !3786, metadata !DIExpression()), !dbg !3804
  %type62 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3857
  %20 = load %union.tree_node*, %union.tree_node** %type62, align 8, !dbg !3857
  %call65 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %20, %union.tree_node* %niters) #6, !dbg !3857
  %call66 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %20, %union.tree_node* %call65, %union.tree_node* %call45) #6, !dbg !3857
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !3788, metadata !DIExpression()), !dbg !3804
  %type68 = getelementptr inbounds %union.tree_node, %union.tree_node* %call60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3858
  %21 = bitcast %union.tree_node** %type68 to i64**, !dbg !3858
  %22 = load i64*, i64** %21, align 8, !dbg !3858
  %bf.load = load i64, i64* %22, align 8, !dbg !3858
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3858
  %cmp69 = icmp eq i64 %bf.cast1, 10, !dbg !3858
  %23 = bitcast i64* %22 to %union.tree_node*, !dbg !3858
  br i1 %cmp69, label %if.then77, label %lor.lhs.false, !dbg !3858

lor.lhs.false:                                    ; preds = %cond.end55
  %cmp76 = icmp eq i64 %bf.cast1, 12, !dbg !3858
  br i1 %cmp76, label %if.then77, label %if.else, !dbg !3860

if.then77:                                        ; preds = %lor.lhs.false, %cond.end55
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !3861
  %call80 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %24, %union.tree_node* %call66) #6, !dbg !3861
  %call81 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 66, %union.tree_node* %23, %union.tree_node* %call60, %union.tree_node* %call80) #6, !dbg !3861
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !3791, metadata !DIExpression()), !dbg !3804
  br label %if.end88, !dbg !3862

if.else:                                          ; preds = %lor.lhs.false
  %call86 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %23, %union.tree_node* %call66) #6, !dbg !3863
  %call87 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %23, %union.tree_node* %call60, %union.tree_node* %call86) #6, !dbg !3863
  call void @llvm.dbg.value(metadata %union.tree_node* %call87, metadata !3791, metadata !DIExpression()), !dbg !3804
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then77
  %ni.0 = phi %union.tree_node* [ %call81, %if.then77 ], [ %call87, %if.else ], !dbg !3864
  call void @llvm.dbg.value(metadata %union.tree_node* %ni.0, metadata !3791, metadata !DIExpression()), !dbg !3804
  %25 = load %union.tree_node*, %union.tree_node** %type68, align 8, !dbg !3865
  %call91 = call %union.tree_node* @create_tmp_var(%union.tree_node* %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !3866
  call void @llvm.dbg.value(metadata %union.tree_node* %call91, metadata !3790, metadata !DIExpression()), !dbg !3804
  %call92 = call zeroext i8 @add_referenced_var(%union.tree_node* %call91) #6, !dbg !3867
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7, !dbg !3868
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp93, %struct.basic_block_def* %1) #8, !dbg !3868
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !3868
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7, !dbg !3868
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last_gsi, metadata !3793, metadata !DIExpression(DW_OP_deref)), !dbg !3804
  %call94 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %last_gsi, %union.tree_node* %ni.0, i8 zeroext 0, %union.tree_node* %call91, i8 zeroext 1, i32 1) #6, !dbg !3869
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !3792, metadata !DIExpression()), !dbg !3804
  call fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %call10, %struct.edge_def* %update_e, %union.tree_node* %call94) #8, !dbg !3870
  br label %cleanup, !dbg !3871

cleanup:                                          ; preds = %if.then27, %if.then19, %if.then30, %if.then22, %if.end88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7, !dbg !3871
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3778, metadata !DIExpression(DW_OP_deref)), !dbg !3794
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3872
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi1, metadata !3779, metadata !DIExpression(DW_OP_deref)), !dbg !3794
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi1) #8, !dbg !3873
  br label %for.cond, !dbg !3874, !llvm.loop !3875

for.end:                                          ; preds = %for.cond, %land.rhs
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7, !dbg !3877
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !3877
  ret void, !dbg !3877
}

declare dso_local void @scev_reset() local_unnamed_addr #2

declare dso_local void @free_original_copy_tables() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @vect_do_peeling_for_alignment(%struct._loop_vec_info* %loop_vinfo) local_unnamed_addr #5 !dbg !3878 {
entry:
  %wide_prolog_niters = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !3882, metadata !DIExpression()), !dbg !3891
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !3892
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !3892
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !3883, metadata !DIExpression()), !dbg !3891
  %1 = bitcast %union.tree_node** %wide_prolog_niters to i8*, !dbg !3893
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3893
  call void @llvm.dbg.value(metadata i32 0, metadata !3889, metadata !DIExpression()), !dbg !3891
  %call = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !3894
  %tobool = icmp eq i8 %call, 0, !dbg !3894
  br i1 %tobool, label %if.end, label %if.then, !dbg !3896

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !3897
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3898
  br label %if.end, !dbg !3898

if.end:                                           ; preds = %entry, %if.then
  tail call void @initialize_original_copy_tables() #6, !dbg !3899
  %call3 = tail call fastcc %union.tree_node* @vect_build_loop_niters(%struct._loop_vec_info* %loop_vinfo, %struct.gimple_seq_d* null) #8, !dbg !3900
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3885, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata %union.tree_node** %wide_prolog_niters, metadata !3887, metadata !DIExpression(DW_OP_deref)), !dbg !3891
  %call4 = call fastcc %union.tree_node* @vect_gen_niters_for_prolog_loop(%struct._loop_vec_info* %loop_vinfo, %union.tree_node* %call3, %union.tree_node** nonnull %wide_prolog_niters) #8, !dbg !3901
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3884, metadata !DIExpression()), !dbg !3891
  %min_profitable_iters5 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 4, !dbg !3902
  %3 = load i32, i32* %min_profitable_iters5, align 8, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %3, metadata !3890, metadata !DIExpression()), !dbg !3891
  %call6 = call fastcc i32 @conservative_cost_threshold(%struct._loop_vec_info* %loop_vinfo, i32 %3) #8, !dbg !3903
  call void @llvm.dbg.value(metadata i32 %call6, metadata !3889, metadata !DIExpression()), !dbg !3891
  %call7 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %0) #6, !dbg !3904
  %call8 = call fastcc %struct.loop* @slpeel_tree_peel_loop_to_edge(%struct.loop* %0, %struct.edge_def* %call7, %union.tree_node* %call4, %union.tree_node* %call3, i8 zeroext 1, i32 %call6, i8 zeroext 1, %union.tree_node* null, %struct.gimple_seq_d* null) #8, !dbg !3905
  call void @llvm.dbg.value(metadata %struct.loop* %call8, metadata !3888, metadata !DIExpression()), !dbg !3891
  %tobool9 = icmp eq %struct.loop* %call8, null, !dbg !3906
  br i1 %tobool9, label %cond.true, label %cond.end, !dbg !3906

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 2158, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3906
  br label %cond.end, !dbg !3906

cond.end:                                         ; preds = %if.end, %cond.true
  %num_iters = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 2, !dbg !3907
  %4 = load %union.tree_node*, %union.tree_node** %num_iters, align 8, !dbg !3907
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3886, metadata !DIExpression()), !dbg !3891
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3908
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3908
  %call10 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %5, %union.tree_node* %4, %union.tree_node* %call4) #6, !dbg !3908
  store %union.tree_node* %call10, %union.tree_node** %num_iters, align 8, !dbg !3909
  %6 = load %union.tree_node*, %union.tree_node** %wide_prolog_niters, align 8, !dbg !3910
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3887, metadata !DIExpression()), !dbg !3891
  call fastcc void @vect_update_inits_of_drs(%struct._loop_vec_info* %loop_vinfo, %union.tree_node* %6) #8, !dbg !3911
  call void @scev_reset() #6, !dbg !3912
  call void @free_original_copy_tables() #6, !dbg !3913
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3914
  ret void, !dbg !3914
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @vect_build_loop_niters(%struct._loop_vec_info* %loop_vinfo, %struct.gimple_seq_d* %seq) unnamed_addr #5 !dbg !3915 {
entry:
  %seq.addr = alloca %struct.gimple_seq_d*, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !3919, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !3920, metadata !DIExpression()), !dbg !3932
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq.addr, align 8
  %0 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !3933
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3933
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !3923, metadata !DIExpression()), !dbg !3932
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !3934
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !3935
  %1 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !3935
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !3925, metadata !DIExpression()), !dbg !3932
  %num_iters = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 2, !dbg !3936
  %2 = load %union.tree_node*, %union.tree_node** %num_iters, align 8, !dbg !3936
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* %2) #6, !dbg !3937
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3926, metadata !DIExpression()), !dbg !3932
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3938
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3938
  %call2 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !3939
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3922, metadata !DIExpression()), !dbg !3932
  %call3 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call2) #6, !dbg !3940
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3923, metadata !DIExpression(DW_OP_deref)), !dbg !3932
  %call4 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 0, %union.tree_node* %call2) #6, !dbg !3941
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3921, metadata !DIExpression()), !dbg !3932
  %call5 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %1) #6, !dbg !3942
  call void @llvm.dbg.value(metadata %struct.edge_def* %call5, metadata !3924, metadata !DIExpression()), !dbg !3932
  %4 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3943
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %4, metadata !3923, metadata !DIExpression()), !dbg !3932
  %tobool = icmp eq %struct.gimple_seq_d* %4, null, !dbg !3943
  br i1 %tobool, label %if.end10, label %if.then, !dbg !3944

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !3920, metadata !DIExpression()), !dbg !3932
  %tobool6 = icmp eq %struct.gimple_seq_d* %seq, null, !dbg !3945
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %4, metadata !3923, metadata !DIExpression()), !dbg !3932
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !3946

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq.addr, metadata !3920, metadata !DIExpression(DW_OP_deref)), !dbg !3932
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %seq.addr, %struct.gimple_seq_d* nonnull %4) #6, !dbg !3947
  br label %if.end10, !dbg !3947

if.else:                                          ; preds = %if.then
  %call8 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call5, %struct.gimple_seq_d* nonnull %4) #6, !dbg !3948
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call8, metadata !3927, metadata !DIExpression()), !dbg !3949
  %tobool9 = icmp eq %struct.basic_block_def* %call8, null, !dbg !3950
  br i1 %tobool9, label %if.end10, label %cond.true, !dbg !3950

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1491, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3950
  br label %if.end10, !dbg !3950

if.end10:                                         ; preds = %if.else, %entry, %if.then7, %cond.true
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3951
  ret %union.tree_node* %call4, !dbg !3952
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @vect_gen_niters_for_prolog_loop(%struct._loop_vec_info* %loop_vinfo, %union.tree_node* %loop_niters, %union.tree_node** %wide_prolog_niters) unnamed_addr #5 !dbg !3953 {
entry:
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %new_stmts = alloca %struct.gimple_seq_d*, align 8
  %seq = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !3957, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %union.tree_node* %loop_niters, metadata !3958, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %union.tree_node** %wide_prolog_niters, metadata !3959, metadata !DIExpression()), !dbg !3999
  %unaligned_dr = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 7, !dbg !4000
  %0 = load %struct.data_reference*, %struct.data_reference** %unaligned_dr, align 8, !dbg !4000
  call void @llvm.dbg.value(metadata %struct.data_reference* %0, metadata !3960, metadata !DIExpression()), !dbg !3999
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !4001
  %1 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !4001
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !3961, metadata !DIExpression()), !dbg !3999
  %2 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !4002
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4002
  %stmt = getelementptr inbounds %struct.data_reference, %struct.data_reference* %0, i64 0, i32 0, !dbg !4003
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4003
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %3, metadata !3968, metadata !DIExpression()), !dbg !3999
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %3) #8, !dbg !4004
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !3969, metadata !DIExpression()), !dbg !3999
  %vectype2 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !4005
  %4 = load %union.tree_node*, %union.tree_node** %vectype2, align 8, !dbg !4005
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3970, metadata !DIExpression()), !dbg !3999
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4006
  %6 = load i32, i32* %5, align 8, !dbg !4006
  %div = lshr i32 %6, 3, !dbg !4007
  call void @llvm.dbg.value(metadata i32 %div, metadata !3971, metadata !DIExpression()), !dbg !3999
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %loop_niters, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4008
  %7 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !4008
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3972, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 1, metadata !3973, metadata !DIExpression()), !dbg !3999
  %ref = getelementptr inbounds %struct.data_reference, %struct.data_reference* %0, i64 0, i32 1, !dbg !4009
  %8 = bitcast %union.tree_node** %ref to %struct.tree_common**, !dbg !4009
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !4009
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !4009
  %10 = bitcast %union.tree_node** %type5 to i64**, !dbg !4009
  %11 = load i64*, i64** %10, align 8, !dbg !4009
  %bf.load = load i64, i64* %11, align 8, !dbg !4009
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4009
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !4009
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4009

cond.true:                                        ; preds = %entry
  %12 = bitcast i64* %11 to %union.tree_node*, !dbg !4009
  %call9 = tail call i32 @vector_type_mode(%union.tree_node* %12) #6, !dbg !4009
  br label %cond.end, !dbg !4009

cond.false:                                       ; preds = %entry
  %type13 = bitcast i64* %11 to %struct.tree_type*, !dbg !4009
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type13, i64 0, i32 6, !dbg !4009
  %bf.load14 = load i32, i32* %mode, align 4, !dbg !4009
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !4009
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !4009
  br label %cond.end, !dbg !4009

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call9, %cond.true ], [ %bf.clear15, %cond.false ], !dbg !4009
  %idxprom = zext i32 %cond to i64, !dbg !4009
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4009
  %13 = load i8, i8* %arrayidx, align 1, !dbg !4009
  %conv16 = zext i8 %13 to i32, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %conv16, metadata !3974, metadata !DIExpression()), !dbg !3999
  %type17 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !4010
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type17, i64 0, i32 6, !dbg !4010
  %bf.load18 = load i32, i32* %precision, align 4, !dbg !4010
  %bf.clear19 = and i32 %bf.load18, 1023, !dbg !4010
  %sh_prom = zext i32 %bf.clear19 to i64, !dbg !4010
  %shl = shl i64 1, %sh_prom, !dbg !4010
  %conv20 = trunc i64 %shl to i32, !dbg !4010
  call void @llvm.dbg.value(metadata i32 %conv20, metadata !3975, metadata !DIExpression()), !dbg !3999
  %first_dr = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 17, !dbg !4011
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr, align 8, !dbg !4011
  %cmp21 = icmp eq %union.gimple_statement_d* %14, null, !dbg !4011
  br i1 %cmp21, label %if.end, label %if.then, !dbg !4013

if.then:                                          ; preds = %cond.end
  %call24 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* nonnull %14) #8, !dbg !4014
  %size = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call24, i64 0, i32 19, !dbg !4014
  %15 = load i32, i32* %size, align 8, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %15, metadata !3973, metadata !DIExpression()), !dbg !3999
  br label %if.end, !dbg !4015

if.end:                                           ; preds = %cond.end, %if.then
  %step.0 = phi i32 [ %15, %if.then ], [ 1, %cond.end ], !dbg !3999
  call void @llvm.dbg.value(metadata i32 %step.0, metadata !3973, metadata !DIExpression()), !dbg !3999
  %call25 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %1) #6, !dbg !4016
  call void @llvm.dbg.value(metadata %struct.edge_def* %call25, metadata !3966, metadata !DIExpression()), !dbg !3999
  %peeling_for_alignment = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 8, !dbg !4017
  %16 = load i32, i32* %peeling_for_alignment, align 8, !dbg !4017
  %cmp26 = icmp sgt i32 %16, 0, !dbg !4018
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !4019

if.then28:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %16, metadata !3976, metadata !DIExpression()), !dbg !4020
  %div30 = sdiv i32 %16, %conv16, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %div30, metadata !3979, metadata !DIExpression()), !dbg !4020
  %call31 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4022
  %tobool = icmp eq i8 %call31, 0, !dbg !4022
  br i1 %tobool, label %if.end34, label %if.then32, !dbg !4024

if.then32:                                        ; preds = %if.then28
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4025
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0), i32 %16) #6, !dbg !4026
  br label %if.end34, !dbg !4026

if.end34:                                         ; preds = %if.then28, %if.then32
  %sub = sub nsw i32 %conv20, %div30, !dbg !4027
  %sub35 = add nsw i32 %conv20, -1, !dbg !4028
  %and = and i32 %sub, %sub35, !dbg !4029
  %div36 = sdiv i32 %and, %step.0, !dbg !4030
  %conv37 = sext i32 %div36 to i64, !dbg !4031
  %call38 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %7, i64 %conv37) #6, !dbg !4032
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !3964, metadata !DIExpression()), !dbg !3999
  br label %if.end76, !dbg !4033

if.else:                                          ; preds = %if.end
  %18 = bitcast %struct.gimple_seq_d** %new_stmts to i8*, !dbg !4034
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7, !dbg !4034
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !3980, metadata !DIExpression()), !dbg !4035
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !4036
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmts, metadata !3980, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  %call39 = call %union.tree_node* @vect_create_addr_base_for_vector_ref(%union.gimple_statement_d* %3, %struct.gimple_seq_d** nonnull %new_stmts, %union.tree_node* null, %struct.loop* %1) #6, !dbg !4037
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !3982, metadata !DIExpression()), !dbg !4035
  %type41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4038
  %19 = bitcast %union.tree_node** %type41 to %struct.tree_type**, !dbg !4038
  %20 = load %struct.tree_type*, %struct.tree_type** %19, align 8, !dbg !4038
  %size44 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %20, i64 0, i32 2, !dbg !4039
  %21 = load %union.tree_node*, %union.tree_node** %size44, align 8, !dbg !4039
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !3984, metadata !DIExpression()), !dbg !4035
  %22 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !4040
  %call46 = call i64 @tree_low_cst(%union.tree_node* %21, i32 1) #6, !dbg !4041
  %conv47 = trunc i64 %call46 to i32, !dbg !4041
  %call48 = call %union.tree_node* %22(i32 %conv47, i32 1) #6, !dbg !4042
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !3985, metadata !DIExpression()), !dbg !4035
  %sub49 = add nsw i32 %div, -1, !dbg !4043
  %conv50 = sext i32 %sub49 to i64, !dbg !4044
  %call51 = call %union.tree_node* @build_int_cst(%union.tree_node* %call48, i64 %conv50) #6, !dbg !4045
  call void @llvm.dbg.value(metadata %union.tree_node* %call51, metadata !3986, metadata !DIExpression()), !dbg !4035
  %div52 = sdiv i32 %div, %conv20, !dbg !4046
  %conv53 = sext i32 %div52 to i64, !dbg !4047
  %call54 = call i32 @exact_log2(i64 %conv53) #6, !dbg !4048
  %conv55 = sext i32 %call54 to i64, !dbg !4048
  %call56 = call %union.tree_node* @build_int_cst(%union.tree_node* %call48, i64 %conv55) #6, !dbg !4049
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !3987, metadata !DIExpression()), !dbg !4035
  %sub57 = shl i64 %shl, 32, !dbg !4050
  %sext = add i64 %sub57, -4294967296, !dbg !4050
  %conv58 = ashr exact i64 %sext, 32, !dbg !4050
  %call59 = call %union.tree_node* @build_int_cst(%union.tree_node* %call48, i64 %conv58) #6, !dbg !4051
  call void @llvm.dbg.value(metadata %union.tree_node* %call59, metadata !3988, metadata !DIExpression()), !dbg !4035
  %conv60 = ashr exact i64 %sub57, 32, !dbg !4052
  %call61 = call %union.tree_node* @build_int_cst(%union.tree_node* %call48, i64 %conv60) #6, !dbg !4053
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !3989, metadata !DIExpression()), !dbg !4035
  %23 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !4054
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %23, metadata !3980, metadata !DIExpression()), !dbg !4035
  %call64 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call25, %struct.gimple_seq_d* %23) #6, !dbg !4055
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call64, metadata !3967, metadata !DIExpression()), !dbg !3999
  %tobool65 = icmp eq %struct.basic_block_def* %call64, null, !dbg !4056
  br i1 %tobool65, label %cond.end68, label %cond.true66, !dbg !4056

cond.true66:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 2016, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4056
  br label %cond.end68, !dbg !4056

cond.end68:                                       ; preds = %if.else, %cond.true66
  %call70 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call48, %union.tree_node* %call39) #6, !dbg !4057
  %call71 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 89, %union.tree_node* %call48, %union.tree_node* %call70, %union.tree_node* %call51) #6, !dbg !4057
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !3990, metadata !DIExpression()), !dbg !4035
  %call72 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 84, %union.tree_node* %call48, %union.tree_node* %call71, %union.tree_node* %call56) #6, !dbg !4058
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !3991, metadata !DIExpression()), !dbg !4035
  %call73 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %call48, %union.tree_node* %call61, %union.tree_node* %call72) #6, !dbg !4059
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !3964, metadata !DIExpression()), !dbg !3999
  %call74 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 89, %union.tree_node* %call48, %union.tree_node* %call73, %union.tree_node* %call59) #6, !dbg !4060
  call void @llvm.dbg.value(metadata %union.tree_node* %call74, metadata !3964, metadata !DIExpression()), !dbg !3999
  %call75 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %7, %union.tree_node* %call74) #6, !dbg !4061
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !3964, metadata !DIExpression()), !dbg !3999
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7, !dbg !4062
  br label %if.end76

if.end76:                                         ; preds = %cond.end68, %if.end34
  %iters.0 = phi %union.tree_node* [ %call38, %if.end34 ], [ %call75, %cond.end68 ], !dbg !4063
  call void @llvm.dbg.value(metadata %union.tree_node* %iters.0, metadata !3964, metadata !DIExpression()), !dbg !3999
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %loop_niters, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4064
  %bf.load78 = load i64, i64* %24, align 8, !dbg !4064
  %bf.cast803 = and i64 %bf.load78, 65535, !dbg !4066
  %cmp81 = icmp eq i64 %bf.cast803, 23, !dbg !4066
  br i1 %cmp81, label %if.end85, label %if.then83, !dbg !4067

if.then83:                                        ; preds = %if.end76
  %call84 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 80, %union.tree_node* %7, %union.tree_node* %iters.0, %union.tree_node* %loop_niters) #6, !dbg !4068
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !3964, metadata !DIExpression()), !dbg !3999
  br label %if.end85, !dbg !4069

if.end85:                                         ; preds = %if.end76, %if.then83
  %iters.1 = phi %union.tree_node* [ %call84, %if.then83 ], [ %iters.0, %if.end76 ], !dbg !3999
  call void @llvm.dbg.value(metadata %union.tree_node* %iters.1, metadata !3964, metadata !DIExpression()), !dbg !3999
  %call86 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4070
  %tobool87 = icmp eq i8 %call86, 0, !dbg !4070
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !4072

if.then88:                                        ; preds = %if.end85
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4073
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !4075
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4076
  call void @print_generic_expr(%struct._IO_FILE* %26, %union.tree_node* %iters.1, i32 2) #6, !dbg !4077
  br label %if.end90, !dbg !4078

if.end90:                                         ; preds = %if.end85, %if.then88
  %call91 = call %union.tree_node* @create_tmp_var(%union.tree_node* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4079
  call void @llvm.dbg.value(metadata %union.tree_node* %call91, metadata !3962, metadata !DIExpression()), !dbg !3999
  %call92 = call zeroext i8 @add_referenced_var(%union.tree_node* %call91) #6, !dbg !4080
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !3963, metadata !DIExpression()), !dbg !3999
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !4081
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3963, metadata !DIExpression(DW_OP_deref)), !dbg !3999
  %call93 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %iters.1, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 0, %union.tree_node* %call91) #6, !dbg !4082
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !3965, metadata !DIExpression()), !dbg !3999
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4083
  %call94 = call zeroext i8 @types_compatible_p(%union.tree_node* %27, %union.tree_node* %7) #6, !dbg !4084
  %tobool95 = icmp eq i8 %call94, 0, !dbg !4084
  br i1 %tobool95, label %if.else97, label %if.then96, !dbg !4085

if.then96:                                        ; preds = %if.end90
  store %union.tree_node* %call93, %union.tree_node** %wide_prolog_niters, align 8, !dbg !4086
  br label %if.end105, !dbg !4087

if.else97:                                        ; preds = %if.end90
  %28 = bitcast %struct.gimple_seq_d** %seq to i8*, !dbg !4088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7, !dbg !4088
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !3992, metadata !DIExpression()), !dbg !4089
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %seq, align 8, !dbg !4090
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4091
  %call98 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %29, %union.tree_node* %iters.1) #6, !dbg !4091
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !3995, metadata !DIExpression()), !dbg !4089
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4092
  %call99 = call %union.tree_node* @create_tmp_var(%union.tree_node* %30, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4093
  call void @llvm.dbg.value(metadata %union.tree_node* %call99, metadata !3962, metadata !DIExpression()), !dbg !3999
  %call100 = call zeroext i8 @add_referenced_var(%union.tree_node* %call99) #6, !dbg !4094
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !3992, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  %call101 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call98, %struct.gimple_seq_d** nonnull %seq, i8 zeroext 0, %union.tree_node* %call99) #6, !dbg !4095
  store %union.tree_node* %call101, %union.tree_node** %wide_prolog_niters, align 8, !dbg !4096
  %31 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !4097
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %31, metadata !3992, metadata !DIExpression()), !dbg !4089
  %tobool102 = icmp eq %struct.gimple_seq_d* %31, null, !dbg !4097
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !4099

if.then103:                                       ; preds = %if.else97
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %31, metadata !3992, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3963, metadata !DIExpression(DW_OP_deref)), !dbg !3999
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %stmts, %struct.gimple_seq_d* nonnull %31) #6, !dbg !4100
  br label %if.end104, !dbg !4100

if.end104:                                        ; preds = %if.else97, %if.then103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7, !dbg !4101
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then96
  %32 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4102
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %32, metadata !3963, metadata !DIExpression()), !dbg !3999
  %tobool106 = icmp eq %struct.gimple_seq_d* %32, null, !dbg !4102
  br i1 %tobool106, label %if.end115, label %if.then107, !dbg !4103

if.then107:                                       ; preds = %if.end105
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %32, metadata !3963, metadata !DIExpression()), !dbg !3999
  %call109 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call25, %struct.gimple_seq_d* nonnull %32) #6, !dbg !4104
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call109, metadata !3996, metadata !DIExpression()), !dbg !4105
  %tobool110 = icmp eq %struct.basic_block_def* %call109, null, !dbg !4106
  br i1 %tobool110, label %if.end115, label %cond.true111, !dbg !4106

cond.true111:                                     ; preds = %if.then107
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 2067, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4106
  br label %if.end115, !dbg !4106

if.end115:                                        ; preds = %if.then107, %if.end105, %cond.true111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4107
  ret %union.tree_node* %call93, !dbg !4108
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_update_inits_of_drs(%struct._loop_vec_info* %loop_vinfo, %union.tree_node* %niters) unnamed_addr #5 !dbg !4109 {
entry:
  %dr = alloca %struct.data_reference*, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !4113, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata %union.tree_node* %niters, metadata !4114, metadata !DIExpression()), !dbg !4118
  %datarefs1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 10, !dbg !4119
  %0 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs1, align 8, !dbg !4119
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %0, metadata !4116, metadata !DIExpression()), !dbg !4118
  %1 = bitcast %struct.data_reference** %dr to i8*, !dbg !4120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4120
  %call = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4121
  %tobool = icmp eq i8 %call, 0, !dbg !4121
  br i1 %tobool, label %if.end, label %if.then, !dbg !4123

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4124
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !4125
  br label %if.end, !dbg !4125

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !4115, metadata !DIExpression()), !dbg !4118
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %0, i64 0, i32 0, !dbg !4126
  br label %for.cond, !dbg !4129

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !4130
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4115, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata %struct.data_reference** %dr, metadata !4117, metadata !DIExpression(DW_OP_deref)), !dbg !4118
  %call4 = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.0, %struct.data_reference** nonnull %dr) #8, !dbg !4131
  %tobool5 = icmp eq i32 %call4, 0, !dbg !4132
  br i1 %tobool5, label %for.end, label %for.body, !dbg !4132

for.body:                                         ; preds = %for.cond
  %3 = load %struct.data_reference*, %struct.data_reference** %dr, align 8, !dbg !4133
  call void @llvm.dbg.value(metadata %struct.data_reference* %3, metadata !4117, metadata !DIExpression()), !dbg !4118
  call fastcc void @vect_update_init_of_dr(%struct.data_reference* %3, %union.tree_node* %niters) #8, !dbg !4134
  %inc = add i32 %i.0, 1, !dbg !4135
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4115, metadata !DIExpression()), !dbg !4118
  br label %for.cond, !dbg !4136, !llvm.loop !4137

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4139
  ret void, !dbg !4139
}

; Function Attrs: nounwind uwtable
define dso_local void @vect_loop_versioning(%struct._loop_vec_info* %loop_vinfo, i8 zeroext %do_versioning, %union.tree_node** %cond_expr, %struct.gimple_seq_d** %cond_expr_stmt_list) local_unnamed_addr #5 !dbg !4140 {
entry:
  %condition_bb = alloca %struct.basic_block_def*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %cond_exp_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gimplify_stmt_list = alloca %struct.gimple_seq_d*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp66 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !4145, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i8 %do_versioning, metadata !4146, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata %union.tree_node** %cond_expr, metadata !4147, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cond_expr_stmt_list, metadata !4148, metadata !DIExpression()), !dbg !4165
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !4166
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !4166
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !4149, metadata !DIExpression()), !dbg !4165
  %1 = bitcast %struct.basic_block_def** %condition_bb to i8*, !dbg !4167
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4167
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4168
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !4168
  %3 = bitcast %struct.gimple_stmt_iterator* %cond_exp_gsi to i8*, !dbg !4168
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7, !dbg !4168
  call void @llvm.dbg.value(metadata i32 8000, metadata !4160, metadata !DIExpression()), !dbg !4165
  %4 = bitcast %struct.gimple_seq_d** %gimplify_stmt_list to i8*, !dbg !4169
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4169
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4161, metadata !DIExpression()), !dbg !4165
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %gimplify_stmt_list, align 8, !dbg !4170
  %num_iters = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 2, !dbg !4171
  %5 = load %union.tree_node*, %union.tree_node** %num_iters, align 8, !dbg !4171
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4162, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i32 0, metadata !4163, metadata !DIExpression()), !dbg !4165
  %min_profitable_iters2 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 4, !dbg !4172
  %6 = load i32, i32* %min_profitable_iters2, align 8, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %6, metadata !4163, metadata !DIExpression()), !dbg !4165
  %call = tail call fastcc i32 @conservative_cost_threshold(%struct._loop_vec_info* %loop_vinfo, i32 %6) #8, !dbg !4173
  call void @llvm.dbg.value(metadata i32 %call, metadata !4164, metadata !DIExpression()), !dbg !4165
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4174
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4174
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4174
  %conv = zext i32 %call to i64, !dbg !4174
  %call3 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %8, i64 %conv) #6, !dbg !4174
  %call4 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 99, %union.tree_node* %7, %union.tree_node* %5, %union.tree_node* %call3) #6, !dbg !4174
  store %union.tree_node* %call4, %union.tree_node** %cond_expr, align 8, !dbg !4175
  %call5 = tail call %union.tree_node* @force_gimple_operand(%union.tree_node* %call4, %struct.gimple_seq_d** %cond_expr_stmt_list, i8 zeroext 0, %union.tree_node* null) #6, !dbg !4176
  store %union.tree_node* %call5, %union.tree_node** %cond_expr, align 8, !dbg !4177
  %may_misalign_stmts = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 13, !dbg !4178
  %9 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %may_misalign_stmts, align 8, !dbg !4178
  %tobool = icmp eq %struct.VEC_gimple_heap* %9, null, !dbg !4178
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4178

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %9, i64 0, i32 0, !dbg !4178
  br label %cond.end, !dbg !4178

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4178
  %call7 = tail call fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %cond) #8, !dbg !4178
  %cmp = icmp eq i32 %call7, 0, !dbg !4178
  br i1 %cmp, label %if.end, label %if.then, !dbg !4180

if.then:                                          ; preds = %cond.end
  tail call fastcc void @vect_create_cond_for_align_checks(%struct._loop_vec_info* %loop_vinfo, %union.tree_node** %cond_expr, %struct.gimple_seq_d** %cond_expr_stmt_list) #8, !dbg !4181
  br label %if.end, !dbg !4181

if.end:                                           ; preds = %cond.end, %if.then
  %may_alias_ddrs = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 12, !dbg !4182
  %10 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %may_alias_ddrs, align 8, !dbg !4182
  %tobool9 = icmp eq %struct.VEC_ddr_p_heap* %10, null, !dbg !4182
  br i1 %tobool9, label %cond.end14, label %cond.true10, !dbg !4182

cond.true10:                                      ; preds = %if.end
  %base12 = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %10, i64 0, i32 0, !dbg !4182
  br label %cond.end14, !dbg !4182

cond.end14:                                       ; preds = %if.end, %cond.true10
  %cond15 = phi %struct.VEC_ddr_p_base* [ %base12, %cond.true10 ], [ null, %if.end ], !dbg !4182
  %call16 = tail call fastcc i32 @VEC_ddr_p_base_length(%struct.VEC_ddr_p_base* %cond15) #8, !dbg !4182
  %cmp17 = icmp eq i32 %call16, 0, !dbg !4182
  br i1 %cmp17, label %if.end20, label %if.then19, !dbg !4184

if.then19:                                        ; preds = %cond.end14
  tail call fastcc void @vect_create_cond_for_alias_checks(%struct._loop_vec_info* %loop_vinfo, %union.tree_node** %cond_expr, %struct.gimple_seq_d** %cond_expr_stmt_list) #8, !dbg !4185
  br label %if.end20, !dbg !4185

if.end20:                                         ; preds = %cond.end14, %if.then19
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4186
  %12 = load %union.tree_node*, %union.tree_node** %cond_expr, align 8, !dbg !4186
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !4186
  %call21 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 102, %union.tree_node* %11, %union.tree_node* %12, %union.tree_node* %13) #6, !dbg !4186
  store %union.tree_node* %call21, %union.tree_node** %cond_expr, align 8, !dbg !4187
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %gimplify_stmt_list, metadata !4161, metadata !DIExpression(DW_OP_deref)), !dbg !4165
  %call22 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call21, %struct.gimple_seq_d** nonnull %gimplify_stmt_list, i8 zeroext 1, %union.tree_node* null) #6, !dbg !4188
  store %union.tree_node* %call22, %union.tree_node** %cond_expr, align 8, !dbg !4189
  %14 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %gimplify_stmt_list, align 8, !dbg !4190
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %14, metadata !4161, metadata !DIExpression()), !dbg !4165
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** %cond_expr_stmt_list, %struct.gimple_seq_d* %14) #6, !dbg !4191
  %tobool23 = icmp eq i8 %do_versioning, 0, !dbg !4192
  br i1 %tobool23, label %cleanup, label %if.end25, !dbg !4194

if.end25:                                         ; preds = %if.end20
  call void @initialize_original_copy_tables() #6, !dbg !4195
  %15 = bitcast %union.tree_node** %cond_expr to i8**, !dbg !4196
  %16 = load i8*, i8** %15, align 8, !dbg !4196
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %condition_bb, metadata !4150, metadata !DIExpression(DW_OP_deref)), !dbg !4165
  %call26 = call %struct.loop* @loop_version(%struct.loop* %0, i8* %16, %struct.basic_block_def** nonnull %condition_bb, i32 8000, i32 8000, i32 2000, i8 zeroext 1) #6, !dbg !4197
  call void @free_original_copy_tables() #6, !dbg !4198
  %call27 = call %struct.edge_def* @single_exit(%struct.loop* %0) #6, !dbg !4199
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27, i64 0, i32 1, !dbg !4200
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4200
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %17, metadata !4153, metadata !DIExpression()), !dbg !4165
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 0, !dbg !4201
  %18 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4201
  %tobool28 = icmp eq %struct.VEC_edge_gc* %18, null, !dbg !4201
  br i1 %tobool28, label %cond.end33, label %cond.true29, !dbg !4201

cond.true29:                                      ; preds = %if.end25
  %base31 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %18, i64 0, i32 0, !dbg !4201
  br label %cond.end33, !dbg !4201

cond.end33:                                       ; preds = %if.end25, %cond.true29
  %cond34 = phi %struct.VEC_edge_base* [ %base31, %cond.true29 ], [ null, %if.end25 ], !dbg !4201
  %call35 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond34) #8, !dbg !4201
  %cmp36 = icmp eq i32 %call35, 2, !dbg !4201
  br i1 %cmp36, label %cond.end40, label %cond.true38, !dbg !4201

cond.true38:                                      ; preds = %cond.end33
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 2543, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4201
  br label %cond.end40, !dbg !4201

cond.end40:                                       ; preds = %cond.end33, %cond.true38
  %call42 = call %struct.edge_def* @single_exit(%struct.loop* %0) #6, !dbg !4202
  %call43 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %call42) #6, !dbg !4203
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call43, metadata !4154, metadata !DIExpression()), !dbg !4165
  %call44 = call %struct.edge_def* @single_exit(%struct.loop* %0) #6, !dbg !4204
  call void @llvm.dbg.value(metadata %struct.edge_def* %call44, metadata !4155, metadata !DIExpression()), !dbg !4165
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call43, i64 0, i32 1, !dbg !4205
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4205
  %tobool45 = icmp eq %struct.VEC_edge_gc* %19, null, !dbg !4205
  br i1 %tobool45, label %cond.end50, label %cond.true46, !dbg !4205

cond.true46:                                      ; preds = %cond.end40
  %base48 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !4205
  br label %cond.end50, !dbg !4205

cond.end50:                                       ; preds = %cond.end40, %cond.true46
  %cond51 = phi %struct.VEC_edge_base* [ %base48, %cond.true46 ], [ null, %cond.end40 ], !dbg !4205
  %call52 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond51, i32 0) #8, !dbg !4205
  call void @llvm.dbg.value(metadata %struct.edge_def* %call52, metadata !4156, metadata !DIExpression()), !dbg !4165
  %20 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4206
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7, !dbg !4206
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %17) #6, !dbg !4206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %20, i64 24, i1 false), !dbg !4206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7, !dbg !4206
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call52, i64 0, i32 6, !dbg !4208
  br label %for.cond, !dbg !4211

for.cond:                                         ; preds = %for.body, %cond.end50
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4151, metadata !DIExpression(DW_OP_deref)), !dbg !4165
  %call53 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4212
  %tobool54 = icmp eq i8 %call53, 0, !dbg !4213
  br i1 %tobool54, label %for.body, label %for.end, !dbg !4214

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4151, metadata !DIExpression(DW_OP_deref)), !dbg !4165
  %call55 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4215
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call55, metadata !4157, metadata !DIExpression()), !dbg !4165
  %call56 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call55) #8, !dbg !4216
  %call57 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call56) #8, !dbg !4216
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4216
  %21 = bitcast i32* %var to %union.tree_node**, !dbg !4216
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !4216
  %call58 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %22, %struct.basic_block_def* %call43) #6, !dbg !4217
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call58, metadata !4158, metadata !DIExpression()), !dbg !4165
  %23 = load i32, i32* %dest_idx, align 4, !dbg !4218
  %call59 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call55, i32 %23) #8, !dbg !4218
  %call60 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call59) #8, !dbg !4218
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !4159, metadata !DIExpression()), !dbg !4165
  %call61 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call55, %struct.edge_def* %call52) #8, !dbg !4219
  call void @add_phi_arg(%union.gimple_statement_d* %call58, %union.tree_node* %call60, %struct.edge_def* %call44, i32 %call61) #6, !dbg !4220
  %call62 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call58) #8, !dbg !4221
  %call63 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call62) #8, !dbg !4221
  call fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %call55, %struct.edge_def* %call52, %union.tree_node* %call63) #8, !dbg !4222
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4151, metadata !DIExpression(DW_OP_deref)), !dbg !4165
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !4223
  br label %for.cond, !dbg !4224, !llvm.loop !4225

for.end:                                          ; preds = %for.cond
  call void @update_ssa(i32 2048) #6, !dbg !4227
  %24 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cond_expr_stmt_list, align 8, !dbg !4228
  %tobool64 = icmp eq %struct.gimple_seq_d* %24, null, !dbg !4228
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !4230

if.then65:                                        ; preds = %for.end
  %25 = bitcast %struct.gimple_stmt_iterator* %tmp66 to i8*, !dbg !4231
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #7, !dbg !4231
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %condition_bb, align 8, !dbg !4233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %26, metadata !4150, metadata !DIExpression()), !dbg !4165
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp66, %struct.basic_block_def* %26) #8, !dbg !4231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %25, i64 24, i1 false), !dbg !4231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #7, !dbg !4231
  %27 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cond_expr_stmt_list, align 8, !dbg !4234
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %cond_exp_gsi, metadata !4152, metadata !DIExpression(DW_OP_deref)), !dbg !4165
  call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* nonnull %cond_exp_gsi, %struct.gimple_seq_d* %27, i32 1) #6, !dbg !4235
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %cond_expr_stmt_list, align 8, !dbg !4236
  br label %if.end67, !dbg !4237

if.end67:                                         ; preds = %for.end, %if.then65
  store %union.tree_node* null, %union.tree_node** %cond_expr, align 8, !dbg !4238
  br label %cleanup, !dbg !4239

cleanup:                                          ; preds = %if.end20, %if.end67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7, !dbg !4239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !4239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4239
  ret void, !dbg !4239
}

declare dso_local %union.tree_node* @force_gimple_operand(%union.tree_node*, %struct.gimple_seq_d**, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_create_cond_for_align_checks(%struct._loop_vec_info* %loop_vinfo, %union.tree_node** %cond_expr, %struct.gimple_seq_d** %cond_expr_stmt_list) unnamed_addr #5 !dbg !4240 {
entry:
  %ref_stmt = alloca %union.gimple_statement_d*, align 8
  %tmp_name = alloca [20 x i8], align 16
  %new_stmt_list = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !4244, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata %union.tree_node** %cond_expr, metadata !4245, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cond_expr_stmt_list, metadata !4246, metadata !DIExpression()), !dbg !4273
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !4274
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !4274
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !4247, metadata !DIExpression()), !dbg !4273
  %may_misalign_stmts2 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 13, !dbg !4275
  %1 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %may_misalign_stmts2, align 8, !dbg !4275
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %1, metadata !4248, metadata !DIExpression()), !dbg !4273
  %2 = bitcast %union.gimple_statement_d** %ref_stmt to i8*, !dbg !4276
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4276
  %ptr_mask = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 9, !dbg !4277
  %3 = load i32, i32* %ptr_mask, align 4, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %3, metadata !4250, metadata !DIExpression()), !dbg !4273
  %4 = getelementptr inbounds [20 x i8], [20 x i8]* %tmp_name, i64 0, i64 0, !dbg !4278
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #7, !dbg !4278
  call void @llvm.dbg.declare(metadata [20 x i8]* %tmp_name, metadata !4255, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4256, metadata !DIExpression()), !dbg !4273
  %cmp = icmp eq i32 %3, 0, !dbg !4280
  br i1 %cmp, label %cond.true, label %land.lhs.true, !dbg !4280

land.lhs.true:                                    ; preds = %entry
  %add = add nsw i32 %3, 1, !dbg !4280
  %and = and i32 %3, %add, !dbg !4280
  %cmp3 = icmp eq i32 %and, 0, !dbg !4280
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !4280

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 2226, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4280
  br label %cond.end, !dbg !4280

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %5 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39) to %struct.tree_type**), align 8, !dbg !4281
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 2, !dbg !4281
  %6 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4281
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4253, metadata !DIExpression()), !dbg !4273
  %7 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !4282
  %call = tail call i64 @tree_low_cst(%union.tree_node* %6, i32 1) #6, !dbg !4283
  %conv = trunc i64 %call to i32, !dbg !4283
  %call4 = tail call %union.tree_node* %7(i32 %conv, i32 0) #6, !dbg !4284
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4254, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata i32 0, metadata !4252, metadata !DIExpression()), !dbg !4273
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %1, i64 0, i32 0, !dbg !4285
  %8 = bitcast %struct.gimple_seq_d** %new_stmt_list to i8*, !dbg !4286
  br label %for.cond, !dbg !4287

for.cond:                                         ; preds = %if.end32, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %if.end32 ], !dbg !4288
  %or_tmp_name.0 = phi %union.tree_node* [ null, %cond.end ], [ %or_tmp_name.1, %if.end32 ], !dbg !4273
  call void @llvm.dbg.value(metadata %union.tree_node* %or_tmp_name.0, metadata !4256, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4252, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %ref_stmt, metadata !4249, metadata !DIExpression(DW_OP_deref)), !dbg !4273
  %call9 = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %base, i32 %i.0, %union.gimple_statement_d** nonnull %ref_stmt) #8, !dbg !4289
  %tobool10 = icmp eq i32 %call9, 0, !dbg !4290
  br i1 %tobool10, label %for.end, label %for.body, !dbg !4290

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !4291
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4262, metadata !DIExpression()), !dbg !4286
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %new_stmt_list, align 8, !dbg !4292
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_stmt, align 8, !dbg !4293
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %9, metadata !4249, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmt_list, metadata !4262, metadata !DIExpression(DW_OP_deref)), !dbg !4286
  %call11 = call %union.tree_node* @vect_create_addr_base_for_vector_ref(%union.gimple_statement_d* %9, %struct.gimple_seq_d** nonnull %new_stmt_list, %union.tree_node* null, %struct.loop* %0) #6, !dbg !4294
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !4266, metadata !DIExpression()), !dbg !4286
  %10 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_stmt_list, align 8, !dbg !4295
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %10, metadata !4262, metadata !DIExpression()), !dbg !4286
  %cmp12 = icmp eq %struct.gimple_seq_d* %10, null, !dbg !4297
  br i1 %cmp12, label %if.end, label %if.then, !dbg !4298

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %10, metadata !4262, metadata !DIExpression()), !dbg !4286
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** %cond_expr_stmt_list, %struct.gimple_seq_d* nonnull %10) #6, !dbg !4299
  br label %if.end, !dbg !4299

if.end:                                           ; preds = %for.body, %if.then
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i32 %i.0) #6, !dbg !4300
  %call16 = call %union.tree_node* @create_tmp_var(%union.tree_node* %call4, i8* nonnull %4) #6, !dbg !4301
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !4267, metadata !DIExpression()), !dbg !4286
  %call17 = call zeroext i8 @add_referenced_var(%union.tree_node* %call16) #6, !dbg !4302
  %call18 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call16, %union.gimple_statement_d* null) #8, !dbg !4303
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !4268, metadata !DIExpression()), !dbg !4286
  %call19 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 116, %union.tree_node* %call18, %union.tree_node* %call11, %union.tree_node* null) #6, !dbg !4304
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !4271, metadata !DIExpression()), !dbg !4286
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4305
  %11 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4305
  store %union.gimple_statement_d* %call19, %union.gimple_statement_d** %11, align 8, !dbg !4306
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %cond_expr_stmt_list, %union.gimple_statement_d* %call19) #6, !dbg !4307
  %cmp20 = icmp eq %union.tree_node* %or_tmp_name.0, null, !dbg !4308
  br i1 %cmp20, label %if.end32, label %if.then22, !dbg !4310

if.then22:                                        ; preds = %if.end
  %call24 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i32 %i.0) #6, !dbg !4311
  %call26 = call %union.tree_node* @create_tmp_var(%union.tree_node* %call4, i8* nonnull %4) #6, !dbg !4313
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !4269, metadata !DIExpression()), !dbg !4286
  %call27 = call zeroext i8 @add_referenced_var(%union.tree_node* %call26) #6, !dbg !4314
  %call28 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call26, %union.gimple_statement_d* null) #8, !dbg !4315
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4270, metadata !DIExpression()), !dbg !4286
  %call29 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 87, %union.tree_node* %call28, %union.tree_node* nonnull %or_tmp_name.0, %union.tree_node* %call18) #6, !dbg !4316
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call29, metadata !4272, metadata !DIExpression()), !dbg !4286
  %def_stmt31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4317
  %12 = bitcast %union.tree_node** %def_stmt31 to %union.gimple_statement_d**, !dbg !4317
  store %union.gimple_statement_d* %call29, %union.gimple_statement_d** %12, align 8, !dbg !4318
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %cond_expr_stmt_list, %union.gimple_statement_d* %call29) #6, !dbg !4319
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4256, metadata !DIExpression()), !dbg !4273
  br label %if.end32, !dbg !4320

if.end32:                                         ; preds = %if.end, %if.then22
  %or_tmp_name.1 = phi %union.tree_node* [ %call28, %if.then22 ], [ %call18, %if.end ], !dbg !4321
  call void @llvm.dbg.value(metadata %union.tree_node* %or_tmp_name.1, metadata !4256, metadata !DIExpression()), !dbg !4273
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !4322
  %inc = add i32 %i.0, 1, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4252, metadata !DIExpression()), !dbg !4273
  br label %for.cond, !dbg !4324, !llvm.loop !4325

for.end:                                          ; preds = %for.cond
  %or_tmp_name.0.lcssa = phi %union.tree_node* [ %or_tmp_name.0, %for.cond ], !dbg !4273
  call void @llvm.dbg.value(metadata %union.tree_node* %or_tmp_name.0.lcssa, metadata !4256, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata %union.tree_node* %or_tmp_name.0.lcssa, metadata !4256, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata %union.tree_node* %or_tmp_name.0.lcssa, metadata !4256, metadata !DIExpression()), !dbg !4273
  %conv33 = sext i32 %3 to i64, !dbg !4327
  %call34 = call %union.tree_node* @build_int_cst(%union.tree_node* %call4, i64 %conv33) #6, !dbg !4328
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !4251, metadata !DIExpression()), !dbg !4273
  %call35 = call %union.tree_node* @create_tmp_var(%union.tree_node* %call4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4329
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !4257, metadata !DIExpression()), !dbg !4273
  %call36 = call zeroext i8 @add_referenced_var(%union.tree_node* %call35) #6, !dbg !4330
  %call37 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call35, %union.gimple_statement_d* null) #8, !dbg !4331
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !4258, metadata !DIExpression()), !dbg !4273
  %call38 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 89, %union.tree_node* %call37, %union.tree_node* %or_tmp_name.0.lcssa, %union.tree_node* %call34) #6, !dbg !4332
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call38, metadata !4259, metadata !DIExpression()), !dbg !4273
  %def_stmt40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4333
  %13 = bitcast %union.tree_node** %def_stmt40 to %union.gimple_statement_d**, !dbg !4333
  store %union.gimple_statement_d* %call38, %union.gimple_statement_d** %13, align 8, !dbg !4334
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %cond_expr_stmt_list, %union.gimple_statement_d* %call38) #6, !dbg !4335
  %call41 = call %union.tree_node* @build_int_cst(%union.tree_node* %call4, i64 0) #6, !dbg !4336
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !4260, metadata !DIExpression()), !dbg !4273
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4337
  %call42 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 101, %union.tree_node* %14, %union.tree_node* %call37, %union.tree_node* %call41) #6, !dbg !4337
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !4261, metadata !DIExpression()), !dbg !4273
  %15 = load %union.tree_node*, %union.tree_node** %cond_expr, align 8, !dbg !4338
  %tobool43 = icmp eq %union.tree_node* %15, null, !dbg !4338
  br i1 %tobool43, label %if.else46, label %if.then44, !dbg !4340

if.then44:                                        ; preds = %for.end
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4341
  %call45 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 93, %union.tree_node* %16, %union.tree_node* nonnull %15, %union.tree_node* %call42) #6, !dbg !4341
  br label %if.end47, !dbg !4342

if.else46:                                        ; preds = %for.end
  br label %if.end47

if.end47:                                         ; preds = %if.else46, %if.then44
  %storemerge = phi %union.tree_node* [ %call42, %if.else46 ], [ %call45, %if.then44 ], !dbg !4343
  store %union.tree_node* %storemerge, %union.tree_node** %cond_expr, align 8, !dbg !4343
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #7, !dbg !4344
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4344
  ret void, !dbg !4344
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_create_cond_for_alias_checks(%struct._loop_vec_info* %loop_vinfo, %union.tree_node** %cond_expr, %struct.gimple_seq_d** %cond_expr_stmt_list) unnamed_addr #5 !dbg !4345 {
entry:
  %ddr = alloca %struct.data_dependence_relation*, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !4347, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata %union.tree_node** %cond_expr, metadata !4348, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cond_expr_stmt_list, metadata !4349, metadata !DIExpression()), !dbg !4369
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !4370
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !4370
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !4350, metadata !DIExpression()), !dbg !4369
  %may_alias_ddrs2 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 12, !dbg !4371
  %1 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %may_alias_ddrs2, align 8, !dbg !4371
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %1, metadata !4351, metadata !DIExpression()), !dbg !4369
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4372
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 6, !dbg !4373
  %3 = load i32, i32* %vectorization_factor, align 8, !dbg !4373
  %conv = sext i32 %3 to i64, !dbg !4373
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* %2, i64 %conv) #6, !dbg !4374
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4352, metadata !DIExpression()), !dbg !4369
  %4 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !4375
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4375
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %1, i64 0, i32 0, !dbg !4376
  %call3 = tail call fastcc i32 @VEC_ddr_p_base_length(%struct.VEC_ddr_p_base* %base) #8, !dbg !4376
  %cmp = icmp eq i32 %call3, 0, !dbg !4376
  br i1 %cmp, label %cleanup, label %for.cond.preheader, !dbg !4378

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !4379

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !4380
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4354, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !4353, metadata !DIExpression(DW_OP_deref)), !dbg !4369
  %call11 = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #8, !dbg !4381
  %tobool12 = icmp eq i32 %call11, 0, !dbg !4379
  br i1 %tobool12, label %for.end, label %for.body, !dbg !4379

for.body:                                         ; preds = %for.cond
  %5 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !4382
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !4353, metadata !DIExpression()), !dbg !4369
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %5, i64 0, i32 0, !dbg !4382
  %6 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !4382
  call void @llvm.dbg.value(metadata %struct.data_reference* %6, metadata !4356, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !4353, metadata !DIExpression()), !dbg !4369
  %stmt = getelementptr inbounds %struct.data_reference, %struct.data_reference* %6, i64 0, i32 0, !dbg !4384
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4384
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %7, metadata !4367, metadata !DIExpression()), !dbg !4383
  %call14 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %7) #8, !dbg !4385
  %first_dr = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call14, i64 0, i32 17, !dbg !4385
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr, align 8, !dbg !4385
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %8, metadata !4361, metadata !DIExpression()), !dbg !4383
  %tobool15 = icmp eq %union.gimple_statement_d* %8, null, !dbg !4386
  br i1 %tobool15, label %if.end18, label %if.then16, !dbg !4388

if.then16:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %8, metadata !4367, metadata !DIExpression()), !dbg !4383
  %call17 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* nonnull %8) #8, !dbg !4389
  %data_ref_info = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call17, i64 0, i32 7, !dbg !4389
  %9 = load %struct.data_reference*, %struct.data_reference** %data_ref_info, align 8, !dbg !4389
  call void @llvm.dbg.value(metadata %struct.data_reference* %9, metadata !4356, metadata !DIExpression()), !dbg !4383
  br label %if.end18, !dbg !4391

if.end18:                                         ; preds = %for.body, %if.then16
  %dr_a.0 = phi %struct.data_reference* [ %9, %if.then16 ], [ %6, %for.body ], !dbg !4383
  %stmt_a.0 = phi %union.gimple_statement_d* [ %8, %if.then16 ], [ %7, %for.body ], !dbg !4383
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt_a.0, metadata !4367, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr_a.0, metadata !4356, metadata !DIExpression()), !dbg !4383
  %10 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !4392
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %10, metadata !4353, metadata !DIExpression()), !dbg !4369
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %10, i64 0, i32 1, !dbg !4392
  %11 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !4392
  call void @llvm.dbg.value(metadata %struct.data_reference* %11, metadata !4360, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %10, metadata !4353, metadata !DIExpression()), !dbg !4369
  %stmt20 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %11, i64 0, i32 0, !dbg !4393
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt20, align 8, !dbg !4393
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %12, metadata !4368, metadata !DIExpression()), !dbg !4383
  %call21 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %12) #8, !dbg !4394
  %first_dr22 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call21, i64 0, i32 17, !dbg !4394
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr22, align 8, !dbg !4394
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %13, metadata !4362, metadata !DIExpression()), !dbg !4383
  %tobool23 = icmp eq %union.gimple_statement_d* %13, null, !dbg !4395
  br i1 %tobool23, label %if.end27, label %if.then24, !dbg !4397

if.then24:                                        ; preds = %if.end18
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %13, metadata !4368, metadata !DIExpression()), !dbg !4383
  %call25 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* nonnull %13) #8, !dbg !4398
  %data_ref_info26 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call25, i64 0, i32 7, !dbg !4398
  %14 = load %struct.data_reference*, %struct.data_reference** %data_ref_info26, align 8, !dbg !4398
  call void @llvm.dbg.value(metadata %struct.data_reference* %14, metadata !4360, metadata !DIExpression()), !dbg !4383
  br label %if.end27, !dbg !4400

if.end27:                                         ; preds = %if.end18, %if.then24
  %dr_b.0 = phi %struct.data_reference* [ %14, %if.then24 ], [ %11, %if.end18 ], !dbg !4383
  %stmt_b.0 = phi %union.gimple_statement_d* [ %13, %if.then24 ], [ %12, %if.end18 ], !dbg !4383
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt_b.0, metadata !4368, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr_b.0, metadata !4360, metadata !DIExpression()), !dbg !4383
  %call28 = call %union.tree_node* @vect_create_addr_base_for_vector_ref(%union.gimple_statement_d* %stmt_a.0, %struct.gimple_seq_d** %cond_expr_stmt_list, %union.tree_node* null, %struct.loop* %0) #6, !dbg !4401
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4363, metadata !DIExpression()), !dbg !4383
  %call29 = call %union.tree_node* @vect_create_addr_base_for_vector_ref(%union.gimple_statement_d* %stmt_b.0, %struct.gimple_seq_d** %cond_expr_stmt_list, %union.tree_node* null, %struct.loop* %0) #6, !dbg !4402
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4364, metadata !DIExpression()), !dbg !4383
  %call30 = call fastcc %union.tree_node* @vect_vfa_segment_size(%struct.data_reference* %dr_a.0, %union.tree_node* %call) #8, !dbg !4403
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !4365, metadata !DIExpression()), !dbg !4383
  %call31 = call fastcc %union.tree_node* @vect_vfa_segment_size(%struct.data_reference* %dr_b.0, %union.tree_node* %call) #8, !dbg !4404
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !4366, metadata !DIExpression()), !dbg !4383
  %call32 = call zeroext i8 @vect_print_dump_info(i32 5) #6, !dbg !4405
  %tobool33 = icmp eq i8 %call32, 0, !dbg !4405
  br i1 %tobool33, label %if.end38, label %if.then34, !dbg !4407

if.then34:                                        ; preds = %if.end27
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4408
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !4410
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4411
  %ref = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr_a.0, i64 0, i32 1, !dbg !4412
  %17 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !4412
  call void @print_generic_expr(%struct._IO_FILE* %16, %union.tree_node* %17, i32 2) #6, !dbg !4413
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4414
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !4415
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4416
  %ref37 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr_b.0, i64 0, i32 1, !dbg !4417
  %20 = load %union.tree_node*, %union.tree_node** %ref37, align 8, !dbg !4417
  call void @print_generic_expr(%struct._IO_FILE* %19, %union.tree_node* %20, i32 2) #6, !dbg !4418
  br label %if.end38, !dbg !4419

if.end38:                                         ; preds = %if.end27, %if.then34
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4420
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4420
  %22 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4420
  %call39 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 66, %union.tree_node* %22, %union.tree_node* %call28, %union.tree_node* %call30) #6, !dbg !4420
  %call40 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 97, %union.tree_node* %21, %union.tree_node* %call39, %union.tree_node* %call29) #6, !dbg !4420
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4420
  %type42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4420
  %24 = load %union.tree_node*, %union.tree_node** %type42, align 8, !dbg !4420
  %call43 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 66, %union.tree_node* %24, %union.tree_node* %call29, %union.tree_node* %call31) #6, !dbg !4420
  %call44 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 97, %union.tree_node* %23, %union.tree_node* %call43, %union.tree_node* %call28) #6, !dbg !4420
  %call45 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 94, %union.tree_node* %21, %union.tree_node* %call40, %union.tree_node* %call44) #6, !dbg !4420
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !4355, metadata !DIExpression()), !dbg !4369
  %25 = load %union.tree_node*, %union.tree_node** %cond_expr, align 8, !dbg !4421
  %tobool46 = icmp eq %union.tree_node* %25, null, !dbg !4421
  br i1 %tobool46, label %if.else, label %if.then47, !dbg !4423

if.then47:                                        ; preds = %if.end38
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4424
  %call48 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 93, %union.tree_node* %26, %union.tree_node* nonnull %25, %union.tree_node* %call45) #6, !dbg !4424
  br label %for.inc, !dbg !4425

if.else:                                          ; preds = %if.end38
  br label %for.inc

for.inc:                                          ; preds = %if.then47, %if.else
  %storemerge = phi %union.tree_node* [ %call45, %if.else ], [ %call48, %if.then47 ], !dbg !4426
  store %union.tree_node* %storemerge, %union.tree_node** %cond_expr, align 8, !dbg !4426
  %inc = add i32 %i.0, 1, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4354, metadata !DIExpression()), !dbg !4369
  br label %for.cond, !dbg !4428, !llvm.loop !4429

for.end:                                          ; preds = %for.cond
  %call50 = call zeroext i8 @vect_print_dump_info(i32 1) #6, !dbg !4431
  %tobool51 = icmp eq i8 %call50, 0, !dbg !4431
  br i1 %tobool51, label %cleanup, label %if.then52, !dbg !4433

if.then52:                                        ; preds = %for.end
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4434
  %call59 = call fastcc i32 @VEC_ddr_p_base_length(%struct.VEC_ddr_p_base* %base) #8, !dbg !4435
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i64 0, i64 0), i32 %call59) #6, !dbg !4436
  br label %cleanup, !dbg !4436

cleanup:                                          ; preds = %for.end, %if.then52, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4437
  ret void, !dbg !4437
}

declare dso_local void @gimple_seq_add_seq(%struct.gimple_seq_d**, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %struct.loop* @loop_version(%struct.loop*, i8*, %struct.basic_block_def**, i32, i32, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4438 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4442, metadata !DIExpression()), !dbg !4443
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4444
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4444

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4444
  %0 = load i32, i32* %num, align 8, !dbg !4444
  br label %cond.end, !dbg !4444

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4444
  ret i32 %cond, !dbg !4444
}

declare dso_local %struct.basic_block_def* @split_edge(%struct.edge_def*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %update_phi, %struct.edge_def* %e, %union.tree_node* %new_def) unnamed_addr #5 !dbg !4445 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %update_phi, metadata !4449, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !4450, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata %union.tree_node* %new_def, metadata !4451, metadata !DIExpression()), !dbg !4453
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 6, !dbg !4454
  %0 = load i32, i32* %dest_idx, align 4, !dbg !4454
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %update_phi, i32 %0) #8, !dbg !4454
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call) #8, !dbg !4454
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4452, metadata !DIExpression()), !dbg !4453
  %1 = load i32, i32* %dest_idx, align 4, !dbg !4455
  %call3 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %update_phi, i32 %1) #8, !dbg !4455
  tail call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %call3, %union.tree_node* %new_def) #8, !dbg !4455
  %2 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !4456
  %tobool = icmp eq i32 %2, 0, !dbg !4456
  br i1 %tobool, label %if.end, label %if.then, !dbg !4458

if.then:                                          ; preds = %entry
  %call4 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %update_phi) #8, !dbg !4459
  %call5 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call4) #8, !dbg !4459
  %call6 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %update_phi) #8, !dbg !4460
  tail call fastcc void @adjust_debug_stmts(%union.tree_node* %call1, %union.tree_node* %call5, %struct.basic_block_def* %call6) #8, !dbg !4461
  br label %if.end, !dbg !4461

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4462
}

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

declare dso_local void @gsi_insert_seq_before(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4463 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4470, metadata !DIExpression()), !dbg !4471
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4472
  %0 = load i32, i32* %flags, align 8, !dbg !4472
  %and = and i32 %0, 512, !dbg !4473
  %tobool = icmp eq i32 %and, 0, !dbg !4473
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !4474

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !4475
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !4475
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !4476
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !4477

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !4478
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !4478
  br label %cond.end, !dbg !4477

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4477
  ret %struct.gimple_seq_d* %cond, !dbg !4479
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4480 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4487, metadata !DIExpression()), !dbg !4488
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4489
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4489

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !4490
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !4490
  br label %cond.end, !dbg !4489

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4489
  ret %struct.gimple_seq_node_d* %cond, !dbg !4491
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !4492 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4496, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4497, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4498, metadata !DIExpression()), !dbg !4499
  %0 = and i32 %flags, 10, !dbg !4500
  %1 = icmp eq i32 %0, 8, !dbg !4500
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !4500

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !4500
  %3 = icmp eq i32 %2, 4, !dbg !4500
  br i1 %3, label %cond.true, label %cond.end, !dbg !4500

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4500
  br label %cond.end, !dbg !4500

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !4501
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !4502

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #8, !dbg !4503
  br label %cond.end12, !dbg !4502

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !4502
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !4504
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !4505
  %and14 = and i32 %flags, 8, !dbg !4506
  %tobool15 = icmp eq i32 %and14, 0, !dbg !4506
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !4508

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !4509
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !4510

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !4511
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !4512
  br i1 %cmp, label %if.end, label %if.then, !dbg !4513

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !4514
  %6 = load i64*, i64** %5, align 8, !dbg !4514
  %7 = load i64, i64* %6, align 8, !dbg !4515
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !4516
  store i64 %7, i64* %8, align 8, !dbg !4516
  br label %if.end, !dbg !4517

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !4518
  %tobool24 = icmp eq i32 %and23, 0, !dbg !4518
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !4519

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #8, !dbg !4520
  br label %cond.end28, !dbg !4519

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !4519
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !4521
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !4522
  %and30 = and i32 %flags, 4, !dbg !4523
  %tobool31 = icmp eq i32 %and30, 0, !dbg !4523
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !4525

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !4526
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !4527

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !4528
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !4529
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !4530

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !4531
  %11 = load i64*, i64** %10, align 8, !dbg !4531
  %12 = load i64, i64* %11, align 8, !dbg !4532
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !4533
  store i64 %12, i64* %13, align 8, !dbg !4533
  br label %if.end42, !dbg !4534

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !4535
  store i8 0, i8* %done, align 8, !dbg !4536
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !4537
  store i32 0, i32* %phi_i, align 8, !dbg !4538
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !4539
  store i32 0, i32* %num_phi, align 4, !dbg !4540
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !4541
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !4542
  ret void, !dbg !4543
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4544 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4548, metadata !DIExpression()), !dbg !4549
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !4550
  %tobool = icmp eq i8 %call, 0, !dbg !4550
  br i1 %tobool, label %return, label %if.end, !dbg !4552

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !4553
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !4553
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !4553
  br label %return, !dbg !4554

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !4549
  ret %struct.def_optype_d* %retval.0, !dbg !4555
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4556 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4560, metadata !DIExpression()), !dbg !4561
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !4562
  %tobool = icmp eq i8 %call, 0, !dbg !4562
  br i1 %tobool, label %return, label %if.end, !dbg !4564

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !4565
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !4565
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4565
  br label %return, !dbg !4566

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !4561
  ret %union.tree_node* %retval.0, !dbg !4567
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4568 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4572, metadata !DIExpression()), !dbg !4573
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !4574
  %tobool = icmp eq i8 %call, 0, !dbg !4574
  br i1 %tobool, label %return, label %if.end, !dbg !4576

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !4577
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !4577
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !4577
  br label %return, !dbg !4578

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !4573
  ret %struct.use_optype_d* %retval.0, !dbg !4579
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4580 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4582, metadata !DIExpression()), !dbg !4583
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !4584
  %tobool = icmp eq i8 %call, 0, !dbg !4584
  br i1 %tobool, label %return, label %if.end, !dbg !4586

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4587
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !4587
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4587
  br label %return, !dbg !4588

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !4583
  ret %union.tree_node* %retval.0, !dbg !4589
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4590 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4594, metadata !DIExpression()), !dbg !4595
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !4596
  %cmp = icmp eq i32 %call, 0, !dbg !4597
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4598

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !4599
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4600
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4601
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4602 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4606, metadata !DIExpression()), !dbg !4607
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4608
  %bf.load = load i32, i32* %0, align 8, !dbg !4608
  %bf.clear = and i32 %bf.load, 255, !dbg !4608
  ret i32 %bf.clear, !dbg !4609
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4610 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4612, metadata !DIExpression()), !dbg !4613
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !4614
  %cmp = icmp ugt i32 %call, 5, !dbg !4615
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4616

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !4617
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4618
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4619
}

declare dso_local %union.tree_node* @get_current_def(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !4620 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4624, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !4625, metadata !DIExpression()), !dbg !4626
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #8, !dbg !4627
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !4628
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !4628
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !4629
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #8, !dbg !4630
  ret void, !dbg !4631
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !4632 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !4636, metadata !DIExpression()), !dbg !4637
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !4638
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4638
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !4640
  br i1 %cmp, label %return, label %if.end, !dbg !4641

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !4642
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !4642
  %2 = load i64, i64* %1, align 8, !dbg !4642
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !4643
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !4644
  store i64 %2, i64* %3, align 8, !dbg !4644
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !4645
  %5 = load i64, i64* %4, align 8, !dbg !4645
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !4646
  %7 = load i64*, i64** %6, align 8, !dbg !4646
  store i64 %5, i64* %7, align 8, !dbg !4647
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4648
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !4649
  br label %return, !dbg !4650

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !4650
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !4651 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !4655, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !4656, metadata !DIExpression()), !dbg !4658
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !4659
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4661

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4662
  %bf.load = load i64, i64* %0, align 8, !dbg !4662
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4663
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4663
  br i1 %cmp, label %if.else, label %if.then, !dbg !4664

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !4665
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4666
  br label %if.end, !dbg !4667

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4668
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !4668
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !4657, metadata !DIExpression()), !dbg !4658
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #8, !dbg !4670
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4671
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !4672 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !4676, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !4677, metadata !DIExpression()), !dbg !4678
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !4679
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4680
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !4681
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !4681
  %1 = load i64, i64* %0, align 8, !dbg !4681
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !4682
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !4683
  store i64 %1, i64* %2, align 8, !dbg !4683
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !4684
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !4685
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !4686
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !4687
  ret void, !dbg !4688
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4689 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4694
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4694
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4694

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4694
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4694
  br label %cond.end, !dbg !4694

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4694
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4694
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !4695
  %conv3 = zext i1 %cmp to i8, !dbg !4696
  ret i8 %conv3, !dbg !4697
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4698 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4703
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4703
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4703

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4703
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4703
  br label %cond.end, !dbg !4703

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4703
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !4703
  ret %struct.edge_def* %call2, !dbg !4704
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4705 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !4710
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4710

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4710
  br label %cond.end, !dbg !4710

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !4711
  ret %struct.VEC_edge_gc* %0, !dbg !4712
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4713 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4718, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.value(metadata i32 %index, metadata !4719, metadata !DIExpression()), !dbg !4720
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !4721
  %0 = load i32, i32* %capacity, align 8, !dbg !4721
  %cmp = icmp ult i32 %0, %index, !dbg !4721
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4721

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4721
  br label %cond.end, !dbg !4721

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !4722
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !4722
  ret %struct.phi_arg_d* %arrayidx, !dbg !4723
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !4724 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4730, metadata !DIExpression()), !dbg !4731
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !4732
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4732

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !4732
  %0 = load i32, i32* %num, align 8, !dbg !4732
  br label %cond.end, !dbg !4732

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4732
  ret i32 %cond, !dbg !4732
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4733 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4737, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4738, metadata !DIExpression()), !dbg !4739
  br label %land.end, !dbg !4740

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4740
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4740
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !4740
  ret %struct.loop* %0, !dbg !4740
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4741 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4743, metadata !DIExpression()), !dbg !4744
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4745
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4745

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !4746
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !4746
  br label %cond.end, !dbg !4745

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4745
  ret %struct.gimple_seq_node_d* %cond, !dbg !4747
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_uid(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4748 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4752, metadata !DIExpression()), !dbg !4753
  %uid = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !4754
  %0 = load i32, i32* %uid, align 4, !dbg !4754
  ret i32 %0, !dbg !4755
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vec_void_p_base_length(%struct.VEC_vec_void_p_base* %vec_) unnamed_addr #0 !dbg !4756 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_base* %vec_, metadata !4770, metadata !DIExpression()), !dbg !4771
  %tobool = icmp eq %struct.VEC_vec_void_p_base* %vec_, null, !dbg !4772
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4772

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 0, !dbg !4772
  %0 = load i32, i32* %num, align 8, !dbg !4772
  br label %cond.end, !dbg !4772

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4772
  ret i32 %cond, !dbg !4772
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @VEC_vec_void_p_base_index(%struct.VEC_vec_void_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4773 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_base* %vec_, metadata !4777, metadata !DIExpression()), !dbg !4779
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4778, metadata !DIExpression()), !dbg !4779
  br label %land.end, !dbg !4780

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4780
  %arrayidx = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4780
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !4780
  ret i8* %0, !dbg !4780
}

declare dso_local %union.tree_node* @instantiate_scev(%struct.basic_block_def*, %struct.loop*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) unnamed_addr #0 !dbg !4781 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4785, metadata !DIExpression()), !dbg !4787
  %call = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4788
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !4786, metadata !DIExpression()), !dbg !4787
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !4789
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4789

cond.true:                                        ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !4790
  br label %cond.end, !dbg !4789

cond.false:                                       ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4791
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4791
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4791
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !4791
  br label %cond.end, !dbg !4789

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.basic_block_def** [ %src, %cond.true ], [ %x_entry_block_ptr, %cond.false ]
  %cond = load %struct.basic_block_def*, %struct.basic_block_def** %cond.in, align 8, !dbg !4789
  ret %struct.basic_block_def* %cond, !dbg !4792
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %chrec) unnamed_addr #0 !dbg !4793 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !4795, metadata !DIExpression()), !dbg !4796
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4797
  %cmp = icmp eq %union.tree_node* %0, %chrec, !dbg !4798
  %1 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !4799
  %cmp1 = icmp eq %union.tree_node* %1, %chrec, !dbg !4799
  %2 = or i1 %cmp, %cmp1, !dbg !4799
  %conv = zext i1 %2 to i8, !dbg !4800
  ret i8 %conv, !dbg !4801
}

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def*, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local void @gimple_register_cfg_hooks() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_adjust_info_stack* @VEC_adjust_info_stack_alloc1(i32 %alloc_, %struct.VEC_adjust_info_stack* %space) unnamed_addr #0 !dbg !4802 {
entry:
  call void @llvm.dbg.value(metadata i32 32, metadata !4806, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_stack* %space, metadata !4807, metadata !DIExpression()), !dbg !4808
  %0 = bitcast %struct.VEC_adjust_info_stack* %space to i8*, !dbg !4809
  %call = tail call i8* @vec_stack_p_reserve_exact_1(i32 32, i8* %0) #6, !dbg !4809
  %1 = bitcast i8* %call to %struct.VEC_adjust_info_stack*, !dbg !4809
  ret %struct.VEC_adjust_info_stack* %1, !dbg !4809
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i64 @VEC_adjust_info_base_embedded_size(i32 %alloc_) unnamed_addr #0 !dbg !4810 {
entry:
  call void @llvm.dbg.value(metadata i32 32, metadata !4814, metadata !DIExpression()), !dbg !4815
  ret i64 undef, !dbg !4816
}

declare dso_local %struct.bitmap_head_def* @ssa_names_to_replace() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @slpeel_update_phis_for_duplicate_loop(%struct.loop* %orig_loop, %struct.loop* %new_loop, i8 zeroext %after) unnamed_addr #5 !dbg !4817 {
entry:
  %gsi_new = alloca %struct.gimple_stmt_iterator, align 8
  %gsi_orig = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp4 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %orig_loop, metadata !4821, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata %struct.loop* %new_loop, metadata !4822, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i8 %after, metadata !4823, metadata !DIExpression()), !dbg !4839
  %call = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* %orig_loop) #6, !dbg !4840
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !4828, metadata !DIExpression()), !dbg !4839
  %call1 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %orig_loop) #6, !dbg !4841
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !4829, metadata !DIExpression()), !dbg !4839
  %call2 = tail call %struct.edge_def* @single_exit(%struct.loop* %new_loop) #6, !dbg !4842
  call void @llvm.dbg.value(metadata %struct.edge_def* %call2, metadata !4830, metadata !DIExpression()), !dbg !4839
  %call3 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %new_loop) #6, !dbg !4843
  call void @llvm.dbg.value(metadata %struct.edge_def* %call3, metadata !4831, metadata !DIExpression()), !dbg !4839
  %tobool = icmp eq i8 %after, 0, !dbg !4844
  %call.call1 = select i1 %tobool, %struct.edge_def* %call1, %struct.edge_def* %call, !dbg !4844
  call void @llvm.dbg.value(metadata %struct.edge_def* %call.call1, metadata !4832, metadata !DIExpression()), !dbg !4839
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi_new to i8*, !dbg !4845
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4845
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi_orig to i8*, !dbg !4845
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !4845
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4846
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !4846
  %header = getelementptr inbounds %struct.loop, %struct.loop* %new_loop, i64 0, i32 2, !dbg !4847
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4847
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %3) #6, !dbg !4846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4846
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !4846
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp4 to i8*, !dbg !4848
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !4848
  %header5 = getelementptr inbounds %struct.loop, %struct.loop* %orig_loop, i64 0, i32 2, !dbg !4849
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %header5, align 8, !dbg !4849
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp4, %struct.basic_block_def* %5) #6, !dbg !4848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !4848
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !4848
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call.call1, i64 0, i32 6, !dbg !4850
  %dest_idx15 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 6, !dbg !4850
  %cmp30 = icmp eq %struct.edge_def* %call2, %call1, !dbg !4851
  br i1 %tobool, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !4854

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !4854

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !4854

for.cond.us:                                      ; preds = %cleanup.us, %entry.split.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_new, metadata !4833, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  %call6.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_new) #8, !dbg !4855
  %tobool7.us = icmp eq i8 %call6.us, 0, !dbg !4855
  br i1 %tobool7.us, label %land.rhs.us, label %for.end.us-lcssa.us, !dbg !4856

land.rhs.us:                                      ; preds = %for.cond.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !4834, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  %call8.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_orig) #8, !dbg !4857
  %tobool9.us = icmp eq i8 %call8.us, 0, !dbg !4858
  br i1 %tobool9.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !4859

for.body.us:                                      ; preds = %land.rhs.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_new, metadata !4833, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  %call10.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_new) #8, !dbg !4860
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10.us, metadata !4825, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !4834, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  %call11.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_orig) #8, !dbg !4861
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11.us, metadata !4826, metadata !DIExpression()), !dbg !4839
  %6 = load i32, i32* %dest_idx, align 4, !dbg !4862
  %call12.us = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call11.us, i32 %6) #8, !dbg !4862
  %call13.us = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call12.us) #8, !dbg !4862
  call void @llvm.dbg.value(metadata %union.tree_node* %call13.us, metadata !4827, metadata !DIExpression()), !dbg !4839
  %call14.us = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call11.us, %struct.edge_def* %call.call1) #8, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %call14.us, metadata !4835, metadata !DIExpression()), !dbg !4850
  call void @add_phi_arg(%union.gimple_statement_d* %call10.us, %union.tree_node* %call13.us, %struct.edge_def* %call3, i32 %call14.us) #6, !dbg !4864
  %7 = load i32, i32* %dest_idx15, align 4, !dbg !4865
  %call16.us = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call11.us, i32 %7) #8, !dbg !4865
  %call17.us = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call16.us) #8, !dbg !4865
  call void @llvm.dbg.value(metadata %union.tree_node* %call17.us, metadata !4827, metadata !DIExpression()), !dbg !4839
  %call18.us = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call11.us, %struct.edge_def* %call) #8, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %call18.us, metadata !4835, metadata !DIExpression()), !dbg !4850
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4867
  %bf.load.us = load i64, i64* %8, align 8, !dbg !4867
  %bf.cast1.us = and i64 %bf.load.us, 65535, !dbg !4869
  %cmp.us = icmp eq i64 %bf.cast1.us, 141, !dbg !4869
  br i1 %cmp.us, label %if.end.us, label %cleanup.us, !dbg !4870

if.end.us:                                        ; preds = %for.body.us
  %call20.us = call %union.tree_node* @get_current_def(%union.tree_node* %call17.us) #6, !dbg !4871
  call void @llvm.dbg.value(metadata %union.tree_node* %call20.us, metadata !4824, metadata !DIExpression()), !dbg !4839
  %tobool21.us = icmp eq %union.tree_node* %call20.us, null, !dbg !4872
  br i1 %tobool21.us, label %if.then22.us, label %if.end25.us, !dbg !4874

if.then22.us:                                     ; preds = %if.end.us
  %call23.us = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call10.us) #8, !dbg !4875
  %call24.us = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call23.us) #8, !dbg !4875
  call void @llvm.dbg.value(metadata %union.tree_node* %call24.us, metadata !4824, metadata !DIExpression()), !dbg !4839
  br label %if.end25.us, !dbg !4877

if.end25.us:                                      ; preds = %if.then22.us, %if.end.us
  %new_ssa_name.0.us = phi %union.tree_node* [ %call20.us, %if.end.us ], [ %call24.us, %if.then22.us ], !dbg !4850
  call void @llvm.dbg.value(metadata %union.tree_node* %new_ssa_name.0.us, metadata !4824, metadata !DIExpression()), !dbg !4839
  %call26.us = call %struct.edge_def* @loop_latch_edge(%struct.loop* %new_loop) #6, !dbg !4878
  call void @add_phi_arg(%union.gimple_statement_d* %call10.us, %union.tree_node* %new_ssa_name.0.us, %struct.edge_def* %call26.us, i32 %call18.us) #6, !dbg !4879
  %call27.us = call %struct.edge_def* @single_exit(%struct.loop* %orig_loop) #6, !dbg !4880
  %dest.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27.us, i64 0, i32 1, !dbg !4881
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest.us, align 8, !dbg !4881
  call fastcc void @adjust_debug_stmts(%union.tree_node* %call17.us, %union.tree_node* null, %struct.basic_block_def* %9) #8, !dbg !4882
  br i1 %cmp30, label %cond.end34.us, label %cond.true32.us, !dbg !4883

cond.true32.us:                                   ; preds = %if.end25.us
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 330, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4883
  br label %cond.end34.us, !dbg !4883

cond.end34.us:                                    ; preds = %cond.true32.us, %if.end25.us
  call fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %call11.us, %struct.edge_def* %call2, %union.tree_node* %new_ssa_name.0.us) #8, !dbg !4884
  br label %cleanup.us, !dbg !4885

cleanup.us:                                       ; preds = %cond.end34.us, %for.body.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_new, metadata !4833, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi_new) #8, !dbg !4886
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !4834, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi_orig) #8, !dbg !4887
  br label %for.cond.us, !dbg !4888, !llvm.loop !4889

for.end.us-lcssa.us:                              ; preds = %land.rhs.us, %for.cond.us
  br label %for.end, !dbg !4891

for.cond:                                         ; preds = %cleanup, %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_new, metadata !4833, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  %call6 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_new) #8, !dbg !4855
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4855
  br i1 %tobool7, label %land.rhs, label %for.end.us-lcssa, !dbg !4856

land.rhs:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !4834, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  %call8 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_orig) #8, !dbg !4857
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4858
  br i1 %tobool9, label %for.body, label %for.end.us-lcssa, !dbg !4859

for.body:                                         ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_new, metadata !4833, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  %call10 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_new) #8, !dbg !4860
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !4825, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !4834, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  %call11 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_orig) #8, !dbg !4861
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !4826, metadata !DIExpression()), !dbg !4839
  %10 = load i32, i32* %dest_idx, align 4, !dbg !4862
  %call12 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call11, i32 %10) #8, !dbg !4862
  %call13 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call12) #8, !dbg !4862
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !4827, metadata !DIExpression()), !dbg !4839
  %call14 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call11, %struct.edge_def* %call.call1) #8, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %call14, metadata !4835, metadata !DIExpression()), !dbg !4850
  call void @add_phi_arg(%union.gimple_statement_d* %call10, %union.tree_node* %call13, %struct.edge_def* %call3, i32 %call14) #6, !dbg !4864
  %11 = load i32, i32* %dest_idx15, align 4, !dbg !4865
  %call16 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call11, i32 %11) #8, !dbg !4865
  %call17 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call16) #8, !dbg !4865
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !4827, metadata !DIExpression()), !dbg !4839
  %call18 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call11, %struct.edge_def* %call) #8, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %call18, metadata !4835, metadata !DIExpression()), !dbg !4850
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4867
  %bf.load = load i64, i64* %12, align 8, !dbg !4867
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4869
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4869
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4870

if.end:                                           ; preds = %for.body
  %call20 = call %union.tree_node* @get_current_def(%union.tree_node* %call17) #6, !dbg !4871
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !4824, metadata !DIExpression()), !dbg !4839
  %tobool21 = icmp eq %union.tree_node* %call20, null, !dbg !4872
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !4874

if.then22:                                        ; preds = %if.end
  %call23 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call10) #8, !dbg !4875
  %call24 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call23) #8, !dbg !4875
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4824, metadata !DIExpression()), !dbg !4839
  br label %if.end25, !dbg !4877

if.end25:                                         ; preds = %if.end, %if.then22
  %new_ssa_name.0 = phi %union.tree_node* [ %call20, %if.end ], [ %call24, %if.then22 ], !dbg !4850
  call void @llvm.dbg.value(metadata %union.tree_node* %new_ssa_name.0, metadata !4824, metadata !DIExpression()), !dbg !4839
  %call26 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %new_loop) #6, !dbg !4878
  call void @add_phi_arg(%union.gimple_statement_d* %call10, %union.tree_node* %new_ssa_name.0, %struct.edge_def* %call26, i32 %call18) #6, !dbg !4879
  %call27 = call %struct.edge_def* @single_exit(%struct.loop* %orig_loop) #6, !dbg !4880
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27, i64 0, i32 1, !dbg !4881
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4881
  call fastcc void @adjust_debug_stmts(%union.tree_node* %call17, %union.tree_node* null, %struct.basic_block_def* %13) #8, !dbg !4882
  br label %cleanup, !dbg !4892

cleanup:                                          ; preds = %if.end25, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_new, metadata !4833, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi_new) #8, !dbg !4886
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !4834, metadata !DIExpression(DW_OP_deref)), !dbg !4839
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi_orig) #8, !dbg !4887
  br label %for.cond, !dbg !4888, !llvm.loop !4889

for.end.us-lcssa:                                 ; preds = %land.rhs, %for.cond
  br label %for.end, !dbg !4891

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !4891
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4891
  ret void, !dbg !4891
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._loop_vec_info* @loop_vec_info_for_loop(%struct.loop* %loop) unnamed_addr #0 !dbg !4893 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4897, metadata !DIExpression()), !dbg !4898
  %aux = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 10, !dbg !4899
  %0 = bitcast i8** %aux to %struct._loop_vec_info**, !dbg !4899
  %1 = load %struct._loop_vec_info*, %struct._loop_vec_info** %0, align 8, !dbg !4899
  ret %struct._loop_vec_info* %1, !dbg !4900
}

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @set_prologue_iterations(%struct.basic_block_def* %bb_before_first_loop, %union.tree_node* %first_niters, %struct.loop* %loop, i32 %th) unnamed_addr #5 !dbg !4901 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gimplify_stmt_list = alloca %struct.gimple_seq_d*, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp26 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp32 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb_before_first_loop, metadata !4905, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata %union.tree_node* %first_niters, metadata !4906, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4907, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata i32 %th, metadata !4908, metadata !DIExpression()), !dbg !4924
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4925
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4925
  %1 = bitcast %struct.gimple_seq_d** %gimplify_stmt_list to i8*, !dbg !4926
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4926
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4920, metadata !DIExpression()), !dbg !4924
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %gimplify_stmt_list, align 8, !dbg !4927
  %2 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !4926
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4926
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4921, metadata !DIExpression()), !dbg !4924
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %stmts, align 8, !dbg !4928
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4922, metadata !DIExpression()), !dbg !4924
  %call = tail call fastcc %struct._loop_vec_info* @loop_vec_info_for_loop(%struct.loop* %loop) #8, !dbg !4929
  %num_iters_unchanged = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %call, i64 0, i32 3, !dbg !4929
  %3 = load %union.tree_node*, %union.tree_node** %num_iters_unchanged, align 8, !dbg !4929
  %call1 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %3) #6, !dbg !4930
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4923, metadata !DIExpression()), !dbg !4924
  %call2 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb_before_first_loop) #8, !dbg !4931
  call void @llvm.dbg.value(metadata %struct.edge_def* %call2, metadata !4909, metadata !DIExpression()), !dbg !4924
  %call3 = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %call2) #6, !dbg !4932
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !4910, metadata !DIExpression()), !dbg !4924
  %call4 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb_before_first_loop) #8, !dbg !4933
  call void @llvm.dbg.value(metadata %struct.edge_def* %call4, metadata !4909, metadata !DIExpression()), !dbg !4924
  %call5 = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %call4) #6, !dbg !4934
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call5, metadata !4911, metadata !DIExpression()), !dbg !4924
  tail call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %call5, %struct.basic_block_def* %call3) #6, !dbg !4935
  %call6 = tail call %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def* %call3, %struct.basic_block_def* %bb_before_first_loop, i32 2048) #6, !dbg !4936
  call void @llvm.dbg.value(metadata %struct.edge_def* %call6, metadata !4917, metadata !DIExpression()), !dbg !4924
  tail call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %bb_before_first_loop, %struct.basic_block_def* %call3) #6, !dbg !4937
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call5, i64 0, i32 0, !dbg !4938
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4938
  %tobool = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !4938
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4938

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !4938
  br label %cond.end, !dbg !4938

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4938
  %call8 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #8, !dbg !4938
  call void @llvm.dbg.value(metadata %struct.edge_def* %call8, metadata !4916, metadata !DIExpression()), !dbg !4924
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call8, i64 0, i32 7, !dbg !4939
  %5 = load i32, i32* %flags, align 8, !dbg !4940
  %and = and i32 %5, -1026, !dbg !4940
  %or = or i32 %and, 1024, !dbg !4941
  store i32 %or, i32* %flags, align 8, !dbg !4941
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call5, i64 0, i32 1, !dbg !4942
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4942
  %tobool10 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !4942
  br i1 %tobool10, label %cond.end15, label %cond.true11, !dbg !4942

cond.true11:                                      ; preds = %cond.end
  %base13 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !4942
  br label %cond.end15, !dbg !4942

cond.end15:                                       ; preds = %cond.end, %cond.true11
  %cond16 = phi %struct.VEC_edge_base* [ %base13, %cond.true11 ], [ null, %cond.end ], !dbg !4942
  %call17 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond16, i32 0) #8, !dbg !4942
  call void @llvm.dbg.value(metadata %struct.edge_def* %call17, metadata !4918, metadata !DIExpression()), !dbg !4924
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !4943
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4943
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4943
  %conv = zext i32 %th to i64, !dbg !4943
  %call18 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %8, i64 %conv) #6, !dbg !4943
  %call19 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 98, %union.tree_node* %7, %union.tree_node* %call1, %union.tree_node* %call18) #6, !dbg !4943
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !4922, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %gimplify_stmt_list, metadata !4920, metadata !DIExpression(DW_OP_deref)), !dbg !4924
  %call20 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call19, %struct.gimple_seq_d** nonnull %gimplify_stmt_list, i8 zeroext 1, %union.tree_node* null) #6, !dbg !4944
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !4922, metadata !DIExpression()), !dbg !4924
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4945
  %9 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !4945
  %call23 = call %union.tree_node* @build_int_cst(%union.tree_node* %9, i64 0) #6, !dbg !4946
  %call24 = call %union.gimple_statement_d* @gimple_build_cond(i32 102, %union.tree_node* %call20, %union.tree_node* %call23, %union.tree_node* null, %union.tree_node* null) #6, !dbg !4947
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call24, metadata !4919, metadata !DIExpression()), !dbg !4924
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4948
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7, !dbg !4948
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call3) #8, !dbg !4948
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !4948
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7, !dbg !4948
  %11 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %gimplify_stmt_list, align 8, !dbg !4949
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %11, metadata !4920, metadata !DIExpression()), !dbg !4924
  %tobool25 = icmp eq %struct.gimple_seq_d* %11, null, !dbg !4949
  br i1 %tobool25, label %if.end, label %if.then, !dbg !4951

if.then:                                          ; preds = %cond.end15
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %11, metadata !4920, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4914, metadata !DIExpression(DW_OP_deref)), !dbg !4924
  call void @gsi_insert_seq_after(%struct.gimple_stmt_iterator* nonnull %gsi, %struct.gimple_seq_d* nonnull %11, i32 0) #6, !dbg !4952
  br label %if.end, !dbg !4952

if.end:                                           ; preds = %cond.end15, %if.then
  %12 = bitcast %struct.gimple_stmt_iterator* %tmp26 to i8*, !dbg !4953
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #7, !dbg !4953
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp26, %struct.basic_block_def* %call3) #8, !dbg !4953
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !4953
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #7, !dbg !4953
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4914, metadata !DIExpression(DW_OP_deref)), !dbg !4924
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call24, i32 0) #6, !dbg !4954
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4955
  %call29 = call %union.tree_node* @create_tmp_var(%union.tree_node* %13, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4956
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4912, metadata !DIExpression()), !dbg !4924
  %call30 = call zeroext i8 @add_referenced_var(%union.tree_node* %call29) #6, !dbg !4957
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4921, metadata !DIExpression(DW_OP_deref)), !dbg !4924
  %call31 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call1, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 0, %union.tree_node* %call29) #6, !dbg !4958
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !4913, metadata !DIExpression()), !dbg !4924
  %14 = bitcast %struct.gimple_stmt_iterator* %tmp32 to i8*, !dbg !4959
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7, !dbg !4959
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp32, %struct.basic_block_def* %call5) #8, !dbg !4959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !4959
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7, !dbg !4959
  %15 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4960
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %15, metadata !4921, metadata !DIExpression()), !dbg !4924
  %tobool33 = icmp eq %struct.gimple_seq_d* %15, null, !dbg !4960
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !4962

if.then34:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %15, metadata !4921, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4914, metadata !DIExpression(DW_OP_deref)), !dbg !4924
  call void @gsi_insert_seq_after(%struct.gimple_stmt_iterator* nonnull %gsi, %struct.gimple_seq_d* nonnull %15, i32 0) #6, !dbg !4963
  br label %if.end35, !dbg !4963

if.end35:                                         ; preds = %if.end, %if.then34
  %call36 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %call29, %struct.basic_block_def* %bb_before_first_loop) #6, !dbg !4964
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call36, metadata !4915, metadata !DIExpression()), !dbg !4924
  call void @add_phi_arg(%union.gimple_statement_d* %call36, %union.tree_node* %call31, %struct.edge_def* %call17, i32 0) #6, !dbg !4965
  call void @add_phi_arg(%union.gimple_statement_d* %call36, %union.tree_node* %first_niters, %struct.edge_def* %call6, i32 0) #6, !dbg !4966
  %call37 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call36) #8, !dbg !4967
  %call38 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call37) #8, !dbg !4967
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !4906, metadata !DIExpression()), !dbg !4924
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4968
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4968
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4968
  ret void, !dbg !4968
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @slpeel_add_loop_guard(%struct.basic_block_def* %guard_bb, %union.tree_node* %cond, %struct.gimple_seq_d* %cond_expr_stmt_list, %struct.basic_block_def* %exit_bb, %struct.basic_block_def* %dom_bb) unnamed_addr #5 !dbg !4969 {
entry:
  %cond_expr_stmt_list.addr = alloca %struct.gimple_seq_d*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gimplify_stmt_list = alloca %struct.gimple_seq_d*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp11 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %guard_bb, metadata !4973, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !4974, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %cond_expr_stmt_list, metadata !4975, metadata !DIExpression()), !dbg !4983
  store %struct.gimple_seq_d* %cond_expr_stmt_list, %struct.gimple_seq_d** %cond_expr_stmt_list.addr, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %exit_bb, metadata !4976, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dom_bb, metadata !4977, metadata !DIExpression()), !dbg !4983
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4984
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4984
  %1 = bitcast %struct.gimple_seq_d** %gimplify_stmt_list to i8*, !dbg !4985
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4985
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4982, metadata !DIExpression()), !dbg !4983
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %gimplify_stmt_list, align 8, !dbg !4986
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %guard_bb, i64 0, i32 1, !dbg !4987
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4987
  %tobool = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !4987
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4987

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !4987
  br label %cond.end, !dbg !4987

cond.end:                                         ; preds = %entry, %cond.true
  %cond2 = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4987
  %call = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond2, i32 0) #8, !dbg !4987
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !4980, metadata !DIExpression()), !dbg !4983
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 7, !dbg !4988
  %3 = load i32, i32* %flags, align 8, !dbg !4989
  %and = and i32 %3, -2050, !dbg !4989
  %or = or i32 %and, 2048, !dbg !4990
  store i32 %or, i32* %flags, align 8, !dbg !4990
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4991
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !4991
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %guard_bb) #8, !dbg !4991
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !4991
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !4991
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %gimplify_stmt_list, metadata !4982, metadata !DIExpression(DW_OP_deref)), !dbg !4983
  %call4 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %cond, %struct.gimple_seq_d** nonnull %gimplify_stmt_list, i8 zeroext 1, %union.tree_node* null) #6, !dbg !4992
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4974, metadata !DIExpression()), !dbg !4983
  %5 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %gimplify_stmt_list, align 8, !dbg !4993
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %5, metadata !4982, metadata !DIExpression()), !dbg !4983
  %tobool5 = icmp eq %struct.gimple_seq_d* %5, null, !dbg !4993
  br i1 %tobool5, label %if.end, label %if.then, !dbg !4995

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %5, metadata !4982, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cond_expr_stmt_list.addr, metadata !4975, metadata !DIExpression(DW_OP_deref)), !dbg !4983
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %cond_expr_stmt_list.addr, %struct.gimple_seq_d* nonnull %5) #6, !dbg !4996
  br label %if.end, !dbg !4996

if.end:                                           ; preds = %cond.end, %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4997
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4997
  %call6 = call %union.tree_node* @build_int_cst(%union.tree_node* %6, i64 0) #6, !dbg !4998
  %call7 = call %union.gimple_statement_d* @gimple_build_cond(i32 102, %union.tree_node* %call4, %union.tree_node* %call6, %union.tree_node* null, %union.tree_node* null) #6, !dbg !4999
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !4981, metadata !DIExpression()), !dbg !4983
  %7 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cond_expr_stmt_list.addr, align 8, !dbg !5000
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %7, metadata !4975, metadata !DIExpression()), !dbg !4983
  %tobool8 = icmp eq %struct.gimple_seq_d* %7, null, !dbg !5000
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !5002

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %7, metadata !4975, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4978, metadata !DIExpression(DW_OP_deref)), !dbg !4983
  call void @gsi_insert_seq_after(%struct.gimple_stmt_iterator* nonnull %gsi, %struct.gimple_seq_d* nonnull %7, i32 0) #6, !dbg !5003
  br label %if.end10, !dbg !5003

if.end10:                                         ; preds = %if.end, %if.then9
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp11 to i8*, !dbg !5004
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7, !dbg !5004
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp11, %struct.basic_block_def* %guard_bb) #8, !dbg !5004
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !5004
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7, !dbg !5004
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4978, metadata !DIExpression(DW_OP_deref)), !dbg !4983
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call7, i32 0) #6, !dbg !5005
  %call12 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %guard_bb, %struct.basic_block_def* %exit_bb, i32 1024) #6, !dbg !5006
  call void @llvm.dbg.value(metadata %struct.edge_def* %call12, metadata !4979, metadata !DIExpression()), !dbg !4983
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %exit_bb, %struct.basic_block_def* %dom_bb) #6, !dbg !5007
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5008
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5008
  ret %struct.edge_def* %call12, !dbg !5009
}

; Function Attrs: nounwind uwtable
define internal fastcc void @slpeel_update_phi_nodes_for_guard1(%struct.edge_def* %guard_edge, %struct.loop* %loop, i8 zeroext %is_new_loop, %struct.basic_block_def** %new_exit_bb, %struct.bitmap_head_def** %defs) unnamed_addr #5 !dbg !5010 {
entry:
  %gsi_orig = alloca %struct.gimple_stmt_iterator, align 8
  %gsi_update = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp14 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %guard_edge, metadata !5015, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5016, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i8 %is_new_loop, metadata !5017, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %new_exit_bb, metadata !5018, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %defs, metadata !5019, metadata !DIExpression()), !dbg !5039
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %guard_edge, i64 0, i32 1, !dbg !5040
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5040
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5026, metadata !DIExpression()), !dbg !5039
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !5041
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5041
  %tobool = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !5041
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5041

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !5041
  br label %cond.end, !dbg !5041

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5041
  %call = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #8, !dbg !5041
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !5027, metadata !DIExpression()), !dbg !5039
  %dest2 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !5042
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !5042
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !5028, metadata !DIExpression()), !dbg !5039
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !5043
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !5043
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !5029, metadata !DIExpression()), !dbg !5039
  %4 = bitcast %struct.gimple_stmt_iterator* %gsi_orig to i8*, !dbg !5044
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !5044
  %5 = bitcast %struct.gimple_stmt_iterator* %gsi_update to i8*, !dbg !5044
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !5044
  %call3 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !5045
  %call4 = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %call3) #6, !dbg !5046
  store %struct.basic_block_def* %call4, %struct.basic_block_def** %new_exit_bb, align 8, !dbg !5047
  %succs5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call4, i64 0, i32 1, !dbg !5048
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs5, align 8, !dbg !5048
  %tobool6 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !5048
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !5048

cond.true7:                                       ; preds = %cond.end
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !5048
  br label %cond.end11, !dbg !5048

cond.end11:                                       ; preds = %cond.end, %cond.true7
  %cond12 = phi %struct.VEC_edge_base* [ %base9, %cond.true7 ], [ null, %cond.end ], !dbg !5048
  %call13 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond12, i32 0) #8, !dbg !5048
  call void @llvm.dbg.value(metadata %struct.edge_def* %call13, metadata !5030, metadata !DIExpression()), !dbg !5039
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5049
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7, !dbg !5049
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %3) #6, !dbg !5049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !5049
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7, !dbg !5049
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp14 to i8*, !dbg !5050
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7, !dbg !5050
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp14, %struct.basic_block_def* %2) #6, !dbg !5050
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !5050
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7, !dbg !5050
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !5051
  %dest_idx54 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 6, !dbg !5051
  %dest_idx77 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call13, i64 0, i32 6, !dbg !5051
  %tobool87 = icmp eq i8 %is_new_loop, 0, !dbg !5052
  br label %for.cond, !dbg !5054

for.cond:                                         ; preds = %cleanup, %cond.end11
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !5032, metadata !DIExpression(DW_OP_deref)), !dbg !5039
  %call15 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_orig) #8, !dbg !5055
  %tobool16 = icmp eq i8 %call15, 0, !dbg !5055
  br i1 %tobool16, label %land.rhs, label %for.end, !dbg !5056

land.rhs:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_update, metadata !5033, metadata !DIExpression(DW_OP_deref)), !dbg !5039
  %call17 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_update) #8, !dbg !5057
  %tobool18 = icmp eq i8 %call17, 0, !dbg !5058
  br i1 %tobool18, label %for.body, label %for.end, !dbg !5059

for.body:                                         ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !5032, metadata !DIExpression(DW_OP_deref)), !dbg !5039
  %call19 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_orig) #8, !dbg !5060
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !5020, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_update, metadata !5033, metadata !DIExpression(DW_OP_deref)), !dbg !5039
  %call20 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_update) #8, !dbg !5061
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20, metadata !5022, metadata !DIExpression()), !dbg !5039
  %call21 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call19) #8, !dbg !5062
  %call22 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call21) #8, !dbg !5062
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5062
  %9 = bitcast i32* %var to %union.tree_node**, !dbg !5062
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !5062
  %call23 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %10, %struct.basic_block_def* %0) #6, !dbg !5063
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !5021, metadata !DIExpression()), !dbg !5039
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !5064
  %succs24 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 1, !dbg !5064
  %12 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs24, align 8, !dbg !5064
  %tobool25 = icmp eq %struct.VEC_edge_gc* %12, null, !dbg !5064
  br i1 %tobool25, label %cond.end31, label %cond.true26, !dbg !5064

cond.true26:                                      ; preds = %for.body
  %base29 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !5064
  br label %cond.end31, !dbg !5064

cond.end31:                                       ; preds = %for.body, %cond.true26
  %cond32 = phi %struct.VEC_edge_base* [ %base29, %cond.true26 ], [ null, %for.body ], !dbg !5064
  %call33 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond32, i32 0) #8, !dbg !5064
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call33, i64 0, i32 6, !dbg !5064
  %13 = load i32, i32* %dest_idx, align 4, !dbg !5064
  %call34 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call19, i32 %13) #8, !dbg !5064
  %call35 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call34) #8, !dbg !5064
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !5025, metadata !DIExpression()), !dbg !5039
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !5065
  %succs37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 1, !dbg !5065
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs37, align 8, !dbg !5065
  %tobool38 = icmp eq %struct.VEC_edge_gc* %15, null, !dbg !5065
  br i1 %tobool38, label %cond.end44, label %cond.true39, !dbg !5065

cond.true39:                                      ; preds = %cond.end31
  %base42 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !5065
  br label %cond.end44, !dbg !5065

cond.end44:                                       ; preds = %cond.end31, %cond.true39
  %cond45 = phi %struct.VEC_edge_base* [ %base42, %cond.true39 ], [ null, %cond.end31 ], !dbg !5065
  %call46 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond45, i32 0) #8, !dbg !5065
  %call47 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call19, %struct.edge_def* %call46) #8, !dbg !5066
  call void @llvm.dbg.value(metadata i32 %call47, metadata !5034, metadata !DIExpression()), !dbg !5051
  %call48 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !5067
  %dest_idx49 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call48, i64 0, i32 6, !dbg !5067
  %16 = load i32, i32* %dest_idx49, align 4, !dbg !5067
  %call50 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call19, i32 %16) #8, !dbg !5067
  %call51 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call50) #8, !dbg !5067
  call void @llvm.dbg.value(metadata %union.tree_node* %call51, metadata !5024, metadata !DIExpression()), !dbg !5039
  %call52 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !5068
  %call53 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call19, %struct.edge_def* %call52) #8, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %call53, metadata !5038, metadata !DIExpression()), !dbg !5051
  call void @add_phi_arg(%union.gimple_statement_d* %call23, %union.tree_node* %call35, %struct.edge_def* %call13, i32 %call47) #6, !dbg !5070
  call void @add_phi_arg(%union.gimple_statement_d* %call23, %union.tree_node* %call51, %struct.edge_def* %guard_edge, i32 %call53) #6, !dbg !5071
  %17 = load i32, i32* %dest_idx54, align 4, !dbg !5072
  %call55 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call20, i32 %17) #8, !dbg !5072
  %call56 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call55) #8, !dbg !5072
  %cmp = icmp eq %union.tree_node* %call56, %call35, !dbg !5072
  br i1 %cmp, label %cond.end63, label %lor.lhs.false, !dbg !5072

lor.lhs.false:                                    ; preds = %cond.end44
  %18 = load i32, i32* %dest_idx54, align 4, !dbg !5072
  %call58 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call20, i32 %18) #8, !dbg !5072
  %call59 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call58) #8, !dbg !5072
  %cmp60 = icmp eq %union.tree_node* %call59, %call51, !dbg !5072
  br i1 %cmp60, label %cond.end63, label %cond.true61, !dbg !5072

cond.true61:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 542, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5072
  br label %cond.end63, !dbg !5072

cond.end63:                                       ; preds = %cond.end44, %lor.lhs.false, %cond.true61
  %call65 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call23) #8, !dbg !5073
  %call66 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call65) #8, !dbg !5073
  call fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %call20, %struct.edge_def* %call, %union.tree_node* %call66) #8, !dbg !5074
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !5023, metadata !DIExpression()), !dbg !5039
  %call67 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call19) #8, !dbg !5075
  %call68 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call67) #8, !dbg !5075
  %call69 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call68) #6, !dbg !5077
  %tobool70 = icmp eq i8 %call69, 0, !dbg !5077
  br i1 %tobool70, label %cleanup, label %if.end, !dbg !5078

if.end:                                           ; preds = %cond.end63
  %call71 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call19) #8, !dbg !5079
  %call72 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call71) #8, !dbg !5079
  %var74 = getelementptr inbounds %union.tree_node, %union.tree_node* %call72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5079
  %19 = bitcast i32* %var74 to %union.tree_node**, !dbg !5079
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !5079
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %new_exit_bb, align 8, !dbg !5080
  %call75 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %20, %struct.basic_block_def* %21) #6, !dbg !5081
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call75, metadata !5021, metadata !DIExpression()), !dbg !5039
  %call76 = call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !5082
  call void @add_phi_arg(%union.gimple_statement_d* %call75, %union.tree_node* %call35, %struct.edge_def* %call76, i32 %call47) #6, !dbg !5083
  %22 = load i32, i32* %dest_idx77, align 4, !dbg !5084
  %call78 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call23, i32 %22) #8, !dbg !5084
  %call79 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call78) #8, !dbg !5084
  %cmp80 = icmp eq %union.tree_node* %call79, %call35, !dbg !5084
  br i1 %cmp80, label %cond.end83, label %cond.true81, !dbg !5084

cond.true81:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 560, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5084
  br label %cond.end83, !dbg !5084

cond.end83:                                       ; preds = %if.end, %cond.true81
  %call85 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call75) #8, !dbg !5085
  %call86 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call85) #8, !dbg !5085
  call fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %call23, %struct.edge_def* %call13, %union.tree_node* %call86) #8, !dbg !5086
  br i1 %tobool87, label %if.else, label %if.end93, !dbg !5087

if.else:                                          ; preds = %cond.end83
  %call89 = call %union.tree_node* @get_current_def(%union.tree_node* %call35) #6, !dbg !5088
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !5031, metadata !DIExpression()), !dbg !5039
  %tobool90 = icmp eq %union.tree_node* %call89, null, !dbg !5090
  br i1 %tobool90, label %cleanup, label %if.end93, !dbg !5092

if.end93:                                         ; preds = %if.else, %cond.end83
  %current_new_name.0 = phi %union.tree_node* [ %call35, %cond.end83 ], [ %call89, %if.else ], !dbg !5052
  call void @llvm.dbg.value(metadata %union.tree_node* %current_new_name.0, metadata !5031, metadata !DIExpression()), !dbg !5039
  %call94 = call %union.tree_node* @get_current_def(%union.tree_node* %current_new_name.0) #6, !dbg !5093
  %cmp95 = icmp eq %union.tree_node* %call94, null, !dbg !5093
  br i1 %cmp95, label %cond.end98, label %cond.true96, !dbg !5093

cond.true96:                                      ; preds = %if.end93
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 586, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5093
  br label %cond.end98, !dbg !5093

cond.end98:                                       ; preds = %if.end93, %cond.true96
  %call100 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call75) #8, !dbg !5094
  %call101 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call100) #8, !dbg !5094
  call void @set_current_def(%union.tree_node* %current_new_name.0, %union.tree_node* %call101) #6, !dbg !5095
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %defs, align 8, !dbg !5096
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %current_new_name.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5097
  %24 = bitcast %union.tree_node** %version to i32*, !dbg !5097
  %25 = load i32, i32* %24, align 8, !dbg !5097
  %call103 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %23, i32 %25) #6, !dbg !5098
  br label %cleanup, !dbg !5099

cleanup:                                          ; preds = %if.else, %cond.end63, %cond.end98
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_orig, metadata !5032, metadata !DIExpression(DW_OP_deref)), !dbg !5039
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi_orig) #8, !dbg !5100
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_update, metadata !5033, metadata !DIExpression(DW_OP_deref)), !dbg !5039
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi_update) #8, !dbg !5101
  br label %for.cond, !dbg !5102, !llvm.loop !5103

for.end:                                          ; preds = %for.cond, %land.rhs
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !5105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !5105
  ret void, !dbg !5105
}

; Function Attrs: nounwind uwtable
define internal fastcc void @slpeel_update_phi_nodes_for_guard2(%struct.edge_def* %guard_edge, %struct.loop* %loop, i8 zeroext %is_new_loop, %struct.basic_block_def** %new_exit_bb) unnamed_addr #5 !dbg !5106 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %guard_edge, metadata !5110, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5111, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata i8 %is_new_loop, metadata !5112, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %new_exit_bb, metadata !5113, metadata !DIExpression()), !dbg !5130
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %guard_edge, i64 0, i32 1, !dbg !5131
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5131
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5120, metadata !DIExpression()), !dbg !5130
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !5132
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5132
  %tobool = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !5132
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5132

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !5132
  br label %cond.end, !dbg !5132

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5132
  %call = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #8, !dbg !5132
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !5121, metadata !DIExpression()), !dbg !5130
  %dest2 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !5133
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !5133
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !5122, metadata !DIExpression()), !dbg !5130
  %3 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7, !dbg !5134
  %call3 = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !5135
  %call4 = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %call3) #6, !dbg !5136
  store %struct.basic_block_def* %call4, %struct.basic_block_def** %new_exit_bb, align 8, !dbg !5137
  %succs5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call4, i64 0, i32 1, !dbg !5138
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs5, align 8, !dbg !5138
  %tobool6 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !5138
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !5138

cond.true7:                                       ; preds = %cond.end
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !5138
  br label %cond.end11, !dbg !5138

cond.end11:                                       ; preds = %cond.end, %cond.true7
  %cond12 = phi %struct.VEC_edge_base* [ %base9, %cond.true7 ], [ null, %cond.end ], !dbg !5138
  %call13 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond12, i32 0) #8, !dbg !5138
  call void @llvm.dbg.value(metadata %struct.edge_def* %call13, metadata !5123, metadata !DIExpression()), !dbg !5130
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5139
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !5139
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #6, !dbg !5139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !5139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !5139
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 6, !dbg !5141
  %tobool28 = icmp ne i8 %is_new_loop, 0, !dbg !5144
  %dest_idx50 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call13, i64 0, i32 6, !dbg !5141
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %guard_edge, i64 0, i32 0, !dbg !5141
  %dest_idx94 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %guard_edge, i64 0, i32 6, !dbg !5141
  br label %for.cond, !dbg !5146

for.cond:                                         ; preds = %for.inc, %cond.end11
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5129, metadata !DIExpression(DW_OP_deref)), !dbg !5130
  %call14 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5147
  %tobool15 = icmp eq i8 %call14, 0, !dbg !5148
  br i1 %tobool15, label %for.body, label %for.end, !dbg !5149

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5129, metadata !DIExpression(DW_OP_deref)), !dbg !5130
  %call16 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5150
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !5116, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !5114, metadata !DIExpression()), !dbg !5130
  %6 = load i32, i32* %dest_idx, align 4, !dbg !5151
  %call17 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call16, i32 %6) #8, !dbg !5151
  %call18 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call17) #8, !dbg !5151
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !5124, metadata !DIExpression()), !dbg !5130
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5152
  %bf.load = load i64, i64* %7, align 8, !dbg !5152
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5154
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5154
  br i1 %cmp, label %if.end, label %for.inc, !dbg !5155

if.end:                                           ; preds = %for.body
  %call20 = call %union.tree_node* @get_current_def(%union.tree_node* %call18) #6, !dbg !5156
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !5125, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5128, metadata !DIExpression()), !dbg !5130
  %call21 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call16) #8, !dbg !5157
  %call22 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call21) #8, !dbg !5157
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5157
  %8 = bitcast i32* %var to %union.tree_node**, !dbg !5157
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5157
  %call23 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %9, %struct.basic_block_def* %0) #6, !dbg !5158
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !5115, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !5126, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5127, metadata !DIExpression()), !dbg !5130
  %tobool24 = icmp eq %union.tree_node* %call20, null, !dbg !5159
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !5161

if.then25:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !5126, metadata !DIExpression()), !dbg !5130
  %call26 = call %union.tree_node* @get_current_def(%union.tree_node* nonnull %call20) #6, !dbg !5162
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !5127, metadata !DIExpression()), !dbg !5130
  br label %if.end27, !dbg !5164

if.end27:                                         ; preds = %if.end, %if.then25
  %new_name.0 = phi %union.tree_node* [ %call20, %if.then25 ], [ %call18, %if.end ], !dbg !5141
  %new_name2.0 = phi %union.tree_node* [ %call26, %if.then25 ], [ null, %if.end ], !dbg !5141
  call void @llvm.dbg.value(metadata %union.tree_node* %new_name2.0, metadata !5127, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %union.tree_node* %new_name.0, metadata !5126, metadata !DIExpression()), !dbg !5130
  %call18.new_name.0 = select i1 %tobool28, %union.tree_node* %call18, %union.tree_node* %new_name.0
  %new_name.0.call18 = select i1 %tobool28, %union.tree_node* %new_name.0, %union.tree_node* %call18
  call void @llvm.dbg.value(metadata %union.tree_node* %new_name.0.call18, metadata !5119, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata %union.tree_node* %call18.new_name.0, metadata !5118, metadata !DIExpression()), !dbg !5130
  %tobool31 = icmp eq %union.tree_node* %new_name2.0, null, !dbg !5165
  %guard_arg.1 = select i1 %tobool31, %union.tree_node* %call18.new_name.0, %union.tree_node* %new_name2.0, !dbg !5167
  call void @llvm.dbg.value(metadata %union.tree_node* %guard_arg.1, metadata !5118, metadata !DIExpression()), !dbg !5130
  call void @add_phi_arg(%union.gimple_statement_d* %call23, %union.tree_node* %new_name.0.call18, %struct.edge_def* %call13, i32 0) #6, !dbg !5168
  call void @add_phi_arg(%union.gimple_statement_d* %call23, %union.tree_node* %guard_arg.1, %struct.edge_def* %guard_edge, i32 0) #6, !dbg !5169
  %10 = load i32, i32* %dest_idx, align 4, !dbg !5170
  %call35 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call16, i32 %10) #8, !dbg !5170
  %call36 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call35) #8, !dbg !5170
  %cmp37 = icmp eq %union.tree_node* %call36, %call18, !dbg !5170
  br i1 %cmp37, label %cond.end40, label %cond.true38, !dbg !5170

cond.true38:                                      ; preds = %if.end27
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 690, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5170
  br label %cond.end40, !dbg !5170

cond.end40:                                       ; preds = %if.end27, %cond.true38
  %call42 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call23) #8, !dbg !5171
  %call43 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call42) #8, !dbg !5171
  call fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %call16, %struct.edge_def* %call, %union.tree_node* %call43) #8, !dbg !5172
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !5117, metadata !DIExpression()), !dbg !5130
  %call44 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call16) #8, !dbg !5173
  %call45 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call44) #8, !dbg !5173
  %var47 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5173
  %11 = bitcast i32* %var47 to %union.tree_node**, !dbg !5173
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !5173
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %new_exit_bb, align 8, !dbg !5174
  %call48 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %12, %struct.basic_block_def* %13) #6, !dbg !5175
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call48, metadata !5115, metadata !DIExpression()), !dbg !5130
  %call49 = call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !5176
  call void @add_phi_arg(%union.gimple_statement_d* %call48, %union.tree_node* %new_name.0.call18, %struct.edge_def* %call49, i32 0) #6, !dbg !5177
  %14 = load i32, i32* %dest_idx50, align 4, !dbg !5178
  %call51 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call23, i32 %14) #8, !dbg !5178
  %call52 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call51) #8, !dbg !5178
  %cmp53 = icmp eq %union.tree_node* %call52, %new_name.0.call18, !dbg !5178
  br i1 %cmp53, label %cond.end56, label %cond.true54, !dbg !5178

cond.true54:                                      ; preds = %cond.end40
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 705, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5178
  br label %cond.end56, !dbg !5178

cond.end56:                                       ; preds = %cond.end40, %cond.true54
  %call58 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call48) #8, !dbg !5179
  %call59 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call58) #8, !dbg !5179
  call fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %call23, %struct.edge_def* %call13, %union.tree_node* %call59) #8, !dbg !5180
  %cmp60 = icmp eq %union.tree_node* %guard_arg.1, %new_name2.0, !dbg !5181
  br i1 %cmp60, label %for.inc, label %if.end62, !dbg !5183

if.end62:                                         ; preds = %cond.end56
  call void @llvm.dbg.value(metadata %union.tree_node* %guard_arg.1, metadata !5128, metadata !DIExpression()), !dbg !5130
  %call63 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call16) #8, !dbg !5184
  %call64 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call63) #8, !dbg !5184
  %var66 = getelementptr inbounds %union.tree_node, %union.tree_node* %call64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5184
  %15 = bitcast i32* %var66 to %union.tree_node**, !dbg !5184
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !5184
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5185
  %call67 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %16, %struct.basic_block_def* %17) #6, !dbg !5186
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call67, metadata !5115, metadata !DIExpression()), !dbg !5130
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5187
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 0, !dbg !5187
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5187
  %tobool69 = icmp eq %struct.VEC_edge_gc* %19, null, !dbg !5187
  br i1 %tobool69, label %cond.end75, label %cond.true70, !dbg !5187

cond.true70:                                      ; preds = %if.end62
  %base73 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !5187
  br label %cond.end75, !dbg !5187

cond.end75:                                       ; preds = %if.end62, %cond.true70
  %cond76 = phi %struct.VEC_edge_base* [ %base73, %cond.true70 ], [ null, %if.end62 ], !dbg !5187
  %call77 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond76) #8, !dbg !5187
  %cmp78 = icmp eq i32 %call77, 1, !dbg !5187
  br i1 %cmp78, label %cond.end81, label %cond.true79, !dbg !5187

cond.true79:                                      ; preds = %cond.end75
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 737, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5187
  br label %cond.end81, !dbg !5187

cond.end81:                                       ; preds = %cond.end75, %cond.true79
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5188
  %preds84 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i64 0, i32 0, !dbg !5188
  %21 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds84, align 8, !dbg !5188
  %tobool85 = icmp eq %struct.VEC_edge_gc* %21, null, !dbg !5188
  br i1 %tobool85, label %cond.end91, label %cond.true86, !dbg !5188

cond.true86:                                      ; preds = %cond.end81
  %base89 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %21, i64 0, i32 0, !dbg !5188
  br label %cond.end91, !dbg !5188

cond.end91:                                       ; preds = %cond.end81, %cond.true86
  %cond92 = phi %struct.VEC_edge_base* [ %base89, %cond.true86 ], [ null, %cond.end81 ], !dbg !5188
  %call93 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond92, i32 0) #8, !dbg !5188
  call void @add_phi_arg(%union.gimple_statement_d* %call67, %union.tree_node* %guard_arg.1, %struct.edge_def* %call93, i32 0) #6, !dbg !5189
  %22 = load i32, i32* %dest_idx94, align 4, !dbg !5190
  %call95 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call23, i32 %22) #8, !dbg !5190
  %call96 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call95) #8, !dbg !5190
  %cmp97 = icmp eq %union.tree_node* %call96, %guard_arg.1, !dbg !5190
  br i1 %cmp97, label %cond.end100, label %cond.true98, !dbg !5190

cond.true98:                                      ; preds = %cond.end91
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 743, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5190
  br label %cond.end100, !dbg !5190

cond.end100:                                      ; preds = %cond.end91, %cond.true98
  %call102 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call67) #8, !dbg !5191
  %call103 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call102) #8, !dbg !5191
  call fastcc void @adjust_phi_and_debug_stmts(%union.gimple_statement_d* %call23, %struct.edge_def* %guard_edge, %union.tree_node* %call103) #8, !dbg !5192
  br label %for.inc, !dbg !5193

for.inc:                                          ; preds = %for.body, %cond.end56, %cond.end100
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5129, metadata !DIExpression(DW_OP_deref)), !dbg !5130
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5194
  br label %for.cond, !dbg !5195, !llvm.loop !5196

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7, !dbg !5198
  ret void, !dbg !5198
}

; Function Attrs: nounwind uwtable
define internal fastcc void @adjust_vec_debug_stmts() unnamed_addr #5 !dbg !5199 {
entry:
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5202
  %tobool = icmp eq i32 %0, 0, !dbg !5202
  br i1 %tobool, label %return, label %if.end, !dbg !5204

if.end:                                           ; preds = %entry
  %1 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5205
  %tobool1 = icmp eq %struct.VEC_adjust_info_stack* %1, null, !dbg !5205
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !5205

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 189, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5205
  br label %cond.end, !dbg !5205

cond.end:                                         ; preds = %if.end, %cond.true
  br label %while.cond, !dbg !5206

while.cond:                                       ; preds = %while.body, %cond.end
  %2 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5207
  %base = getelementptr inbounds %struct.VEC_adjust_info_stack, %struct.VEC_adjust_info_stack* %2, i64 0, i32 0, !dbg !5207
  %call = tail call fastcc i32 @VEC_adjust_info_base_length(%struct.VEC_adjust_info_base* %base) #8, !dbg !5207
  %cmp = icmp eq i32 %call, 0, !dbg !5207
  br i1 %cmp, label %while.end, label %while.body, !dbg !5206

while.body:                                       ; preds = %while.cond
  %3 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5208
  %base9 = getelementptr inbounds %struct.VEC_adjust_info_stack, %struct.VEC_adjust_info_stack* %3, i64 0, i32 0, !dbg !5208
  %call13 = tail call fastcc %struct.adjust_info* @VEC_adjust_info_base_last(%struct.VEC_adjust_info_base* %base9) #8, !dbg !5208
  tail call fastcc void @adjust_debug_stmts_now(%struct.adjust_info* %call13) #8, !dbg !5210
  %4 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5211
  %base16 = getelementptr inbounds %struct.VEC_adjust_info_stack, %struct.VEC_adjust_info_stack* %4, i64 0, i32 0, !dbg !5211
  tail call fastcc void @VEC_adjust_info_base_pop(%struct.VEC_adjust_info_base* %base16) #8, !dbg !5211
  br label %while.cond, !dbg !5206, !llvm.loop !5212

while.end:                                        ; preds = %while.cond
  tail call fastcc void @VEC_adjust_info_stack_free(%struct.VEC_adjust_info_stack** nonnull @adjust_vec) #8, !dbg !5214
  br label %return, !dbg !5215

return:                                           ; preds = %entry, %while.end
  ret void, !dbg !5215
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @delete_update_ssa() local_unnamed_addr #2

declare dso_local i8* @vec_stack_p_reserve_exact_1(i32, i8*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @adjust_debug_stmts(%union.tree_node* %from, %union.tree_node* %to, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !5216 {
entry:
  %ai = alloca %struct.adjust_info, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !5220, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata %union.tree_node* %to, metadata !5221, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5222, metadata !DIExpression()), !dbg !5224
  %0 = bitcast %struct.adjust_info* %ai to i8*, !dbg !5225
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5225
  %1 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5226
  %tobool = icmp eq i32 %1, 0, !dbg !5226
  br i1 %tobool, label %if.end9, label %land.lhs.true, !dbg !5228

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %from, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5229
  %bf.load = load i64, i64* %2, align 8, !dbg !5229
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5230
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5230
  br i1 %cmp, label %land.lhs.true1, label %if.end9, !dbg !5231

land.lhs.true1:                                   ; preds = %land.lhs.true
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %from, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5232
  %3 = bitcast i32* %var to %union.tree_node**, !dbg !5232
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5232
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5233
  %call = tail call fastcc %union.tree_node* @gimple_vop(%struct.function* %5) #8, !dbg !5234
  %cmp2 = icmp eq %union.tree_node* %4, %call, !dbg !5235
  br i1 %cmp2, label %if.end9, label %if.then, !dbg !5236

if.then:                                          ; preds = %land.lhs.true1
  %from3 = getelementptr inbounds %struct.adjust_info, %struct.adjust_info* %ai, i64 0, i32 0, !dbg !5237
  store %union.tree_node* %from, %union.tree_node** %from3, align 8, !dbg !5239
  %to4 = getelementptr inbounds %struct.adjust_info, %struct.adjust_info* %ai, i64 0, i32 1, !dbg !5240
  store %union.tree_node* %to, %union.tree_node** %to4, align 8, !dbg !5241
  %bb5 = getelementptr inbounds %struct.adjust_info, %struct.adjust_info* %ai, i64 0, i32 2, !dbg !5242
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb5, align 8, !dbg !5243
  %6 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5244
  %tobool6 = icmp eq %struct.VEC_adjust_info_stack* %6, null, !dbg !5244
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !5246

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.adjust_info* %ai, metadata !5223, metadata !DIExpression(DW_OP_deref)), !dbg !5224
  %call8 = call fastcc %struct.adjust_info* @VEC_adjust_info_stack_safe_push(%struct.VEC_adjust_info_stack** nonnull @adjust_vec, %struct.adjust_info* nonnull %ai) #8, !dbg !5247
  br label %if.end9, !dbg !5247

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.adjust_info* %ai, metadata !5223, metadata !DIExpression(DW_OP_deref)), !dbg !5224
  call fastcc void @adjust_debug_stmts_now(%struct.adjust_info* nonnull %ai) #8, !dbg !5248
  br label %if.end9

if.end9:                                          ; preds = %land.lhs.true1, %entry, %if.then7, %if.else, %land.lhs.true
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5249
  ret void, !dbg !5249
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vop(%struct.function* %fun) unnamed_addr #0 !dbg !5250 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !5256, metadata !DIExpression()), !dbg !5257
  %tobool = icmp eq %struct.function* %fun, null, !dbg !5258
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !5258

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !5258
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5258
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !5258
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !5258

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5258
  %gimple_df2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !5257
  %.pre = load %struct.gimple_df*, %struct.gimple_df** %gimple_df2.phi.trans.insert, align 8, !dbg !5259
  br label %cond.end, !dbg !5258

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %1 = phi %struct.gimple_df* [ %0, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !5259
  %vop = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 3, !dbg !5260
  %2 = load %union.tree_node*, %union.tree_node** %vop, align 8, !dbg !5260
  ret %union.tree_node* %2, !dbg !5261
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.adjust_info* @VEC_adjust_info_stack_safe_push(%struct.VEC_adjust_info_stack** %vec_, %struct.adjust_info* %obj_) unnamed_addr #0 !dbg !5262 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_stack** @adjust_vec, metadata !5270, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.value(metadata %struct.adjust_info* %obj_, metadata !5271, metadata !DIExpression()), !dbg !5272
  %call = tail call fastcc i32 @VEC_adjust_info_stack_reserve(%struct.VEC_adjust_info_stack** nonnull @adjust_vec, i32 1) #8, !dbg !5273
  %0 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5273
  %tobool = icmp eq %struct.VEC_adjust_info_stack* %0, null, !dbg !5273
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5273

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_adjust_info_stack, %struct.VEC_adjust_info_stack* %0, i64 0, i32 0, !dbg !5273
  br label %cond.end, !dbg !5273

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_adjust_info_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5273
  %call1 = tail call fastcc %struct.adjust_info* @VEC_adjust_info_base_quick_push(%struct.VEC_adjust_info_base* %cond, %struct.adjust_info* %obj_) #8, !dbg !5273
  ret %struct.adjust_info* %call1, !dbg !5273
}

; Function Attrs: nounwind uwtable
define internal fastcc void @adjust_debug_stmts_now(%struct.adjust_info* %ai) unnamed_addr #5 !dbg !5274 {
entry:
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.adjust_info* %ai, metadata !5278, metadata !DIExpression()), !dbg !5297
  %bb = getelementptr inbounds %struct.adjust_info, %struct.adjust_info* %ai, i64 0, i32 2, !dbg !5298
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5298
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5279, metadata !DIExpression()), !dbg !5297
  %from = getelementptr inbounds %struct.adjust_info, %struct.adjust_info* %ai, i64 0, i32 0, !dbg !5299
  %1 = load %union.tree_node*, %union.tree_node** %from, align 8, !dbg !5299
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5280, metadata !DIExpression()), !dbg !5297
  %to = getelementptr inbounds %struct.adjust_info, %struct.adjust_info* %ai, i64 0, i32 1, !dbg !5300
  %2 = load %union.tree_node*, %union.tree_node** %to, align 8, !dbg !5300
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5281, metadata !DIExpression()), !dbg !5297
  %3 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !5301
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #7, !dbg !5301
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5302
  %4 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5302
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !5302
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %5) #8, !dbg !5303
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5291, metadata !DIExpression()), !dbg !5297
  %call1 = tail call zeroext i8 @dom_info_available_p(i32 1) #6, !dbg !5304
  %tobool = icmp eq i8 %call1, 0, !dbg !5304
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5304

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5304
  br label %cond.end, !dbg !5304

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5297
  %call2 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %1) #8, !dbg !5305
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !5290, metadata !DIExpression()), !dbg !5297
  %tobool23 = icmp eq %union.tree_node* %2, null, !dbg !5306
  br i1 %tobool23, label %cond.end.split.us, label %cond.end.cond.end.split_crit_edge, !dbg !5305

cond.end.cond.end.split_crit_edge:                ; preds = %cond.end
  br label %for.cond, !dbg !5305

cond.end.split.us:                                ; preds = %cond.end
  br label %for.cond.us, !dbg !5305

for.cond.us:                                      ; preds = %cleanup.us, %cond.end.split.us
  %stmt.0.us = phi %union.gimple_statement_d* [ %call2, %cond.end.split.us ], [ %call36.us, %cleanup.us ], !dbg !5310
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0.us, metadata !5290, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5297
  %call3.us = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !5311
  %tobool4.us = icmp eq i8 %call3.us, 0, !dbg !5311
  br i1 %tobool4.us, label %for.body.us, label %for.end37.us-lcssa.us, !dbg !5305

for.body.us:                                      ; preds = %for.cond.us
  %call5.us = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt.0.us) #8, !dbg !5312
  %tobool6.us = icmp eq i8 %call5.us, 0, !dbg !5312
  br i1 %tobool6.us, label %cleanup.us, label %if.end.us, !dbg !5314

if.end.us:                                        ; preds = %for.body.us
  %call7.us = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %stmt.0.us) #8, !dbg !5315
  %tobool8.us = icmp eq i8 %call7.us, 0, !dbg !5315
  br i1 %tobool8.us, label %cond.true9.us, label %cond.end11.us, !dbg !5315

cond.true9.us:                                    ; preds = %if.end.us
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5315
  br label %cond.end11.us, !dbg !5315

cond.end11.us:                                    ; preds = %cond.true9.us, %if.end.us
  %call13.us = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt.0.us) #8, !dbg !5316
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call13.us, metadata !5296, metadata !DIExpression()), !dbg !5317
  %cmp.us = icmp eq %struct.basic_block_def* %call13.us, %0, !dbg !5318
  br i1 %cmp.us, label %land.lhs.true.us, label %lor.lhs.false.us, !dbg !5319

lor.lhs.false.us:                                 ; preds = %cond.end11.us
  %call14.us = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call13.us, %struct.basic_block_def* %0) #6, !dbg !5320
  %tobool15.us = icmp eq i8 %call14.us, 0, !dbg !5320
  %cmp16.us = icmp eq %struct.basic_block_def* %call13.us, %call, !dbg !5321
  %or.cond.us = or i1 %tobool15.us, %cmp16.us, !dbg !5322
  br i1 %or.cond.us, label %cleanup.us, label %lor.lhs.false18.us, !dbg !5322

land.lhs.true.us:                                 ; preds = %cond.end11.us
  %cmp16.old.us = icmp eq %struct.basic_block_def* %0, %call, !dbg !5321
  br i1 %cmp16.old.us, label %cleanup.us, label %lor.lhs.false18.us, !dbg !5323

lor.lhs.false18.us:                               ; preds = %land.lhs.true.us, %lor.lhs.false.us
  %call19.us = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call13.us, %struct.basic_block_def* %call) #6, !dbg !5324
  %tobool21.us = icmp eq i8 %call19.us, 0, !dbg !5324
  br i1 %tobool21.us, label %if.then22.us, label %cleanup.us, !dbg !5325

if.then22.us:                                     ; preds = %lor.lhs.false18.us
  call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %stmt.0.us) #8, !dbg !5326
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt.0.us) #8, !dbg !5328
  br label %cleanup.us

cleanup.us:                                       ; preds = %if.then22.us, %lor.lhs.false18.us, %land.lhs.true.us, %lor.lhs.false.us, %for.body.us
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5297
  %call36.us = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !5311
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call36.us, metadata !5290, metadata !DIExpression()), !dbg !5297
  br label %for.cond.us, !dbg !5311, !llvm.loop !5329

for.end37.us-lcssa.us:                            ; preds = %for.cond.us
  br label %for.end37, !dbg !5331

for.cond:                                         ; preds = %cleanup, %cond.end.cond.end.split_crit_edge
  %stmt.0 = phi %union.gimple_statement_d* [ %call2, %cond.end.cond.end.split_crit_edge ], [ %call36, %cleanup ], !dbg !5310
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !5290, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5297
  %call3 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !5311
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5311
  br i1 %tobool4, label %for.body, label %for.end37.us-lcssa, !dbg !5305

for.body:                                         ; preds = %for.cond
  %call5 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt.0) #8, !dbg !5312
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5312
  br i1 %tobool6, label %cleanup, label %if.end, !dbg !5314

if.end:                                           ; preds = %for.body
  %call7 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %stmt.0) #8, !dbg !5315
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5315
  br i1 %tobool8, label %cond.true9, label %cond.end11, !dbg !5315

cond.true9:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5315
  br label %cond.end11, !dbg !5315

cond.end11:                                       ; preds = %if.end, %cond.true9
  %call13 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt.0) #8, !dbg !5316
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call13, metadata !5296, metadata !DIExpression()), !dbg !5317
  %cmp = icmp eq %struct.basic_block_def* %call13, %0, !dbg !5318
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5319

lor.lhs.false:                                    ; preds = %cond.end11
  %call14 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call13, %struct.basic_block_def* %0) #6, !dbg !5320
  %tobool15 = icmp eq i8 %call14, 0, !dbg !5320
  %cmp16 = icmp eq %struct.basic_block_def* %call13, %call, !dbg !5321
  %or.cond = or i1 %tobool15, %cmp16, !dbg !5322
  br i1 %or.cond, label %cleanup, label %lor.lhs.false18, !dbg !5322

land.lhs.true:                                    ; preds = %cond.end11
  %cmp16.old = icmp eq %struct.basic_block_def* %0, %call, !dbg !5321
  br i1 %cmp16.old, label %cleanup, label %lor.lhs.false18, !dbg !5323

lor.lhs.false18:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %call19 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call13, %struct.basic_block_def* %call) #6, !dbg !5324
  %tobool21 = icmp eq i8 %call19, 0, !dbg !5324
  br i1 %tobool21, label %if.then22, label %cleanup, !dbg !5325

if.then22:                                        ; preds = %lor.lhs.false18
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5297
  %call25 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !5332
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call25, metadata !5292, metadata !DIExpression()), !dbg !5317
  br label %for.cond26, !dbg !5332

for.cond26:                                       ; preds = %for.body30, %if.then22
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call25, %if.then22 ], [ %call31, %for.body30 ], !dbg !5334
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5292, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5297
  %call27 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !5335
  %tobool28 = icmp eq i8 %call27, 0, !dbg !5335
  br i1 %tobool28, label %for.body30, label %cleanup.loopexit, !dbg !5332

for.body30:                                       ; preds = %for.cond26
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* nonnull %2) #8, !dbg !5337
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5297
  %call31 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !5335
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call31, metadata !5292, metadata !DIExpression()), !dbg !5317
  br label %for.cond26, !dbg !5335, !llvm.loop !5338

cleanup.loopexit:                                 ; preds = %for.cond26
  br label %cleanup, !dbg !5311

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false18, %for.body, %land.lhs.true, %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5297
  %call36 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !5311
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call36, metadata !5290, metadata !DIExpression()), !dbg !5297
  br label %for.cond, !dbg !5311, !llvm.loop !5329

for.end37.us-lcssa:                               ; preds = %for.cond
  br label %for.end37, !dbg !5331

for.end37:                                        ; preds = %for.end37.us-lcssa.us, %for.end37.us-lcssa
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #7, !dbg !5331
  ret void, !dbg !5331
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_adjust_info_stack_reserve(%struct.VEC_adjust_info_stack** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5340 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_stack** @adjust_vec, metadata !5344, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i32 1, metadata !5345, metadata !DIExpression()), !dbg !5347
  %0 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5348
  %tobool = icmp eq %struct.VEC_adjust_info_stack* %0, null, !dbg !5348
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5348

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_adjust_info_stack, %struct.VEC_adjust_info_stack* %0, i64 0, i32 0, !dbg !5348
  br label %cond.end, !dbg !5348

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_adjust_info_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5348
  %call = tail call fastcc i32 @VEC_adjust_info_base_space(%struct.VEC_adjust_info_base* %cond, i32 1) #8, !dbg !5348
  %tobool1 = icmp eq i32 %call, 0, !dbg !5348
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5348
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5346, metadata !DIExpression()), !dbg !5347
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5348

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_adjust_info_stack** @adjust_vec to i8**), align 8, !dbg !5349
  %call3 = tail call i8* @vec_stack_o_reserve(i8* %1, i32 1, i64 8, i64 24) #6, !dbg !5349
  store i8* %call3, i8** bitcast (%struct.VEC_adjust_info_stack** @adjust_vec to i8**), align 8, !dbg !5349
  br label %if.end, !dbg !5349

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5348
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.adjust_info* @VEC_adjust_info_base_quick_push(%struct.VEC_adjust_info_base* %vec_, %struct.adjust_info* %obj_) unnamed_addr #0 !dbg !5351 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_base* %vec_, metadata !5356, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata %struct.adjust_info* %obj_, metadata !5357, metadata !DIExpression()), !dbg !5359
  %num1 = getelementptr inbounds %struct.VEC_adjust_info_base, %struct.VEC_adjust_info_base* %vec_, i64 0, i32 0, !dbg !5360
  %0 = load i32, i32* %num1, align 8, !dbg !5360
  %inc = add i32 %0, 1, !dbg !5360
  store i32 %inc, i32* %num1, align 8, !dbg !5360
  %idxprom = zext i32 %0 to i64, !dbg !5360
  %arrayidx = getelementptr inbounds %struct.VEC_adjust_info_base, %struct.VEC_adjust_info_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5360
  call void @llvm.dbg.value(metadata %struct.adjust_info* %arrayidx, metadata !5358, metadata !DIExpression()), !dbg !5359
  %tobool = icmp eq %struct.adjust_info* %obj_, null, !dbg !5361
  br i1 %tobool, label %if.end, label %if.then, !dbg !5360

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.adjust_info* %arrayidx to i8*, !dbg !5361
  %2 = bitcast %struct.adjust_info* %obj_ to i8*, !dbg !5361
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !5361
  br label %if.end, !dbg !5361

if.end:                                           ; preds = %entry, %if.then
  ret %struct.adjust_info* %arrayidx, !dbg !5360
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_adjust_info_base_space(%struct.VEC_adjust_info_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5363 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_base* %vec_, metadata !5367, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.value(metadata i32 1, metadata !5368, metadata !DIExpression()), !dbg !5369
  %tobool = icmp eq %struct.VEC_adjust_info_base* %vec_, null, !dbg !5370
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5370

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_adjust_info_base, %struct.VEC_adjust_info_base* %vec_, i64 0, i32 1, !dbg !5370
  %0 = load i32, i32* %alloc, align 4, !dbg !5370
  %num = getelementptr inbounds %struct.VEC_adjust_info_base, %struct.VEC_adjust_info_base* %vec_, i64 0, i32 0, !dbg !5370
  %1 = load i32, i32* %num, align 8, !dbg !5370
  %cmp1 = icmp ne i32 %0, %1, !dbg !5370
  %phitmp = zext i1 %cmp1 to i32, !dbg !5370
  br label %cond.end, !dbg !5370

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5370

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5370
}

declare dso_local i8* @vec_stack_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5371 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5375, metadata !DIExpression()), !dbg !5376
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5377
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5377
  ret %struct.basic_block_def* %0, !dbg !5378
}

declare dso_local zeroext i8 @dom_info_available_p(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !5379 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5384, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5385, metadata !DIExpression()), !dbg !5386
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5387
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !5388
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !5389
  store i40* %imm_uses, i40** %0, align 8, !dbg !5389
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !5390
  %1 = bitcast i40* %next to i64*, !dbg !5390
  %2 = load i64, i64* %1, align 8, !dbg !5390
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5391
  store i64 %2, i64* %3, align 8, !dbg !5391
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !5392
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !5393
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !5394
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5395
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !5396
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !5397
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !5398
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !5399
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !5400
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !5401
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !5402
  %tobool = icmp eq i8 %call, 0, !dbg !5402
  br i1 %tobool, label %if.end, label %return, !dbg !5404

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5405
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !5405
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #8, !dbg !5406
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !5407
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !5407
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !5407
  br label %return, !dbg !5408

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !5386
  ret %union.gimple_statement_d* %retval.0, !dbg !5409
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5410 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5416, metadata !DIExpression()), !dbg !5417
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5418
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5418
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !5419
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !5419
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !5420
  %conv1 = zext i1 %cmp to i8, !dbg !5421
  ret i8 %conv1, !dbg !5422
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5423 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5425, metadata !DIExpression()), !dbg !5426
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !5427
  %cmp = icmp eq i32 %call, 2, !dbg !5428
  %conv1 = zext i1 %cmp to i8, !dbg !5427
  ret i8 %conv1, !dbg !5429
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !5430 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !5432, metadata !DIExpression()), !dbg !5433
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %s) #8, !dbg !5434
  %tobool = icmp eq i8 %call, 0, !dbg !5434
  br i1 %tobool, label %return, label %if.then, !dbg !5436

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !5437
  %bf.load = load i32, i32* %0, align 8, !dbg !5437
  %cmp = icmp ult i32 %bf.load, 65536, !dbg !5438
  %conv1 = zext i1 %cmp to i8, !dbg !5439
  br label %return, !dbg !5440

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv1, %if.then ], [ 0, %entry ], !dbg !5433
  ret i8 %retval.0, !dbg !5441
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5442 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5446, metadata !DIExpression()), !dbg !5447
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5448
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5448
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !5449
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5449
  %2 = load i64, i64* %1, align 8, !dbg !5449
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !5450
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !5451
  store i64 %2, i64* %3, align 8, !dbg !5451
  ret %struct.ssa_use_operand_d* %0, !dbg !5452
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5453 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5455, metadata !DIExpression()), !dbg !5456
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5457
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5457
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !5458
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !5459
  %conv1 = zext i1 %cmp to i8, !dbg !5460
  ret i8 %conv1, !dbg !5461
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5462 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5464, metadata !DIExpression()), !dbg !5465
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !5466
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !5466
  %1 = load i64, i64* %0, align 8, !dbg !5466
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5467
  store i64 %1, i64* %2, align 8, !dbg !5467
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !5468
  %tobool = icmp eq i8 %call, 0, !dbg !5468
  br i1 %tobool, label %if.else, label %return, !dbg !5470

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5471
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !5471
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !5473
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5473
  %5 = load i64, i64* %4, align 8, !dbg !5473
  store i64 %5, i64* %0, align 8, !dbg !5474
  br label %return, !dbg !5475

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !5476
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5477
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !5478 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !5482, metadata !DIExpression()), !dbg !5483
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %dbg, i32 1, %union.tree_node* null) #8, !dbg !5484
  ret void, !dbg !5485
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !5486 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !5488, metadata !DIExpression()), !dbg !5489
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #8, !dbg !5490
  %tobool = icmp eq i8 %call, 0, !dbg !5490
  br i1 %tobool, label %if.end, label %if.then, !dbg !5492

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !5493
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !5495
  br label %if.end, !dbg !5496

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5497
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5498 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5502, metadata !DIExpression()), !dbg !5503
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !5504
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5504
  %1 = load i64, i64* %0, align 8, !dbg !5504
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5505
  store i64 %1, i64* %2, align 8, !dbg !5505
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !5506
  %tobool = icmp eq i8 %call, 0, !dbg !5506
  br i1 %tobool, label %if.end4, label %if.then, !dbg !5508

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !5509
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5509
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !5512
  br i1 %cmp, label %return, label %if.then2, !dbg !5513

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !5514
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #8, !dbg !5515
  br label %return, !dbg !5515

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5516
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !5516
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #8, !dbg !5517
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !5518
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !5518
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5518
  br label %return, !dbg !5519

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !5503
  ret %union.gimple_statement_d* %retval.0, !dbg !5520
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5521 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !5525, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5526, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !5528, metadata !DIExpression()), !dbg !5533
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !5534
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5534
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !5529, metadata !DIExpression()), !dbg !5533
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #8, !dbg !5535
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5530, metadata !DIExpression()), !dbg !5533
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !5536
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !5536
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !5537
  %tobool = icmp eq i8 %call1, 0, !dbg !5537
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !5537
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5532, metadata !DIExpression()), !dbg !5533
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #8, !dbg !5538
  %cmp = icmp eq i32 %call2, 16, !dbg !5540
  br i1 %cmp, label %if.then, label %if.else, !dbg !5541

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5531, metadata !DIExpression(DW_OP_deref)), !dbg !5533
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #8, !dbg !5542
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !5527, metadata !DIExpression()), !dbg !5533
  br label %for.cond, !dbg !5542

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !5545
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !5528, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5527, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5531, metadata !DIExpression(DW_OP_deref)), !dbg !5533
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !5546
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5546
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !5542

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #8, !dbg !5548
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !5550
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !5551

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #8, !dbg !5552
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !5528, metadata !DIExpression()), !dbg !5533
  br label %for.inc, !dbg !5553

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !5528, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5531, metadata !DIExpression(DW_OP_deref)), !dbg !5533
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !5546
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !5527, metadata !DIExpression()), !dbg !5533
  br label %for.cond, !dbg !5546, !llvm.loop !5554

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !5556

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5531, metadata !DIExpression(DW_OP_deref)), !dbg !5533
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #8, !dbg !5558
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !5527, metadata !DIExpression()), !dbg !5533
  br label %for.cond17, !dbg !5558

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !5562
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !5528, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !5527, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5531, metadata !DIExpression(DW_OP_deref)), !dbg !5533
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !5563
  %tobool19 = icmp eq i8 %call18, 0, !dbg !5563
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !5558

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #8, !dbg !5565
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !5567
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !5568

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #8, !dbg !5569
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !5528, metadata !DIExpression()), !dbg !5533
  br label %for.inc28, !dbg !5570

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !5528, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !5531, metadata !DIExpression(DW_OP_deref)), !dbg !5533
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !5563
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !5527, metadata !DIExpression()), !dbg !5533
  br label %for.cond17, !dbg !5563, !llvm.loop !5571

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #8, !dbg !5573
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !5527, metadata !DIExpression()), !dbg !5533
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !5575
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !5576

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #8, !dbg !5577
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !5580
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !5581

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #8, !dbg !5582
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !5528, metadata !DIExpression()), !dbg !5533
  br label %if.end44, !dbg !5583

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !5528, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !5528, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !5528, metadata !DIExpression()), !dbg !5533
  br label %if.end44, !dbg !5584

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !5528, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !5528, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !5528, metadata !DIExpression()), !dbg !5533
  br label %if.end44, !dbg !5584

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !5586
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !5528, metadata !DIExpression()), !dbg !5533
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !5584
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5584
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !5587
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !5588

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !5589
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #8, !dbg !5590
  br label %if.end49, !dbg !5590

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !5591
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #8, !dbg !5592
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !5593
  ret void, !dbg !5593
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !5594 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5596, metadata !DIExpression()), !dbg !5601
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5597, metadata !DIExpression()), !dbg !5601
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5598, metadata !DIExpression()), !dbg !5601
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #8, !dbg !5602
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5599, metadata !DIExpression()), !dbg !5601
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5603
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5604
  store i8 0, i8* %done, align 8, !dbg !5605
  %and = and i32 %flags, 5, !dbg !5606
  %cmp = icmp eq i32 %and, 0, !dbg !5606
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5606

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5606
  br label %cond.end, !dbg !5606

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !5607
  %tobool = icmp eq i8 %call1, 0, !dbg !5607
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !5607
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !5600, metadata !DIExpression()), !dbg !5601
  %and3 = and i32 %cond2, %flags, !dbg !5608
  %cmp4 = icmp eq i32 %and3, 0, !dbg !5610
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5611

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !5612
  br label %cleanup, !dbg !5614

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5615
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5616
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !5617
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5618
  store i32 %call7, i32* %num_phi, align 4, !dbg !5619
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5620
  store i32 2, i32* %iter_type, align 4, !dbg !5621
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5622
  br label %cleanup, !dbg !5623

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !5601
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5624
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !5625 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !5629, metadata !DIExpression()), !dbg !5632
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !5630, metadata !DIExpression()), !dbg !5632
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !5631, metadata !DIExpression()), !dbg !5632
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !5633
  br i1 %cmp, label %if.end3, label %if.then, !dbg !5635

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !5636
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !5636
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !5639
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !5640

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #8, !dbg !5641
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #8, !dbg !5643
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !5631, metadata !DIExpression()), !dbg !5632
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !5631, metadata !DIExpression()), !dbg !5632
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !5644
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5645 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5649, metadata !DIExpression()), !dbg !5651
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !5652
  %tobool = icmp eq i8 %call, 0, !dbg !5652
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5654

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !5655
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !5655
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !5655
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !5650, metadata !DIExpression()), !dbg !5651
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !5656
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !5658

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !5659
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !5659
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5660
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !5660
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !5661
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !5662
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !5663
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !5663

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !5664
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5665 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5667, metadata !DIExpression()), !dbg !5668
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5669
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5669
  ret %union.tree_node* %0, !dbg !5670
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5671 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5675, metadata !DIExpression()), !dbg !5676
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5677
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !5678
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5679
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !5680
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5681
  store i32 0, i32* %iter_type, align 4, !dbg !5682
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5683
  store i32 0, i32* %phi_i, align 8, !dbg !5684
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5685
  store i32 0, i32* %num_phi, align 4, !dbg !5686
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5687
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5688
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5689
  store i8 1, i8* %done, align 8, !dbg !5690
  ret void, !dbg !5691
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5692 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5694, metadata !DIExpression()), !dbg !5695
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5696
  %0 = load i32, i32* %nargs, align 4, !dbg !5696
  ret i32 %0, !dbg !5697
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !5698 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5702, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i32 1, metadata !5703, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5704, metadata !DIExpression()), !dbg !5705
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !5706
  %tobool = icmp eq i8 %call, 0, !dbg !5706
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !5706

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !5706
  %cmp = icmp ugt i32 %call1, 1, !dbg !5706
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5706

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5706
  br label %cond.end, !dbg !5706

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !5707
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 1, !dbg !5707
  store %union.tree_node* null, %union.tree_node** %arrayidx, align 8, !dbg !5708
  ret void, !dbg !5709
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5710 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5712, metadata !DIExpression()), !dbg !5713
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5714
  %0 = load i32, i32* %num_ops, align 4, !dbg !5714
  ret i32 %0, !dbg !5715
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5716 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5718, metadata !DIExpression()), !dbg !5720
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !5721
  %idxprom = zext i32 %call to i64, !dbg !5722
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !5722
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5722
  call void @llvm.dbg.value(metadata i64 %0, metadata !5719, metadata !DIExpression()), !dbg !5720
  %cmp = icmp eq i64 %0, 0, !dbg !5723
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5723

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5723
  br label %cond.end, !dbg !5723

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !5724
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !5725
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !5726
  ret %union.tree_node** %2, !dbg !5727
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5728 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5732, metadata !DIExpression()), !dbg !5733
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !5734
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !5735
  ret i32 %call1, !dbg !5736
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !5737 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5741, metadata !DIExpression()), !dbg !5742
  %idxprom = zext i32 %code to i64, !dbg !5743
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !5743
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5743
  ret i32 %0, !dbg !5744
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5745 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5749, metadata !DIExpression()), !dbg !5750
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #8, !dbg !5751
  %tobool = icmp eq i8 %call, 0, !dbg !5751
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5751

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5751
  br label %cond.end, !dbg !5751

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5752
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5752
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5752
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !5752

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5752
  br label %cond.end5, !dbg !5752

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !5752
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !5752
  ret %struct.edge_def* %call7, !dbg !5753
}

declare dso_local %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

declare dso_local void @gsi_insert_seq_after(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5754 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5758, metadata !DIExpression()), !dbg !5759
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5760
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5760
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5760
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5760

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5760
  br label %cond.end, !dbg !5760

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5760
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !5760
  %cmp = icmp eq i32 %call, 1, !dbg !5761
  %conv2 = zext i1 %cmp to i8, !dbg !5760
  ret i8 %conv2, !dbg !5762
}

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

declare dso_local void @set_current_def(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_adjust_info_base_length(%struct.VEC_adjust_info_base* %vec_) unnamed_addr #0 !dbg !5763 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_base* %vec_, metadata !5769, metadata !DIExpression()), !dbg !5770
  %tobool = icmp eq %struct.VEC_adjust_info_base* %vec_, null, !dbg !5771
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5771

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_adjust_info_base, %struct.VEC_adjust_info_base* %vec_, i64 0, i32 0, !dbg !5771
  %0 = load i32, i32* %num, align 8, !dbg !5771
  br label %cond.end, !dbg !5771

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5771
  ret i32 %cond, !dbg !5771
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.adjust_info* @VEC_adjust_info_base_last(%struct.VEC_adjust_info_base* %vec_) unnamed_addr #0 !dbg !5772 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_base* %vec_, metadata !5776, metadata !DIExpression()), !dbg !5777
  br label %land.end, !dbg !5778

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_adjust_info_base, %struct.VEC_adjust_info_base* %vec_, i64 0, i32 0, !dbg !5778
  %0 = load i32, i32* %num2, align 8, !dbg !5778
  %sub = add i32 %0, -1, !dbg !5778
  %idxprom = zext i32 %sub to i64, !dbg !5778
  %arrayidx = getelementptr inbounds %struct.VEC_adjust_info_base, %struct.VEC_adjust_info_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5778
  ret %struct.adjust_info* %arrayidx, !dbg !5778
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_adjust_info_base_pop(%struct.VEC_adjust_info_base* %vec_) unnamed_addr #0 !dbg !5779 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_base* %vec_, metadata !5783, metadata !DIExpression()), !dbg !5784
  %num1 = getelementptr inbounds %struct.VEC_adjust_info_base, %struct.VEC_adjust_info_base* %vec_, i64 0, i32 0, !dbg !5785
  %0 = load i32, i32* %num1, align 8, !dbg !5785
  %dec = add i32 %0, -1, !dbg !5785
  store i32 %dec, i32* %num1, align 8, !dbg !5785
  ret void, !dbg !5785
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_adjust_info_stack_free(%struct.VEC_adjust_info_stack** %vec_) unnamed_addr #0 !dbg !5786 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_adjust_info_stack** @adjust_vec, metadata !5790, metadata !DIExpression()), !dbg !5791
  %0 = load %struct.VEC_adjust_info_stack*, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5792
  %tobool = icmp eq %struct.VEC_adjust_info_stack* %0, null, !dbg !5792
  br i1 %tobool, label %if.end, label %if.then, !dbg !5794

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_adjust_info_stack* %0 to i8*, !dbg !5794
  tail call void @vec_stack_free(i8* nonnull %1) #6, !dbg !5792
  br label %if.end, !dbg !5792

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_adjust_info_stack* null, %struct.VEC_adjust_info_stack** @adjust_vec, align 8, !dbg !5794
  ret void, !dbg !5794
}

declare dso_local void @vec_stack_free(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @initial_condition_in_loop_num(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @vect_create_addr_base_for_vector_ref(%union.gimple_statement_d*, %struct.gimple_seq_d**, %union.tree_node*, %struct.loop*) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %vec_, i32 %ix_, %struct.data_reference** %ptr) unnamed_addr #0 !dbg !5795 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_base* %vec_, metadata !5802, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5803, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.value(metadata %struct.data_reference** %ptr, metadata !5804, metadata !DIExpression()), !dbg !5805
  %tobool = icmp eq %struct.VEC_data_reference_p_base* %vec_, null, !dbg !5806
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5806

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 0, !dbg !5806
  %0 = load i32, i32* %num, align 8, !dbg !5806
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5806
  br i1 %cmp, label %if.then, label %if.else, !dbg !5808

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5809
  %arrayidx = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5809
  %1 = load %struct.data_reference*, %struct.data_reference** %arrayidx, align 8, !dbg !5809
  br label %return, !dbg !5809

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5811

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_reference* [ null, %if.else ], [ %1, %if.then ], !dbg !5813
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5813
  store %struct.data_reference* %storemerge, %struct.data_reference** %ptr, align 8, !dbg !5813
  ret i32 %retval.0, !dbg !5808
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_update_init_of_dr(%struct.data_reference* %dr, %union.tree_node* %niters) unnamed_addr #5 !dbg !5814 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !5818, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.value(metadata %union.tree_node* %niters, metadata !5819, metadata !DIExpression()), !dbg !5821
  %offset1 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 1, !dbg !5822
  %0 = load %union.tree_node*, %union.tree_node** %offset1, align 8, !dbg !5822
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5820, metadata !DIExpression()), !dbg !5821
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5823
  %call = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %1, %union.tree_node* %niters) #6, !dbg !5823
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5823
  %step = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 3, !dbg !5823
  %3 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5823
  %call3 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %2, %union.tree_node* %3) #6, !dbg !5823
  %call4 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %1, %union.tree_node* %call, %union.tree_node* %call3) #6, !dbg !5823
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5819, metadata !DIExpression()), !dbg !5821
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5824
  %call5 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %4, %union.tree_node* %0) #6, !dbg !5824
  %call6 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %4, %union.tree_node* %call5, %union.tree_node* %call4) #6, !dbg !5824
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5820, metadata !DIExpression()), !dbg !5821
  store %union.tree_node* %call6, %union.tree_node** %offset1, align 8, !dbg !5825
  ret void, !dbg !5826
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %vec_, i32 %ix_, %union.gimple_statement_d** %ptr) unnamed_addr #0 !dbg !5827 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !5832, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5833, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %ptr, metadata !5834, metadata !DIExpression()), !dbg !5835
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !5836
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5836

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !5836
  %0 = load i32, i32* %num, align 8, !dbg !5836
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5836
  br i1 %cmp, label %if.then, label %if.else, !dbg !5838

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5839
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5839
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !5839
  br label %return, !dbg !5839

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5841

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.gimple_statement_d* [ null, %if.else ], [ %1, %if.then ], !dbg !5843
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5843
  store %union.gimple_statement_d* %storemerge, %union.gimple_statement_d** %ptr, align 8, !dbg !5843
  ret i32 %retval.0, !dbg !5838
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5844 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5848, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !5849, metadata !DIExpression()), !dbg !5850
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5851
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* null) #6, !dbg !5852
  ret %union.tree_node* %call, !dbg !5853
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gimple_seq_add_stmt(%struct.gimple_seq_d**, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %vec_, i32 %ix_, %struct.data_dependence_relation** %ptr) unnamed_addr #0 !dbg !5854 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !5859, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5860, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ptr, metadata !5861, metadata !DIExpression()), !dbg !5862
  %tobool = icmp eq %struct.VEC_ddr_p_base* %vec_, null, !dbg !5863
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5863

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 0, !dbg !5863
  %0 = load i32, i32* %num, align 8, !dbg !5863
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5863
  br i1 %cmp, label %if.then, label %if.else, !dbg !5865

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5866
  %arrayidx = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5866
  %1 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %arrayidx, align 8, !dbg !5866
  br label %return, !dbg !5866

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5868

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_dependence_relation* [ null, %if.else ], [ %1, %if.then ], !dbg !5870
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5870
  store %struct.data_dependence_relation* %storemerge, %struct.data_dependence_relation** %ptr, align 8, !dbg !5870
  ret i32 %retval.0, !dbg !5865
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @vect_vfa_segment_size(%struct.data_reference* %dr, %union.tree_node* %vect_factor) unnamed_addr #5 !dbg !5871 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !5875, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata %union.tree_node* %vect_factor, metadata !5876, metadata !DIExpression()), !dbg !5881
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !5882
  %step = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 3, !dbg !5882
  %1 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5882
  %call = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %0, %union.tree_node* %1, %union.tree_node* %vect_factor) #6, !dbg !5882
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5877, metadata !DIExpression()), !dbg !5881
  %call1 = tail call i32 @vect_supportable_dr_alignment(%struct.data_reference* %dr) #6, !dbg !5883
  %cmp = icmp eq i32 %call1, 3, !dbg !5884
  br i1 %cmp, label %if.then, label %if.end, !dbg !5885

if.then:                                          ; preds = %entry
  %stmt = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 0, !dbg !5886
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5886
  %call2 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %2) #8, !dbg !5886
  %vectype = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call2, i64 0, i32 5, !dbg !5886
  %3 = bitcast %union.tree_node** %vectype to %struct.tree_type**, !dbg !5886
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !5886
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 3, !dbg !5886
  %5 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !5886
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5878, metadata !DIExpression()), !dbg !5887
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !5888
  %call3 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %6, %union.tree_node* %call, %union.tree_node* %5) #6, !dbg !5888
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5877, metadata !DIExpression()), !dbg !5881
  br label %if.end, !dbg !5889

if.end:                                           ; preds = %if.then, %entry
  %segment_length.0 = phi %union.tree_node* [ %call3, %if.then ], [ %call, %entry ], !dbg !5881
  call void @llvm.dbg.value(metadata %union.tree_node* %segment_length.0, metadata !5877, metadata !DIExpression()), !dbg !5881
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5890
  %call4 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %7, %union.tree_node* %segment_length.0) #6, !dbg !5890
  ret %union.tree_node* %call4, !dbg !5891
}

declare dso_local i32 @vect_supportable_dr_alignment(%struct.data_reference*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2172, !2173, !2174}
!llvm.ident = !{!2175}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "adjust_vec", scope: !2, file: !3, line: 132, type: !2150, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !501, globals: !2171, nameTableKind: None)
!3 = !DIFile(filename: "tree-vect-loop-manip.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !154, !158, !163, !182, !189, !196, !390, !397, !436, !452, !459, !470, !475}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !146, line: 31, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149, !150, !151, !152, !153}
!148 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !146, line: 91, baseType: !7, size: 32, elements: !155)
!155 = !{!156, !157}
!156 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !159, line: 474, baseType: !7, size: 32, elements: !160)
!159 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!160 = !{!161, !162}
!161 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !164, line: 280, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!166 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !164, line: 1817, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188}
!184 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !164, line: 1805, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !164, line: 39, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!198 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!209 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!210 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!213 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!214 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!216 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!217 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!218 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!219 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!220 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!221 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!222 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!223 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!225 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!226 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!227 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!228 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!229 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!230 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!231 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!232 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!233 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!234 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!235 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!236 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!237 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!238 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!239 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!240 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!241 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!242 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!243 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!244 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!245 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!246 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!247 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!248 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!249 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!250 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!251 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!252 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!253 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!254 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!255 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!256 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!257 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!258 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!259 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!260 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!261 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!262 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!263 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!264 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!265 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!266 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!267 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!268 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!269 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!270 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!271 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!272 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!273 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!274 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!275 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!276 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!277 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!278 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!280 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!281 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!282 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!283 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!284 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!285 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!286 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!287 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!288 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!289 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!290 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!291 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!292 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!293 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!294 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!295 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!296 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!297 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!298 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!299 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!300 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!301 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!302 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!303 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!304 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!305 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!306 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!307 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!308 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!309 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!310 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!311 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!312 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!313 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!314 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!315 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!316 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!317 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!318 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!320 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!321 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!322 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!323 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!324 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!325 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!326 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!327 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!328 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!329 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!330 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!331 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!332 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!333 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!334 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!335 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!336 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!337 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!338 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!339 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!340 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!341 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!342 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!343 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!344 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!345 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!346 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!347 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!348 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!349 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!350 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!362 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!363 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!364 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!365 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!366 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!367 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!383 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!384 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!385 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!386 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!387 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!388 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!389 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !391, line: 119, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396}
!393 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !398, line: 51, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435}
!400 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!404 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!405 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!406 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!407 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!408 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!409 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!410 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!411 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!412 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!413 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!414 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!415 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!416 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!417 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!418 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!419 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!420 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!421 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!422 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!423 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!428 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!429 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!430 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!431 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!434 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!435 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!436 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stmt_vec_info_type", file: !437, line: 336, baseType: !7, size: 32, elements: !438)
!437 = !DIFile(filename: "./tree-vectorizer.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!438 = !{!439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451}
!439 = !DIEnumerator(name: "undef_vec_info_type", value: 0, isUnsigned: true)
!440 = !DIEnumerator(name: "load_vec_info_type", value: 1, isUnsigned: true)
!441 = !DIEnumerator(name: "store_vec_info_type", value: 2, isUnsigned: true)
!442 = !DIEnumerator(name: "op_vec_info_type", value: 3, isUnsigned: true)
!443 = !DIEnumerator(name: "call_vec_info_type", value: 4, isUnsigned: true)
!444 = !DIEnumerator(name: "assignment_vec_info_type", value: 5, isUnsigned: true)
!445 = !DIEnumerator(name: "condition_vec_info_type", value: 6, isUnsigned: true)
!446 = !DIEnumerator(name: "reduc_vec_info_type", value: 7, isUnsigned: true)
!447 = !DIEnumerator(name: "induc_vec_info_type", value: 8, isUnsigned: true)
!448 = !DIEnumerator(name: "type_promotion_vec_info_type", value: 9, isUnsigned: true)
!449 = !DIEnumerator(name: "type_demotion_vec_info_type", value: 10, isUnsigned: true)
!450 = !DIEnumerator(name: "type_conversion_vec_info_type", value: 11, isUnsigned: true)
!451 = !DIEnumerator(name: "loop_exit_ctrl_vec_info_type", value: 12, isUnsigned: true)
!452 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vect_relevant", file: !437, line: 354, baseType: !7, size: 32, elements: !453)
!453 = !{!454, !455, !456, !457, !458}
!454 = !DIEnumerator(name: "vect_unused_in_scope", value: 0, isUnsigned: true)
!455 = !DIEnumerator(name: "vect_used_in_outer_by_reduction", value: 1, isUnsigned: true)
!456 = !DIEnumerator(name: "vect_used_in_outer", value: 2, isUnsigned: true)
!457 = !DIEnumerator(name: "vect_used_by_reduction", value: 3, isUnsigned: true)
!458 = !DIEnumerator(name: "vect_used_in_scope", value: 4, isUnsigned: true)
!459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vect_def_type", file: !437, line: 57, baseType: !7, size: 32, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIEnumerator(name: "vect_uninitialized_def", value: 0, isUnsigned: true)
!462 = !DIEnumerator(name: "vect_constant_def", value: 1, isUnsigned: true)
!463 = !DIEnumerator(name: "vect_external_def", value: 2, isUnsigned: true)
!464 = !DIEnumerator(name: "vect_internal_def", value: 3, isUnsigned: true)
!465 = !DIEnumerator(name: "vect_induction_def", value: 4, isUnsigned: true)
!466 = !DIEnumerator(name: "vect_reduction_def", value: 5, isUnsigned: true)
!467 = !DIEnumerator(name: "vect_double_reduction_def", value: 6, isUnsigned: true)
!468 = !DIEnumerator(name: "vect_nested_cycle", value: 7, isUnsigned: true)
!469 = !DIEnumerator(name: "vect_unknown_def_type", value: 8, isUnsigned: true)
!470 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "slp_vect_type", file: !437, line: 390, baseType: !7, size: 32, elements: !471)
!471 = !{!472, !473, !474}
!472 = !DIEnumerator(name: "loop_vect", value: 0, isUnsigned: true)
!473 = !DIEnumerator(name: "pure_slp", value: 1, isUnsigned: true)
!474 = !DIEnumerator(name: "hybrid", value: 2, isUnsigned: true)
!475 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !398, line: 727, baseType: !7, size: 32, elements: !476)
!476 = !{!477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500}
!477 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!478 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!479 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!480 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!481 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!482 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!483 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!484 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!485 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!486 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!487 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!488 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!489 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!490 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!491 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!492 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!493 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!494 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!495 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!496 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!497 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!498 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!499 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!500 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!501 = !{!502, !503, !504, !505, !508, !509, !511, !638, !1863, !196, !1864, !1867, !7, !2150, !1405, !869, !506, !1874, !513, !2168, !2170, !565, !1960, !835, !1974}
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!504 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !507)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !512, line: 56, baseType: !513)
!512 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !164, line: 3371, size: 1792, elements: !515)
!515 = !{!516, !549, !555, !568, !587, !598, !603, !612, !618, !631, !643, !681, !1191, !1219, !1236, !1237, !1242, !1251, !1257, !1262, !1266, !1270, !1514, !1561, !1567, !1573, !1580, !1593, !1607, !1624, !1636, !1658, !1673, !1845}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !514, file: !164, line: 3372, baseType: !517, size: 64)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !164, line: 360, size: 64, elements: !518)
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !517, file: !164, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !517, file: !164, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !517, file: !164, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !517, file: !164, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !517, file: !164, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !517, file: !164, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !517, file: !164, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !517, file: !164, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !517, file: !164, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !517, file: !164, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !517, file: !164, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !517, file: !164, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !517, file: !164, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !517, file: !164, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !517, file: !164, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !517, file: !164, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !517, file: !164, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !517, file: !164, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !517, file: !164, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !517, file: !164, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !517, file: !164, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !517, file: !164, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !517, file: !164, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !517, file: !164, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !517, file: !164, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !517, file: !164, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !517, file: !164, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !517, file: !164, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !517, file: !164, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !517, file: !164, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !514, file: !164, line: 3373, baseType: !550, size: 192)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !164, line: 402, size: 192, elements: !551)
!551 = !{!552, !553, !554}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !550, file: !164, line: 403, baseType: !517, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !550, file: !164, line: 404, baseType: !511, size: 64, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !550, file: !164, line: 405, baseType: !511, size: 64, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !514, file: !164, line: 3374, baseType: !556, size: 320)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !164, line: 1384, size: 320, elements: !557)
!557 = !{!558, !559}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !556, file: !164, line: 1385, baseType: !550, size: 192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !556, file: !164, line: 1386, baseType: !560, size: 128, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !561, line: 58, baseType: !562)
!561 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !561, line: 54, size: 128, elements: !563)
!563 = !{!564, !566}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !562, file: !561, line: 56, baseType: !565, size: 64)
!565 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !562, file: !561, line: 57, baseType: !567, size: 64, offset: 64)
!567 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !514, file: !164, line: 3375, baseType: !569, size: 256)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !164, line: 1397, size: 256, elements: !570)
!570 = !{!571, !572}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !569, file: !164, line: 1398, baseType: !550, size: 192)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !569, file: !164, line: 1399, baseType: !573, size: 64, offset: 192)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !575, line: 52, size: 256, elements: !576)
!575 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!576 = !{!577, !578, !579, !580, !581, !582, !583}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !574, file: !575, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !574, file: !575, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !574, file: !575, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !574, file: !575, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !574, file: !575, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !574, file: !575, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !574, file: !575, line: 62, baseType: !584, size: 192, offset: 64)
!584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 192, elements: !585)
!585 = !{!586}
!586 = !DISubrange(count: 3)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !514, file: !164, line: 3376, baseType: !588, size: 256)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !164, line: 1408, size: 256, elements: !589)
!589 = !{!590, !591}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !588, file: !164, line: 1409, baseType: !550, size: 192)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !588, file: !164, line: 1410, baseType: !592, size: 64, offset: 192)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !594, line: 27, size: 192, elements: !595)
!594 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!595 = !{!596, !597}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !593, file: !594, line: 29, baseType: !560, size: 128)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !593, file: !594, line: 30, baseType: !5, size: 32, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !514, file: !164, line: 3377, baseType: !599, size: 256)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !164, line: 1437, size: 256, elements: !600)
!600 = !{!601, !602}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !599, file: !164, line: 1438, baseType: !550, size: 192)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !599, file: !164, line: 1439, baseType: !511, size: 64, offset: 192)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !514, file: !164, line: 3378, baseType: !604, size: 256)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !164, line: 1418, size: 256, elements: !605)
!605 = !{!606, !607, !608}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !604, file: !164, line: 1419, baseType: !550, size: 192)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !604, file: !164, line: 1420, baseType: !504, size: 32, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !604, file: !164, line: 1421, baseType: !609, size: 8, offset: 224)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 8, elements: !610)
!610 = !{!611}
!611 = !DISubrange(count: 1)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !514, file: !164, line: 3379, baseType: !613, size: 320)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !164, line: 1428, size: 320, elements: !614)
!614 = !{!615, !616, !617}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !613, file: !164, line: 1429, baseType: !550, size: 192)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !613, file: !164, line: 1430, baseType: !511, size: 64, offset: 192)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !613, file: !164, line: 1431, baseType: !511, size: 64, offset: 256)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !514, file: !164, line: 3380, baseType: !619, size: 320)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !164, line: 1460, size: 320, elements: !620)
!620 = !{!621, !622}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !619, file: !164, line: 1461, baseType: !550, size: 192)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !619, file: !164, line: 1462, baseType: !623, size: 128, offset: 192)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !624, line: 31, size: 128, elements: !625)
!624 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!625 = !{!626, !629, !630}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !623, file: !624, line: 32, baseType: !627, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !503)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !623, file: !624, line: 33, baseType: !7, size: 32, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !623, file: !624, line: 34, baseType: !7, size: 32, offset: 96)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !514, file: !164, line: 3381, baseType: !632, size: 384)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !164, line: 2507, size: 384, elements: !633)
!633 = !{!634, !635, !640, !641, !642}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !632, file: !164, line: 2508, baseType: !550, size: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !632, file: !164, line: 2509, baseType: !636, size: 32, offset: 192)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !637, line: 58, baseType: !638)
!637 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !639, line: 44, baseType: !7)
!639 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!640 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !632, file: !164, line: 2510, baseType: !7, size: 32, offset: 224)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !632, file: !164, line: 2511, baseType: !511, size: 64, offset: 256)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !632, file: !164, line: 2512, baseType: !511, size: 64, offset: 320)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !514, file: !164, line: 3382, baseType: !644, size: 896)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !164, line: 2652, size: 896, elements: !645)
!645 = !{!646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !644, file: !164, line: 2653, baseType: !632, size: 384)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !644, file: !164, line: 2654, baseType: !511, size: 64, offset: 384)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !644, file: !164, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !644, file: !164, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !644, file: !164, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !644, file: !164, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !644, file: !164, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !644, file: !164, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !644, file: !164, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !644, file: !164, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !644, file: !164, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !644, file: !164, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !644, file: !164, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !644, file: !164, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !644, file: !164, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !644, file: !164, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !644, file: !164, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !644, file: !164, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !644, file: !164, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !644, file: !164, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !644, file: !164, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !644, file: !164, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !644, file: !164, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !644, file: !164, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !644, file: !164, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !644, file: !164, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !644, file: !164, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !644, file: !164, line: 2703, baseType: !7, size: 32, offset: 512)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !644, file: !164, line: 2705, baseType: !511, size: 64, offset: 576)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !644, file: !164, line: 2706, baseType: !511, size: 64, offset: 640)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !644, file: !164, line: 2707, baseType: !511, size: 64, offset: 704)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !644, file: !164, line: 2708, baseType: !511, size: 64, offset: 768)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !644, file: !164, line: 2711, baseType: !679, size: 64, offset: 832)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !164, line: 2711, flags: DIFlagFwdDecl)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !514, file: !164, line: 3383, baseType: !682, size: 960)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !164, line: 2756, size: 960, elements: !683)
!683 = !{!684, !685}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !682, file: !164, line: 2757, baseType: !644, size: 896)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !682, file: !164, line: 2758, baseType: !686, size: 64, offset: 896)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !512, line: 50, baseType: !687)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !689, line: 240, size: 384, elements: !690)
!689 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!690 = !{!691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !688, file: !689, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !688, file: !689, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !688, file: !689, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !688, file: !689, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !688, file: !689, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !688, file: !689, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !688, file: !689, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !688, file: !689, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !688, file: !689, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !688, file: !689, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !688, file: !689, line: 321, baseType: !702, size: 320, offset: 64)
!702 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !689, line: 315, size: 320, elements: !703)
!703 = !{!704, !1158, !1160, !1189, !1190}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !702, file: !689, line: 316, baseType: !705, size: 64)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 64, elements: !610)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !689, line: 183, baseType: !707)
!707 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !689, line: 166, size: 64, elements: !708)
!708 = !{!709, !710, !711, !712, !713, !721, !722, !734, !737, !797, !798, !1135, !1148, !1155}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !707, file: !689, line: 168, baseType: !504, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !707, file: !689, line: 169, baseType: !7, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !707, file: !689, line: 170, baseType: !509, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !707, file: !689, line: 171, baseType: !686, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !707, file: !689, line: 172, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !512, line: 53, baseType: !715)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !689, line: 359, size: 128, elements: !717)
!717 = !{!718, !719}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !716, file: !689, line: 360, baseType: !504, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !716, file: !689, line: 361, baseType: !720, size: 64, offset: 64)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 64, elements: !610)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !707, file: !689, line: 173, baseType: !5, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !707, file: !689, line: 174, baseType: !723, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !689, line: 133, baseType: !724)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !689, line: 115, size: 32, elements: !725)
!725 = !{!726, !727, !728, !729, !730, !731, !732, !733}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !724, file: !689, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !724, file: !689, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !724, file: !689, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !724, file: !689, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !724, file: !689, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !724, file: !689, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !724, file: !689, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !724, file: !689, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !707, file: !689, line: 175, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !689, line: 175, flags: DIFlagFwdDecl)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !707, file: !689, line: 176, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !740, line: 75, size: 256, elements: !741)
!740 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!741 = !{!742, !756, !757, !758}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !739, file: !740, line: 76, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !740, line: 68, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !740, line: 63, size: 320, elements: !746)
!746 = !{!747, !749, !750, !751}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !745, file: !740, line: 64, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !745, file: !740, line: 65, baseType: !748, size: 64, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !745, file: !740, line: 66, baseType: !7, size: 32, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !745, file: !740, line: 67, baseType: !752, size: 128, offset: 192)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 128, elements: !754)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !740, line: 29, baseType: !565)
!754 = !{!755}
!755 = !DISubrange(count: 2)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !739, file: !740, line: 77, baseType: !743, size: 64, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !739, file: !740, line: 78, baseType: !7, size: 32, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !739, file: !740, line: 79, baseType: !759, size: 64, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !740, line: 49, baseType: !761)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !740, line: 45, size: 832, elements: !762)
!762 = !{!763, !764, !765}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !761, file: !740, line: 46, baseType: !748, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !761, file: !740, line: 47, baseType: !738, size: 64, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !761, file: !740, line: 48, baseType: !766, size: 704, offset: 128)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !767, line: 164, size: 704, elements: !768)
!767 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!768 = !{!769, !770, !780, !781, !782, !783, !784, !785, !789, !793, !794, !795, !796}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !766, file: !767, line: 166, baseType: !567, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !766, file: !767, line: 167, baseType: !771, size: 64, offset: 64)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !767, line: 157, size: 192, elements: !773)
!773 = !{!774, !775, !776}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !772, file: !767, line: 159, baseType: !506, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !772, file: !767, line: 160, baseType: !771, size: 64, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !772, file: !767, line: 161, baseType: !777, size: 32, offset: 128)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 32, elements: !778)
!778 = !{!779}
!779 = !DISubrange(count: 4)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !766, file: !767, line: 168, baseType: !506, size: 64, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !766, file: !767, line: 169, baseType: !506, size: 64, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !766, file: !767, line: 170, baseType: !506, size: 64, offset: 256)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !766, file: !767, line: 171, baseType: !567, size: 64, offset: 320)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !766, file: !767, line: 172, baseType: !504, size: 32, offset: 384)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !766, file: !767, line: 176, baseType: !786, size: 64, offset: 448)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!771, !508, !567}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !766, file: !767, line: 177, baseType: !790, size: 64, offset: 512)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{null, !508, !771}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !766, file: !767, line: 178, baseType: !508, size: 64, offset: 576)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !766, file: !767, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !766, file: !767, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !766, file: !767, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !707, file: !689, line: 177, baseType: !511, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !707, file: !689, line: 178, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !801)
!801 = !{!802, !1047, !1048, !1049, !1105, !1109, !1110, !1111, !1129, !1130, !1131, !1132, !1133, !1134}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !800, file: !135, line: 219, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !806)
!806 = !{!807}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !805, file: !135, line: 151, baseType: !808, size: 128)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !810)
!810 = !{!811, !812, !813}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !809, file: !135, line: 150, baseType: !7, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !809, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !809, file: !135, line: 150, baseType: !814, size: 64, offset: 64)
!814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !815, size: 64, elements: !610)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !512, line: 108, baseType: !816)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !818)
!818 = !{!819, !820, !821, !1039, !1040, !1041, !1042, !1043, !1044, !1045}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !817, file: !135, line: 124, baseType: !799, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !817, file: !135, line: 125, baseType: !799, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !817, file: !135, line: 131, baseType: !822, size: 64, offset: 128)
!822 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !823)
!823 = !{!824, !1038}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !822, file: !135, line: 129, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !512, line: 66, baseType: !826)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !398, line: 143, size: 192, elements: !828)
!828 = !{!829, !1036, !1037}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !827, file: !398, line: 145, baseType: !830, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !512, line: 69, baseType: !831)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !398, line: 136, size: 192, elements: !833)
!833 = !{!834, !1034, !1035}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !832, file: !398, line: 137, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !512, line: 58, baseType: !836)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !398, line: 737, size: 768, elements: !838)
!838 = !{!839, !856, !889, !895, !900, !905, !912, !918, !924, !929, !943, !948, !954, !959, !969, !974, !992, !999, !1006, !1012, !1017, !1023, !1029}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !837, file: !398, line: 738, baseType: !840, size: 256)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !398, line: 271, size: 256, elements: !841)
!841 = !{!842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !840, file: !398, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !840, file: !398, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !840, file: !398, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !840, file: !398, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !840, file: !398, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !840, file: !398, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !840, file: !398, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !840, file: !398, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !840, file: !398, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !840, file: !398, line: 312, baseType: !7, size: 32, offset: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !840, file: !398, line: 316, baseType: !636, size: 32, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !840, file: !398, line: 319, baseType: !7, size: 32, offset: 96)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !840, file: !398, line: 323, baseType: !799, size: 64, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !840, file: !398, line: 327, baseType: !511, size: 64, offset: 192)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !837, file: !398, line: 739, baseType: !857, size: 448)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !398, line: 350, size: 448, elements: !858)
!858 = !{!859, !887}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !857, file: !398, line: 353, baseType: !860, size: 384)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !398, line: 333, size: 384, elements: !861)
!861 = !{!862, !863, !870}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !860, file: !398, line: 336, baseType: !840, size: 256)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !860, file: !398, line: 343, baseType: !864, size: 64, offset: 256)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !391, line: 37, size: 128, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !865, file: !391, line: 39, baseType: !864, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !865, file: !391, line: 40, baseType: !869, size: 64, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !860, file: !398, line: 344, baseType: !871, size: 64, offset: 320)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !391, line: 45, size: 320, elements: !873)
!873 = !{!874, !875}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !872, file: !391, line: 47, baseType: !871, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !872, file: !391, line: 48, baseType: !876, size: 256, offset: 64)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !164, line: 1883, size: 256, elements: !877)
!877 = !{!878, !880, !881, !886}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !876, file: !164, line: 1884, baseType: !879, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !876, file: !164, line: 1885, baseType: !879, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !876, file: !164, line: 1891, baseType: !882, size: 64, offset: 128)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !876, file: !164, line: 1891, size: 64, elements: !883)
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !882, file: !164, line: 1891, baseType: !835, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !882, file: !164, line: 1891, baseType: !511, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !876, file: !164, line: 1892, baseType: !869, size: 64, offset: 192)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !857, file: !398, line: 359, baseType: !888, size: 64, offset: 384)
!888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 64, elements: !610)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !837, file: !398, line: 740, baseType: !890, size: 512)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !398, line: 365, size: 512, elements: !891)
!891 = !{!892, !893, !894}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !890, file: !398, line: 368, baseType: !860, size: 384)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !890, file: !398, line: 373, baseType: !511, size: 64, offset: 384)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !890, file: !398, line: 374, baseType: !511, size: 64, offset: 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !837, file: !398, line: 741, baseType: !896, size: 576)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !398, line: 380, size: 576, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !896, file: !398, line: 383, baseType: !890, size: 512)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !896, file: !398, line: 389, baseType: !888, size: 64, offset: 512)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !837, file: !398, line: 742, baseType: !901, size: 320)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !398, line: 395, size: 320, elements: !902)
!902 = !{!903, !904}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !901, file: !398, line: 397, baseType: !840, size: 256)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !901, file: !398, line: 400, baseType: !825, size: 64, offset: 256)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !837, file: !398, line: 743, baseType: !906, size: 448)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !398, line: 406, size: 448, elements: !907)
!907 = !{!908, !909, !910, !911}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !906, file: !398, line: 408, baseType: !840, size: 256)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !906, file: !398, line: 412, baseType: !511, size: 64, offset: 256)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !906, file: !398, line: 420, baseType: !511, size: 64, offset: 320)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !906, file: !398, line: 423, baseType: !825, size: 64, offset: 384)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !837, file: !398, line: 744, baseType: !913, size: 384)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !398, line: 429, size: 384, elements: !914)
!914 = !{!915, !916, !917}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !913, file: !398, line: 431, baseType: !840, size: 256)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !913, file: !398, line: 434, baseType: !511, size: 64, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !913, file: !398, line: 437, baseType: !825, size: 64, offset: 320)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !837, file: !398, line: 745, baseType: !919, size: 384)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !398, line: 443, size: 384, elements: !920)
!920 = !{!921, !922, !923}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !919, file: !398, line: 445, baseType: !840, size: 256)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !919, file: !398, line: 449, baseType: !511, size: 64, offset: 256)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !919, file: !398, line: 453, baseType: !825, size: 64, offset: 320)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !837, file: !398, line: 746, baseType: !925, size: 320)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !398, line: 459, size: 320, elements: !926)
!926 = !{!927, !928}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !925, file: !398, line: 461, baseType: !840, size: 256)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !925, file: !398, line: 464, baseType: !511, size: 64, offset: 256)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !837, file: !398, line: 747, baseType: !930, size: 768)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !398, line: 469, size: 768, elements: !931)
!931 = !{!932, !933, !934, !935, !936}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !930, file: !398, line: 471, baseType: !840, size: 256)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !930, file: !398, line: 474, baseType: !7, size: 32, offset: 256)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !930, file: !398, line: 475, baseType: !7, size: 32, offset: 288)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !930, file: !398, line: 478, baseType: !511, size: 64, offset: 320)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !930, file: !398, line: 481, baseType: !937, size: 384, offset: 384)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 384, elements: !610)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !164, line: 1917, size: 384, elements: !939)
!939 = !{!940, !941, !942}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !938, file: !164, line: 1920, baseType: !876, size: 256)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !938, file: !164, line: 1921, baseType: !511, size: 64, offset: 256)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !938, file: !164, line: 1922, baseType: !636, size: 32, offset: 320)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !837, file: !398, line: 748, baseType: !944, size: 320)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !398, line: 487, size: 320, elements: !945)
!945 = !{!946, !947}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !944, file: !398, line: 490, baseType: !840, size: 256)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !944, file: !398, line: 494, baseType: !504, size: 32, offset: 256)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !837, file: !398, line: 749, baseType: !949, size: 384)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !398, line: 500, size: 384, elements: !950)
!950 = !{!951, !952, !953}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !949, file: !398, line: 502, baseType: !840, size: 256)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !949, file: !398, line: 506, baseType: !825, size: 64, offset: 256)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !949, file: !398, line: 510, baseType: !825, size: 64, offset: 320)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !837, file: !398, line: 750, baseType: !955, size: 320)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !398, line: 529, size: 320, elements: !956)
!956 = !{!957, !958}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !955, file: !398, line: 531, baseType: !840, size: 256)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !955, file: !398, line: 540, baseType: !825, size: 64, offset: 256)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !837, file: !398, line: 751, baseType: !960, size: 704)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !398, line: 546, size: 704, elements: !961)
!961 = !{!962, !963, !964, !965, !966, !967, !968}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !960, file: !398, line: 549, baseType: !890, size: 512)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !960, file: !398, line: 553, baseType: !509, size: 64, offset: 512)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !960, file: !398, line: 557, baseType: !503, size: 8, offset: 576)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !960, file: !398, line: 558, baseType: !503, size: 8, offset: 584)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !960, file: !398, line: 559, baseType: !503, size: 8, offset: 592)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !960, file: !398, line: 560, baseType: !503, size: 8, offset: 600)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !960, file: !398, line: 566, baseType: !888, size: 64, offset: 640)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !837, file: !398, line: 752, baseType: !970, size: 384)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !398, line: 571, size: 384, elements: !971)
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !970, file: !398, line: 573, baseType: !901, size: 320)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !970, file: !398, line: 577, baseType: !511, size: 64, offset: 320)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !837, file: !398, line: 753, baseType: !975, size: 576)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !398, line: 600, size: 576, elements: !976)
!976 = !{!977, !978, !979, !982, !991}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !975, file: !398, line: 602, baseType: !901, size: 320)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !975, file: !398, line: 605, baseType: !511, size: 64, offset: 320)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !975, file: !398, line: 609, baseType: !980, size: 64, offset: 384)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !981, line: 46, baseType: !565)
!981 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!982 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !975, file: !398, line: 612, baseType: !983, size: 64, offset: 448)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !398, line: 581, size: 320, elements: !985)
!985 = !{!986, !987, !988, !989, !990}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !984, file: !398, line: 583, baseType: !196, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !984, file: !398, line: 586, baseType: !511, size: 64, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !984, file: !398, line: 589, baseType: !511, size: 64, offset: 128)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !984, file: !398, line: 592, baseType: !511, size: 64, offset: 192)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !984, file: !398, line: 595, baseType: !511, size: 64, offset: 256)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !975, file: !398, line: 616, baseType: !825, size: 64, offset: 512)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !837, file: !398, line: 754, baseType: !993, size: 512)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !398, line: 622, size: 512, elements: !994)
!994 = !{!995, !996, !997, !998}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !993, file: !398, line: 624, baseType: !901, size: 320)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !993, file: !398, line: 628, baseType: !511, size: 64, offset: 320)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !993, file: !398, line: 632, baseType: !511, size: 64, offset: 384)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !993, file: !398, line: 636, baseType: !511, size: 64, offset: 448)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !837, file: !398, line: 755, baseType: !1000, size: 704)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !398, line: 642, size: 704, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1000, file: !398, line: 644, baseType: !993, size: 512)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1000, file: !398, line: 648, baseType: !511, size: 64, offset: 512)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1000, file: !398, line: 652, baseType: !511, size: 64, offset: 576)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1000, file: !398, line: 653, baseType: !511, size: 64, offset: 640)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !837, file: !398, line: 756, baseType: !1007, size: 448)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !398, line: 663, size: 448, elements: !1008)
!1008 = !{!1009, !1010, !1011}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1007, file: !398, line: 665, baseType: !901, size: 320)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1007, file: !398, line: 668, baseType: !511, size: 64, offset: 320)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1007, file: !398, line: 673, baseType: !511, size: 64, offset: 384)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !837, file: !398, line: 757, baseType: !1013, size: 384)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !398, line: 694, size: 384, elements: !1014)
!1014 = !{!1015, !1016}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1013, file: !398, line: 696, baseType: !901, size: 320)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1013, file: !398, line: 699, baseType: !511, size: 64, offset: 320)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !837, file: !398, line: 758, baseType: !1018, size: 384)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !398, line: 681, size: 384, elements: !1019)
!1019 = !{!1020, !1021, !1022}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1018, file: !398, line: 683, baseType: !840, size: 256)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1018, file: !398, line: 686, baseType: !511, size: 64, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1018, file: !398, line: 689, baseType: !511, size: 64, offset: 320)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !837, file: !398, line: 759, baseType: !1024, size: 384)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !398, line: 707, size: 384, elements: !1025)
!1025 = !{!1026, !1027, !1028}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1024, file: !398, line: 709, baseType: !840, size: 256)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1024, file: !398, line: 712, baseType: !511, size: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1024, file: !398, line: 712, baseType: !511, size: 64, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !837, file: !398, line: 760, baseType: !1030, size: 320)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !398, line: 718, size: 320, elements: !1031)
!1031 = !{!1032, !1033}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1030, file: !398, line: 720, baseType: !840, size: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1030, file: !398, line: 723, baseType: !511, size: 64, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !832, file: !398, line: 138, baseType: !831, size: 64, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !832, file: !398, line: 139, baseType: !831, size: 64, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !827, file: !398, line: 146, baseType: !830, size: 64, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !827, file: !398, line: 152, baseType: !825, size: 64, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !822, file: !135, line: 130, baseType: !686, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !817, file: !135, line: 134, baseType: !508, size: 64, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !817, file: !135, line: 137, baseType: !511, size: 64, offset: 256)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !817, file: !135, line: 138, baseType: !636, size: 32, offset: 320)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !817, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !817, file: !135, line: 144, baseType: !504, size: 32, offset: 384)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !817, file: !135, line: 145, baseType: !504, size: 32, offset: 416)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !817, file: !135, line: 146, baseType: !1046, size: 64, offset: 448)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !567)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !800, file: !135, line: 220, baseType: !803, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !800, file: !135, line: 223, baseType: !508, size: 64, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !800, file: !135, line: 226, baseType: !1050, size: 64, offset: 192)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !146, line: 100, size: 1216, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1056, !1057, !1062, !1063, !1064, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1095, !1103, !1104}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1051, file: !146, line: 102, baseType: !504, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1051, file: !146, line: 105, baseType: !7, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1051, file: !146, line: 108, baseType: !799, size: 64, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1051, file: !146, line: 111, baseType: !799, size: 64, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1051, file: !146, line: 114, baseType: !1058, size: 64, offset: 192)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !146, line: 41, size: 64, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1058, file: !146, line: 42, baseType: !145, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1058, file: !146, line: 43, baseType: !7, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1051, file: !146, line: 117, baseType: !7, size: 32, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1051, file: !146, line: 120, baseType: !7, size: 32, offset: 288)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1051, file: !146, line: 123, baseType: !1065, size: 64, offset: 320)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !146, line: 87, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !146, line: 87, size: 128, elements: !1068)
!1068 = !{!1069}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1067, file: !146, line: 87, baseType: !1070, size: 128)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !146, line: 85, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !146, line: 85, size: 128, elements: !1072)
!1072 = !{!1073, !1074, !1075}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1071, file: !146, line: 85, baseType: !7, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1071, file: !146, line: 85, baseType: !7, size: 32, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1071, file: !146, line: 85, baseType: !1076, size: 64, offset: 64)
!1076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1077, size: 64, elements: !610)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !146, line: 84, baseType: !1050)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1051, file: !146, line: 126, baseType: !1050, size: 64, offset: 384)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1051, file: !146, line: 129, baseType: !1050, size: 64, offset: 448)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1051, file: !146, line: 132, baseType: !508, size: 64, offset: 512)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1051, file: !146, line: 139, baseType: !511, size: 64, offset: 576)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1051, file: !146, line: 143, baseType: !560, size: 128, offset: 640)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1051, file: !146, line: 146, baseType: !560, size: 128, offset: 768)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1051, file: !146, line: 148, baseType: !503, size: 8, offset: 896)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1051, file: !146, line: 149, baseType: !503, size: 8, offset: 904)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1051, file: !146, line: 153, baseType: !154, size: 32, offset: 928)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1051, file: !146, line: 156, baseType: !1088, size: 64, offset: 960)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !146, line: 48, size: 320, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1094}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1089, file: !146, line: 50, baseType: !835, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1089, file: !146, line: 59, baseType: !560, size: 128, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1089, file: !146, line: 64, baseType: !503, size: 8, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1089, file: !146, line: 67, baseType: !1088, size: 64, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1051, file: !146, line: 159, baseType: !1096, size: 64, offset: 1024)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !146, line: 72, size: 256, elements: !1098)
!1098 = !{!1099, !1100, !1101, !1102}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1097, file: !146, line: 74, baseType: !816, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1097, file: !146, line: 77, baseType: !1096, size: 64, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1097, file: !146, line: 78, baseType: !1096, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1097, file: !146, line: 81, baseType: !1096, size: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1051, file: !146, line: 162, baseType: !503, size: 8, offset: 1088)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1051, file: !146, line: 166, baseType: !511, size: 64, offset: 1152)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !800, file: !135, line: 229, baseType: !1106, size: 128, offset: 256)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 128, elements: !754)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !800, file: !135, line: 232, baseType: !799, size: 64, offset: 384)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !800, file: !135, line: 233, baseType: !799, size: 64, offset: 448)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !800, file: !135, line: 238, baseType: !1112, size: 64, offset: 512)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1113)
!1113 = !{!1114, !1120}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1112, file: !135, line: 236, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1117)
!1117 = !{!1118, !1119}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1116, file: !135, line: 275, baseType: !825, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1116, file: !135, line: 278, baseType: !825, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1112, file: !135, line: 237, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1128}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1122, file: !135, line: 261, baseType: !686, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1122, file: !135, line: 262, baseType: !686, size: 64, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1122, file: !135, line: 266, baseType: !686, size: 64, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1122, file: !135, line: 267, baseType: !686, size: 64, offset: 192)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1122, file: !135, line: 270, baseType: !504, size: 32, offset: 256)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !800, file: !135, line: 241, baseType: !1046, size: 64, offset: 576)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !800, file: !135, line: 244, baseType: !504, size: 32, offset: 640)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !800, file: !135, line: 247, baseType: !504, size: 32, offset: 672)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !800, file: !135, line: 250, baseType: !504, size: 32, offset: 704)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !800, file: !135, line: 253, baseType: !504, size: 32, offset: 736)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !800, file: !135, line: 256, baseType: !504, size: 32, offset: 768)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !707, file: !689, line: 179, baseType: !1136, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !689, line: 150, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !689, line: 142, size: 320, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1146, !1147}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1138, file: !689, line: 144, baseType: !511, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1138, file: !689, line: 145, baseType: !686, size: 64, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1138, file: !689, line: 146, baseType: !686, size: 64, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1138, file: !689, line: 147, baseType: !1144, size: 32, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1145, line: 31, baseType: !504)
!1145 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1138, file: !689, line: 148, baseType: !7, size: 32, offset: 224)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1138, file: !689, line: 149, baseType: !503, size: 8, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !707, file: !689, line: 180, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !689, line: 162, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !689, line: 159, size: 128, elements: !1152)
!1152 = !{!1153, !1154}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1151, file: !689, line: 160, baseType: !511, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1151, file: !689, line: 161, baseType: !567, size: 64, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !707, file: !689, line: 181, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !689, line: 181, flags: DIFlagFwdDecl)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !702, file: !689, line: 317, baseType: !1159, size: 64)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 64, elements: !610)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !702, file: !689, line: 318, baseType: !1161, size: 320)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !689, line: 188, size: 320, elements: !1162)
!1162 = !{!1163, !1165, !1188}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1161, file: !689, line: 190, baseType: !1164, size: 192)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 192, elements: !585)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1161, file: !689, line: 193, baseType: !1166, size: 64, offset: 192)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !689, line: 206, size: 320, elements: !1168)
!1168 = !{!1169, !1173, !1174, !1175, !1187}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1167, file: !689, line: 208, baseType: !1170, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !512, line: 62, baseType: !1172)
!1172 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !512, line: 61, flags: DIFlagFwdDecl)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1167, file: !689, line: 211, baseType: !7, size: 32, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1167, file: !689, line: 214, baseType: !567, size: 64, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1167, file: !689, line: 224, baseType: !1176, size: 64, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !689, line: 202, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !689, line: 202, size: 128, elements: !1179)
!1179 = !{!1180}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1178, file: !689, line: 202, baseType: !1181, size: 128)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !689, line: 200, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !689, line: 200, size: 128, elements: !1183)
!1183 = !{!1184, !1185, !1186}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1182, file: !689, line: 200, baseType: !7, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1182, file: !689, line: 200, baseType: !7, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1182, file: !689, line: 200, baseType: !720, size: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1167, file: !689, line: 234, baseType: !1176, size: 64, offset: 256)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1161, file: !689, line: 197, baseType: !567, size: 64, offset: 256)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !702, file: !689, line: 319, baseType: !574, size: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !702, file: !689, line: 320, baseType: !593, size: 192)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !514, file: !164, line: 3384, baseType: !1192, size: 1472)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !164, line: 3114, size: 1472, elements: !1193)
!1193 = !{!1194, !1215, !1216, !1217, !1218}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1192, file: !164, line: 3115, baseType: !1195, size: 1216)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !164, line: 2984, size: 1216, elements: !1196)
!1196 = !{!1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1195, file: !164, line: 2985, baseType: !682, size: 960)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1195, file: !164, line: 2986, baseType: !511, size: 64, offset: 960)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1195, file: !164, line: 2987, baseType: !511, size: 64, offset: 1024)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1195, file: !164, line: 2988, baseType: !511, size: 64, offset: 1088)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1195, file: !164, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1195, file: !164, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1195, file: !164, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1195, file: !164, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1195, file: !164, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1195, file: !164, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1195, file: !164, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1195, file: !164, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1195, file: !164, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1195, file: !164, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1195, file: !164, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1195, file: !164, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1195, file: !164, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1195, file: !164, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1192, file: !164, line: 3117, baseType: !511, size: 64, offset: 1216)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1192, file: !164, line: 3119, baseType: !511, size: 64, offset: 1280)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1192, file: !164, line: 3121, baseType: !511, size: 64, offset: 1344)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1192, file: !164, line: 3123, baseType: !511, size: 64, offset: 1408)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !514, file: !164, line: 3385, baseType: !1220, size: 1088)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !164, line: 2874, size: 1088, elements: !1221)
!1221 = !{!1222, !1223, !1224}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1220, file: !164, line: 2875, baseType: !682, size: 960)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1220, file: !164, line: 2876, baseType: !686, size: 64, offset: 960)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1220, file: !164, line: 2877, baseType: !1225, size: 64, offset: 1024)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1227, line: 172, size: 128, elements: !1228)
!1227 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234, !1235}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1226, file: !1227, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1226, file: !1227, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1226, file: !1227, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1226, file: !1227, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1226, file: !1227, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1226, file: !1227, line: 195, baseType: !7, size: 32, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1226, file: !1227, line: 199, baseType: !511, size: 64, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !514, file: !164, line: 3386, baseType: !1195, size: 1216)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !514, file: !164, line: 3387, baseType: !1238, size: 1280)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !164, line: 3093, size: 1280, elements: !1239)
!1239 = !{!1240, !1241}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1238, file: !164, line: 3094, baseType: !1195, size: 1216)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1238, file: !164, line: 3095, baseType: !1225, size: 64, offset: 1216)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !514, file: !164, line: 3388, baseType: !1243, size: 1216)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !164, line: 2824, size: 1216, elements: !1244)
!1244 = !{!1245, !1246, !1247, !1248, !1249, !1250}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1243, file: !164, line: 2825, baseType: !644, size: 896)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1243, file: !164, line: 2827, baseType: !511, size: 64, offset: 896)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1243, file: !164, line: 2828, baseType: !511, size: 64, offset: 960)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1243, file: !164, line: 2829, baseType: !511, size: 64, offset: 1024)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1243, file: !164, line: 2830, baseType: !511, size: 64, offset: 1088)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1243, file: !164, line: 2831, baseType: !511, size: 64, offset: 1152)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !514, file: !164, line: 3389, baseType: !1252, size: 1024)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !164, line: 2850, size: 1024, elements: !1253)
!1253 = !{!1254, !1255, !1256}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1252, file: !164, line: 2851, baseType: !682, size: 960)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1252, file: !164, line: 2852, baseType: !504, size: 32, offset: 960)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1252, file: !164, line: 2853, baseType: !504, size: 32, offset: 992)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !514, file: !164, line: 3390, baseType: !1258, size: 1024)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !164, line: 2857, size: 1024, elements: !1259)
!1259 = !{!1260, !1261}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1258, file: !164, line: 2858, baseType: !682, size: 960)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1258, file: !164, line: 2859, baseType: !1225, size: 64, offset: 960)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !514, file: !164, line: 3391, baseType: !1263, size: 960)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !164, line: 2862, size: 960, elements: !1264)
!1264 = !{!1265}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1263, file: !164, line: 2863, baseType: !682, size: 960)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !514, file: !164, line: 3392, baseType: !1267, size: 1472)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !164, line: 3304, size: 1472, elements: !1268)
!1268 = !{!1269}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1267, file: !164, line: 3305, baseType: !1192, size: 1472)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !514, file: !164, line: 3393, baseType: !1271, size: 1792)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !164, line: 3248, size: 1792, elements: !1272)
!1272 = !{!1273, !1274, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1271, file: !164, line: 3249, baseType: !1192, size: 1472)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1271, file: !164, line: 3251, baseType: !1275, size: 64, offset: 1472)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1277, line: 463, size: 1152, elements: !1278)
!1277 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1278 = !{!1279, !1282, !1313, !1314, !1429, !1437, !1438, !1439, !1440, !1441, !1442, !1466, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1276, file: !1277, line: 464, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1277, line: 464, flags: DIFlagFwdDecl)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1276, file: !1277, line: 467, baseType: !1283, size: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1285)
!1285 = !{!1286, !1288, !1289, !1302, !1303, !1304, !1305, !1306, !1307, !1309, !1311, !1312}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1284, file: !135, line: 377, baseType: !1287, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !512, line: 111, baseType: !799)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1284, file: !135, line: 378, baseType: !1287, size: 64, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1284, file: !135, line: 381, baseType: !1290, size: 64, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1292, file: !135, line: 282, baseType: !1295, size: 128)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1296)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1297)
!1297 = !{!1298, !1299, !1300}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1296, file: !135, line: 281, baseType: !7, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1296, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1296, file: !135, line: 281, baseType: !1301, size: 64, offset: 64)
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1287, size: 64, elements: !610)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1284, file: !135, line: 384, baseType: !504, size: 32, offset: 192)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1284, file: !135, line: 387, baseType: !504, size: 32, offset: 224)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1284, file: !135, line: 390, baseType: !504, size: 32, offset: 256)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1284, file: !135, line: 394, baseType: !1290, size: 64, offset: 320)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1284, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1284, file: !135, line: 399, baseType: !1308, size: 64, offset: 416)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !754)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1284, file: !135, line: 402, baseType: !1310, size: 64, offset: 480)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !754)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1284, file: !135, line: 406, baseType: !504, size: 32, offset: 544)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1284, file: !135, line: 409, baseType: !504, size: 32, offset: 576)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1276, file: !1277, line: 470, baseType: !826, size: 64, offset: 128)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1276, file: !1277, line: 473, baseType: !1315, size: 64, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1227, line: 39, size: 1152, elements: !1317)
!1317 = !{!1318, !1368, !1381, !1393, !1394, !1406, !1407, !1411, !1412, !1413, !1414, !1415}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1316, file: !1227, line: 41, baseType: !1319, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1320, line: 144, baseType: !1321)
!1320 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1320, line: 100, size: 896, elements: !1323)
!1323 = !{!1324, !1332, !1337, !1342, !1344, !1345, !1346, !1347, !1348, !1349, !1354, !1356, !1357, !1362, !1367}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1322, file: !1320, line: 102, baseType: !1325, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1320, line: 52, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!1329, !1330}
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1320, line: 47, baseType: !7)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1322, file: !1320, line: 105, baseType: !1333, size: 64, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1320, line: 59, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!504, !1330, !1330}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1322, file: !1320, line: 108, baseType: !1338, size: 64, offset: 128)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1320, line: 63, baseType: !1339)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DISubroutineType(types: !1341)
!1341 = !{null, !508}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1322, file: !1320, line: 111, baseType: !1343, size: 64, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1322, file: !1320, line: 114, baseType: !980, size: 64, offset: 256)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1322, file: !1320, line: 117, baseType: !980, size: 64, offset: 320)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1322, file: !1320, line: 120, baseType: !980, size: 64, offset: 384)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1322, file: !1320, line: 124, baseType: !7, size: 32, offset: 448)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1322, file: !1320, line: 128, baseType: !7, size: 32, offset: 480)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1322, file: !1320, line: 131, baseType: !1350, size: 64, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1320, line: 75, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!508, !980, !980}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1322, file: !1320, line: 132, baseType: !1355, size: 64, offset: 576)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1320, line: 78, baseType: !1339)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1322, file: !1320, line: 135, baseType: !508, size: 64, offset: 640)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1322, file: !1320, line: 136, baseType: !1358, size: 64, offset: 704)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1320, line: 82, baseType: !1359)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!508, !508, !980, !980}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1322, file: !1320, line: 137, baseType: !1363, size: 64, offset: 768)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1320, line: 83, baseType: !1364)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{null, !508, !508}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1322, file: !1320, line: 141, baseType: !7, size: 32, offset: 832)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1316, file: !1227, line: 48, baseType: !1369, size: 64, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !398, line: 35, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !398, line: 35, size: 128, elements: !1372)
!1372 = !{!1373}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1371, file: !398, line: 35, baseType: !1374, size: 128)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !398, line: 33, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !398, line: 33, size: 128, elements: !1376)
!1376 = !{!1377, !1378, !1379}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1375, file: !398, line: 33, baseType: !7, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1375, file: !398, line: 33, baseType: !7, size: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1375, file: !398, line: 33, baseType: !1380, size: 64, offset: 64)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !835, size: 64, elements: !610)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1316, file: !1227, line: 51, baseType: !1382, size: 64, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !164, line: 183, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !164, line: 183, size: 128, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1384, file: !164, line: 183, baseType: !1387, size: 128)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !164, line: 182, baseType: !1388)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !164, line: 182, size: 128, elements: !1389)
!1389 = !{!1390, !1391, !1392}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1388, file: !164, line: 182, baseType: !7, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1388, file: !164, line: 182, baseType: !7, size: 32, offset: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1388, file: !164, line: 182, baseType: !888, size: 64, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1316, file: !1227, line: 54, baseType: !511, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1316, file: !1227, line: 57, baseType: !1395, size: 128, offset: 256)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1396, line: 31, size: 128, elements: !1397)
!1396 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1397 = !{!1398, !1399, !1400, !1401, !1402, !1403, !1404}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1395, file: !1396, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1395, file: !1396, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1395, file: !1396, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1395, file: !1396, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1395, file: !1396, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1395, file: !1396, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1395, file: !1396, line: 56, baseType: !1405, size: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !512, line: 47, baseType: !738)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1316, file: !1227, line: 60, baseType: !1395, size: 128, offset: 384)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1316, file: !1227, line: 64, baseType: !1408, size: 64, offset: 512)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1410, line: 33, flags: DIFlagFwdDecl)
!1410 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1316, file: !1227, line: 67, baseType: !511, size: 64, offset: 576)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1316, file: !1227, line: 73, baseType: !1319, size: 64, offset: 640)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1316, file: !1227, line: 77, baseType: !1405, size: 64, offset: 704)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1316, file: !1227, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1316, file: !1227, line: 82, baseType: !1416, size: 320, offset: 832)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !391, line: 62, size: 320, elements: !1417)
!1417 = !{!1418, !1424, !1425, !1426, !1427, !1428}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1416, file: !391, line: 63, baseType: !1419, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !391, line: 56, size: 128, elements: !1421)
!1421 = !{!1422, !1423}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1420, file: !391, line: 57, baseType: !1419, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1420, file: !391, line: 58, baseType: !609, size: 8, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1416, file: !391, line: 64, baseType: !7, size: 32, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1416, file: !391, line: 66, baseType: !7, size: 32, offset: 96)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1416, file: !391, line: 68, baseType: !503, size: 8, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1416, file: !391, line: 70, baseType: !864, size: 64, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1416, file: !391, line: 71, baseType: !871, size: 64, offset: 256)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1276, file: !1277, line: 476, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !146, line: 187, size: 256, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1431, file: !146, line: 189, baseType: !504, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1431, file: !146, line: 192, baseType: !1065, size: 64, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1431, file: !146, line: 197, baseType: !1319, size: 64, offset: 128)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1431, file: !146, line: 200, baseType: !1050, size: 64, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1276, file: !1277, line: 479, baseType: !1319, size: 64, offset: 320)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1276, file: !1277, line: 484, baseType: !511, size: 64, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1276, file: !1277, line: 488, baseType: !511, size: 64, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1276, file: !1277, line: 493, baseType: !511, size: 64, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1276, file: !1277, line: 496, baseType: !511, size: 64, offset: 576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1276, file: !1277, line: 501, baseType: !1443, size: 64, offset: 640)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !159, line: 2355, size: 576, elements: !1445)
!1445 = !{!1446, !1449, !1450, !1451, !1452, !1454, !1455, !1460, !1461, !1462, !1463, !1464, !1465}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1444, file: !159, line: 2356, baseType: !1447, size: 64)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !159, line: 2356, flags: DIFlagFwdDecl)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1444, file: !159, line: 2357, baseType: !509, size: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1444, file: !159, line: 2358, baseType: !504, size: 32, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1444, file: !159, line: 2359, baseType: !504, size: 32, offset: 160)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1444, file: !159, line: 2360, baseType: !1453, size: 128, offset: 192)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 128, elements: !778)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1444, file: !159, line: 2364, baseType: !504, size: 32, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1444, file: !159, line: 2367, baseType: !1456, size: 128, offset: 384)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !159, line: 2349, size: 128, elements: !1457)
!1457 = !{!1458, !1459}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1456, file: !159, line: 2351, baseType: !686, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1456, file: !159, line: 2352, baseType: !567, size: 64, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1444, file: !159, line: 2371, baseType: !158, size: 32, offset: 512)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1444, file: !159, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1444, file: !159, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1444, file: !159, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1444, file: !159, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1444, file: !159, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1276, file: !1277, line: 504, baseType: !1467, size: 64, offset: 704)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1277, line: 504, flags: DIFlagFwdDecl)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1276, file: !1277, line: 507, baseType: !1319, size: 64, offset: 768)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1276, file: !1277, line: 510, baseType: !504, size: 32, offset: 832)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1276, file: !1277, line: 513, baseType: !504, size: 32, offset: 864)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1276, file: !1277, line: 516, baseType: !636, size: 32, offset: 896)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1276, file: !1277, line: 519, baseType: !636, size: 32, offset: 928)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1276, file: !1277, line: 522, baseType: !7, size: 32, offset: 960)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1276, file: !1277, line: 523, baseType: !7, size: 32, offset: 992)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1276, file: !1277, line: 528, baseType: !509, size: 64, offset: 1024)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1276, file: !1277, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1276, file: !1277, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1276, file: !1277, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1276, file: !1277, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1276, file: !1277, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1276, file: !1277, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1276, file: !1277, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1276, file: !1277, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1276, file: !1277, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1276, file: !1277, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1276, file: !1277, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1276, file: !1277, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1276, file: !1277, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1276, file: !1277, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1276, file: !1277, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1276, file: !1277, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1271, file: !164, line: 3254, baseType: !511, size: 64, offset: 1536)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1271, file: !164, line: 3257, baseType: !511, size: 64, offset: 1600)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1271, file: !164, line: 3258, baseType: !511, size: 64, offset: 1664)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1271, file: !164, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1271, file: !164, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1271, file: !164, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1271, file: !164, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1271, file: !164, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1271, file: !164, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1271, file: !164, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1271, file: !164, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1271, file: !164, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1271, file: !164, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1271, file: !164, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1271, file: !164, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1271, file: !164, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1271, file: !164, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1271, file: !164, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1271, file: !164, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1271, file: !164, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1271, file: !164, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !514, file: !164, line: 3394, baseType: !1515, size: 1344)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !164, line: 2279, size: 1344, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1515, file: !164, line: 2280, baseType: !550, size: 192)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1515, file: !164, line: 2281, baseType: !511, size: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1515, file: !164, line: 2282, baseType: !511, size: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1515, file: !164, line: 2283, baseType: !511, size: 64, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1515, file: !164, line: 2284, baseType: !511, size: 64, offset: 384)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1515, file: !164, line: 2285, baseType: !7, size: 32, offset: 448)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1515, file: !164, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1515, file: !164, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1515, file: !164, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1515, file: !164, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1515, file: !164, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1515, file: !164, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1515, file: !164, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1515, file: !164, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1515, file: !164, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1515, file: !164, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1515, file: !164, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1515, file: !164, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1515, file: !164, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1515, file: !164, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1515, file: !164, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1515, file: !164, line: 2305, baseType: !7, size: 32, offset: 512)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1515, file: !164, line: 2306, baseType: !1144, size: 32, offset: 544)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1515, file: !164, line: 2307, baseType: !511, size: 64, offset: 576)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1515, file: !164, line: 2308, baseType: !511, size: 64, offset: 640)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1515, file: !164, line: 2314, baseType: !1543, size: 64, offset: 704)
!1543 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !164, line: 2309, size: 64, elements: !1544)
!1544 = !{!1545, !1546, !1547}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1543, file: !164, line: 2310, baseType: !504, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1543, file: !164, line: 2311, baseType: !509, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1543, file: !164, line: 2312, baseType: !1548, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !164, line: 2277, flags: DIFlagFwdDecl)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1515, file: !164, line: 2315, baseType: !511, size: 64, offset: 768)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1515, file: !164, line: 2316, baseType: !511, size: 64, offset: 832)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1515, file: !164, line: 2317, baseType: !511, size: 64, offset: 896)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1515, file: !164, line: 2318, baseType: !511, size: 64, offset: 960)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1515, file: !164, line: 2319, baseType: !511, size: 64, offset: 1024)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1515, file: !164, line: 2320, baseType: !511, size: 64, offset: 1088)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1515, file: !164, line: 2321, baseType: !511, size: 64, offset: 1152)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1515, file: !164, line: 2322, baseType: !511, size: 64, offset: 1216)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1515, file: !164, line: 2324, baseType: !1559, size: 64, offset: 1280)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !164, line: 2324, flags: DIFlagFwdDecl)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !514, file: !164, line: 3395, baseType: !1562, size: 320)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !164, line: 1469, size: 320, elements: !1563)
!1563 = !{!1564, !1565, !1566}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1562, file: !164, line: 1470, baseType: !550, size: 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1562, file: !164, line: 1471, baseType: !511, size: 64, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1562, file: !164, line: 1472, baseType: !511, size: 64, offset: 256)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !514, file: !164, line: 3396, baseType: !1568, size: 320)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !164, line: 1482, size: 320, elements: !1569)
!1569 = !{!1570, !1571, !1572}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1568, file: !164, line: 1483, baseType: !550, size: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1568, file: !164, line: 1484, baseType: !504, size: 32, offset: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1568, file: !164, line: 1485, baseType: !888, size: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !514, file: !164, line: 3397, baseType: !1574, size: 384)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !164, line: 1829, size: 384, elements: !1575)
!1575 = !{!1576, !1577, !1578, !1579}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1574, file: !164, line: 1830, baseType: !550, size: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1574, file: !164, line: 1831, baseType: !636, size: 32, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1574, file: !164, line: 1832, baseType: !511, size: 64, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1574, file: !164, line: 1835, baseType: !888, size: 64, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !514, file: !164, line: 3398, baseType: !1581, size: 704)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !164, line: 1898, size: 704, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1592}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1581, file: !164, line: 1899, baseType: !550, size: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1581, file: !164, line: 1902, baseType: !511, size: 64, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1581, file: !164, line: 1905, baseType: !835, size: 64, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1581, file: !164, line: 1908, baseType: !7, size: 32, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1581, file: !164, line: 1911, baseType: !1588, size: 64, offset: 384)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1227, line: 117, size: 128, elements: !1590)
!1590 = !{!1591}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1589, file: !1227, line: 120, baseType: !1395, size: 128)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1581, file: !164, line: 1914, baseType: !876, size: 256, offset: 448)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !514, file: !164, line: 3399, baseType: !1594, size: 704)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !164, line: 2008, size: 704, elements: !1595)
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1594, file: !164, line: 2009, baseType: !550, size: 192)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1594, file: !164, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1594, file: !164, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1594, file: !164, line: 2014, baseType: !636, size: 32, offset: 224)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1594, file: !164, line: 2016, baseType: !511, size: 64, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1594, file: !164, line: 2017, baseType: !1382, size: 64, offset: 320)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1594, file: !164, line: 2019, baseType: !511, size: 64, offset: 384)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1594, file: !164, line: 2020, baseType: !511, size: 64, offset: 448)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1594, file: !164, line: 2021, baseType: !511, size: 64, offset: 512)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1594, file: !164, line: 2022, baseType: !511, size: 64, offset: 576)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1594, file: !164, line: 2023, baseType: !511, size: 64, offset: 640)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !514, file: !164, line: 3400, baseType: !1608, size: 832)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !164, line: 2430, size: 832, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1608, file: !164, line: 2431, baseType: !550, size: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1608, file: !164, line: 2433, baseType: !511, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1608, file: !164, line: 2434, baseType: !511, size: 64, offset: 256)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1608, file: !164, line: 2435, baseType: !511, size: 64, offset: 320)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1608, file: !164, line: 2436, baseType: !511, size: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1608, file: !164, line: 2437, baseType: !1382, size: 64, offset: 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1608, file: !164, line: 2438, baseType: !511, size: 64, offset: 512)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1608, file: !164, line: 2440, baseType: !511, size: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1608, file: !164, line: 2441, baseType: !511, size: 64, offset: 640)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1608, file: !164, line: 2443, baseType: !1620, size: 128, offset: 704)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !164, line: 182, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !164, line: 182, size: 128, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1621, file: !164, line: 182, baseType: !1387, size: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !514, file: !164, line: 3401, baseType: !1625, size: 320)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !164, line: 3327, size: 320, elements: !1626)
!1626 = !{!1627, !1628, !1635}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1625, file: !164, line: 3329, baseType: !550, size: 192)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1625, file: !164, line: 3330, baseType: !1629, size: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !164, line: 3320, size: 192, elements: !1631)
!1631 = !{!1632, !1633, !1634}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1630, file: !164, line: 3322, baseType: !1629, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1630, file: !164, line: 3323, baseType: !1629, size: 64, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1630, file: !164, line: 3324, baseType: !511, size: 64, offset: 128)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1625, file: !164, line: 3331, baseType: !1629, size: 64, offset: 256)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !514, file: !164, line: 3402, baseType: !1637, size: 256)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !164, line: 1540, size: 256, elements: !1638)
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1637, file: !164, line: 1541, baseType: !550, size: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1637, file: !164, line: 1542, baseType: !1641, size: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !164, line: 1538, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !164, line: 1538, size: 192, elements: !1644)
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1643, file: !164, line: 1538, baseType: !1646, size: 192)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !164, line: 1537, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !164, line: 1537, size: 192, elements: !1648)
!1648 = !{!1649, !1650, !1651}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1647, file: !164, line: 1537, baseType: !7, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1647, file: !164, line: 1537, baseType: !7, size: 32, offset: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1647, file: !164, line: 1537, baseType: !1652, size: 128, offset: 64)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1653, size: 128, elements: !610)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !164, line: 1535, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !164, line: 1532, size: 128, elements: !1655)
!1655 = !{!1656, !1657}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1654, file: !164, line: 1533, baseType: !511, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1654, file: !164, line: 1534, baseType: !511, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !514, file: !164, line: 3403, baseType: !1659, size: 512)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !164, line: 1938, size: 512, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664, !1670, !1671, !1672}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1659, file: !164, line: 1939, baseType: !550, size: 192)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1659, file: !164, line: 1940, baseType: !636, size: 32, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1659, file: !164, line: 1941, baseType: !163, size: 32, offset: 224)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1659, file: !164, line: 1946, baseType: !1665, size: 32, offset: 256)
!1665 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !164, line: 1942, size: 32, elements: !1666)
!1666 = !{!1667, !1668, !1669}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1665, file: !164, line: 1943, baseType: !182, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1665, file: !164, line: 1944, baseType: !189, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1665, file: !164, line: 1945, baseType: !196, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1659, file: !164, line: 1950, baseType: !825, size: 64, offset: 320)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1659, file: !164, line: 1951, baseType: !825, size: 64, offset: 384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1659, file: !164, line: 1953, baseType: !888, size: 64, offset: 448)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !514, file: !164, line: 3404, baseType: !1674, size: 1664)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !164, line: 3337, size: 1664, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1674, file: !164, line: 3338, baseType: !550, size: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1674, file: !164, line: 3341, baseType: !1678, size: 1472, offset: 192)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1679, line: 410, size: 1472, elements: !1680)
!1679 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1680 = !{!1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1678, file: !1679, line: 412, baseType: !504, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1678, file: !1679, line: 413, baseType: !504, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1678, file: !1679, line: 414, baseType: !504, size: 32, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1678, file: !1679, line: 415, baseType: !504, size: 32, offset: 96)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1678, file: !1679, line: 416, baseType: !504, size: 32, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1678, file: !1679, line: 417, baseType: !504, size: 32, offset: 160)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1678, file: !1679, line: 418, baseType: !503, size: 8, offset: 192)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1678, file: !1679, line: 419, baseType: !503, size: 8, offset: 200)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1678, file: !1679, line: 420, baseType: !1690, size: 8, offset: 208)
!1690 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1678, file: !1679, line: 421, baseType: !1690, size: 8, offset: 216)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1678, file: !1679, line: 422, baseType: !1690, size: 8, offset: 224)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1678, file: !1679, line: 423, baseType: !1690, size: 8, offset: 232)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1678, file: !1679, line: 424, baseType: !1690, size: 8, offset: 240)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1678, file: !1679, line: 425, baseType: !1690, size: 8, offset: 248)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1678, file: !1679, line: 426, baseType: !1690, size: 8, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1678, file: !1679, line: 427, baseType: !1690, size: 8, offset: 264)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1678, file: !1679, line: 428, baseType: !1690, size: 8, offset: 272)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1678, file: !1679, line: 429, baseType: !1690, size: 8, offset: 280)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1678, file: !1679, line: 430, baseType: !1690, size: 8, offset: 288)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1678, file: !1679, line: 431, baseType: !1690, size: 8, offset: 296)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1678, file: !1679, line: 432, baseType: !1690, size: 8, offset: 304)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1678, file: !1679, line: 433, baseType: !1690, size: 8, offset: 312)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1678, file: !1679, line: 434, baseType: !1690, size: 8, offset: 320)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1678, file: !1679, line: 435, baseType: !1690, size: 8, offset: 328)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1678, file: !1679, line: 436, baseType: !1690, size: 8, offset: 336)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1678, file: !1679, line: 437, baseType: !1690, size: 8, offset: 344)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1678, file: !1679, line: 438, baseType: !1690, size: 8, offset: 352)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1678, file: !1679, line: 439, baseType: !1690, size: 8, offset: 360)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1678, file: !1679, line: 440, baseType: !1690, size: 8, offset: 368)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1678, file: !1679, line: 441, baseType: !1690, size: 8, offset: 376)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1678, file: !1679, line: 442, baseType: !1690, size: 8, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1678, file: !1679, line: 443, baseType: !1690, size: 8, offset: 392)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1678, file: !1679, line: 444, baseType: !1690, size: 8, offset: 400)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1678, file: !1679, line: 445, baseType: !1690, size: 8, offset: 408)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1678, file: !1679, line: 446, baseType: !1690, size: 8, offset: 416)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1678, file: !1679, line: 447, baseType: !1690, size: 8, offset: 424)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1678, file: !1679, line: 448, baseType: !1690, size: 8, offset: 432)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1678, file: !1679, line: 449, baseType: !1690, size: 8, offset: 440)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1678, file: !1679, line: 450, baseType: !1690, size: 8, offset: 448)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1678, file: !1679, line: 451, baseType: !1690, size: 8, offset: 456)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1678, file: !1679, line: 452, baseType: !1690, size: 8, offset: 464)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1678, file: !1679, line: 453, baseType: !1690, size: 8, offset: 472)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1678, file: !1679, line: 454, baseType: !1690, size: 8, offset: 480)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1678, file: !1679, line: 455, baseType: !1690, size: 8, offset: 488)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1678, file: !1679, line: 456, baseType: !1690, size: 8, offset: 496)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1678, file: !1679, line: 457, baseType: !1690, size: 8, offset: 504)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1678, file: !1679, line: 458, baseType: !1690, size: 8, offset: 512)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1678, file: !1679, line: 459, baseType: !1690, size: 8, offset: 520)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1678, file: !1679, line: 460, baseType: !1690, size: 8, offset: 528)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1678, file: !1679, line: 461, baseType: !1690, size: 8, offset: 536)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1678, file: !1679, line: 462, baseType: !1690, size: 8, offset: 544)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1678, file: !1679, line: 463, baseType: !1690, size: 8, offset: 552)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1678, file: !1679, line: 464, baseType: !1690, size: 8, offset: 560)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1678, file: !1679, line: 465, baseType: !1690, size: 8, offset: 568)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1678, file: !1679, line: 466, baseType: !1690, size: 8, offset: 576)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1678, file: !1679, line: 467, baseType: !1690, size: 8, offset: 584)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1678, file: !1679, line: 468, baseType: !1690, size: 8, offset: 592)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1678, file: !1679, line: 469, baseType: !1690, size: 8, offset: 600)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1678, file: !1679, line: 470, baseType: !1690, size: 8, offset: 608)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1678, file: !1679, line: 471, baseType: !1690, size: 8, offset: 616)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1678, file: !1679, line: 472, baseType: !1690, size: 8, offset: 624)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1678, file: !1679, line: 473, baseType: !1690, size: 8, offset: 632)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1678, file: !1679, line: 474, baseType: !1690, size: 8, offset: 640)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1678, file: !1679, line: 475, baseType: !1690, size: 8, offset: 648)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1678, file: !1679, line: 476, baseType: !1690, size: 8, offset: 656)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1678, file: !1679, line: 477, baseType: !1690, size: 8, offset: 664)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1678, file: !1679, line: 478, baseType: !1690, size: 8, offset: 672)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1678, file: !1679, line: 479, baseType: !1690, size: 8, offset: 680)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1678, file: !1679, line: 480, baseType: !1690, size: 8, offset: 688)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1678, file: !1679, line: 481, baseType: !1690, size: 8, offset: 696)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1678, file: !1679, line: 482, baseType: !1690, size: 8, offset: 704)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1678, file: !1679, line: 483, baseType: !1690, size: 8, offset: 712)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1678, file: !1679, line: 484, baseType: !1690, size: 8, offset: 720)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1678, file: !1679, line: 485, baseType: !1690, size: 8, offset: 728)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1678, file: !1679, line: 486, baseType: !1690, size: 8, offset: 736)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1678, file: !1679, line: 487, baseType: !1690, size: 8, offset: 744)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1678, file: !1679, line: 488, baseType: !1690, size: 8, offset: 752)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1678, file: !1679, line: 489, baseType: !1690, size: 8, offset: 760)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1678, file: !1679, line: 490, baseType: !1690, size: 8, offset: 768)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1678, file: !1679, line: 491, baseType: !1690, size: 8, offset: 776)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1678, file: !1679, line: 492, baseType: !1690, size: 8, offset: 784)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1678, file: !1679, line: 493, baseType: !1690, size: 8, offset: 792)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1678, file: !1679, line: 494, baseType: !1690, size: 8, offset: 800)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1678, file: !1679, line: 495, baseType: !1690, size: 8, offset: 808)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1678, file: !1679, line: 496, baseType: !1690, size: 8, offset: 816)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1678, file: !1679, line: 497, baseType: !1690, size: 8, offset: 824)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1678, file: !1679, line: 498, baseType: !1690, size: 8, offset: 832)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1678, file: !1679, line: 499, baseType: !1690, size: 8, offset: 840)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1678, file: !1679, line: 500, baseType: !1690, size: 8, offset: 848)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1678, file: !1679, line: 501, baseType: !1690, size: 8, offset: 856)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1678, file: !1679, line: 502, baseType: !1690, size: 8, offset: 864)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1678, file: !1679, line: 503, baseType: !1690, size: 8, offset: 872)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1678, file: !1679, line: 504, baseType: !1690, size: 8, offset: 880)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1678, file: !1679, line: 505, baseType: !1690, size: 8, offset: 888)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1678, file: !1679, line: 506, baseType: !1690, size: 8, offset: 896)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1678, file: !1679, line: 507, baseType: !1690, size: 8, offset: 904)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1678, file: !1679, line: 508, baseType: !1690, size: 8, offset: 912)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1678, file: !1679, line: 509, baseType: !1690, size: 8, offset: 920)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1678, file: !1679, line: 510, baseType: !1690, size: 8, offset: 928)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1678, file: !1679, line: 511, baseType: !1690, size: 8, offset: 936)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1678, file: !1679, line: 512, baseType: !1690, size: 8, offset: 944)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1678, file: !1679, line: 513, baseType: !1690, size: 8, offset: 952)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1678, file: !1679, line: 514, baseType: !1690, size: 8, offset: 960)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1678, file: !1679, line: 515, baseType: !1690, size: 8, offset: 968)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1678, file: !1679, line: 516, baseType: !1690, size: 8, offset: 976)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1678, file: !1679, line: 517, baseType: !1690, size: 8, offset: 984)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1678, file: !1679, line: 518, baseType: !1690, size: 8, offset: 992)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1678, file: !1679, line: 519, baseType: !1690, size: 8, offset: 1000)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1678, file: !1679, line: 520, baseType: !1690, size: 8, offset: 1008)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1678, file: !1679, line: 521, baseType: !1690, size: 8, offset: 1016)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1678, file: !1679, line: 522, baseType: !1690, size: 8, offset: 1024)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1678, file: !1679, line: 523, baseType: !1690, size: 8, offset: 1032)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1678, file: !1679, line: 524, baseType: !1690, size: 8, offset: 1040)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1678, file: !1679, line: 525, baseType: !1690, size: 8, offset: 1048)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1678, file: !1679, line: 526, baseType: !1690, size: 8, offset: 1056)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1678, file: !1679, line: 527, baseType: !1690, size: 8, offset: 1064)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1678, file: !1679, line: 528, baseType: !1690, size: 8, offset: 1072)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1678, file: !1679, line: 529, baseType: !1690, size: 8, offset: 1080)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1678, file: !1679, line: 530, baseType: !1690, size: 8, offset: 1088)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1678, file: !1679, line: 531, baseType: !1690, size: 8, offset: 1096)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1678, file: !1679, line: 532, baseType: !1690, size: 8, offset: 1104)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1678, file: !1679, line: 533, baseType: !1690, size: 8, offset: 1112)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1678, file: !1679, line: 534, baseType: !1690, size: 8, offset: 1120)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1678, file: !1679, line: 535, baseType: !1690, size: 8, offset: 1128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1678, file: !1679, line: 536, baseType: !1690, size: 8, offset: 1136)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1678, file: !1679, line: 537, baseType: !1690, size: 8, offset: 1144)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1678, file: !1679, line: 538, baseType: !1690, size: 8, offset: 1152)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1678, file: !1679, line: 539, baseType: !1690, size: 8, offset: 1160)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1678, file: !1679, line: 540, baseType: !1690, size: 8, offset: 1168)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1678, file: !1679, line: 541, baseType: !1690, size: 8, offset: 1176)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1678, file: !1679, line: 542, baseType: !1690, size: 8, offset: 1184)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1678, file: !1679, line: 543, baseType: !1690, size: 8, offset: 1192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1678, file: !1679, line: 544, baseType: !1690, size: 8, offset: 1200)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1678, file: !1679, line: 545, baseType: !1690, size: 8, offset: 1208)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1678, file: !1679, line: 546, baseType: !1690, size: 8, offset: 1216)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1678, file: !1679, line: 547, baseType: !1690, size: 8, offset: 1224)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1678, file: !1679, line: 548, baseType: !1690, size: 8, offset: 1232)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1678, file: !1679, line: 549, baseType: !1690, size: 8, offset: 1240)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1678, file: !1679, line: 550, baseType: !1690, size: 8, offset: 1248)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1678, file: !1679, line: 551, baseType: !1690, size: 8, offset: 1256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1678, file: !1679, line: 552, baseType: !1690, size: 8, offset: 1264)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1678, file: !1679, line: 553, baseType: !1690, size: 8, offset: 1272)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1678, file: !1679, line: 554, baseType: !1690, size: 8, offset: 1280)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1678, file: !1679, line: 555, baseType: !1690, size: 8, offset: 1288)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1678, file: !1679, line: 556, baseType: !1690, size: 8, offset: 1296)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1678, file: !1679, line: 557, baseType: !1690, size: 8, offset: 1304)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1678, file: !1679, line: 558, baseType: !1690, size: 8, offset: 1312)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1678, file: !1679, line: 559, baseType: !1690, size: 8, offset: 1320)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1678, file: !1679, line: 560, baseType: !1690, size: 8, offset: 1328)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1678, file: !1679, line: 561, baseType: !1690, size: 8, offset: 1336)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1678, file: !1679, line: 562, baseType: !1690, size: 8, offset: 1344)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1678, file: !1679, line: 563, baseType: !1690, size: 8, offset: 1352)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1678, file: !1679, line: 564, baseType: !1690, size: 8, offset: 1360)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1678, file: !1679, line: 565, baseType: !1690, size: 8, offset: 1368)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1678, file: !1679, line: 566, baseType: !1690, size: 8, offset: 1376)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1678, file: !1679, line: 567, baseType: !1690, size: 8, offset: 1384)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1678, file: !1679, line: 568, baseType: !1690, size: 8, offset: 1392)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1678, file: !1679, line: 569, baseType: !1690, size: 8, offset: 1400)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1678, file: !1679, line: 570, baseType: !1690, size: 8, offset: 1408)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1678, file: !1679, line: 571, baseType: !1690, size: 8, offset: 1416)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1678, file: !1679, line: 572, baseType: !1690, size: 8, offset: 1424)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1678, file: !1679, line: 573, baseType: !1690, size: 8, offset: 1432)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1678, file: !1679, line: 574, baseType: !1690, size: 8, offset: 1440)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !514, file: !164, line: 3405, baseType: !1846, size: 384)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !164, line: 3352, size: 384, elements: !1847)
!1847 = !{!1848, !1849}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1846, file: !164, line: 3353, baseType: !550, size: 192)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1846, file: !164, line: 3356, baseType: !1850, size: 192, offset: 192)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1679, line: 578, size: 192, elements: !1851)
!1851 = !{!1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1850, file: !1679, line: 580, baseType: !504, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1850, file: !1679, line: 581, baseType: !504, size: 32, offset: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1850, file: !1679, line: 582, baseType: !504, size: 32, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1850, file: !1679, line: 583, baseType: !504, size: 32, offset: 96)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1850, file: !1679, line: 584, baseType: !503, size: 8, offset: 128)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1850, file: !1679, line: 585, baseType: !503, size: 8, offset: 136)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1850, file: !1679, line: 586, baseType: !503, size: 8, offset: 144)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1850, file: !1679, line: 587, baseType: !503, size: 8, offset: 152)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1850, file: !1679, line: 588, baseType: !503, size: 8, offset: 160)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1850, file: !1679, line: 589, baseType: !503, size: 8, offset: 168)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1850, file: !1679, line: 590, baseType: !503, size: 8, offset: 176)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !391, line: 30, baseType: !1865)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !164, line: 1893, baseType: !876)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "stmt_vec_info", file: !437, line: 496, baseType: !1868)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_stmt_vec_info", file: !437, line: 401, size: 1536, elements: !1870)
!1870 = !{!1871, !1872, !1873, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2139, !2140}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1869, file: !437, line: 403, baseType: !436, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1869, file: !437, line: 406, baseType: !835, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "loop_vinfo", scope: !1869, file: !437, line: 409, baseType: !1874, size: 64, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_vec_info", file: !437, line: 245, baseType: !1875)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_loop_vec_info", file: !437, line: 176, size: 1024, elements: !1877)
!1877 = !{!1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1945, !1946, !1947, !1961, !2022, !2023, !2029, !2031, !2032, !2099}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !1876, file: !437, line: 179, baseType: !1050, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bbs", scope: !1876, file: !437, line: 182, baseType: !1863, size: 64, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "num_iters", scope: !1876, file: !437, line: 185, baseType: !511, size: 64, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "num_iters_unchanged", scope: !1876, file: !437, line: 186, baseType: !511, size: 64, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "min_profitable_iters", scope: !1876, file: !437, line: 193, baseType: !504, size: 32, offset: 256)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "vectorizable", scope: !1876, file: !437, line: 196, baseType: !503, size: 8, offset: 288)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "vectorization_factor", scope: !1876, file: !437, line: 199, baseType: !504, size: 32, offset: 320)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "unaligned_dr", scope: !1876, file: !437, line: 202, baseType: !1886, size: 64, offset: 384)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_reference", file: !1888, line: 165, size: 896, elements: !1889)
!1888 = !DIFile(filename: "./tree-data-ref.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1902, !1912, !1917}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1887, file: !1888, line: 168, baseType: !835, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1887, file: !1888, line: 171, baseType: !511, size: 64, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1887, file: !1888, line: 174, baseType: !508, size: 64, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "is_read", scope: !1887, file: !1888, line: 177, baseType: !503, size: 8, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "innermost", scope: !1887, file: !1888, line: 180, baseType: !1895, size: 320, offset: 256)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "innermost_loop_behavior", file: !1888, line: 51, size: 320, elements: !1896)
!1896 = !{!1897, !1898, !1899, !1900, !1901}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !1895, file: !1888, line: 53, baseType: !511, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1895, file: !1888, line: 54, baseType: !511, size: 64, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1895, file: !1888, line: 55, baseType: !511, size: 64, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1895, file: !1888, line: 56, baseType: !511, size: 64, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_to", scope: !1895, file: !1888, line: 60, baseType: !511, size: 64, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !1887, file: !1888, line: 183, baseType: !1903, size: 128, offset: 576)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "indices", file: !1888, line: 78, size: 128, elements: !1904)
!1904 = !{!1905, !1906}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "base_object", scope: !1903, file: !1888, line: 81, baseType: !511, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "access_fns", scope: !1903, file: !1888, line: 84, baseType: !1907, size: 64, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !164, line: 184, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !164, line: 184, size: 128, elements: !1910)
!1910 = !{!1911}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1909, file: !164, line: 184, baseType: !1387, size: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1887, file: !1888, line: 186, baseType: !1913, size: 128, offset: 704)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dr_alias", file: !1888, line: 87, size: 128, elements: !1914)
!1914 = !{!1915, !1916}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1913, file: !1888, line: 91, baseType: !1588, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "vops", scope: !1913, file: !1888, line: 96, baseType: !1405, size: 64, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "access_matrix", scope: !1887, file: !1888, line: 189, baseType: !1918, size: 64, offset: 832)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access_matrix", file: !1888, line: 127, size: 256, elements: !1920)
!1920 = !{!1921, !1927, !1928, !1929}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1919, file: !1888, line: 129, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_heap", file: !146, line: 86, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_heap", file: !146, line: 86, size: 128, elements: !1925)
!1925 = !{!1926}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1924, file: !146, line: 86, baseType: !1070, size: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "nb_induction_vars", scope: !1919, file: !1888, line: 130, baseType: !504, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1919, file: !1888, line: 131, baseType: !1907, size: 64, offset: 128)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !1919, file: !1888, line: 132, baseType: !1930, size: 64, offset: 192)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_gc", file: !1932, line: 34, baseType: !1933)
!1932 = !DIFile(filename: "./lambda.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_gc", file: !1932, line: 34, size: 128, elements: !1934)
!1934 = !{!1935}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1933, file: !1932, line: 34, baseType: !1936, size: 128)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_base", file: !1932, line: 32, baseType: !1937)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_base", file: !1932, line: 32, size: 128, elements: !1938)
!1938 = !{!1939, !1940, !1941}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1937, file: !1932, line: 32, baseType: !7, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1937, file: !1932, line: 32, baseType: !7, size: 32, offset: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1937, file: !1932, line: 32, baseType: !1942, size: 64, offset: 64)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1943, size: 64, elements: !610)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_vector", file: !1932, line: 31, baseType: !1944)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "peeling_for_alignment", scope: !1876, file: !437, line: 212, baseType: !504, size: 32, offset: 448)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_mask", scope: !1876, file: !437, line: 215, baseType: !504, size: 32, offset: 480)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "datarefs", scope: !1876, file: !437, line: 218, baseType: !1948, size: 64, offset: 512)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_heap", file: !1888, line: 209, baseType: !1950)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_heap", file: !1888, line: 209, size: 128, elements: !1951)
!1951 = !{!1952}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1950, file: !1888, line: 209, baseType: !1953, size: 128)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_base", file: !1888, line: 208, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_base", file: !1888, line: 208, size: 128, elements: !1955)
!1955 = !{!1956, !1957, !1958}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1954, file: !1888, line: 208, baseType: !7, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1954, file: !1888, line: 208, baseType: !7, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1954, file: !1888, line: 208, baseType: !1959, size: 64, offset: 64)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 64, elements: !610)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "data_reference_p", file: !1888, line: 207, baseType: !1886)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ddrs", scope: !1876, file: !437, line: 221, baseType: !1962, size: 64, offset: 576)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_heap", file: !1888, line: 333, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_heap", file: !1888, line: 333, size: 128, elements: !1965)
!1965 = !{!1966}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1964, file: !1888, line: 333, baseType: !1967, size: 128)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_base", file: !1888, line: 332, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_base", file: !1888, line: 332, size: 128, elements: !1969)
!1969 = !{!1970, !1971, !1972}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1968, file: !1888, line: 332, baseType: !7, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1968, file: !1888, line: 332, baseType: !7, size: 32, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1968, file: !1888, line: 332, baseType: !1973, size: 64, offset: 64)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1974, size: 64, elements: !610)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddr_p", file: !1888, line: 331, baseType: !1975)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_dependence_relation", file: !1888, line: 282, size: 512, elements: !1977)
!1977 = !{!1978, !1979, !1980, !1981, !2010, !2011, !2017, !2018, !2019, !2020, !2021}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1976, file: !1888, line: 285, baseType: !1886, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1976, file: !1888, line: 286, baseType: !1886, size: 64, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "are_dependent", scope: !1976, file: !1888, line: 299, baseType: !511, size: 64, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "subscripts", scope: !1976, file: !1888, line: 304, baseType: !1982, size: 64, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_heap", file: !1888, line: 272, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_heap", file: !1888, line: 272, size: 128, elements: !1985)
!1985 = !{!1986}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1984, file: !1888, line: 272, baseType: !1987, size: 128)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_base", file: !1888, line: 271, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_base", file: !1888, line: 271, size: 128, elements: !1989)
!1989 = !{!1990, !1991, !1992}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1988, file: !1888, line: 271, baseType: !7, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1988, file: !1888, line: 271, baseType: !7, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1988, file: !1888, line: 271, baseType: !1993, size: 64, offset: 64)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1994, size: 64, elements: !610)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "subscript_p", file: !1888, line: 270, baseType: !1995)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subscript", file: !1888, line: 252, size: 256, elements: !1997)
!1997 = !{!1998, !2007, !2008, !2009}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_a", scope: !1996, file: !1888, line: 256, baseType: !1999, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "conflict_function", file: !1888, line: 243, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1888, line: 239, size: 192, elements: !2002)
!2002 = !{!2003, !2004}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2001, file: !1888, line: 241, baseType: !7, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "fns", scope: !2001, file: !1888, line: 242, baseType: !2005, size: 128, offset: 64)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2006, size: 128, elements: !754)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_fn", file: !1888, line: 237, baseType: !1907)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_b", scope: !1996, file: !1888, line: 257, baseType: !1999, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "last_conflict", scope: !1996, file: !1888, line: 261, baseType: !511, size: 64, offset: 128)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1996, file: !1888, line: 267, baseType: !511, size: 64, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1976, file: !1888, line: 307, baseType: !1922, size: 64, offset: 256)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "dir_vects", scope: !1976, file: !1888, line: 310, baseType: !2012, size: 64, offset: 320)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_heap", file: !1932, line: 33, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_heap", file: !1932, line: 33, size: 128, elements: !2015)
!2015 = !{!2016}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2014, file: !1932, line: 33, baseType: !1936, size: 128)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "dist_vects", scope: !1976, file: !1888, line: 313, baseType: !2012, size: 64, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "inner_loop", scope: !1976, file: !1888, line: 317, baseType: !7, size: 32, offset: 448)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "reversed_p", scope: !1976, file: !1888, line: 320, baseType: !503, size: 8, offset: 480)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "affine_p", scope: !1976, file: !1888, line: 324, baseType: !503, size: 8, offset: 488)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "self_reference_p", scope: !1976, file: !1888, line: 328, baseType: !503, size: 8, offset: 496)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "may_alias_ddrs", scope: !1876, file: !437, line: 225, baseType: !1962, size: 64, offset: 640)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "may_misalign_stmts", scope: !1876, file: !437, line: 229, baseType: !2024, size: 64, offset: 704)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !398, line: 34, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !398, line: 34, size: 128, elements: !2027)
!2027 = !{!2028}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2026, file: !398, line: 34, baseType: !1374, size: 128)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "loop_line_number", scope: !1876, file: !437, line: 232, baseType: !2030, size: 32, offset: 768)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "LOC", file: !437, line: 27, baseType: !638)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "strided_stores", scope: !1876, file: !437, line: 236, baseType: !2024, size: 64, offset: 832)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "slp_instances", scope: !1876, file: !437, line: 240, baseType: !2033, size: 64, offset: 896)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_instance_heap", file: !437, line: 153, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_instance_heap", file: !437, line: 153, size: 128, elements: !2036)
!2036 = !{!2037}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2035, file: !437, line: 153, baseType: !2038, size: 128)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_instance_base", file: !437, line: 152, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_instance_base", file: !437, line: 152, size: 128, elements: !2040)
!2040 = !{!2041, !2042, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2039, file: !437, line: 152, baseType: !7, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2039, file: !437, line: 152, baseType: !7, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2039, file: !437, line: 152, baseType: !2044, size: 64, offset: 64)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, size: 64, elements: !610)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "slp_instance", file: !437, line: 150, baseType: !2046)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slp_instance", file: !437, line: 123, size: 384, elements: !2048)
!2048 = !{!2049, !2064, !2065, !2066, !2071, !2085, !2098}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2047, file: !437, line: 125, baseType: !2050, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "slp_tree", file: !437, line: 116, baseType: !2051)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slp_tree", file: !437, line: 95, size: 384, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2057, !2058, !2059}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2052, file: !437, line: 99, baseType: !2051, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2052, file: !437, line: 100, baseType: !2051, size: 64, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "stmts", scope: !2052, file: !437, line: 102, baseType: !2024, size: 64, offset: 128)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "vec_stmts", scope: !2052, file: !437, line: 104, baseType: !2024, size: 64, offset: 192)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "vec_stmts_size", scope: !2052, file: !437, line: 109, baseType: !7, size: 32, offset: 256)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2052, file: !437, line: 115, baseType: !2060, size: 64, offset: 288)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2052, file: !437, line: 111, size: 64, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "outside_of_loop", scope: !2060, file: !437, line: 113, baseType: !504, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "inside_of_loop", scope: !2060, file: !437, line: 114, baseType: !504, size: 32, offset: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "group_size", scope: !2047, file: !437, line: 128, baseType: !7, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "unrolling_factor", scope: !2047, file: !437, line: 131, baseType: !7, size: 32, offset: 96)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2047, file: !437, line: 138, baseType: !2067, size: 64, offset: 128)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2047, file: !437, line: 134, size: 64, elements: !2068)
!2068 = !{!2069, !2070}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "outside_of_loop", scope: !2067, file: !437, line: 136, baseType: !504, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "inside_of_loop", scope: !2067, file: !437, line: 137, baseType: !504, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "load_permutation", scope: !2047, file: !437, line: 142, baseType: !2072, size: 64, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !2074, line: 32, baseType: !2075)
!2074 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !2074, line: 32, size: 96, elements: !2076)
!2076 = !{!2077}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2075, file: !2074, line: 32, baseType: !2078, size: 96)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !2074, line: 31, baseType: !2079)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !2074, line: 31, size: 96, elements: !2080)
!2080 = !{!2081, !2082, !2083}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2079, file: !2074, line: 31, baseType: !7, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2079, file: !2074, line: 31, baseType: !7, size: 32, offset: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2079, file: !2074, line: 31, baseType: !2084, size: 32, offset: 64)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 32, elements: !610)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "loads", scope: !2047, file: !437, line: 145, baseType: !2086, size: 64, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_tree_heap", file: !437, line: 119, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_tree_heap", file: !437, line: 119, size: 128, elements: !2089)
!2089 = !{!2090}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2088, file: !437, line: 119, baseType: !2091, size: 128)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_tree_base", file: !437, line: 118, baseType: !2092)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_tree_base", file: !437, line: 118, size: 128, elements: !2093)
!2093 = !{!2094, !2095, !2096}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2092, file: !437, line: 118, baseType: !7, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2092, file: !437, line: 118, baseType: !7, size: 32, offset: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2092, file: !437, line: 118, baseType: !2097, size: 64, offset: 64)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2050, size: 64, elements: !610)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "first_load", scope: !2047, file: !437, line: 149, baseType: !835, size: 64, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "slp_unrolling_factor", scope: !1876, file: !437, line: 244, baseType: !7, size: 32, offset: 960)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "relevant", scope: !1869, file: !437, line: 414, baseType: !452, size: 32, offset: 192)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1869, file: !437, line: 418, baseType: !503, size: 8, offset: 224)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vectype", scope: !1869, file: !437, line: 421, baseType: !511, size: 64, offset: 256)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vectorized_stmt", scope: !1869, file: !437, line: 424, baseType: !835, size: 64, offset: 320)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "data_ref_info", scope: !1869, file: !437, line: 433, baseType: !1886, size: 64, offset: 384)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "dr_base_address", scope: !1869, file: !437, line: 437, baseType: !511, size: 64, offset: 448)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "dr_init", scope: !1869, file: !437, line: 438, baseType: !511, size: 64, offset: 512)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "dr_offset", scope: !1869, file: !437, line: 439, baseType: !511, size: 64, offset: 576)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "dr_step", scope: !1869, file: !437, line: 440, baseType: !511, size: 64, offset: 640)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "dr_aligned_to", scope: !1869, file: !437, line: 441, baseType: !511, size: 64, offset: 704)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "in_pattern_p", scope: !1869, file: !437, line: 444, baseType: !503, size: 8, offset: 768)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "related_stmt", scope: !1869, file: !437, line: 455, baseType: !835, size: 64, offset: 832)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "same_align_refs", scope: !1869, file: !437, line: 459, baseType: !2113, size: 64, offset: 896)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_dr_p_heap", file: !437, line: 399, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_dr_p_heap", file: !437, line: 399, size: 128, elements: !2116)
!2116 = !{!2117}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2115, file: !437, line: 399, baseType: !2118, size: 128)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_dr_p_base", file: !437, line: 398, baseType: !2119)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_dr_p_base", file: !437, line: 398, size: 128, elements: !2120)
!2120 = !{!2121, !2122, !2123}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2119, file: !437, line: 398, baseType: !7, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2119, file: !437, line: 398, baseType: !7, size: 32, offset: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2119, file: !437, line: 398, baseType: !2124, size: 64, offset: 64)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2125, size: 64, elements: !610)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_p", file: !437, line: 397, baseType: !1886)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "def_type", scope: !1869, file: !437, line: 462, baseType: !459, size: 32, offset: 960)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "first_dr", scope: !1869, file: !437, line: 466, baseType: !835, size: 64, offset: 1024)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "next_dr", scope: !1869, file: !437, line: 468, baseType: !835, size: 64, offset: 1088)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1869, file: !437, line: 470, baseType: !7, size: 32, offset: 1152)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "store_count", scope: !1869, file: !437, line: 473, baseType: !7, size: 32, offset: 1184)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "gap", scope: !1869, file: !437, line: 476, baseType: !7, size: 32, offset: 1216)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "same_dr_stmt", scope: !1869, file: !437, line: 479, baseType: !835, size: 64, offset: 1280)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "read_write_dep", scope: !1869, file: !437, line: 482, baseType: !503, size: 8, offset: 1344)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !1869, file: !437, line: 489, baseType: !2135, size: 64, offset: 1376)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1869, file: !437, line: 485, size: 64, elements: !2136)
!2136 = !{!2137, !2138}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "outside_of_loop", scope: !2135, file: !437, line: 487, baseType: !504, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "inside_of_loop", scope: !2135, file: !437, line: 488, baseType: !504, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "slp_type", scope: !1869, file: !437, line: 492, baseType: !470, size: 32, offset: 1440)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vinfo", scope: !1869, file: !437, line: 495, baseType: !2141, size: 64, offset: 1472)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "bb_vec_info", file: !437, line: 319, baseType: !2142)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_bb_vec_info", file: !437, line: 303, size: 320, elements: !2144)
!2144 = !{!2145, !2146, !2147, !2148, !2149}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2143, file: !437, line: 305, baseType: !1287, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "strided_stores", scope: !2143, file: !437, line: 308, baseType: !2024, size: 64, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "slp_instances", scope: !2143, file: !437, line: 312, baseType: !2033, size: 64, offset: 128)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "datarefs", scope: !2143, file: !437, line: 315, baseType: !1948, size: 64, offset: 192)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ddrs", scope: !2143, file: !437, line: 318, baseType: !1962, size: 64, offset: 256)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_adjust_info_stack", file: !3, line: 123, baseType: !2152)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_adjust_info_stack", file: !3, line: 123, size: 256, elements: !2153)
!2153 = !{!2154}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2152, file: !3, line: 123, baseType: !2155, size: 256)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_adjust_info_base", file: !3, line: 122, baseType: !2156)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_adjust_info_base", file: !3, line: 122, size: 256, elements: !2157)
!2157 = !{!2158, !2159, !2160}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2156, file: !3, line: 122, baseType: !7, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2156, file: !3, line: 122, baseType: !7, size: 32, offset: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2156, file: !3, line: 122, baseType: !2161, size: 192, offset: 64)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2162, size: 192, elements: !610)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "adjust_info", file: !3, line: 120, baseType: !2163)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 116, size: 192, elements: !2164)
!2164 = !{!2165, !2166, !2167}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2163, file: !3, line: 118, baseType: !511, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2163, file: !3, line: 118, baseType: !511, size: 64, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2163, file: !3, line: 119, baseType: !1287, size: 64, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!2170 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2171 = !{!0}
!2172 = !{i32 2, !"Dwarf Version", i32 4}
!2173 = !{i32 2, !"Debug Info Version", i32 3}
!2174 = !{i32 1, !"wchar_size", i32 4}
!2175 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2176 = distinct !DISubprogram(name: "vprintf", scope: !2177, file: !2177, line: 39, type: !2178, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2188)
!2177 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!504, !2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !509)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2183)
!2183 = !{!2184, !2185, !2186, !2187}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2182, file: !3, baseType: !7, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2182, file: !3, baseType: !7, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2182, file: !3, baseType: !508, size: 64, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2182, file: !3, baseType: !508, size: 64, offset: 128)
!2188 = !{!2189, !2190}
!2189 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2176, file: !2177, line: 39, type: !2180)
!2190 = !DILocalVariable(name: "__arg", arg: 2, scope: !2176, file: !2177, line: 39, type: !2181)
!2191 = !DILocation(line: 0, scope: !2176)
!2192 = !DILocation(line: 41, column: 20, scope: !2176)
!2193 = !DILocation(line: 41, column: 10, scope: !2176)
!2194 = !DILocation(line: 41, column: 3, scope: !2176)
!2195 = distinct !DISubprogram(name: "getchar", scope: !2177, file: !2177, line: 47, type: !2196, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2198)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!504}
!2198 = !{}
!2199 = !DILocation(line: 49, column: 16, scope: !2195)
!2200 = !DILocation(line: 49, column: 10, scope: !2195)
!2201 = !DILocation(line: 49, column: 3, scope: !2195)
!2202 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2177, file: !2177, line: 56, type: !2203, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2255)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!504, !2205}
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2207, line: 7, baseType: !2208)
!2207 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2209, line: 49, size: 1728, elements: !2210)
!2209 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2210 = !{!2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2226, !2228, !2229, !2230, !2233, !2234, !2235, !2236, !2239, !2241, !2244, !2247, !2248, !2249, !2250, !2251}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2208, file: !2209, line: 51, baseType: !504, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2208, file: !2209, line: 54, baseType: !506, size: 64, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2208, file: !2209, line: 55, baseType: !506, size: 64, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2208, file: !2209, line: 56, baseType: !506, size: 64, offset: 192)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2208, file: !2209, line: 57, baseType: !506, size: 64, offset: 256)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2208, file: !2209, line: 58, baseType: !506, size: 64, offset: 320)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2208, file: !2209, line: 59, baseType: !506, size: 64, offset: 384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2208, file: !2209, line: 60, baseType: !506, size: 64, offset: 448)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2208, file: !2209, line: 61, baseType: !506, size: 64, offset: 512)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2208, file: !2209, line: 64, baseType: !506, size: 64, offset: 576)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2208, file: !2209, line: 65, baseType: !506, size: 64, offset: 640)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2208, file: !2209, line: 66, baseType: !506, size: 64, offset: 704)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2208, file: !2209, line: 68, baseType: !2224, size: 64, offset: 768)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2209, line: 36, flags: DIFlagFwdDecl)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2208, file: !2209, line: 70, baseType: !2227, size: 64, offset: 832)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2208, file: !2209, line: 72, baseType: !504, size: 32, offset: 896)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2208, file: !2209, line: 73, baseType: !504, size: 32, offset: 928)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2208, file: !2209, line: 74, baseType: !2231, size: 64, offset: 960)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2232, line: 152, baseType: !567)
!2232 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2208, file: !2209, line: 77, baseType: !2170, size: 16, offset: 1024)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2208, file: !2209, line: 78, baseType: !1690, size: 8, offset: 1040)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2208, file: !2209, line: 79, baseType: !609, size: 8, offset: 1048)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2208, file: !2209, line: 81, baseType: !2237, size: 64, offset: 1088)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2209, line: 43, baseType: null)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2208, file: !2209, line: 89, baseType: !2240, size: 64, offset: 1152)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2232, line: 153, baseType: !567)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2208, file: !2209, line: 91, baseType: !2242, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2209, line: 37, flags: DIFlagFwdDecl)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2208, file: !2209, line: 92, baseType: !2245, size: 64, offset: 1280)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2209, line: 38, flags: DIFlagFwdDecl)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2208, file: !2209, line: 93, baseType: !2227, size: 64, offset: 1344)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2208, file: !2209, line: 94, baseType: !508, size: 64, offset: 1408)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2208, file: !2209, line: 95, baseType: !980, size: 64, offset: 1472)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2208, file: !2209, line: 96, baseType: !504, size: 32, offset: 1536)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2208, file: !2209, line: 98, baseType: !2252, size: 160, offset: 1568)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 160, elements: !2253)
!2253 = !{!2254}
!2254 = !DISubrange(count: 20)
!2255 = !{!2256}
!2256 = !DILocalVariable(name: "__fp", arg: 1, scope: !2202, file: !2177, line: 56, type: !2205)
!2257 = !DILocation(line: 0, scope: !2202)
!2258 = !DILocation(line: 58, column: 10, scope: !2202)
!2259 = !DILocation(line: 58, column: 3, scope: !2202)
!2260 = distinct !DISubprogram(name: "getc_unlocked", scope: !2177, file: !2177, line: 66, type: !2203, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2261)
!2261 = !{!2262}
!2262 = !DILocalVariable(name: "__fp", arg: 1, scope: !2260, file: !2177, line: 66, type: !2205)
!2263 = !DILocation(line: 0, scope: !2260)
!2264 = !DILocation(line: 68, column: 10, scope: !2260)
!2265 = !DILocation(line: 68, column: 3, scope: !2260)
!2266 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2177, file: !2177, line: 73, type: !2196, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2198)
!2267 = !DILocation(line: 75, column: 10, scope: !2266)
!2268 = !DILocation(line: 75, column: 3, scope: !2266)
!2269 = distinct !DISubprogram(name: "putchar", scope: !2177, file: !2177, line: 82, type: !2270, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2272)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!504, !504}
!2272 = !{!2273}
!2273 = !DILocalVariable(name: "__c", arg: 1, scope: !2269, file: !2177, line: 82, type: !504)
!2274 = !DILocation(line: 0, scope: !2269)
!2275 = !DILocation(line: 84, column: 21, scope: !2269)
!2276 = !DILocation(line: 84, column: 10, scope: !2269)
!2277 = !DILocation(line: 84, column: 3, scope: !2269)
!2278 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2177, file: !2177, line: 91, type: !2279, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2281)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!504, !504, !2205}
!2281 = !{!2282, !2283}
!2282 = !DILocalVariable(name: "__c", arg: 1, scope: !2278, file: !2177, line: 91, type: !504)
!2283 = !DILocalVariable(name: "__stream", arg: 2, scope: !2278, file: !2177, line: 91, type: !2205)
!2284 = !DILocation(line: 0, scope: !2278)
!2285 = !DILocation(line: 93, column: 10, scope: !2278)
!2286 = !DILocation(line: 93, column: 3, scope: !2278)
!2287 = distinct !DISubprogram(name: "putc_unlocked", scope: !2177, file: !2177, line: 101, type: !2279, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2288)
!2288 = !{!2289, !2290}
!2289 = !DILocalVariable(name: "__c", arg: 1, scope: !2287, file: !2177, line: 101, type: !504)
!2290 = !DILocalVariable(name: "__stream", arg: 2, scope: !2287, file: !2177, line: 101, type: !2205)
!2291 = !DILocation(line: 0, scope: !2287)
!2292 = !DILocation(line: 103, column: 10, scope: !2287)
!2293 = !DILocation(line: 103, column: 3, scope: !2287)
!2294 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2177, file: !2177, line: 108, type: !2270, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2295)
!2295 = !{!2296}
!2296 = !DILocalVariable(name: "__c", arg: 1, scope: !2294, file: !2177, line: 108, type: !504)
!2297 = !DILocation(line: 0, scope: !2294)
!2298 = !DILocation(line: 110, column: 10, scope: !2294)
!2299 = !DILocation(line: 110, column: 3, scope: !2294)
!2300 = distinct !DISubprogram(name: "getline", scope: !2177, file: !2177, line: 118, type: !2301, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2305)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!2303, !505, !2304, !2205}
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2232, line: 193, baseType: !567)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!2305 = !{!2306, !2307, !2308}
!2306 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2300, file: !2177, line: 118, type: !505)
!2307 = !DILocalVariable(name: "__n", arg: 2, scope: !2300, file: !2177, line: 118, type: !2304)
!2308 = !DILocalVariable(name: "__stream", arg: 3, scope: !2300, file: !2177, line: 118, type: !2205)
!2309 = !DILocation(line: 0, scope: !2300)
!2310 = !DILocation(line: 120, column: 10, scope: !2300)
!2311 = !DILocation(line: 120, column: 3, scope: !2300)
!2312 = distinct !DISubprogram(name: "feof_unlocked", scope: !2177, file: !2177, line: 128, type: !2203, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2313)
!2313 = !{!2314}
!2314 = !DILocalVariable(name: "__stream", arg: 1, scope: !2312, file: !2177, line: 128, type: !2205)
!2315 = !DILocation(line: 0, scope: !2312)
!2316 = !DILocation(line: 130, column: 10, scope: !2312)
!2317 = !DILocation(line: 130, column: 3, scope: !2312)
!2318 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2177, file: !2177, line: 135, type: !2203, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2319)
!2319 = !{!2320}
!2320 = !DILocalVariable(name: "__stream", arg: 1, scope: !2318, file: !2177, line: 135, type: !2205)
!2321 = !DILocation(line: 0, scope: !2318)
!2322 = !DILocation(line: 137, column: 10, scope: !2318)
!2323 = !DILocation(line: 137, column: 3, scope: !2318)
!2324 = distinct !DISubprogram(name: "tolower", scope: !2325, file: !2325, line: 207, type: !2270, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2326)
!2325 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2326 = !{!2327}
!2327 = !DILocalVariable(name: "__c", arg: 1, scope: !2324, file: !2325, line: 207, type: !504)
!2328 = !DILocation(line: 0, scope: !2324)
!2329 = !DILocation(line: 209, column: 22, scope: !2324)
!2330 = !DILocation(line: 209, column: 39, scope: !2324)
!2331 = !DILocation(line: 209, column: 38, scope: !2324)
!2332 = !DILocation(line: 209, column: 37, scope: !2324)
!2333 = !DILocation(line: 209, column: 10, scope: !2324)
!2334 = !DILocation(line: 209, column: 3, scope: !2324)
!2335 = distinct !DISubprogram(name: "toupper", scope: !2325, file: !2325, line: 213, type: !2270, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2336)
!2336 = !{!2337}
!2337 = !DILocalVariable(name: "__c", arg: 1, scope: !2335, file: !2325, line: 213, type: !504)
!2338 = !DILocation(line: 0, scope: !2335)
!2339 = !DILocation(line: 215, column: 22, scope: !2335)
!2340 = !DILocation(line: 215, column: 39, scope: !2335)
!2341 = !DILocation(line: 215, column: 38, scope: !2335)
!2342 = !DILocation(line: 215, column: 37, scope: !2335)
!2343 = !DILocation(line: 215, column: 10, scope: !2335)
!2344 = !DILocation(line: 215, column: 3, scope: !2335)
!2345 = distinct !DISubprogram(name: "atoi", scope: !2346, file: !2346, line: 361, type: !2347, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2349)
!2346 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2347 = !DISubroutineType(types: !2348)
!2348 = !{!504, !509}
!2349 = !{!2350}
!2350 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2345, file: !2346, line: 361, type: !509)
!2351 = !DILocation(line: 0, scope: !2345)
!2352 = !DILocation(line: 363, column: 16, scope: !2345)
!2353 = !DILocation(line: 363, column: 10, scope: !2345)
!2354 = !DILocation(line: 363, column: 3, scope: !2345)
!2355 = distinct !DISubprogram(name: "atol", scope: !2346, file: !2346, line: 366, type: !2356, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2358)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!567, !509}
!2358 = !{!2359}
!2359 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2355, file: !2346, line: 366, type: !509)
!2360 = !DILocation(line: 0, scope: !2355)
!2361 = !DILocation(line: 368, column: 10, scope: !2355)
!2362 = !DILocation(line: 368, column: 3, scope: !2355)
!2363 = distinct !DISubprogram(name: "atoll", scope: !2346, file: !2346, line: 373, type: !2364, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2367)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{!2366, !509}
!2366 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2367 = !{!2368}
!2368 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2363, file: !2346, line: 373, type: !509)
!2369 = !DILocation(line: 0, scope: !2363)
!2370 = !DILocation(line: 375, column: 10, scope: !2363)
!2371 = !DILocation(line: 375, column: 3, scope: !2363)
!2372 = distinct !DISubprogram(name: "bsearch", scope: !2373, file: !2373, line: 20, type: !2374, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2377)
!2373 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!508, !1330, !1330, !980, !980, !2376}
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2346, line: 808, baseType: !1334)
!2377 = !{!2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2378 = !DILocalVariable(name: "__key", arg: 1, scope: !2372, file: !2373, line: 20, type: !1330)
!2379 = !DILocalVariable(name: "__base", arg: 2, scope: !2372, file: !2373, line: 20, type: !1330)
!2380 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2372, file: !2373, line: 20, type: !980)
!2381 = !DILocalVariable(name: "__size", arg: 4, scope: !2372, file: !2373, line: 20, type: !980)
!2382 = !DILocalVariable(name: "__compar", arg: 5, scope: !2372, file: !2373, line: 21, type: !2376)
!2383 = !DILocalVariable(name: "__l", scope: !2372, file: !2373, line: 23, type: !980)
!2384 = !DILocalVariable(name: "__u", scope: !2372, file: !2373, line: 23, type: !980)
!2385 = !DILocalVariable(name: "__idx", scope: !2372, file: !2373, line: 23, type: !980)
!2386 = !DILocalVariable(name: "__p", scope: !2372, file: !2373, line: 24, type: !1330)
!2387 = !DILocalVariable(name: "__comparison", scope: !2372, file: !2373, line: 25, type: !504)
!2388 = !DILocation(line: 0, scope: !2372)
!2389 = !DILocation(line: 29, column: 3, scope: !2372)
!2390 = !DILocation(line: 27, column: 7, scope: !2372)
!2391 = !DILocation(line: 29, column: 14, scope: !2372)
!2392 = !DILocation(line: 31, column: 20, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2372, file: !2373, line: 30, column: 5)
!2394 = !DILocation(line: 31, column: 27, scope: !2393)
!2395 = !DILocation(line: 32, column: 56, scope: !2393)
!2396 = !DILocation(line: 32, column: 47, scope: !2393)
!2397 = !DILocation(line: 33, column: 22, scope: !2393)
!2398 = !DILocation(line: 34, column: 24, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2393, file: !2373, line: 34, column: 11)
!2400 = !DILocation(line: 34, column: 11, scope: !2393)
!2401 = !DILocation(line: 36, column: 29, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2399, file: !2373, line: 36, column: 16)
!2403 = !DILocation(line: 36, column: 16, scope: !2399)
!2404 = !DILocation(line: 37, column: 14, scope: !2402)
!2405 = distinct !{!2405, !2389, !2406}
!2406 = !DILocation(line: 40, column: 5, scope: !2372)
!2407 = !DILocation(line: 43, column: 1, scope: !2372)
!2408 = distinct !DISubprogram(name: "atof", scope: !2409, file: !2409, line: 25, type: !2410, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2413)
!2409 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!2412, !509}
!2412 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2413 = !{!2414}
!2414 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2408, file: !2409, line: 25, type: !509)
!2415 = !DILocation(line: 0, scope: !2408)
!2416 = !DILocation(line: 27, column: 10, scope: !2408)
!2417 = !DILocation(line: 27, column: 3, scope: !2408)
!2418 = distinct !DISubprogram(name: "strtoimax", scope: !2419, file: !2419, line: 324, type: !2420, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2426)
!2419 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2420 = !DISubroutineType(types: !2421)
!2421 = !{!2422, !2180, !2425, !504}
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2423, line: 101, baseType: !2424)
!2423 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2232, line: 72, baseType: !567)
!2425 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !505)
!2426 = !{!2427, !2428, !2429}
!2427 = !DILocalVariable(name: "nptr", arg: 1, scope: !2418, file: !2419, line: 324, type: !2180)
!2428 = !DILocalVariable(name: "endptr", arg: 2, scope: !2418, file: !2419, line: 324, type: !2425)
!2429 = !DILocalVariable(name: "base", arg: 3, scope: !2418, file: !2419, line: 324, type: !504)
!2430 = !DILocation(line: 0, scope: !2418)
!2431 = !DILocation(line: 327, column: 10, scope: !2418)
!2432 = !DILocation(line: 327, column: 3, scope: !2418)
!2433 = distinct !DISubprogram(name: "strtoumax", scope: !2419, file: !2419, line: 336, type: !2434, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2438)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!2436, !2180, !2425, !504}
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2423, line: 102, baseType: !2437)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2232, line: 73, baseType: !565)
!2438 = !{!2439, !2440, !2441}
!2439 = !DILocalVariable(name: "nptr", arg: 1, scope: !2433, file: !2419, line: 336, type: !2180)
!2440 = !DILocalVariable(name: "endptr", arg: 2, scope: !2433, file: !2419, line: 336, type: !2425)
!2441 = !DILocalVariable(name: "base", arg: 3, scope: !2433, file: !2419, line: 336, type: !504)
!2442 = !DILocation(line: 0, scope: !2433)
!2443 = !DILocation(line: 339, column: 10, scope: !2433)
!2444 = !DILocation(line: 339, column: 3, scope: !2433)
!2445 = distinct !DISubprogram(name: "wcstoimax", scope: !2419, file: !2419, line: 348, type: !2446, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2455)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{!2422, !2448, !2452, !504}
!2448 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2449)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2419, line: 34, baseType: !504)
!2452 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2453)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2455 = !{!2456, !2457, !2458}
!2456 = !DILocalVariable(name: "nptr", arg: 1, scope: !2445, file: !2419, line: 348, type: !2448)
!2457 = !DILocalVariable(name: "endptr", arg: 2, scope: !2445, file: !2419, line: 348, type: !2452)
!2458 = !DILocalVariable(name: "base", arg: 3, scope: !2445, file: !2419, line: 348, type: !504)
!2459 = !DILocation(line: 0, scope: !2445)
!2460 = !DILocation(line: 351, column: 10, scope: !2445)
!2461 = !DILocation(line: 351, column: 3, scope: !2445)
!2462 = distinct !DISubprogram(name: "wcstoumax", scope: !2419, file: !2419, line: 362, type: !2463, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2465)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{!2436, !2448, !2452, !504}
!2465 = !{!2466, !2467, !2468}
!2466 = !DILocalVariable(name: "nptr", arg: 1, scope: !2462, file: !2419, line: 362, type: !2448)
!2467 = !DILocalVariable(name: "endptr", arg: 2, scope: !2462, file: !2419, line: 362, type: !2452)
!2468 = !DILocalVariable(name: "base", arg: 3, scope: !2462, file: !2419, line: 362, type: !504)
!2469 = !DILocation(line: 0, scope: !2462)
!2470 = !DILocation(line: 365, column: 10, scope: !2462)
!2471 = !DILocation(line: 365, column: 3, scope: !2462)
!2472 = distinct !DISubprogram(name: "stat", scope: !2473, file: !2473, line: 453, type: !2474, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2511)
!2473 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!504, !509, !2476}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2478, line: 46, size: 1152, elements: !2479)
!2478 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2479 = !{!2480, !2482, !2484, !2486, !2488, !2490, !2492, !2493, !2494, !2495, !2497, !2499, !2507, !2508, !2509}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2477, file: !2478, line: 48, baseType: !2481, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2232, line: 145, baseType: !565)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2477, file: !2478, line: 53, baseType: !2483, size: 64, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2232, line: 148, baseType: !565)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2477, file: !2478, line: 61, baseType: !2485, size: 64, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2232, line: 151, baseType: !565)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2477, file: !2478, line: 62, baseType: !2487, size: 32, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2232, line: 150, baseType: !7)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2477, file: !2478, line: 64, baseType: !2489, size: 32, offset: 224)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2232, line: 146, baseType: !7)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2477, file: !2478, line: 65, baseType: !2491, size: 32, offset: 256)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2232, line: 147, baseType: !7)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2477, file: !2478, line: 67, baseType: !504, size: 32, offset: 288)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2477, file: !2478, line: 69, baseType: !2481, size: 64, offset: 320)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2477, file: !2478, line: 74, baseType: !2231, size: 64, offset: 384)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2477, file: !2478, line: 78, baseType: !2496, size: 64, offset: 448)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2232, line: 174, baseType: !567)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2477, file: !2478, line: 80, baseType: !2498, size: 64, offset: 512)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2232, line: 179, baseType: !567)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2477, file: !2478, line: 91, baseType: !2500, size: 128, offset: 576)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2501, line: 10, size: 128, elements: !2502)
!2501 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2502 = !{!2503, !2505}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2500, file: !2501, line: 12, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2232, line: 160, baseType: !567)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2500, file: !2501, line: 16, baseType: !2506, size: 64, offset: 64)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2232, line: 196, baseType: !567)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2477, file: !2478, line: 92, baseType: !2500, size: 128, offset: 704)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2477, file: !2478, line: 93, baseType: !2500, size: 128, offset: 832)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2477, file: !2478, line: 106, baseType: !2510, size: 192, offset: 960)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2506, size: 192, elements: !585)
!2511 = !{!2512, !2513}
!2512 = !DILocalVariable(name: "__path", arg: 1, scope: !2472, file: !2473, line: 453, type: !509)
!2513 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2472, file: !2473, line: 453, type: !2476)
!2514 = !DILocation(line: 0, scope: !2472)
!2515 = !DILocation(line: 455, column: 10, scope: !2472)
!2516 = !DILocation(line: 455, column: 3, scope: !2472)
!2517 = distinct !DISubprogram(name: "lstat", scope: !2473, file: !2473, line: 460, type: !2474, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2518)
!2518 = !{!2519, !2520}
!2519 = !DILocalVariable(name: "__path", arg: 1, scope: !2517, file: !2473, line: 460, type: !509)
!2520 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2517, file: !2473, line: 460, type: !2476)
!2521 = !DILocation(line: 0, scope: !2517)
!2522 = !DILocation(line: 462, column: 10, scope: !2517)
!2523 = !DILocation(line: 462, column: 3, scope: !2517)
!2524 = distinct !DISubprogram(name: "fstat", scope: !2473, file: !2473, line: 467, type: !2525, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2527)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{!504, !504, !2476}
!2527 = !{!2528, !2529}
!2528 = !DILocalVariable(name: "__fd", arg: 1, scope: !2524, file: !2473, line: 467, type: !504)
!2529 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2524, file: !2473, line: 467, type: !2476)
!2530 = !DILocation(line: 0, scope: !2524)
!2531 = !DILocation(line: 469, column: 10, scope: !2524)
!2532 = !DILocation(line: 469, column: 3, scope: !2524)
!2533 = distinct !DISubprogram(name: "fstatat", scope: !2473, file: !2473, line: 474, type: !2534, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2536)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{!504, !504, !509, !2476, !504}
!2536 = !{!2537, !2538, !2539, !2540}
!2537 = !DILocalVariable(name: "__fd", arg: 1, scope: !2533, file: !2473, line: 474, type: !504)
!2538 = !DILocalVariable(name: "__filename", arg: 2, scope: !2533, file: !2473, line: 474, type: !509)
!2539 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2533, file: !2473, line: 474, type: !2476)
!2540 = !DILocalVariable(name: "__flag", arg: 4, scope: !2533, file: !2473, line: 474, type: !504)
!2541 = !DILocation(line: 0, scope: !2533)
!2542 = !DILocation(line: 477, column: 10, scope: !2533)
!2543 = !DILocation(line: 477, column: 3, scope: !2533)
!2544 = distinct !DISubprogram(name: "mknod", scope: !2473, file: !2473, line: 483, type: !2545, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2547)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!504, !509, !2487, !2481}
!2547 = !{!2548, !2549, !2550}
!2548 = !DILocalVariable(name: "__path", arg: 1, scope: !2544, file: !2473, line: 483, type: !509)
!2549 = !DILocalVariable(name: "__mode", arg: 2, scope: !2544, file: !2473, line: 483, type: !2487)
!2550 = !DILocalVariable(name: "__dev", arg: 3, scope: !2544, file: !2473, line: 483, type: !2481)
!2551 = !DILocation(line: 0, scope: !2544)
!2552 = !DILocation(line: 485, column: 10, scope: !2544)
!2553 = !DILocation(line: 485, column: 3, scope: !2544)
!2554 = distinct !DISubprogram(name: "mknodat", scope: !2473, file: !2473, line: 491, type: !2555, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2557)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!504, !504, !509, !2487, !2481}
!2557 = !{!2558, !2559, !2560, !2561}
!2558 = !DILocalVariable(name: "__fd", arg: 1, scope: !2554, file: !2473, line: 491, type: !504)
!2559 = !DILocalVariable(name: "__path", arg: 2, scope: !2554, file: !2473, line: 491, type: !509)
!2560 = !DILocalVariable(name: "__mode", arg: 3, scope: !2554, file: !2473, line: 491, type: !2487)
!2561 = !DILocalVariable(name: "__dev", arg: 4, scope: !2554, file: !2473, line: 491, type: !2481)
!2562 = !DILocation(line: 0, scope: !2554)
!2563 = !DILocation(line: 494, column: 10, scope: !2554)
!2564 = !DILocation(line: 494, column: 3, scope: !2554)
!2565 = distinct !DISubprogram(name: "stat64", scope: !2473, file: !2473, line: 502, type: !2566, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2588)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!504, !509, !2568}
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2478, line: 119, size: 1152, elements: !2570)
!2570 = !{!2571, !2572, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2584, !2585, !2586, !2587}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2569, file: !2478, line: 121, baseType: !2481, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2569, file: !2478, line: 123, baseType: !2573, size: 64, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2232, line: 149, baseType: !565)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2569, file: !2478, line: 124, baseType: !2485, size: 64, offset: 128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2569, file: !2478, line: 125, baseType: !2487, size: 32, offset: 192)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2569, file: !2478, line: 132, baseType: !2489, size: 32, offset: 224)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2569, file: !2478, line: 133, baseType: !2491, size: 32, offset: 256)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2569, file: !2478, line: 135, baseType: !504, size: 32, offset: 288)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2569, file: !2478, line: 136, baseType: !2481, size: 64, offset: 320)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2569, file: !2478, line: 137, baseType: !2231, size: 64, offset: 384)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2569, file: !2478, line: 143, baseType: !2496, size: 64, offset: 448)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2569, file: !2478, line: 144, baseType: !2583, size: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2232, line: 180, baseType: !567)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2569, file: !2478, line: 152, baseType: !2500, size: 128, offset: 576)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2569, file: !2478, line: 153, baseType: !2500, size: 128, offset: 704)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2569, file: !2478, line: 154, baseType: !2500, size: 128, offset: 832)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2569, file: !2478, line: 164, baseType: !2510, size: 192, offset: 960)
!2588 = !{!2589, !2590}
!2589 = !DILocalVariable(name: "__path", arg: 1, scope: !2565, file: !2473, line: 502, type: !509)
!2590 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2565, file: !2473, line: 502, type: !2568)
!2591 = !DILocation(line: 0, scope: !2565)
!2592 = !DILocation(line: 504, column: 10, scope: !2565)
!2593 = !DILocation(line: 504, column: 3, scope: !2565)
!2594 = distinct !DISubprogram(name: "lstat64", scope: !2473, file: !2473, line: 509, type: !2566, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2595)
!2595 = !{!2596, !2597}
!2596 = !DILocalVariable(name: "__path", arg: 1, scope: !2594, file: !2473, line: 509, type: !509)
!2597 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2594, file: !2473, line: 509, type: !2568)
!2598 = !DILocation(line: 0, scope: !2594)
!2599 = !DILocation(line: 511, column: 10, scope: !2594)
!2600 = !DILocation(line: 511, column: 3, scope: !2594)
!2601 = distinct !DISubprogram(name: "fstat64", scope: !2473, file: !2473, line: 516, type: !2602, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2604)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{!504, !504, !2568}
!2604 = !{!2605, !2606}
!2605 = !DILocalVariable(name: "__fd", arg: 1, scope: !2601, file: !2473, line: 516, type: !504)
!2606 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2601, file: !2473, line: 516, type: !2568)
!2607 = !DILocation(line: 0, scope: !2601)
!2608 = !DILocation(line: 518, column: 10, scope: !2601)
!2609 = !DILocation(line: 518, column: 3, scope: !2601)
!2610 = distinct !DISubprogram(name: "fstatat64", scope: !2473, file: !2473, line: 523, type: !2611, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2613)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!504, !504, !509, !2568, !504}
!2613 = !{!2614, !2615, !2616, !2617}
!2614 = !DILocalVariable(name: "__fd", arg: 1, scope: !2610, file: !2473, line: 523, type: !504)
!2615 = !DILocalVariable(name: "__filename", arg: 2, scope: !2610, file: !2473, line: 523, type: !509)
!2616 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2610, file: !2473, line: 523, type: !2568)
!2617 = !DILocalVariable(name: "__flag", arg: 4, scope: !2610, file: !2473, line: 523, type: !504)
!2618 = !DILocation(line: 0, scope: !2610)
!2619 = !DILocation(line: 526, column: 10, scope: !2610)
!2620 = !DILocation(line: 526, column: 3, scope: !2610)
!2621 = distinct !DISubprogram(name: "rename_variables_in_bb", scope: !3, file: !3, line: 73, type: !2622, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{null, !1287}
!2624 = !{!2625, !2626, !2633, !2634, !2635, !2648, !2649, !2656}
!2625 = !DILocalVariable(name: "bb", arg: 1, scope: !2621, file: !3, line: 73, type: !1287)
!2626 = !DILocalVariable(name: "gsi", scope: !2621, file: !3, line: 75, type: !2627)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !398, line: 265, baseType: !2628)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 254, size: 192, elements: !2629)
!2629 = !{!2630, !2631, !2632}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2628, file: !398, line: 257, baseType: !830, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2628, file: !398, line: 263, baseType: !825, size: 64, offset: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2628, file: !398, line: 264, baseType: !1287, size: 64, offset: 128)
!2633 = !DILocalVariable(name: "stmt", scope: !2621, file: !3, line: 76, type: !835)
!2634 = !DILocalVariable(name: "use_p", scope: !2621, file: !3, line: 77, type: !1864)
!2635 = !DILocalVariable(name: "iter", scope: !2621, file: !3, line: 78, type: !2636)
!2636 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !391, line: 140, baseType: !2637)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !391, line: 131, size: 320, elements: !2638)
!2638 = !{!2639, !2640, !2641, !2643, !2645, !2646, !2647}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2637, file: !391, line: 133, baseType: !503, size: 8)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !2637, file: !391, line: 134, baseType: !390, size: 32, offset: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !2637, file: !391, line: 135, baseType: !2642, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !391, line: 42, baseType: !864)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !2637, file: !391, line: 136, baseType: !2644, size: 64, offset: 128)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !391, line: 50, baseType: !871)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !2637, file: !391, line: 137, baseType: !504, size: 32, offset: 192)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !2637, file: !391, line: 138, baseType: !504, size: 32, offset: 224)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !2637, file: !391, line: 139, baseType: !835, size: 64, offset: 256)
!2648 = !DILocalVariable(name: "e", scope: !2621, file: !3, line: 79, type: !815)
!2649 = !DILocalVariable(name: "ei", scope: !2621, file: !3, line: 80, type: !2650)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !135, line: 682, baseType: !2651)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 679, size: 128, elements: !2652)
!2652 = !{!2653, !2654}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2651, file: !135, line: 680, baseType: !7, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2651, file: !135, line: 681, baseType: !2655, size: 64, offset: 64)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!2656 = !DILocalVariable(name: "loop", scope: !2621, file: !3, line: 81, type: !1050)
!2657 = !DILocation(line: 0, scope: !2621)
!2658 = !DILocation(line: 75, column: 3, scope: !2621)
!2659 = !DILocation(line: 78, column: 3, scope: !2621)
!2660 = !DILocation(line: 79, column: 3, scope: !2621)
!2661 = !DILocation(line: 80, column: 3, scope: !2621)
!2662 = !DILocation(line: 81, column: 27, scope: !2621)
!2663 = !DILocation(line: 83, column: 14, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 83, column: 3)
!2665 = !DILocation(line: 83, column: 8, scope: !2664)
!2666 = !DILocation(line: 83, column: 34, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 83, column: 3)
!2668 = !DILocation(line: 83, column: 33, scope: !2667)
!2669 = !DILocation(line: 83, column: 3, scope: !2664)
!2670 = !DILocation(line: 85, column: 14, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 84, column: 5)
!2672 = !DILocation(line: 86, column: 7, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 86, column: 7)
!2674 = !DILocation(line: 0, scope: !2673)
!2675 = !DILocation(line: 86, column: 7, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2673, file: !3, line: 86, column: 7)
!2677 = !DILocation(line: 87, column: 2, scope: !2676)
!2678 = distinct !{!2678, !2672, !2679}
!2679 = !DILocation(line: 87, column: 22, scope: !2673)
!2680 = !DILocation(line: 83, column: 51, scope: !2667)
!2681 = !DILocation(line: 83, column: 3, scope: !2667)
!2682 = distinct !{!2682, !2669, !2683}
!2683 = !DILocation(line: 88, column: 5, scope: !2664)
!2684 = !DILocation(line: 90, column: 3, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 90, column: 3)
!2686 = !DILocation(line: 0, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 90, column: 3)
!2688 = !DILocation(line: 0, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 94, column: 7)
!2690 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 91, column: 5)
!2691 = !DILocation(line: 90, column: 3, scope: !2687)
!2692 = !DILocation(line: 92, column: 41, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 92, column: 11)
!2694 = !DILocation(line: 92, column: 44, scope: !2693)
!2695 = !DILocation(line: 92, column: 12, scope: !2693)
!2696 = !DILocation(line: 92, column: 11, scope: !2690)
!2697 = !DILocation(line: 94, column: 18, scope: !2689)
!2698 = !DILocation(line: 94, column: 34, scope: !2689)
!2699 = !DILocation(line: 94, column: 37, scope: !2689)
!2700 = !DILocation(line: 94, column: 12, scope: !2689)
!2701 = !DILocation(line: 94, column: 45, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 94, column: 7)
!2703 = !DILocation(line: 94, column: 44, scope: !2702)
!2704 = !DILocation(line: 94, column: 7, scope: !2689)
!2705 = !DILocation(line: 95, column: 24, scope: !2702)
!2706 = !DILocation(line: 95, column: 9, scope: !2702)
!2707 = !DILocation(line: 94, column: 62, scope: !2702)
!2708 = !DILocation(line: 94, column: 7, scope: !2702)
!2709 = distinct !{!2709, !2704, !2710}
!2710 = !DILocation(line: 95, column: 69, scope: !2689)
!2711 = distinct !{!2711, !2684, !2712}
!2712 = !DILocation(line: 96, column: 5, scope: !2685)
!2713 = !DILocation(line: 97, column: 1, scope: !2621)
!2714 = distinct !DISubprogram(name: "gsi_start_bb", scope: !398, file: !398, line: 4418, type: !2715, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2717)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!2627, !1287}
!2717 = !{!2718, !2719, !2720}
!2718 = !DILocalVariable(name: "bb", arg: 1, scope: !2714, file: !398, line: 4418, type: !1287)
!2719 = !DILocalVariable(name: "i", scope: !2714, file: !398, line: 4420, type: !2627)
!2720 = !DILocalVariable(name: "seq", scope: !2714, file: !398, line: 4421, type: !825)
!2721 = !DILocation(line: 0, scope: !2714)
!2722 = !DILocation(line: 4420, column: 24, scope: !2714)
!2723 = !DILocation(line: 4423, column: 9, scope: !2714)
!2724 = !DILocation(line: 4424, column: 11, scope: !2714)
!2725 = !DILocation(line: 4424, column: 5, scope: !2714)
!2726 = !DILocation(line: 4424, column: 9, scope: !2714)
!2727 = !DILocation(line: 4425, column: 5, scope: !2714)
!2728 = !DILocation(line: 4425, column: 9, scope: !2714)
!2729 = !DILocation(line: 4426, column: 5, scope: !2714)
!2730 = !DILocation(line: 4426, column: 8, scope: !2714)
!2731 = !DILocation(line: 4429, column: 1, scope: !2714)
!2732 = distinct !DISubprogram(name: "gsi_end_p", scope: !398, file: !398, line: 4467, type: !2733, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2735)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!503, !2627}
!2735 = !{!2736}
!2736 = !DILocalVariable(name: "i", arg: 1, scope: !2732, file: !398, line: 4467, type: !2627)
!2737 = !DILocation(line: 4467, column: 33, scope: !2732)
!2738 = !DILocation(line: 4469, column: 12, scope: !2732)
!2739 = !DILocation(line: 4469, column: 16, scope: !2732)
!2740 = !DILocation(line: 4469, column: 10, scope: !2732)
!2741 = !DILocation(line: 4469, column: 3, scope: !2732)
!2742 = distinct !DISubprogram(name: "gsi_stmt", scope: !398, file: !398, line: 4501, type: !2743, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2745)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{!835, !2627}
!2745 = !{!2746}
!2746 = !DILocalVariable(name: "i", arg: 1, scope: !2742, file: !398, line: 4501, type: !2627)
!2747 = !DILocation(line: 4501, column: 32, scope: !2742)
!2748 = !DILocation(line: 4503, column: 12, scope: !2742)
!2749 = !DILocation(line: 4503, column: 17, scope: !2742)
!2750 = !DILocation(line: 4503, column: 3, scope: !2742)
!2751 = distinct !DISubprogram(name: "op_iter_init_use", scope: !2752, file: !2752, line: 768, type: !2753, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2756)
!2752 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!1864, !2755, !835, !504}
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2756 = !{!2757, !2758, !2759}
!2757 = !DILocalVariable(name: "ptr", arg: 1, scope: !2751, file: !2752, line: 768, type: !2755)
!2758 = !DILocalVariable(name: "stmt", arg: 2, scope: !2751, file: !2752, line: 768, type: !835)
!2759 = !DILocalVariable(name: "flags", arg: 3, scope: !2751, file: !2752, line: 768, type: !504)
!2760 = !DILocation(line: 0, scope: !2751)
!2761 = !DILocation(line: 770, column: 3, scope: !2751)
!2762 = !DILocation(line: 772, column: 3, scope: !2751)
!2763 = !DILocation(line: 773, column: 8, scope: !2751)
!2764 = !DILocation(line: 773, column: 18, scope: !2751)
!2765 = !DILocation(line: 774, column: 10, scope: !2751)
!2766 = !DILocation(line: 774, column: 3, scope: !2751)
!2767 = distinct !DISubprogram(name: "op_iter_done", scope: !2752, file: !2752, line: 652, type: !2768, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2772)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!503, !2770}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2636)
!2772 = !{!2773}
!2773 = !DILocalVariable(name: "ptr", arg: 1, scope: !2767, file: !2752, line: 652, type: !2770)
!2774 = !DILocation(line: 0, scope: !2767)
!2775 = !DILocation(line: 654, column: 15, scope: !2767)
!2776 = !DILocation(line: 654, column: 3, scope: !2767)
!2777 = distinct !DISubprogram(name: "rename_use_op", scope: !3, file: !3, line: 51, type: !2778, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2780)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{null, !1864}
!2780 = !{!2781, !2782}
!2781 = !DILocalVariable(name: "op_p", arg: 1, scope: !2777, file: !3, line: 51, type: !1864)
!2782 = !DILocalVariable(name: "new_name", scope: !2777, file: !3, line: 53, type: !511)
!2783 = !DILocation(line: 0, scope: !2777)
!2784 = !DILocation(line: 55, column: 7, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 55, column: 7)
!2786 = !DILocation(line: 55, column: 39, scope: !2785)
!2787 = !DILocation(line: 55, column: 7, scope: !2777)
!2788 = !DILocation(line: 58, column: 31, scope: !2777)
!2789 = !DILocation(line: 58, column: 14, scope: !2777)
!2790 = !DILocation(line: 61, column: 8, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 61, column: 7)
!2792 = !DILocation(line: 61, column: 7, scope: !2777)
!2793 = !DILocation(line: 66, column: 3, scope: !2777)
!2794 = !DILocation(line: 67, column: 1, scope: !2777)
!2795 = distinct !DISubprogram(name: "op_iter_next_use", scope: !2752, file: !2752, line: 659, type: !2796, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2798)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!1864, !2755}
!2798 = !{!2799, !2800}
!2799 = !DILocalVariable(name: "ptr", arg: 1, scope: !2795, file: !2752, line: 659, type: !2755)
!2800 = !DILocalVariable(name: "use_p", scope: !2795, file: !2752, line: 661, type: !1864)
!2801 = !DILocation(line: 0, scope: !2795)
!2802 = !DILocation(line: 665, column: 12, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2795, file: !2752, line: 665, column: 7)
!2804 = !DILocation(line: 665, column: 7, scope: !2803)
!2805 = !DILocation(line: 665, column: 7, scope: !2795)
!2806 = !DILocation(line: 667, column: 15, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2803, file: !2752, line: 666, column: 5)
!2808 = !DILocation(line: 668, column: 30, scope: !2807)
!2809 = !DILocation(line: 668, column: 17, scope: !2807)
!2810 = !DILocation(line: 669, column: 7, scope: !2807)
!2811 = !DILocation(line: 671, column: 12, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2795, file: !2752, line: 671, column: 7)
!2813 = !DILocation(line: 671, column: 25, scope: !2812)
!2814 = !DILocation(line: 671, column: 18, scope: !2812)
!2815 = !DILocation(line: 671, column: 7, scope: !2795)
!2816 = !DILocation(line: 673, column: 14, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2812, file: !2752, line: 672, column: 5)
!2818 = !DILocation(line: 673, column: 7, scope: !2817)
!2819 = !DILocation(line: 675, column: 8, scope: !2795)
!2820 = !DILocation(line: 675, column: 13, scope: !2795)
!2821 = !DILocation(line: 676, column: 3, scope: !2795)
!2822 = !DILocation(line: 677, column: 1, scope: !2795)
!2823 = distinct !DISubprogram(name: "gsi_next", scope: !398, file: !398, line: 4485, type: !2824, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2827)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{null, !2826}
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2827 = !{!2828}
!2828 = !DILocalVariable(name: "i", arg: 1, scope: !2823, file: !398, line: 4485, type: !2826)
!2829 = !DILocation(line: 0, scope: !2823)
!2830 = !DILocation(line: 4487, column: 15, scope: !2823)
!2831 = !DILocation(line: 4487, column: 20, scope: !2823)
!2832 = !DILocation(line: 4487, column: 10, scope: !2823)
!2833 = !DILocation(line: 4488, column: 1, scope: !2823)
!2834 = distinct !DISubprogram(name: "ei_start_1", scope: !135, file: !135, line: 696, type: !2835, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2837)
!2835 = !DISubroutineType(types: !2836)
!2836 = !{!2650, !2655}
!2837 = !{!2838, !2839}
!2838 = !DILocalVariable(name: "ev", arg: 1, scope: !2834, file: !135, line: 696, type: !2655)
!2839 = !DILocalVariable(name: "i", scope: !2834, file: !135, line: 698, type: !2650)
!2840 = !DILocation(line: 0, scope: !2834)
!2841 = !DILocation(line: 700, column: 5, scope: !2834)
!2842 = !DILocation(line: 700, column: 11, scope: !2834)
!2843 = !DILocation(line: 701, column: 5, scope: !2834)
!2844 = !DILocation(line: 701, column: 15, scope: !2834)
!2845 = !DILocation(line: 703, column: 3, scope: !2834)
!2846 = distinct !DISubprogram(name: "ei_cond", scope: !135, file: !135, line: 771, type: !2847, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2850)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!503, !2650, !2849}
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!2850 = !{!2851, !2852}
!2851 = !DILocalVariable(name: "ei", arg: 1, scope: !2846, file: !135, line: 771, type: !2650)
!2852 = !DILocalVariable(name: "p", arg: 2, scope: !2846, file: !135, line: 771, type: !2849)
!2853 = !DILocation(line: 0, scope: !2846)
!2854 = !DILocation(line: 773, column: 8, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2846, file: !135, line: 773, column: 7)
!2856 = !DILocation(line: 773, column: 7, scope: !2846)
!2857 = !DILocation(line: 775, column: 12, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2855, file: !135, line: 774, column: 5)
!2859 = !DILocation(line: 776, column: 7, scope: !2858)
!2860 = !DILocation(line: 781, column: 7, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2855, file: !135, line: 779, column: 5)
!2862 = !DILocation(line: 0, scope: !2855)
!2863 = !DILocation(line: 783, column: 1, scope: !2846)
!2864 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !2752, file: !2752, line: 442, type: !2865, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2867)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!1864, !835, !504}
!2867 = !{!2868, !2869}
!2868 = !DILocalVariable(name: "gs", arg: 1, scope: !2864, file: !2752, line: 442, type: !835)
!2869 = !DILocalVariable(name: "i", arg: 2, scope: !2864, file: !2752, line: 442, type: !504)
!2870 = !DILocation(line: 0, scope: !2864)
!2871 = !DILocation(line: 444, column: 11, scope: !2864)
!2872 = !DILocation(line: 444, column: 35, scope: !2864)
!2873 = !DILocation(line: 444, column: 3, scope: !2864)
!2874 = distinct !DISubprogram(name: "ei_next", scope: !135, file: !135, line: 736, type: !2875, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2878)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{null, !2877}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2878 = !{!2879}
!2879 = !DILocalVariable(name: "i", arg: 1, scope: !2874, file: !135, line: 736, type: !2877)
!2880 = !DILocation(line: 0, scope: !2874)
!2881 = !DILocation(line: 738, column: 3, scope: !2874)
!2882 = !DILocation(line: 739, column: 11, scope: !2874)
!2883 = !DILocation(line: 740, column: 1, scope: !2874)
!2884 = distinct !DISubprogram(name: "rename_variables_in_loop", scope: !3, file: !3, line: 103, type: !2885, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2887)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{null, !1050}
!2887 = !{!2888, !2889, !2890}
!2888 = !DILocalVariable(name: "loop", arg: 1, scope: !2884, file: !3, line: 103, type: !1050)
!2889 = !DILocalVariable(name: "i", scope: !2884, file: !3, line: 105, type: !7)
!2890 = !DILocalVariable(name: "bbs", scope: !2884, file: !3, line: 106, type: !1863)
!2891 = !DILocation(line: 0, scope: !2884)
!2892 = !DILocation(line: 108, column: 9, scope: !2884)
!2893 = !DILocation(line: 0, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 110, column: 3)
!2895 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 110, column: 3)
!2896 = !DILocation(line: 110, column: 8, scope: !2895)
!2897 = !DILocation(line: 0, scope: !2895)
!2898 = !DILocation(line: 110, column: 25, scope: !2894)
!2899 = !DILocation(line: 110, column: 17, scope: !2894)
!2900 = !DILocation(line: 110, column: 3, scope: !2895)
!2901 = !DILocation(line: 111, column: 29, scope: !2894)
!2902 = !DILocation(line: 111, column: 5, scope: !2894)
!2903 = !DILocation(line: 110, column: 37, scope: !2894)
!2904 = !DILocation(line: 110, column: 3, scope: !2894)
!2905 = distinct !{!2905, !2900, !2906}
!2906 = !DILocation(line: 111, column: 35, scope: !2895)
!2907 = !DILocation(line: 113, column: 9, scope: !2884)
!2908 = !DILocation(line: 113, column: 3, scope: !2884)
!2909 = !DILocation(line: 114, column: 1, scope: !2884)
!2910 = distinct !DISubprogram(name: "slpeel_make_loop_iterate_ntimes", scope: !3, file: !3, line: 756, type: !2911, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2913)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{null, !1050, !511}
!2913 = !{!2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927}
!2914 = !DILocalVariable(name: "loop", arg: 1, scope: !2910, file: !3, line: 756, type: !1050)
!2915 = !DILocalVariable(name: "niters", arg: 2, scope: !2910, file: !3, line: 756, type: !511)
!2916 = !DILocalVariable(name: "indx_before_incr", scope: !2910, file: !3, line: 758, type: !511)
!2917 = !DILocalVariable(name: "indx_after_incr", scope: !2910, file: !3, line: 758, type: !511)
!2918 = !DILocalVariable(name: "cond_stmt", scope: !2910, file: !3, line: 759, type: !835)
!2919 = !DILocalVariable(name: "orig_cond", scope: !2910, file: !3, line: 760, type: !835)
!2920 = !DILocalVariable(name: "exit_edge", scope: !2910, file: !3, line: 761, type: !815)
!2921 = !DILocalVariable(name: "loop_cond_gsi", scope: !2910, file: !3, line: 762, type: !2627)
!2922 = !DILocalVariable(name: "incr_gsi", scope: !2910, file: !3, line: 763, type: !2627)
!2923 = !DILocalVariable(name: "insert_after", scope: !2910, file: !3, line: 764, type: !503)
!2924 = !DILocalVariable(name: "init", scope: !2910, file: !3, line: 765, type: !511)
!2925 = !DILocalVariable(name: "step", scope: !2910, file: !3, line: 766, type: !511)
!2926 = !DILocalVariable(name: "loop_loc", scope: !2910, file: !3, line: 767, type: !2030)
!2927 = !DILocalVariable(name: "code", scope: !2910, file: !3, line: 768, type: !196)
!2928 = !DILocation(line: 0, scope: !2910)
!2929 = !DILocation(line: 758, column: 3, scope: !2910)
!2930 = !DILocation(line: 761, column: 20, scope: !2910)
!2931 = !DILocation(line: 762, column: 3, scope: !2910)
!2932 = !DILocation(line: 763, column: 3, scope: !2910)
!2933 = !DILocation(line: 764, column: 3, scope: !2910)
!2934 = !DILocation(line: 765, column: 30, scope: !2910)
!2935 = !DILocation(line: 765, column: 15, scope: !2910)
!2936 = !DILocation(line: 766, column: 30, scope: !2910)
!2937 = !DILocation(line: 766, column: 15, scope: !2910)
!2938 = !DILocation(line: 770, column: 15, scope: !2910)
!2939 = !DILocation(line: 771, column: 3, scope: !2910)
!2940 = !DILocation(line: 772, column: 19, scope: !2910)
!2941 = !DILocation(line: 774, column: 3, scope: !2910)
!2942 = !DILocation(line: 776, column: 25, scope: !2910)
!2943 = !DILocation(line: 775, column: 3, scope: !2910)
!2944 = !DILocation(line: 778, column: 63, scope: !2910)
!2945 = !DILocation(line: 778, column: 21, scope: !2910)
!2946 = !DILocation(line: 778, column: 19, scope: !2910)
!2947 = !DILocation(line: 781, column: 12, scope: !2910)
!2948 = !DILocation(line: 784, column: 22, scope: !2910)
!2949 = !DILocation(line: 784, column: 28, scope: !2910)
!2950 = !DILocation(line: 784, column: 10, scope: !2910)
!2951 = !DILocation(line: 785, column: 40, scope: !2910)
!2952 = !DILocation(line: 785, column: 15, scope: !2910)
!2953 = !DILocation(line: 788, column: 3, scope: !2910)
!2954 = !DILocation(line: 791, column: 3, scope: !2910)
!2955 = !DILocation(line: 793, column: 14, scope: !2910)
!2956 = !DILocation(line: 794, column: 7, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 794, column: 7)
!2958 = !DILocation(line: 794, column: 17, scope: !2957)
!2959 = !DILocation(line: 794, column: 21, scope: !2957)
!2960 = !DILocation(line: 794, column: 32, scope: !2957)
!2961 = !DILocation(line: 794, column: 7, scope: !2910)
!2962 = !DILocation(line: 796, column: 20, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 796, column: 11)
!2964 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 795, column: 5)
!2965 = !DILocation(line: 796, column: 11, scope: !2964)
!2966 = !DILocation(line: 798, column: 18, scope: !2963)
!2967 = !DILocation(line: 798, column: 39, scope: !2963)
!2968 = !DILocation(line: 797, column: 9, scope: !2963)
!2969 = !DILocation(line: 799, column: 26, scope: !2964)
!2970 = !DILocation(line: 799, column: 7, scope: !2964)
!2971 = !DILocation(line: 800, column: 5, scope: !2964)
!2972 = !DILocation(line: 802, column: 9, scope: !2910)
!2973 = !DILocation(line: 802, column: 23, scope: !2910)
!2974 = !DILocation(line: 803, column: 1, scope: !2910)
!2975 = distinct !DISubprogram(name: "find_loop_location", scope: !3, file: !3, line: 1433, type: !2976, scopeLine: 1434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2978)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!2030, !1050}
!2978 = !{!2979, !2980, !2981, !2982}
!2979 = !DILocalVariable(name: "loop", arg: 1, scope: !2975, file: !3, line: 1433, type: !1050)
!2980 = !DILocalVariable(name: "stmt", scope: !2975, file: !3, line: 1435, type: !835)
!2981 = !DILocalVariable(name: "bb", scope: !2975, file: !3, line: 1436, type: !1287)
!2982 = !DILocalVariable(name: "si", scope: !2975, file: !3, line: 1437, type: !2627)
!2983 = !DILocation(line: 0, scope: !2975)
!2984 = !DILocation(line: 1437, column: 3, scope: !2975)
!2985 = !DILocation(line: 1439, column: 8, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 1439, column: 7)
!2987 = !DILocation(line: 1439, column: 7, scope: !2975)
!2988 = !DILocation(line: 1442, column: 10, scope: !2975)
!2989 = !DILocation(line: 1444, column: 7, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 1444, column: 7)
!2991 = !DILocation(line: 1444, column: 12, scope: !2990)
!2992 = !DILocation(line: 1444, column: 15, scope: !2990)
!2993 = !DILocation(line: 1444, column: 38, scope: !2990)
!2994 = !DILocation(line: 1444, column: 7, scope: !2975)
!2995 = !DILocation(line: 1445, column: 12, scope: !2990)
!2996 = !DILocation(line: 1445, column: 5, scope: !2990)
!2997 = !DILocation(line: 1450, column: 14, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 1450, column: 7)
!2999 = !DILocation(line: 1450, column: 8, scope: !2998)
!3000 = !DILocation(line: 1450, column: 7, scope: !2975)
!3001 = !DILocation(line: 1455, column: 13, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 1455, column: 3)
!3003 = !DILocation(line: 1455, column: 8, scope: !3002)
!3004 = !DILocation(line: 1455, column: 33, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 1455, column: 3)
!3006 = !DILocation(line: 1455, column: 32, scope: !3005)
!3007 = !DILocation(line: 1455, column: 3, scope: !3002)
!3008 = !DILocation(line: 1457, column: 14, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 1456, column: 5)
!3010 = !DILocation(line: 1458, column: 11, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 1458, column: 11)
!3012 = !DILocation(line: 1458, column: 34, scope: !3011)
!3013 = !DILocation(line: 1458, column: 11, scope: !3009)
!3014 = !DILocation(line: 1459, column: 16, scope: !3011)
!3015 = !DILocation(line: 1459, column: 9, scope: !3011)
!3016 = !DILocation(line: 1455, column: 49, scope: !3005)
!3017 = !DILocation(line: 1455, column: 3, scope: !3005)
!3018 = distinct !{!3018, !3007, !3019}
!3019 = !DILocation(line: 1460, column: 5, scope: !3002)
!3020 = !DILocation(line: 1463, column: 1, scope: !2975)
!3021 = distinct !DISubprogram(name: "slpeel_tree_duplicate_loop_to_edge_cfg", scope: !3, file: !3, line: 810, type: !3022, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3024)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!1050, !1050, !815}
!3024 = !{!3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3044, !3045, !3048, !3049}
!3025 = !DILocalVariable(name: "loop", arg: 1, scope: !3021, file: !3, line: 810, type: !1050)
!3026 = !DILocalVariable(name: "e", arg: 2, scope: !3021, file: !3, line: 810, type: !815)
!3027 = !DILocalVariable(name: "new_loop", scope: !3021, file: !3, line: 812, type: !1050)
!3028 = !DILocalVariable(name: "new_bbs", scope: !3021, file: !3, line: 813, type: !1863)
!3029 = !DILocalVariable(name: "bbs", scope: !3021, file: !3, line: 813, type: !1863)
!3030 = !DILocalVariable(name: "at_exit", scope: !3021, file: !3, line: 814, type: !503)
!3031 = !DILocalVariable(name: "was_imm_dom", scope: !3021, file: !3, line: 815, type: !503)
!3032 = !DILocalVariable(name: "exit_dest", scope: !3021, file: !3, line: 816, type: !1287)
!3033 = !DILocalVariable(name: "phi", scope: !3021, file: !3, line: 817, type: !835)
!3034 = !DILocalVariable(name: "phi_arg", scope: !3021, file: !3, line: 818, type: !511)
!3035 = !DILocalVariable(name: "exit", scope: !3021, file: !3, line: 819, type: !815)
!3036 = !DILocalVariable(name: "new_exit", scope: !3021, file: !3, line: 819, type: !815)
!3037 = !DILocalVariable(name: "gsi", scope: !3021, file: !3, line: 820, type: !2627)
!3038 = !DILocalVariable(name: "new_loop_exit_edge", scope: !3039, file: !3, line: 863, type: !815)
!3039 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 862, column: 2)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 861, column: 11)
!3041 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 858, column: 5)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 857, column: 3)
!3043 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 857, column: 3)
!3044 = !DILocalVariable(name: "locus", scope: !3039, file: !3, line: 864, type: !638)
!3045 = !DILocalVariable(name: "new_exit_e", scope: !3046, file: !3, line: 886, type: !815)
!3046 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 885, column: 5)
!3047 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 876, column: 7)
!3048 = !DILocalVariable(name: "entry_e", scope: !3046, file: !3, line: 887, type: !815)
!3049 = !DILocalVariable(name: "preheader", scope: !3046, file: !3, line: 888, type: !1287)
!3050 = !DILocation(line: 0, scope: !3021)
!3051 = !DILocation(line: 819, column: 3, scope: !3021)
!3052 = !DILocation(line: 820, column: 3, scope: !3021)
!3053 = !DILocation(line: 822, column: 19, scope: !3021)
!3054 = !DILocation(line: 822, column: 16, scope: !3021)
!3055 = !DILocation(line: 823, column: 16, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 823, column: 7)
!3057 = !DILocation(line: 823, column: 24, scope: !3056)
!3058 = !DILocation(line: 823, column: 21, scope: !3056)
!3059 = !DILocation(line: 823, column: 7, scope: !3021)
!3060 = !DILocation(line: 826, column: 9, scope: !3021)
!3061 = !DILocation(line: 829, column: 35, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 829, column: 7)
!3063 = !DILocation(line: 829, column: 8, scope: !3062)
!3064 = !DILocation(line: 829, column: 7, scope: !3021)
!3065 = !DILocation(line: 831, column: 13, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 830, column: 5)
!3067 = !DILocation(line: 831, column: 7, scope: !3066)
!3068 = !DILocation(line: 832, column: 7, scope: !3066)
!3069 = !DILocation(line: 836, column: 36, scope: !3021)
!3070 = !DILocation(line: 836, column: 14, scope: !3021)
!3071 = !DILocation(line: 837, column: 8, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 837, column: 7)
!3073 = !DILocation(line: 837, column: 7, scope: !3021)
!3074 = !DILocation(line: 839, column: 13, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 838, column: 5)
!3076 = !DILocation(line: 839, column: 7, scope: !3075)
!3077 = !DILocation(line: 840, column: 7, scope: !3075)
!3078 = !DILocation(line: 843, column: 15, scope: !3021)
!3079 = !DILocation(line: 843, column: 35, scope: !3021)
!3080 = !DILocation(line: 844, column: 18, scope: !3021)
!3081 = !DILocation(line: 845, column: 28, scope: !3021)
!3082 = !DILocation(line: 848, column: 13, scope: !3021)
!3083 = !DILocation(line: 850, column: 10, scope: !3021)
!3084 = !DILocation(line: 850, column: 8, scope: !3021)
!3085 = !DILocation(line: 851, column: 24, scope: !3021)
!3086 = !DILocation(line: 853, column: 9, scope: !3021)
!3087 = !DILocation(line: 851, column: 3, scope: !3021)
!3088 = !DILocation(line: 857, column: 14, scope: !3043)
!3089 = !DILocation(line: 0, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 867, column: 8)
!3091 = !DILocation(line: 857, column: 8, scope: !3043)
!3092 = !DILocation(line: 857, column: 43, scope: !3042)
!3093 = !DILocation(line: 857, column: 42, scope: !3042)
!3094 = !DILocation(line: 857, column: 3, scope: !3043)
!3095 = !DILocation(line: 859, column: 13, scope: !3041)
!3096 = !DILocation(line: 860, column: 17, scope: !3041)
!3097 = !DILocation(line: 861, column: 11, scope: !3040)
!3098 = !DILocation(line: 861, column: 11, scope: !3041)
!3099 = !DILocation(line: 866, column: 52, scope: !3039)
!3100 = !DILocation(line: 866, column: 12, scope: !3039)
!3101 = !DILocation(line: 0, scope: !3039)
!3102 = !DILocation(line: 867, column: 8, scope: !3090)
!3103 = !DILocation(line: 867, column: 41, scope: !3090)
!3104 = !DILocation(line: 867, column: 59, scope: !3090)
!3105 = !DILocation(line: 867, column: 46, scope: !3090)
!3106 = !DILocation(line: 867, column: 8, scope: !3039)
!3107 = !DILocation(line: 868, column: 27, scope: !3090)
!3108 = !DILocation(line: 868, column: 6, scope: !3090)
!3109 = !DILocation(line: 870, column: 27, scope: !3090)
!3110 = !DILocation(line: 872, column: 4, scope: !3039)
!3111 = !DILocation(line: 873, column: 2, scope: !3039)
!3112 = !DILocation(line: 857, column: 60, scope: !3042)
!3113 = !DILocation(line: 857, column: 3, scope: !3042)
!3114 = distinct !{!3114, !3094, !3115}
!3115 = !DILocation(line: 874, column: 5, scope: !3043)
!3116 = !DILocation(line: 876, column: 7, scope: !3021)
!3117 = !DILocation(line: 845, column: 19, scope: !3021)
!3118 = !DILocation(line: 878, column: 52, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 877, column: 5)
!3120 = !DILocation(line: 878, column: 7, scope: !3119)
!3121 = !DILocation(line: 879, column: 7, scope: !3119)
!3122 = !DILocation(line: 879, column: 24, scope: !3119)
!3123 = !DILocation(line: 880, column: 58, scope: !3119)
!3124 = !DILocation(line: 880, column: 69, scope: !3119)
!3125 = !DILocation(line: 880, column: 7, scope: !3119)
!3126 = !DILocation(line: 881, column: 11, scope: !3119)
!3127 = !DILocation(line: 882, column: 64, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 881, column: 11)
!3129 = !DILocation(line: 882, column: 2, scope: !3128)
!3130 = !DILocation(line: 887, column: 22, scope: !3046)
!3131 = !DILocation(line: 0, scope: !3046)
!3132 = !DILocation(line: 888, column: 40, scope: !3046)
!3133 = !DILocation(line: 891, column: 7, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 890, column: 11)
!3135 = !DILocation(line: 891, column: 40, scope: !3134)
!3136 = !DILocation(line: 890, column: 12, scope: !3134)
!3137 = !DILocation(line: 0, scope: !3134)
!3138 = !DILocation(line: 890, column: 11, scope: !3046)
!3139 = !DILocation(line: 892, column: 22, scope: !3134)
!3140 = !DILocation(line: 892, column: 9, scope: !3134)
!3141 = !DILocation(line: 894, column: 15, scope: !3134)
!3142 = !DILocation(line: 896, column: 57, scope: !3046)
!3143 = !DILocation(line: 896, column: 7, scope: !3046)
!3144 = !DILocation(line: 897, column: 7, scope: !3046)
!3145 = !DILocation(line: 897, column: 33, scope: !3046)
!3146 = !DILocation(line: 898, column: 54, scope: !3046)
!3147 = !DILocation(line: 899, column: 23, scope: !3046)
!3148 = !DILocation(line: 898, column: 7, scope: !3046)
!3149 = !DILocation(line: 903, column: 18, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 903, column: 7)
!3151 = !DILocation(line: 903, column: 40, scope: !3150)
!3152 = !DILocation(line: 0, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 906, column: 2)
!3154 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 903, column: 7)
!3155 = !DILocation(line: 903, column: 12, scope: !3150)
!3156 = !DILocation(line: 904, column: 13, scope: !3154)
!3157 = !DILocation(line: 904, column: 12, scope: !3154)
!3158 = !DILocation(line: 903, column: 7, scope: !3150)
!3159 = !DILocation(line: 907, column: 10, scope: !3153)
!3160 = !DILocation(line: 908, column: 14, scope: !3153)
!3161 = !DILocation(line: 909, column: 8, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 909, column: 8)
!3163 = !DILocation(line: 909, column: 8, scope: !3153)
!3164 = !DILocation(line: 911, column: 5, scope: !3162)
!3165 = !DILocation(line: 910, column: 6, scope: !3162)
!3166 = !DILocation(line: 905, column: 12, scope: !3154)
!3167 = !DILocation(line: 903, column: 7, scope: !3154)
!3168 = distinct !{!3168, !3158, !3169}
!3169 = !DILocation(line: 912, column: 2, scope: !3150)
!3170 = !DILocation(line: 914, column: 58, scope: !3046)
!3171 = !DILocation(line: 914, column: 7, scope: !3046)
!3172 = !DILocation(line: 915, column: 7, scope: !3046)
!3173 = !DILocation(line: 915, column: 30, scope: !3046)
!3174 = !DILocation(line: 916, column: 58, scope: !3046)
!3175 = !DILocation(line: 916, column: 7, scope: !3046)
!3176 = !DILocation(line: 919, column: 3, scope: !3021)
!3177 = !DILocation(line: 920, column: 9, scope: !3021)
!3178 = !DILocation(line: 920, column: 3, scope: !3021)
!3179 = !DILocation(line: 922, column: 3, scope: !3021)
!3180 = !DILocation(line: 923, column: 1, scope: !3021)
!3181 = distinct !DISubprogram(name: "loop_outer", scope: !146, file: !146, line: 434, type: !3182, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3186)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{!1050, !3184}
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!3186 = !{!3187, !3188}
!3187 = !DILocalVariable(name: "loop", arg: 1, scope: !3181, file: !146, line: 434, type: !3184)
!3188 = !DILocalVariable(name: "n", scope: !3181, file: !146, line: 436, type: !7)
!3189 = !DILocation(line: 0, scope: !3181)
!3190 = !DILocation(line: 436, column: 16, scope: !3181)
!3191 = !DILocation(line: 438, column: 9, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3181, file: !146, line: 438, column: 7)
!3193 = !DILocation(line: 438, column: 7, scope: !3181)
!3194 = !DILocation(line: 441, column: 10, scope: !3181)
!3195 = !DILocation(line: 441, column: 3, scope: !3181)
!3196 = !DILocation(line: 442, column: 1, scope: !3181)
!3197 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !2752, file: !2752, line: 427, type: !3198, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3200)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!511, !1864}
!3200 = !{!3201}
!3201 = !DILocalVariable(name: "use", arg: 1, scope: !3197, file: !2752, line: 427, type: !1864)
!3202 = !DILocation(line: 0, scope: !3197)
!3203 = !DILocation(line: 429, column: 17, scope: !3197)
!3204 = !DILocation(line: 429, column: 10, scope: !3197)
!3205 = !DILocation(line: 429, column: 3, scope: !3197)
!3206 = distinct !DISubprogram(name: "gimple_phi_arg_location_from_edge", scope: !2752, file: !2752, line: 483, type: !3207, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3209)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!638, !835, !815}
!3209 = !{!3210, !3211}
!3210 = !DILocalVariable(name: "gs", arg: 1, scope: !3206, file: !2752, line: 483, type: !835)
!3211 = !DILocalVariable(name: "e", arg: 2, scope: !3206, file: !2752, line: 483, type: !815)
!3212 = !DILocation(line: 0, scope: !3206)
!3213 = !DILocation(line: 485, column: 33, scope: !3206)
!3214 = !DILocation(line: 485, column: 10, scope: !3206)
!3215 = !DILocation(line: 485, column: 44, scope: !3206)
!3216 = !DILocation(line: 485, column: 3, scope: !3206)
!3217 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !3218, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3222)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{!815, !3220, !7}
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !808)
!3222 = !{!3223, !3224}
!3223 = !DILocalVariable(name: "vec_", arg: 1, scope: !3217, file: !135, line: 150, type: !3220)
!3224 = !DILocalVariable(name: "ix_", arg: 2, scope: !3217, file: !135, line: 150, type: !7)
!3225 = !DILocation(line: 0, scope: !3217)
!3226 = !DILocation(line: 150, column: 1, scope: !3217)
!3227 = distinct !DISubprogram(name: "slpeel_can_duplicate_loop_p", scope: !3, file: !3, line: 974, type: !3228, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3233)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{!503, !3184, !3230}
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_edge", file: !512, line: 109, baseType: !3231)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !817)
!3233 = !{!3234, !3235, !3236, !3237, !3238, !3239}
!3234 = !DILocalVariable(name: "loop", arg: 1, scope: !3227, file: !3, line: 974, type: !3184)
!3235 = !DILocalVariable(name: "e", arg: 2, scope: !3227, file: !3, line: 974, type: !3230)
!3236 = !DILocalVariable(name: "exit_e", scope: !3227, file: !3, line: 976, type: !815)
!3237 = !DILocalVariable(name: "entry_e", scope: !3227, file: !3, line: 977, type: !815)
!3238 = !DILocalVariable(name: "orig_cond", scope: !3227, file: !3, line: 978, type: !835)
!3239 = !DILocalVariable(name: "loop_exit_gsi", scope: !3227, file: !3, line: 979, type: !2627)
!3240 = !DILocation(line: 0, scope: !3227)
!3241 = !DILocation(line: 976, column: 17, scope: !3227)
!3242 = !DILocation(line: 977, column: 18, scope: !3227)
!3243 = !DILocation(line: 978, column: 22, scope: !3227)
!3244 = !DILocation(line: 979, column: 3, scope: !3227)
!3245 = !DILocation(line: 979, column: 61, scope: !3227)
!3246 = !DILocation(line: 979, column: 40, scope: !3227)
!3247 = !DILocation(line: 981, column: 26, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 981, column: 7)
!3249 = !DILocation(line: 981, column: 7, scope: !3248)
!3250 = !DILocation(line: 981, column: 7, scope: !3227)
!3251 = !DILocation(line: 984, column: 13, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 984, column: 7)
!3253 = !DILocation(line: 984, column: 7, scope: !3252)
!3254 = !DILocation(line: 987, column: 7, scope: !3252)
!3255 = !DILocation(line: 987, column: 11, scope: !3252)
!3256 = !DILocation(line: 988, column: 7, scope: !3252)
!3257 = !DILocation(line: 988, column: 16, scope: !3252)
!3258 = !DILocation(line: 988, column: 26, scope: !3252)
!3259 = !DILocation(line: 989, column: 7, scope: !3252)
!3260 = !DILocation(line: 989, column: 32, scope: !3252)
!3261 = !DILocation(line: 989, column: 11, scope: !3252)
!3262 = !DILocation(line: 990, column: 7, scope: !3252)
!3263 = !DILocation(line: 990, column: 11, scope: !3252)
!3264 = !DILocation(line: 992, column: 12, scope: !3252)
!3265 = !DILocation(line: 992, column: 7, scope: !3252)
!3266 = !DILocation(line: 992, column: 38, scope: !3252)
!3267 = !DILocation(line: 992, column: 35, scope: !3252)
!3268 = !DILocation(line: 993, column: 7, scope: !3252)
!3269 = !DILocation(line: 993, column: 13, scope: !3252)
!3270 = !DILocation(line: 993, column: 28, scope: !3252)
!3271 = !DILocation(line: 993, column: 23, scope: !3252)
!3272 = !DILocation(line: 997, column: 1, scope: !3227)
!3273 = distinct !DISubprogram(name: "gsi_last_bb", scope: !398, file: !398, line: 4450, type: !2715, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3274)
!3274 = !{!3275, !3276, !3277}
!3275 = !DILocalVariable(name: "bb", arg: 1, scope: !3273, file: !398, line: 4450, type: !1287)
!3276 = !DILocalVariable(name: "i", scope: !3273, file: !398, line: 4452, type: !2627)
!3277 = !DILocalVariable(name: "seq", scope: !3273, file: !398, line: 4453, type: !825)
!3278 = !DILocation(line: 0, scope: !3273)
!3279 = !DILocation(line: 4452, column: 24, scope: !3273)
!3280 = !DILocation(line: 4455, column: 9, scope: !3273)
!3281 = !DILocation(line: 4456, column: 11, scope: !3273)
!3282 = !DILocation(line: 4456, column: 5, scope: !3273)
!3283 = !DILocation(line: 4456, column: 9, scope: !3273)
!3284 = !DILocation(line: 4457, column: 5, scope: !3273)
!3285 = !DILocation(line: 4457, column: 9, scope: !3273)
!3286 = !DILocation(line: 4458, column: 5, scope: !3273)
!3287 = !DILocation(line: 4458, column: 8, scope: !3273)
!3288 = !DILocation(line: 4461, column: 1, scope: !3273)
!3289 = distinct !DISubprogram(name: "gimple_location", scope: !398, file: !398, line: 1139, type: !3290, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3295)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!636, !3292}
!3292 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !512, line: 60, baseType: !3293)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !837)
!3295 = !{!3296}
!3296 = !DILocalVariable(name: "g", arg: 1, scope: !3289, file: !398, line: 1139, type: !3292)
!3297 = !DILocation(line: 0, scope: !3289)
!3298 = !DILocation(line: 1141, column: 20, scope: !3289)
!3299 = !DILocation(line: 1141, column: 3, scope: !3289)
!3300 = distinct !DISubprogram(name: "vect_can_advance_ivs_p", scope: !3, file: !3, line: 1595, type: !3301, scopeLine: 1596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3303)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{!503, !1874}
!3303 = !{!3304, !3305, !3306, !3307, !3308, !3309, !3313}
!3304 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !3300, file: !3, line: 1595, type: !1874)
!3305 = !DILocalVariable(name: "loop", scope: !3300, file: !3, line: 1597, type: !1050)
!3306 = !DILocalVariable(name: "bb", scope: !3300, file: !3, line: 1598, type: !1287)
!3307 = !DILocalVariable(name: "phi", scope: !3300, file: !3, line: 1599, type: !835)
!3308 = !DILocalVariable(name: "gsi", scope: !3300, file: !3, line: 1600, type: !2627)
!3309 = !DILocalVariable(name: "access_fn", scope: !3310, file: !3, line: 1609, type: !511)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 1608, column: 5)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 1607, column: 3)
!3312 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 1607, column: 3)
!3313 = !DILocalVariable(name: "evolution_part", scope: !3310, file: !3, line: 1610, type: !511)
!3314 = !DILocation(line: 0, scope: !3300)
!3315 = !DILocation(line: 1597, column: 23, scope: !3300)
!3316 = !DILocation(line: 1598, column: 26, scope: !3300)
!3317 = !DILocation(line: 1600, column: 3, scope: !3300)
!3318 = !DILocation(line: 1604, column: 7, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 1604, column: 7)
!3320 = !DILocation(line: 1604, column: 7, scope: !3300)
!3321 = !DILocation(line: 1605, column: 14, scope: !3319)
!3322 = !DILocation(line: 1605, column: 5, scope: !3319)
!3323 = !DILocation(line: 1607, column: 14, scope: !3312)
!3324 = !DILocation(line: 0, scope: !3310)
!3325 = !DILocation(line: 1607, column: 8, scope: !3312)
!3326 = !DILocation(line: 1607, column: 36, scope: !3311)
!3327 = !DILocation(line: 1607, column: 35, scope: !3311)
!3328 = !DILocation(line: 1607, column: 3, scope: !3312)
!3329 = !DILocation(line: 1612, column: 13, scope: !3310)
!3330 = !DILocation(line: 1613, column: 11, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1613, column: 11)
!3332 = !DILocation(line: 1613, column: 11, scope: !3310)
!3333 = !DILocation(line: 1615, column: 20, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 1614, column: 2)
!3335 = !DILocation(line: 1615, column: 11, scope: !3334)
!3336 = !DILocation(line: 1616, column: 30, scope: !3334)
!3337 = !DILocation(line: 1616, column: 11, scope: !3334)
!3338 = !DILocation(line: 1617, column: 2, scope: !3334)
!3339 = !DILocation(line: 1622, column: 27, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1622, column: 11)
!3341 = !DILocation(line: 1622, column: 12, scope: !3340)
!3342 = !DILocation(line: 1622, column: 11, scope: !3310)
!3343 = !DILocation(line: 1624, column: 8, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1624, column: 8)
!3345 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 1623, column: 2)
!3346 = !DILocation(line: 1624, column: 8, scope: !3345)
!3347 = !DILocation(line: 1625, column: 15, scope: !3344)
!3348 = !DILocation(line: 1625, column: 6, scope: !3344)
!3349 = !DILocation(line: 1631, column: 11, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1631, column: 11)
!3351 = !DILocation(line: 1631, column: 54, scope: !3350)
!3352 = !DILocation(line: 1631, column: 11, scope: !3310)
!3353 = !DILocation(line: 1633, column: 15, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 1633, column: 15)
!3355 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 1632, column: 9)
!3356 = !DILocation(line: 1633, column: 15, scope: !3355)
!3357 = !DILocation(line: 1634, column: 22, scope: !3354)
!3358 = !DILocation(line: 1634, column: 13, scope: !3354)
!3359 = !DILocation(line: 1641, column: 41, scope: !3310)
!3360 = !DILocation(line: 1641, column: 9, scope: !3310)
!3361 = !DILocation(line: 1640, column: 19, scope: !3310)
!3362 = !DILocation(line: 1643, column: 12, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1643, column: 11)
!3364 = !DILocation(line: 1643, column: 11, scope: !3310)
!3365 = !DILocation(line: 1645, column: 8, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 1644, column: 2)
!3367 = !DILocation(line: 1646, column: 15, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 1645, column: 8)
!3369 = !DILocation(line: 1646, column: 6, scope: !3368)
!3370 = !DILocation(line: 1650, column: 11, scope: !3310)
!3371 = !DILocation(line: 1652, column: 13, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 1651, column: 9)
!3373 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1650, column: 11)
!3374 = !DILocation(line: 1652, column: 4, scope: !3372)
!3375 = !DILocation(line: 1653, column: 24, scope: !3372)
!3376 = !DILocation(line: 1653, column: 4, scope: !3372)
!3377 = !DILocation(line: 1654, column: 9, scope: !3372)
!3378 = !DILocation(line: 1656, column: 69, scope: !3310)
!3379 = !DILocation(line: 1656, column: 24, scope: !3310)
!3380 = !DILocation(line: 1658, column: 26, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1658, column: 11)
!3382 = !DILocation(line: 1658, column: 11, scope: !3310)
!3383 = !DILocation(line: 1660, column: 8, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 1660, column: 8)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 1659, column: 9)
!3386 = !DILocation(line: 1660, column: 8, scope: !3385)
!3387 = !DILocation(line: 1661, column: 15, scope: !3384)
!3388 = !DILocation(line: 1661, column: 6, scope: !3384)
!3389 = !DILocation(line: 1668, column: 11, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1668, column: 11)
!3391 = !DILocation(line: 0, scope: !3311)
!3392 = !DILocation(line: 1607, column: 53, scope: !3311)
!3393 = !DILocation(line: 1607, column: 3, scope: !3311)
!3394 = distinct !{!3394, !3328, !3395}
!3395 = !DILocation(line: 1670, column: 5, scope: !3312)
!3396 = !DILocation(line: 1673, column: 1, scope: !3300)
!3397 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !2752, file: !2752, line: 434, type: !3398, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3401)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!511, !3400}
!3400 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !391, line: 27, baseType: !869)
!3401 = !{!3402}
!3402 = !DILocalVariable(name: "def", arg: 1, scope: !3397, file: !2752, line: 434, type: !3400)
!3403 = !DILocation(line: 0, scope: !3397)
!3404 = !DILocation(line: 436, column: 10, scope: !3397)
!3405 = !DILocation(line: 436, column: 3, scope: !3397)
!3406 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !398, file: !398, line: 3080, type: !3407, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3409)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!869, !835}
!3409 = !{!3410}
!3410 = !DILocalVariable(name: "gs", arg: 1, scope: !3406, file: !398, line: 3080, type: !835)
!3411 = !DILocation(line: 0, scope: !3406)
!3412 = !DILocation(line: 3083, column: 26, scope: !3406)
!3413 = !DILocation(line: 3083, column: 3, scope: !3406)
!3414 = distinct !DISubprogram(name: "vinfo_for_stmt", scope: !437, file: !437, line: 623, type: !3415, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3417)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!1867, !835}
!3417 = !{!3418, !3419}
!3418 = !DILocalVariable(name: "stmt", arg: 1, scope: !3414, file: !437, line: 623, type: !835)
!3419 = !DILocalVariable(name: "uid", scope: !3414, file: !437, line: 625, type: !7)
!3420 = !DILocation(line: 0, scope: !3414)
!3421 = !DILocation(line: 625, column: 22, scope: !3414)
!3422 = !DILocation(line: 626, column: 11, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3414, file: !437, line: 626, column: 7)
!3424 = !DILocation(line: 626, column: 7, scope: !3414)
!3425 = !DILocation(line: 629, column: 3, scope: !3414)
!3426 = !DILocation(line: 630, column: 26, scope: !3414)
!3427 = !DILocation(line: 630, column: 10, scope: !3414)
!3428 = !DILocation(line: 630, column: 3, scope: !3414)
!3429 = !DILocation(line: 631, column: 1, scope: !3414)
!3430 = distinct !DISubprogram(name: "instantiate_parameters", scope: !3431, file: !3431, line: 57, type: !3432, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3434)
!3431 = !DIFile(filename: "./tree-scalar-evolution.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!511, !1050, !511}
!3434 = !{!3435, !3436}
!3435 = !DILocalVariable(name: "loop", arg: 1, scope: !3430, file: !3431, line: 57, type: !1050)
!3436 = !DILocalVariable(name: "chrec", arg: 2, scope: !3430, file: !3431, line: 57, type: !511)
!3437 = !DILocation(line: 0, scope: !3430)
!3438 = !DILocation(line: 59, column: 28, scope: !3430)
!3439 = !DILocation(line: 59, column: 10, scope: !3430)
!3440 = !DILocation(line: 59, column: 3, scope: !3430)
!3441 = distinct !DISubprogram(name: "tree_is_chrec", scope: !3442, file: !3442, line: 46, type: !3443, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3446)
!3442 = !DIFile(filename: "./tree-chrec.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!503, !3445}
!3445 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !512, line: 59, baseType: !2168)
!3446 = !{!3447}
!3447 = !DILocalVariable(name: "expr", arg: 1, scope: !3441, file: !3442, line: 46, type: !3445)
!3448 = !DILocation(line: 0, scope: !3441)
!3449 = !DILocation(line: 48, column: 7, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3441, file: !3442, line: 48, column: 7)
!3451 = !DILocation(line: 48, column: 24, scope: !3450)
!3452 = !DILocation(line: 49, column: 7, scope: !3450)
!3453 = !DILocation(line: 49, column: 10, scope: !3450)
!3454 = !DILocation(line: 48, column: 7, scope: !3441)
!3455 = !DILocation(line: 53, column: 1, scope: !3441)
!3456 = distinct !DISubprogram(name: "vect_do_peeling_for_loop_bound", scope: !3, file: !3, line: 1855, type: !3457, scopeLine: 1857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3459)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{null, !1874, !869, !511, !825}
!3459 = !{!3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473}
!3460 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !3456, file: !3, line: 1855, type: !1874)
!3461 = !DILocalVariable(name: "ratio", arg: 2, scope: !3456, file: !3, line: 1855, type: !869)
!3462 = !DILocalVariable(name: "cond_expr", arg: 3, scope: !3456, file: !3, line: 1856, type: !511)
!3463 = !DILocalVariable(name: "cond_expr_stmt_list", arg: 4, scope: !3456, file: !3, line: 1856, type: !825)
!3464 = !DILocalVariable(name: "ni_name", scope: !3456, file: !3, line: 1858, type: !511)
!3465 = !DILocalVariable(name: "ratio_mult_vf_name", scope: !3456, file: !3, line: 1858, type: !511)
!3466 = !DILocalVariable(name: "loop", scope: !3456, file: !3, line: 1859, type: !1050)
!3467 = !DILocalVariable(name: "new_loop", scope: !3456, file: !3, line: 1860, type: !1050)
!3468 = !DILocalVariable(name: "update_e", scope: !3456, file: !3, line: 1861, type: !815)
!3469 = !DILocalVariable(name: "preheader", scope: !3456, file: !3, line: 1862, type: !1287)
!3470 = !DILocalVariable(name: "loop_num", scope: !3456, file: !3, line: 1863, type: !504)
!3471 = !DILocalVariable(name: "check_profitability", scope: !3456, file: !3, line: 1864, type: !503)
!3472 = !DILocalVariable(name: "th", scope: !3456, file: !3, line: 1865, type: !7)
!3473 = !DILocalVariable(name: "min_profitable_iters", scope: !3456, file: !3, line: 1866, type: !504)
!3474 = !DILocation(line: 0, scope: !3456)
!3475 = !DILocation(line: 1858, column: 3, scope: !3456)
!3476 = !DILocation(line: 1859, column: 23, scope: !3456)
!3477 = !DILocation(line: 1868, column: 7, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1868, column: 7)
!3479 = !DILocation(line: 1868, column: 7, scope: !3456)
!3480 = !DILocation(line: 1869, column: 14, scope: !3478)
!3481 = !DILocation(line: 1869, column: 5, scope: !3478)
!3482 = !DILocation(line: 1871, column: 3, scope: !3456)
!3483 = !DILocation(line: 1878, column: 3, scope: !3456)
!3484 = !DILocation(line: 1882, column: 21, scope: !3456)
!3485 = !DILocation(line: 1886, column: 8, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1886, column: 7)
!3487 = !DILocation(line: 1887, column: 7, scope: !3486)
!3488 = !DILocation(line: 1887, column: 11, scope: !3486)
!3489 = !DILocation(line: 1888, column: 7, scope: !3486)
!3490 = !DILocation(line: 1888, column: 11, scope: !3486)
!3491 = !DILocation(line: 1889, column: 11, scope: !3486)
!3492 = !DILocation(line: 1889, column: 7, scope: !3486)
!3493 = !DILocation(line: 1894, column: 30, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 1890, column: 5)
!3495 = !DILocation(line: 1896, column: 12, scope: !3494)
!3496 = !DILocation(line: 1898, column: 5, scope: !3494)
!3497 = !DILocation(line: 1900, column: 51, scope: !3456)
!3498 = !DILocation(line: 1901, column: 45, scope: !3456)
!3499 = !DILocation(line: 1901, column: 65, scope: !3456)
!3500 = !DILocation(line: 1900, column: 14, scope: !3456)
!3501 = !DILocation(line: 1904, column: 3, scope: !3456)
!3502 = !DILocation(line: 1905, column: 3, scope: !3456)
!3503 = !DILocation(line: 1916, column: 15, scope: !3456)
!3504 = !DILocation(line: 1916, column: 47, scope: !3456)
!3505 = !DILocation(line: 1917, column: 7, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 1917, column: 7)
!3507 = !DILocation(line: 1917, column: 33, scope: !3506)
!3508 = !DILocation(line: 1917, column: 40, scope: !3506)
!3509 = !DILocation(line: 1917, column: 60, scope: !3506)
!3510 = !DILocation(line: 1917, column: 37, scope: !3506)
!3511 = !DILocation(line: 0, scope: !3506)
!3512 = !DILocation(line: 1917, column: 7, scope: !3456)
!3513 = !DILocation(line: 1918, column: 16, scope: !3506)
!3514 = !DILocation(line: 1918, column: 5, scope: !3506)
!3515 = !DILocation(line: 1920, column: 16, scope: !3506)
!3516 = !DILocation(line: 1924, column: 49, scope: !3456)
!3517 = !DILocation(line: 1924, column: 3, scope: !3456)
!3518 = !DILocation(line: 1927, column: 3, scope: !3456)
!3519 = !DILocation(line: 1929, column: 3, scope: !3456)
!3520 = !DILocation(line: 1930, column: 1, scope: !3456)
!3521 = distinct !DISubprogram(name: "vect_generate_tmps_on_preheader", scope: !3, file: !3, line: 1509, type: !3522, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3524)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{null, !1874, !869, !869, !869, !825}
!3524 = !{!3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540}
!3525 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !3521, file: !3, line: 1509, type: !1874)
!3526 = !DILocalVariable(name: "ni_name_ptr", arg: 2, scope: !3521, file: !3, line: 1510, type: !869)
!3527 = !DILocalVariable(name: "ratio_mult_vf_name_ptr", arg: 3, scope: !3521, file: !3, line: 1511, type: !869)
!3528 = !DILocalVariable(name: "ratio_name_ptr", arg: 4, scope: !3521, file: !3, line: 1512, type: !869)
!3529 = !DILocalVariable(name: "cond_expr_stmt_list", arg: 5, scope: !3521, file: !3, line: 1513, type: !825)
!3530 = !DILocalVariable(name: "pe", scope: !3521, file: !3, line: 1516, type: !815)
!3531 = !DILocalVariable(name: "new_bb", scope: !3521, file: !3, line: 1517, type: !1287)
!3532 = !DILocalVariable(name: "stmts", scope: !3521, file: !3, line: 1518, type: !825)
!3533 = !DILocalVariable(name: "ni_name", scope: !3521, file: !3, line: 1519, type: !511)
!3534 = !DILocalVariable(name: "var", scope: !3521, file: !3, line: 1520, type: !511)
!3535 = !DILocalVariable(name: "ratio_name", scope: !3521, file: !3, line: 1521, type: !511)
!3536 = !DILocalVariable(name: "ratio_mult_vf_name", scope: !3521, file: !3, line: 1522, type: !511)
!3537 = !DILocalVariable(name: "loop", scope: !3521, file: !3, line: 1523, type: !1050)
!3538 = !DILocalVariable(name: "ni", scope: !3521, file: !3, line: 1524, type: !511)
!3539 = !DILocalVariable(name: "vf", scope: !3521, file: !3, line: 1525, type: !504)
!3540 = !DILocalVariable(name: "log_vf", scope: !3521, file: !3, line: 1526, type: !511)
!3541 = !DILocation(line: 0, scope: !3521)
!3542 = !DILocation(line: 1518, column: 3, scope: !3521)
!3543 = !DILocation(line: 1523, column: 23, scope: !3521)
!3544 = !DILocation(line: 1524, column: 13, scope: !3521)
!3545 = !DILocation(line: 1525, column: 12, scope: !3521)
!3546 = !DILocation(line: 1528, column: 8, scope: !3521)
!3547 = !DILocation(line: 1533, column: 13, scope: !3521)
!3548 = !DILocation(line: 1534, column: 27, scope: !3521)
!3549 = !DILocation(line: 1534, column: 55, scope: !3521)
!3550 = !DILocation(line: 1534, column: 43, scope: !3521)
!3551 = !DILocation(line: 1534, column: 12, scope: !3521)
!3552 = !DILocation(line: 1538, column: 16, scope: !3521)
!3553 = !DILocation(line: 1539, column: 8, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 1539, column: 7)
!3555 = !DILocation(line: 1539, column: 7, scope: !3521)
!3556 = !DILocation(line: 1541, column: 29, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1540, column: 5)
!3558 = !DILocation(line: 1541, column: 13, scope: !3557)
!3559 = !DILocation(line: 1542, column: 7, scope: !3557)
!3560 = !DILocation(line: 1544, column: 13, scope: !3557)
!3561 = !DILocation(line: 1545, column: 20, scope: !3557)
!3562 = !DILocation(line: 1546, column: 11, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 1546, column: 11)
!3564 = !DILocation(line: 1546, column: 11, scope: !3557)
!3565 = !DILocation(line: 1547, column: 44, scope: !3563)
!3566 = !DILocation(line: 1547, column: 2, scope: !3563)
!3567 = !DILocation(line: 1550, column: 9, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 1549, column: 2)
!3569 = !DILocation(line: 1551, column: 51, scope: !3568)
!3570 = !DILocation(line: 1551, column: 13, scope: !3568)
!3571 = !DILocation(line: 1552, column: 4, scope: !3568)
!3572 = !DILocation(line: 1558, column: 24, scope: !3521)
!3573 = !DILocation(line: 1560, column: 8, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 1560, column: 7)
!3575 = !DILocation(line: 1560, column: 7, scope: !3521)
!3576 = !DILocation(line: 1562, column: 29, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 1561, column: 5)
!3578 = !DILocation(line: 1562, column: 13, scope: !3577)
!3579 = !DILocation(line: 1563, column: 7, scope: !3577)
!3580 = !DILocation(line: 1565, column: 13, scope: !3577)
!3581 = !DILocation(line: 1566, column: 28, scope: !3577)
!3582 = !DILocation(line: 1568, column: 11, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 1568, column: 11)
!3584 = !DILocation(line: 1568, column: 11, scope: !3577)
!3585 = !DILocation(line: 1569, column: 44, scope: !3583)
!3586 = !DILocation(line: 1569, column: 2, scope: !3583)
!3587 = !DILocation(line: 1572, column: 9, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 1571, column: 2)
!3589 = !DILocation(line: 1573, column: 51, scope: !3588)
!3590 = !DILocation(line: 1573, column: 13, scope: !3588)
!3591 = !DILocation(line: 1574, column: 4, scope: !3588)
!3592 = !DILocation(line: 1578, column: 16, scope: !3521)
!3593 = !DILocation(line: 1579, column: 27, scope: !3521)
!3594 = !DILocation(line: 1580, column: 19, scope: !3521)
!3595 = !DILocation(line: 1583, column: 1, scope: !3521)
!3596 = distinct !DISubprogram(name: "VEC_gimple_base_length", scope: !398, file: !398, line: 33, type: !3597, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3601)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!7, !3599}
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1374)
!3601 = !{!3602}
!3602 = !DILocalVariable(name: "vec_", arg: 1, scope: !3596, file: !398, line: 33, type: !3599)
!3603 = !DILocation(line: 0, scope: !3596)
!3604 = !DILocation(line: 33, column: 1, scope: !3596)
!3605 = distinct !DISubprogram(name: "VEC_ddr_p_base_length", scope: !1888, file: !1888, line: 332, type: !3606, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3610)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!7, !3608}
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1967)
!3610 = !{!3611}
!3611 = !DILocalVariable(name: "vec_", arg: 1, scope: !3605, file: !1888, line: 332, type: !3608)
!3612 = !DILocation(line: 0, scope: !3605)
!3613 = !DILocation(line: 332, column: 1, scope: !3605)
!3614 = distinct !DISubprogram(name: "conservative_cost_threshold", scope: !3, file: !3, line: 1818, type: !3615, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3617)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!7, !1874, !504}
!3617 = !{!3618, !3619, !3620, !3621}
!3618 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !3614, file: !3, line: 1818, type: !1874)
!3619 = !DILocalVariable(name: "min_profitable_iters", arg: 2, scope: !3614, file: !3, line: 1819, type: !504)
!3620 = !DILocalVariable(name: "th", scope: !3614, file: !3, line: 1821, type: !7)
!3621 = !DILocalVariable(name: "min_scalar_loop_bound", scope: !3614, file: !3, line: 1822, type: !504)
!3622 = !DILocation(line: 0, scope: !3614)
!3623 = !DILocation(line: 1824, column: 29, scope: !3614)
!3624 = !DILocation(line: 1825, column: 10, scope: !3614)
!3625 = !DILocation(line: 1825, column: 8, scope: !3614)
!3626 = !DILocation(line: 1825, column: 47, scope: !3614)
!3627 = !DILocation(line: 1830, column: 7, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1830, column: 7)
!3629 = !DILocation(line: 1831, column: 7, scope: !3628)
!3630 = !DILocation(line: 1831, column: 12, scope: !3628)
!3631 = !DILocation(line: 1832, column: 35, scope: !3628)
!3632 = !DILocation(line: 1832, column: 11, scope: !3628)
!3633 = !DILocation(line: 1835, column: 7, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1835, column: 7)
!3635 = !DILocation(line: 1835, column: 10, scope: !3634)
!3636 = !DILocation(line: 1835, column: 13, scope: !3634)
!3637 = !DILocation(line: 1835, column: 7, scope: !3614)
!3638 = !DILocation(line: 1836, column: 14, scope: !3634)
!3639 = !DILocation(line: 1836, column: 5, scope: !3634)
!3640 = !DILocation(line: 1838, column: 3, scope: !3614)
!3641 = distinct !DISubprogram(name: "slpeel_tree_peel_loop_to_edge", scope: !3, file: !3, line: 1161, type: !3642, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3644)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!1050, !1050, !815, !511, !511, !503, !7, !503, !511, !825}
!3644 = !{!3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668}
!3645 = !DILocalVariable(name: "loop", arg: 1, scope: !3641, file: !3, line: 1161, type: !1050)
!3646 = !DILocalVariable(name: "e", arg: 2, scope: !3641, file: !3, line: 1162, type: !815)
!3647 = !DILocalVariable(name: "first_niters", arg: 3, scope: !3641, file: !3, line: 1162, type: !511)
!3648 = !DILocalVariable(name: "niters", arg: 4, scope: !3641, file: !3, line: 1163, type: !511)
!3649 = !DILocalVariable(name: "update_first_loop_count", arg: 5, scope: !3641, file: !3, line: 1163, type: !503)
!3650 = !DILocalVariable(name: "th", arg: 6, scope: !3641, file: !3, line: 1164, type: !7)
!3651 = !DILocalVariable(name: "check_profitability", arg: 7, scope: !3641, file: !3, line: 1164, type: !503)
!3652 = !DILocalVariable(name: "cond_expr", arg: 8, scope: !3641, file: !3, line: 1165, type: !511)
!3653 = !DILocalVariable(name: "cond_expr_stmt_list", arg: 9, scope: !3641, file: !3, line: 1165, type: !825)
!3654 = !DILocalVariable(name: "new_loop", scope: !3641, file: !3, line: 1167, type: !1050)
!3655 = !DILocalVariable(name: "first_loop", scope: !3641, file: !3, line: 1167, type: !1050)
!3656 = !DILocalVariable(name: "second_loop", scope: !3641, file: !3, line: 1167, type: !1050)
!3657 = !DILocalVariable(name: "skip_e", scope: !3641, file: !3, line: 1168, type: !815)
!3658 = !DILocalVariable(name: "pre_condition", scope: !3641, file: !3, line: 1169, type: !511)
!3659 = !DILocalVariable(name: "definitions", scope: !3641, file: !3, line: 1170, type: !1405)
!3660 = !DILocalVariable(name: "bb_before_second_loop", scope: !3641, file: !3, line: 1171, type: !1287)
!3661 = !DILocalVariable(name: "bb_after_second_loop", scope: !3641, file: !3, line: 1171, type: !1287)
!3662 = !DILocalVariable(name: "bb_before_first_loop", scope: !3641, file: !3, line: 1172, type: !1287)
!3663 = !DILocalVariable(name: "bb_between_loops", scope: !3641, file: !3, line: 1173, type: !1287)
!3664 = !DILocalVariable(name: "new_exit_bb", scope: !3641, file: !3, line: 1174, type: !1287)
!3665 = !DILocalVariable(name: "exit_e", scope: !3641, file: !3, line: 1175, type: !815)
!3666 = !DILocalVariable(name: "loop_loc", scope: !3641, file: !3, line: 1176, type: !2030)
!3667 = !DILocalVariable(name: "cost_pre_condition", scope: !3641, file: !3, line: 1177, type: !511)
!3668 = !DILocalVariable(name: "scalar_loop_iters", scope: !3669, file: !3, line: 1336, type: !511)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 1335, column: 2)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 1334, column: 11)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 1330, column: 5)
!3672 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1329, column: 7)
!3673 = !DILocation(line: 0, scope: !3641)
!3674 = !DILocation(line: 1170, column: 3, scope: !3641)
!3675 = !DILocation(line: 1174, column: 3, scope: !3641)
!3676 = !DILocation(line: 1175, column: 17, scope: !3641)
!3677 = !DILocation(line: 1179, column: 8, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1179, column: 7)
!3679 = !DILocation(line: 1179, column: 7, scope: !3641)
!3680 = !DILocation(line: 1186, column: 3, scope: !3641)
!3681 = !DILocation(line: 1203, column: 20, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1203, column: 7)
!3683 = !DILocation(line: 1203, column: 18, scope: !3682)
!3684 = !DILocation(line: 1203, column: 7, scope: !3641)
!3685 = !DILocation(line: 1205, column: 18, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 1204, column: 5)
!3687 = !DILocation(line: 1206, column: 11, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 1206, column: 11)
!3689 = !DILocation(line: 1206, column: 21, scope: !3688)
!3690 = !DILocation(line: 1206, column: 25, scope: !3688)
!3691 = !DILocation(line: 1206, column: 36, scope: !3688)
!3692 = !DILocation(line: 1206, column: 11, scope: !3686)
!3693 = !DILocation(line: 1208, column: 24, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 1208, column: 15)
!3695 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 1207, column: 9)
!3696 = !DILocation(line: 1208, column: 15, scope: !3695)
!3697 = !DILocation(line: 1210, column: 22, scope: !3694)
!3698 = !DILocation(line: 1210, column: 43, scope: !3694)
!3699 = !DILocation(line: 1209, column: 13, scope: !3694)
!3700 = !DILocation(line: 1211, column: 20, scope: !3695)
!3701 = !DILocation(line: 1211, column: 11, scope: !3695)
!3702 = !DILocation(line: 1212, column: 9, scope: !3695)
!3703 = !DILocation(line: 1216, column: 7, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1216, column: 7)
!3705 = !DILocation(line: 1216, column: 7, scope: !3641)
!3706 = !DILocation(line: 1218, column: 7, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3704, file: !3, line: 1217, column: 5)
!3708 = !DILocation(line: 1219, column: 20, scope: !3707)
!3709 = !DILocation(line: 1219, column: 18, scope: !3707)
!3710 = !DILocation(line: 1220, column: 5, scope: !3707)
!3711 = !DILocation(line: 1222, column: 9, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1222, column: 7)
!3713 = !DILocation(line: 1235, column: 17, scope: !3641)
!3714 = !DILocation(line: 1235, column: 15, scope: !3641)
!3715 = !DILocation(line: 1236, column: 58, scope: !3641)
!3716 = !DILocation(line: 1236, column: 3, scope: !3641)
!3717 = !DILocation(line: 1237, column: 3, scope: !3641)
!3718 = !DILocation(line: 1325, column: 38, scope: !3641)
!3719 = !DILocation(line: 1325, column: 26, scope: !3641)
!3720 = !DILocation(line: 1326, column: 39, scope: !3641)
!3721 = !DILocation(line: 1326, column: 27, scope: !3641)
!3722 = !DILocation(line: 1329, column: 8, scope: !3672)
!3723 = !DILocation(line: 1329, column: 7, scope: !3641)
!3724 = !DILocation(line: 1332, column: 2, scope: !3671)
!3725 = !DILocation(line: 1334, column: 11, scope: !3670)
!3726 = !DILocation(line: 1334, column: 11, scope: !3671)
!3727 = !DILocation(line: 1337, column: 22, scope: !3669)
!3728 = !DILocation(line: 1337, column: 8, scope: !3669)
!3729 = !DILocation(line: 0, scope: !3669)
!3730 = !DILocation(line: 1340, column: 6, scope: !3669)
!3731 = !DILocation(line: 1343, column: 20, scope: !3669)
!3732 = !DILocation(line: 1345, column: 2, scope: !3669)
!3733 = !DILocation(line: 0, scope: !3671)
!3734 = !DILocation(line: 1346, column: 11, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 1346, column: 11)
!3736 = !DILocation(line: 1346, column: 11, scope: !3671)
!3737 = !DILocation(line: 1349, column: 6, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 1347, column: 2)
!3739 = !DILocation(line: 1353, column: 2, scope: !3738)
!3740 = !DILocation(line: 1359, column: 11, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 1359, column: 11)
!3742 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 1358, column: 5)
!3743 = !DILocation(line: 1359, column: 11, scope: !3742)
!3744 = !DILocation(line: 1360, column: 2, scope: !3741)
!3745 = !DILocation(line: 1364, column: 2, scope: !3742)
!3746 = !DILocation(line: 0, scope: !3672)
!3747 = !DILocation(line: 1368, column: 12, scope: !3641)
!3748 = !DILocation(line: 1372, column: 22, scope: !3641)
!3749 = !DILocation(line: 1372, column: 11, scope: !3641)
!3750 = !DILocation(line: 1371, column: 3, scope: !3641)
!3751 = !DILocation(line: 1402, column: 22, scope: !3641)
!3752 = !DILocation(line: 1403, column: 38, scope: !3641)
!3753 = !DILocation(line: 1403, column: 26, scope: !3641)
!3754 = !DILocation(line: 1406, column: 2, scope: !3641)
!3755 = !DILocation(line: 1407, column: 12, scope: !3641)
!3756 = !DILocation(line: 1410, column: 50, scope: !3641)
!3757 = !DILocation(line: 1410, column: 38, scope: !3641)
!3758 = !DILocation(line: 1409, column: 3, scope: !3641)
!3759 = !DILocation(line: 1414, column: 7, scope: !3641)
!3760 = !DILocation(line: 1415, column: 5, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1414, column: 7)
!3762 = !DILocation(line: 1417, column: 3, scope: !3641)
!3763 = !DILocation(line: 1419, column: 3, scope: !3641)
!3764 = !DILocation(line: 1420, column: 3, scope: !3641)
!3765 = !DILocation(line: 1422, column: 3, scope: !3641)
!3766 = !DILocation(line: 1423, column: 1, scope: !3641)
!3767 = distinct !DISubprogram(name: "vect_update_ivs_after_vectorizer", scope: !3, file: !3, line: 1718, type: !3768, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3770)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{null, !1874, !511, !815}
!3770 = !{!3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793}
!3771 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !3767, file: !3, line: 1718, type: !1874)
!3772 = !DILocalVariable(name: "niters", arg: 2, scope: !3767, file: !3, line: 1718, type: !511)
!3773 = !DILocalVariable(name: "update_e", arg: 3, scope: !3767, file: !3, line: 1719, type: !815)
!3774 = !DILocalVariable(name: "loop", scope: !3767, file: !3, line: 1721, type: !1050)
!3775 = !DILocalVariable(name: "exit_bb", scope: !3767, file: !3, line: 1722, type: !1287)
!3776 = !DILocalVariable(name: "phi", scope: !3767, file: !3, line: 1723, type: !835)
!3777 = !DILocalVariable(name: "phi1", scope: !3767, file: !3, line: 1723, type: !835)
!3778 = !DILocalVariable(name: "gsi", scope: !3767, file: !3, line: 1724, type: !2627)
!3779 = !DILocalVariable(name: "gsi1", scope: !3767, file: !3, line: 1724, type: !2627)
!3780 = !DILocalVariable(name: "update_bb", scope: !3767, file: !3, line: 1725, type: !1287)
!3781 = !DILocalVariable(name: "access_fn", scope: !3782, file: !3, line: 1736, type: !511)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 1735, column: 5)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 1732, column: 3)
!3784 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 1732, column: 3)
!3785 = !DILocalVariable(name: "evolution_part", scope: !3782, file: !3, line: 1737, type: !511)
!3786 = !DILocalVariable(name: "init_expr", scope: !3782, file: !3, line: 1738, type: !511)
!3787 = !DILocalVariable(name: "step_expr", scope: !3782, file: !3, line: 1739, type: !511)
!3788 = !DILocalVariable(name: "off", scope: !3782, file: !3, line: 1739, type: !511)
!3789 = !DILocalVariable(name: "type", scope: !3782, file: !3, line: 1740, type: !511)
!3790 = !DILocalVariable(name: "var", scope: !3782, file: !3, line: 1741, type: !511)
!3791 = !DILocalVariable(name: "ni", scope: !3782, file: !3, line: 1741, type: !511)
!3792 = !DILocalVariable(name: "ni_name", scope: !3782, file: !3, line: 1741, type: !511)
!3793 = !DILocalVariable(name: "last_gsi", scope: !3782, file: !3, line: 1742, type: !2627)
!3794 = !DILocation(line: 0, scope: !3767)
!3795 = !DILocation(line: 1721, column: 23, scope: !3767)
!3796 = !DILocation(line: 1722, column: 25, scope: !3767)
!3797 = !DILocation(line: 1722, column: 45, scope: !3767)
!3798 = !DILocation(line: 1724, column: 3, scope: !3767)
!3799 = !DILocation(line: 1725, column: 37, scope: !3767)
!3800 = !DILocation(line: 1730, column: 3, scope: !3767)
!3801 = !DILocation(line: 1732, column: 14, scope: !3784)
!3802 = !DILocation(line: 1732, column: 36, scope: !3784)
!3803 = !DILocation(line: 1732, column: 52, scope: !3784)
!3804 = !DILocation(line: 0, scope: !3782)
!3805 = !DILocation(line: 1732, column: 8, scope: !3784)
!3806 = !DILocation(line: 1733, column: 9, scope: !3783)
!3807 = !DILocation(line: 1733, column: 25, scope: !3783)
!3808 = !DILocation(line: 1733, column: 29, scope: !3783)
!3809 = !DILocation(line: 1733, column: 28, scope: !3783)
!3810 = !DILocation(line: 1732, column: 3, scope: !3784)
!3811 = !DILocation(line: 1742, column: 7, scope: !3782)
!3812 = !DILocation(line: 1744, column: 13, scope: !3782)
!3813 = !DILocation(line: 1745, column: 14, scope: !3782)
!3814 = !DILocation(line: 1746, column: 11, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 1746, column: 11)
!3816 = !DILocation(line: 1746, column: 11, scope: !3782)
!3817 = !DILocation(line: 1748, column: 20, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 1747, column: 9)
!3819 = !DILocation(line: 1748, column: 11, scope: !3818)
!3820 = !DILocation(line: 1749, column: 23, scope: !3818)
!3821 = !DILocation(line: 1749, column: 4, scope: !3818)
!3822 = !DILocation(line: 1750, column: 9, scope: !3818)
!3823 = !DILocation(line: 1753, column: 27, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 1753, column: 11)
!3825 = !DILocation(line: 1753, column: 12, scope: !3824)
!3826 = !DILocation(line: 1753, column: 11, scope: !3782)
!3827 = !DILocation(line: 1755, column: 8, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1755, column: 8)
!3829 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 1754, column: 2)
!3830 = !DILocation(line: 1755, column: 8, scope: !3829)
!3831 = !DILocation(line: 1756, column: 15, scope: !3828)
!3832 = !DILocation(line: 1756, column: 6, scope: !3828)
!3833 = !DILocation(line: 1761, column: 11, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 1761, column: 11)
!3835 = !DILocation(line: 1761, column: 54, scope: !3834)
!3836 = !DILocation(line: 1761, column: 11, scope: !3782)
!3837 = !DILocation(line: 1763, column: 15, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 1763, column: 15)
!3839 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 1762, column: 9)
!3840 = !DILocation(line: 1763, column: 15, scope: !3839)
!3841 = !DILocation(line: 1764, column: 22, scope: !3838)
!3842 = !DILocation(line: 1764, column: 13, scope: !3838)
!3843 = !DILocation(line: 1768, column: 51, scope: !3782)
!3844 = !DILocation(line: 1768, column: 19, scope: !3782)
!3845 = !DILocation(line: 1769, column: 7, scope: !3782)
!3846 = !DILocation(line: 1774, column: 14, scope: !3782)
!3847 = !DILocation(line: 1775, column: 7, scope: !3782)
!3848 = !DILocation(line: 1777, column: 62, scope: !3782)
!3849 = !DILocation(line: 1777, column: 17, scope: !3782)
!3850 = !DILocation(line: 1777, column: 3, scope: !3782)
!3851 = !DILocation(line: 1778, column: 7, scope: !3782)
!3852 = !DILocation(line: 1782, column: 7, scope: !3782)
!3853 = !DILocation(line: 1786, column: 21, scope: !3782)
!3854 = !DILocation(line: 1785, column: 33, scope: !3782)
!3855 = !DILocation(line: 1785, column: 19, scope: !3782)
!3856 = !DILocation(line: 1787, column: 19, scope: !3782)
!3857 = !DILocation(line: 1789, column: 13, scope: !3782)
!3858 = !DILocation(line: 1792, column: 11, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 1792, column: 11)
!3860 = !DILocation(line: 1792, column: 11, scope: !3782)
!3861 = !DILocation(line: 1793, column: 7, scope: !3859)
!3862 = !DILocation(line: 1793, column: 2, scope: !3859)
!3863 = !DILocation(line: 1797, column: 7, scope: !3859)
!3864 = !DILocation(line: 0, scope: !3859)
!3865 = !DILocation(line: 1801, column: 29, scope: !3782)
!3866 = !DILocation(line: 1801, column: 13, scope: !3782)
!3867 = !DILocation(line: 1802, column: 7, scope: !3782)
!3868 = !DILocation(line: 1804, column: 18, scope: !3782)
!3869 = !DILocation(line: 1805, column: 17, scope: !3782)
!3870 = !DILocation(line: 1809, column: 7, scope: !3782)
!3871 = !DILocation(line: 1810, column: 5, scope: !3783)
!3872 = !DILocation(line: 1734, column: 8, scope: !3783)
!3873 = !DILocation(line: 1734, column: 25, scope: !3783)
!3874 = !DILocation(line: 1732, column: 3, scope: !3783)
!3875 = distinct !{!3875, !3810, !3876}
!3876 = !DILocation(line: 1810, column: 5, scope: !3784)
!3877 = !DILocation(line: 1811, column: 1, scope: !3767)
!3878 = distinct !DISubprogram(name: "vect_do_peeling_for_alignment", scope: !3, file: !3, line: 2127, type: !3879, scopeLine: 2128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3881)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{null, !1874}
!3881 = !{!3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890}
!3882 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !3878, file: !3, line: 2127, type: !1874)
!3883 = !DILocalVariable(name: "loop", scope: !3878, file: !3, line: 2129, type: !1050)
!3884 = !DILocalVariable(name: "niters_of_prolog_loop", scope: !3878, file: !3, line: 2130, type: !511)
!3885 = !DILocalVariable(name: "ni_name", scope: !3878, file: !3, line: 2130, type: !511)
!3886 = !DILocalVariable(name: "n_iters", scope: !3878, file: !3, line: 2131, type: !511)
!3887 = !DILocalVariable(name: "wide_prolog_niters", scope: !3878, file: !3, line: 2132, type: !511)
!3888 = !DILocalVariable(name: "new_loop", scope: !3878, file: !3, line: 2133, type: !1050)
!3889 = !DILocalVariable(name: "th", scope: !3878, file: !3, line: 2134, type: !7)
!3890 = !DILocalVariable(name: "min_profitable_iters", scope: !3878, file: !3, line: 2135, type: !504)
!3891 = !DILocation(line: 0, scope: !3878)
!3892 = !DILocation(line: 2129, column: 23, scope: !3878)
!3893 = !DILocation(line: 2132, column: 3, scope: !3878)
!3894 = !DILocation(line: 2137, column: 7, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 2137, column: 7)
!3896 = !DILocation(line: 2137, column: 7, scope: !3878)
!3897 = !DILocation(line: 2138, column: 14, scope: !3895)
!3898 = !DILocation(line: 2138, column: 5, scope: !3895)
!3899 = !DILocation(line: 2140, column: 3, scope: !3878)
!3900 = !DILocation(line: 2142, column: 13, scope: !3878)
!3901 = !DILocation(line: 2143, column: 27, scope: !3878)
!3902 = !DILocation(line: 2148, column: 26, scope: !3878)
!3903 = !DILocation(line: 2149, column: 8, scope: !3878)
!3904 = !DILocation(line: 2154, column: 42, scope: !3878)
!3905 = !DILocation(line: 2154, column: 5, scope: !3878)
!3906 = !DILocation(line: 2158, column: 3, scope: !3878)
!3907 = !DILocation(line: 2164, column: 13, scope: !3878)
!3908 = !DILocation(line: 2165, column: 36, scope: !3878)
!3909 = !DILocation(line: 2165, column: 34, scope: !3878)
!3910 = !DILocation(line: 2169, column: 41, scope: !3878)
!3911 = !DILocation(line: 2169, column: 3, scope: !3878)
!3912 = !DILocation(line: 2172, column: 3, scope: !3878)
!3913 = !DILocation(line: 2174, column: 3, scope: !3878)
!3914 = !DILocation(line: 2175, column: 1, scope: !3878)
!3915 = distinct !DISubprogram(name: "vect_build_loop_niters", scope: !3, file: !3, line: 1471, type: !3916, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3918)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!511, !1874, !825}
!3918 = !{!3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927}
!3919 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !3915, file: !3, line: 1471, type: !1874)
!3920 = !DILocalVariable(name: "seq", arg: 2, scope: !3915, file: !3, line: 1471, type: !825)
!3921 = !DILocalVariable(name: "ni_name", scope: !3915, file: !3, line: 1473, type: !511)
!3922 = !DILocalVariable(name: "var", scope: !3915, file: !3, line: 1473, type: !511)
!3923 = !DILocalVariable(name: "stmts", scope: !3915, file: !3, line: 1474, type: !825)
!3924 = !DILocalVariable(name: "pe", scope: !3915, file: !3, line: 1475, type: !815)
!3925 = !DILocalVariable(name: "loop", scope: !3915, file: !3, line: 1476, type: !1050)
!3926 = !DILocalVariable(name: "ni", scope: !3915, file: !3, line: 1477, type: !511)
!3927 = !DILocalVariable(name: "new_bb", scope: !3928, file: !3, line: 1490, type: !1287)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !3, line: 1489, column: 2)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1486, column: 11)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1485, column: 5)
!3931 = distinct !DILexicalBlock(scope: !3915, file: !3, line: 1484, column: 7)
!3932 = !DILocation(line: 0, scope: !3915)
!3933 = !DILocation(line: 1474, column: 3, scope: !3915)
!3934 = !DILocation(line: 1474, column: 14, scope: !3915)
!3935 = !DILocation(line: 1476, column: 23, scope: !3915)
!3936 = !DILocation(line: 1477, column: 27, scope: !3915)
!3937 = !DILocation(line: 1477, column: 13, scope: !3915)
!3938 = !DILocation(line: 1479, column: 25, scope: !3915)
!3939 = !DILocation(line: 1479, column: 9, scope: !3915)
!3940 = !DILocation(line: 1480, column: 3, scope: !3915)
!3941 = !DILocation(line: 1481, column: 13, scope: !3915)
!3942 = !DILocation(line: 1483, column: 8, scope: !3915)
!3943 = !DILocation(line: 1484, column: 7, scope: !3931)
!3944 = !DILocation(line: 1484, column: 7, scope: !3915)
!3945 = !DILocation(line: 1486, column: 11, scope: !3929)
!3946 = !DILocation(line: 1486, column: 11, scope: !3930)
!3947 = !DILocation(line: 1487, column: 2, scope: !3929)
!3948 = !DILocation(line: 1490, column: 25, scope: !3928)
!3949 = !DILocation(line: 0, scope: !3928)
!3950 = !DILocation(line: 1491, column: 4, scope: !3928)
!3951 = !DILocation(line: 1496, column: 1, scope: !3915)
!3952 = !DILocation(line: 1495, column: 3, scope: !3915)
!3953 = distinct !DISubprogram(name: "vect_gen_niters_for_prolog_loop", scope: !3, file: !3, line: 1964, type: !3954, scopeLine: 1966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3956)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{!511, !1874, !511, !869}
!3956 = !{!3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3979, !3980, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3995, !3996}
!3957 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !3953, file: !3, line: 1964, type: !1874)
!3958 = !DILocalVariable(name: "loop_niters", arg: 2, scope: !3953, file: !3, line: 1964, type: !511)
!3959 = !DILocalVariable(name: "wide_prolog_niters", arg: 3, scope: !3953, file: !3, line: 1965, type: !869)
!3960 = !DILocalVariable(name: "dr", scope: !3953, file: !3, line: 1967, type: !1886)
!3961 = !DILocalVariable(name: "loop", scope: !3953, file: !3, line: 1968, type: !1050)
!3962 = !DILocalVariable(name: "var", scope: !3953, file: !3, line: 1969, type: !511)
!3963 = !DILocalVariable(name: "stmts", scope: !3953, file: !3, line: 1970, type: !825)
!3964 = !DILocalVariable(name: "iters", scope: !3953, file: !3, line: 1971, type: !511)
!3965 = !DILocalVariable(name: "iters_name", scope: !3953, file: !3, line: 1971, type: !511)
!3966 = !DILocalVariable(name: "pe", scope: !3953, file: !3, line: 1972, type: !815)
!3967 = !DILocalVariable(name: "new_bb", scope: !3953, file: !3, line: 1973, type: !1287)
!3968 = !DILocalVariable(name: "dr_stmt", scope: !3953, file: !3, line: 1974, type: !835)
!3969 = !DILocalVariable(name: "stmt_info", scope: !3953, file: !3, line: 1975, type: !1867)
!3970 = !DILocalVariable(name: "vectype", scope: !3953, file: !3, line: 1976, type: !511)
!3971 = !DILocalVariable(name: "vectype_align", scope: !3953, file: !3, line: 1977, type: !504)
!3972 = !DILocalVariable(name: "niters_type", scope: !3953, file: !3, line: 1978, type: !511)
!3973 = !DILocalVariable(name: "step", scope: !3953, file: !3, line: 1979, type: !504)
!3974 = !DILocalVariable(name: "element_size", scope: !3953, file: !3, line: 1980, type: !504)
!3975 = !DILocalVariable(name: "nelements", scope: !3953, file: !3, line: 1981, type: !504)
!3976 = !DILocalVariable(name: "byte_misalign", scope: !3977, file: !3, line: 1990, type: !504)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 1989, column: 5)
!3978 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 1988, column: 7)
!3979 = !DILocalVariable(name: "elem_misalign", scope: !3977, file: !3, line: 1991, type: !504)
!3980 = !DILocalVariable(name: "new_stmts", scope: !3981, file: !3, line: 2001, type: !825)
!3981 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 2000, column: 5)
!3982 = !DILocalVariable(name: "start_addr", scope: !3981, file: !3, line: 2002, type: !511)
!3983 = !DILocalVariable(name: "ptr_type", scope: !3981, file: !3, line: 2004, type: !511)
!3984 = !DILocalVariable(name: "size", scope: !3981, file: !3, line: 2005, type: !511)
!3985 = !DILocalVariable(name: "type", scope: !3981, file: !3, line: 2006, type: !511)
!3986 = !DILocalVariable(name: "vectype_size_minus_1", scope: !3981, file: !3, line: 2007, type: !511)
!3987 = !DILocalVariable(name: "elem_size_log", scope: !3981, file: !3, line: 2008, type: !511)
!3988 = !DILocalVariable(name: "nelements_minus_1", scope: !3981, file: !3, line: 2010, type: !511)
!3989 = !DILocalVariable(name: "nelements_tree", scope: !3981, file: !3, line: 2011, type: !511)
!3990 = !DILocalVariable(name: "byte_misalign", scope: !3981, file: !3, line: 2012, type: !511)
!3991 = !DILocalVariable(name: "elem_misalign", scope: !3981, file: !3, line: 2013, type: !511)
!3992 = !DILocalVariable(name: "seq", scope: !3993, file: !3, line: 2053, type: !825)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 2052, column: 5)
!3994 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 2049, column: 7)
!3995 = !DILocalVariable(name: "wide_iters", scope: !3993, file: !3, line: 2054, type: !511)
!3996 = !DILocalVariable(name: "new_bb", scope: !3997, file: !3, line: 2066, type: !1287)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 2065, column: 5)
!3998 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 2064, column: 7)
!3999 = !DILocation(line: 0, scope: !3953)
!4000 = !DILocation(line: 1967, column: 31, scope: !3953)
!4001 = !DILocation(line: 1968, column: 23, scope: !3953)
!4002 = !DILocation(line: 1970, column: 3, scope: !3953)
!4003 = !DILocation(line: 1974, column: 20, scope: !3953)
!4004 = !DILocation(line: 1975, column: 29, scope: !3953)
!4005 = !DILocation(line: 1976, column: 18, scope: !3953)
!4006 = !DILocation(line: 1977, column: 23, scope: !3953)
!4007 = !DILocation(line: 1977, column: 44, scope: !3953)
!4008 = !DILocation(line: 1978, column: 22, scope: !3953)
!4009 = !DILocation(line: 1980, column: 22, scope: !3953)
!4010 = !DILocation(line: 1981, column: 19, scope: !3953)
!4011 = !DILocation(line: 1983, column: 7, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 1983, column: 7)
!4013 = !DILocation(line: 1983, column: 7, scope: !3953)
!4014 = !DILocation(line: 1984, column: 12, scope: !4012)
!4015 = !DILocation(line: 1984, column: 5, scope: !4012)
!4016 = !DILocation(line: 1986, column: 8, scope: !3953)
!4017 = !DILocation(line: 1988, column: 7, scope: !3978)
!4018 = !DILocation(line: 1988, column: 47, scope: !3978)
!4019 = !DILocation(line: 1988, column: 7, scope: !3953)
!4020 = !DILocation(line: 0, scope: !3977)
!4021 = !DILocation(line: 1991, column: 41, scope: !3977)
!4022 = !DILocation(line: 1993, column: 11, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 1993, column: 11)
!4024 = !DILocation(line: 1993, column: 11, scope: !3977)
!4025 = !DILocation(line: 1994, column: 18, scope: !4023)
!4026 = !DILocation(line: 1994, column: 9, scope: !4023)
!4027 = !DILocation(line: 1997, column: 35, scope: !3977)
!4028 = !DILocation(line: 1997, column: 65, scope: !3977)
!4029 = !DILocation(line: 1997, column: 52, scope: !3977)
!4030 = !DILocation(line: 1997, column: 71, scope: !3977)
!4031 = !DILocation(line: 1997, column: 22, scope: !3977)
!4032 = !DILocation(line: 1996, column: 15, scope: !3977)
!4033 = !DILocation(line: 1998, column: 5, scope: !3977)
!4034 = !DILocation(line: 2001, column: 7, scope: !3981)
!4035 = !DILocation(line: 0, scope: !3981)
!4036 = !DILocation(line: 2001, column: 18, scope: !3981)
!4037 = !DILocation(line: 2002, column: 25, scope: !3981)
!4038 = !DILocation(line: 2004, column: 23, scope: !3981)
!4039 = !DILocation(line: 2005, column: 19, scope: !3981)
!4040 = !DILocation(line: 2006, column: 36, scope: !3981)
!4041 = !DILocation(line: 2006, column: 51, scope: !3981)
!4042 = !DILocation(line: 2006, column: 19, scope: !3981)
!4043 = !DILocation(line: 2007, column: 70, scope: !3981)
!4044 = !DILocation(line: 2007, column: 56, scope: !3981)
!4045 = !DILocation(line: 2007, column: 35, scope: !3981)
!4046 = !DILocation(line: 2009, column: 55, scope: !3981)
!4047 = !DILocation(line: 2009, column: 42, scope: !3981)
!4048 = !DILocation(line: 2009, column: 30, scope: !3981)
!4049 = !DILocation(line: 2009, column: 9, scope: !3981)
!4050 = !DILocation(line: 2010, column: 53, scope: !3981)
!4051 = !DILocation(line: 2010, column: 32, scope: !3981)
!4052 = !DILocation(line: 2011, column: 50, scope: !3981)
!4053 = !DILocation(line: 2011, column: 29, scope: !3981)
!4054 = !DILocation(line: 2015, column: 54, scope: !3981)
!4055 = !DILocation(line: 2015, column: 16, scope: !3981)
!4056 = !DILocation(line: 2016, column: 7, scope: !3981)
!4057 = !DILocation(line: 2020, column: 9, scope: !3981)
!4058 = !DILocation(line: 2024, column: 9, scope: !3981)
!4059 = !DILocation(line: 2027, column: 15, scope: !3981)
!4060 = !DILocation(line: 2028, column: 15, scope: !3981)
!4061 = !DILocation(line: 2029, column: 15, scope: !3981)
!4062 = !DILocation(line: 2030, column: 5, scope: !3978)
!4063 = !DILocation(line: 0, scope: !3978)
!4064 = !DILocation(line: 2036, column: 7, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 2036, column: 7)
!4066 = !DILocation(line: 2036, column: 31, scope: !4065)
!4067 = !DILocation(line: 2036, column: 7, scope: !3953)
!4068 = !DILocation(line: 2037, column: 13, scope: !4065)
!4069 = !DILocation(line: 2037, column: 5, scope: !4065)
!4070 = !DILocation(line: 2039, column: 7, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 2039, column: 7)
!4072 = !DILocation(line: 2039, column: 7, scope: !3953)
!4073 = !DILocation(line: 2041, column: 16, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 2040, column: 5)
!4075 = !DILocation(line: 2041, column: 7, scope: !4074)
!4076 = !DILocation(line: 2042, column: 27, scope: !4074)
!4077 = !DILocation(line: 2042, column: 7, scope: !4074)
!4078 = !DILocation(line: 2043, column: 5, scope: !4074)
!4079 = !DILocation(line: 2045, column: 9, scope: !3953)
!4080 = !DILocation(line: 2046, column: 3, scope: !3953)
!4081 = !DILocation(line: 2047, column: 9, scope: !3953)
!4082 = !DILocation(line: 2048, column: 16, scope: !3953)
!4083 = !DILocation(line: 2049, column: 27, scope: !3994)
!4084 = !DILocation(line: 2049, column: 7, scope: !3994)
!4085 = !DILocation(line: 2049, column: 7, scope: !3953)
!4086 = !DILocation(line: 2050, column: 25, scope: !3994)
!4087 = !DILocation(line: 2050, column: 5, scope: !3994)
!4088 = !DILocation(line: 2053, column: 7, scope: !3993)
!4089 = !DILocation(line: 0, scope: !3993)
!4090 = !DILocation(line: 2053, column: 18, scope: !3993)
!4091 = !DILocation(line: 2054, column: 25, scope: !3993)
!4092 = !DILocation(line: 2055, column: 29, scope: !3993)
!4093 = !DILocation(line: 2055, column: 13, scope: !3993)
!4094 = !DILocation(line: 2056, column: 7, scope: !3993)
!4095 = !DILocation(line: 2057, column: 29, scope: !3993)
!4096 = !DILocation(line: 2057, column: 27, scope: !3993)
!4097 = !DILocation(line: 2059, column: 11, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 2059, column: 11)
!4099 = !DILocation(line: 2059, column: 11, scope: !3993)
!4100 = !DILocation(line: 2060, column: 2, scope: !4098)
!4101 = !DILocation(line: 2061, column: 5, scope: !3994)
!4102 = !DILocation(line: 2064, column: 7, scope: !3998)
!4103 = !DILocation(line: 2064, column: 7, scope: !3953)
!4104 = !DILocation(line: 2066, column: 28, scope: !3997)
!4105 = !DILocation(line: 0, scope: !3997)
!4106 = !DILocation(line: 2067, column: 7, scope: !3997)
!4107 = !DILocation(line: 2071, column: 1, scope: !3953)
!4108 = !DILocation(line: 2070, column: 3, scope: !3953)
!4109 = distinct !DISubprogram(name: "vect_update_inits_of_drs", scope: !3, file: !3, line: 2104, type: !4110, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4112)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !1874, !511}
!4112 = !{!4113, !4114, !4115, !4116, !4117}
!4113 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !4109, file: !3, line: 2104, type: !1874)
!4114 = !DILocalVariable(name: "niters", arg: 2, scope: !4109, file: !3, line: 2104, type: !511)
!4115 = !DILocalVariable(name: "i", scope: !4109, file: !3, line: 2106, type: !7)
!4116 = !DILocalVariable(name: "datarefs", scope: !4109, file: !3, line: 2107, type: !1948)
!4117 = !DILocalVariable(name: "dr", scope: !4109, file: !3, line: 2108, type: !1886)
!4118 = !DILocation(line: 0, scope: !4109)
!4119 = !DILocation(line: 2107, column: 44, scope: !4109)
!4120 = !DILocation(line: 2108, column: 3, scope: !4109)
!4121 = !DILocation(line: 2110, column: 7, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 2110, column: 7)
!4123 = !DILocation(line: 2110, column: 7, scope: !4109)
!4124 = !DILocation(line: 2111, column: 14, scope: !4122)
!4125 = !DILocation(line: 2111, column: 5, scope: !4122)
!4126 = !DILocation(line: 0, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 2113, column: 3)
!4128 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 2113, column: 3)
!4129 = !DILocation(line: 2113, column: 8, scope: !4128)
!4130 = !DILocation(line: 0, scope: !4128)
!4131 = !DILocation(line: 2113, column: 15, scope: !4127)
!4132 = !DILocation(line: 2113, column: 3, scope: !4128)
!4133 = !DILocation(line: 2114, column: 29, scope: !4127)
!4134 = !DILocation(line: 2114, column: 5, scope: !4127)
!4135 = !DILocation(line: 2113, column: 65, scope: !4127)
!4136 = !DILocation(line: 2113, column: 3, scope: !4127)
!4137 = distinct !{!4137, !4132, !4138}
!4138 = !DILocation(line: 2114, column: 39, scope: !4128)
!4139 = !DILocation(line: 2115, column: 1, scope: !4109)
!4140 = distinct !DISubprogram(name: "vect_loop_versioning", scope: !3, file: !3, line: 2480, type: !4141, scopeLine: 2482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4144)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{null, !1874, !503, !869, !4143}
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!4144 = !{!4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164}
!4145 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !4140, file: !3, line: 2480, type: !1874)
!4146 = !DILocalVariable(name: "do_versioning", arg: 2, scope: !4140, file: !3, line: 2480, type: !503)
!4147 = !DILocalVariable(name: "cond_expr", arg: 3, scope: !4140, file: !3, line: 2481, type: !869)
!4148 = !DILocalVariable(name: "cond_expr_stmt_list", arg: 4, scope: !4140, file: !3, line: 2481, type: !4143)
!4149 = !DILocalVariable(name: "loop", scope: !4140, file: !3, line: 2483, type: !1050)
!4150 = !DILocalVariable(name: "condition_bb", scope: !4140, file: !3, line: 2484, type: !1287)
!4151 = !DILocalVariable(name: "gsi", scope: !4140, file: !3, line: 2485, type: !2627)
!4152 = !DILocalVariable(name: "cond_exp_gsi", scope: !4140, file: !3, line: 2485, type: !2627)
!4153 = !DILocalVariable(name: "merge_bb", scope: !4140, file: !3, line: 2486, type: !1287)
!4154 = !DILocalVariable(name: "new_exit_bb", scope: !4140, file: !3, line: 2487, type: !1287)
!4155 = !DILocalVariable(name: "new_exit_e", scope: !4140, file: !3, line: 2488, type: !815)
!4156 = !DILocalVariable(name: "e", scope: !4140, file: !3, line: 2488, type: !815)
!4157 = !DILocalVariable(name: "orig_phi", scope: !4140, file: !3, line: 2489, type: !835)
!4158 = !DILocalVariable(name: "new_phi", scope: !4140, file: !3, line: 2489, type: !835)
!4159 = !DILocalVariable(name: "arg", scope: !4140, file: !3, line: 2490, type: !511)
!4160 = !DILocalVariable(name: "prob", scope: !4140, file: !3, line: 2491, type: !7)
!4161 = !DILocalVariable(name: "gimplify_stmt_list", scope: !4140, file: !3, line: 2492, type: !825)
!4162 = !DILocalVariable(name: "scalar_loop_iters", scope: !4140, file: !3, line: 2493, type: !511)
!4163 = !DILocalVariable(name: "min_profitable_iters", scope: !4140, file: !3, line: 2494, type: !504)
!4164 = !DILocalVariable(name: "th", scope: !4140, file: !3, line: 2495, type: !7)
!4165 = !DILocation(line: 0, scope: !4140)
!4166 = !DILocation(line: 2483, column: 23, scope: !4140)
!4167 = !DILocation(line: 2484, column: 3, scope: !4140)
!4168 = !DILocation(line: 2485, column: 3, scope: !4140)
!4169 = !DILocation(line: 2492, column: 3, scope: !4140)
!4170 = !DILocation(line: 2492, column: 14, scope: !4140)
!4171 = !DILocation(line: 2493, column: 28, scope: !4140)
!4172 = !DILocation(line: 2498, column: 26, scope: !4140)
!4173 = !DILocation(line: 2500, column: 8, scope: !4140)
!4174 = !DILocation(line: 2504, column: 5, scope: !4140)
!4175 = !DILocation(line: 2503, column: 14, scope: !4140)
!4176 = !DILocation(line: 2507, column: 16, scope: !4140)
!4177 = !DILocation(line: 2507, column: 14, scope: !4140)
!4178 = !DILocation(line: 2510, column: 7, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 2510, column: 7)
!4180 = !DILocation(line: 2510, column: 7, scope: !4140)
!4181 = !DILocation(line: 2511, column: 7, scope: !4179)
!4182 = !DILocation(line: 2514, column: 7, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 2514, column: 7)
!4184 = !DILocation(line: 2514, column: 7, scope: !4140)
!4185 = !DILocation(line: 2515, column: 5, scope: !4183)
!4186 = !DILocation(line: 2519, column: 5, scope: !4140)
!4187 = !DILocation(line: 2518, column: 14, scope: !4140)
!4188 = !DILocation(line: 2521, column: 5, scope: !4140)
!4189 = !DILocation(line: 2520, column: 14, scope: !4140)
!4190 = !DILocation(line: 2522, column: 44, scope: !4140)
!4191 = !DILocation(line: 2522, column: 3, scope: !4140)
!4192 = !DILocation(line: 2526, column: 8, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 2526, column: 7)
!4194 = !DILocation(line: 2526, column: 7, scope: !4140)
!4195 = !DILocation(line: 2529, column: 3, scope: !4140)
!4196 = !DILocation(line: 2530, column: 23, scope: !4140)
!4197 = !DILocation(line: 2530, column: 3, scope: !4140)
!4198 = !DILocation(line: 2532, column: 3, scope: !4140)
!4199 = !DILocation(line: 2542, column: 14, scope: !4140)
!4200 = !DILocation(line: 2542, column: 34, scope: !4140)
!4201 = !DILocation(line: 2543, column: 3, scope: !4140)
!4202 = !DILocation(line: 2544, column: 29, scope: !4140)
!4203 = !DILocation(line: 2544, column: 17, scope: !4140)
!4204 = !DILocation(line: 2545, column: 16, scope: !4140)
!4205 = !DILocation(line: 2546, column: 7, scope: !4140)
!4206 = !DILocation(line: 2548, column: 14, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 2548, column: 3)
!4208 = !DILocation(line: 0, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 2549, column: 5)
!4210 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 2548, column: 3)
!4211 = !DILocation(line: 2548, column: 8, scope: !4207)
!4212 = !DILocation(line: 2548, column: 42, scope: !4210)
!4213 = !DILocation(line: 2548, column: 41, scope: !4210)
!4214 = !DILocation(line: 2548, column: 3, scope: !4207)
!4215 = !DILocation(line: 2550, column: 18, scope: !4209)
!4216 = !DILocation(line: 2551, column: 34, scope: !4209)
!4217 = !DILocation(line: 2551, column: 17, scope: !4209)
!4218 = !DILocation(line: 2553, column: 13, scope: !4209)
!4219 = !DILocation(line: 2555, column: 6, scope: !4209)
!4220 = !DILocation(line: 2554, column: 7, scope: !4209)
!4221 = !DILocation(line: 2556, column: 48, scope: !4209)
!4222 = !DILocation(line: 2556, column: 7, scope: !4209)
!4223 = !DILocation(line: 2548, column: 59, scope: !4210)
!4224 = !DILocation(line: 2548, column: 3, scope: !4210)
!4225 = distinct !{!4225, !4214, !4226}
!4226 = !DILocation(line: 2557, column: 5, scope: !4207)
!4227 = !DILocation(line: 2561, column: 3, scope: !4140)
!4228 = !DILocation(line: 2562, column: 7, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 2562, column: 7)
!4230 = !DILocation(line: 2562, column: 7, scope: !4140)
!4231 = !DILocation(line: 2564, column: 22, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 2563, column: 5)
!4233 = !DILocation(line: 2564, column: 35, scope: !4232)
!4234 = !DILocation(line: 2565, column: 45, scope: !4232)
!4235 = !DILocation(line: 2565, column: 7, scope: !4232)
!4236 = !DILocation(line: 2567, column: 28, scope: !4232)
!4237 = !DILocation(line: 2568, column: 5, scope: !4232)
!4238 = !DILocation(line: 2569, column: 14, scope: !4140)
!4239 = !DILocation(line: 2570, column: 1, scope: !4140)
!4240 = distinct !DISubprogram(name: "vect_create_cond_for_align_checks", scope: !3, file: !3, line: 2204, type: !4241, scopeLine: 2207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4243)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{null, !1874, !869, !4143}
!4243 = !{!4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4266, !4267, !4268, !4269, !4270, !4271, !4272}
!4244 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !4240, file: !3, line: 2204, type: !1874)
!4245 = !DILocalVariable(name: "cond_expr", arg: 2, scope: !4240, file: !3, line: 2205, type: !869)
!4246 = !DILocalVariable(name: "cond_expr_stmt_list", arg: 3, scope: !4240, file: !3, line: 2206, type: !4143)
!4247 = !DILocalVariable(name: "loop", scope: !4240, file: !3, line: 2208, type: !1050)
!4248 = !DILocalVariable(name: "may_misalign_stmts", scope: !4240, file: !3, line: 2209, type: !2024)
!4249 = !DILocalVariable(name: "ref_stmt", scope: !4240, file: !3, line: 2211, type: !835)
!4250 = !DILocalVariable(name: "mask", scope: !4240, file: !3, line: 2212, type: !504)
!4251 = !DILocalVariable(name: "mask_cst", scope: !4240, file: !3, line: 2213, type: !511)
!4252 = !DILocalVariable(name: "i", scope: !4240, file: !3, line: 2214, type: !7)
!4253 = !DILocalVariable(name: "psize", scope: !4240, file: !3, line: 2215, type: !511)
!4254 = !DILocalVariable(name: "int_ptrsize_type", scope: !4240, file: !3, line: 2216, type: !511)
!4255 = !DILocalVariable(name: "tmp_name", scope: !4240, file: !3, line: 2217, type: !2252)
!4256 = !DILocalVariable(name: "or_tmp_name", scope: !4240, file: !3, line: 2218, type: !511)
!4257 = !DILocalVariable(name: "and_tmp", scope: !4240, file: !3, line: 2219, type: !511)
!4258 = !DILocalVariable(name: "and_tmp_name", scope: !4240, file: !3, line: 2219, type: !511)
!4259 = !DILocalVariable(name: "and_stmt", scope: !4240, file: !3, line: 2220, type: !835)
!4260 = !DILocalVariable(name: "ptrsize_zero", scope: !4240, file: !3, line: 2221, type: !511)
!4261 = !DILocalVariable(name: "part_cond_expr", scope: !4240, file: !3, line: 2222, type: !511)
!4262 = !DILocalVariable(name: "new_stmt_list", scope: !4263, file: !3, line: 2239, type: !825)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 2238, column: 5)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 2237, column: 3)
!4265 = distinct !DILexicalBlock(scope: !4240, file: !3, line: 2237, column: 3)
!4266 = !DILocalVariable(name: "addr_base", scope: !4263, file: !3, line: 2240, type: !511)
!4267 = !DILocalVariable(name: "addr_tmp", scope: !4263, file: !3, line: 2241, type: !511)
!4268 = !DILocalVariable(name: "addr_tmp_name", scope: !4263, file: !3, line: 2241, type: !511)
!4269 = !DILocalVariable(name: "or_tmp", scope: !4263, file: !3, line: 2242, type: !511)
!4270 = !DILocalVariable(name: "new_or_tmp_name", scope: !4263, file: !3, line: 2242, type: !511)
!4271 = !DILocalVariable(name: "addr_stmt", scope: !4263, file: !3, line: 2243, type: !835)
!4272 = !DILocalVariable(name: "or_stmt", scope: !4263, file: !3, line: 2243, type: !835)
!4273 = !DILocation(line: 0, scope: !4240)
!4274 = !DILocation(line: 2208, column: 23, scope: !4240)
!4275 = !DILocation(line: 2210, column: 7, scope: !4240)
!4276 = !DILocation(line: 2211, column: 3, scope: !4240)
!4277 = !DILocation(line: 2212, column: 14, scope: !4240)
!4278 = !DILocation(line: 2217, column: 3, scope: !4240)
!4279 = !DILocation(line: 2217, column: 8, scope: !4240)
!4280 = !DILocation(line: 2226, column: 3, scope: !4240)
!4281 = !DILocation(line: 2230, column: 11, scope: !4240)
!4282 = !DILocation(line: 2232, column: 24, scope: !4240)
!4283 = !DILocation(line: 2232, column: 39, scope: !4240)
!4284 = !DILocation(line: 2232, column: 7, scope: !4240)
!4285 = !DILocation(line: 0, scope: !4264)
!4286 = !DILocation(line: 0, scope: !4263)
!4287 = !DILocation(line: 2237, column: 8, scope: !4265)
!4288 = !DILocation(line: 0, scope: !4265)
!4289 = !DILocation(line: 2237, column: 15, scope: !4264)
!4290 = !DILocation(line: 2237, column: 3, scope: !4265)
!4291 = !DILocation(line: 2239, column: 7, scope: !4263)
!4292 = !DILocation(line: 2239, column: 18, scope: !4263)
!4293 = !DILocation(line: 2247, column: 40, scope: !4263)
!4294 = !DILocation(line: 2247, column: 2, scope: !4263)
!4295 = !DILocation(line: 2249, column: 11, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2249, column: 11)
!4297 = !DILocation(line: 2249, column: 25, scope: !4296)
!4298 = !DILocation(line: 2249, column: 11, scope: !4263)
!4299 = !DILocation(line: 2250, column: 2, scope: !4296)
!4300 = !DILocation(line: 2252, column: 7, scope: !4263)
!4301 = !DILocation(line: 2253, column: 18, scope: !4263)
!4302 = !DILocation(line: 2254, column: 7, scope: !4263)
!4303 = !DILocation(line: 2255, column: 23, scope: !4263)
!4304 = !DILocation(line: 2256, column: 19, scope: !4263)
!4305 = !DILocation(line: 2258, column: 7, scope: !4263)
!4306 = !DILocation(line: 2258, column: 41, scope: !4263)
!4307 = !DILocation(line: 2259, column: 7, scope: !4263)
!4308 = !DILocation(line: 2263, column: 23, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2263, column: 11)
!4310 = !DILocation(line: 2263, column: 11, scope: !4263)
!4311 = !DILocation(line: 2266, column: 11, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 2264, column: 9)
!4313 = !DILocation(line: 2267, column: 20, scope: !4312)
!4314 = !DILocation(line: 2268, column: 11, scope: !4312)
!4315 = !DILocation(line: 2269, column: 22, scope: !4312)
!4316 = !DILocation(line: 2270, column: 14, scope: !4312)
!4317 = !DILocation(line: 2273, column: 11, scope: !4312)
!4318 = !DILocation(line: 2273, column: 47, scope: !4312)
!4319 = !DILocation(line: 2274, column: 4, scope: !4312)
!4320 = !DILocation(line: 2276, column: 9, scope: !4312)
!4321 = !DILocation(line: 0, scope: !4309)
!4322 = !DILocation(line: 2280, column: 5, scope: !4264)
!4323 = !DILocation(line: 2237, column: 71, scope: !4264)
!4324 = !DILocation(line: 2237, column: 3, scope: !4264)
!4325 = distinct !{!4325, !4290, !4326}
!4326 = !DILocation(line: 2280, column: 5, scope: !4265)
!4327 = !DILocation(line: 2282, column: 47, scope: !4240)
!4328 = !DILocation(line: 2282, column: 14, scope: !4240)
!4329 = !DILocation(line: 2285, column: 13, scope: !4240)
!4330 = !DILocation(line: 2286, column: 3, scope: !4240)
!4331 = !DILocation(line: 2287, column: 18, scope: !4240)
!4332 = !DILocation(line: 2289, column: 14, scope: !4240)
!4333 = !DILocation(line: 2291, column: 3, scope: !4240)
!4334 = !DILocation(line: 2291, column: 36, scope: !4240)
!4335 = !DILocation(line: 2292, column: 3, scope: !4240)
!4336 = !DILocation(line: 2296, column: 18, scope: !4240)
!4337 = !DILocation(line: 2297, column: 20, scope: !4240)
!4338 = !DILocation(line: 2299, column: 7, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4240, file: !3, line: 2299, column: 7)
!4340 = !DILocation(line: 2299, column: 7, scope: !4240)
!4341 = !DILocation(line: 2300, column: 18, scope: !4339)
!4342 = !DILocation(line: 2300, column: 5, scope: !4339)
!4343 = !DILocation(line: 0, scope: !4339)
!4344 = !DILocation(line: 2304, column: 1, scope: !4240)
!4345 = distinct !DISubprogram(name: "vect_create_cond_for_alias_checks", scope: !3, file: !3, line: 2361, type: !4241, scopeLine: 2364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4346)
!4346 = !{!4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368}
!4347 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !4345, file: !3, line: 2361, type: !1874)
!4348 = !DILocalVariable(name: "cond_expr", arg: 2, scope: !4345, file: !3, line: 2362, type: !869)
!4349 = !DILocalVariable(name: "cond_expr_stmt_list", arg: 3, scope: !4345, file: !3, line: 2363, type: !4143)
!4350 = !DILocalVariable(name: "loop", scope: !4345, file: !3, line: 2365, type: !1050)
!4351 = !DILocalVariable(name: "may_alias_ddrs", scope: !4345, file: !3, line: 2366, type: !1962)
!4352 = !DILocalVariable(name: "vect_factor", scope: !4345, file: !3, line: 2368, type: !511)
!4353 = !DILocalVariable(name: "ddr", scope: !4345, file: !3, line: 2371, type: !1974)
!4354 = !DILocalVariable(name: "i", scope: !4345, file: !3, line: 2372, type: !7)
!4355 = !DILocalVariable(name: "part_cond_expr", scope: !4345, file: !3, line: 2373, type: !511)
!4356 = !DILocalVariable(name: "dr_a", scope: !4357, file: !3, line: 2389, type: !1886)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2388, column: 5)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 2387, column: 3)
!4359 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 2387, column: 3)
!4360 = !DILocalVariable(name: "dr_b", scope: !4357, file: !3, line: 2389, type: !1886)
!4361 = !DILocalVariable(name: "dr_group_first_a", scope: !4357, file: !3, line: 2390, type: !835)
!4362 = !DILocalVariable(name: "dr_group_first_b", scope: !4357, file: !3, line: 2390, type: !835)
!4363 = !DILocalVariable(name: "addr_base_a", scope: !4357, file: !3, line: 2391, type: !511)
!4364 = !DILocalVariable(name: "addr_base_b", scope: !4357, file: !3, line: 2391, type: !511)
!4365 = !DILocalVariable(name: "segment_length_a", scope: !4357, file: !3, line: 2392, type: !511)
!4366 = !DILocalVariable(name: "segment_length_b", scope: !4357, file: !3, line: 2392, type: !511)
!4367 = !DILocalVariable(name: "stmt_a", scope: !4357, file: !3, line: 2393, type: !835)
!4368 = !DILocalVariable(name: "stmt_b", scope: !4357, file: !3, line: 2393, type: !835)
!4369 = !DILocation(line: 0, scope: !4345)
!4370 = !DILocation(line: 2365, column: 23, scope: !4345)
!4371 = !DILocation(line: 2367, column: 5, scope: !4345)
!4372 = !DILocation(line: 2369, column: 20, scope: !4345)
!4373 = !DILocation(line: 2369, column: 39, scope: !4345)
!4374 = !DILocation(line: 2369, column: 5, scope: !4345)
!4375 = !DILocation(line: 2371, column: 3, scope: !4345)
!4376 = !DILocation(line: 2384, column: 7, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 2384, column: 7)
!4378 = !DILocation(line: 2384, column: 7, scope: !4345)
!4379 = !DILocation(line: 2387, column: 3, scope: !4359)
!4380 = !DILocation(line: 0, scope: !4359)
!4381 = !DILocation(line: 2387, column: 15, scope: !4358)
!4382 = !DILocation(line: 2395, column: 14, scope: !4357)
!4383 = !DILocation(line: 0, scope: !4357)
!4384 = !DILocation(line: 2396, column: 16, scope: !4357)
!4385 = !DILocation(line: 2397, column: 26, scope: !4357)
!4386 = !DILocation(line: 2398, column: 11, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 2398, column: 11)
!4388 = !DILocation(line: 2398, column: 11, scope: !4357)
!4389 = !DILocation(line: 2401, column: 11, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 2399, column: 9)
!4391 = !DILocation(line: 2402, column: 2, scope: !4390)
!4392 = !DILocation(line: 2404, column: 14, scope: !4357)
!4393 = !DILocation(line: 2405, column: 16, scope: !4357)
!4394 = !DILocation(line: 2406, column: 26, scope: !4357)
!4395 = !DILocation(line: 2407, column: 11, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 2407, column: 11)
!4397 = !DILocation(line: 2407, column: 11, scope: !4357)
!4398 = !DILocation(line: 2410, column: 11, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 2408, column: 9)
!4400 = !DILocation(line: 2411, column: 2, scope: !4399)
!4401 = !DILocation(line: 2414, column: 9, scope: !4357)
!4402 = !DILocation(line: 2417, column: 9, scope: !4357)
!4403 = !DILocation(line: 2420, column: 26, scope: !4357)
!4404 = !DILocation(line: 2421, column: 26, scope: !4357)
!4405 = !DILocation(line: 2423, column: 11, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 2423, column: 11)
!4407 = !DILocation(line: 2423, column: 11, scope: !4357)
!4408 = !DILocation(line: 2425, column: 13, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 2424, column: 2)
!4410 = !DILocation(line: 2425, column: 4, scope: !4409)
!4411 = !DILocation(line: 2427, column: 24, scope: !4409)
!4412 = !DILocation(line: 2427, column: 35, scope: !4409)
!4413 = !DILocation(line: 2427, column: 4, scope: !4409)
!4414 = !DILocation(line: 2428, column: 13, scope: !4409)
!4415 = !DILocation(line: 2428, column: 4, scope: !4409)
!4416 = !DILocation(line: 2429, column: 24, scope: !4409)
!4417 = !DILocation(line: 2429, column: 35, scope: !4409)
!4418 = !DILocation(line: 2429, column: 4, scope: !4409)
!4419 = !DILocation(line: 2430, column: 2, scope: !4409)
!4420 = !DILocation(line: 2434, column: 8, scope: !4357)
!4421 = !DILocation(line: 2446, column: 11, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 2446, column: 11)
!4423 = !DILocation(line: 2446, column: 11, scope: !4357)
!4424 = !DILocation(line: 2447, column: 15, scope: !4422)
!4425 = !DILocation(line: 2447, column: 2, scope: !4422)
!4426 = !DILocation(line: 0, scope: !4422)
!4427 = !DILocation(line: 2387, column: 61, scope: !4358)
!4428 = !DILocation(line: 2387, column: 3, scope: !4358)
!4429 = distinct !{!4429, !4379, !4430}
!4430 = !DILocation(line: 2451, column: 5, scope: !4359)
!4431 = !DILocation(line: 2453, column: 7, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 2453, column: 7)
!4433 = !DILocation(line: 2453, column: 7, scope: !4345)
!4434 = !DILocation(line: 2454, column: 14, scope: !4432)
!4435 = !DILocation(line: 2455, column: 14, scope: !4432)
!4436 = !DILocation(line: 2454, column: 5, scope: !4432)
!4437 = !DILocation(line: 2456, column: 1, scope: !4345)
!4438 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !4439, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4441)
!4439 = !DISubroutineType(types: !4440)
!4440 = !{!7, !3220}
!4441 = !{!4442}
!4442 = !DILocalVariable(name: "vec_", arg: 1, scope: !4438, file: !135, line: 150, type: !3220)
!4443 = !DILocation(line: 0, scope: !4438)
!4444 = !DILocation(line: 150, column: 1, scope: !4438)
!4445 = distinct !DISubprogram(name: "adjust_phi_and_debug_stmts", scope: !3, file: !3, line: 230, type: !4446, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4448)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{null, !835, !815, !511}
!4448 = !{!4449, !4450, !4451, !4452}
!4449 = !DILocalVariable(name: "update_phi", arg: 1, scope: !4445, file: !3, line: 230, type: !835)
!4450 = !DILocalVariable(name: "e", arg: 2, scope: !4445, file: !3, line: 230, type: !815)
!4451 = !DILocalVariable(name: "new_def", arg: 3, scope: !4445, file: !3, line: 230, type: !511)
!4452 = !DILocalVariable(name: "orig_def", scope: !4445, file: !3, line: 232, type: !511)
!4453 = !DILocation(line: 0, scope: !4445)
!4454 = !DILocation(line: 232, column: 19, scope: !4445)
!4455 = !DILocation(line: 234, column: 3, scope: !4445)
!4456 = !DILocation(line: 236, column: 7, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 236, column: 7)
!4458 = !DILocation(line: 236, column: 7, scope: !4445)
!4459 = !DILocation(line: 237, column: 35, scope: !4457)
!4460 = !DILocation(line: 238, column: 4, scope: !4457)
!4461 = !DILocation(line: 237, column: 5, scope: !4457)
!4462 = !DILocation(line: 239, column: 1, scope: !4445)
!4463 = distinct !DISubprogram(name: "bb_seq", scope: !398, file: !398, line: 237, type: !4464, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4469)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!825, !4466}
!4466 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !512, line: 112, baseType: !4467)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!4469 = !{!4470}
!4470 = !DILocalVariable(name: "bb", arg: 1, scope: !4463, file: !398, line: 237, type: !4466)
!4471 = !DILocation(line: 0, scope: !4463)
!4472 = !DILocation(line: 239, column: 17, scope: !4463)
!4473 = !DILocation(line: 239, column: 23, scope: !4463)
!4474 = !DILocation(line: 239, column: 33, scope: !4463)
!4475 = !DILocation(line: 239, column: 43, scope: !4463)
!4476 = !DILocation(line: 239, column: 36, scope: !4463)
!4477 = !DILocation(line: 239, column: 10, scope: !4463)
!4478 = !DILocation(line: 239, column: 68, scope: !4463)
!4479 = !DILocation(line: 239, column: 3, scope: !4463)
!4480 = distinct !DISubprogram(name: "gimple_seq_first", scope: !398, file: !398, line: 159, type: !4481, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4486)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{!830, !4483}
!4483 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !512, line: 67, baseType: !4484)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !827)
!4486 = !{!4487}
!4487 = !DILocalVariable(name: "s", arg: 1, scope: !4480, file: !398, line: 159, type: !4483)
!4488 = !DILocation(line: 0, scope: !4480)
!4489 = !DILocation(line: 161, column: 10, scope: !4480)
!4490 = !DILocation(line: 161, column: 17, scope: !4480)
!4491 = !DILocation(line: 161, column: 3, scope: !4480)
!4492 = distinct !DISubprogram(name: "op_iter_init", scope: !2752, file: !2752, line: 742, type: !4493, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4495)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{null, !2755, !835, !504}
!4495 = !{!4496, !4497, !4498}
!4496 = !DILocalVariable(name: "ptr", arg: 1, scope: !4492, file: !2752, line: 742, type: !2755)
!4497 = !DILocalVariable(name: "stmt", arg: 2, scope: !4492, file: !2752, line: 742, type: !835)
!4498 = !DILocalVariable(name: "flags", arg: 3, scope: !4492, file: !2752, line: 742, type: !504)
!4499 = !DILocation(line: 0, scope: !4492)
!4500 = !DILocation(line: 746, column: 3, scope: !4492)
!4501 = !DILocation(line: 748, column: 22, scope: !4492)
!4502 = !DILocation(line: 748, column: 15, scope: !4492)
!4503 = !DILocation(line: 748, column: 52, scope: !4492)
!4504 = !DILocation(line: 748, column: 8, scope: !4492)
!4505 = !DILocation(line: 748, column: 13, scope: !4492)
!4506 = !DILocation(line: 749, column: 15, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4492, file: !2752, line: 749, column: 7)
!4508 = !DILocation(line: 750, column: 7, scope: !4507)
!4509 = !DILocation(line: 750, column: 10, scope: !4507)
!4510 = !DILocation(line: 751, column: 7, scope: !4507)
!4511 = !DILocation(line: 751, column: 10, scope: !4507)
!4512 = !DILocation(line: 751, column: 29, scope: !4507)
!4513 = !DILocation(line: 749, column: 7, scope: !4492)
!4514 = !DILocation(line: 752, column: 22, scope: !4507)
!4515 = !DILocation(line: 752, column: 28, scope: !4507)
!4516 = !DILocation(line: 752, column: 15, scope: !4507)
!4517 = !DILocation(line: 752, column: 5, scope: !4507)
!4518 = !DILocation(line: 753, column: 22, scope: !4492)
!4519 = !DILocation(line: 753, column: 15, scope: !4492)
!4520 = !DILocation(line: 753, column: 52, scope: !4492)
!4521 = !DILocation(line: 753, column: 8, scope: !4492)
!4522 = !DILocation(line: 753, column: 13, scope: !4492)
!4523 = !DILocation(line: 754, column: 15, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4492, file: !2752, line: 754, column: 7)
!4525 = !DILocation(line: 755, column: 7, scope: !4524)
!4526 = !DILocation(line: 755, column: 10, scope: !4524)
!4527 = !DILocation(line: 756, column: 7, scope: !4524)
!4528 = !DILocation(line: 756, column: 10, scope: !4524)
!4529 = !DILocation(line: 756, column: 29, scope: !4524)
!4530 = !DILocation(line: 754, column: 7, scope: !4492)
!4531 = !DILocation(line: 757, column: 22, scope: !4524)
!4532 = !DILocation(line: 757, column: 28, scope: !4524)
!4533 = !DILocation(line: 757, column: 15, scope: !4524)
!4534 = !DILocation(line: 757, column: 5, scope: !4524)
!4535 = !DILocation(line: 758, column: 8, scope: !4492)
!4536 = !DILocation(line: 758, column: 13, scope: !4492)
!4537 = !DILocation(line: 760, column: 8, scope: !4492)
!4538 = !DILocation(line: 760, column: 14, scope: !4492)
!4539 = !DILocation(line: 761, column: 8, scope: !4492)
!4540 = !DILocation(line: 761, column: 16, scope: !4492)
!4541 = !DILocation(line: 762, column: 8, scope: !4492)
!4542 = !DILocation(line: 762, column: 17, scope: !4492)
!4543 = !DILocation(line: 763, column: 1, scope: !4492)
!4544 = distinct !DISubprogram(name: "gimple_def_ops", scope: !398, file: !398, line: 1292, type: !4545, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4547)
!4545 = !DISubroutineType(types: !4546)
!4546 = !{!864, !3292}
!4547 = !{!4548}
!4548 = !DILocalVariable(name: "g", arg: 1, scope: !4544, file: !398, line: 1292, type: !3292)
!4549 = !DILocation(line: 0, scope: !4544)
!4550 = !DILocation(line: 1294, column: 8, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4544, file: !398, line: 1294, column: 7)
!4552 = !DILocation(line: 1294, column: 7, scope: !4544)
!4553 = !DILocation(line: 1296, column: 26, scope: !4544)
!4554 = !DILocation(line: 1296, column: 3, scope: !4544)
!4555 = !DILocation(line: 1297, column: 1, scope: !4544)
!4556 = distinct !DISubprogram(name: "gimple_vdef", scope: !398, file: !398, line: 1375, type: !4557, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4559)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{!511, !3292}
!4559 = !{!4560}
!4560 = !DILocalVariable(name: "g", arg: 1, scope: !4556, file: !398, line: 1375, type: !3292)
!4561 = !DILocation(line: 0, scope: !4556)
!4562 = !DILocation(line: 1377, column: 8, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4556, file: !398, line: 1377, column: 7)
!4564 = !DILocation(line: 1377, column: 7, scope: !4556)
!4565 = !DILocation(line: 1379, column: 23, scope: !4556)
!4566 = !DILocation(line: 1379, column: 3, scope: !4556)
!4567 = !DILocation(line: 1380, column: 1, scope: !4556)
!4568 = distinct !DISubprogram(name: "gimple_use_ops", scope: !398, file: !398, line: 1313, type: !4569, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4571)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{!871, !3292}
!4571 = !{!4572}
!4572 = !DILocalVariable(name: "g", arg: 1, scope: !4568, file: !398, line: 1313, type: !3292)
!4573 = !DILocation(line: 0, scope: !4568)
!4574 = !DILocation(line: 1315, column: 8, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4568, file: !398, line: 1315, column: 7)
!4576 = !DILocation(line: 1315, column: 7, scope: !4568)
!4577 = !DILocation(line: 1317, column: 26, scope: !4568)
!4578 = !DILocation(line: 1317, column: 3, scope: !4568)
!4579 = !DILocation(line: 1318, column: 1, scope: !4568)
!4580 = distinct !DISubprogram(name: "gimple_vuse", scope: !398, file: !398, line: 1365, type: !4557, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4581)
!4581 = !{!4582}
!4582 = !DILocalVariable(name: "g", arg: 1, scope: !4580, file: !398, line: 1365, type: !3292)
!4583 = !DILocation(line: 0, scope: !4580)
!4584 = !DILocation(line: 1367, column: 8, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4580, file: !398, line: 1367, column: 7)
!4586 = !DILocation(line: 1367, column: 7, scope: !4580)
!4587 = !DILocation(line: 1369, column: 23, scope: !4580)
!4588 = !DILocation(line: 1369, column: 3, scope: !4580)
!4589 = !DILocation(line: 1370, column: 1, scope: !4580)
!4590 = distinct !DISubprogram(name: "gimple_has_ops", scope: !398, file: !398, line: 1274, type: !4591, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4593)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{!503, !3292}
!4593 = !{!4594}
!4594 = !DILocalVariable(name: "g", arg: 1, scope: !4590, file: !398, line: 1274, type: !3292)
!4595 = !DILocation(line: 0, scope: !4590)
!4596 = !DILocation(line: 1276, column: 10, scope: !4590)
!4597 = !DILocation(line: 1276, column: 26, scope: !4590)
!4598 = !DILocation(line: 1276, column: 41, scope: !4590)
!4599 = !DILocation(line: 1276, column: 44, scope: !4590)
!4600 = !DILocation(line: 1276, column: 60, scope: !4590)
!4601 = !DILocation(line: 1276, column: 3, scope: !4590)
!4602 = distinct !DISubprogram(name: "gimple_code", scope: !398, file: !398, line: 1052, type: !4603, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4605)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!397, !3292}
!4605 = !{!4606}
!4606 = !DILocalVariable(name: "g", arg: 1, scope: !4602, file: !398, line: 1052, type: !3292)
!4607 = !DILocation(line: 0, scope: !4602)
!4608 = !DILocation(line: 1054, column: 20, scope: !4602)
!4609 = !DILocation(line: 1054, column: 3, scope: !4602)
!4610 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !398, file: !398, line: 1283, type: !4591, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4611)
!4611 = !{!4612}
!4612 = !DILocalVariable(name: "g", arg: 1, scope: !4610, file: !398, line: 1283, type: !3292)
!4613 = !DILocation(line: 0, scope: !4610)
!4614 = !DILocation(line: 1285, column: 10, scope: !4610)
!4615 = !DILocation(line: 1285, column: 26, scope: !4610)
!4616 = !DILocation(line: 1285, column: 43, scope: !4610)
!4617 = !DILocation(line: 1285, column: 46, scope: !4610)
!4618 = !DILocation(line: 1285, column: 62, scope: !4610)
!4619 = !DILocation(line: 1285, column: 3, scope: !4610)
!4620 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !2752, file: !2752, line: 233, type: !4621, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{null, !1864, !511}
!4623 = !{!4624, !4625}
!4624 = !DILocalVariable(name: "use", arg: 1, scope: !4620, file: !2752, line: 233, type: !1864)
!4625 = !DILocalVariable(name: "val", arg: 2, scope: !4620, file: !2752, line: 233, type: !511)
!4626 = !DILocation(line: 0, scope: !4620)
!4627 = !DILocation(line: 235, column: 3, scope: !4620)
!4628 = !DILocation(line: 236, column: 10, scope: !4620)
!4629 = !DILocation(line: 236, column: 15, scope: !4620)
!4630 = !DILocation(line: 237, column: 3, scope: !4620)
!4631 = !DILocation(line: 238, column: 1, scope: !4620)
!4632 = distinct !DISubprogram(name: "delink_imm_use", scope: !2752, file: !2752, line: 188, type: !4633, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4635)
!4633 = !DISubroutineType(types: !4634)
!4634 = !{null, !1865}
!4635 = !{!4636}
!4636 = !DILocalVariable(name: "linknode", arg: 1, scope: !4632, file: !2752, line: 188, type: !1865)
!4637 = !DILocation(line: 0, scope: !4632)
!4638 = !DILocation(line: 191, column: 17, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4632, file: !2752, line: 191, column: 7)
!4640 = !DILocation(line: 191, column: 22, scope: !4639)
!4641 = !DILocation(line: 191, column: 7, scope: !4632)
!4642 = !DILocation(line: 194, column: 36, scope: !4632)
!4643 = !DILocation(line: 194, column: 19, scope: !4632)
!4644 = !DILocation(line: 194, column: 24, scope: !4632)
!4645 = !DILocation(line: 195, column: 36, scope: !4632)
!4646 = !DILocation(line: 195, column: 13, scope: !4632)
!4647 = !DILocation(line: 195, column: 24, scope: !4632)
!4648 = !DILocation(line: 196, column: 18, scope: !4632)
!4649 = !DILocation(line: 197, column: 18, scope: !4632)
!4650 = !DILocation(line: 198, column: 1, scope: !4632)
!4651 = distinct !DISubprogram(name: "link_imm_use", scope: !2752, file: !2752, line: 214, type: !4652, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4654)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{null, !1865, !511}
!4654 = !{!4655, !4656, !4657}
!4655 = !DILocalVariable(name: "linknode", arg: 1, scope: !4651, file: !2752, line: 214, type: !1865)
!4656 = !DILocalVariable(name: "def", arg: 2, scope: !4651, file: !2752, line: 214, type: !511)
!4657 = !DILocalVariable(name: "root", scope: !4651, file: !2752, line: 216, type: !1865)
!4658 = !DILocation(line: 0, scope: !4651)
!4659 = !DILocation(line: 218, column: 8, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4651, file: !2752, line: 218, column: 7)
!4661 = !DILocation(line: 218, column: 12, scope: !4660)
!4662 = !DILocation(line: 218, column: 15, scope: !4660)
!4663 = !DILocation(line: 218, column: 31, scope: !4660)
!4664 = !DILocation(line: 218, column: 7, scope: !4651)
!4665 = !DILocation(line: 219, column: 15, scope: !4660)
!4666 = !DILocation(line: 219, column: 20, scope: !4660)
!4667 = !DILocation(line: 219, column: 5, scope: !4660)
!4668 = !DILocation(line: 222, column: 16, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4660, file: !2752, line: 221, column: 5)
!4670 = !DILocation(line: 227, column: 7, scope: !4669)
!4671 = !DILocation(line: 229, column: 1, scope: !4651)
!4672 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !2752, file: !2752, line: 202, type: !4673, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4675)
!4673 = !DISubroutineType(types: !4674)
!4674 = !{null, !1865, !1865}
!4675 = !{!4676, !4677}
!4676 = !DILocalVariable(name: "linknode", arg: 1, scope: !4672, file: !2752, line: 202, type: !1865)
!4677 = !DILocalVariable(name: "list", arg: 2, scope: !4672, file: !2752, line: 202, type: !1865)
!4678 = !DILocation(line: 0, scope: !4672)
!4679 = !DILocation(line: 206, column: 13, scope: !4672)
!4680 = !DILocation(line: 206, column: 18, scope: !4672)
!4681 = !DILocation(line: 207, column: 26, scope: !4672)
!4682 = !DILocation(line: 207, column: 13, scope: !4672)
!4683 = !DILocation(line: 207, column: 18, scope: !4672)
!4684 = !DILocation(line: 208, column: 9, scope: !4672)
!4685 = !DILocation(line: 208, column: 15, scope: !4672)
!4686 = !DILocation(line: 208, column: 20, scope: !4672)
!4687 = !DILocation(line: 209, column: 14, scope: !4672)
!4688 = !DILocation(line: 210, column: 1, scope: !4672)
!4689 = distinct !DISubprogram(name: "ei_end_p", scope: !135, file: !135, line: 721, type: !4690, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4692)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!503, !2650}
!4692 = !{!4693}
!4693 = !DILocalVariable(name: "i", arg: 1, scope: !4689, file: !135, line: 721, type: !2650)
!4694 = !DILocation(line: 723, column: 22, scope: !4689)
!4695 = !DILocation(line: 723, column: 19, scope: !4689)
!4696 = !DILocation(line: 723, column: 10, scope: !4689)
!4697 = !DILocation(line: 723, column: 3, scope: !4689)
!4698 = distinct !DISubprogram(name: "ei_edge", scope: !135, file: !135, line: 752, type: !4699, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4701)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!815, !2650}
!4701 = !{!4702}
!4702 = !DILocalVariable(name: "i", arg: 1, scope: !4698, file: !135, line: 752, type: !2650)
!4703 = !DILocation(line: 754, column: 10, scope: !4698)
!4704 = !DILocation(line: 754, column: 3, scope: !4698)
!4705 = distinct !DISubprogram(name: "ei_container", scope: !135, file: !135, line: 685, type: !4706, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4708)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{!803, !2650}
!4708 = !{!4709}
!4709 = !DILocalVariable(name: "i", arg: 1, scope: !4705, file: !135, line: 685, type: !2650)
!4710 = !DILocation(line: 687, column: 3, scope: !4705)
!4711 = !DILocation(line: 688, column: 10, scope: !4705)
!4712 = !DILocation(line: 688, column: 3, scope: !4705)
!4713 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !398, file: !398, line: 3100, type: !4714, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4717)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!4716, !835, !7}
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!4717 = !{!4718, !4719}
!4718 = !DILocalVariable(name: "gs", arg: 1, scope: !4713, file: !398, line: 3100, type: !835)
!4719 = !DILocalVariable(name: "index", arg: 2, scope: !4713, file: !398, line: 3100, type: !7)
!4720 = !DILocation(line: 0, scope: !4713)
!4721 = !DILocation(line: 3103, column: 3, scope: !4713)
!4722 = !DILocation(line: 3104, column: 12, scope: !4713)
!4723 = !DILocation(line: 3104, column: 3, scope: !4713)
!4724 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !146, file: !146, line: 85, type: !4725, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4729)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{!7, !4727}
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!4729 = !{!4730}
!4730 = !DILocalVariable(name: "vec_", arg: 1, scope: !4724, file: !146, line: 85, type: !4727)
!4731 = !DILocation(line: 0, scope: !4724)
!4732 = !DILocation(line: 85, column: 1, scope: !4724)
!4733 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !146, file: !146, line: 85, type: !4734, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4736)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{!1077, !4727, !7}
!4736 = !{!4737, !4738}
!4737 = !DILocalVariable(name: "vec_", arg: 1, scope: !4733, file: !146, line: 85, type: !4727)
!4738 = !DILocalVariable(name: "ix_", arg: 2, scope: !4733, file: !146, line: 85, type: !7)
!4739 = !DILocation(line: 0, scope: !4733)
!4740 = !DILocation(line: 85, column: 1, scope: !4733)
!4741 = distinct !DISubprogram(name: "gimple_seq_last", scope: !398, file: !398, line: 178, type: !4481, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4742)
!4742 = !{!4743}
!4743 = !DILocalVariable(name: "s", arg: 1, scope: !4741, file: !398, line: 178, type: !4483)
!4744 = !DILocation(line: 0, scope: !4741)
!4745 = !DILocation(line: 180, column: 10, scope: !4741)
!4746 = !DILocation(line: 180, column: 17, scope: !4741)
!4747 = !DILocation(line: 180, column: 3, scope: !4741)
!4748 = distinct !DISubprogram(name: "gimple_uid", scope: !398, file: !398, line: 1265, type: !4749, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4751)
!4749 = !DISubroutineType(types: !4750)
!4750 = !{!7, !3292}
!4751 = !{!4752}
!4752 = !DILocalVariable(name: "g", arg: 1, scope: !4748, file: !398, line: 1265, type: !3292)
!4753 = !DILocation(line: 0, scope: !4748)
!4754 = !DILocation(line: 1267, column: 20, scope: !4748)
!4755 = !DILocation(line: 1267, column: 3, scope: !4748)
!4756 = distinct !DISubprogram(name: "VEC_vec_void_p_base_length", scope: !437, file: !437, line: 614, type: !4757, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4769)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!7, !4759}
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4761)
!4761 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vec_void_p_base", file: !437, line: 614, baseType: !4762)
!4762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vec_void_p_base", file: !437, line: 614, size: 128, elements: !4763)
!4763 = !{!4764, !4765, !4766}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4762, file: !437, line: 614, baseType: !7, size: 32)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4762, file: !437, line: 614, baseType: !7, size: 32, offset: 32)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4762, file: !437, line: 614, baseType: !4767, size: 64, offset: 64)
!4767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4768, size: 64, elements: !610)
!4768 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec_void_p", file: !437, line: 613, baseType: !508)
!4769 = !{!4770}
!4770 = !DILocalVariable(name: "vec_", arg: 1, scope: !4756, file: !437, line: 614, type: !4759)
!4771 = !DILocation(line: 0, scope: !4756)
!4772 = !DILocation(line: 614, column: 1, scope: !4756)
!4773 = distinct !DISubprogram(name: "VEC_vec_void_p_base_index", scope: !437, file: !437, line: 614, type: !4774, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4776)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{!4768, !4759, !7}
!4776 = !{!4777, !4778}
!4777 = !DILocalVariable(name: "vec_", arg: 1, scope: !4773, file: !437, line: 614, type: !4759)
!4778 = !DILocalVariable(name: "ix_", arg: 2, scope: !4773, file: !437, line: 614, type: !7)
!4779 = !DILocation(line: 0, scope: !4773)
!4780 = !DILocation(line: 614, column: 1, scope: !4773)
!4781 = distinct !DISubprogram(name: "block_before_loop", scope: !3431, file: !3431, line: 46, type: !4782, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4784)
!4782 = !DISubroutineType(types: !4783)
!4783 = !{!1287, !1077}
!4784 = !{!4785, !4786}
!4785 = !DILocalVariable(name: "loop", arg: 1, scope: !4781, file: !3431, line: 46, type: !1077)
!4786 = !DILocalVariable(name: "preheader", scope: !4781, file: !3431, line: 48, type: !815)
!4787 = !DILocation(line: 0, scope: !4781)
!4788 = !DILocation(line: 48, column: 20, scope: !4781)
!4789 = !DILocation(line: 49, column: 11, scope: !4781)
!4790 = !DILocation(line: 49, column: 34, scope: !4781)
!4791 = !DILocation(line: 49, column: 40, scope: !4781)
!4792 = !DILocation(line: 49, column: 3, scope: !4781)
!4793 = distinct !DISubprogram(name: "automatically_generated_chrec_p", scope: !3442, file: !3442, line: 37, type: !3443, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4794)
!4794 = !{!4795}
!4795 = !DILocalVariable(name: "chrec", arg: 1, scope: !4793, file: !3442, line: 37, type: !3445)
!4796 = !DILocation(line: 0, scope: !4793)
!4797 = !DILocation(line: 39, column: 20, scope: !4793)
!4798 = !DILocation(line: 39, column: 17, scope: !4793)
!4799 = !DILocation(line: 40, column: 4, scope: !4793)
!4800 = !DILocation(line: 39, column: 10, scope: !4793)
!4801 = !DILocation(line: 39, column: 3, scope: !4793)
!4802 = distinct !DISubprogram(name: "VEC_adjust_info_stack_alloc1", scope: !3, file: !3, line: 123, type: !4803, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4805)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{!2150, !504, !2150}
!4805 = !{!4806, !4807}
!4806 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4802, file: !3, line: 123, type: !504)
!4807 = !DILocalVariable(name: "space", arg: 2, scope: !4802, file: !3, line: 123, type: !2150)
!4808 = !DILocation(line: 0, scope: !4802)
!4809 = !DILocation(line: 123, column: 1, scope: !4802)
!4810 = distinct !DISubprogram(name: "VEC_adjust_info_base_embedded_size", scope: !3, file: !3, line: 122, type: !4811, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4813)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!980, !504}
!4813 = !{!4814}
!4814 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4810, file: !3, line: 122, type: !504)
!4815 = !DILocation(line: 0, scope: !4810)
!4816 = !DILocation(line: 122, column: 1, scope: !4810)
!4817 = distinct !DISubprogram(name: "slpeel_update_phis_for_duplicate_loop", scope: !3, file: !3, line: 250, type: !4818, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4820)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{null, !1050, !1050, !503}
!4820 = !{!4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835}
!4821 = !DILocalVariable(name: "orig_loop", arg: 1, scope: !4817, file: !3, line: 250, type: !1050)
!4822 = !DILocalVariable(name: "new_loop", arg: 2, scope: !4817, file: !3, line: 251, type: !1050)
!4823 = !DILocalVariable(name: "after", arg: 3, scope: !4817, file: !3, line: 251, type: !503)
!4824 = !DILocalVariable(name: "new_ssa_name", scope: !4817, file: !3, line: 253, type: !511)
!4825 = !DILocalVariable(name: "phi_new", scope: !4817, file: !3, line: 254, type: !835)
!4826 = !DILocalVariable(name: "phi_orig", scope: !4817, file: !3, line: 254, type: !835)
!4827 = !DILocalVariable(name: "def", scope: !4817, file: !3, line: 255, type: !511)
!4828 = !DILocalVariable(name: "orig_loop_latch", scope: !4817, file: !3, line: 256, type: !815)
!4829 = !DILocalVariable(name: "orig_entry_e", scope: !4817, file: !3, line: 257, type: !815)
!4830 = !DILocalVariable(name: "new_loop_exit_e", scope: !4817, file: !3, line: 258, type: !815)
!4831 = !DILocalVariable(name: "new_loop_entry_e", scope: !4817, file: !3, line: 259, type: !815)
!4832 = !DILocalVariable(name: "entry_arg_e", scope: !4817, file: !3, line: 260, type: !815)
!4833 = !DILocalVariable(name: "gsi_new", scope: !4817, file: !3, line: 261, type: !2627)
!4834 = !DILocalVariable(name: "gsi_orig", scope: !4817, file: !3, line: 261, type: !2627)
!4835 = !DILocalVariable(name: "locus", scope: !4836, file: !3, line: 297, type: !638)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 296, column: 5)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 292, column: 3)
!4838 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 292, column: 3)
!4839 = !DILocation(line: 0, scope: !4817)
!4840 = !DILocation(line: 256, column: 26, scope: !4817)
!4841 = !DILocation(line: 257, column: 23, scope: !4817)
!4842 = !DILocation(line: 258, column: 26, scope: !4817)
!4843 = !DILocation(line: 259, column: 27, scope: !4817)
!4844 = !DILocation(line: 260, column: 23, scope: !4817)
!4845 = !DILocation(line: 261, column: 3, scope: !4817)
!4846 = !DILocation(line: 292, column: 18, scope: !4838)
!4847 = !DILocation(line: 292, column: 44, scope: !4838)
!4848 = !DILocation(line: 293, column: 19, scope: !4838)
!4849 = !DILocation(line: 293, column: 46, scope: !4838)
!4850 = !DILocation(line: 0, scope: !4836)
!4851 = !DILocation(line: 0, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 329, column: 9)
!4853 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 328, column: 11)
!4854 = !DILocation(line: 292, column: 8, scope: !4838)
!4855 = !DILocation(line: 294, column: 9, scope: !4837)
!4856 = !DILocation(line: 294, column: 29, scope: !4837)
!4857 = !DILocation(line: 294, column: 33, scope: !4837)
!4858 = !DILocation(line: 294, column: 32, scope: !4837)
!4859 = !DILocation(line: 292, column: 3, scope: !4838)
!4860 = !DILocation(line: 298, column: 17, scope: !4836)
!4861 = !DILocation(line: 299, column: 18, scope: !4836)
!4862 = !DILocation(line: 302, column: 13, scope: !4836)
!4863 = !DILocation(line: 303, column: 15, scope: !4836)
!4864 = !DILocation(line: 304, column: 7, scope: !4836)
!4865 = !DILocation(line: 307, column: 13, scope: !4836)
!4866 = !DILocation(line: 308, column: 15, scope: !4836)
!4867 = !DILocation(line: 309, column: 11, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 309, column: 11)
!4869 = !DILocation(line: 309, column: 27, scope: !4868)
!4870 = !DILocation(line: 309, column: 11, scope: !4836)
!4871 = !DILocation(line: 312, column: 22, scope: !4836)
!4872 = !DILocation(line: 313, column: 12, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 313, column: 11)
!4874 = !DILocation(line: 313, column: 11, scope: !4836)
!4875 = !DILocation(line: 317, column: 19, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 314, column: 2)
!4877 = !DILocation(line: 318, column: 2, scope: !4876)
!4878 = !DILocation(line: 321, column: 43, scope: !4836)
!4879 = !DILocation(line: 321, column: 7, scope: !4836)
!4880 = !DILocation(line: 325, column: 38, scope: !4836)
!4881 = !DILocation(line: 325, column: 63, scope: !4836)
!4882 = !DILocation(line: 325, column: 7, scope: !4836)
!4883 = !DILocation(line: 330, column: 11, scope: !4852)
!4884 = !DILocation(line: 331, column: 4, scope: !4852)
!4885 = !DILocation(line: 332, column: 9, scope: !4852)
!4886 = !DILocation(line: 295, column: 8, scope: !4837)
!4887 = !DILocation(line: 295, column: 29, scope: !4837)
!4888 = !DILocation(line: 292, column: 3, scope: !4837)
!4889 = distinct !{!4889, !4859, !4890}
!4890 = !DILocation(line: 333, column: 5, scope: !4838)
!4891 = !DILocation(line: 334, column: 1, scope: !4817)
!4892 = !DILocation(line: 328, column: 11, scope: !4836)
!4893 = distinct !DISubprogram(name: "loop_vec_info_for_loop", scope: !437, file: !437, line: 291, type: !4894, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4896)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{!1874, !1050}
!4896 = !{!4897}
!4897 = !DILocalVariable(name: "loop", arg: 1, scope: !4893, file: !437, line: 291, type: !1050)
!4898 = !DILocation(line: 0, scope: !4893)
!4899 = !DILocation(line: 293, column: 32, scope: !4893)
!4900 = !DILocation(line: 293, column: 3, scope: !4893)
!4901 = distinct !DISubprogram(name: "set_prologue_iterations", scope: !3, file: !3, line: 1039, type: !4902, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4904)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{null, !1287, !511, !1050, !7}
!4904 = !{!4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4922, !4923}
!4905 = !DILocalVariable(name: "bb_before_first_loop", arg: 1, scope: !4901, file: !3, line: 1039, type: !1287)
!4906 = !DILocalVariable(name: "first_niters", arg: 2, scope: !4901, file: !3, line: 1040, type: !511)
!4907 = !DILocalVariable(name: "loop", arg: 3, scope: !4901, file: !3, line: 1041, type: !1050)
!4908 = !DILocalVariable(name: "th", arg: 4, scope: !4901, file: !3, line: 1042, type: !7)
!4909 = !DILocalVariable(name: "e", scope: !4901, file: !3, line: 1044, type: !815)
!4910 = !DILocalVariable(name: "cond_bb", scope: !4901, file: !3, line: 1045, type: !1287)
!4911 = !DILocalVariable(name: "then_bb", scope: !4901, file: !3, line: 1045, type: !1287)
!4912 = !DILocalVariable(name: "var", scope: !4901, file: !3, line: 1046, type: !511)
!4913 = !DILocalVariable(name: "prologue_after_cost_adjust_name", scope: !4901, file: !3, line: 1046, type: !511)
!4914 = !DILocalVariable(name: "gsi", scope: !4901, file: !3, line: 1047, type: !2627)
!4915 = !DILocalVariable(name: "newphi", scope: !4901, file: !3, line: 1048, type: !835)
!4916 = !DILocalVariable(name: "e_true", scope: !4901, file: !3, line: 1049, type: !815)
!4917 = !DILocalVariable(name: "e_false", scope: !4901, file: !3, line: 1049, type: !815)
!4918 = !DILocalVariable(name: "e_fallthru", scope: !4901, file: !3, line: 1049, type: !815)
!4919 = !DILocalVariable(name: "cond_stmt", scope: !4901, file: !3, line: 1050, type: !835)
!4920 = !DILocalVariable(name: "gimplify_stmt_list", scope: !4901, file: !3, line: 1051, type: !825)
!4921 = !DILocalVariable(name: "stmts", scope: !4901, file: !3, line: 1051, type: !825)
!4922 = !DILocalVariable(name: "cost_pre_condition", scope: !4901, file: !3, line: 1052, type: !511)
!4923 = !DILocalVariable(name: "scalar_loop_iters", scope: !4901, file: !3, line: 1053, type: !511)
!4924 = !DILocation(line: 0, scope: !4901)
!4925 = !DILocation(line: 1047, column: 3, scope: !4901)
!4926 = !DILocation(line: 1051, column: 3, scope: !4901)
!4927 = !DILocation(line: 1051, column: 14, scope: !4901)
!4928 = !DILocation(line: 1051, column: 41, scope: !4901)
!4929 = !DILocation(line: 1054, column: 19, scope: !4901)
!4930 = !DILocation(line: 1054, column: 5, scope: !4901)
!4931 = !DILocation(line: 1056, column: 7, scope: !4901)
!4932 = !DILocation(line: 1057, column: 13, scope: !4901)
!4933 = !DILocation(line: 1059, column: 7, scope: !4901)
!4934 = !DILocation(line: 1060, column: 13, scope: !4901)
!4935 = !DILocation(line: 1061, column: 3, scope: !4901)
!4936 = !DILocation(line: 1063, column: 13, scope: !4901)
!4937 = !DILocation(line: 1065, column: 3, scope: !4901)
!4938 = !DILocation(line: 1067, column: 12, scope: !4901)
!4939 = !DILocation(line: 1068, column: 11, scope: !4901)
!4940 = !DILocation(line: 1068, column: 17, scope: !4901)
!4941 = !DILocation(line: 1069, column: 17, scope: !4901)
!4942 = !DILocation(line: 1071, column: 16, scope: !4901)
!4943 = !DILocation(line: 1074, column: 5, scope: !4901)
!4944 = !DILocation(line: 1077, column: 5, scope: !4901)
!4945 = !DILocation(line: 1080, column: 21, scope: !4901)
!4946 = !DILocation(line: 1080, column: 6, scope: !4901)
!4947 = !DILocation(line: 1079, column: 15, scope: !4901)
!4948 = !DILocation(line: 1083, column: 9, scope: !4901)
!4949 = !DILocation(line: 1084, column: 7, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1084, column: 7)
!4951 = !DILocation(line: 1084, column: 7, scope: !4901)
!4952 = !DILocation(line: 1085, column: 5, scope: !4950)
!4953 = !DILocation(line: 1087, column: 9, scope: !4901)
!4954 = !DILocation(line: 1088, column: 3, scope: !4901)
!4955 = !DILocation(line: 1090, column: 25, scope: !4901)
!4956 = !DILocation(line: 1090, column: 9, scope: !4901)
!4957 = !DILocation(line: 1092, column: 3, scope: !4901)
!4958 = !DILocation(line: 1094, column: 5, scope: !4901)
!4959 = !DILocation(line: 1096, column: 9, scope: !4901)
!4960 = !DILocation(line: 1097, column: 7, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1097, column: 7)
!4962 = !DILocation(line: 1097, column: 7, scope: !4901)
!4963 = !DILocation(line: 1098, column: 5, scope: !4961)
!4964 = !DILocation(line: 1100, column: 12, scope: !4901)
!4965 = !DILocation(line: 1101, column: 3, scope: !4901)
!4966 = !DILocation(line: 1103, column: 3, scope: !4901)
!4967 = !DILocation(line: 1105, column: 18, scope: !4901)
!4968 = !DILocation(line: 1106, column: 1, scope: !4901)
!4969 = distinct !DISubprogram(name: "slpeel_add_loop_guard", scope: !3, file: !3, line: 932, type: !4970, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4972)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!815, !1287, !511, !825, !1287, !1287}
!4972 = !{!4973, !4974, !4975, !4976, !4977, !4978, !4979, !4980, !4981, !4982}
!4973 = !DILocalVariable(name: "guard_bb", arg: 1, scope: !4969, file: !3, line: 932, type: !1287)
!4974 = !DILocalVariable(name: "cond", arg: 2, scope: !4969, file: !3, line: 932, type: !511)
!4975 = !DILocalVariable(name: "cond_expr_stmt_list", arg: 3, scope: !4969, file: !3, line: 933, type: !825)
!4976 = !DILocalVariable(name: "exit_bb", arg: 4, scope: !4969, file: !3, line: 934, type: !1287)
!4977 = !DILocalVariable(name: "dom_bb", arg: 5, scope: !4969, file: !3, line: 934, type: !1287)
!4978 = !DILocalVariable(name: "gsi", scope: !4969, file: !3, line: 936, type: !2627)
!4979 = !DILocalVariable(name: "new_e", scope: !4969, file: !3, line: 937, type: !815)
!4980 = !DILocalVariable(name: "enter_e", scope: !4969, file: !3, line: 937, type: !815)
!4981 = !DILocalVariable(name: "cond_stmt", scope: !4969, file: !3, line: 938, type: !835)
!4982 = !DILocalVariable(name: "gimplify_stmt_list", scope: !4969, file: !3, line: 939, type: !825)
!4983 = !DILocation(line: 0, scope: !4969)
!4984 = !DILocation(line: 936, column: 3, scope: !4969)
!4985 = !DILocation(line: 939, column: 3, scope: !4969)
!4986 = !DILocation(line: 939, column: 14, scope: !4969)
!4987 = !DILocation(line: 941, column: 13, scope: !4969)
!4988 = !DILocation(line: 942, column: 12, scope: !4969)
!4989 = !DILocation(line: 942, column: 18, scope: !4969)
!4990 = !DILocation(line: 943, column: 18, scope: !4969)
!4991 = !DILocation(line: 944, column: 9, scope: !4969)
!4992 = !DILocation(line: 946, column: 10, scope: !4969)
!4993 = !DILocation(line: 947, column: 7, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 947, column: 7)
!4995 = !DILocation(line: 947, column: 7, scope: !4969)
!4996 = !DILocation(line: 948, column: 5, scope: !4994)
!4997 = !DILocation(line: 950, column: 27, scope: !4969)
!4998 = !DILocation(line: 950, column: 12, scope: !4969)
!4999 = !DILocation(line: 949, column: 15, scope: !4969)
!5000 = !DILocation(line: 952, column: 7, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 952, column: 7)
!5002 = !DILocation(line: 952, column: 7, scope: !4969)
!5003 = !DILocation(line: 953, column: 5, scope: !5001)
!5004 = !DILocation(line: 955, column: 9, scope: !4969)
!5005 = !DILocation(line: 956, column: 3, scope: !4969)
!5006 = !DILocation(line: 959, column: 11, scope: !4969)
!5007 = !DILocation(line: 960, column: 3, scope: !4969)
!5008 = !DILocation(line: 962, column: 1, scope: !4969)
!5009 = !DILocation(line: 961, column: 3, scope: !4969)
!5010 = distinct !DISubprogram(name: "slpeel_update_phi_nodes_for_guard1", scope: !3, file: !3, line: 491, type: !5011, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5014)
!5011 = !DISubroutineType(types: !5012)
!5012 = !{null, !815, !1050, !503, !1863, !5013}
!5013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!5014 = !{!5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5038}
!5015 = !DILocalVariable(name: "guard_edge", arg: 1, scope: !5010, file: !3, line: 491, type: !815)
!5016 = !DILocalVariable(name: "loop", arg: 2, scope: !5010, file: !3, line: 491, type: !1050)
!5017 = !DILocalVariable(name: "is_new_loop", arg: 3, scope: !5010, file: !3, line: 492, type: !503)
!5018 = !DILocalVariable(name: "new_exit_bb", arg: 4, scope: !5010, file: !3, line: 492, type: !1863)
!5019 = !DILocalVariable(name: "defs", arg: 5, scope: !5010, file: !3, line: 493, type: !5013)
!5020 = !DILocalVariable(name: "orig_phi", scope: !5010, file: !3, line: 495, type: !835)
!5021 = !DILocalVariable(name: "new_phi", scope: !5010, file: !3, line: 495, type: !835)
!5022 = !DILocalVariable(name: "update_phi", scope: !5010, file: !3, line: 496, type: !835)
!5023 = !DILocalVariable(name: "update_phi2", scope: !5010, file: !3, line: 496, type: !835)
!5024 = !DILocalVariable(name: "guard_arg", scope: !5010, file: !3, line: 497, type: !511)
!5025 = !DILocalVariable(name: "loop_arg", scope: !5010, file: !3, line: 497, type: !511)
!5026 = !DILocalVariable(name: "new_merge_bb", scope: !5010, file: !3, line: 498, type: !1287)
!5027 = !DILocalVariable(name: "e", scope: !5010, file: !3, line: 499, type: !815)
!5028 = !DILocalVariable(name: "update_bb", scope: !5010, file: !3, line: 500, type: !1287)
!5029 = !DILocalVariable(name: "orig_bb", scope: !5010, file: !3, line: 501, type: !1287)
!5030 = !DILocalVariable(name: "new_exit_e", scope: !5010, file: !3, line: 502, type: !815)
!5031 = !DILocalVariable(name: "current_new_name", scope: !5010, file: !3, line: 503, type: !511)
!5032 = !DILocalVariable(name: "gsi_orig", scope: !5010, file: !3, line: 504, type: !2627)
!5033 = !DILocalVariable(name: "gsi_update", scope: !5010, file: !3, line: 504, type: !2627)
!5034 = !DILocalVariable(name: "loop_locus", scope: !5035, file: !3, line: 516, type: !638)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 515, column: 5)
!5036 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 511, column: 3)
!5037 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 511, column: 3)
!5038 = !DILocalVariable(name: "guard_locus", scope: !5035, file: !3, line: 516, type: !638)
!5039 = !DILocation(line: 0, scope: !5010)
!5040 = !DILocation(line: 498, column: 42, scope: !5010)
!5041 = !DILocation(line: 499, column: 12, scope: !5010)
!5042 = !DILocation(line: 500, column: 30, scope: !5010)
!5043 = !DILocation(line: 501, column: 31, scope: !5010)
!5044 = !DILocation(line: 504, column: 3, scope: !5010)
!5045 = !DILocation(line: 507, column: 30, scope: !5010)
!5046 = !DILocation(line: 507, column: 18, scope: !5010)
!5047 = !DILocation(line: 507, column: 16, scope: !5010)
!5048 = !DILocation(line: 509, column: 16, scope: !5010)
!5049 = !DILocation(line: 511, column: 19, scope: !5037)
!5050 = !DILocation(line: 512, column: 21, scope: !5037)
!5051 = !DILocation(line: 0, scope: !5035)
!5052 = !DILocation(line: 0, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 574, column: 11)
!5054 = !DILocation(line: 511, column: 8, scope: !5037)
!5055 = !DILocation(line: 513, column: 9, scope: !5036)
!5056 = !DILocation(line: 513, column: 30, scope: !5036)
!5057 = !DILocation(line: 513, column: 34, scope: !5036)
!5058 = !DILocation(line: 513, column: 33, scope: !5036)
!5059 = !DILocation(line: 511, column: 3, scope: !5037)
!5060 = !DILocation(line: 517, column: 18, scope: !5035)
!5061 = !DILocation(line: 518, column: 20, scope: !5035)
!5062 = !DILocation(line: 523, column: 34, scope: !5035)
!5063 = !DILocation(line: 523, column: 17, scope: !5035)
!5064 = !DILocation(line: 528, column: 18, scope: !5035)
!5065 = !DILocation(line: 530, column: 13, scope: !5035)
!5066 = !DILocation(line: 529, column: 20, scope: !5035)
!5067 = !DILocation(line: 532, column: 19, scope: !5035)
!5068 = !DILocation(line: 535, column: 11, scope: !5035)
!5069 = !DILocation(line: 534, column: 4, scope: !5035)
!5070 = !DILocation(line: 537, column: 7, scope: !5035)
!5071 = !DILocation(line: 538, column: 7, scope: !5035)
!5072 = !DILocation(line: 541, column: 7, scope: !5035)
!5073 = !DILocation(line: 543, column: 50, scope: !5035)
!5074 = !DILocation(line: 543, column: 7, scope: !5035)
!5075 = !DILocation(line: 549, column: 27, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 549, column: 11)
!5077 = !DILocation(line: 549, column: 12, scope: !5076)
!5078 = !DILocation(line: 549, column: 11, scope: !5035)
!5079 = !DILocation(line: 553, column: 34, scope: !5035)
!5080 = !DILocation(line: 554, column: 34, scope: !5035)
!5081 = !DILocation(line: 553, column: 17, scope: !5035)
!5082 = !DILocation(line: 557, column: 39, scope: !5035)
!5083 = !DILocation(line: 557, column: 7, scope: !5035)
!5084 = !DILocation(line: 560, column: 7, scope: !5035)
!5085 = !DILocation(line: 562, column: 7, scope: !5035)
!5086 = !DILocation(line: 561, column: 7, scope: !5035)
!5087 = !DILocation(line: 574, column: 11, scope: !5035)
!5088 = !DILocation(line: 578, column: 30, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 577, column: 9)
!5090 = !DILocation(line: 583, column: 9, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 583, column: 8)
!5092 = !DILocation(line: 583, column: 8, scope: !5089)
!5093 = !DILocation(line: 586, column: 7, scope: !5035)
!5094 = !DILocation(line: 588, column: 42, scope: !5035)
!5095 = !DILocation(line: 588, column: 7, scope: !5035)
!5096 = !DILocation(line: 589, column: 23, scope: !5035)
!5097 = !DILocation(line: 589, column: 30, scope: !5035)
!5098 = !DILocation(line: 589, column: 7, scope: !5035)
!5099 = !DILocation(line: 590, column: 5, scope: !5036)
!5100 = !DILocation(line: 514, column: 8, scope: !5036)
!5101 = !DILocation(line: 514, column: 30, scope: !5036)
!5102 = !DILocation(line: 511, column: 3, scope: !5036)
!5103 = distinct !{!5103, !5059, !5104}
!5104 = !DILocation(line: 590, column: 5, scope: !5037)
!5105 = !DILocation(line: 591, column: 1, scope: !5010)
!5106 = distinct !DISubprogram(name: "slpeel_update_phi_nodes_for_guard2", scope: !3, file: !3, line: 621, type: !5107, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5109)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{null, !815, !1050, !503, !1863}
!5109 = !{!5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129}
!5110 = !DILocalVariable(name: "guard_edge", arg: 1, scope: !5106, file: !3, line: 621, type: !815)
!5111 = !DILocalVariable(name: "loop", arg: 2, scope: !5106, file: !3, line: 621, type: !1050)
!5112 = !DILocalVariable(name: "is_new_loop", arg: 3, scope: !5106, file: !3, line: 622, type: !503)
!5113 = !DILocalVariable(name: "new_exit_bb", arg: 4, scope: !5106, file: !3, line: 622, type: !1863)
!5114 = !DILocalVariable(name: "orig_phi", scope: !5106, file: !3, line: 624, type: !835)
!5115 = !DILocalVariable(name: "new_phi", scope: !5106, file: !3, line: 624, type: !835)
!5116 = !DILocalVariable(name: "update_phi", scope: !5106, file: !3, line: 625, type: !835)
!5117 = !DILocalVariable(name: "update_phi2", scope: !5106, file: !3, line: 625, type: !835)
!5118 = !DILocalVariable(name: "guard_arg", scope: !5106, file: !3, line: 626, type: !511)
!5119 = !DILocalVariable(name: "loop_arg", scope: !5106, file: !3, line: 626, type: !511)
!5120 = !DILocalVariable(name: "new_merge_bb", scope: !5106, file: !3, line: 627, type: !1287)
!5121 = !DILocalVariable(name: "e", scope: !5106, file: !3, line: 628, type: !815)
!5122 = !DILocalVariable(name: "update_bb", scope: !5106, file: !3, line: 629, type: !1287)
!5123 = !DILocalVariable(name: "new_exit_e", scope: !5106, file: !3, line: 630, type: !815)
!5124 = !DILocalVariable(name: "orig_def", scope: !5106, file: !3, line: 631, type: !511)
!5125 = !DILocalVariable(name: "orig_def_new_name", scope: !5106, file: !3, line: 631, type: !511)
!5126 = !DILocalVariable(name: "new_name", scope: !5106, file: !3, line: 632, type: !511)
!5127 = !DILocalVariable(name: "new_name2", scope: !5106, file: !3, line: 632, type: !511)
!5128 = !DILocalVariable(name: "arg", scope: !5106, file: !3, line: 633, type: !511)
!5129 = !DILocalVariable(name: "gsi", scope: !5106, file: !3, line: 634, type: !2627)
!5130 = !DILocation(line: 0, scope: !5106)
!5131 = !DILocation(line: 627, column: 42, scope: !5106)
!5132 = !DILocation(line: 628, column: 12, scope: !5106)
!5133 = !DILocation(line: 629, column: 30, scope: !5106)
!5134 = !DILocation(line: 634, column: 3, scope: !5106)
!5135 = !DILocation(line: 637, column: 30, scope: !5106)
!5136 = !DILocation(line: 637, column: 18, scope: !5106)
!5137 = !DILocation(line: 637, column: 16, scope: !5106)
!5138 = !DILocation(line: 639, column: 16, scope: !5106)
!5139 = !DILocation(line: 641, column: 14, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 641, column: 3)
!5141 = !DILocation(line: 0, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 642, column: 5)
!5143 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 641, column: 3)
!5144 = !DILocation(line: 0, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 673, column: 11)
!5146 = !DILocation(line: 641, column: 8, scope: !5140)
!5147 = !DILocation(line: 641, column: 43, scope: !5143)
!5148 = !DILocation(line: 641, column: 42, scope: !5143)
!5149 = !DILocation(line: 641, column: 3, scope: !5140)
!5150 = !DILocation(line: 643, column: 20, scope: !5142)
!5151 = !DILocation(line: 645, column: 18, scope: !5142)
!5152 = !DILocation(line: 648, column: 11, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 648, column: 11)
!5154 = !DILocation(line: 648, column: 32, scope: !5153)
!5155 = !DILocation(line: 648, column: 11, scope: !5142)
!5156 = !DILocation(line: 650, column: 27, scope: !5142)
!5157 = !DILocation(line: 656, column: 34, scope: !5142)
!5158 = !DILocation(line: 656, column: 17, scope: !5142)
!5159 = !DILocation(line: 663, column: 11, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 663, column: 11)
!5161 = !DILocation(line: 663, column: 11, scope: !5142)
!5162 = !DILocation(line: 670, column: 23, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 664, column: 9)
!5164 = !DILocation(line: 671, column: 9, scope: !5163)
!5165 = !DILocation(line: 683, column: 11, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 683, column: 11)
!5167 = !DILocation(line: 683, column: 11, scope: !5142)
!5168 = !DILocation(line: 686, column: 7, scope: !5142)
!5169 = !DILocation(line: 687, column: 7, scope: !5142)
!5170 = !DILocation(line: 690, column: 7, scope: !5142)
!5171 = !DILocation(line: 691, column: 50, scope: !5142)
!5172 = !DILocation(line: 691, column: 7, scope: !5142)
!5173 = !DILocation(line: 698, column: 34, scope: !5142)
!5174 = !DILocation(line: 699, column: 34, scope: !5142)
!5175 = !DILocation(line: 698, column: 17, scope: !5142)
!5176 = !DILocation(line: 702, column: 39, scope: !5142)
!5177 = !DILocation(line: 702, column: 7, scope: !5142)
!5178 = !DILocation(line: 705, column: 7, scope: !5142)
!5179 = !DILocation(line: 707, column: 7, scope: !5142)
!5180 = !DILocation(line: 706, column: 7, scope: !5142)
!5181 = !DILocation(line: 728, column: 21, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 728, column: 11)
!5183 = !DILocation(line: 728, column: 11, scope: !5142)
!5184 = !DILocation(line: 733, column: 34, scope: !5142)
!5185 = !DILocation(line: 734, column: 46, scope: !5142)
!5186 = !DILocation(line: 733, column: 17, scope: !5142)
!5187 = !DILocation(line: 737, column: 7, scope: !5142)
!5188 = !DILocation(line: 738, column: 34, scope: !5142)
!5189 = !DILocation(line: 738, column: 7, scope: !5142)
!5190 = !DILocation(line: 742, column: 7, scope: !5142)
!5191 = !DILocation(line: 745, column: 7, scope: !5142)
!5192 = !DILocation(line: 744, column: 7, scope: !5142)
!5193 = !DILocation(line: 746, column: 5, scope: !5142)
!5194 = !DILocation(line: 641, column: 60, scope: !5143)
!5195 = !DILocation(line: 641, column: 3, scope: !5143)
!5196 = distinct !{!5196, !5149, !5197}
!5197 = !DILocation(line: 746, column: 5, scope: !5140)
!5198 = !DILocation(line: 747, column: 1, scope: !5106)
!5199 = distinct !DISubprogram(name: "adjust_vec_debug_stmts", scope: !3, file: !3, line: 184, type: !5200, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2198)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{null}
!5202 = !DILocation(line: 186, column: 8, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 186, column: 7)
!5204 = !DILocation(line: 186, column: 7, scope: !5199)
!5205 = !DILocation(line: 189, column: 3, scope: !5199)
!5206 = !DILocation(line: 191, column: 3, scope: !5199)
!5207 = !DILocation(line: 191, column: 11, scope: !5199)
!5208 = !DILocation(line: 193, column: 31, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 192, column: 5)
!5210 = !DILocation(line: 193, column: 7, scope: !5209)
!5211 = !DILocation(line: 194, column: 7, scope: !5209)
!5212 = distinct !{!5212, !5206, !5213}
!5213 = !DILocation(line: 195, column: 5, scope: !5199)
!5214 = !DILocation(line: 197, column: 3, scope: !5199)
!5215 = !DILocation(line: 198, column: 1, scope: !5199)
!5216 = distinct !DISubprogram(name: "adjust_debug_stmts", scope: !3, file: !3, line: 206, type: !5217, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5219)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{null, !511, !511, !1287}
!5219 = !{!5220, !5221, !5222, !5223}
!5220 = !DILocalVariable(name: "from", arg: 1, scope: !5216, file: !3, line: 206, type: !511)
!5221 = !DILocalVariable(name: "to", arg: 2, scope: !5216, file: !3, line: 206, type: !511)
!5222 = !DILocalVariable(name: "bb", arg: 3, scope: !5216, file: !3, line: 206, type: !1287)
!5223 = !DILocalVariable(name: "ai", scope: !5216, file: !3, line: 208, type: !2162)
!5224 = !DILocation(line: 0, scope: !5216)
!5225 = !DILocation(line: 208, column: 3, scope: !5216)
!5226 = !DILocation(line: 210, column: 7, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 210, column: 7)
!5228 = !DILocation(line: 210, column: 28, scope: !5227)
!5229 = !DILocation(line: 210, column: 31, scope: !5227)
!5230 = !DILocation(line: 210, column: 48, scope: !5227)
!5231 = !DILocation(line: 211, column: 7, scope: !5227)
!5232 = !DILocation(line: 211, column: 10, scope: !5227)
!5233 = !DILocation(line: 211, column: 45, scope: !5227)
!5234 = !DILocation(line: 211, column: 33, scope: !5227)
!5235 = !DILocation(line: 211, column: 30, scope: !5227)
!5236 = !DILocation(line: 210, column: 7, scope: !5216)
!5237 = !DILocation(line: 213, column: 10, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 212, column: 5)
!5239 = !DILocation(line: 213, column: 15, scope: !5238)
!5240 = !DILocation(line: 214, column: 10, scope: !5238)
!5241 = !DILocation(line: 214, column: 13, scope: !5238)
!5242 = !DILocation(line: 215, column: 10, scope: !5238)
!5243 = !DILocation(line: 215, column: 13, scope: !5238)
!5244 = !DILocation(line: 217, column: 11, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 217, column: 11)
!5246 = !DILocation(line: 217, column: 11, scope: !5238)
!5247 = !DILocation(line: 218, column: 2, scope: !5245)
!5248 = !DILocation(line: 220, column: 2, scope: !5245)
!5249 = !DILocation(line: 222, column: 1, scope: !5216)
!5250 = distinct !DISubprogram(name: "gimple_vop", scope: !2752, file: !2752, line: 49, type: !5251, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5255)
!5251 = !DISubroutineType(types: !5252)
!5252 = !{!511, !5253}
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 64)
!5254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1276)
!5255 = !{!5256}
!5256 = !DILocalVariable(name: "fun", arg: 1, scope: !5250, file: !2752, line: 49, type: !5253)
!5257 = !DILocation(line: 0, scope: !5250)
!5258 = !DILocation(line: 51, column: 3, scope: !5250)
!5259 = !DILocation(line: 52, column: 15, scope: !5250)
!5260 = !DILocation(line: 52, column: 26, scope: !5250)
!5261 = !DILocation(line: 52, column: 3, scope: !5250)
!5262 = distinct !DISubprogram(name: "VEC_adjust_info_stack_safe_push", scope: !3, file: !3, line: 123, type: !5263, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5269)
!5263 = !DISubroutineType(types: !5264)
!5264 = !{!5265, !5266, !5267}
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!5266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!5267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5268, size: 64)
!5268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2162)
!5269 = !{!5270, !5271}
!5270 = !DILocalVariable(name: "vec_", arg: 1, scope: !5262, file: !3, line: 123, type: !5266)
!5271 = !DILocalVariable(name: "obj_", arg: 2, scope: !5262, file: !3, line: 123, type: !5267)
!5272 = !DILocation(line: 0, scope: !5262)
!5273 = !DILocation(line: 123, column: 1, scope: !5262)
!5274 = distinct !DISubprogram(name: "adjust_debug_stmts_now", scope: !3, file: !3, line: 139, type: !5275, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5277)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{null, !5265}
!5277 = !{!5278, !5279, !5280, !5281, !5282, !5290, !5291, !5292, !5296}
!5278 = !DILocalVariable(name: "ai", arg: 1, scope: !5274, file: !3, line: 139, type: !5265)
!5279 = !DILocalVariable(name: "bbphi", scope: !5274, file: !3, line: 141, type: !1287)
!5280 = !DILocalVariable(name: "orig_def", scope: !5274, file: !3, line: 142, type: !511)
!5281 = !DILocalVariable(name: "new_def", scope: !5274, file: !3, line: 143, type: !511)
!5282 = !DILocalVariable(name: "imm_iter", scope: !5274, file: !3, line: 144, type: !5283)
!5283 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1227, line: 249, baseType: !5284)
!5284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1227, line: 238, size: 448, elements: !5285)
!5285 = !{!5286, !5287, !5288, !5289}
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !5284, file: !1227, line: 241, baseType: !1865, size: 64)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !5284, file: !1227, line: 243, baseType: !1865, size: 64, offset: 64)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !5284, file: !1227, line: 245, baseType: !1866, size: 256, offset: 128)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !5284, file: !1227, line: 248, baseType: !1865, size: 64, offset: 384)
!5290 = !DILocalVariable(name: "stmt", scope: !5274, file: !3, line: 145, type: !835)
!5291 = !DILocalVariable(name: "bbdef", scope: !5274, file: !3, line: 146, type: !1287)
!5292 = !DILocalVariable(name: "use_p", scope: !5293, file: !3, line: 154, type: !1864)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 153, column: 5)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 152, column: 3)
!5295 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 152, column: 3)
!5296 = !DILocalVariable(name: "bbuse", scope: !5293, file: !3, line: 155, type: !1287)
!5297 = !DILocation(line: 0, scope: !5274)
!5298 = !DILocation(line: 141, column: 27, scope: !5274)
!5299 = !DILocation(line: 142, column: 23, scope: !5274)
!5300 = !DILocation(line: 143, column: 22, scope: !5274)
!5301 = !DILocation(line: 144, column: 3, scope: !5274)
!5302 = !DILocation(line: 146, column: 34, scope: !5274)
!5303 = !DILocation(line: 146, column: 23, scope: !5274)
!5304 = !DILocation(line: 148, column: 3, scope: !5274)
!5305 = !DILocation(line: 152, column: 3, scope: !5295)
!5306 = !DILocation(line: 0, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 169, column: 8)
!5308 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 168, column: 2)
!5309 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 164, column: 11)
!5310 = !DILocation(line: 0, scope: !5295)
!5311 = !DILocation(line: 152, column: 3, scope: !5294)
!5312 = !DILocation(line: 157, column: 12, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 157, column: 11)
!5314 = !DILocation(line: 157, column: 11, scope: !5293)
!5315 = !DILocation(line: 160, column: 7, scope: !5293)
!5316 = !DILocation(line: 162, column: 15, scope: !5293)
!5317 = !DILocation(line: 0, scope: !5293)
!5318 = !DILocation(line: 164, column: 18, scope: !5309)
!5319 = !DILocation(line: 165, column: 5, scope: !5309)
!5320 = !DILocation(line: 165, column: 8, scope: !5309)
!5321 = !DILocation(line: 166, column: 15, scope: !5309)
!5322 = !DILocation(line: 166, column: 4, scope: !5309)
!5323 = !DILocation(line: 167, column: 9, scope: !5309)
!5324 = !DILocation(line: 167, column: 12, scope: !5309)
!5325 = !DILocation(line: 164, column: 11, scope: !5293)
!5326 = !DILocation(line: 174, column: 8, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 173, column: 6)
!5328 = !DILocation(line: 175, column: 8, scope: !5327)
!5329 = distinct !{!5329, !5305, !5330}
!5330 = !DILocation(line: 178, column: 5, scope: !5295)
!5331 = !DILocation(line: 179, column: 1, scope: !5274)
!5332 = !DILocation(line: 170, column: 6, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 170, column: 6)
!5334 = !DILocation(line: 0, scope: !5333)
!5335 = !DILocation(line: 170, column: 6, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 170, column: 6)
!5337 = !DILocation(line: 171, column: 8, scope: !5336)
!5338 = distinct !{!5338, !5332, !5339}
!5339 = !DILocation(line: 171, column: 8, scope: !5333)
!5340 = distinct !DISubprogram(name: "VEC_adjust_info_stack_reserve", scope: !3, file: !3, line: 123, type: !5341, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5343)
!5341 = !DISubroutineType(types: !5342)
!5342 = !{!504, !5266, !504}
!5343 = !{!5344, !5345, !5346}
!5344 = !DILocalVariable(name: "vec_", arg: 1, scope: !5340, file: !3, line: 123, type: !5266)
!5345 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5340, file: !3, line: 123, type: !504)
!5346 = !DILocalVariable(name: "extend", scope: !5340, file: !3, line: 123, type: !504)
!5347 = !DILocation(line: 0, scope: !5340)
!5348 = !DILocation(line: 123, column: 1, scope: !5340)
!5349 = !DILocation(line: 123, column: 1, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 123, column: 1)
!5351 = distinct !DISubprogram(name: "VEC_adjust_info_base_quick_push", scope: !3, file: !3, line: 122, type: !5352, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5355)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!5265, !5354, !5267}
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!5355 = !{!5356, !5357, !5358}
!5356 = !DILocalVariable(name: "vec_", arg: 1, scope: !5351, file: !3, line: 122, type: !5354)
!5357 = !DILocalVariable(name: "obj_", arg: 2, scope: !5351, file: !3, line: 122, type: !5267)
!5358 = !DILocalVariable(name: "slot_", scope: !5351, file: !3, line: 122, type: !5265)
!5359 = !DILocation(line: 0, scope: !5351)
!5360 = !DILocation(line: 122, column: 1, scope: !5351)
!5361 = !DILocation(line: 122, column: 1, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 122, column: 1)
!5363 = distinct !DISubprogram(name: "VEC_adjust_info_base_space", scope: !3, file: !3, line: 122, type: !5364, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5366)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!504, !5354, !504}
!5366 = !{!5367, !5368}
!5367 = !DILocalVariable(name: "vec_", arg: 1, scope: !5363, file: !3, line: 122, type: !5354)
!5368 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5363, file: !3, line: 122, type: !504)
!5369 = !DILocation(line: 0, scope: !5363)
!5370 = !DILocation(line: 122, column: 1, scope: !5363)
!5371 = distinct !DISubprogram(name: "gimple_bb", scope: !398, file: !398, line: 1112, type: !5372, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5374)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!799, !3292}
!5374 = !{!5375}
!5375 = !DILocalVariable(name: "g", arg: 1, scope: !5371, file: !398, line: 1112, type: !3292)
!5376 = !DILocation(line: 0, scope: !5371)
!5377 = !DILocation(line: 1114, column: 20, scope: !5371)
!5378 = !DILocation(line: 1114, column: 3, scope: !5371)
!5379 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !2752, file: !2752, line: 1058, type: !5380, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5383)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{!835, !5382, !511}
!5382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5283, size: 64)
!5383 = !{!5384, !5385}
!5384 = !DILocalVariable(name: "imm", arg: 1, scope: !5379, file: !2752, line: 1058, type: !5382)
!5385 = !DILocalVariable(name: "var", arg: 2, scope: !5379, file: !2752, line: 1058, type: !511)
!5386 = !DILocation(line: 0, scope: !5379)
!5387 = !DILocation(line: 1060, column: 18, scope: !5379)
!5388 = !DILocation(line: 1060, column: 8, scope: !5379)
!5389 = !DILocation(line: 1060, column: 14, scope: !5379)
!5390 = !DILocation(line: 1061, column: 30, scope: !5379)
!5391 = !DILocation(line: 1061, column: 16, scope: !5379)
!5392 = !DILocation(line: 1062, column: 8, scope: !5379)
!5393 = !DILocation(line: 1062, column: 22, scope: !5379)
!5394 = !DILocation(line: 1067, column: 18, scope: !5379)
!5395 = !DILocation(line: 1067, column: 23, scope: !5379)
!5396 = !DILocation(line: 1068, column: 18, scope: !5379)
!5397 = !DILocation(line: 1068, column: 23, scope: !5379)
!5398 = !DILocation(line: 1069, column: 22, scope: !5379)
!5399 = !DILocation(line: 1069, column: 27, scope: !5379)
!5400 = !DILocation(line: 1070, column: 18, scope: !5379)
!5401 = !DILocation(line: 1070, column: 22, scope: !5379)
!5402 = !DILocation(line: 1072, column: 7, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5379, file: !2752, line: 1072, column: 7)
!5404 = !DILocation(line: 1072, column: 7, scope: !5379)
!5405 = !DILocation(line: 1075, column: 30, scope: !5379)
!5406 = !DILocation(line: 1075, column: 3, scope: !5379)
!5407 = !DILocation(line: 1077, column: 10, scope: !5379)
!5408 = !DILocation(line: 1077, column: 3, scope: !5379)
!5409 = !DILocation(line: 1078, column: 1, scope: !5379)
!5410 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !2752, file: !2752, line: 969, type: !5411, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5415)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{!503, !5413}
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5283)
!5415 = !{!5416}
!5416 = !DILocalVariable(name: "imm", arg: 1, scope: !5410, file: !2752, line: 969, type: !5413)
!5417 = !DILocation(line: 0, scope: !5410)
!5418 = !DILocation(line: 971, column: 16, scope: !5410)
!5419 = !DILocation(line: 971, column: 32, scope: !5410)
!5420 = !DILocation(line: 971, column: 24, scope: !5410)
!5421 = !DILocation(line: 971, column: 10, scope: !5410)
!5422 = !DILocation(line: 971, column: 3, scope: !5410)
!5423 = distinct !DISubprogram(name: "is_gimple_debug", scope: !398, file: !398, line: 3249, type: !4591, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5424)
!5424 = !{!5425}
!5425 = !DILocalVariable(name: "gs", arg: 1, scope: !5423, file: !398, line: 3249, type: !3292)
!5426 = !DILocation(line: 0, scope: !5423)
!5427 = !DILocation(line: 3251, column: 10, scope: !5423)
!5428 = !DILocation(line: 3251, column: 27, scope: !5423)
!5429 = !DILocation(line: 3251, column: 3, scope: !5423)
!5430 = distinct !DISubprogram(name: "gimple_debug_bind_p", scope: !398, file: !398, line: 3257, type: !4591, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5431)
!5431 = !{!5432}
!5432 = !DILocalVariable(name: "s", arg: 1, scope: !5430, file: !398, line: 3257, type: !3292)
!5433 = !DILocation(line: 0, scope: !5430)
!5434 = !DILocation(line: 3259, column: 7, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5430, file: !398, line: 3259, column: 7)
!5436 = !DILocation(line: 3259, column: 7, scope: !5430)
!5437 = !DILocation(line: 3260, column: 22, scope: !5435)
!5438 = !DILocation(line: 3260, column: 30, scope: !5435)
!5439 = !DILocation(line: 3260, column: 12, scope: !5435)
!5440 = !DILocation(line: 3260, column: 5, scope: !5435)
!5441 = !DILocation(line: 3263, column: 1, scope: !5430)
!5442 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !2752, file: !2752, line: 1101, type: !5443, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5445)
!5443 = !DISubroutineType(types: !5444)
!5444 = !{!1864, !5382}
!5445 = !{!5446}
!5446 = !DILocalVariable(name: "imm", arg: 1, scope: !5442, file: !2752, line: 1101, type: !5382)
!5447 = !DILocation(line: 0, scope: !5442)
!5448 = !DILocation(line: 1103, column: 29, scope: !5442)
!5449 = !DILocation(line: 1103, column: 38, scope: !5442)
!5450 = !DILocation(line: 1103, column: 8, scope: !5442)
!5451 = !DILocation(line: 1103, column: 22, scope: !5442)
!5452 = !DILocation(line: 1104, column: 3, scope: !5442)
!5453 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !2752, file: !2752, line: 1110, type: !5411, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5454)
!5454 = !{!5455}
!5455 = !DILocalVariable(name: "imm", arg: 1, scope: !5453, file: !2752, line: 1110, type: !5413)
!5456 = !DILocation(line: 0, scope: !5453)
!5457 = !DILocation(line: 1112, column: 16, scope: !5453)
!5458 = !DILocation(line: 1112, column: 34, scope: !5453)
!5459 = !DILocation(line: 1112, column: 24, scope: !5453)
!5460 = !DILocation(line: 1112, column: 10, scope: !5453)
!5461 = !DILocation(line: 1112, column: 3, scope: !5453)
!5462 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !2752, file: !2752, line: 1118, type: !5443, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5463)
!5463 = !{!5464}
!5464 = !DILocalVariable(name: "imm", arg: 1, scope: !5462, file: !2752, line: 1118, type: !5382)
!5465 = !DILocation(line: 0, scope: !5462)
!5466 = !DILocation(line: 1120, column: 23, scope: !5462)
!5467 = !DILocation(line: 1120, column: 16, scope: !5462)
!5468 = !DILocation(line: 1121, column: 7, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5462, file: !2752, line: 1121, column: 7)
!5470 = !DILocation(line: 1121, column: 7, scope: !5462)
!5471 = !DILocation(line: 1125, column: 33, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5469, file: !2752, line: 1124, column: 5)
!5473 = !DILocation(line: 1125, column: 42, scope: !5472)
!5474 = !DILocation(line: 1125, column: 26, scope: !5472)
!5475 = !DILocation(line: 1126, column: 7, scope: !5472)
!5476 = !DILocation(line: 0, scope: !5469)
!5477 = !DILocation(line: 1128, column: 1, scope: !5462)
!5478 = distinct !DISubprogram(name: "gimple_debug_bind_reset_value", scope: !398, file: !398, line: 3336, type: !5479, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5481)
!5479 = !DISubroutineType(types: !5480)
!5480 = !{null, !835}
!5481 = !{!5482}
!5482 = !DILocalVariable(name: "dbg", arg: 1, scope: !5478, file: !398, line: 3336, type: !835)
!5483 = !DILocation(line: 0, scope: !5478)
!5484 = !DILocation(line: 3342, column: 3, scope: !5478)
!5485 = !DILocation(line: 3343, column: 1, scope: !5478)
!5486 = distinct !DISubprogram(name: "update_stmt", scope: !398, file: !398, line: 1456, type: !5479, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5487)
!5487 = !{!5488}
!5488 = !DILocalVariable(name: "s", arg: 1, scope: !5486, file: !398, line: 1456, type: !835)
!5489 = !DILocation(line: 0, scope: !5486)
!5490 = !DILocation(line: 1458, column: 7, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5486, file: !398, line: 1458, column: 7)
!5492 = !DILocation(line: 1458, column: 7, scope: !5486)
!5493 = !DILocation(line: 1460, column: 7, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5491, file: !398, line: 1459, column: 5)
!5495 = !DILocation(line: 1461, column: 7, scope: !5494)
!5496 = !DILocation(line: 1462, column: 5, scope: !5494)
!5497 = !DILocation(line: 1463, column: 1, scope: !5486)
!5498 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !2752, file: !2752, line: 1083, type: !5499, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5501)
!5499 = !DISubroutineType(types: !5500)
!5500 = !{!835, !5382}
!5501 = !{!5502}
!5502 = !DILocalVariable(name: "imm", arg: 1, scope: !5498, file: !2752, line: 1083, type: !5382)
!5503 = !DILocation(line: 0, scope: !5498)
!5504 = !DILocation(line: 1085, column: 33, scope: !5498)
!5505 = !DILocation(line: 1085, column: 16, scope: !5498)
!5506 = !DILocation(line: 1086, column: 7, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5498, file: !2752, line: 1086, column: 7)
!5508 = !DILocation(line: 1086, column: 7, scope: !5498)
!5509 = !DILocation(line: 1088, column: 26, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !2752, line: 1088, column: 11)
!5511 = distinct !DILexicalBlock(scope: !5507, file: !2752, line: 1087, column: 5)
!5512 = !DILocation(line: 1088, column: 31, scope: !5510)
!5513 = !DILocation(line: 1088, column: 11, scope: !5511)
!5514 = !DILocation(line: 1089, column: 24, scope: !5510)
!5515 = !DILocation(line: 1089, column: 2, scope: !5510)
!5516 = !DILocation(line: 1093, column: 30, scope: !5498)
!5517 = !DILocation(line: 1093, column: 3, scope: !5498)
!5518 = !DILocation(line: 1094, column: 10, scope: !5498)
!5519 = !DILocation(line: 1094, column: 3, scope: !5498)
!5520 = !DILocation(line: 1095, column: 1, scope: !5498)
!5521 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !2752, file: !2752, line: 1018, type: !5522, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5524)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{null, !1864, !5382}
!5524 = !{!5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532}
!5525 = !DILocalVariable(name: "head", arg: 1, scope: !5521, file: !2752, line: 1018, type: !1864)
!5526 = !DILocalVariable(name: "imm", arg: 2, scope: !5521, file: !2752, line: 1018, type: !5382)
!5527 = !DILocalVariable(name: "use_p", scope: !5521, file: !2752, line: 1020, type: !1864)
!5528 = !DILocalVariable(name: "last_p", scope: !5521, file: !2752, line: 1021, type: !1864)
!5529 = !DILocalVariable(name: "head_stmt", scope: !5521, file: !2752, line: 1022, type: !835)
!5530 = !DILocalVariable(name: "use", scope: !5521, file: !2752, line: 1023, type: !511)
!5531 = !DILocalVariable(name: "op_iter", scope: !5521, file: !2752, line: 1024, type: !2636)
!5532 = !DILocalVariable(name: "flag", scope: !5521, file: !2752, line: 1025, type: !504)
!5533 = !DILocation(line: 0, scope: !5521)
!5534 = !DILocation(line: 1022, column: 22, scope: !5521)
!5535 = !DILocation(line: 1023, column: 14, scope: !5521)
!5536 = !DILocation(line: 1024, column: 3, scope: !5521)
!5537 = !DILocation(line: 1028, column: 11, scope: !5521)
!5538 = !DILocation(line: 1030, column: 7, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5521, file: !2752, line: 1030, column: 7)
!5540 = !DILocation(line: 1030, column: 31, scope: !5539)
!5541 = !DILocation(line: 1030, column: 7, scope: !5521)
!5542 = !DILocation(line: 1032, column: 7, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !2752, line: 1032, column: 7)
!5544 = distinct !DILexicalBlock(scope: !5539, file: !2752, line: 1031, column: 5)
!5545 = !DILocation(line: 0, scope: !5543)
!5546 = !DILocation(line: 1032, column: 7, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5543, file: !2752, line: 1032, column: 7)
!5548 = !DILocation(line: 1033, column: 6, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5547, file: !2752, line: 1033, column: 6)
!5550 = !DILocation(line: 1033, column: 27, scope: !5549)
!5551 = !DILocation(line: 1033, column: 6, scope: !5547)
!5552 = !DILocation(line: 1034, column: 13, scope: !5549)
!5553 = !DILocation(line: 1034, column: 4, scope: !5549)
!5554 = distinct !{!5554, !5542, !5555}
!5555 = !DILocation(line: 1034, column: 53, scope: !5543)
!5556 = !DILocation(line: 1038, column: 11, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5539, file: !2752, line: 1037, column: 5)
!5558 = !DILocation(line: 1040, column: 4, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !2752, line: 1040, column: 4)
!5560 = distinct !DILexicalBlock(scope: !5561, file: !2752, line: 1039, column: 2)
!5561 = distinct !DILexicalBlock(scope: !5557, file: !2752, line: 1038, column: 11)
!5562 = !DILocation(line: 0, scope: !5559)
!5563 = !DILocation(line: 1040, column: 4, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !2752, line: 1040, column: 4)
!5565 = !DILocation(line: 1041, column: 10, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5564, file: !2752, line: 1041, column: 10)
!5567 = !DILocation(line: 1041, column: 31, scope: !5566)
!5568 = !DILocation(line: 1041, column: 10, scope: !5564)
!5569 = !DILocation(line: 1042, column: 17, scope: !5566)
!5570 = !DILocation(line: 1042, column: 8, scope: !5566)
!5571 = distinct !{!5571, !5558, !5572}
!5572 = !DILocation(line: 1042, column: 57, scope: !5559)
!5573 = !DILocation(line: 1044, column: 25, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5561, file: !2752, line: 1044, column: 16)
!5575 = !DILocation(line: 1044, column: 53, scope: !5574)
!5576 = !DILocation(line: 1044, column: 16, scope: !5561)
!5577 = !DILocation(line: 1046, column: 8, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !2752, line: 1046, column: 8)
!5579 = distinct !DILexicalBlock(scope: !5574, file: !2752, line: 1045, column: 2)
!5580 = !DILocation(line: 1046, column: 29, scope: !5578)
!5581 = !DILocation(line: 1046, column: 8, scope: !5579)
!5582 = !DILocation(line: 1047, column: 15, scope: !5578)
!5583 = !DILocation(line: 1047, column: 6, scope: !5578)
!5584 = !DILocation(line: 1051, column: 22, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5521, file: !2752, line: 1051, column: 7)
!5586 = !DILocation(line: 1021, column: 17, scope: !5521)
!5587 = !DILocation(line: 1051, column: 27, scope: !5585)
!5588 = !DILocation(line: 1051, column: 7, scope: !5521)
!5589 = !DILocation(line: 1052, column: 27, scope: !5585)
!5590 = !DILocation(line: 1052, column: 5, scope: !5585)
!5591 = !DILocation(line: 1053, column: 32, scope: !5521)
!5592 = !DILocation(line: 1053, column: 3, scope: !5521)
!5593 = !DILocation(line: 1054, column: 1, scope: !5521)
!5594 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !2752, file: !2752, line: 910, type: !2753, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5595)
!5595 = !{!5596, !5597, !5598, !5599, !5600}
!5596 = !DILocalVariable(name: "ptr", arg: 1, scope: !5594, file: !2752, line: 910, type: !2755)
!5597 = !DILocalVariable(name: "phi", arg: 2, scope: !5594, file: !2752, line: 910, type: !835)
!5598 = !DILocalVariable(name: "flags", arg: 3, scope: !5594, file: !2752, line: 910, type: !504)
!5599 = !DILocalVariable(name: "phi_def", scope: !5594, file: !2752, line: 912, type: !511)
!5600 = !DILocalVariable(name: "comp", scope: !5594, file: !2752, line: 913, type: !504)
!5601 = !DILocation(line: 0, scope: !5594)
!5602 = !DILocation(line: 912, column: 18, scope: !5594)
!5603 = !DILocation(line: 915, column: 3, scope: !5594)
!5604 = !DILocation(line: 916, column: 8, scope: !5594)
!5605 = !DILocation(line: 916, column: 13, scope: !5594)
!5606 = !DILocation(line: 918, column: 3, scope: !5594)
!5607 = !DILocation(line: 920, column: 11, scope: !5594)
!5608 = !DILocation(line: 923, column: 14, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5594, file: !2752, line: 923, column: 7)
!5610 = !DILocation(line: 923, column: 22, scope: !5609)
!5611 = !DILocation(line: 923, column: 7, scope: !5594)
!5612 = !DILocation(line: 925, column: 17, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5609, file: !2752, line: 924, column: 5)
!5614 = !DILocation(line: 926, column: 7, scope: !5613)
!5615 = !DILocation(line: 929, column: 8, scope: !5594)
!5616 = !DILocation(line: 929, column: 17, scope: !5594)
!5617 = !DILocation(line: 930, column: 18, scope: !5594)
!5618 = !DILocation(line: 930, column: 8, scope: !5594)
!5619 = !DILocation(line: 930, column: 16, scope: !5594)
!5620 = !DILocation(line: 931, column: 8, scope: !5594)
!5621 = !DILocation(line: 931, column: 18, scope: !5594)
!5622 = !DILocation(line: 932, column: 10, scope: !5594)
!5623 = !DILocation(line: 932, column: 3, scope: !5594)
!5624 = !DILocation(line: 933, column: 1, scope: !5594)
!5625 = distinct !DISubprogram(name: "move_use_after_head", scope: !2752, file: !2752, line: 990, type: !5626, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5628)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{!1864, !1864, !1864, !1864}
!5628 = !{!5629, !5630, !5631}
!5629 = !DILocalVariable(name: "use_p", arg: 1, scope: !5625, file: !2752, line: 990, type: !1864)
!5630 = !DILocalVariable(name: "head", arg: 2, scope: !5625, file: !2752, line: 990, type: !1864)
!5631 = !DILocalVariable(name: "last_p", arg: 3, scope: !5625, file: !2752, line: 991, type: !1864)
!5632 = !DILocation(line: 0, scope: !5625)
!5633 = !DILocation(line: 997, column: 13, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5625, file: !2752, line: 997, column: 7)
!5635 = !DILocation(line: 997, column: 7, scope: !5625)
!5636 = !DILocation(line: 1000, column: 19, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !2752, line: 1000, column: 11)
!5638 = distinct !DILexicalBlock(scope: !5634, file: !2752, line: 998, column: 5)
!5639 = !DILocation(line: 1000, column: 24, scope: !5637)
!5640 = !DILocation(line: 1000, column: 11, scope: !5638)
!5641 = !DILocation(line: 1005, column: 4, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5637, file: !2752, line: 1003, column: 2)
!5643 = !DILocation(line: 1006, column: 4, scope: !5642)
!5644 = !DILocation(line: 1010, column: 3, scope: !5625)
!5645 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !398, file: !398, line: 1334, type: !5646, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5648)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!1864, !3292}
!5648 = !{!5649, !5650}
!5649 = !DILocalVariable(name: "g", arg: 1, scope: !5645, file: !398, line: 1334, type: !3292)
!5650 = !DILocalVariable(name: "ops", scope: !5645, file: !398, line: 1336, type: !871)
!5651 = !DILocation(line: 0, scope: !5645)
!5652 = !DILocation(line: 1337, column: 8, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5645, file: !398, line: 1337, column: 7)
!5654 = !DILocation(line: 1337, column: 7, scope: !5645)
!5655 = !DILocation(line: 1339, column: 25, scope: !5645)
!5656 = !DILocation(line: 1340, column: 7, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5645, file: !398, line: 1340, column: 7)
!5658 = !DILocation(line: 1341, column: 7, scope: !5657)
!5659 = !DILocation(line: 1341, column: 28, scope: !5657)
!5660 = !DILocation(line: 1341, column: 49, scope: !5657)
!5661 = !DILocation(line: 1341, column: 32, scope: !5657)
!5662 = !DILocation(line: 1342, column: 12, scope: !5657)
!5663 = !DILocation(line: 1340, column: 7, scope: !5645)
!5664 = !DILocation(line: 1344, column: 1, scope: !5645)
!5665 = distinct !DISubprogram(name: "gimple_phi_result", scope: !398, file: !398, line: 3071, type: !4557, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5666)
!5666 = !{!5667}
!5667 = !DILocalVariable(name: "gs", arg: 1, scope: !5665, file: !398, line: 3071, type: !3292)
!5668 = !DILocation(line: 0, scope: !5665)
!5669 = !DILocation(line: 3074, column: 25, scope: !5665)
!5670 = !DILocation(line: 3074, column: 3, scope: !5665)
!5671 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !2752, file: !2752, line: 729, type: !5672, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5674)
!5672 = !DISubroutineType(types: !5673)
!5673 = !{null, !2755}
!5674 = !{!5675}
!5675 = !DILocalVariable(name: "ptr", arg: 1, scope: !5671, file: !2752, line: 729, type: !2755)
!5676 = !DILocation(line: 0, scope: !5671)
!5677 = !DILocation(line: 731, column: 8, scope: !5671)
!5678 = !DILocation(line: 731, column: 13, scope: !5671)
!5679 = !DILocation(line: 732, column: 8, scope: !5671)
!5680 = !DILocation(line: 732, column: 13, scope: !5671)
!5681 = !DILocation(line: 733, column: 8, scope: !5671)
!5682 = !DILocation(line: 733, column: 18, scope: !5671)
!5683 = !DILocation(line: 734, column: 8, scope: !5671)
!5684 = !DILocation(line: 734, column: 14, scope: !5671)
!5685 = !DILocation(line: 735, column: 8, scope: !5671)
!5686 = !DILocation(line: 735, column: 16, scope: !5671)
!5687 = !DILocation(line: 736, column: 8, scope: !5671)
!5688 = !DILocation(line: 736, column: 17, scope: !5671)
!5689 = !DILocation(line: 737, column: 8, scope: !5671)
!5690 = !DILocation(line: 737, column: 13, scope: !5671)
!5691 = !DILocation(line: 738, column: 1, scope: !5671)
!5692 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !398, file: !398, line: 3061, type: !4749, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5693)
!5693 = !{!5694}
!5694 = !DILocalVariable(name: "gs", arg: 1, scope: !5692, file: !398, line: 3061, type: !3292)
!5695 = !DILocation(line: 0, scope: !5692)
!5696 = !DILocation(line: 3064, column: 25, scope: !5692)
!5697 = !DILocation(line: 3064, column: 3, scope: !5692)
!5698 = distinct !DISubprogram(name: "gimple_set_op", scope: !398, file: !398, line: 1663, type: !5699, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5701)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{null, !835, !7, !511}
!5701 = !{!5702, !5703, !5704}
!5702 = !DILocalVariable(name: "gs", arg: 1, scope: !5698, file: !398, line: 1663, type: !835)
!5703 = !DILocalVariable(name: "i", arg: 2, scope: !5698, file: !398, line: 1663, type: !7)
!5704 = !DILocalVariable(name: "op", arg: 3, scope: !5698, file: !398, line: 1663, type: !511)
!5705 = !DILocation(line: 0, scope: !5698)
!5706 = !DILocation(line: 1665, column: 3, scope: !5698)
!5707 = !DILocation(line: 1671, column: 3, scope: !5698)
!5708 = !DILocation(line: 1671, column: 22, scope: !5698)
!5709 = !DILocation(line: 1672, column: 1, scope: !5698)
!5710 = distinct !DISubprogram(name: "gimple_num_ops", scope: !398, file: !398, line: 1596, type: !4749, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5711)
!5711 = !{!5712}
!5712 = !DILocalVariable(name: "gs", arg: 1, scope: !5710, file: !398, line: 1596, type: !3292)
!5713 = !DILocation(line: 0, scope: !5710)
!5714 = !DILocation(line: 1598, column: 21, scope: !5710)
!5715 = !DILocation(line: 1598, column: 3, scope: !5710)
!5716 = distinct !DISubprogram(name: "gimple_ops", scope: !398, file: !398, line: 1614, type: !3407, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5717)
!5717 = !{!5718, !5719}
!5718 = !DILocalVariable(name: "gs", arg: 1, scope: !5716, file: !398, line: 1614, type: !835)
!5719 = !DILocalVariable(name: "off", scope: !5716, file: !398, line: 1616, type: !980)
!5720 = !DILocation(line: 0, scope: !5716)
!5721 = !DILocation(line: 1621, column: 28, scope: !5716)
!5722 = !DILocation(line: 1621, column: 9, scope: !5716)
!5723 = !DILocation(line: 1622, column: 3, scope: !5716)
!5724 = !DILocation(line: 1624, column: 20, scope: !5716)
!5725 = !DILocation(line: 1624, column: 32, scope: !5716)
!5726 = !DILocation(line: 1624, column: 10, scope: !5716)
!5727 = !DILocation(line: 1624, column: 3, scope: !5716)
!5728 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !398, file: !398, line: 1073, type: !5729, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5731)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{!475, !835}
!5731 = !{!5732}
!5732 = !DILocalVariable(name: "gs", arg: 1, scope: !5728, file: !398, line: 1073, type: !835)
!5733 = !DILocation(line: 0, scope: !5728)
!5734 = !DILocation(line: 1075, column: 24, scope: !5728)
!5735 = !DILocation(line: 1075, column: 10, scope: !5728)
!5736 = !DILocation(line: 1075, column: 3, scope: !5728)
!5737 = distinct !DISubprogram(name: "gss_for_code", scope: !398, file: !398, line: 1061, type: !5738, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5740)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{!475, !397}
!5740 = !{!5741}
!5741 = !DILocalVariable(name: "code", arg: 1, scope: !5737, file: !398, line: 1061, type: !397)
!5742 = !DILocation(line: 0, scope: !5737)
!5743 = !DILocation(line: 1066, column: 10, scope: !5737)
!5744 = !DILocation(line: 1066, column: 3, scope: !5737)
!5745 = distinct !DISubprogram(name: "single_pred_edge", scope: !135, file: !135, line: 653, type: !5746, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5748)
!5746 = !DISubroutineType(types: !5747)
!5747 = !{!815, !4466}
!5748 = !{!5749}
!5749 = !DILocalVariable(name: "bb", arg: 1, scope: !5745, file: !135, line: 653, type: !4466)
!5750 = !DILocation(line: 0, scope: !5745)
!5751 = !DILocation(line: 655, column: 3, scope: !5745)
!5752 = !DILocation(line: 656, column: 10, scope: !5745)
!5753 = !DILocation(line: 656, column: 3, scope: !5745)
!5754 = distinct !DISubprogram(name: "single_pred_p", scope: !135, file: !135, line: 634, type: !5755, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5757)
!5755 = !DISubroutineType(types: !5756)
!5756 = !{!503, !4466}
!5757 = !{!5758}
!5758 = !DILocalVariable(name: "bb", arg: 1, scope: !5754, file: !135, line: 634, type: !4466)
!5759 = !DILocation(line: 0, scope: !5754)
!5760 = !DILocation(line: 636, column: 10, scope: !5754)
!5761 = !DILocation(line: 636, column: 33, scope: !5754)
!5762 = !DILocation(line: 636, column: 3, scope: !5754)
!5763 = distinct !DISubprogram(name: "VEC_adjust_info_base_length", scope: !3, file: !3, line: 122, type: !5764, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5768)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!7, !5766}
!5766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5767, size: 64)
!5767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2155)
!5768 = !{!5769}
!5769 = !DILocalVariable(name: "vec_", arg: 1, scope: !5763, file: !3, line: 122, type: !5766)
!5770 = !DILocation(line: 0, scope: !5763)
!5771 = !DILocation(line: 122, column: 1, scope: !5763)
!5772 = distinct !DISubprogram(name: "VEC_adjust_info_base_last", scope: !3, file: !3, line: 122, type: !5773, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5775)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!5265, !5354}
!5775 = !{!5776}
!5776 = !DILocalVariable(name: "vec_", arg: 1, scope: !5772, file: !3, line: 122, type: !5354)
!5777 = !DILocation(line: 0, scope: !5772)
!5778 = !DILocation(line: 122, column: 1, scope: !5772)
!5779 = distinct !DISubprogram(name: "VEC_adjust_info_base_pop", scope: !3, file: !3, line: 122, type: !5780, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5782)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{null, !5354}
!5782 = !{!5783}
!5783 = !DILocalVariable(name: "vec_", arg: 1, scope: !5779, file: !3, line: 122, type: !5354)
!5784 = !DILocation(line: 0, scope: !5779)
!5785 = !DILocation(line: 122, column: 1, scope: !5779)
!5786 = distinct !DISubprogram(name: "VEC_adjust_info_stack_free", scope: !3, file: !3, line: 123, type: !5787, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5789)
!5787 = !DISubroutineType(types: !5788)
!5788 = !{null, !5266}
!5789 = !{!5790}
!5790 = !DILocalVariable(name: "vec_", arg: 1, scope: !5786, file: !3, line: 123, type: !5266)
!5791 = !DILocation(line: 0, scope: !5786)
!5792 = !DILocation(line: 123, column: 1, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 123, column: 1)
!5794 = !DILocation(line: 123, column: 1, scope: !5786)
!5795 = distinct !DISubprogram(name: "VEC_data_reference_p_base_iterate", scope: !1888, file: !1888, line: 208, type: !5796, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5801)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!504, !5798, !7, !5800}
!5798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5799, size: 64)
!5799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!5800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!5801 = !{!5802, !5803, !5804}
!5802 = !DILocalVariable(name: "vec_", arg: 1, scope: !5795, file: !1888, line: 208, type: !5798)
!5803 = !DILocalVariable(name: "ix_", arg: 2, scope: !5795, file: !1888, line: 208, type: !7)
!5804 = !DILocalVariable(name: "ptr", arg: 3, scope: !5795, file: !1888, line: 208, type: !5800)
!5805 = !DILocation(line: 0, scope: !5795)
!5806 = !DILocation(line: 208, column: 1, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5795, file: !1888, line: 208, column: 1)
!5808 = !DILocation(line: 208, column: 1, scope: !5795)
!5809 = !DILocation(line: 208, column: 1, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5807, file: !1888, line: 208, column: 1)
!5811 = !DILocation(line: 208, column: 1, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5807, file: !1888, line: 208, column: 1)
!5813 = !DILocation(line: 0, scope: !5807)
!5814 = distinct !DISubprogram(name: "vect_update_init_of_dr", scope: !3, file: !3, line: 2082, type: !5815, scopeLine: 2083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5817)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{null, !1886, !511}
!5817 = !{!5818, !5819, !5820}
!5818 = !DILocalVariable(name: "dr", arg: 1, scope: !5814, file: !3, line: 2082, type: !1886)
!5819 = !DILocalVariable(name: "niters", arg: 2, scope: !5814, file: !3, line: 2082, type: !511)
!5820 = !DILocalVariable(name: "offset", scope: !5814, file: !3, line: 2084, type: !511)
!5821 = !DILocation(line: 0, scope: !5814)
!5822 = !DILocation(line: 2084, column: 17, scope: !5814)
!5823 = !DILocation(line: 2086, column: 12, scope: !5814)
!5824 = !DILocation(line: 2089, column: 12, scope: !5814)
!5825 = !DILocation(line: 2091, column: 18, scope: !5814)
!5826 = !DILocation(line: 2092, column: 1, scope: !5814)
!5827 = distinct !DISubprogram(name: "VEC_gimple_base_iterate", scope: !398, file: !398, line: 33, type: !5828, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5831)
!5828 = !DISubroutineType(types: !5829)
!5829 = !{!504, !3599, !7, !5830}
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!5831 = !{!5832, !5833, !5834}
!5832 = !DILocalVariable(name: "vec_", arg: 1, scope: !5827, file: !398, line: 33, type: !3599)
!5833 = !DILocalVariable(name: "ix_", arg: 2, scope: !5827, file: !398, line: 33, type: !7)
!5834 = !DILocalVariable(name: "ptr", arg: 3, scope: !5827, file: !398, line: 33, type: !5830)
!5835 = !DILocation(line: 0, scope: !5827)
!5836 = !DILocation(line: 33, column: 1, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5827, file: !398, line: 33, column: 1)
!5838 = !DILocation(line: 33, column: 1, scope: !5827)
!5839 = !DILocation(line: 33, column: 1, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5837, file: !398, line: 33, column: 1)
!5841 = !DILocation(line: 33, column: 1, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5837, file: !398, line: 33, column: 1)
!5843 = !DILocation(line: 0, scope: !5837)
!5844 = distinct !DISubprogram(name: "make_ssa_name", scope: !2752, file: !2752, line: 1245, type: !5845, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5847)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{!511, !511, !835}
!5847 = !{!5848, !5849}
!5848 = !DILocalVariable(name: "var", arg: 1, scope: !5844, file: !2752, line: 1245, type: !511)
!5849 = !DILocalVariable(name: "stmt", arg: 2, scope: !5844, file: !2752, line: 1245, type: !835)
!5850 = !DILocation(line: 0, scope: !5844)
!5851 = !DILocation(line: 1247, column: 28, scope: !5844)
!5852 = !DILocation(line: 1247, column: 10, scope: !5844)
!5853 = !DILocation(line: 1247, column: 3, scope: !5844)
!5854 = distinct !DISubprogram(name: "VEC_ddr_p_base_iterate", scope: !1888, file: !1888, line: 332, type: !5855, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5858)
!5855 = !DISubroutineType(types: !5856)
!5856 = !{!504, !3608, !7, !5857}
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!5858 = !{!5859, !5860, !5861}
!5859 = !DILocalVariable(name: "vec_", arg: 1, scope: !5854, file: !1888, line: 332, type: !3608)
!5860 = !DILocalVariable(name: "ix_", arg: 2, scope: !5854, file: !1888, line: 332, type: !7)
!5861 = !DILocalVariable(name: "ptr", arg: 3, scope: !5854, file: !1888, line: 332, type: !5857)
!5862 = !DILocation(line: 0, scope: !5854)
!5863 = !DILocation(line: 332, column: 1, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5854, file: !1888, line: 332, column: 1)
!5865 = !DILocation(line: 332, column: 1, scope: !5854)
!5866 = !DILocation(line: 332, column: 1, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5864, file: !1888, line: 332, column: 1)
!5868 = !DILocation(line: 332, column: 1, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5864, file: !1888, line: 332, column: 1)
!5870 = !DILocation(line: 0, scope: !5864)
!5871 = distinct !DISubprogram(name: "vect_vfa_segment_size", scope: !3, file: !3, line: 2321, type: !5872, scopeLine: 2322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5874)
!5872 = !DISubroutineType(types: !5873)
!5873 = !{!511, !1886, !511}
!5874 = !{!5875, !5876, !5877, !5878}
!5875 = !DILocalVariable(name: "dr", arg: 1, scope: !5871, file: !3, line: 2321, type: !1886)
!5876 = !DILocalVariable(name: "vect_factor", arg: 2, scope: !5871, file: !3, line: 2321, type: !511)
!5877 = !DILocalVariable(name: "segment_length", scope: !5871, file: !3, line: 2323, type: !511)
!5878 = !DILocalVariable(name: "vector_size", scope: !5879, file: !3, line: 2328, type: !511)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 2327, column: 5)
!5880 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2326, column: 7)
!5881 = !DILocation(line: 0, scope: !5871)
!5882 = !DILocation(line: 2323, column: 25, scope: !5871)
!5883 = !DILocation(line: 2326, column: 7, scope: !5880)
!5884 = !DILocation(line: 2326, column: 42, scope: !5880)
!5885 = !DILocation(line: 2326, column: 7, scope: !5871)
!5886 = !DILocation(line: 2328, column: 26, scope: !5879)
!5887 = !DILocation(line: 0, scope: !5879)
!5888 = !DILocation(line: 2331, column: 24, scope: !5879)
!5889 = !DILocation(line: 2333, column: 5, scope: !5879)
!5890 = !DILocation(line: 2334, column: 10, scope: !5871)
!5891 = !DILocation(line: 2334, column: 3, scope: !5871)
