; ModuleID = 'tree-cfg.bc'
source_filename = "tree-cfg.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.label_record = type { %union.tree_node*, i8 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.cfg_stats_d = type { i64 }
%struct.cfg_hooks = type { i8*, i32 ()*, void (%struct.basic_block_def*, %struct._IO_FILE*, i32, i32)*, %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)*, %struct.edge_def* (%struct.edge_def*, %struct.basic_block_def*)*, %struct.basic_block_def* (%struct.edge_def*, %struct.basic_block_def*)*, i8 (%struct.edge_def*)*, void (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, i8*)*, i8 (%struct.basic_block_def*, %struct.basic_block_def*)*, i8 (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.edge_def*, i32, i32)*, i8 (%struct.basic_block_def*, i32)*, i8 (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.edge_def*)*, void (%struct.edge_def*)*, void (%struct.edge_def*)*, i8 (%struct.basic_block_def*)*, i8 (%struct.basic_block_def*)*, i32 (%struct.simple_bitmap_def*)*, void (%struct.edge_def*)*, void (%struct.edge_def*)*, i8 (%struct.loop*, %struct.edge_def*, i32, %struct.simple_bitmap_def*, %struct.edge_def*, %struct.VEC_edge_heap**, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, i8*)*, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def*)*, void (%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**)*, void (%struct.edge_def*)* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.omp_region = type { %struct.omp_region*, %struct.omp_region*, %struct.omp_region*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %union.tree_node*, i32, i32, i8 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.gimple_statement_asm = type { %struct.gimple_statement_with_memory_ops_base, i8*, i8, i8, i8, i8, [1 x %union.tree_node*] }
%struct.gimple_statement_with_memory_ops_base = type { %struct.gimple_statement_with_ops_base, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_with_ops_base = type { %struct.gimple_statement_base, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.tree_label_decl = type { %struct.tree_decl_with_rtl, i32, i32 }
%struct.eh_catch_d = type { %struct.eh_catch_d*, %struct.eh_catch_d*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.walk_stmt_info = type { %struct.gimple_stmt_iterator, i8*, %struct.pointer_set_t*, i8, i8, i8, i8, %union.tree_node* }
%struct.pointer_set_t = type opaque
%struct.throw_stmt_node = type { %union.gimple_statement_d*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.move_stmt_d = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.pointer_map_t*, %struct.htab*, %struct.pointer_map_t*, i8 }
%struct.tree_block = type { %struct.tree_common, i32, i32, %union.tree_node*, %struct.VEC_tree_gc*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.locus_discrim_map = type { i32, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.tree_map = type { %struct.tree_map_base, i32, %union.tree_node* }
%struct.tree_map_base = type { %union.tree_node* }
%struct._edge_var_map = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.VEC_edge_var_map_heap = type { %struct.VEC_edge_var_map_base }
%struct.VEC_edge_var_map_base = type { i32, i32, [1 x %struct._edge_var_map] }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str = private unnamed_addr constant [4 x i8] c"cfg\00", align 1
@pass_build_cfg = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8 ()* null, i32 ()* @execute_build_cfg, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 50, i32 4, i32 8, i32 0, i32 0, i32 49 } }, align 8, !dbg !0
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@edge_to_cases = internal unnamed_addr global %struct.pointer_map_t* null, align 8, !dbg !2497
@.str.1 = private unnamed_addr constant [11 x i8] c"tree-cfg.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@global_dc = external dso_local local_unnamed_addr global %struct.diagnostic_context*, align 8
@label_for_bb = internal unnamed_addr global %struct.label_record* null, align 8, !dbg !2504
@cfgcleanup_altered_bbs = external dso_local local_unnamed_addr global %struct.bitmap_head_def*, align 8
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c";; Function %s\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [54 x i8] c";; \0A%d basic blocks, %d edges, last basic block %d.\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@dump_cfg_stats.max_num_merged_labels = internal unnamed_addr global i64 0, align 8, !dbg !2274
@.str.6 = private unnamed_addr constant [16 x i8] c"%-30s%-13s%12s\0A\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"%-30s%13d%11lu%c\0A\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"%-30s%13ld%11lu%c\0A\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"%-43s%11lu%c\0A\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"\0ACFG Statistics for %s\0A\0A\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"---------------------------------------------------------\0A\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"  Number of  \00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"Memory\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"  instances  \00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"used \00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"Basic blocks\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"Edges\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"Total memory used by CFG data\00", align 1
@cfg_stats = internal global %struct.cfg_stats_d zeroinitializer, align 8, !dbg !2499
@.str.20 = private unnamed_addr constant [47 x i8] c"Coalesced label blocks: %ld (Max so far: %ld)\0A\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"verify_gimple failed\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@.str.22 = private unnamed_addr constant [46 x i8] c"gimple_bb (phi) is set to a wrong basic block\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"missing PHI def\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"PHI argument is not a GIMPLE value\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"incorrect sharing of tree nodes\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"invalid GIMPLE statement\00", align 1
@.str.27 = private unnamed_addr constant [47 x i8] c"gimple_bb (stmt) is set to a wrong basic block\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"incorrect entry in label_to_block_map\00", align 1
@.str.29 = private unnamed_addr constant [40 x i8] c"incorrect setting of landing pad number\00", align 1
@eh_error_found = internal unnamed_addr global i1 false, align 1, !dbg !2512
@.str.30 = private unnamed_addr constant [20 x i8] c"verify_stmts failed\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"%s (\00", align 1
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.32 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"%s  bb_%d (preds = {\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"}, succs = {\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"})\0A\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"%s  {\0A\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"%s  }\0A\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"gimple\00", align 1
@gimple_cfg_hooks = dso_local local_unnamed_addr global %struct.cfg_hooks { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i32 ()* @gimple_verify_flow_info, void (%struct.basic_block_def*, %struct._IO_FILE*, i32, i32)* @gimple_dump_bb, %struct.basic_block_def* (i8*, i8*, %struct.basic_block_def*)* @create_bb, %struct.edge_def* (%struct.edge_def*, %struct.basic_block_def*)* @gimple_redirect_edge_and_branch, %struct.basic_block_def* (%struct.edge_def*, %struct.basic_block_def*)* @gimple_redirect_edge_and_branch_force, i8 (%struct.edge_def*)* @gimple_can_remove_branch_p, void (%struct.basic_block_def*)* @remove_bb, %struct.basic_block_def* (%struct.basic_block_def*, i8*)* @gimple_split_block, i8 (%struct.basic_block_def*, %struct.basic_block_def*)* @gimple_move_block_after, i8 (%struct.basic_block_def*, %struct.basic_block_def*)* @gimple_can_merge_blocks_p, void (%struct.basic_block_def*, %struct.basic_block_def*)* @gimple_merge_blocks, void (%struct.edge_def*, i32, i32)* @gimple_predict_edge, i8 (%struct.basic_block_def*, i32)* @gimple_predicted_by_p, i8 (%struct.basic_block_def*)* @gimple_can_duplicate_bb_p, %struct.basic_block_def* (%struct.basic_block_def*)* @gimple_duplicate_bb, %struct.basic_block_def* (%struct.edge_def*)* @gimple_split_edge, void (%struct.edge_def*)* @gimple_make_forwarder_block, void (%struct.edge_def*)* null, i8 (%struct.basic_block_def*)* @gimple_block_ends_with_call_p, i8 (%struct.basic_block_def*)* @gimple_block_ends_with_condjump_p, i32 (%struct.simple_bitmap_def*)* @gimple_flow_call_edges_add, void (%struct.edge_def*)* @gimple_execute_on_growing_pred, void (%struct.edge_def*)* @gimple_execute_on_shrinking_pred, i8 (%struct.loop*, %struct.edge_def*, i32, %struct.simple_bitmap_def*, %struct.edge_def*, %struct.VEC_edge_heap**, i32)* @gimple_duplicate_loop_to_header_edge, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, i8*)* @gimple_lv_add_condition_to_bb, void (%struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def*)* @gimple_lv_adjust_loop_header_phi, void (%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**)* @extract_true_false_edges_from_block, void (%struct.edge_def*)* @flush_pending_stmts }, align 8, !dbg !2342
@.str.44 = private unnamed_addr constant [7 x i8] c"crited\00", align 1
@pass_split_crit_edges = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i8 ()* null, i32 ()* @split_critical_edges, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 67, i32 8, i32 64, i32 0, i32 0, i32 9 } }, align 8, !dbg !2463
@.str.45 = private unnamed_addr constant [22 x i8] c"*warn_function_return\00", align 1
@pass_warn_function_return = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i32 0, i32 0), i8 ()* null, i32 ()* @execute_warn_function_return, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0 } }, align 8, !dbg !2491
@.str.46 = private unnamed_addr constant [24 x i8] c"*warn_function_noreturn\00", align 1
@pass_warn_function_noreturn = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i32 0, i32 0), i8 ()* null, i32 ()* @execute_warn_function_noreturn, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0 } }, align 8, !dbg !2493
@.str.47 = private unnamed_addr constant [20 x i8] c"*warn_unused_result\00", align 1
@pass_warn_unused_result = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i32 0, i32 0), i8 ()* @gate_warn_unused_result, i32 ()* @run_warn_unused_result, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0 } }, align 8, !dbg !2495
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.48 = private unnamed_addr constant [15 x i8] c"Scope blocks:\0A\00", align 1
@found_computed_goto = internal unnamed_addr global i1 false, align 1, !dbg !2513
@discriminator_per_locus = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2510
@.str.49 = private unnamed_addr constant [8 x i8] c"gotovar\00", align 1
@root_omp_region = external dso_local local_unnamed_addr global %struct.omp_region*, align 8
@.str.50 = private unnamed_addr constant [22 x i8] c"graph: { title: \22%s\22\0A\00", align 1
@.str.51 = private unnamed_addr constant [41 x i8] c"node: { title: \22ENTRY\22 label: \22ENTRY\22 }\0A\00", align 1
@.str.52 = private unnamed_addr constant [39 x i8] c"node: { title: \22EXIT\22 label: \22EXIT\22 }\0A\00", align 1
@.str.53 = private unnamed_addr constant [45 x i8] c"edge: { sourcename: \22ENTRY\22 targetname: \22%d\22\00", align 1
@.str.54 = private unnamed_addr constant [32 x i8] c" linestyle: dotted priority: 10\00", align 1
@.str.55 = private unnamed_addr constant [32 x i8] c" linestyle: solid priority: 100\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c" }\0A\00", align 1
@gimple_code_name = external dso_local local_unnamed_addr constant [0 x i8*], align 8
@.str.57 = private unnamed_addr constant [13 x i8] c"no-statement\00", align 1
@.str.58 = private unnamed_addr constant [53 x i8] c"node: { title: \22%d\22 label: \22#%d\5Cn%s (%d)\5Cn%s (%d)\22}\0A\00", align 1
@.str.59 = private unnamed_addr constant [44 x i8] c"edge: { sourcename: \22%d\22 targetname: \22EXIT\22\00", align 1
@.str.60 = private unnamed_addr constant [42 x i8] c"edge: { sourcename: \22%d\22 targetname: \22%d\22\00", align 1
@.str.61 = private unnamed_addr constant [32 x i8] c" priority: 10 linestyle: dotted\00", align 1
@.str.62 = private unnamed_addr constant [32 x i8] c" priority: 100 linestyle: solid\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.65 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.66 = private unnamed_addr constant [39 x i8] c"invalid comparison code in gimple cond\00", align 1
@.str.67 = private unnamed_addr constant [30 x i8] c"invalid labels in gimple cond\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.68 = private unnamed_addr constant [37 x i8] c"non-trivial conversion at assignment\00", align 1
@.str.69 = private unnamed_addr constant [36 x i8] c"invalid operand in unary expression\00", align 1
@.str.70 = private unnamed_addr constant [36 x i8] c"type mismatch in address expression\00", align 1
@.str.71 = private unnamed_addr constant [36 x i8] c"invalid rhs for gimple memory store\00", align 1
@.str.72 = private unnamed_addr constant [36 x i8] c"invalid operands to array reference\00", align 1
@.str.73 = private unnamed_addr constant [33 x i8] c"type mismatch in array reference\00", align 1
@.str.74 = private unnamed_addr constant [39 x i8] c"type mismatch in array range reference\00", align 1
@.str.75 = private unnamed_addr constant [41 x i8] c"type mismatch in real/imagpart reference\00", align 1
@.str.76 = private unnamed_addr constant [37 x i8] c"type mismatch in component reference\00", align 1
@.str.77 = private unnamed_addr constant [49 x i8] c"Conversion of an SSA_NAME on the left hand side.\00", align 1
@.str.78 = private unnamed_addr constant [34 x i8] c"invalid expression for min lvalue\00", align 1
@.str.79 = private unnamed_addr constant [38 x i8] c"invalid operand in indirect reference\00", align 1
@.str.80 = private unnamed_addr constant [36 x i8] c"type mismatch in indirect reference\00", align 1
@optimize = external dso_local local_unnamed_addr global i32, align 4
@.str.81 = private unnamed_addr constant [39 x i8] c"non-register as LHS of unary operation\00", align 1
@.str.82 = private unnamed_addr constant [35 x i8] c"invalid operand in unary operation\00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.83 = private unnamed_addr constant [32 x i8] c"invalid types in nop conversion\00", align 1
@.str.84 = private unnamed_addr constant [42 x i8] c"invalid types in address space conversion\00", align 1
@.str.85 = private unnamed_addr constant [40 x i8] c"invalid types in fixed-point conversion\00", align 1
@.str.86 = private unnamed_addr constant [46 x i8] c"invalid types in conversion to floating point\00", align 1
@.str.87 = private unnamed_addr constant [39 x i8] c"invalid types in conversion to integer\00", align 1
@.str.88 = private unnamed_addr constant [42 x i8] c"non-trivial conversion in unary operation\00", align 1
@.str.89 = private unnamed_addr constant [40 x i8] c"non-register as LHS of binary operation\00", align 1
@.str.90 = private unnamed_addr constant [37 x i8] c"invalid operands in binary operation\00", align 1
@.str.91 = private unnamed_addr constant [36 x i8] c"type mismatch in complex expression\00", align 1
@.str.92 = private unnamed_addr constant [34 x i8] c"type mismatch in shift expression\00", align 1
@.str.93 = private unnamed_addr constant [41 x i8] c"type mismatch in vector shift expression\00", align 1
@.str.94 = private unnamed_addr constant [56 x i8] c"non-element sized vector shift of floating point vector\00", align 1
@.str.95 = private unnamed_addr constant [50 x i8] c"invalid non-vector operands to vector valued plus\00", align 1
@.str.96 = private unnamed_addr constant [41 x i8] c"invalid (pointer) operands to plus/minus\00", align 1
@.str.97 = private unnamed_addr constant [41 x i8] c"type mismatch in pointer plus expression\00", align 1
@.str.98 = private unnamed_addr constant [41 x i8] c"type mismatch in binary truth expression\00", align 1
@.str.99 = private unnamed_addr constant [35 x i8] c"type mismatch in binary expression\00", align 1
@.str.100 = private unnamed_addr constant [32 x i8] c"invalid function in gimple call\00", align 1
@.str.101 = private unnamed_addr constant [28 x i8] c"non-function in gimple call\00", align 1
@.str.102 = private unnamed_addr constant [27 x i8] c"invalid LHS in gimple call\00", align 1
@.str.103 = private unnamed_addr constant [21 x i8] c"LHS in noreturn call\00", align 1
@.str.104 = private unnamed_addr constant [34 x i8] c"invalid conversion in gimple call\00", align 1
@.str.105 = private unnamed_addr constant [36 x i8] c"invalid static chain in gimple call\00", align 1
@.str.106 = private unnamed_addr constant [37 x i8] c"static chain in indirect gimple call\00", align 1
@.str.107 = private unnamed_addr constant [48 x i8] c"static chain with function that doesn't use one\00", align 1
@.str.108 = private unnamed_addr constant [32 x i8] c"invalid argument to gimple call\00", align 1
@.str.109 = private unnamed_addr constant [38 x i8] c"invalid operands in gimple comparison\00", align 1
@.str.110 = private unnamed_addr constant [39 x i8] c"type mismatch in comparison expression\00", align 1
@.str.111 = private unnamed_addr constant [50 x i8] c"goto destination is neither a label nor a pointer\00", align 1
@.str.112 = private unnamed_addr constant [36 x i8] c"invalid operand to switch statement\00", align 1
@.str.113 = private unnamed_addr constant [36 x i8] c"invalid operand in return statement\00", align 1
@.str.114 = private unnamed_addr constant [39 x i8] c"invalid conversion in return statement\00", align 1
@.str.115 = private unnamed_addr constant [19 x i8] c"Invalid PHI result\00", align 1
@.str.116 = private unnamed_addr constant [21 x i8] c"Invalid PHI argument\00", align 1
@.str.117 = private unnamed_addr constant [38 x i8] c"Incompatible types in PHI argument %u\00", align 1
@.str.118 = private unnamed_addr constant [35 x i8] c"invalid function in call statement\00", align 1
@.str.119 = private unnamed_addr constant [38 x i8] c"invalid pure const state for function\00", align 1
@.str.120 = private unnamed_addr constant [13 x i8] c"in statement\00", align 1
@cgraph_state = external dso_local local_unnamed_addr global i32, align 4
@.str.121 = private unnamed_addr constant [41 x i8] c"statement marked for throw, but doesn%'t\00", align 1
@.str.122 = private unnamed_addr constant [46 x i8] c"statement marked for throw in middle of block\00", align 1
@.str.123 = private unnamed_addr constant [42 x i8] c"SSA name in freelist but still referenced\00", align 1
@.str.124 = private unnamed_addr constant [62 x i8] c"Indirect reference's operand is not a register or a constant.\00", align 1
@.str.125 = private unnamed_addr constant [43 x i8] c"ASSERT_EXPR with an always-false condition\00", align 1
@.str.126 = private unnamed_addr constant [46 x i8] c"MODIFY_EXPR not expected while having tuples.\00", align 1
@.str.127 = private unnamed_addr constant [47 x i8] c"constant not recomputed when ADDR_EXPR changed\00", align 1
@.str.128 = private unnamed_addr constant [51 x i8] c"side effects not recomputed when ADDR_EXPR changed\00", align 1
@.str.129 = private unnamed_addr constant [43 x i8] c"address taken, but ADDRESSABLE bit not set\00", align 1
@.str.130 = private unnamed_addr constant [55 x i8] c"DECL_GIMPLE_REG_P set on a variable with address taken\00", align 1
@.str.131 = private unnamed_addr constant [31 x i8] c"non-integral used in condition\00", align 1
@.str.132 = private unnamed_addr constant [28 x i8] c"invalid conditional operand\00", align 1
@.str.133 = private unnamed_addr constant [34 x i8] c"invalid operand to unary operator\00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"invalid COMPONENT_REF offset operator\00", align 1
@.str.135 = private unnamed_addr constant [20 x i8] c"invalid array index\00", align 1
@.str.136 = private unnamed_addr constant [26 x i8] c"invalid array lower bound\00", align 1
@.str.137 = private unnamed_addr constant [21 x i8] c"invalid array stride\00", align 1
@.str.138 = private unnamed_addr constant [50 x i8] c"invalid position or size operand to BIT_FIELD_REF\00", align 1
@.str.139 = private unnamed_addr constant [74 x i8] c"integral result type precision does not match field size of BIT_FIELD_REF\00", align 1
@mode_precision = external dso_local local_unnamed_addr constant [87 x i16], align 16
@.str.140 = private unnamed_addr constant [81 x i8] c"mode precision of non-integral result does not match field size of BIT_FIELD_REF\00", align 1
@.str.141 = private unnamed_addr constant [25 x i8] c"invalid reference prefix\00", align 1
@.str.142 = private unnamed_addr constant [49 x i8] c"invalid operand to plus/minus, type is a pointer\00", align 1
@.str.143 = private unnamed_addr constant [35 x i8] c"invalid operand to binary operator\00", align 1
@.str.144 = private unnamed_addr constant [64 x i8] c"invalid operand to pointer plus, first operand is not a pointer\00", align 1
@.str.145 = private unnamed_addr constant [89 x i8] c"invalid operand to pointer plus, second operand is not an integer with type of sizetype.\00", align 1
@.str.146 = private unnamed_addr constant [22 x i8] c"Dead STMT in EH table\00", align 1
@.str.147 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"bb_%d \00", align 1
@.str.149 = private unnamed_addr constant [35 x i8] c"%sloop_%d (header = %d, latch = %d\00", align 1
@.str.150 = private unnamed_addr constant [11 x i8] c", niter = \00", align 1
@.str.151 = private unnamed_addr constant [17 x i8] c", upper_bound = \00", align 1
@.str.152 = private unnamed_addr constant [14 x i8] c", estimate = \00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"%s{\0A\00", align 1
@.str.154 = private unnamed_addr constant [5 x i8] c"%s}\0A\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.155 = private unnamed_addr constant [38 x i8] c"ENTRY_BLOCK has IL associated with it\00", align 1
@.str.156 = private unnamed_addr constant [37 x i8] c"EXIT_BLOCK has IL associated with it\00", align 1
@.str.157 = private unnamed_addr constant [28 x i8] c"fallthru to exit from bb %d\00", align 1
@.str.158 = private unnamed_addr constant [16 x i8] c"nonlocal label \00", align 1
@.str.159 = private unnamed_addr constant [47 x i8] c" is not first in a sequence of labels in bb %d\00", align 1
@.str.160 = private unnamed_addr constant [22 x i8] c"EH landing pad label \00", align 1
@.str.161 = private unnamed_addr constant [7 x i8] c"label \00", align 1
@.str.162 = private unnamed_addr constant [34 x i8] c" to block does not match in bb %d\00", align 1
@.str.163 = private unnamed_addr constant [32 x i8] c" has incorrect context in bb %d\00", align 1
@.str.164 = private unnamed_addr constant [45 x i8] c"control flow in the middle of basic block %d\00", align 1
@.str.165 = private unnamed_addr constant [33 x i8] c" in the middle of basic block %d\00", align 1
@.str.166 = private unnamed_addr constant [49 x i8] c"fallthru edge after a control statement in bb %d\00", align 1
@.str.167 = private unnamed_addr constant [49 x i8] c"true/false edge after a non-GIMPLE_COND in bb %d\00", align 1
@.str.168 = private unnamed_addr constant [42 x i8] c"wrong outgoing edge flags at end of bb %d\00", align 1
@.str.169 = private unnamed_addr constant [30 x i8] c"explicit goto at end of bb %d\00", align 1
@.str.170 = private unnamed_addr constant [44 x i8] c"return edge does not point to exit in bb %d\00", align 1
@.str.171 = private unnamed_addr constant [51 x i8] c"found default case not at the start of case vector\00", align 1
@.str.172 = private unnamed_addr constant [25 x i8] c"case labels not sorted: \00", align 1
@.str.173 = private unnamed_addr constant [18 x i8] c" is greater than \00", align 1
@.str.174 = private unnamed_addr constant [23 x i8] c" but comes before it.\0A\00", align 1
@.str.175 = private unnamed_addr constant [27 x i8] c"extra outgoing edge %d->%d\00", align 1
@.str.176 = private unnamed_addr constant [20 x i8] c"missing edge %i->%i\00", align 1
@.str.177 = private unnamed_addr constant [25 x i8] c"Removing basic block %d\0A\00", align 1
@.str.178 = private unnamed_addr constant [26 x i8] c"Merging blocks %d and %d\0A\00", align 1
@.str.179 = private unnamed_addr constant [34 x i8] c"%<noreturn%> function does return\00", align 1
@warn_return_type = external dso_local local_unnamed_addr global i32, align 4
@.str.180 = private unnamed_addr constant [41 x i8] c"control reaches end of non-void function\00", align 1
@warn_missing_noreturn = external dso_local local_unnamed_addr global i32, align 4
@.str.181 = private unnamed_addr constant [64 x i8] c"function might be possible candidate for attribute %<noreturn%>\00", align 1
@flag_warn_unused_result = external dso_local local_unnamed_addr global i8, align 1
@.str.182 = private unnamed_addr constant [19 x i8] c"warn_unused_result\00", align 1
@.str.183 = private unnamed_addr constant [73 x i8] c"ignoring return value of %qD, declared with attribute warn_unused_result\00", align 1
@.str.184 = private unnamed_addr constant [77 x i8] c"ignoring return value of function declared with attribute warn_unused_result\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2518 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2531, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2532, metadata !DIExpression()), !dbg !2533
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2534
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2535
  ret i32 %call, !dbg !2536
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2537 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2539
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2540
  ret i32 %call, !dbg !2541
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2546, metadata !DIExpression()), !dbg !2547
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2548
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2548
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2548
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2548
  %cmp = icmp uge i8* %0, %1, !dbg !2548
  %conv1 = zext i1 %cmp to i64, !dbg !2548
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2548
  %tobool = icmp eq i64 %expval, 0, !dbg !2548
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2548

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2548
  br label %cond.end, !dbg !2548

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2548
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2548
  %2 = load i8, i8* %0, align 1, !dbg !2548
  %conv3 = zext i8 %2 to i32, !dbg !2548
  br label %cond.end, !dbg !2548

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2548
  ret i32 %cond, !dbg !2549
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2550 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2552, metadata !DIExpression()), !dbg !2553
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2554
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2554
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2554
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2554
  %cmp = icmp uge i8* %0, %1, !dbg !2554
  %conv1 = zext i1 %cmp to i64, !dbg !2554
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2554
  %tobool = icmp eq i64 %expval, 0, !dbg !2554
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2554

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2554
  br label %cond.end, !dbg !2554

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2554
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2554
  %2 = load i8, i8* %0, align 1, !dbg !2554
  %conv3 = zext i8 %2 to i32, !dbg !2554
  br label %cond.end, !dbg !2554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2554
  ret i32 %cond, !dbg !2555
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2556 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2557
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2557
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2557
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2557
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2557
  %cmp = icmp uge i8* %1, %2, !dbg !2557
  %conv1 = zext i1 %cmp to i64, !dbg !2557
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2557
  %tobool = icmp eq i64 %expval, 0, !dbg !2557
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2557

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2557
  br label %cond.end, !dbg !2557

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2557
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2557
  %3 = load i8, i8* %1, align 1, !dbg !2557
  %conv3 = zext i8 %3 to i32, !dbg !2557
  br label %cond.end, !dbg !2557

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2557
  ret i32 %cond, !dbg !2558
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2559 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2563, metadata !DIExpression()), !dbg !2564
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2565
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2566
  ret i32 %call, !dbg !2567
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2568 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2572, metadata !DIExpression()), !dbg !2574
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2573, metadata !DIExpression()), !dbg !2574
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2575
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2575
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2575
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2575
  %cmp = icmp uge i8* %0, %1, !dbg !2575
  %conv1 = zext i1 %cmp to i64, !dbg !2575
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2575
  %tobool = icmp eq i64 %expval, 0, !dbg !2575
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2575

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2575
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2575
  br label %cond.end, !dbg !2575

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2575
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2575
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2575
  store i8 %conv2, i8* %0, align 1, !dbg !2575
  %conv6 = and i32 %__c, 255, !dbg !2575
  br label %cond.end, !dbg !2575

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2575
  ret i32 %cond, !dbg !2576
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2577 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2579, metadata !DIExpression()), !dbg !2581
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2580, metadata !DIExpression()), !dbg !2581
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2582
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2582
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2582
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2582
  %cmp = icmp uge i8* %0, %1, !dbg !2582
  %conv1 = zext i1 %cmp to i64, !dbg !2582
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2582
  %tobool = icmp eq i64 %expval, 0, !dbg !2582
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2582

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2582
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2582
  br label %cond.end, !dbg !2582

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2582
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2582
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2582
  store i8 %conv2, i8* %0, align 1, !dbg !2582
  %conv6 = and i32 %__c, 255, !dbg !2582
  br label %cond.end, !dbg !2582

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2582
  ret i32 %cond, !dbg !2583
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2584 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2586, metadata !DIExpression()), !dbg !2587
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2588
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2588
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2588
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2588
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2588
  %cmp = icmp uge i8* %1, %2, !dbg !2588
  %conv1 = zext i1 %cmp to i64, !dbg !2588
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2588
  %tobool = icmp eq i64 %expval, 0, !dbg !2588
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2588

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2588
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2588
  br label %cond.end, !dbg !2588

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2588
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2588
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2588
  store i8 %conv4, i8* %1, align 1, !dbg !2588
  %conv6 = and i32 %__c, 255, !dbg !2588
  br label %cond.end, !dbg !2588

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2588
  ret i32 %cond, !dbg !2589
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2590 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2596, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2597, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2598, metadata !DIExpression()), !dbg !2599
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2600
  ret i64 %call, !dbg !2601
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2602 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2604, metadata !DIExpression()), !dbg !2605
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2606
  %0 = load i32, i32* %_flags, align 8, !dbg !2606
  %and = lshr i32 %0, 4, !dbg !2606
  %and.lobit = and i32 %and, 1, !dbg !2606
  ret i32 %and.lobit, !dbg !2607
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2608 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2610, metadata !DIExpression()), !dbg !2611
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2612
  %0 = load i32, i32* %_flags, align 8, !dbg !2612
  %and = lshr i32 %0, 5, !dbg !2612
  %and.lobit = and i32 %and, 1, !dbg !2612
  ret i32 %and.lobit, !dbg !2613
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2614 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2617, metadata !DIExpression()), !dbg !2618
  %__c.off = add i32 %__c, 128, !dbg !2619
  %0 = icmp ult i32 %__c.off, 384, !dbg !2619
  br i1 %0, label %cond.true, label %cond.end, !dbg !2619

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2620
  %1 = load i32*, i32** %call, align 8, !dbg !2621
  %idxprom = sext i32 %__c to i64, !dbg !2622
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2622
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2622
  br label %cond.end, !dbg !2623

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2623
  ret i32 %cond, !dbg !2624
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2625 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2627, metadata !DIExpression()), !dbg !2628
  %__c.off = add i32 %__c, 128, !dbg !2629
  %0 = icmp ult i32 %__c.off, 384, !dbg !2629
  br i1 %0, label %cond.true, label %cond.end, !dbg !2629

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2630
  %1 = load i32*, i32** %call, align 8, !dbg !2631
  %idxprom = sext i32 %__c to i64, !dbg !2632
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2632
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2632
  br label %cond.end, !dbg !2633

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2633
  ret i32 %cond, !dbg !2634
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2635 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2640, metadata !DIExpression()), !dbg !2641
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2642
  %conv = trunc i64 %call to i32, !dbg !2643
  ret i32 %conv, !dbg !2644
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2645 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2649, metadata !DIExpression()), !dbg !2650
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2651
  ret i64 %call, !dbg !2652
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2653 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2658, metadata !DIExpression()), !dbg !2659
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2660
  ret i64 %call, !dbg !2661
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2662 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2668, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2669, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2670, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2671, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2672, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i64 0, metadata !2673, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2674, metadata !DIExpression()), !dbg !2678
  br label %while.cond, !dbg !2679

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2680
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2678
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2674, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2673, metadata !DIExpression()), !dbg !2678
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2681
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2679

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2682
  %div = lshr i64 %add, 1, !dbg !2684
  call void @llvm.dbg.value(metadata i64 %div, metadata !2675, metadata !DIExpression()), !dbg !2678
  %mul = mul i64 %div, %__size, !dbg !2685
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2686
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2676, metadata !DIExpression()), !dbg !2678
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2687
  call void @llvm.dbg.value(metadata i32 %call, metadata !2677, metadata !DIExpression()), !dbg !2678
  %cmp1 = icmp slt i32 %call, 0, !dbg !2688
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2690

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2691
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2693

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2694
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2673, metadata !DIExpression()), !dbg !2678
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2678
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2678
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2674, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2673, metadata !DIExpression()), !dbg !2678
  br label %while.cond, !dbg !2679, !llvm.loop !2695

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2678
  ret i8* %retval.0, !dbg !2697
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2698 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2704, metadata !DIExpression()), !dbg !2705
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2706
  ret double %call, !dbg !2707
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2708 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2717, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2718, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.value(metadata i32 %base, metadata !2719, metadata !DIExpression()), !dbg !2720
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2721
  ret i64 %call, !dbg !2722
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2723 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2729, metadata !DIExpression()), !dbg !2732
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2730, metadata !DIExpression()), !dbg !2732
  call void @llvm.dbg.value(metadata i32 %base, metadata !2731, metadata !DIExpression()), !dbg !2732
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2733
  ret i64 %call, !dbg !2734
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2735 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2746, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2747, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.value(metadata i32 %base, metadata !2748, metadata !DIExpression()), !dbg !2749
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2750
  ret i64 %call, !dbg !2751
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2752 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2756, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2757, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.value(metadata i32 %base, metadata !2758, metadata !DIExpression()), !dbg !2759
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2760
  ret i64 %call, !dbg !2761
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2762 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2802, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2803, metadata !DIExpression()), !dbg !2804
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2805
  ret i32 %call, !dbg !2806
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2807 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2809, metadata !DIExpression()), !dbg !2811
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2810, metadata !DIExpression()), !dbg !2811
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2812
  ret i32 %call, !dbg !2813
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2814 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2818, metadata !DIExpression()), !dbg !2820
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2819, metadata !DIExpression()), !dbg !2820
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2821
  ret i32 %call, !dbg !2822
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2823 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2827, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2828, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2829, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2830, metadata !DIExpression()), !dbg !2831
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2832
  ret i32 %call, !dbg !2833
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2834 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2838, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2839, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2840, metadata !DIExpression()), !dbg !2841
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2840, metadata !DIExpression(DW_OP_deref)), !dbg !2841
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2842
  ret i32 %call, !dbg !2843
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2844 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2848, metadata !DIExpression()), !dbg !2852
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2849, metadata !DIExpression()), !dbg !2852
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2850, metadata !DIExpression()), !dbg !2852
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2851, metadata !DIExpression()), !dbg !2852
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2851, metadata !DIExpression(DW_OP_deref)), !dbg !2852
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2853
  ret i32 %call, !dbg !2854
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2855 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2879, metadata !DIExpression()), !dbg !2881
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2880, metadata !DIExpression()), !dbg !2881
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2882
  ret i32 %call, !dbg !2883
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2884 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2886, metadata !DIExpression()), !dbg !2888
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2887, metadata !DIExpression()), !dbg !2888
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2889
  ret i32 %call, !dbg !2890
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2891 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2895, metadata !DIExpression()), !dbg !2897
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2896, metadata !DIExpression()), !dbg !2897
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2898
  ret i32 %call, !dbg !2899
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2900 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2904, metadata !DIExpression()), !dbg !2908
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2905, metadata !DIExpression()), !dbg !2908
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2906, metadata !DIExpression()), !dbg !2908
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2907, metadata !DIExpression()), !dbg !2908
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2909
  ret i32 %call, !dbg !2910
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @init_empty_tree_cfg_for_function(%struct.function* %fn) local_unnamed_addr #5 !dbg !2911 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !2915, metadata !DIExpression()), !dbg !2916
  tail call void @init_flow(%struct.function* %fn) #6, !dbg !2917
  %cfg = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 1, !dbg !2918
  %0 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2918
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %0, i64 0, i32 7, !dbg !2918
  store i32 0, i32* %x_profile_status, align 8, !dbg !2919
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2920
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !2920
  store i32 2, i32* %x_n_basic_blocks, align 8, !dbg !2921
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2922
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 5, !dbg !2922
  store i32 2, i32* %x_last_basic_block, align 8, !dbg !2923
  %call = tail call fastcc %struct.VEC_basic_block_gc* @VEC_basic_block_gc_alloc(i32 20) #7, !dbg !2924
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2925
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !2925
  store %struct.VEC_basic_block_gc* %call, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !2926
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2927
  %x_basic_block_info5 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 2, !dbg !2927
  tail call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_basic_block_info5, i32 20) #7, !dbg !2927
  %call6 = tail call fastcc %struct.VEC_basic_block_gc* @VEC_basic_block_gc_alloc(i32 20) #7, !dbg !2928
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2929
  %x_label_to_block_map = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 6, !dbg !2929
  store %struct.VEC_basic_block_gc* %call6, %struct.VEC_basic_block_gc** %x_label_to_block_map, align 8, !dbg !2930
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2931
  %x_label_to_block_map9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 6, !dbg !2931
  tail call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_label_to_block_map9, i32 20) #7, !dbg !2931
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2932
  %x_basic_block_info11 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 2, !dbg !2932
  %8 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info11, align 8, !dbg !2932
  %tobool = icmp eq %struct.VEC_basic_block_gc* %8, null, !dbg !2932
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2932

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %8, i64 0, i32 0, !dbg !2932
  br label %cond.end, !dbg !2932

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2932
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 0, !dbg !2932
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2932
  %call15 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond, i32 0, %struct.basic_block_def* %9) #7, !dbg !2932
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2933
  %x_basic_block_info17 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 2, !dbg !2933
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info17, align 8, !dbg !2933
  %tobool18 = icmp eq %struct.VEC_basic_block_gc* %11, null, !dbg !2933
  br i1 %tobool18, label %cond.end24, label %cond.true19, !dbg !2933

cond.true19:                                      ; preds = %cond.end
  %base22 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %11, i64 0, i32 0, !dbg !2933
  br label %cond.end24, !dbg !2933

cond.end24:                                       ; preds = %cond.end, %cond.true19
  %cond25 = phi %struct.VEC_basic_block_base* [ %base22, %cond.true19 ], [ null, %cond.end ], !dbg !2933
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !2933
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2933
  %call27 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond25, i32 1, %struct.basic_block_def* %12) #7, !dbg !2933
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2934
  %x_exit_block_ptr29 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 1, !dbg !2934
  %14 = bitcast %struct.basic_block_def** %x_exit_block_ptr29 to i64*, !dbg !2934
  %15 = load i64, i64* %14, align 8, !dbg !2934
  %x_entry_block_ptr31 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 0, !dbg !2935
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr31, align 8, !dbg !2935
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 6, !dbg !2936
  %17 = bitcast %struct.basic_block_def** %next_bb to i64*, !dbg !2937
  store i64 %15, i64* %17, align 8, !dbg !2937
  %18 = bitcast %struct.control_flow_graph** %cfg to i64**, !dbg !2938
  %19 = load i64*, i64** %18, align 8, !dbg !2938
  %20 = load i64, i64* %19, align 8, !dbg !2938
  %x_exit_block_ptr35 = getelementptr inbounds i64, i64* %19, i64 1, !dbg !2939
  %21 = bitcast i64* %x_exit_block_ptr35 to %struct.basic_block_def**, !dbg !2939
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %21, align 8, !dbg !2939
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 5, !dbg !2940
  %23 = bitcast %struct.basic_block_def** %prev_bb to i64*, !dbg !2941
  store i64 %20, i64* %23, align 8, !dbg !2941
  ret void, !dbg !2942
}

declare dso_local void @init_flow(%struct.function*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_basic_block_gc* @VEC_basic_block_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !2943 {
entry:
  call void @llvm.dbg.value(metadata i32 20, metadata !2947, metadata !DIExpression()), !dbg !2948
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 20) #6, !dbg !2949
  %0 = bitcast i8* %call to %struct.VEC_basic_block_gc*, !dbg !2949
  ret %struct.VEC_basic_block_gc* %0, !dbg !2949
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !2950 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !2955, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.value(metadata i32 %size_, metadata !2956, metadata !DIExpression()), !dbg !2958
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !2959
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !2959
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2959

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !2959
  br label %cond.end, !dbg !2959

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2959
  %call = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #7, !dbg !2959
  call void @llvm.dbg.value(metadata i32 %call, metadata !2957, metadata !DIExpression()), !dbg !2958
  tail call fastcc void @VEC_basic_block_gc_safe_grow(%struct.VEC_basic_block_gc** %vec_, i32 %size_) #7, !dbg !2959
  %1 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !2959
  %tobool1 = icmp eq %struct.VEC_basic_block_gc* %1, null, !dbg !2959
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !2959

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %1, i64 0, i32 0, !dbg !2959
  br label %cond.end5, !dbg !2959

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_basic_block_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !2959
  %call7 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_address(%struct.VEC_basic_block_base* %cond6) #7, !dbg !2959
  %idxprom = sext i32 %call to i64, !dbg !2959
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call7, i64 %idxprom, !dbg !2959
  %2 = bitcast %struct.basic_block_def** %arrayidx to i8*, !dbg !2959
  %sub = sub nsw i32 %size_, %call, !dbg !2959
  %conv = sext i32 %sub to i64, !dbg !2959
  %mul = shl nsw i64 %conv, 3, !dbg !2959
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !2959
  ret void, !dbg !2959
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !2960 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !2965, metadata !DIExpression()), !dbg !2969
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2966, metadata !DIExpression()), !dbg !2969
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !2967, metadata !DIExpression()), !dbg !2969
  %idxprom = zext i32 %ix_ to i64, !dbg !2970
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2970
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !2970
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !2968, metadata !DIExpression()), !dbg !2969
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !2970
  ret %struct.basic_block_def* %0, !dbg !2970
}

; Function Attrs: nounwind uwtable
define dso_local void @init_empty_tree_cfg() local_unnamed_addr #5 !dbg !2971 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2974
  tail call void @init_empty_tree_cfg_for_function(%struct.function* %0) #7, !dbg !2975
  ret void, !dbg !2976
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_build_cfg() #5 !dbg !2977 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2980
  %call = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %0) #6, !dbg !2981
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !2979, metadata !DIExpression()), !dbg !2982
  tail call fastcc void @build_gimple_cfg(%struct.gimple_seq_d* %call) #7, !dbg !2983
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2984
  tail call void @gimple_set_body(%union.tree_node* %1, %struct.gimple_seq_d* null) #6, !dbg !2985
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2986
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !2986
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2988

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* @dump_flags, align 4, !dbg !2989
  %and = and i32 %3, 8, !dbg !2990
  %tobool1 = icmp eq i32 %and, 0, !dbg !2990
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2991

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !2992
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2994
  %5 = load i32, i32* @dump_flags, align 4, !dbg !2995
  tail call void @dump_scope_blocks(%struct._IO_FILE* %4, i32 %5) #6, !dbg !2996
  br label %if.end, !dbg !2997

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  ret i32 0, !dbg !2998
}

; Function Attrs: nounwind uwtable
define dso_local void @fold_cond_expr_cond() local_unnamed_addr #5 !dbg !2999 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3012
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3012
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3012
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3012
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3012
  br label %for.cond, !dbg !3012

for.cond:                                         ; preds = %for.inc, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.inc ], !dbg !3013
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3014
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3014
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3001, metadata !DIExpression()), !dbg !3015
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3013
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3013
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3013
  br i1 %cmp, label %for.end, label %for.body, !dbg !3012

for.body:                                         ; preds = %for.cond
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb.0) #7, !dbg !3016
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3002, metadata !DIExpression()), !dbg !3017
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !3018
  br i1 %tobool, label %for.inc, label %land.lhs.true, !dbg !3019

land.lhs.true:                                    ; preds = %for.body
  %call3 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !3020
  %cmp4 = icmp eq i32 %call3, 1, !dbg !3021
  br i1 %cmp4, label %if.then, label %for.inc, !dbg !3022

if.then:                                          ; preds = %land.lhs.true
  %call5 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %call) #7, !dbg !3023
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3006, metadata !DIExpression()), !dbg !3024
  tail call void @fold_defer_overflow_warnings() #6, !dbg !3025
  %call6 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !3026
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3027
  %call7 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* nonnull %call) #7, !dbg !3028
  %call8 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* nonnull %call) #7, !dbg !3029
  %call9 = tail call %union.tree_node* @fold_binary_loc(i32 %call5, i32 %call6, %union.tree_node* %5, %union.tree_node* %call7, %union.tree_node* %call8) #6, !dbg !3030
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !3009, metadata !DIExpression()), !dbg !3024
  %tobool10 = icmp eq %union.tree_node* %call9, null, !dbg !3031
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !3033

if.then11:                                        ; preds = %if.then
  %call12 = tail call i32 @integer_zerop(%union.tree_node* nonnull %call9) #6, !dbg !3034
  %conv = trunc i32 %call12 to i8, !dbg !3034
  call void @llvm.dbg.value(metadata i8 %conv, metadata !3010, metadata !DIExpression()), !dbg !3024
  %call13 = tail call i32 @integer_onep(%union.tree_node* nonnull %call9) #6, !dbg !3036
  %conv14 = trunc i32 %call13 to i8, !dbg !3036
  call void @llvm.dbg.value(metadata i8 %conv14, metadata !3011, metadata !DIExpression()), !dbg !3024
  br label %if.end, !dbg !3037

if.end:                                           ; preds = %if.then, %if.then11
  %zerop.0 = phi i8 [ %conv, %if.then11 ], [ 0, %if.then ], !dbg !3038
  %onep.0 = phi i8 [ %conv14, %if.then11 ], [ 0, %if.then ], !dbg !3038
  call void @llvm.dbg.value(metadata i8 %onep.0, metadata !3011, metadata !DIExpression()), !dbg !3024
  call void @llvm.dbg.value(metadata i8 %zerop.0, metadata !3010, metadata !DIExpression()), !dbg !3024
  %6 = or i8 %onep.0, %zerop.0, !dbg !3039
  %7 = icmp ne i8 %6, 0, !dbg !3039
  %conv19 = zext i1 %7 to i8, !dbg !3040
  tail call void @fold_undefer_overflow_warnings(i8 zeroext %conv19, %union.gimple_statement_d* nonnull %call, i32 2) #6, !dbg !3041
  %tobool20 = icmp eq i8 %zerop.0, 0, !dbg !3042
  br i1 %tobool20, label %if.else22, label %if.then21, !dbg !3044

if.then21:                                        ; preds = %if.end
  tail call fastcc void @gimple_cond_make_false(%union.gimple_statement_d* nonnull %call) #7, !dbg !3045
  br label %for.inc, !dbg !3045

if.else22:                                        ; preds = %if.end
  %tobool23 = icmp eq i8 %onep.0, 0, !dbg !3046
  br i1 %tobool23, label %for.inc, label %if.then24, !dbg !3048

if.then24:                                        ; preds = %if.else22
  tail call fastcc void @gimple_cond_make_true(%union.gimple_statement_d* nonnull %call) #7, !dbg !3049
  br label %for.inc, !dbg !3049

for.inc:                                          ; preds = %if.else22, %for.body, %land.lhs.true, %if.then24, %if.then21
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3013
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3050
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3013
  br label %for.cond, !dbg !3013, !llvm.loop !3051

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3053
}

; Function Attrs: nounwind uwtable
define dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3054 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3058, metadata !DIExpression()), !dbg !3061
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !3062
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3062
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3059, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %i, %struct.basic_block_def* %bb) #7, !dbg !3063
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !3060, metadata !DIExpression()), !dbg !3061
  br label %while.cond, !dbg !3064

while.cond:                                       ; preds = %while.body, %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !3060, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3059, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !3065
  %tobool = icmp eq i8 %call, 0, !dbg !3065
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3066

land.rhs:                                         ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3059, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !3067
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !3060, metadata !DIExpression()), !dbg !3061
  %call2 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call1) #7, !dbg !3068
  %tobool3 = icmp ne i8 %call2, 0, !dbg !3066
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %stmt.1 = phi %union.gimple_statement_d* [ null, %while.cond ], [ %call1, %land.rhs ], !dbg !3061
  %1 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !3061
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1, metadata !3060, metadata !DIExpression()), !dbg !3061
  br i1 %1, label %while.body, label %while.end, !dbg !3064

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3059, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  call fastcc void @gsi_prev(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !3069
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !3060, metadata !DIExpression()), !dbg !3061
  br label %while.cond, !dbg !3064, !llvm.loop !3071

while.end:                                        ; preds = %land.end
  %stmt.1.lcssa = phi %union.gimple_statement_d* [ %stmt.1, %land.end ], !dbg !3061
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1.lcssa, metadata !3060, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1.lcssa, metadata !3060, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1.lcssa, metadata !3060, metadata !DIExpression()), !dbg !3061
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3073
  ret %union.gimple_statement_d* %stmt.1.lcssa, !dbg !3074
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3075 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3080, metadata !DIExpression()), !dbg !3081
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3082
  %bf.load = load i32, i32* %0, align 8, !dbg !3082
  %bf.clear = and i32 %bf.load, 255, !dbg !3082
  ret i32 %bf.clear, !dbg !3083
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3084 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3088, metadata !DIExpression()), !dbg !3089
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !3090
  %0 = load i32, i32* %location, align 8, !dbg !3090
  ret i32 %0, !dbg !3091
}

declare dso_local void @fold_defer_overflow_warnings() local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_binary_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3092 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3096, metadata !DIExpression()), !dbg !3097
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !3098
  %bf.load = load i32, i32* %0, align 8, !dbg !3098
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3098
  ret i32 %bf.lshr, !dbg !3099
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3100 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3104, metadata !DIExpression()), !dbg !3105
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !3106
  ret %union.tree_node* %call, !dbg !3107
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3108 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3110, metadata !DIExpression()), !dbg !3111
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !3112
  ret %union.tree_node* %call, !dbg !3113
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_onep(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fold_undefer_overflow_warnings(i8 zeroext, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_make_false(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3114 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3118, metadata !DIExpression()), !dbg !3119
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !3120
  tail call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %0) #7, !dbg !3121
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !3122
  tail call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %1) #7, !dbg !3123
  %2 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !3124
  %bf.load = load i32, i32* %2, align 8, !dbg !3125
  %bf.clear = and i32 %bf.load, 65535, !dbg !3125
  %bf.set = or i32 %bf.clear, 6619136, !dbg !3125
  store i32 %bf.set, i32* %2, align 8, !dbg !3125
  ret void, !dbg !3126
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_make_true(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3127 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3129, metadata !DIExpression()), !dbg !3130
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !3131
  tail call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %0) #7, !dbg !3132
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !3133
  tail call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %1) #7, !dbg !3134
  %2 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !3135
  %bf.load = load i32, i32* %2, align 8, !dbg !3136
  %bf.clear = and i32 %bf.load, 65535, !dbg !3136
  %bf.set = or i32 %bf.clear, 6619136, !dbg !3136
  store i32 %bf.set, i32* %2, align 8, !dbg !3136
  ret void, !dbg !3137
}

; Function Attrs: nounwind uwtable
define dso_local void @start_recording_case_labels() local_unnamed_addr #5 !dbg !3138 {
entry:
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !3139
  %cmp = icmp eq %struct.pointer_map_t* %0, null, !dbg !3139
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3139

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 849, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3139
  br label %cond.end, !dbg !3139

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !3140
  store %struct.pointer_map_t* %call, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !3141
  ret void, !dbg !3142
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @end_recording_case_labels() local_unnamed_addr #5 !dbg !3143 {
entry:
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !3144
  tail call void @pointer_map_traverse(%struct.pointer_map_t* %0, i8 (i8*, i8**, i8*)* nonnull @edge_to_cases_cleanup, i8* null) #6, !dbg !3145
  %1 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !3146
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %1) #6, !dbg !3147
  store %struct.pointer_map_t* null, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !3148
  ret void, !dbg !3149
}

declare dso_local void @pointer_map_traverse(%struct.pointer_map_t*, i8 (i8*, i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @edge_to_cases_cleanup(i8* %key, i8** %value, i8* %data) #5 !dbg !3150 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !3154, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.value(metadata i8** %value, metadata !3155, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.value(metadata i8* %data, metadata !3156, metadata !DIExpression()), !dbg !3159
  %0 = bitcast i8** %value to %union.tree_node**, !dbg !3160
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3160
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3157, metadata !DIExpression()), !dbg !3159
  br label %for.cond, !dbg !3162

for.cond:                                         ; preds = %for.body, %entry
  %t.0 = phi %union.tree_node* [ %1, %entry ], [ %2, %for.body ], !dbg !3163
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3157, metadata !DIExpression()), !dbg !3159
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !3164
  br i1 %tobool, label %for.end, label %for.body, !dbg !3164

for.body:                                         ; preds = %for.cond
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3165
  %2 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3165
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3158, metadata !DIExpression()), !dbg !3159
  store %union.tree_node* null, %union.tree_node** %chain, align 8, !dbg !3168
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3157, metadata !DIExpression()), !dbg !3159
  br label %for.cond, !dbg !3169, !llvm.loop !3170

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %value, align 8, !dbg !3172
  ret i8 0, !dbg !3173
}

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @label_to_block_fn(%struct.function* %ifun, %union.tree_node* %dest) local_unnamed_addr #5 !dbg !3174 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !3178, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !3179, metadata !DIExpression()), !dbg !3185
  %label_decl_uid = getelementptr inbounds %union.tree_node, %union.tree_node* %dest, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3186
  %0 = bitcast %union.tree_node** %label_decl_uid to i32*, !dbg !3186
  %1 = load i32, i32* %0, align 8, !dbg !3186
  call void @llvm.dbg.value(metadata i32 %1, metadata !3180, metadata !DIExpression()), !dbg !3185
  %2 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8, !dbg !3187
  %arrayidx = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %2, i64 0, i32 1, i64 4, !dbg !3187
  %3 = load i32, i32* %arrayidx, align 8, !dbg !3187
  %tobool = icmp eq i32 %3, 0, !dbg !3187
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !3188

lor.lhs.false:                                    ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %2, i64 0, i32 1, i64 5, !dbg !3189
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !3189
  %tobool3 = icmp ne i32 %4, 0, !dbg !3189
  %cmp = icmp slt i32 %1, 0, !dbg !3190
  %or.cond = and i1 %tobool3, %cmp, !dbg !3191
  br i1 %or.cond, label %if.then, label %if.end, !dbg !3191

land.lhs.true:                                    ; preds = %entry
  %cmp.old = icmp slt i32 %1, 0, !dbg !3190
  br i1 %cmp.old, label %if.then, label %if.end, !dbg !3192

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %5 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3193
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !3193
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3194
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !3194
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3194
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 2, !dbg !3194
  %8 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3194
  %tobool4 = icmp eq %struct.VEC_basic_block_gc* %8, null, !dbg !3194
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !3194

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %8, i64 0, i32 0, !dbg !3194
  br label %cond.end, !dbg !3194

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %if.then ], !dbg !3194
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 2) #7, !dbg !3194
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3181, metadata !DIExpression(DW_OP_deref)), !dbg !3195
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.basic_block_def* %call) #7, !dbg !3196
  %call8 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %dest) #6, !dbg !3197
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call8, metadata !3184, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3181, metadata !DIExpression(DW_OP_deref)), !dbg !3195
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call8, i32 0) #6, !dbg !3198
  %9 = load i32, i32* %0, align 8, !dbg !3199
  call void @llvm.dbg.value(metadata i32 %9, metadata !3180, metadata !DIExpression()), !dbg !3185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !3200
  br label %if.end, !dbg !3201

if.end:                                           ; preds = %cond.end, %land.lhs.true, %lor.lhs.false
  %uid.0 = phi i32 [ %9, %cond.end ], [ %1, %land.lhs.true ], [ %1, %lor.lhs.false ], !dbg !3185
  call void @llvm.dbg.value(metadata i32 %uid.0, metadata !3180, metadata !DIExpression()), !dbg !3185
  %cfg11 = getelementptr inbounds %struct.function, %struct.function* %ifun, i64 0, i32 1, !dbg !3202
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !3202
  %x_label_to_block_map = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 6, !dbg !3202
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_label_to_block_map, align 8, !dbg !3202
  %tobool12 = icmp eq %struct.VEC_basic_block_gc* %11, null, !dbg !3202
  br i1 %tobool12, label %cond.end18, label %cond.true13, !dbg !3202

cond.true13:                                      ; preds = %if.end
  %base16 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %11, i64 0, i32 0, !dbg !3202
  br label %cond.end18, !dbg !3202

cond.end18:                                       ; preds = %if.end, %cond.true13
  %cond19 = phi %struct.VEC_basic_block_base* [ %base16, %cond.true13 ], [ null, %if.end ], !dbg !3202
  %call20 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond19) #7, !dbg !3202
  %cmp21 = icmp ugt i32 %call20, %uid.0, !dbg !3204
  br i1 %cmp21, label %if.end23, label %cleanup, !dbg !3205

if.end23:                                         ; preds = %cond.end18
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !3206
  %x_label_to_block_map25 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 6, !dbg !3206
  %13 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_label_to_block_map25, align 8, !dbg !3206
  %tobool26 = icmp eq %struct.VEC_basic_block_gc* %13, null, !dbg !3206
  br i1 %tobool26, label %cond.end32, label %cond.true27, !dbg !3206

cond.true27:                                      ; preds = %if.end23
  %base30 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %13, i64 0, i32 0, !dbg !3206
  br label %cond.end32, !dbg !3206

cond.end32:                                       ; preds = %if.end23, %cond.true27
  %cond33 = phi %struct.VEC_basic_block_base* [ %base30, %cond.true27 ], [ null, %if.end23 ], !dbg !3206
  %call34 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond33, i32 %uid.0) #7, !dbg !3206
  br label %cleanup, !dbg !3207

cleanup:                                          ; preds = %cond.end18, %cond.end32
  %retval.0 = phi %struct.basic_block_def* [ %call34, %cond.end32 ], [ null, %cond.end18 ], !dbg !3185
  ret %struct.basic_block_def* %retval.0, !dbg !3208
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3209 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3213, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !3214, metadata !DIExpression()), !dbg !3217
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !3218
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !3215, metadata !DIExpression()), !dbg !3216
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !3219
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !3220
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3221
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !3222
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !3223
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !3224
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !3225
  ret void, !dbg !3226
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3227 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !3233, metadata !DIExpression()), !dbg !3235
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3234, metadata !DIExpression()), !dbg !3235
  br label %land.end, !dbg !3236

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3236
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3236
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3236
  ret %struct.basic_block_def* %0, !dbg !3236
}

declare dso_local %union.gimple_statement_d* @gimple_build_label(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !3237 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !3241, metadata !DIExpression()), !dbg !3242
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !3243
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3243

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !3243
  %0 = load i32, i32* %num, align 8, !dbg !3243
  br label %cond.end, !dbg !3243

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3243
  ret i32 %cond, !dbg !3243
}

; Function Attrs: nounwind uwtable
define dso_local void @make_abnormal_goto_edges(%struct.basic_block_def* %bb, i8 zeroext %for_call) local_unnamed_addr #5 !dbg !3244 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3248, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 %for_call, metadata !3249, metadata !DIExpression()), !dbg !3259
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3260
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3260
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3261
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !3261
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3261
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !3261
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3261
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3262
  %tobool10 = icmp eq i8 %for_call, 0, !dbg !3263
  br label %for.cond, !dbg !3261

for.cond:                                         ; preds = %for.inc22, %entry
  %5 = phi %struct.control_flow_graph* [ %2, %entry ], [ %.pre24, %for.inc22 ], !dbg !3265
  %.pn = phi %struct.basic_block_def* [ %3, %entry ], [ %target_bb.0, %for.inc22 ]
  %target_bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3266
  %target_bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb.0.in, align 8, !dbg !3266
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target_bb.0, metadata !3250, metadata !DIExpression()), !dbg !3259
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !3265
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3265
  %cmp = icmp eq %struct.basic_block_def* %target_bb.0, %6, !dbg !3265
  br i1 %cmp, label %for.end24, label %for.body, !dbg !3261

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !3267
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %target_bb.0) #7, !dbg !3267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !3267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !3267
  br i1 %tobool10, label %for.body.for.body.split_crit_edge, label %for.body.split.us, !dbg !3268

for.body.for.body.split_crit_edge:                ; preds = %for.body
  br i1 false, label %for.body.split.split.us, label %for.body.split.for.body.split.split_crit_edge, !dbg !3268

for.body.split.us:                                ; preds = %for.body
  br i1 true, label %for.body.split.us.split.us, label %for.body.split.us.for.body.split.us.split_crit_edge, !dbg !3268

for.body.split.us.for.body.split.us.split_crit_edge: ; preds = %for.body.split.us
  br label %for.inc22.us-lcssa.us.us-lcssa, !dbg !3268

for.body.split.us.split.us:                       ; preds = %for.body.split.us
  br label %for.cond3.us.us, !dbg !3268

for.cond3.us.us:                                  ; preds = %for.inc.us.us, %for.body.split.us.split.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3251, metadata !DIExpression(DW_OP_deref)), !dbg !3259
  %call.us.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3269
  %tobool.us.us = icmp eq i8 %call.us.us, 0, !dbg !3270
  br i1 %tobool.us.us, label %for.body4.us.us, label %for.inc22.us-lcssa.us.us-lcssa.us, !dbg !3271

for.body4.us.us:                                  ; preds = %for.cond3.us.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3251, metadata !DIExpression(DW_OP_deref)), !dbg !3259
  %call5.us.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3272
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5.us.us, metadata !3252, metadata !DIExpression()), !dbg !3273
  %call6.us.us = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call5.us.us) #7, !dbg !3274
  %cmp7.us.us = icmp eq i32 %call6.us.us, 4, !dbg !3276
  br i1 %cmp7.us.us, label %if.end.us.us, label %cleanup.us.us, !dbg !3277

if.end.us.us:                                     ; preds = %for.body4.us.us
  %call8.us.us = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call5.us.us) #7, !dbg !3278
  call void @llvm.dbg.value(metadata %union.tree_node* %call8.us.us, metadata !3258, metadata !DIExpression()), !dbg !3273
  %nonlocal_flag.us.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call8.us.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3279
  %7 = bitcast i40* %nonlocal_flag.us.us to i64*, !dbg !3279
  %bf.load11.us.us = load i64, i64* %7, align 8, !dbg !3279
  %bf.cast143.us.us = and i64 %bf.load11.us.us, 256, !dbg !3279
  %tobool15.us.us = icmp eq i64 %bf.cast143.us.us, 0, !dbg !3279
  br i1 %tobool15.us.us, label %cleanup.us.us, label %if.then18.us.us, !dbg !3280

if.then18.us.us:                                  ; preds = %if.end.us.us
  %call19.us.us = call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %target_bb.0, i32 2) #6, !dbg !3281
  br label %cleanup.us.us, !dbg !3283

cleanup.us.us:                                    ; preds = %if.end.us.us, %if.then18.us.us, %for.body4.us.us
  %cleanup.dest.slot.0.us.us = phi i1 [ false, %if.then18.us.us ], [ false, %for.body4.us.us ], [ true, %if.end.us.us ]
  br i1 %cleanup.dest.slot.0.us.us, label %for.inc.us.us, label %for.inc22.us-lcssa.us.us-lcssa.us

for.inc.us.us:                                    ; preds = %cleanup.us.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3251, metadata !DIExpression(DW_OP_deref)), !dbg !3259
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3284
  br label %for.cond3.us.us, !dbg !3285, !llvm.loop !3286

for.inc22.us-lcssa.us.us-lcssa.us:                ; preds = %cleanup.us.us, %for.cond3.us.us
  br label %for.inc22.us-lcssa.us, !dbg !3265

for.inc22.us-lcssa.us.us-lcssa:                   ; preds = %for.body.split.us.for.body.split.us.split_crit_edge
  br label %for.inc22.us-lcssa.us, !dbg !3265

for.inc22.us-lcssa.us:                            ; preds = %for.inc22.us-lcssa.us.us-lcssa.us, %for.inc22.us-lcssa.us.us-lcssa
  br label %for.inc22, !dbg !3265

for.body.split.for.body.split.split_crit_edge:    ; preds = %for.body.for.body.split_crit_edge
  br label %for.cond3, !dbg !3268

for.body.split.split.us:                          ; preds = %for.body.for.body.split_crit_edge
  br label %for.inc22.us-lcssa.us-lcssa.us, !dbg !3268

for.inc22.us-lcssa.us-lcssa.us:                   ; preds = %for.body.split.split.us
  br label %for.inc22.us-lcssa, !dbg !3265

for.cond3:                                        ; preds = %for.inc, %for.body.split.for.body.split.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3251, metadata !DIExpression(DW_OP_deref)), !dbg !3259
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3269
  %tobool = icmp eq i8 %call, 0, !dbg !3270
  br i1 %tobool, label %for.body4, label %for.inc22.us-lcssa.us-lcssa, !dbg !3271

for.body4:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3251, metadata !DIExpression(DW_OP_deref)), !dbg !3259
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3272
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !3252, metadata !DIExpression()), !dbg !3273
  %call6 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call5) #7, !dbg !3274
  %cmp7 = icmp eq i32 %call6, 4, !dbg !3276
  br i1 %cmp7, label %if.end, label %cleanup, !dbg !3277

if.end:                                           ; preds = %for.body4
  %call8 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call5) #7, !dbg !3278
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !3258, metadata !DIExpression()), !dbg !3273
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3288
  %bf.load = load i64, i64* %8, align 8, !dbg !3288
  %bf.cast2 = and i64 %bf.load, 65536, !dbg !3288
  %tobool9 = icmp eq i64 %bf.cast2, 0, !dbg !3288
  br i1 %tobool9, label %lor.lhs.false, label %if.then18, !dbg !3289

lor.lhs.false:                                    ; preds = %if.end
  br label %cleanup, !dbg !3280

if.then18:                                        ; preds = %if.end
  %call19 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %target_bb.0, i32 2) #6, !dbg !3281
  br label %cleanup, !dbg !3283

cleanup:                                          ; preds = %lor.lhs.false, %for.body4, %if.then18
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then18 ], [ false, %for.body4 ], [ true, %lor.lhs.false ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.inc22.us-lcssa.us-lcssa

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3251, metadata !DIExpression(DW_OP_deref)), !dbg !3259
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3284
  br label %for.cond3, !dbg !3285, !llvm.loop !3286

for.inc22.us-lcssa.us-lcssa:                      ; preds = %for.cond3, %cleanup
  br label %for.inc22.us-lcssa, !dbg !3265

for.inc22.us-lcssa:                               ; preds = %for.inc22.us-lcssa.us-lcssa.us, %for.inc22.us-lcssa.us-lcssa
  br label %for.inc22, !dbg !3265

for.inc22:                                        ; preds = %for.inc22.us-lcssa.us, %for.inc22.us-lcssa
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3265
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3290
  %.pre24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3265
  br label %for.cond, !dbg !3265, !llvm.loop !3291

for.end24:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3293
  ret void, !dbg !3293
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3294 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3298, metadata !DIExpression()), !dbg !3299
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3300
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3300
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3301
  %conv1 = zext i1 %cmp to i8, !dbg !3302
  ret i8 %conv1, !dbg !3303
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3304 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3308, metadata !DIExpression()), !dbg !3309
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3310
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3310
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !3311
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3311
  ret %union.gimple_statement_d* %1, !dbg !3312
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3313 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3315, metadata !DIExpression()), !dbg !3316
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !3317
  ret %union.tree_node* %call, !dbg !3318
}

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !3319 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3324, metadata !DIExpression()), !dbg !3325
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3326
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3326
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !3327
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !3327
  %2 = load i64, i64* %1, align 8, !dbg !3327
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !3328
  store i64 %2, i64* %3, align 8, !dbg !3328
  ret void, !dbg !3329
}

; Function Attrs: nounwind uwtable
define dso_local void @cleanup_dead_labels() local_unnamed_addr #5 !dbg !3330 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %i135 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp149 = alloca %struct.gimple_stmt_iterator, align 8
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3379
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3379
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3379
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !3379
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !3379
  %conv = sext i32 %2 to i64, !dbg !3379
  %call = tail call i8* @xcalloc(i64 %conv, i64 16) #6, !dbg !3379
  store i8* %call, i8** bitcast (%struct.label_record** @label_for_bb to i8**), align 8, !dbg !3380
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3381
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3381
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3381
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !3381
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3381
  %6 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !3382
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3383
  br label %for.cond, !dbg !3381

for.cond:                                         ; preds = %for.end, %entry
  %8 = phi %struct.control_flow_graph* [ %4, %entry ], [ %.pre12, %for.end ], !dbg !3384
  %.pn = phi %struct.basic_block_def* [ %5, %entry ], [ %bb.0, %for.end ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3385
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3385
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3332, metadata !DIExpression()), !dbg !3386
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !3384
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3384
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %9, !dbg !3384
  br i1 %cmp, label %for.end43, label %for.body, !dbg !3381

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !3387
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !3388
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !3388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !3388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !3388
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3389
  br label %for.cond6, !dbg !3391

for.cond6:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3333, metadata !DIExpression(DW_OP_deref)), !dbg !3382
  %call7 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !3392
  %tobool = icmp eq i8 %call7, 0, !dbg !3393
  br i1 %tobool, label %for.body8, label %for.end, !dbg !3394

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3333, metadata !DIExpression(DW_OP_deref)), !dbg !3382
  %call9 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !3395
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !3341, metadata !DIExpression()), !dbg !3396
  %call10 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call9) #7, !dbg !3397
  %cmp11 = icmp eq i32 %call10, 4, !dbg !3399
  br i1 %cmp11, label %if.end, label %cleanup, !dbg !3400

if.end:                                           ; preds = %for.body8
  %call13 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call9) #7, !dbg !3401
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3337, metadata !DIExpression()), !dbg !3396
  %10 = load %struct.label_record*, %struct.label_record** @label_for_bb, align 8, !dbg !3402
  %11 = load i32, i32* %index, align 8, !dbg !3403
  %idxprom = sext i32 %11 to i64, !dbg !3402
  %label14 = getelementptr inbounds %struct.label_record, %struct.label_record* %10, i64 %idxprom, i32 0, !dbg !3404
  %12 = load %union.tree_node*, %union.tree_node** %label14, align 8, !dbg !3404
  %tobool15 = icmp eq %union.tree_node* %12, null, !dbg !3402
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !3405

if.then16:                                        ; preds = %if.end
  store %union.tree_node* %call13, %union.tree_node** %label14, align 8, !dbg !3406
  br label %cleanup, !dbg !3408

if.end21:                                         ; preds = %if.end
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3409
  %13 = bitcast i40* %artificial_flag to i64*, !dbg !3409
  %bf.load = load i64, i64* %13, align 8, !dbg !3409
  %bf.cast7 = and i64 %bf.load, 4096, !dbg !3409
  %tobool22 = icmp eq i64 %bf.cast7, 0, !dbg !3409
  br i1 %tobool22, label %land.lhs.true, label %cleanup, !dbg !3411

land.lhs.true:                                    ; preds = %if.end21
  %artificial_flag28 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3412
  %14 = bitcast i40* %artificial_flag28 to i64*, !dbg !3412
  %bf.load29 = load i64, i64* %14, align 8, !dbg !3412
  %bf.cast328 = and i64 %bf.load29, 4096, !dbg !3412
  %tobool33 = icmp eq i64 %bf.cast328, 0, !dbg !3412
  br i1 %tobool33, label %cleanup, label %if.then34, !dbg !3413

if.then34:                                        ; preds = %land.lhs.true
  store %union.tree_node* %call13, %union.tree_node** %label14, align 8, !dbg !3414
  br label %cleanup, !dbg !3416

cleanup:                                          ; preds = %land.lhs.true, %if.end21, %for.body8, %if.then34, %if.then16
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then34 ], [ false, %if.then16 ], [ true, %for.body8 ], [ false, %land.lhs.true ], [ false, %if.end21 ]
  br i1 %cleanup.dest.slot.0, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3333, metadata !DIExpression(DW_OP_deref)), !dbg !3382
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !3417
  br label %for.cond6, !dbg !3418, !llvm.loop !3419

for.end:                                          ; preds = %cleanup, %for.cond6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !3421
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3384
  %cfg4.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3422
  %.pre12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4.phi.trans.insert, align 8, !dbg !3384
  br label %for.cond, !dbg !3384, !llvm.loop !3423

for.end43:                                        ; preds = %for.cond
  %.lcssa = phi %struct.control_flow_graph* [ %8, %for.cond ], !dbg !3384
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %for.cond ], !dbg !3385
  %x_entry_block_ptr46 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa, i64 0, i32 0, !dbg !3425
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr46, align 8, !dbg !3425
  br label %for.cond48, !dbg !3425

for.cond48:                                       ; preds = %cleanup118, %for.end43
  %16 = phi %struct.basic_block_def* [ %bb.0.lcssa, %for.end43 ], [ %.pre15, %cleanup118 ], !dbg !3426
  %.pn9 = phi %struct.basic_block_def* [ %15, %for.end43 ], [ %bb.1, %cleanup118 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn9, i64 0, i32 6, !dbg !3427
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !3427
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !3332, metadata !DIExpression()), !dbg !3386
  %cmp52 = icmp eq %struct.basic_block_def* %bb.1, %16, !dbg !3426
  br i1 %cmp52, label %for.end123, label %for.body54, !dbg !3425

for.body54:                                       ; preds = %for.cond48
  %call56 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb.1) #7, !dbg !3428
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call56, metadata !3342, metadata !DIExpression()), !dbg !3429
  %tobool57 = icmp eq %union.gimple_statement_d* %call56, null, !dbg !3430
  br i1 %tobool57, label %cleanup118, label %if.end59, !dbg !3432

if.end59:                                         ; preds = %for.body54
  %call60 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call56) #7, !dbg !3433
  switch i32 %call60, label %cleanup118 [
    i32 1, label %sw.bb
    i32 5, label %sw.bb73
    i32 7, label %sw.bb93
    i32 3, label %sw.bb111
  ], !dbg !3434

sw.bb:                                            ; preds = %if.end59
  %call61 = call fastcc %union.tree_node* @gimple_cond_true_label(%union.gimple_statement_d* nonnull %call56) #7, !dbg !3435
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !3346, metadata !DIExpression()), !dbg !3436
  %call62 = call fastcc %union.tree_node* @gimple_cond_false_label(%union.gimple_statement_d* nonnull %call56) #7, !dbg !3437
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !3349, metadata !DIExpression()), !dbg !3436
  %tobool63 = icmp eq %union.tree_node* %call61, null, !dbg !3438
  br i1 %tobool63, label %if.end66, label %if.then64, !dbg !3440

if.then64:                                        ; preds = %sw.bb
  %call65 = call fastcc %union.tree_node* @main_block_label(%union.tree_node* nonnull %call61) #7, !dbg !3441
  call fastcc void @gimple_cond_set_true_label(%union.gimple_statement_d* nonnull %call56, %union.tree_node* %call65) #7, !dbg !3442
  br label %if.end66, !dbg !3442

if.end66:                                         ; preds = %sw.bb, %if.then64
  %tobool67 = icmp eq %union.tree_node* %call62, null, !dbg !3443
  br i1 %tobool67, label %cleanup118, label %if.then68, !dbg !3445

if.then68:                                        ; preds = %if.end66
  %call69 = call fastcc %union.tree_node* @main_block_label(%union.tree_node* nonnull %call62) #7, !dbg !3446
  call fastcc void @gimple_cond_set_false_label(%union.gimple_statement_d* nonnull %call56, %union.tree_node* %call69) #7, !dbg !3447
  br label %cleanup118, !dbg !3447

sw.bb73:                                          ; preds = %if.end59
  %call75 = call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* nonnull %call56) #7, !dbg !3448
  %conv76 = zext i32 %call75 to i64, !dbg !3448
  call void @llvm.dbg.value(metadata i64 %conv76, metadata !3352, metadata !DIExpression()), !dbg !3449
  call void @llvm.dbg.value(metadata i64 0, metadata !3350, metadata !DIExpression()), !dbg !3449
  br label %for.cond77, !dbg !3450

for.cond77:                                       ; preds = %for.body80, %sw.bb73
  %i74.0 = phi i64 [ 0, %sw.bb73 ], [ %inc, %for.body80 ], !dbg !3451
  call void @llvm.dbg.value(metadata i64 %i74.0, metadata !3350, metadata !DIExpression()), !dbg !3449
  %exitcond = icmp eq i64 %i74.0, %conv76, !dbg !3452
  br i1 %exitcond, label %cleanup118.loopexit, label %for.body80, !dbg !3453

for.body80:                                       ; preds = %for.cond77
  %conv81 = trunc i64 %i74.0 to i32, !dbg !3454
  %call82 = call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* nonnull %call56, i32 %conv81) #7, !dbg !3455
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !3353, metadata !DIExpression()), !dbg !3456
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3457
  %arrayidx84 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !3457
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx84, align 8, !dbg !3457
  %call85 = call fastcc %union.tree_node* @main_block_label(%union.tree_node* %17) #7, !dbg !3458
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !3357, metadata !DIExpression()), !dbg !3456
  store %union.tree_node* %call85, %union.tree_node** %arrayidx84, align 8, !dbg !3459
  %inc = add nuw nsw i64 %i74.0, 1, !dbg !3460
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3350, metadata !DIExpression()), !dbg !3449
  br label %for.cond77, !dbg !3461, !llvm.loop !3462

sw.bb93:                                          ; preds = %if.end59
  %call96 = call fastcc i32 @gimple_asm_nlabels(%union.gimple_statement_d* nonnull %call56) #7, !dbg !3464
  call void @llvm.dbg.value(metadata i32 %call96, metadata !3360, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.value(metadata i32 0, metadata !3358, metadata !DIExpression()), !dbg !3465
  br label %for.cond97, !dbg !3466

for.cond97:                                       ; preds = %for.body100, %sw.bb93
  %i94.0 = phi i32 [ 0, %sw.bb93 ], [ %inc107, %for.body100 ], !dbg !3467
  call void @llvm.dbg.value(metadata i32 %i94.0, metadata !3358, metadata !DIExpression()), !dbg !3465
  %cmp98 = icmp slt i32 %i94.0, %call96, !dbg !3468
  br i1 %cmp98, label %for.body100, label %cleanup118.loopexit11, !dbg !3469

for.body100:                                      ; preds = %for.cond97
  %call101 = call fastcc %union.tree_node* @gimple_asm_label_op(%union.gimple_statement_d* nonnull %call56, i32 %i94.0) #7, !dbg !3470
  call void @llvm.dbg.value(metadata %union.tree_node* %call101, metadata !3361, metadata !DIExpression()), !dbg !3471
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3472
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !3472
  %call103 = call fastcc %union.tree_node* @main_block_label(%union.tree_node* %19) #7, !dbg !3473
  call void @llvm.dbg.value(metadata %union.tree_node* %call103, metadata !3365, metadata !DIExpression()), !dbg !3471
  store %union.tree_node* %call103, %union.tree_node** %18, align 8, !dbg !3474
  %inc107 = add nuw nsw i32 %i94.0, 1, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %inc107, metadata !3358, metadata !DIExpression()), !dbg !3465
  br label %for.cond97, !dbg !3476, !llvm.loop !3477

sw.bb111:                                         ; preds = %if.end59
  %call112 = call fastcc zeroext i8 @computed_goto_p(%union.gimple_statement_d* nonnull %call56) #7, !dbg !3479
  %tobool113 = icmp eq i8 %call112, 0, !dbg !3479
  br i1 %tobool113, label %if.then114, label %cleanup118, !dbg !3480

if.then114:                                       ; preds = %sw.bb111
  %call115 = call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* nonnull %call56) #7, !dbg !3481
  %call116 = call fastcc %union.tree_node* @main_block_label(%union.tree_node* %call115) #7, !dbg !3482
  call void @llvm.dbg.value(metadata %union.tree_node* %call116, metadata !3366, metadata !DIExpression()), !dbg !3483
  call fastcc void @gimple_goto_set_dest(%union.gimple_statement_d* nonnull %call56, %union.tree_node* %call116) #7, !dbg !3484
  br label %cleanup118, !dbg !3485

cleanup118.loopexit:                              ; preds = %for.cond77
  br label %cleanup118, !dbg !3426

cleanup118.loopexit11:                            ; preds = %for.cond97
  br label %cleanup118, !dbg !3426

cleanup118:                                       ; preds = %cleanup118.loopexit11, %cleanup118.loopexit, %if.end66, %sw.bb111, %for.body54, %if.then68, %if.then114, %if.end59
  %.pre13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3426
  %cfg50.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre13, i64 0, i32 1, !dbg !3486
  %.pre14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg50.phi.trans.insert, align 8, !dbg !3426
  %x_exit_block_ptr51.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre14, i64 0, i32 1, !dbg !3486
  %.pre15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr51.phi.trans.insert, align 8, !dbg !3426
  br label %for.cond48, !dbg !3426, !llvm.loop !3487

for.end123:                                       ; preds = %for.cond48
  call fastcc void @cleanup_dead_labels_eh() #7, !dbg !3489
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3490
  %cfg125 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !3490
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg125, align 8, !dbg !3490
  %x_entry_block_ptr126 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 0, !dbg !3490
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr126, align 8, !dbg !3490
  %23 = bitcast %struct.gimple_stmt_iterator* %i135 to i8*, !dbg !3491
  %24 = bitcast %struct.gimple_stmt_iterator* %tmp149 to i8*, !dbg !3492
  br label %for.cond128, !dbg !3490

for.cond128:                                      ; preds = %cleanup193, %for.end123
  %.pre1618 = phi %struct.function* [ %20, %for.end123 ], [ %.pre16, %cleanup193 ]
  %25 = phi %struct.control_flow_graph* [ %21, %for.end123 ], [ %.pre17, %cleanup193 ], !dbg !3493
  %.pn10 = phi %struct.basic_block_def* [ %22, %for.end123 ], [ %bb.2, %cleanup193 ]
  %bb.2.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn10, i64 0, i32 6, !dbg !3494
  %bb.2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.2.in, align 8, !dbg !3494
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !3332, metadata !DIExpression()), !dbg !3386
  %x_exit_block_ptr131 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 1, !dbg !3493
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr131, align 8, !dbg !3493
  %cmp132 = icmp eq %struct.basic_block_def* %bb.2, %26, !dbg !3493
  br i1 %cmp132, label %for.end199, label %for.body134, !dbg !3490

for.body134:                                      ; preds = %for.cond128
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8, !dbg !3495
  %27 = load %struct.label_record*, %struct.label_record** @label_for_bb, align 8, !dbg !3496
  %index136 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 9, !dbg !3497
  %28 = load i32, i32* %index136, align 8, !dbg !3497
  %idxprom137 = sext i32 %28 to i64, !dbg !3496
  %label139 = getelementptr inbounds %struct.label_record, %struct.label_record* %27, i64 %idxprom137, i32 0, !dbg !3498
  %29 = load %union.tree_node*, %union.tree_node** %label139, align 8, !dbg !3498
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !3373, metadata !DIExpression()), !dbg !3491
  %tobool140 = icmp eq %union.tree_node* %29, null, !dbg !3499
  br i1 %tobool140, label %cleanup193, label %if.end142, !dbg !3501

if.end142:                                        ; preds = %for.body134
  %used = getelementptr inbounds %struct.label_record, %struct.label_record* %27, i64 %idxprom137, i32 1, !dbg !3502
  %30 = load i8, i8* %used, align 8, !dbg !3502
  %tobool146 = icmp eq i8 %30, 0, !dbg !3504
  %spec.select = select i1 %tobool146, %union.tree_node* null, %union.tree_node* %29, !dbg !3505
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !3373, metadata !DIExpression()), !dbg !3491
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8, !dbg !3506
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp149, %struct.basic_block_def* %bb.2) #7, !dbg !3506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %24, i64 24, i1 false), !dbg !3506
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8, !dbg !3506
  br label %for.cond150, !dbg !3507

for.cond150:                                      ; preds = %cleanup188, %if.end142
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i135, metadata !3369, metadata !DIExpression(DW_OP_deref)), !dbg !3491
  %call151 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i135) #7, !dbg !3508
  %tobool152 = icmp eq i8 %call151, 0, !dbg !3509
  br i1 %tobool152, label %for.body154, label %cleanup193.loopexit, !dbg !3510

for.body154:                                      ; preds = %for.cond150
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i135, metadata !3369, metadata !DIExpression(DW_OP_deref)), !dbg !3491
  %call157 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i135) #7, !dbg !3511
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call157, metadata !3378, metadata !DIExpression()), !dbg !3512
  %call158 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call157) #7, !dbg !3513
  %cmp159 = icmp eq i32 %call158, 4, !dbg !3515
  br i1 %cmp159, label %if.end162, label %cleanup188, !dbg !3516

if.end162:                                        ; preds = %for.body154
  %call163 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call157) #7, !dbg !3517
  call void @llvm.dbg.value(metadata %union.tree_node* %call163, metadata !3374, metadata !DIExpression()), !dbg !3512
  %cmp164 = icmp eq %union.tree_node* %call163, %spec.select, !dbg !3518
  br i1 %cmp164, label %if.then186, label %lor.lhs.false, !dbg !3520

lor.lhs.false:                                    ; preds = %if.end162
  %artificial_flag167 = getelementptr inbounds %union.tree_node, %union.tree_node* %call163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3521
  %31 = bitcast i40* %artificial_flag167 to i64*, !dbg !3521
  %bf.load168 = load i64, i64* %31, align 8, !dbg !3521
  %bf.cast1714 = and i64 %bf.load168, 4096, !dbg !3521
  %tobool172 = icmp eq i64 %bf.cast1714, 0, !dbg !3521
  br i1 %tobool172, label %if.then186, label %lor.lhs.false173, !dbg !3522

lor.lhs.false173:                                 ; preds = %lor.lhs.false
  %bf.cast1785 = and i64 %bf.load168, 256, !dbg !3523
  %tobool179 = icmp eq i64 %bf.cast1785, 0, !dbg !3523
  br i1 %tobool179, label %lor.lhs.false180, label %if.then186, !dbg !3524

lor.lhs.false180:                                 ; preds = %lor.lhs.false173
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3525
  %bf.load181 = load i64, i64* %32, align 8, !dbg !3525
  %bf.cast1846 = and i64 %bf.load181, 65536, !dbg !3525
  %tobool185 = icmp eq i64 %bf.cast1846, 0, !dbg !3525
  br i1 %tobool185, label %if.else, label %if.then186, !dbg !3526

if.then186:                                       ; preds = %lor.lhs.false180, %lor.lhs.false173, %lor.lhs.false, %if.end162
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i135, metadata !3369, metadata !DIExpression(DW_OP_deref)), !dbg !3491
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i135) #7, !dbg !3527
  br label %cleanup188, !dbg !3527

if.else:                                          ; preds = %lor.lhs.false180
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i135, metadata !3369, metadata !DIExpression(DW_OP_deref)), !dbg !3491
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %i135, i8 zeroext 1) #6, !dbg !3528
  br label %cleanup188

cleanup188:                                       ; preds = %for.body154, %if.then186, %if.else
  %cleanup.dest.slot.2 = phi i1 [ false, %for.body154 ], [ true, %if.else ], [ true, %if.then186 ]
  br i1 %cleanup.dest.slot.2, label %for.cond150, label %cleanup193.loopexit, !llvm.loop !3529

cleanup193.loopexit:                              ; preds = %cleanup188, %for.cond150
  %.pre16.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3493
  br label %cleanup193, !dbg !3531

cleanup193:                                       ; preds = %cleanup193.loopexit, %for.body134
  %.pre16 = phi %struct.function* [ %.pre16.pre, %cleanup193.loopexit ], [ %.pre1618, %for.body134 ], !dbg !3493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8, !dbg !3531
  %cfg130.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre16, i64 0, i32 1, !dbg !3532
  %.pre17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg130.phi.trans.insert, align 8, !dbg !3493
  br label %for.cond128, !dbg !3493, !llvm.loop !3533

for.end199:                                       ; preds = %for.cond128
  %33 = load i8*, i8** bitcast (%struct.label_record** @label_for_bb to i8**), align 8, !dbg !3535
  call void @free(i8* %33) #6, !dbg !3536
  ret void, !dbg !3537
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_true_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3538 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3540, metadata !DIExpression()), !dbg !3541
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !3542
  ret %union.tree_node* %call, !dbg !3543
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_false_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3544 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3546, metadata !DIExpression()), !dbg !3547
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 3) #7, !dbg !3548
  ret %union.tree_node* %call, !dbg !3549
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_true_label(%union.gimple_statement_d* %gs, %union.tree_node* %label) unnamed_addr #0 !dbg !3550 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3554, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !3555, metadata !DIExpression()), !dbg !3556
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 2, %union.tree_node* %label) #7, !dbg !3557
  ret void, !dbg !3558
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @main_block_label(%union.tree_node* %label) unnamed_addr #5 !dbg !3559 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !3563, metadata !DIExpression()), !dbg !3566
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3567
  %call = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %0, %union.tree_node* %label) #7, !dbg !3567
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3564, metadata !DIExpression()), !dbg !3566
  %1 = load %struct.label_record*, %struct.label_record** @label_for_bb, align 8, !dbg !3568
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !3569
  %2 = load i32, i32* %index, align 8, !dbg !3569
  %idxprom = sext i32 %2 to i64, !dbg !3568
  %label1 = getelementptr inbounds %struct.label_record, %struct.label_record* %1, i64 %idxprom, i32 0, !dbg !3570
  %3 = load %union.tree_node*, %union.tree_node** %label1, align 8, !dbg !3570
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3565, metadata !DIExpression()), !dbg !3566
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !3571
  br i1 %tobool, label %if.then, label %if.end, !dbg !3573

if.then:                                          ; preds = %entry
  store %union.tree_node* %label, %union.tree_node** %label1, align 8, !dbg !3574
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !3565, metadata !DIExpression()), !dbg !3566
  %.pre = load %struct.label_record*, %struct.label_record** @label_for_bb, align 8, !dbg !3576
  %.pre1 = load i32, i32* %index, align 8, !dbg !3577
  %.pre2 = sext i32 %.pre1 to i64, !dbg !3576
  br label %if.end, !dbg !3578

if.end:                                           ; preds = %entry, %if.then
  %idxprom7.pre-phi = phi i64 [ %idxprom, %entry ], [ %.pre2, %if.then ], !dbg !3576
  %4 = phi %struct.label_record* [ %1, %entry ], [ %.pre, %if.then ], !dbg !3576
  %main_label.0 = phi %union.tree_node* [ %3, %entry ], [ %label, %if.then ], !dbg !3566
  call void @llvm.dbg.value(metadata %union.tree_node* %main_label.0, metadata !3565, metadata !DIExpression()), !dbg !3566
  %used = getelementptr inbounds %struct.label_record, %struct.label_record* %4, i64 %idxprom7.pre-phi, i32 1, !dbg !3579
  store i8 1, i8* %used, align 8, !dbg !3580
  ret %union.tree_node* %main_label.0, !dbg !3581
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_false_label(%union.gimple_statement_d* %gs, %union.tree_node* %label) unnamed_addr #0 !dbg !3582 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3584, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !3585, metadata !DIExpression()), !dbg !3586
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 3, %union.tree_node* %label) #7, !dbg !3587
  ret void, !dbg !3588
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3589 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3593, metadata !DIExpression()), !dbg !3595
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !3596
  call void @llvm.dbg.value(metadata i32 %call, metadata !3594, metadata !DIExpression()), !dbg !3595
  %cmp = icmp ugt i32 %call, 1, !dbg !3597
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3597

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 3162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3597
  br label %cond.end, !dbg !3597

cond.end:                                         ; preds = %entry, %cond.true
  %sub = add i32 %call, -1, !dbg !3598
  ret i32 %sub, !dbg !3599
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !3600 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3604, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.value(metadata i32 %index, metadata !3605, metadata !DIExpression()), !dbg !3606
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !3607
  %add = add i32 %index, 1, !dbg !3607
  %cmp = icmp ugt i32 %call, %add, !dbg !3607
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3607

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 3215, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3607
  br label %cond.end, !dbg !3607

cond.end:                                         ; preds = %entry, %cond.true
  %call2 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !3608
  ret %union.tree_node* %call2, !dbg !3609
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_nlabels(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3610 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3612, metadata !DIExpression()), !dbg !3613
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !3614
  %nl = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 5, !dbg !3615
  %0 = load i8, i8* %nl, align 1, !dbg !3615
  %conv = zext i8 %0 to i32, !dbg !3616
  ret i32 %conv, !dbg !3617
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_label_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !3618 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3620, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32 %index, metadata !3621, metadata !DIExpression()), !dbg !3622
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !3623
  %nl = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 5, !dbg !3623
  %0 = load i8, i8* %nl, align 1, !dbg !3623
  %conv = zext i8 %0 to i32, !dbg !3623
  %cmp = icmp ult i32 %conv, %index, !dbg !3623
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3623

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 2710, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3623
  br label %cond.end, !dbg !3623

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !3624
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !3624
  %2 = load i8, i8* %1, align 8, !dbg !3624
  %conv3 = zext i8 %2 to i32, !dbg !3625
  %add = add i32 %conv3, %index, !dbg !3626
  %nc = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 4, !dbg !3627
  %3 = load i8, i8* %nc, align 2, !dbg !3627
  %conv5 = zext i8 %3 to i32, !dbg !3628
  %add6 = add i32 %add, %conv5, !dbg !3629
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add6) #7, !dbg !3630
  ret %union.tree_node* %call, !dbg !3631
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @computed_goto_p(%union.gimple_statement_d* %t) unnamed_addr #5 !dbg !3632 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !3636, metadata !DIExpression()), !dbg !3637
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %t) #7, !dbg !3638
  %cmp = icmp eq i32 %call, 3, !dbg !3639
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3640

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %t) #7, !dbg !3641
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3641
  %bf.load = load i64, i64* %0, align 8, !dbg !3641
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3642
  %cmp2 = icmp ne i64 %bf.cast1, 30, !dbg !3642
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %1, !dbg !3643
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3644 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3646, metadata !DIExpression()), !dbg !3647
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !3648
  ret %union.tree_node* %call, !dbg !3649
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_goto_set_dest(%union.gimple_statement_d* %gs, %union.tree_node* %dest) unnamed_addr #0 !dbg !3650 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3652, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !3653, metadata !DIExpression()), !dbg !3654
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %dest) #7, !dbg !3655
  ret void, !dbg !3656
}

; Function Attrs: nounwind uwtable
define internal fastcc void @cleanup_dead_labels_eh() unnamed_addr #5 !dbg !3657 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !3669
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3669
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3670
  %eh = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 0, !dbg !3672
  %2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3672
  %cmp = icmp eq %struct.eh_status* %2, null, !dbg !3673
  br i1 %cmp, label %cleanup, label %for.cond.preheader, !dbg !3674

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !3675

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %3 = phi %struct.eh_status* [ %.pre2, %for.inc ], [ %2, %for.cond.preheader ], !dbg !3677
  %i.0 = phi i32 [ %inc, %for.inc ], [ 1, %for.cond.preheader ], !dbg !3679
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3662, metadata !DIExpression()), !dbg !3680
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %3, i64 0, i32 2, !dbg !3677
  %4 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !3677
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %4, null, !dbg !3677
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3677

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %4, i64 0, i32 0, !dbg !3677
  br label %cond.end, !dbg !3677

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3677
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !3659, metadata !DIExpression(DW_OP_deref)), !dbg !3680
  %call = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %cond, i32 %i.0, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !3677
  %tobool6 = icmp eq i32 %call, 0, !dbg !3675
  br i1 %tobool6, label %for.end, label %for.body, !dbg !3675

for.body:                                         ; preds = %cond.end
  %5 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !3681
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %5, metadata !3659, metadata !DIExpression()), !dbg !3680
  %tobool7 = icmp eq %struct.eh_landing_pad_d* %5, null, !dbg !3681
  br i1 %tobool7, label %for.inc, label %land.lhs.true, !dbg !3683

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %5, metadata !3659, metadata !DIExpression()), !dbg !3680
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %5, i64 0, i32 2, !dbg !3684
  %6 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !3684
  %tobool8 = icmp eq %union.tree_node* %6, null, !dbg !3685
  br i1 %tobool8, label %for.inc, label %if.then9, !dbg !3686

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %5, metadata !3659, metadata !DIExpression()), !dbg !3680
  %call11 = call fastcc %union.tree_node* @main_block_label(%union.tree_node* nonnull %6) #7, !dbg !3687
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !3661, metadata !DIExpression()), !dbg !3680
  %7 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !3689
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %7, metadata !3659, metadata !DIExpression()), !dbg !3680
  %post_landing_pad12 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %7, i64 0, i32 2, !dbg !3691
  %8 = load %union.tree_node*, %union.tree_node** %post_landing_pad12, align 8, !dbg !3691
  %cmp13 = icmp eq %union.tree_node* %call11, %8, !dbg !3692
  br i1 %cmp13, label %for.inc, label %if.then14, !dbg !3693

if.then14:                                        ; preds = %if.then9
  %9 = bitcast %union.tree_node* %8 to %struct.tree_label_decl*, !dbg !3693
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %7, metadata !3659, metadata !DIExpression()), !dbg !3680
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %9, i64 0, i32 2, !dbg !3694
  store i32 0, i32* %eh_landing_pad_nr, align 4, !dbg !3696
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %7, metadata !3659, metadata !DIExpression()), !dbg !3680
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %7, i64 0, i32 4, !dbg !3697
  %10 = load i32, i32* %index, align 8, !dbg !3697
  %label_decl16 = bitcast %union.tree_node* %call11 to %struct.tree_label_decl*, !dbg !3698
  %eh_landing_pad_nr17 = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl16, i64 0, i32 2, !dbg !3698
  store i32 %10, i32* %eh_landing_pad_nr17, align 4, !dbg !3699
  br label %for.inc, !dbg !3700

for.inc:                                          ; preds = %if.then9, %land.lhs.true, %for.body, %if.then14
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3701
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3662, metadata !DIExpression()), !dbg !3680
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3677
  %eh2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 0, !dbg !3702
  %.pre2 = load %struct.eh_status*, %struct.eh_status** %eh2.phi.trans.insert, align 8, !dbg !3677
  br label %for.cond, !dbg !3703, !llvm.loop !3704

for.end:                                          ; preds = %cond.end
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3706
  %eh21 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 0, !dbg !3706
  %12 = load %struct.eh_status*, %struct.eh_status** %eh21, align 8, !dbg !3706
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %12, i64 0, i32 0, !dbg !3706
  %13 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !3706
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %13, metadata !3660, metadata !DIExpression()), !dbg !3680
  br label %for.cond22, !dbg !3706

for.cond22:                                       ; preds = %for.inc46, %for.end
  %r.0 = phi %struct.eh_region_d* [ %13, %for.end ], [ %call47, %for.inc46 ], !dbg !3707
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r.0, metadata !3660, metadata !DIExpression()), !dbg !3680
  %cmp23 = icmp eq %struct.eh_region_d* %r.0, null, !dbg !3708
  br i1 %cmp23, label %cleanup.loopexit, label %for.body24, !dbg !3706

for.body24:                                       ; preds = %for.cond22
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r.0, i64 0, i32 4, !dbg !3709
  %14 = load i32, i32* %type, align 4, !dbg !3709
  switch i32 %14, label %for.inc46 [
    i32 2, label %sw.bb36
    i32 1, label %sw.bb25
  ], !dbg !3710

sw.bb25:                                          ; preds = %for.body24
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r.0, i64 0, i32 5, !dbg !3711
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !3713
  br label %for.cond26, !dbg !3714

for.cond26:                                       ; preds = %for.inc34, %sw.bb25
  %c.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb25 ], [ %next_catch, %for.inc34 ]
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !3715
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !3663, metadata !DIExpression()), !dbg !3716
  %tobool27 = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !3717
  br i1 %tobool27, label %for.inc46.loopexit, label %for.body28, !dbg !3717

for.body28:                                       ; preds = %for.cond26
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 4, !dbg !3718
  %15 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !3718
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3661, metadata !DIExpression()), !dbg !3680
  %tobool29 = icmp eq %union.tree_node* %15, null, !dbg !3721
  br i1 %tobool29, label %for.inc34, label %if.then30, !dbg !3723

if.then30:                                        ; preds = %for.body28
  %call31 = call fastcc %union.tree_node* @main_block_label(%union.tree_node* nonnull %15) #7, !dbg !3724
  store %union.tree_node* %call31, %union.tree_node** %label, align 8, !dbg !3725
  br label %for.inc34, !dbg !3726

for.inc34:                                        ; preds = %for.body28, %if.then30
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 0, !dbg !3727
  br label %for.cond26, !dbg !3728, !llvm.loop !3729

sw.bb36:                                          ; preds = %for.body24
  %label38 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r.0, i64 0, i32 5, i32 0, i32 1, !dbg !3731
  %16 = load %union.tree_node*, %union.tree_node** %label38, align 8, !dbg !3731
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !3661, metadata !DIExpression()), !dbg !3680
  %tobool39 = icmp eq %union.tree_node* %16, null, !dbg !3732
  br i1 %tobool39, label %for.inc46, label %if.then40, !dbg !3734

if.then40:                                        ; preds = %sw.bb36
  %call41 = call fastcc %union.tree_node* @main_block_label(%union.tree_node* nonnull %16) #7, !dbg !3735
  store %union.tree_node* %call41, %union.tree_node** %label38, align 8, !dbg !3736
  br label %for.inc46, !dbg !3737

for.inc46.loopexit:                               ; preds = %for.cond26
  br label %for.inc46, !dbg !3708

for.inc46:                                        ; preds = %for.inc46.loopexit, %sw.bb36, %for.body24, %if.then40
  %call47 = call fastcc %struct.eh_region_d* @ehr_next(%struct.eh_region_d* nonnull %r.0, %struct.eh_region_d* null) #7, !dbg !3708
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call47, metadata !3660, metadata !DIExpression()), !dbg !3680
  br label %for.cond22, !dbg !3708, !llvm.loop !3738

cleanup.loopexit:                                 ; preds = %for.cond22
  br label %cleanup, !dbg !3740

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3740
  ret void, !dbg !3740
}

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @free(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @group_case_labels() local_unnamed_addr #5 !dbg !3741 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3765
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3765
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3765
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3765
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3765
  br label %for.cond, !dbg !3765

for.cond:                                         ; preds = %for.inc110, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre2, %for.inc110 ], !dbg !3766
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc110 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3767
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3767
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3743, metadata !DIExpression()), !dbg !3768
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3766
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3766
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3766
  br i1 %cmp, label %for.end112, label %for.body, !dbg !3765

for.body:                                         ; preds = %for.cond
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb.0) #7, !dbg !3769
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3744, metadata !DIExpression()), !dbg !3770
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !3771
  br i1 %tobool, label %for.inc110, label %land.lhs.true, !dbg !3772

land.lhs.true:                                    ; preds = %for.body
  %call3 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !3773
  %cmp4 = icmp eq i32 %call3, 5, !dbg !3774
  br i1 %cmp4, label %if.then, label %for.inc110, !dbg !3775

if.then:                                          ; preds = %land.lhs.true
  %call5 = tail call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* nonnull %call) #7, !dbg !3776
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3748, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3753, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3754, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3755, metadata !DIExpression()), !dbg !3777
  %call6 = tail call fastcc %union.tree_node* @gimple_switch_default_label(%union.gimple_statement_d* nonnull %call) #7, !dbg !3778
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3778
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3778
  %tobool7 = icmp eq %union.tree_node* %5, null, !dbg !3778
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !3780

land.lhs.true8:                                   ; preds = %if.then
  %call9 = tail call fastcc %union.tree_node* @gimple_switch_default_label(%union.gimple_statement_d* nonnull %call) #7, !dbg !3781
  %operands11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3781
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands11, i64 1, !dbg !3781
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !3781
  %tobool13 = icmp eq %union.tree_node* %6, null, !dbg !3781
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !3782

if.then14:                                        ; preds = %land.lhs.true8
  %call15 = tail call fastcc %union.tree_node* @gimple_switch_default_label(%union.gimple_statement_d* nonnull %call) #7, !dbg !3783
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !3754, metadata !DIExpression()), !dbg !3777
  %operands17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3785
  %arrayidx18 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands17, i64 2, !dbg !3785
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8, !dbg !3785
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3755, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i8 1, metadata !3756, metadata !DIExpression()), !dbg !3777
  br label %if.end, !dbg !3786

if.end:                                           ; preds = %land.lhs.true8, %if.then, %if.then14
  %has_default.0 = phi i32 [ 1, %if.then14 ], [ 0, %land.lhs.true8 ], [ 0, %if.then ]
  %default_label.0 = phi %union.tree_node* [ %7, %if.then14 ], [ null, %land.lhs.true8 ], [ null, %if.then ], !dbg !3777
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.0, metadata !3755, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %has_default.0, metadata !3751, metadata !DIExpression()), !dbg !3777
  br label %while.cond, !dbg !3787

while.cond:                                       ; preds = %cleanup86, %if.end
  %new_size.0 = phi i32 [ %call5, %if.end ], [ %new_size.4, %cleanup86 ], !dbg !3777
  %i.1 = phi i32 [ %has_default.0, %if.end ], [ %i.5, %cleanup86 ], !dbg !3777
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3751, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %new_size.0, metadata !3753, metadata !DIExpression()), !dbg !3777
  %cmp23 = icmp slt i32 %i.1, %call5, !dbg !3788
  br i1 %cmp23, label %while.body, label %for.cond92.preheader, !dbg !3787

for.cond92.preheader:                             ; preds = %while.cond
  %new_size.0.lcssa = phi i32 [ %new_size.0, %while.cond ], !dbg !3777
  call void @llvm.dbg.value(metadata i32 %new_size.0.lcssa, metadata !3753, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %new_size.0.lcssa, metadata !3753, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %new_size.0.lcssa, metadata !3753, metadata !DIExpression()), !dbg !3777
  br label %for.cond92, !dbg !3789

while.body:                                       ; preds = %while.cond
  %call24 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* nonnull %call, i32 %i.1) #7, !dbg !3791
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !3757, metadata !DIExpression()), !dbg !3792
  %tobool25 = icmp eq %union.tree_node* %call24, null, !dbg !3793
  br i1 %tobool25, label %cond.true, label %cond.end, !dbg !3793

cond.true:                                        ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1325, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3793
  br label %cond.end, !dbg !3793

cond.end:                                         ; preds = %while.body, %cond.true
  %operands27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3794
  %arrayidx28 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands27, i64 2, !dbg !3794
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx28, align 8, !dbg !3794
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3759, metadata !DIExpression()), !dbg !3792
  %cmp29 = icmp eq %union.tree_node* %8, %default_label.0, !dbg !3795
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !3797

if.then30:                                        ; preds = %cond.end
  tail call fastcc void @gimple_switch_set_label(%union.gimple_statement_d* nonnull %call, i32 %i.1, %union.tree_node* null) #7, !dbg !3798
  %inc = add nsw i32 %i.1, 1, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3751, metadata !DIExpression()), !dbg !3777
  %dec = add nsw i32 %new_size.0, -1, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3753, metadata !DIExpression()), !dbg !3777
  br label %cleanup86, !dbg !3802, !llvm.loop !3803

if.end31:                                         ; preds = %cond.end
  %arrayidx34 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands27, i64 1, !dbg !3805
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx34, align 8, !dbg !3805
  %tobool35 = icmp eq %union.tree_node* %9, null, !dbg !3805
  br i1 %tobool35, label %cond.false40, label %cond.true36, !dbg !3805

cond.true36:                                      ; preds = %if.end31
  br label %cond.end44, !dbg !3805

cond.false40:                                     ; preds = %if.end31
  br label %cond.end44, !dbg !3805

cond.end44:                                       ; preds = %cond.false40, %cond.true36
  %cond45.in = phi %union.tree_node** [ %arrayidx34, %cond.true36 ], [ %operands27, %cond.false40 ]
  %cond45 = load %union.tree_node*, %union.tree_node** %cond45.in, align 8, !dbg !3805
  call void @llvm.dbg.value(metadata %union.tree_node* %cond45, metadata !3760, metadata !DIExpression()), !dbg !3792
  %inc46 = add nsw i32 %i.1, 1, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %inc46, metadata !3751, metadata !DIExpression()), !dbg !3777
  br label %while.cond47, !dbg !3807

while.cond47:                                     ; preds = %cleanup, %cond.end44
  %new_size.1 = phi i32 [ %new_size.0, %cond.end44 ], [ %new_size.2, %cleanup ], !dbg !3777
  %i.2 = phi i32 [ %inc46, %cond.end44 ], [ %i.3, %cleanup ], !dbg !3792
  %base_high.0 = phi %union.tree_node* [ %cond45, %cond.end44 ], [ %base_high.1, %cleanup ], !dbg !3792
  call void @llvm.dbg.value(metadata %union.tree_node* %base_high.0, metadata !3760, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !3751, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %new_size.1, metadata !3753, metadata !DIExpression()), !dbg !3777
  %cmp48 = icmp slt i32 %i.2, %call5, !dbg !3808
  br i1 %cmp48, label %while.body49, label %cleanup86.loopexit, !dbg !3807

while.body49:                                     ; preds = %while.cond47
  %call50 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* nonnull %call, i32 %i.2) #7, !dbg !3809
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !3761, metadata !DIExpression()), !dbg !3810
  %operands52 = getelementptr inbounds %union.tree_node, %union.tree_node* %call50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3811
  %arrayidx53 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands52, i64 2, !dbg !3811
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8, !dbg !3811
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !3763, metadata !DIExpression()), !dbg !3810
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !3812
  %call54 = tail call %union.tree_node* @int_const_binop(i32 63, %union.tree_node* %base_high.0, %union.tree_node* %11, i32 1) #6, !dbg !3813
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !3764, metadata !DIExpression()), !dbg !3810
  %cmp55 = icmp eq %union.tree_node* %10, %8, !dbg !3814
  br i1 %cmp55, label %land.lhs.true56, label %cleanup, !dbg !3816

land.lhs.true56:                                  ; preds = %while.body49
  %12 = load %union.tree_node*, %union.tree_node** %operands52, align 8, !dbg !3817
  %call60 = tail call i32 @tree_int_cst_equal(%union.tree_node* %12, %union.tree_node* %call54) #6, !dbg !3818
  %tobool61 = icmp eq i32 %call60, 0, !dbg !3818
  br i1 %tobool61, label %cleanup, label %if.then62, !dbg !3819

if.then62:                                        ; preds = %land.lhs.true56
  %arrayidx65 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands52, i64 1, !dbg !3820
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx65, align 8, !dbg !3820
  %tobool66 = icmp eq %union.tree_node* %13, null, !dbg !3820
  br i1 %tobool66, label %cond.false71, label %cond.true67, !dbg !3820

cond.true67:                                      ; preds = %if.then62
  br label %cond.end75, !dbg !3820

cond.false71:                                     ; preds = %if.then62
  br label %cond.end75, !dbg !3820

cond.end75:                                       ; preds = %cond.false71, %cond.true67
  %cond76.in = phi %union.tree_node** [ %arrayidx65, %cond.true67 ], [ %operands52, %cond.false71 ]
  %cond76 = load %union.tree_node*, %union.tree_node** %cond76.in, align 8, !dbg !3820
  call void @llvm.dbg.value(metadata %union.tree_node* %cond76, metadata !3760, metadata !DIExpression()), !dbg !3792
  store %union.tree_node* %cond76, %union.tree_node** %arrayidx34, align 8, !dbg !3822
  tail call fastcc void @gimple_switch_set_label(%union.gimple_statement_d* nonnull %call, i32 %i.2, %union.tree_node* null) #7, !dbg !3823
  %dec80 = add nsw i32 %new_size.1, -1, !dbg !3824
  call void @llvm.dbg.value(metadata i32 %dec80, metadata !3753, metadata !DIExpression()), !dbg !3777
  %inc81 = add nsw i32 %i.2, 1, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %inc81, metadata !3751, metadata !DIExpression()), !dbg !3777
  br label %cleanup, !dbg !3826

cleanup:                                          ; preds = %land.lhs.true56, %while.body49, %cond.end75
  %new_size.2 = phi i32 [ %dec80, %cond.end75 ], [ %new_size.1, %land.lhs.true56 ], [ %new_size.1, %while.body49 ], !dbg !3777
  %i.3 = phi i32 [ %inc81, %cond.end75 ], [ %i.2, %land.lhs.true56 ], [ %i.2, %while.body49 ], !dbg !3792
  %base_high.1 = phi %union.tree_node* [ %cond76, %cond.end75 ], [ %base_high.0, %land.lhs.true56 ], [ %base_high.0, %while.body49 ], !dbg !3792
  %cleanup.dest.slot.0 = phi i1 [ true, %cond.end75 ], [ false, %land.lhs.true56 ], [ false, %while.body49 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base_high.1, metadata !3760, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !3751, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %new_size.2, metadata !3753, metadata !DIExpression()), !dbg !3777
  br i1 %cleanup.dest.slot.0, label %while.cond47, label %cleanup86.loopexit, !llvm.loop !3827

cleanup86.loopexit:                               ; preds = %cleanup, %while.cond47
  %new_size.4.ph = phi i32 [ %new_size.1, %while.cond47 ], [ %new_size.2, %cleanup ]
  %i.5.ph = phi i32 [ %i.2, %while.cond47 ], [ %i.3, %cleanup ]
  br label %cleanup86

cleanup86:                                        ; preds = %cleanup86.loopexit, %if.then30
  %new_size.4 = phi i32 [ %dec, %if.then30 ], [ %new_size.4.ph, %cleanup86.loopexit ], !dbg !3792
  %i.5 = phi i32 [ %inc, %if.then30 ], [ %i.5.ph, %cleanup86.loopexit ], !dbg !3792
  call void @llvm.dbg.value(metadata i32 %i.5, metadata !3751, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %new_size.4, metadata !3753, metadata !DIExpression()), !dbg !3777
  br label %while.cond

for.cond92:                                       ; preds = %for.cond92.preheader, %while.end100
  %j.0 = phi i32 [ %inc99.lcssa, %while.end100 ], [ 0, %for.cond92.preheader ], !dbg !3828
  %i.6 = phi i32 [ %inc103, %while.end100 ], [ 0, %for.cond92.preheader ], !dbg !3828
  call void @llvm.dbg.value(metadata i32 %i.6, metadata !3751, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3752, metadata !DIExpression()), !dbg !3777
  %cmp93 = icmp slt i32 %i.6, %new_size.0.lcssa, !dbg !3829
  br i1 %cmp93, label %while.cond95.preheader, label %for.end, !dbg !3789

while.cond95.preheader:                           ; preds = %for.cond92
  br label %while.cond95, !dbg !3831

while.cond95:                                     ; preds = %while.cond95.preheader, %while.cond95
  %j.1 = phi i32 [ %inc99, %while.cond95 ], [ %j.0, %while.cond95.preheader ], !dbg !3828
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !3752, metadata !DIExpression()), !dbg !3777
  %call96 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* nonnull %call, i32 %j.1) #7, !dbg !3833
  %tobool97 = icmp eq %union.tree_node* %call96, null, !dbg !3834
  %inc99 = add nsw i32 %j.1, 1, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %inc99, metadata !3752, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %inc99, metadata !3752, metadata !DIExpression()), !dbg !3777
  br i1 %tobool97, label %while.cond95, label %while.end100, !dbg !3831, !llvm.loop !3836

while.end100:                                     ; preds = %while.cond95
  %j.1.lcssa = phi i32 [ %j.1, %while.cond95 ], !dbg !3828
  %inc99.lcssa = phi i32 [ %inc99, %while.cond95 ], !dbg !3835
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !3752, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !3752, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !3752, metadata !DIExpression()), !dbg !3777
  %call102 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* nonnull %call, i32 %j.1.lcssa) #7, !dbg !3838
  tail call fastcc void @gimple_switch_set_label(%union.gimple_statement_d* nonnull %call, i32 %i.6, %union.tree_node* %call102) #7, !dbg !3839
  %inc103 = add nuw nsw i32 %i.6, 1, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %inc103, metadata !3751, metadata !DIExpression()), !dbg !3777
  br label %for.cond92, !dbg !3841, !llvm.loop !3842

for.end:                                          ; preds = %for.cond92
  %cmp104 = icmp sgt i32 %new_size.0.lcssa, %call5, !dbg !3844
  br i1 %cmp104, label %cond.true105, label %cond.end107, !dbg !3844

cond.true105:                                     ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1380, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3844
  br label %cond.end107, !dbg !3844

cond.end107:                                      ; preds = %for.end, %cond.true105
  tail call fastcc void @gimple_switch_set_num_labels(%union.gimple_statement_d* nonnull %call, i32 %new_size.0.lcssa) #7, !dbg !3845
  br label %for.inc110, !dbg !3846

for.inc110:                                       ; preds = %for.body, %land.lhs.true, %cond.end107
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3766
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3847
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3766
  br label %for.cond, !dbg !3766, !llvm.loop !3848

for.end112:                                       ; preds = %for.cond
  ret void, !dbg !3850
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_switch_default_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3851 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3853, metadata !DIExpression()), !dbg !3854
  %call = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !3855
  ret %union.tree_node* %call, !dbg !3856
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_switch_set_label(%union.gimple_statement_d* %gs, i32 %index, %union.tree_node* %label) unnamed_addr #0 !dbg !3857 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3861, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i32 %index, metadata !3862, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !3863, metadata !DIExpression()), !dbg !3864
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !3865
  %add = add i32 %index, 1, !dbg !3865
  %cmp = icmp ugt i32 %call, %add, !dbg !3865
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3865

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 3225, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3865
  br label %cond.end, !dbg !3865

cond.end:                                         ; preds = %entry, %cond.true
  %cmp1 = icmp eq %union.tree_node* %label, null, !dbg !3866
  br i1 %cmp1, label %cond.end5, label %lor.lhs.false, !dbg !3866

lor.lhs.false:                                    ; preds = %cond.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3866
  %bf.load = load i64, i64* %0, align 8, !dbg !3866
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3866
  %cmp2 = icmp eq i64 %bf.cast1, 139, !dbg !3866
  br i1 %cmp2, label %cond.end5, label %cond.true3, !dbg !3866

cond.true3:                                       ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 3226, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3866
  br label %cond.end5, !dbg !3866

cond.end5:                                        ; preds = %cond.end, %lor.lhs.false, %cond.true3
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %add, %union.tree_node* %label) #7, !dbg !3867
  ret void, !dbg !3868
}

declare dso_local %union.tree_node* @int_const_binop(i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_switch_set_num_labels(%union.gimple_statement_d* %g, i32 %nlabels) unnamed_addr #0 !dbg !3869 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3873, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i32 %nlabels, metadata !3874, metadata !DIExpression()), !dbg !3875
  %add = add i32 %nlabels, 1, !dbg !3876
  tail call fastcc void @gimple_set_num_ops(%union.gimple_statement_d* %g, i32 %add) #7, !dbg !3877
  ret void, !dbg !3878
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d* %head) local_unnamed_addr #5 !dbg !3879 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !3885, metadata !DIExpression()), !dbg !3887
  br label %for.cond, !dbg !3888

for.cond:                                         ; preds = %for.inc, %entry
  %head.pn = phi %struct.ssa_use_operand_d* [ %head, %entry ], [ %ptr.0, %for.inc ]
  %ptr.0.in = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head.pn, i64 0, i32 1, !dbg !3890
  %ptr.0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %ptr.0.in, align 8, !dbg !3890
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %ptr.0, metadata !3886, metadata !DIExpression()), !dbg !3887
  %cmp = icmp eq %struct.ssa_use_operand_d* %ptr.0, %head, !dbg !3891
  br i1 %cmp, label %cleanup, label %for.body, !dbg !3893

for.body:                                         ; preds = %for.cond
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %ptr.0, i64 0, i32 2, i32 0, !dbg !3894
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3894
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %0) #7, !dbg !3896
  %tobool = icmp eq i8 %call, 0, !dbg !3896
  br i1 %tobool, label %cleanup, label %for.inc, !dbg !3897

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !3898, !llvm.loop !3899

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !3887
  ret i8 %retval.0, !dbg !3901
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3902 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3906, metadata !DIExpression()), !dbg !3907
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !3908
  %cmp = icmp eq i32 %call, 2, !dbg !3909
  %conv1 = zext i1 %cmp to i8, !dbg !3908
  ret i8 %conv1, !dbg !3910
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d** %use_p, %union.gimple_statement_d** %stmt) local_unnamed_addr #5 !dbg !3911 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !3917, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d** %use_p, metadata !3918, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !3919, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* null, metadata !3921, metadata !DIExpression()), !dbg !3922
  br label %for.cond, !dbg !3923

for.cond:                                         ; preds = %for.inc, %entry
  %head.pn = phi %struct.ssa_use_operand_d* [ %head, %entry ], [ %ptr.0, %for.inc ]
  %single_use.0 = phi %struct.ssa_use_operand_d* [ null, %entry ], [ %single_use.1, %for.inc ], !dbg !3925
  %ptr.0.in = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head.pn, i64 0, i32 1, !dbg !3926
  %ptr.0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %ptr.0.in, align 8, !dbg !3926
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %single_use.0, metadata !3921, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %ptr.0, metadata !3920, metadata !DIExpression()), !dbg !3922
  %cmp = icmp eq %struct.ssa_use_operand_d* %ptr.0, %head, !dbg !3927
  br i1 %cmp, label %for.end, label %for.body, !dbg !3929

for.body:                                         ; preds = %for.cond
  %stmt1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %ptr.0, i64 0, i32 2, i32 0, !dbg !3930
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt1, align 8, !dbg !3930
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %0) #7, !dbg !3932
  %tobool = icmp eq i8 %call, 0, !dbg !3932
  br i1 %tobool, label %if.then, label %for.inc, !dbg !3933

if.then:                                          ; preds = %for.body
  %tobool2 = icmp eq %struct.ssa_use_operand_d* %single_use.0, null, !dbg !3934
  br i1 %tobool2, label %for.inc, label %for.end, !dbg !3937

for.inc:                                          ; preds = %if.then, %for.body
  %single_use.1 = phi %struct.ssa_use_operand_d* [ %single_use.0, %for.body ], [ %ptr.0, %if.then ], !dbg !3922
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %single_use.1, metadata !3921, metadata !DIExpression()), !dbg !3922
  br label %for.cond, !dbg !3938, !llvm.loop !3939

for.end:                                          ; preds = %if.then, %for.cond
  %single_use.2 = phi %struct.ssa_use_operand_d* [ %single_use.0, %for.cond ], [ null, %if.then ], !dbg !3922
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %single_use.2, metadata !3921, metadata !DIExpression()), !dbg !3922
  %tobool6 = icmp eq %struct.ssa_use_operand_d** %use_p, null, !dbg !3941
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !3943

if.then7:                                         ; preds = %for.end
  store %struct.ssa_use_operand_d* %single_use.2, %struct.ssa_use_operand_d** %use_p, align 8, !dbg !3944
  br label %if.end8, !dbg !3945

if.end8:                                          ; preds = %for.end, %if.then7
  %tobool9 = icmp eq %union.gimple_statement_d** %stmt, null, !dbg !3946
  br i1 %tobool9, label %if.end14, label %if.then10, !dbg !3948

if.then10:                                        ; preds = %if.end8
  %tobool11 = icmp eq %struct.ssa_use_operand_d* %single_use.2, null, !dbg !3949
  br i1 %tobool11, label %cond.end, label %cond.true, !dbg !3949

cond.true:                                        ; preds = %if.then10
  %stmt13 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %single_use.2, i64 0, i32 2, i32 0, !dbg !3950
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt13, align 8, !dbg !3950
  br label %cond.end, !dbg !3949

cond.end:                                         ; preds = %if.then10, %cond.true
  %cond = phi %union.gimple_statement_d* [ %1, %cond.true ], [ null, %if.then10 ], !dbg !3949
  store %union.gimple_statement_d* %cond, %union.gimple_statement_d** %stmt, align 8, !dbg !3951
  br label %if.end14, !dbg !3952

if.end14:                                         ; preds = %if.end8, %cond.end
  %tobool15 = icmp ne %struct.ssa_use_operand_d* %single_use.2, null, !dbg !3953
  %conv = zext i1 %tobool15 to i8, !dbg !3954
  ret i8 %conv, !dbg !3955
}

; Function Attrs: nounwind uwtable
define dso_local void @replace_uses_by(%union.tree_node* %name, %union.tree_node* %val) local_unnamed_addr #5 !dbg !3956 {
entry:
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  %loop = alloca %struct.loop*, align 8
  %li = alloca %struct.loop_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3960, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !3961, metadata !DIExpression()), !dbg !3992
  %0 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !3993
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !3993
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3962, metadata !DIExpression(DW_OP_deref)), !dbg !3992
  %call = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %name) #7, !dbg !3994
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3971, metadata !DIExpression()), !dbg !3992
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3995
  br label %for.cond, !dbg !3994

for.cond:                                         ; preds = %for.inc47, %entry
  %stmt.0 = phi %union.gimple_statement_d* [ %call, %entry ], [ %call48, %for.inc47 ], !dbg !4003
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !3971, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3962, metadata !DIExpression(DW_OP_deref)), !dbg !3992
  %call1 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4004
  %tobool = icmp eq i8 %call1, 0, !dbg !4004
  br i1 %tobool, label %for.body, label %for.end49, !dbg !3994

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3962, metadata !DIExpression(DW_OP_deref)), !dbg !3992
  %call2 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4005
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call2, metadata !3970, metadata !DIExpression()), !dbg !3992
  br label %for.cond3, !dbg !4005

for.cond3:                                        ; preds = %for.inc, %for.body
  %use.0 = phi %struct.ssa_use_operand_d* [ %call2, %for.body ], [ %call16, %for.inc ], !dbg !4006
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use.0, metadata !3970, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3962, metadata !DIExpression(DW_OP_deref)), !dbg !3992
  %call4 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4007
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4007
  br i1 %tobool5, label %for.body7, label %for.end, !dbg !4005

for.body7:                                        ; preds = %for.cond3
  call void @replace_exp(%struct.ssa_use_operand_d* %use.0, %union.tree_node* %val) #6, !dbg !4008
  %call8 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #7, !dbg !4009
  %cmp = icmp eq i32 %call8, 16, !dbg !4010
  br i1 %cmp, label %if.then, label %for.inc, !dbg !4011

if.then:                                          ; preds = %for.body7
  %call9 = call fastcc i32 @phi_arg_index_from_use(%struct.ssa_use_operand_d* %use.0) #7, !dbg !4012
  %conv = sext i32 %call9 to i64, !dbg !4012
  %call10 = call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %stmt.0, i64 %conv) #7, !dbg !4013
  call void @llvm.dbg.value(metadata %struct.edge_def* %call10, metadata !3972, metadata !DIExpression()), !dbg !3992
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 7, !dbg !4014
  %2 = load i32, i32* %flags, align 8, !dbg !4014
  %and = and i32 %2, 2, !dbg !4015
  %tobool11 = icmp eq i32 %and, 0, !dbg !4015
  br i1 %tobool11, label %for.inc, label %if.then12, !dbg !4016

if.then12:                                        ; preds = %if.then
  %call13 = call zeroext i8 @is_gimple_reg(%union.tree_node* %name) #6, !dbg !4017
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4017
  br i1 %tobool14, label %cond.end, label %cond.true, !dbg !4017

cond.true:                                        ; preds = %if.then12
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1518, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4017
  br label %cond.end, !dbg !4017

cond.end:                                         ; preds = %if.then12, %cond.true
  %bf.load = load i64, i64* %1, align 8, !dbg !4018
  %bf.set = or i64 %bf.load, 4194304, !dbg !4018
  store i64 %bf.set, i64* %1, align 8, !dbg !4018
  br label %for.inc, !dbg !4019

for.inc:                                          ; preds = %if.then, %for.body7, %cond.end
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3962, metadata !DIExpression(DW_OP_deref)), !dbg !3992
  %call16 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4007
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !3970, metadata !DIExpression()), !dbg !3992
  br label %for.cond3, !dbg !4007, !llvm.loop !4020

for.end:                                          ; preds = %for.cond3
  %call17 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #7, !dbg !4022
  %cmp18 = icmp eq i32 %call17, 16, !dbg !4023
  br i1 %cmp18, label %for.inc47, label %if.then20, !dbg !4024

if.then20:                                        ; preds = %for.end
  %call21 = call zeroext i8 @fold_stmt_inplace(%union.gimple_statement_d* %stmt.0) #6, !dbg !4025
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cfgcleanup_altered_bbs, align 8, !dbg !4026
  %tobool22 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !4026
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !4028

if.then23:                                        ; preds = %if.then20
  %call24 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt.0) #7, !dbg !4029
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call24, i64 0, i32 9, !dbg !4030
  %4 = load i32, i32* %index, align 8, !dbg !4030
  %call25 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %3, i32 %4) #6, !dbg !4031
  br label %if.end26, !dbg !4031

if.end26:                                         ; preds = %if.then20, %if.then23
  call void @llvm.dbg.value(metadata i64 0, metadata !3973, metadata !DIExpression()), !dbg !4032
  br label %for.cond27, !dbg !4033

for.cond27:                                       ; preds = %for.inc43, %if.end26
  %i.0 = phi i64 [ 0, %if.end26 ], [ %inc, %for.inc43 ], !dbg !4034
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3973, metadata !DIExpression()), !dbg !4032
  %call28 = call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt.0) #7, !dbg !4035
  %conv29 = zext i32 %call28 to i64, !dbg !4035
  %cmp30 = icmp ult i64 %i.0, %conv29, !dbg !4036
  br i1 %cmp30, label %for.body32, label %for.end44, !dbg !4037

for.body32:                                       ; preds = %for.cond27
  %conv33 = trunc i64 %i.0 to i32, !dbg !4038
  %call34 = call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt.0, i32 %conv33) #7, !dbg !4039
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !3979, metadata !DIExpression()), !dbg !4040
  %tobool35 = icmp eq %union.tree_node* %call34, null, !dbg !4041
  br i1 %tobool35, label %for.inc43, label %land.lhs.true, !dbg !4043

land.lhs.true:                                    ; preds = %for.body32
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4044
  %bf.load37 = load i64, i64* %5, align 8, !dbg !4044
  %bf.cast1 = and i64 %bf.load37, 65535, !dbg !4045
  %cmp39 = icmp eq i64 %bf.cast1, 121, !dbg !4045
  br i1 %cmp39, label %if.then41, label %for.inc43, !dbg !4046

if.then41:                                        ; preds = %land.lhs.true
  call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* nonnull %call34) #6, !dbg !4047
  br label %for.inc43, !dbg !4047

for.inc43:                                        ; preds = %for.body32, %land.lhs.true, %if.then41
  %inc = add nuw nsw i64 %i.0, 1, !dbg !4048
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3973, metadata !DIExpression()), !dbg !4032
  br label %for.cond27, !dbg !4049, !llvm.loop !4050

for.end44:                                        ; preds = %for.cond27
  %call45 = call zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d* %stmt.0, %union.gimple_statement_d* %stmt.0) #6, !dbg !4052
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt.0) #7, !dbg !4053
  br label %for.inc47, !dbg !4054

for.inc47:                                        ; preds = %for.end, %for.end44
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !3962, metadata !DIExpression(DW_OP_deref)), !dbg !3992
  %call48 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !4004
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call48, metadata !3971, metadata !DIExpression()), !dbg !3992
  br label %for.cond, !dbg !4004, !llvm.loop !4055

for.end49:                                        ; preds = %for.cond
  %call50 = call fastcc zeroext i8 @has_zero_uses(%union.tree_node* %name) #7, !dbg !4057
  %tobool51 = icmp eq i8 %call50, 0, !dbg !4057
  br i1 %tobool51, label %cond.true52, label %cond.end54, !dbg !4057

cond.true52:                                      ; preds = %for.end49
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1548, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4057
  br label %cond.end54, !dbg !4057

cond.end54:                                       ; preds = %for.end49, %cond.true52
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4058
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 4, !dbg !4058
  %7 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4058
  %tobool56 = icmp eq %struct.loops* %7, null, !dbg !4058
  br i1 %tobool56, label %if.end63, label %if.then57, !dbg !4059

if.then57:                                        ; preds = %cond.end54
  %8 = bitcast %struct.loop** %loop to i8*, !dbg !4060
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !4060
  %9 = bitcast %struct.loop_iterator* %li to i8*, !dbg !4061
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8, !dbg !4061
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3983, metadata !DIExpression(DW_OP_deref)), !dbg !4062
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3986, metadata !DIExpression(DW_OP_deref)), !dbg !4062
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #7, !dbg !4063
  br label %for.cond58, !dbg !4063

for.cond58:                                       ; preds = %for.body60, %if.then57
  %10 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4065
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !3983, metadata !DIExpression()), !dbg !4062
  %tobool59 = icmp eq %struct.loop* %10, null, !dbg !4063
  br i1 %tobool59, label %for.end62, label %for.body60, !dbg !4063

for.body60:                                       ; preds = %for.cond58
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !3983, metadata !DIExpression()), !dbg !4062
  call void @substitute_in_loop_info(%struct.loop* nonnull %10, %union.tree_node* %name, %union.tree_node* %val) #6, !dbg !4067
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3983, metadata !DIExpression(DW_OP_deref)), !dbg !4062
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3986, metadata !DIExpression(DW_OP_deref)), !dbg !4062
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !4065
  br label %for.cond58, !dbg !4065, !llvm.loop !4069

for.end62:                                        ; preds = %for.cond58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8, !dbg !4071
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !4071
  br label %if.end63, !dbg !4072

if.end63:                                         ; preds = %cond.end54, %for.end62
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !4073
  ret void, !dbg !4073
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !4074 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4080, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4081, metadata !DIExpression()), !dbg !4082
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4083
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !4084
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !4085
  store i40* %imm_uses, i40** %0, align 8, !dbg !4085
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !4086
  %1 = bitcast i40* %next to i64*, !dbg !4086
  %2 = load i64, i64* %1, align 8, !dbg !4086
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !4087
  store i64 %2, i64* %3, align 8, !dbg !4087
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !4088
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !4089
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !4090
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4091
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !4092
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !4093
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !4094
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !4095
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !4096
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !4097
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !4098
  %tobool = icmp eq i8 %call, 0, !dbg !4098
  br i1 %tobool, label %if.end, label %return, !dbg !4100

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4101
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !4101
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !4102
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !4103
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !4103
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !4103
  br label %return, !dbg !4104

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !4082
  ret %union.gimple_statement_d* %retval.0, !dbg !4105
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !4106 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4112, metadata !DIExpression()), !dbg !4113
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4114
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !4114
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !4115
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !4115
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !4116
  %conv1 = zext i1 %cmp to i8, !dbg !4117
  ret i8 %conv1, !dbg !4118
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !4119 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4123, metadata !DIExpression()), !dbg !4124
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4125
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !4125
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !4126
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !4126
  %2 = load i64, i64* %1, align 8, !dbg !4126
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !4127
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !4128
  store i64 %2, i64* %3, align 8, !dbg !4128
  ret %struct.ssa_use_operand_d* %0, !dbg !4129
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !4130 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4132, metadata !DIExpression()), !dbg !4133
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4134
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !4134
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !4135
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !4136
  %conv1 = zext i1 %cmp to i8, !dbg !4137
  ret i8 %conv1, !dbg !4138
}

declare dso_local void @replace_exp(%struct.ssa_use_operand_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !4139 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4143, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i64 %i, metadata !4144, metadata !DIExpression()), !dbg !4145
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !4146
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !4146
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4146
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4146
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4146

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !4146
  %preds2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call1, i64 0, i32 0, !dbg !4146
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds2, align 8, !dbg !4146
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !4146
  br label %cond.end, !dbg !4146

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4146
  %conv = trunc i64 %i to i32, !dbg !4146
  %call3 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !4146
  ret %struct.edge_def* %call3, !dbg !4147
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @phi_arg_index_from_use(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !4148 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4152, metadata !DIExpression()), !dbg !4157
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 2, i32 0, !dbg !4158
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4158
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !4156, metadata !DIExpression()), !dbg !4157
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !4159
  %cmp = icmp eq i32 %call, 16, !dbg !4159
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4159

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), i32 544, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4159
  br label %cond.end, !dbg !4159

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4153, metadata !DIExpression()), !dbg !4157
  %call1 = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %0, i32 0) #7, !dbg !4160
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call1, metadata !4154, metadata !DIExpression()), !dbg !4157
  %sub.ptr.lhs.cast = ptrtoint %struct.ssa_use_operand_d* %use to i64, !dbg !4161
  %sub.ptr.rhs.cast = ptrtoint %struct.phi_arg_d* %call1 to i64, !dbg !4161
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4161
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 48, !dbg !4161
  call void @llvm.dbg.value(metadata i64 %sub.ptr.div, metadata !4155, metadata !DIExpression()), !dbg !4157
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !4162
  ret i32 %conv, !dbg !4163
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !4164 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4166, metadata !DIExpression()), !dbg !4167
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !4168
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !4168
  %1 = load i64, i64* %0, align 8, !dbg !4168
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !4169
  store i64 %1, i64* %2, align 8, !dbg !4169
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !4170
  %tobool = icmp eq i8 %call, 0, !dbg !4170
  br i1 %tobool, label %if.else, label %return, !dbg !4172

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4173
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !4173
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !4175
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !4175
  %5 = load i64, i64* %4, align 8, !dbg !4175
  store i64 %5, i64* %0, align 8, !dbg !4176
  br label %return, !dbg !4177

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !4178
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !4179
}

declare dso_local zeroext i8 @fold_stmt_inplace(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4180 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4184, metadata !DIExpression()), !dbg !4185
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !4186
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4186
  ret %struct.basic_block_def* %0, !dbg !4187
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4188 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4190, metadata !DIExpression()), !dbg !4191
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !4192
  %0 = load i32, i32* %num_ops, align 4, !dbg !4192
  ret i32 %0, !dbg !4193
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4194 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4196, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %i, metadata !4197, metadata !DIExpression()), !dbg !4198
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4199
  %tobool = icmp eq i8 %call, 0, !dbg !4199
  br i1 %tobool, label %return, label %if.then, !dbg !4201

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4202
  %idxprom = zext i32 %i to i64, !dbg !4202
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4202
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4202
  br label %return, !dbg !4204

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4205
  ret %union.tree_node* %retval.0, !dbg !4206
}

declare dso_local void @recompute_tree_invariant_for_addr_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !4207 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !4209, metadata !DIExpression()), !dbg !4210
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !4211
  %tobool = icmp eq i8 %call, 0, !dbg !4211
  br i1 %tobool, label %if.end, label %if.then, !dbg !4213

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !4214
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !4216
  br label %if.end, !dbg !4217

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4218
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !4219 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !4223, metadata !DIExpression()), !dbg !4224
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !4225
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !4225
  %1 = load i64, i64* %0, align 8, !dbg !4225
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !4226
  store i64 %1, i64* %2, align 8, !dbg !4226
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !4227
  %tobool = icmp eq i8 %call, 0, !dbg !4227
  br i1 %tobool, label %if.end4, label %if.then, !dbg !4229

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !4230
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4230
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !4233
  br i1 %cmp, label %return, label %if.then2, !dbg !4234

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !4235
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #7, !dbg !4236
  br label %return, !dbg !4236

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !4237
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !4237
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !4238
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !4239
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !4239
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4239
  br label %return, !dbg !4240

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !4224
  ret %union.gimple_statement_d* %retval.0, !dbg !4241
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @has_zero_uses(%union.tree_node* %var) unnamed_addr #0 !dbg !4242 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4247, metadata !DIExpression()), !dbg !4250
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4251
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !4251
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !4248, metadata !DIExpression()), !dbg !4250
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !4252
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !4252
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !4252
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !4254
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4255

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !4256
  %tobool = icmp eq i32 %3, 0, !dbg !4256
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !4258

if.end2:                                          ; preds = %if.end
  %call = tail call zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d* nonnull %0) #7, !dbg !4259
  br label %cleanup, !dbg !4260

cleanup:                                          ; preds = %if.end, %entry, %if.end2
  %retval.0 = phi i8 [ %call, %if.end2 ], [ 1, %entry ], [ 0, %if.end ], !dbg !4250
  ret i8 %retval.0, !dbg !4261
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !4262 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !4268, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !4269, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 0, metadata !4270, metadata !DIExpression()), !dbg !4274
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !4275
  store i32 0, i32* %idx, align 8, !dbg !4276
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4277
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4277
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4277
  %tobool = icmp eq %struct.loops* %1, null, !dbg !4277
  br i1 %tobool, label %if.then, label %if.end, !dbg !4279

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !4280
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !4282
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !4283
  br label %cleanup, !dbg !4284

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !4285
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #7, !dbg !4285
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !4286
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !4287
  call void @llvm.dbg.value(metadata i32 1, metadata !4273, metadata !DIExpression()), !dbg !4274
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4288
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !4288
  %3 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !4288
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %3, i64 0, i32 3, !dbg !4288
  %4 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !4288
  br label %while.cond79, !dbg !4291

while.cond79:                                     ; preds = %if.end, %if.end111
  %5 = phi %struct.loop* [ %4, %if.end ], [ %25, %if.end111 ]
  %6 = phi %struct.loop* [ %4, %if.end ], [ %26, %if.end111 ]
  %7 = phi %struct.loop* [ %4, %if.end ], [ %27, %if.end111 ]
  %8 = phi %struct.loop* [ %4, %if.end ], [ %28, %if.end111 ]
  %9 = phi %struct.loop* [ %4, %if.end ], [ %29, %if.end111 ]
  %10 = phi %struct.loop* [ %4, %if.end ], [ %30, %if.end111 ]
  %11 = phi %struct.loop* [ %4, %if.end ], [ %31, %if.end111 ]
  %12 = phi %struct.loop* [ %4, %if.end ], [ %32, %if.end111 ], !dbg !4293
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !4271, metadata !DIExpression()), !dbg !4274
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !4296
  %13 = load i32, i32* %num81, align 8, !dbg !4296
  %cmp82 = icmp slt i32 %13, 1, !dbg !4297
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !4298

if.then83:                                        ; preds = %while.cond79
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !4299
  %tobool85 = icmp eq %struct.VEC_int_heap* %14, null, !dbg !4299
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !4299

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !4299
  br label %cond.end90, !dbg !4299

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !4299
  call void @llvm.dbg.value(metadata %struct.loop* %11, metadata !4271, metadata !DIExpression()), !dbg !4274
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %11, i64 0, i32 0, !dbg !4299
  %15 = load i32, i32* %num92, align 8, !dbg !4299
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %15) #7, !dbg !4299
  br label %if.end94, !dbg !4299

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !4271, metadata !DIExpression()), !dbg !4274
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 8, !dbg !4300
  %16 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !4300
  %cmp96 = icmp eq %struct.loop* %16, null, !dbg !4302
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !4303

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !4304

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !4271, metadata !DIExpression()), !dbg !4274
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 8, !dbg !4306
  %17 = load %struct.loop*, %struct.loop** %inner98, align 8, !dbg !4306
  br label %if.end111, !dbg !4307

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %18 = phi %struct.loop* [ %5, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %19 = phi %struct.loop* [ %6, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %20 = phi %struct.loop* [ %7, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %21 = phi %struct.loop* [ %8, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !4308
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !4271, metadata !DIExpression()), !dbg !4274
  %cmp101 = icmp eq %struct.loop* %21, null, !dbg !4309
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !4310

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !4271, metadata !DIExpression()), !dbg !4274
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 9, !dbg !4311
  %22 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !4311
  %cmp103 = icmp eq %struct.loop* %22, null, !dbg !4312
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %23 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !4313
  call void @llvm.dbg.value(metadata %struct.loop* %19, metadata !4271, metadata !DIExpression()), !dbg !4274
  br i1 %23, label %while.body104, label %while.end106, !dbg !4304

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %19) #7, !dbg !4314
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !4271, metadata !DIExpression()), !dbg !4274
  br label %while.cond100, !dbg !4304, !llvm.loop !4315

while.end106:                                     ; preds = %land.end
  %.lcssa4 = phi %struct.loop* [ %18, %land.end ]
  %.lcssa = phi %struct.loop* [ %19, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !4317
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !4319

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa4, metadata !4271, metadata !DIExpression()), !dbg !4274
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa4, i64 0, i32 9, !dbg !4320
  %24 = load %struct.loop*, %struct.loop** %next110, align 8, !dbg !4320
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %25 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %26 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %27 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %28 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %29 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %30 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %31 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %32 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  br label %while.cond79, !dbg !4291, !llvm.loop !4321

if.end114.loopexit:                               ; preds = %while.end106
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #7, !dbg !4323
  br label %cleanup, !dbg !4324

cleanup:                                          ; preds = %if.end114.loopexit, %if.then
  ret void, !dbg !4324
}

declare dso_local void @substitute_in_loop_info(%struct.loop*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !4325 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !4329, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !4330, metadata !DIExpression()), !dbg !4332
  %0 = bitcast i32* %anum to i8*, !dbg !4333
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4333
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !4332
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !4332
  br label %while.cond, !dbg !4334

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !4335
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !4335
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4335

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !4335
  br label %cond.end, !dbg !4335

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !4335
  %2 = load i32, i32* %idx, align 8, !dbg !4335
  call void @llvm.dbg.value(metadata i32* %anum, metadata !4331, metadata !DIExpression(DW_OP_deref)), !dbg !4332
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #7, !dbg !4335
  %tobool2 = icmp eq i32 %call, 0, !dbg !4334
  br i1 %tobool2, label %while.end, label %while.body, !dbg !4334

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !4336
  %inc = add i32 %3, 1, !dbg !4336
  store i32 %inc, i32* %idx, align 8, !dbg !4336
  %4 = load i32, i32* %anum, align 4, !dbg !4338
  call void @llvm.dbg.value(metadata i32 %4, metadata !4331, metadata !DIExpression()), !dbg !4332
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #7, !dbg !4339
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !4340
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !4341
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !4343, !llvm.loop !4344

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #7, !dbg !4346
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !4347
  br label %cleanup, !dbg !4348

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !4348

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4348
  ret void, !dbg !4348
}

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @single_noncomplex_succ(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !4349 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4351, metadata !DIExpression()), !dbg !4354
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4355
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4355
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4355
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4355

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4355
  br label %cond.end, !dbg !4355

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4355
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4355
  %cmp = icmp eq i32 %call, 2, !dbg !4357
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4358

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4359
  %tobool3 = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !4359
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !4359

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !4359
  br label %cond.end8, !dbg !4359

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_edge_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !4359
  %call10 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond9, i32 0) #7, !dbg !4359
  call void @llvm.dbg.value(metadata %struct.edge_def* %call10, metadata !4352, metadata !DIExpression()), !dbg !4354
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4360
  %tobool12 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !4360
  br i1 %tobool12, label %cond.end17, label %cond.true13, !dbg !4360

cond.true13:                                      ; preds = %cond.end8
  %base15 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !4360
  br label %cond.end17, !dbg !4360

cond.end17:                                       ; preds = %cond.end8, %cond.true13
  %cond18 = phi %struct.VEC_edge_base* [ %base15, %cond.true13 ], [ null, %cond.end8 ], !dbg !4360
  %call19 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond18, i32 1) #7, !dbg !4360
  call void @llvm.dbg.value(metadata %struct.edge_def* %call19, metadata !4353, metadata !DIExpression()), !dbg !4354
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 7, !dbg !4361
  %3 = load i32, i32* %flags, align 8, !dbg !4361
  %and = and i32 %3, 14, !dbg !4363
  %tobool20 = icmp eq i32 %and, 0, !dbg !4363
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !4364

if.then21:                                        ; preds = %cond.end17
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 1, !dbg !4365
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4365
  br label %cleanup, !dbg !4366

if.end22:                                         ; preds = %cond.end17
  %flags23 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 7, !dbg !4367
  %5 = load i32, i32* %flags23, align 8, !dbg !4367
  %and24 = and i32 %5, 14, !dbg !4369
  %tobool25 = icmp eq i32 %and24, 0, !dbg !4369
  br i1 %tobool25, label %cleanup, label %if.then26, !dbg !4370

if.then26:                                        ; preds = %if.end22
  %dest27 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 1, !dbg !4371
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest27, align 8, !dbg !4371
  br label %cleanup, !dbg !4372

cleanup:                                          ; preds = %if.end22, %cond.end, %if.then26, %if.then21
  %retval.0 = phi %struct.basic_block_def* [ %4, %if.then21 ], [ %6, %if.then26 ], [ %bb, %cond.end ], [ %bb, %if.end22 ], !dbg !4354
  ret %struct.basic_block_def* %retval.0, !dbg !4373
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4374 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4380, metadata !DIExpression()), !dbg !4381
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4382
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4382

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4382
  %0 = load i32, i32* %num, align 8, !dbg !4382
  br label %cond.end, !dbg !4382

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4382
  ret i32 %cond, !dbg !4382
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4383 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4387, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4388, metadata !DIExpression()), !dbg !4389
  br label %land.end, !dbg !4390

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4390
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4390
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4390
  ret %struct.edge_def* %0, !dbg !4390
}

; Function Attrs: nounwind uwtable
define dso_local void @notice_special_calls(%union.gimple_statement_d* %call) local_unnamed_addr #5 !dbg !4391 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !4393, metadata !DIExpression()), !dbg !4395
  %call1 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %call) #6, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %call1, metadata !4394, metadata !DIExpression()), !dbg !4395
  %and = and i32 %call1, 32, !dbg !4397
  %tobool = icmp eq i32 %and, 0, !dbg !4397
  br i1 %tobool, label %if.end, label %if.then, !dbg !4399

if.then:                                          ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4400
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 20, !dbg !4401
  %bf.load = load i32, i32* %calls_alloca, align 8, !dbg !4402
  %bf.set = or i32 %bf.load, 524288, !dbg !4402
  store i32 %bf.set, i32* %calls_alloca, align 8, !dbg !4402
  br label %if.end, !dbg !4400

if.end:                                           ; preds = %entry, %if.then
  %1 = trunc i32 %call1 to i8, !dbg !4403
  %tobool3 = icmp slt i8 %1, 0, !dbg !4403
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !4405

if.then4:                                         ; preds = %if.end
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4406
  %calls_setjmp = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 20, !dbg !4407
  %bf.load6 = load i32, i32* %calls_setjmp, align 8, !dbg !4408
  %bf.set8 = or i32 %bf.load6, 262144, !dbg !4408
  store i32 %bf.set8, i32* %calls_setjmp, align 8, !dbg !4408
  br label %if.end9, !dbg !4406

if.end9:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !4409
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @clear_special_calls() local_unnamed_addr #5 !dbg !4410 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4411
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 20, !dbg !4412
  %bf.load = load i32, i32* %calls_alloca, align 8, !dbg !4413
  %bf.clear3 = and i32 %bf.load, -786433, !dbg !4414
  store i32 %bf.clear3, i32* %calls_alloca, align 8, !dbg !4414
  ret void, !dbg !4415
}

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @find_taken_edge(%struct.basic_block_def* %bb, %union.tree_node* %val) local_unnamed_addr #5 !dbg !4416 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4420, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !4421, metadata !DIExpression()), !dbg !4423
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !4424
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !4422, metadata !DIExpression()), !dbg !4423
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !4425
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4425

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1839, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4425
  br label %cond.end, !dbg !4425

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_ctrl_stmt(%union.gimple_statement_d* %call) #7, !dbg !4426
  %tobool2 = icmp eq i8 %call1, 0, !dbg !4426
  br i1 %tobool2, label %cond.true3, label %cond.end5, !dbg !4426

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1840, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4426
  br label %cond.end5, !dbg !4426

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %cmp = icmp eq %union.tree_node* %val, null, !dbg !4427
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4429

if.end:                                           ; preds = %cond.end5
  %call7 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %val) #6, !dbg !4430
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4430
  br i1 %tobool8, label %cleanup, label %if.end10, !dbg !4432

if.end10:                                         ; preds = %if.end
  %call11 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !4433
  %cmp12 = icmp eq i32 %call11, 1, !dbg !4435
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !4436

if.then13:                                        ; preds = %if.end10
  %call14 = tail call fastcc %struct.edge_def* @find_taken_edge_cond_expr(%struct.basic_block_def* %bb, %union.tree_node* nonnull %val) #7, !dbg !4437
  br label %cleanup, !dbg !4438

if.end15:                                         ; preds = %if.end10
  %call16 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !4439
  %cmp17 = icmp eq i32 %call16, 5, !dbg !4441
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !4442

if.then18:                                        ; preds = %if.end15
  %call19 = tail call fastcc %struct.edge_def* @find_taken_edge_switch_expr(%struct.basic_block_def* %bb, %union.tree_node* nonnull %val) #7, !dbg !4443
  br label %cleanup, !dbg !4444

if.end20:                                         ; preds = %if.end15
  %call21 = tail call fastcc zeroext i8 @computed_goto_p(%union.gimple_statement_d* %call) #7, !dbg !4445
  %tobool22 = icmp eq i8 %call21, 0, !dbg !4445
  br i1 %tobool22, label %if.end41, label %if.then23, !dbg !4447

if.then23:                                        ; preds = %if.end20
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4448
  %bf.load = load i64, i64* %0, align 8, !dbg !4448
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4451
  %cmp24 = icmp eq i64 %bf.cast1, 121, !dbg !4451
  br i1 %cmp24, label %land.lhs.true, label %lor.lhs.false, !dbg !4452

lor.lhs.false:                                    ; preds = %if.then23
  %cmp29 = icmp eq i64 %bf.cast1, 133, !dbg !4453
  br i1 %cmp29, label %land.lhs.true, label %cleanup, !dbg !4454

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then23
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4455
  %1 = bitcast %union.tree_node** %operands to i64**, !dbg !4455
  %2 = load i64*, i64** %1, align 8, !dbg !4455
  %bf.load31 = load i64, i64* %2, align 8, !dbg !4455
  %bf.cast333 = and i64 %bf.load31, 65535, !dbg !4456
  %cmp34 = icmp eq i64 %bf.cast333, 30, !dbg !4456
  br i1 %cmp34, label %if.then35, label %cleanup, !dbg !4457

if.then35:                                        ; preds = %land.lhs.true
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !4457
  %call39 = tail call fastcc %struct.edge_def* @find_taken_edge_computed_goto(%struct.basic_block_def* %bb, %union.tree_node* %3) #7, !dbg !4458
  br label %cleanup, !dbg !4459

if.end41:                                         ; preds = %if.end20
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1868, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4460
  br label %cleanup, !dbg !4461

cleanup:                                          ; preds = %if.end, %lor.lhs.false, %land.lhs.true, %cond.end5, %if.end41, %if.then35, %if.then18, %if.then13
  %retval.0 = phi %struct.edge_def* [ %call14, %if.then13 ], [ %call19, %if.then18 ], [ %call39, %if.then35 ], [ null, %if.end41 ], [ null, %cond.end5 ], [ null, %if.end ], [ null, %land.lhs.true ], [ null, %lor.lhs.false ], !dbg !4423
  ret %struct.edge_def* %retval.0, !dbg !4462
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @is_ctrl_stmt(%union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !4463 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !4465, metadata !DIExpression()), !dbg !4466
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %t) #7, !dbg !4467
  switch i32 %call, label %sw.default [
    i32 1, label %return
    i32 5, label %return
    i32 3, label %return
    i32 9, label %return
    i32 14, label %return
  ], !dbg !4468

sw.default:                                       ; preds = %entry
  br label %return, !dbg !4469

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !4471
  ret i8 %retval.0, !dbg !4472
}

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @find_taken_edge_cond_expr(%struct.basic_block_def* %bb, %union.tree_node* %val) unnamed_addr #5 !dbg !4473 {
entry:
  %true_edge = alloca %struct.edge_def*, align 8
  %false_edge = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4475, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !4476, metadata !DIExpression()), !dbg !4479
  %0 = bitcast %struct.edge_def** %true_edge to i8*, !dbg !4480
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4480
  %1 = bitcast %struct.edge_def** %false_edge to i8*, !dbg !4480
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4480
  call void @llvm.dbg.value(metadata %struct.edge_def** %true_edge, metadata !4477, metadata !DIExpression(DW_OP_deref)), !dbg !4479
  call void @llvm.dbg.value(metadata %struct.edge_def** %false_edge, metadata !4478, metadata !DIExpression(DW_OP_deref)), !dbg !4479
  call void @extract_true_false_edges_from_block(%struct.basic_block_def* %bb, %struct.edge_def** nonnull %true_edge, %struct.edge_def** nonnull %false_edge) #7, !dbg !4481
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4482
  %bf.load = load i64, i64* %2, align 8, !dbg !4482
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4482
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !4482
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4482

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1905, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4482
  br label %cond.end, !dbg !4482

cond.end:                                         ; preds = %entry, %cond.true
  %call = call i32 @integer_zerop(%union.tree_node* %val) #6, !dbg !4483
  %tobool = icmp eq i32 %call, 0, !dbg !4483
  %3 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !4483
  call void @llvm.dbg.value(metadata %struct.edge_def* %3, metadata !4478, metadata !DIExpression()), !dbg !4479
  %4 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !4483
  call void @llvm.dbg.value(metadata %struct.edge_def* %4, metadata !4477, metadata !DIExpression()), !dbg !4479
  %cond4 = select i1 %tobool, %struct.edge_def* %4, %struct.edge_def* %3, !dbg !4483
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4484
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4484
  ret %struct.edge_def* %cond4, !dbg !4485
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @find_taken_edge_switch_expr(%struct.basic_block_def* %bb, %union.tree_node* %val) unnamed_addr #5 !dbg !4486 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4488, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !4489, metadata !DIExpression()), !dbg !4494
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !4495
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !4492, metadata !DIExpression()), !dbg !4494
  %call1 = tail call fastcc %union.tree_node* @find_case_label_for_value(%union.gimple_statement_d* %call, %union.tree_node* %val) #7, !dbg !4496
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4493, metadata !DIExpression()), !dbg !4494
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4497
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4497
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !4497
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4497
  %call2 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %0, %union.tree_node* %1) #7, !dbg !4497
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !4490, metadata !DIExpression()), !dbg !4494
  %call3 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %call2) #6, !dbg !4498
  call void @llvm.dbg.value(metadata %struct.edge_def* %call3, metadata !4491, metadata !DIExpression()), !dbg !4494
  %tobool = icmp eq %struct.edge_def* %call3, null, !dbg !4499
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4499

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1926, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4499
  br label %cond.end, !dbg !4499

cond.end:                                         ; preds = %entry, %cond.true
  ret %struct.edge_def* %call3, !dbg !4500
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @find_taken_edge_computed_goto(%struct.basic_block_def* %bb, %union.tree_node* %val) unnamed_addr #5 !dbg !4501 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4503, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !4504, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !4506, metadata !DIExpression()), !dbg !4507
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4508
  %call = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %0, %union.tree_node* %val) #7, !dbg !4508
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4505, metadata !DIExpression()), !dbg !4507
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !4509
  br i1 %tobool, label %if.end, label %if.then, !dbg !4511

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* nonnull %call) #6, !dbg !4512
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !4506, metadata !DIExpression()), !dbg !4507
  %cmp = icmp eq %struct.edge_def* %call1, null, !dbg !4514
  br i1 %cmp, label %cond.true, label %if.end, !dbg !4514

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1888, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4514
  br label %if.end, !dbg !4514

if.end:                                           ; preds = %if.then, %entry, %cond.true
  %e.0 = phi %struct.edge_def* [ null, %entry ], [ %call1, %if.then ], [ null, %cond.true ], !dbg !4507
  call void @llvm.dbg.value(metadata %struct.edge_def* %e.0, metadata !4506, metadata !DIExpression()), !dbg !4507
  ret %struct.edge_def* %e.0, !dbg !4515
}

; Function Attrs: nounwind uwtable
define dso_local void @gimple_debug_bb(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !4516 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4518, metadata !DIExpression()), !dbg !4519
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4520
  tail call void @gimple_dump_bb(%struct.basic_block_def* %bb, %struct._IO_FILE* %0, i32 0, i32 16448) #6, !dbg !4521
  ret void, !dbg !4522
}

declare dso_local void @gimple_dump_bb(%struct.basic_block_def*, %struct._IO_FILE*, i32, i32) #2

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @gimple_debug_bb_n(i32 %n) local_unnamed_addr #5 !dbg !4523 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, metadata !4527, metadata !DIExpression()), !dbg !4528
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4529
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4529
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4529
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !4529
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4529
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !4529
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4529

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !4529
  br label %cond.end, !dbg !4529

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4529
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %n) #7, !dbg !4529
  tail call void @gimple_debug_bb(%struct.basic_block_def* %call) #7, !dbg !4530
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4531
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !4531
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !4531
  %x_basic_block_info6 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 2, !dbg !4531
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info6, align 8, !dbg !4531
  %tobool7 = icmp eq %struct.VEC_basic_block_gc* %5, null, !dbg !4531
  br i1 %tobool7, label %cond.end14, label %cond.true8, !dbg !4531

cond.true8:                                       ; preds = %cond.end
  %base12 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i64 0, i32 0, !dbg !4531
  br label %cond.end14, !dbg !4531

cond.end14:                                       ; preds = %cond.end, %cond.true8
  %cond15 = phi %struct.VEC_basic_block_base* [ %base12, %cond.true8 ], [ null, %cond.end ], !dbg !4531
  %call16 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond15, i32 %n) #7, !dbg !4531
  ret %struct.basic_block_def* %call16, !dbg !4532
}

; Function Attrs: nounwind uwtable
define dso_local void @gimple_debug_cfg(i32 %flags) local_unnamed_addr #5 !dbg !4533 {
entry:
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4537, metadata !DIExpression()), !dbg !4538
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4539
  tail call void @gimple_dump_cfg(%struct._IO_FILE* %0, i32 %flags) #7, !dbg !4540
  ret void, !dbg !4541
}

; Function Attrs: nounwind uwtable
define dso_local void @gimple_dump_cfg(%struct._IO_FILE* %file, i32 %flags) local_unnamed_addr #5 !dbg !4542 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !4546, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4547, metadata !DIExpression()), !dbg !4551
  %and = and i32 %flags, 8, !dbg !4552
  %tobool = icmp eq i32 %and, 0, !dbg !4552
  br i1 %tobool, label %if.end, label %if.then, !dbg !4553

if.then:                                          ; preds = %entry
  %0 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !4554
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4555
  %call = tail call i8* %0(%union.tree_node* %1, i32 2) #6, !dbg !4556
  call void @llvm.dbg.value(metadata i8* %call, metadata !4548, metadata !DIExpression()), !dbg !4557
  %call1 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #6, !dbg !4558
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* %call) #6, !dbg !4559
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4560
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4560
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4560
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 3, !dbg !4560
  %4 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4560
  %x_n_edges = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 4, !dbg !4561
  %5 = load i32, i32* %x_n_edges, align 4, !dbg !4561
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 5, !dbg !4562
  %6 = load i32, i32* %x_last_basic_block, align 8, !dbg !4562
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0), i32 %4, i32 %5, i32 %6) #6, !dbg !4563
  tail call void @brief_dump_cfg(%struct._IO_FILE* %file) #6, !dbg !4564
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4565
  br label %if.end, !dbg !4566

if.end:                                           ; preds = %entry, %if.then
  %and9 = and i32 %flags, 16, !dbg !4567
  %tobool10 = icmp eq i32 %and9, 0, !dbg !4567
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !4569

if.then11:                                        ; preds = %if.end
  tail call void @dump_cfg_stats(%struct._IO_FILE* %file) #7, !dbg !4570
  br label %if.end12, !dbg !4570

if.end12:                                         ; preds = %if.end, %if.then11
  %7 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4571
  %or = or i32 %flags, 32, !dbg !4572
  tail call void @dump_function_to_file(%union.tree_node* %7, %struct._IO_FILE* %file, i32 %or) #7, !dbg !4573
  ret void, !dbg !4574
}

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @brief_dump_cfg(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_cfg_stats(%struct._IO_FILE* %file) local_unnamed_addr #5 !dbg !2276 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2331, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i64 0, metadata !2333, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), metadata !2336, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), metadata !2338, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), metadata !2339, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), metadata !2340, metadata !DIExpression()), !dbg !4575
  %0 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !4576
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4577
  %call = tail call i8* %0(%union.tree_node* %1, i32 2) #6, !dbg !4578
  call void @llvm.dbg.value(metadata i8* %call, metadata !2341, metadata !DIExpression()), !dbg !4575
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i8* %call) #6, !dbg !4579
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4580
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4581
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4582
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4583
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4584
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4584
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4584
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 3, !dbg !4584
  %4 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4584
  %conv = sext i32 %4 to i64, !dbg !4584
  %mul = mul nsw i64 %conv, 104, !dbg !4585
  call void @llvm.dbg.value(metadata i64 %mul, metadata !2332, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i64 %mul, metadata !2333, metadata !DIExpression()), !dbg !4575
  %cmp = icmp ult i64 %mul, 10240, !dbg !4586
  br i1 %cmp, label %cond.end15, label %cond.false, !dbg !4586

cond.false:                                       ; preds = %entry
  %cmp10 = icmp ult i64 %mul, 10485760, !dbg !4586
  br i1 %cmp10, label %cond.true12, label %cond.false13, !dbg !4586

cond.true12:                                      ; preds = %cond.false
  %div = lshr i64 %mul, 10, !dbg !4586
  br label %cond.end15, !dbg !4586

cond.false13:                                     ; preds = %cond.false
  %div14 = lshr i64 %mul, 20, !dbg !4586
  br label %cond.end15, !dbg !4586

cond.end15:                                       ; preds = %cond.true12, %cond.false13, %entry
  %cond16 = phi i64 [ %mul, %entry ], [ %div, %cond.true12 ], [ %div14, %cond.false13 ], !dbg !4586
  br i1 %cmp, label %cond.end24, label %cond.false20, !dbg !4587

cond.false20:                                     ; preds = %cond.end15
  %cmp21 = icmp ult i64 %mul, 10485760, !dbg !4587
  %cond23 = select i1 %cmp21, i32 107, i32 77, !dbg !4587
  br label %cond.end24, !dbg !4587

cond.end24:                                       ; preds = %cond.end15, %cond.false20
  %cond25 = phi i32 [ %cond23, %cond.false20 ], [ 98, %cond.end15 ], !dbg !4587
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i32 %4, i64 %cond16, i32 %cond25) #6, !dbg !4588
  call void @llvm.dbg.value(metadata i64 0, metadata !2334, metadata !DIExpression()), !dbg !4575
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4589
  %cfg28 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !4589
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg28, align 8, !dbg !4589
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !4589
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4589
  br label %for.cond, !dbg !4589

for.cond:                                         ; preds = %cond.end36, %cond.end24
  %8 = phi %struct.control_flow_graph* [ %6, %cond.end24 ], [ %.pre1, %cond.end36 ], !dbg !4591
  %num_edges.0 = phi i64 [ 0, %cond.end24 ], [ %add40, %cond.end36 ], !dbg !4575
  %.pn = phi %struct.basic_block_def* [ %7, %cond.end24 ], [ %bb.0, %cond.end36 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4593
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4593
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2335, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i64 %num_edges.0, metadata !2334, metadata !DIExpression()), !dbg !4575
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !4591
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4591
  %cmp31 = icmp eq %struct.basic_block_def* %bb.0, %9, !dbg !4591
  br i1 %cmp31, label %for.end, label %for.body, !dbg !4589

for.body:                                         ; preds = %for.cond
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !4594
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4594
  %tobool = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !4594
  br i1 %tobool, label %cond.end36, label %cond.true33, !dbg !4594

cond.true33:                                      ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !4594
  br label %cond.end36, !dbg !4594

cond.end36:                                       ; preds = %for.body, %cond.true33
  %cond37 = phi %struct.VEC_edge_base* [ %base, %cond.true33 ], [ null, %for.body ], !dbg !4594
  %call38 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond37) #7, !dbg !4594
  %conv39 = zext i32 %call38 to i64, !dbg !4594
  %add40 = add nuw nsw i64 %num_edges.0, %conv39, !dbg !4595
  call void @llvm.dbg.value(metadata i64 %add40, metadata !2334, metadata !DIExpression()), !dbg !4575
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4591
  %cfg30.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4596
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg30.phi.trans.insert, align 8, !dbg !4591
  br label %for.cond, !dbg !4591, !llvm.loop !4597

for.end:                                          ; preds = %for.cond
  %num_edges.0.lcssa = phi i64 [ %num_edges.0, %for.cond ], !dbg !4575
  call void @llvm.dbg.value(metadata i64 %num_edges.0.lcssa, metadata !2334, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i64 %num_edges.0.lcssa, metadata !2334, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i64 %num_edges.0.lcssa, metadata !2334, metadata !DIExpression()), !dbg !4575
  %mul42 = shl i64 %num_edges.0.lcssa, 6, !dbg !4599
  call void @llvm.dbg.value(metadata i64 %mul42, metadata !2332, metadata !DIExpression()), !dbg !4575
  %add43 = add i64 %mul, %mul42, !dbg !4600
  call void @llvm.dbg.value(metadata i64 %add43, metadata !2333, metadata !DIExpression()), !dbg !4575
  %cmp44 = icmp ult i64 %mul42, 10240, !dbg !4601
  br i1 %cmp44, label %cond.end56, label %cond.false47, !dbg !4601

cond.false47:                                     ; preds = %for.end
  %cmp48 = icmp ult i64 %mul42, 10485760, !dbg !4601
  br i1 %cmp48, label %cond.true50, label %cond.false52, !dbg !4601

cond.true50:                                      ; preds = %cond.false47
  %11 = lshr i64 %num_edges.0.lcssa, 4, !dbg !4601
  %div51 = and i64 %11, 18014398509481983, !dbg !4601
  br label %cond.end56, !dbg !4601

cond.false52:                                     ; preds = %cond.false47
  %12 = lshr i64 %num_edges.0.lcssa, 14, !dbg !4601
  %div53 = and i64 %12, 17592186044415, !dbg !4601
  br label %cond.end56, !dbg !4601

cond.end56:                                       ; preds = %cond.true50, %cond.false52, %for.end
  %cond57 = phi i64 [ %mul42, %for.end ], [ %div51, %cond.true50 ], [ %div53, %cond.false52 ], !dbg !4601
  br i1 %cmp44, label %cond.end65, label %cond.false61, !dbg !4602

cond.false61:                                     ; preds = %cond.end56
  %cmp62 = icmp ult i64 %mul42, 10485760, !dbg !4602
  %cond64 = select i1 %cmp62, i32 107, i32 77, !dbg !4602
  br label %cond.end65, !dbg !4602

cond.end65:                                       ; preds = %cond.end56, %cond.false61
  %cond66 = phi i32 [ %cond64, %cond.false61 ], [ 98, %cond.end56 ], !dbg !4602
  %call67 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 %num_edges.0.lcssa, i64 %cond57, i32 %cond66) #6, !dbg !4603
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4604
  %cmp69 = icmp ult i64 %add43, 10240, !dbg !4605
  br i1 %cmp69, label %cond.end81, label %cond.false72, !dbg !4605

cond.false72:                                     ; preds = %cond.end65
  %cmp73 = icmp ult i64 %add43, 10485760, !dbg !4605
  br i1 %cmp73, label %cond.true75, label %cond.false77, !dbg !4605

cond.true75:                                      ; preds = %cond.false72
  %div76 = lshr i64 %add43, 10, !dbg !4605
  br label %cond.end81, !dbg !4605

cond.false77:                                     ; preds = %cond.false72
  %div78 = lshr i64 %add43, 20, !dbg !4605
  br label %cond.end81, !dbg !4605

cond.end81:                                       ; preds = %cond.true75, %cond.false77, %cond.end65
  %cond82 = phi i64 [ %add43, %cond.end65 ], [ %div76, %cond.true75 ], [ %div78, %cond.false77 ], !dbg !4605
  br i1 %cmp69, label %cond.end90, label %cond.false86, !dbg !4606

cond.false86:                                     ; preds = %cond.end81
  %cmp87 = icmp ult i64 %add43, 10485760, !dbg !4606
  %cond89 = select i1 %cmp87, i32 107, i32 77, !dbg !4606
  br label %cond.end90, !dbg !4606

cond.end90:                                       ; preds = %cond.end81, %cond.false86
  %cond91 = phi i32 [ %cond89, %cond.false86 ], [ 98, %cond.end81 ], !dbg !4606
  %call92 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i64 %cond82, i32 %cond91) #6, !dbg !4607
  %call93 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4608
  %call94 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4609
  %13 = load i64, i64* getelementptr inbounds (%struct.cfg_stats_d, %struct.cfg_stats_d* @cfg_stats, i64 0, i32 0), align 8, !dbg !4610
  %14 = load i64, i64* @dump_cfg_stats.max_num_merged_labels, align 8, !dbg !4612
  %cmp95 = icmp sgt i64 %13, %14, !dbg !4613
  br i1 %cmp95, label %if.then, label %if.end, !dbg !4614

if.then:                                          ; preds = %cond.end90
  store i64 %13, i64* @dump_cfg_stats.max_num_merged_labels, align 8, !dbg !4615
  br label %if.end, !dbg !4616

if.end:                                           ; preds = %if.then, %cond.end90
  %15 = phi i64 [ %13, %if.then ], [ %14, %cond.end90 ], !dbg !4617
  %call97 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i64 0, i64 0), i64 %13, i64 %15) #6, !dbg !4618
  %call98 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4619
  ret void, !dbg !4620
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_function_to_file(%union.tree_node* %fn, %struct._IO_FILE* %file, i32 %flags) local_unnamed_addr #5 !dbg !4621 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !4625, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !4626, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4627, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8 0, metadata !4632, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8 0, metadata !4633, metadata !DIExpression()), !dbg !4642
  %0 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !4643
  %call = tail call i8* %0(%union.tree_node* %fn, i32 2) #6, !dbg !4644
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i8* %call) #6, !dbg !4645
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 2, !dbg !4646
  %and = and i32 %flags, 65536, !dbg !4647
  %tobool3 = icmp eq i32 %and, 0, !dbg !4647
  br i1 %tobool3, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !4650

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !4650

entry.split.us:                                   ; preds = %entry
  br label %while.cond.us, !dbg !4650

while.cond.us:                                    ; preds = %if.end9.us, %entry.split.us
  %arg.0.in.us = phi %union.tree_node** [ %arguments, %entry.split.us ], [ %chain5.us, %if.end9.us ]
  %arg.0.us = load %union.tree_node*, %union.tree_node** %arg.0.in.us, align 8, !dbg !4642
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0.us, metadata !4628, metadata !DIExpression()), !dbg !4642
  %tobool.us = icmp eq %union.tree_node* %arg.0.us, null, !dbg !4650
  br i1 %tobool.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !4650

while.body.us:                                    ; preds = %while.cond.us
  %type.us = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4651
  %1 = load %union.tree_node*, %union.tree_node** %type.us, align 8, !dbg !4651
  %2 = load i32, i32* @dump_flags, align 4, !dbg !4652
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %1, i32 %2) #6, !dbg !4653
  %call2.us = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4654
  %3 = load i32, i32* @dump_flags, align 4, !dbg !4655
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* nonnull %arg.0.us, i32 %3) #6, !dbg !4656
  %chain5.us = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4657
  %4 = load %union.tree_node*, %union.tree_node** %chain5.us, align 8, !dbg !4657
  %tobool6.us = icmp eq %union.tree_node* %4, null, !dbg !4657
  br i1 %tobool6.us, label %if.end9.us, label %if.then7.us, !dbg !4659

if.then7.us:                                      ; preds = %while.body.us
  %call8.us = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !4660
  br label %if.end9.us, !dbg !4660

if.end9.us:                                       ; preds = %if.then7.us, %while.body.us
  br label %while.cond.us, !dbg !4650, !llvm.loop !4661

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !4663

while.cond:                                       ; preds = %if.end9, %entry.entry.split_crit_edge
  %arg.0.in = phi %union.tree_node** [ %arguments, %entry.entry.split_crit_edge ], [ %chain5, %if.end9 ]
  %arg.0 = load %union.tree_node*, %union.tree_node** %arg.0.in, align 8, !dbg !4642
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !4628, metadata !DIExpression()), !dbg !4642
  %tobool = icmp eq %union.tree_node* %arg.0, null, !dbg !4650
  br i1 %tobool, label %while.end.us-lcssa, label %while.body, !dbg !4650

while.body:                                       ; preds = %while.cond
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4651
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4651
  %6 = load i32, i32* @dump_flags, align 4, !dbg !4652
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %5, i32 %6) #6, !dbg !4653
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4654
  %7 = load i32, i32* @dump_flags, align 4, !dbg !4655
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* nonnull %arg.0, i32 %7) #6, !dbg !4656
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), %union.tree_node* nonnull %arg.0, i32 4) #6, !dbg !4664
  %chain5 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4657
  %8 = load %union.tree_node*, %union.tree_node** %chain5, align 8, !dbg !4657
  %tobool6 = icmp eq %union.tree_node* %8, null, !dbg !4657
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !4659

if.then7:                                         ; preds = %while.body
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !4660
  br label %if.end9, !dbg !4660

if.end9:                                          ; preds = %while.body, %if.then7
  br label %while.cond, !dbg !4650, !llvm.loop !4661

while.end.us-lcssa:                               ; preds = %while.cond
  br label %while.end, !dbg !4663

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !4663
  br i1 %tobool3, label %if.end16, label %if.then15, !dbg !4665

if.then15:                                        ; preds = %while.end
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), %union.tree_node* %fn, i32 2) #6, !dbg !4666
  br label %if.end16, !dbg !4666

if.end16:                                         ; preds = %while.end, %if.then15
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 1, !dbg !4668
  %9 = load %struct.function*, %struct.function** %f, align 8, !dbg !4668
  call void @llvm.dbg.value(metadata %struct.function* %9, metadata !4631, metadata !DIExpression()), !dbg !4642
  %tobool17 = icmp ne %struct.function* %9, null, !dbg !4669
  %and18 = and i32 %flags, 524288, !dbg !4671
  %tobool19 = icmp ne i32 %and18, 0, !dbg !4671
  %or.cond = and i1 %tobool17, %tobool19, !dbg !4672
  br i1 %or.cond, label %if.then20, label %if.end21, !dbg !4672

if.then20:                                        ; preds = %if.end16
  tail call void @dump_eh_tree(%struct._IO_FILE* %file, %struct.function* nonnull %9) #6, !dbg !4673
  br label %if.end21, !dbg !4673

if.end21:                                         ; preds = %if.then20, %if.end16
  %and22 = and i32 %flags, 4, !dbg !4674
  %tobool23 = icmp eq i32 %and22, 0, !dbg !4674
  br i1 %tobool23, label %if.end28, label %land.lhs.true24, !dbg !4676

land.lhs.true24:                                  ; preds = %if.end21
  %call25 = tail call zeroext i8 @gimple_has_body_p(%union.tree_node* %fn) #6, !dbg !4677
  %tobool26 = icmp eq i8 %call25, 0, !dbg !4677
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !4678

if.then27:                                        ; preds = %land.lhs.true24
  %or = or i32 %flags, 2, !dbg !4679
  tail call void @dump_node(%union.tree_node* %fn, i32 %or, %struct._IO_FILE* %file) #6, !dbg !4681
  br label %cleanup.cont, !dbg !4682

if.end28:                                         ; preds = %land.lhs.true24, %if.end21
  %10 = load %struct.function*, %struct.function** %f, align 8, !dbg !4683
  tail call void @push_cfun(%struct.function* %10) #6, !dbg !4684
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4685
  %tobool31 = icmp eq %struct.function* %11, null, !dbg !4685
  br i1 %tobool31, label %if.end49, label %land.lhs.true32, !dbg !4687

land.lhs.true32:                                  ; preds = %if.end28
  %decl = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 6, !dbg !4688
  %12 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4688
  %cmp = icmp eq %union.tree_node* %12, %fn, !dbg !4689
  br i1 %cmp, label %land.lhs.true34, label %if.end49, !dbg !4690

land.lhs.true34:                                  ; preds = %land.lhs.true32
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 9, !dbg !4691
  %13 = load %union.tree_node*, %union.tree_node** %local_decls, align 8, !dbg !4691
  %tobool36 = icmp eq %union.tree_node* %13, null, !dbg !4692
  br i1 %tobool36, label %if.end49, label %if.then37, !dbg !4693

if.then37:                                        ; preds = %land.lhs.true34
  call void @llvm.dbg.value(metadata i8 1, metadata !4632, metadata !DIExpression()), !dbg !4642
  %call38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !4694
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4696
  %local_decls40 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 9, !dbg !4698
  br i1 %tobool3, label %if.then37.split.us, label %if.then37.if.then37.split_crit_edge, !dbg !4699

if.then37.if.then37.split_crit_edge:              ; preds = %if.then37
  br label %for.cond, !dbg !4699

if.then37.split.us:                               ; preds = %if.then37
  br label %for.cond.us, !dbg !4699

for.cond.us:                                      ; preds = %for.body.us, %if.then37.split.us
  %any_var.0.us = phi i8 [ 0, %if.then37.split.us ], [ 1, %for.body.us ], !dbg !4642
  %vars.0.in.us = phi %union.tree_node** [ %local_decls40, %if.then37.split.us ], [ %chain48.us, %for.body.us ]
  %vars.0.us = load %union.tree_node*, %union.tree_node** %vars.0.in.us, align 8, !dbg !4700
  call void @llvm.dbg.value(metadata %union.tree_node* %vars.0.us, metadata !4629, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8 %any_var.0.us, metadata !4633, metadata !DIExpression()), !dbg !4642
  %tobool41.us = icmp eq %union.tree_node* %vars.0.us, null, !dbg !4701
  br i1 %tobool41.us, label %if.end49.loopexit.us-lcssa.us, label %for.body.us, !dbg !4701

for.body.us:                                      ; preds = %for.cond.us
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %vars.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4702
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !4702
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4630, metadata !DIExpression()), !dbg !4642
  tail call void @print_generic_decl(%struct._IO_FILE* %file, %union.tree_node* %16, i32 %flags) #6, !dbg !4705
  %call46.us = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4706
  call void @llvm.dbg.value(metadata i8 1, metadata !4633, metadata !DIExpression()), !dbg !4642
  %chain48.us = getelementptr inbounds %union.tree_node, %union.tree_node* %vars.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4707
  br label %for.cond.us, !dbg !4708, !llvm.loop !4709

if.end49.loopexit.us-lcssa.us:                    ; preds = %for.cond.us
  %any_var.0.us.lcssa = phi i8 [ %any_var.0.us, %for.cond.us ], !dbg !4642
  call void @llvm.dbg.value(metadata i8 %any_var.0.us.lcssa, metadata !4633, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8 %any_var.0.us.lcssa, metadata !4633, metadata !DIExpression()), !dbg !4642
  br label %if.end49.loopexit, !dbg !4711

for.cond:                                         ; preds = %for.body, %if.then37.if.then37.split_crit_edge
  %any_var.0 = phi i8 [ 0, %if.then37.if.then37.split_crit_edge ], [ 1, %for.body ], !dbg !4642
  %vars.0.in = phi %union.tree_node** [ %local_decls40, %if.then37.if.then37.split_crit_edge ], [ %chain48, %for.body ]
  %vars.0 = load %union.tree_node*, %union.tree_node** %vars.0.in, align 8, !dbg !4700
  call void @llvm.dbg.value(metadata %union.tree_node* %vars.0, metadata !4629, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8 %any_var.0, metadata !4633, metadata !DIExpression()), !dbg !4642
  %tobool41 = icmp eq %union.tree_node* %vars.0, null, !dbg !4701
  br i1 %tobool41, label %if.end49.loopexit.us-lcssa, label %for.body, !dbg !4701

for.body:                                         ; preds = %for.cond
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %vars.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4702
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !4702
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4630, metadata !DIExpression()), !dbg !4642
  tail call void @print_generic_decl(%struct._IO_FILE* %file, %union.tree_node* %18, i32 %flags) #6, !dbg !4705
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), %union.tree_node* %18, i32 4) #6, !dbg !4712
  %call46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4706
  call void @llvm.dbg.value(metadata i8 1, metadata !4633, metadata !DIExpression()), !dbg !4642
  %chain48 = getelementptr inbounds %union.tree_node, %union.tree_node* %vars.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4707
  br label %for.cond, !dbg !4708, !llvm.loop !4709

if.end49.loopexit.us-lcssa:                       ; preds = %for.cond
  %any_var.0.lcssa6 = phi i8 [ %any_var.0, %for.cond ], !dbg !4642
  call void @llvm.dbg.value(metadata i8 %any_var.0.lcssa6, metadata !4633, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8 %any_var.0.lcssa6, metadata !4633, metadata !DIExpression()), !dbg !4642
  br label %if.end49.loopexit, !dbg !4711

if.end49.loopexit:                                ; preds = %if.end49.loopexit.us-lcssa.us, %if.end49.loopexit.us-lcssa
  %any_var.0.lcssa = phi i8 [ %any_var.0.lcssa6, %if.end49.loopexit.us-lcssa ], [ %any_var.0.us.lcssa, %if.end49.loopexit.us-lcssa.us ], !dbg !4642
  call void @llvm.dbg.value(metadata i8 %any_var.0.lcssa, metadata !4633, metadata !DIExpression()), !dbg !4642
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4711
  br label %if.end49, !dbg !4711

if.end49:                                         ; preds = %if.end49.loopexit, %land.lhs.true34, %if.end28, %land.lhs.true32
  %19 = phi %struct.function* [ %11, %land.lhs.true34 ], [ %11, %land.lhs.true32 ], [ null, %if.end28 ], [ %.pre, %if.end49.loopexit ], !dbg !4711
  %ignore_topmost_bind.0 = phi i8 [ 0, %land.lhs.true34 ], [ 0, %land.lhs.true32 ], [ 0, %if.end28 ], [ 1, %if.end49.loopexit ], !dbg !4642
  %any_var.1 = phi i8 [ 0, %land.lhs.true34 ], [ 0, %land.lhs.true32 ], [ 0, %if.end28 ], [ %any_var.0.lcssa, %if.end49.loopexit ], !dbg !4714
  call void @llvm.dbg.value(metadata i8 %any_var.1, metadata !4633, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8 %ignore_topmost_bind.0, metadata !4632, metadata !DIExpression()), !dbg !4642
  %tobool51 = icmp eq %struct.function* %19, null, !dbg !4711
  br i1 %tobool51, label %if.else, label %land.lhs.true52, !dbg !4715

land.lhs.true52:                                  ; preds = %if.end49
  %decl54 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 6, !dbg !4716
  %20 = load %union.tree_node*, %union.tree_node** %decl54, align 8, !dbg !4716
  %cmp55 = icmp eq %union.tree_node* %20, %fn, !dbg !4717
  br i1 %cmp55, label %land.lhs.true56, label %if.else, !dbg !4718

land.lhs.true56:                                  ; preds = %land.lhs.true52
  %cfg = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !4719
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4719
  %tobool58 = icmp eq %struct.control_flow_graph* %21, null, !dbg !4720
  br i1 %tobool58, label %if.else, label %land.lhs.true59, !dbg !4721

land.lhs.true59:                                  ; preds = %land.lhs.true56
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 2, !dbg !4722
  %22 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4722
  %tobool62 = icmp eq %struct.VEC_basic_block_gc* %22, null, !dbg !4722
  br i1 %tobool62, label %if.else, label %if.then63, !dbg !4723

if.then63:                                        ; preds = %land.lhs.true59
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 0, !dbg !4724
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4724
  tail call void @check_bb_profile(%struct.basic_block_def* %23, %struct._IO_FILE* %file) #6, !dbg !4726
  %tobool66 = icmp eq i8 %ignore_topmost_bind.0, 0, !dbg !4727
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !4729

if.then67:                                        ; preds = %if.then63
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !4730
  br label %if.end69, !dbg !4730

if.end69:                                         ; preds = %if.then63, %if.then67
  %tobool70 = icmp eq i8 %any_var.1, 0, !dbg !4731
  br i1 %tobool70, label %if.end77, label %land.lhs.true71, !dbg !4733

land.lhs.true71:                                  ; preds = %if.end69
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4734
  %cfg73 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !4734
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg73, align 8, !dbg !4734
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 3, !dbg !4734
  %26 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4734
  %tobool74 = icmp eq i32 %26, 0, !dbg !4734
  br i1 %tobool74, label %if.end77, label %if.then75, !dbg !4735

if.then75:                                        ; preds = %land.lhs.true71
  %call76 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4736
  br label %if.end77, !dbg !4736

if.end77:                                         ; preds = %land.lhs.true71, %if.end69, %if.then75
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4737
  %cfg79 = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, i32 1, !dbg !4737
  %28 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg79, align 8, !dbg !4737
  %x_entry_block_ptr80 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %28, i64 0, i32 0, !dbg !4737
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr80, align 8, !dbg !4737
  br label %for.cond81, !dbg !4737

for.cond81:                                       ; preds = %for.body86, %if.end77
  %30 = phi %struct.control_flow_graph* [ %28, %if.end77 ], [ %.pre4, %for.body86 ], !dbg !4739
  %.pn = phi %struct.basic_block_def* [ %29, %if.end77 ], [ %bb.0, %for.body86 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4741
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4741
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4634, metadata !DIExpression()), !dbg !4642
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i64 0, i32 1, !dbg !4739
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4739
  %cmp84 = icmp eq %struct.basic_block_def* %bb.0, %31, !dbg !4739
  br i1 %cmp84, label %for.end89, label %for.body86, !dbg !4737

for.body86:                                       ; preds = %for.cond81
  tail call void @gimple_dump_bb(%struct.basic_block_def* %bb.0, %struct._IO_FILE* %file, i32 2, i32 %flags) #6, !dbg !4742
  %.pre3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4739
  %cfg83.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre3, i64 0, i32 1, !dbg !4743
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg83.phi.trans.insert, align 8, !dbg !4739
  br label %for.cond81, !dbg !4739, !llvm.loop !4744

for.end89:                                        ; preds = %for.cond81
  %call90 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !4746
  %32 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4747
  %cfg92 = getelementptr inbounds %struct.function, %struct.function* %32, i64 0, i32 1, !dbg !4747
  %33 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg92, align 8, !dbg !4747
  %x_exit_block_ptr93 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %33, i64 0, i32 1, !dbg !4747
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr93, align 8, !dbg !4747
  tail call void @check_bb_profile(%struct.basic_block_def* %34, %struct._IO_FILE* %file) #6, !dbg !4748
  br label %if.end150, !dbg !4749

if.else:                                          ; preds = %land.lhs.true59, %land.lhs.true56, %if.end49, %land.lhs.true52
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 1, !dbg !4750
  %35 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8, !dbg !4750
  %cmp95 = icmp eq %union.tree_node* %35, null, !dbg !4751
  br i1 %cmp95, label %if.then97, label %if.else123, !dbg !4752

if.then97:                                        ; preds = %if.else
  %call98 = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %fn) #6, !dbg !4753
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call98, metadata !4636, metadata !DIExpression()), !dbg !4754
  %call99 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call98) #7, !dbg !4755
  %tobool100 = icmp eq %union.gimple_statement_d* %call99, null, !dbg !4755
  br i1 %tobool100, label %if.else112, label %land.lhs.true101, !dbg !4757

land.lhs.true101:                                 ; preds = %if.then97
  %call102 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call98) #7, !dbg !4758
  %call103 = tail call fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %call98) #7, !dbg !4759
  %cmp104 = icmp eq %union.gimple_statement_d* %call102, %call103, !dbg !4760
  br i1 %cmp104, label %land.lhs.true106, label %if.else112, !dbg !4761

land.lhs.true106:                                 ; preds = %land.lhs.true101
  %call107 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call98) #7, !dbg !4762
  %call108 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call107) #7, !dbg !4763
  %cmp109 = icmp eq i32 %call108, 10, !dbg !4764
  br i1 %cmp109, label %if.then111, label %if.else112, !dbg !4765

if.then111:                                       ; preds = %land.lhs.true106
  tail call void @print_gimple_seq(%struct._IO_FILE* %file, %struct.gimple_seq_d* %call98, i32 0, i32 %flags) #6, !dbg !4766
  br label %if.end150, !dbg !4766

if.else112:                                       ; preds = %if.then97, %land.lhs.true106, %land.lhs.true101
  %tobool113 = icmp eq i8 %ignore_topmost_bind.0, 0, !dbg !4767
  br i1 %tobool113, label %if.then114, label %if.end116, !dbg !4770

if.then114:                                       ; preds = %if.else112
  %call115 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !4771
  br label %if.end116, !dbg !4771

if.end116:                                        ; preds = %if.else112, %if.then114
  %tobool117 = icmp eq i8 %any_var.1, 0, !dbg !4772
  br i1 %tobool117, label %if.end120, label %if.then118, !dbg !4774

if.then118:                                       ; preds = %if.end116
  %call119 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4775
  br label %if.end120, !dbg !4775

if.end120:                                        ; preds = %if.end116, %if.then118
  tail call void @print_gimple_seq(%struct._IO_FILE* %file, %struct.gimple_seq_d* %call98, i32 2, i32 %flags) #6, !dbg !4776
  %call121 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !4777
  br label %if.end150

if.else123:                                       ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !4635, metadata !DIExpression()), !dbg !4642
  br i1 false, label %if.else123.if.else135_crit_edge, label %land.lhs.true127, !dbg !4778

if.else123.if.else135_crit_edge:                  ; preds = %if.else123
  br label %if.else135, !dbg !4778

land.lhs.true127:                                 ; preds = %if.else123
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4780
  %bf.load = load i64, i64* %36, align 8, !dbg !4780
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4781
  %cmp128 = icmp eq i64 %bf.cast1, 58, !dbg !4781
  br i1 %cmp128, label %if.then130, label %if.else135, !dbg !4782

if.then130:                                       ; preds = %land.lhs.true127
  %tobool131 = icmp eq i8 %ignore_topmost_bind.0, 0, !dbg !4783
  br i1 %tobool131, label %if.end140, label %if.then132, !dbg !4786

if.then132:                                       ; preds = %if.then130
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4787
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4787
  %37 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4787
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !4635, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i32 2, metadata !4640, metadata !DIExpression()), !dbg !4789
  br label %if.end140, !dbg !4790

if.else135:                                       ; preds = %if.else123.if.else135_crit_edge, %land.lhs.true127
  %tobool136 = icmp eq i8 %ignore_topmost_bind.0, 0, !dbg !4791
  br i1 %tobool136, label %if.then137, label %if.end140, !dbg !4794

if.then137:                                       ; preds = %if.else135
  %call138 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !4795
  br label %if.end140, !dbg !4795

if.end140:                                        ; preds = %if.then130, %if.else135, %if.then137, %if.then132
  %chain.1 = phi %union.tree_node* [ %37, %if.then132 ], [ %35, %if.then130 ], [ %35, %if.then137 ], [ %35, %if.else135 ], !dbg !4789
  %indent.1 = phi i32 [ 2, %if.then132 ], [ 0, %if.then130 ], [ 2, %if.then137 ], [ 2, %if.else135 ], !dbg !4796
  call void @llvm.dbg.value(metadata i32 %indent.1, metadata !4640, metadata !DIExpression()), !dbg !4789
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.1, metadata !4635, metadata !DIExpression()), !dbg !4642
  %tobool141 = icmp eq i8 %any_var.1, 0, !dbg !4797
  br i1 %tobool141, label %if.end144, label %if.then142, !dbg !4799

if.then142:                                       ; preds = %if.end140
  %call143 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4800
  br label %if.end144, !dbg !4800

if.end144:                                        ; preds = %if.end140, %if.then142
  tail call void @print_generic_stmt_indented(%struct._IO_FILE* %file, %union.tree_node* %chain.1, i32 %flags, i32 %indent.1) #6, !dbg !4801
  %tobool145 = icmp eq i8 %ignore_topmost_bind.0, 0, !dbg !4802
  br i1 %tobool145, label %if.end150, label %if.then146, !dbg !4804

if.then146:                                       ; preds = %if.end144
  %call147 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !4805
  br label %if.end150, !dbg !4805

if.end150:                                        ; preds = %if.end144, %if.end120, %if.then111, %if.then146, %for.end89
  %call151 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !4806
  tail call void @pop_cfun() #6, !dbg !4807
  br label %cleanup.cont, !dbg !4808

cleanup.cont:                                     ; preds = %if.then27, %if.end150
  ret void, !dbg !4808
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_cfg_stats() local_unnamed_addr #5 !dbg !4809 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4810
  tail call void @dump_cfg_stats(%struct._IO_FILE* %0) #7, !dbg !4811
  ret void, !dbg !4812
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @is_ctrl_altering_stmt(%union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !4813 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !4815, metadata !DIExpression()), !dbg !4819
  %tobool = icmp eq %union.gimple_statement_d* %t, null, !dbg !4820
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4820

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2210, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4820
  br label %cond.end, !dbg !4820

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %t) #7, !dbg !4821
  switch i32 %call, label %sw.epilog [
    i32 8, label %sw.bb
    i32 15, label %return
    i32 7, label %sw.bb9
    i32 26, label %return
    i32 27, label %return
    i32 23, label %return
    i32 30, label %return
    i32 31, label %return
    i32 32, label %return
    i32 29, label %return
    i32 24, label %return
    i32 25, label %return
    i32 22, label %return
    i32 28, label %return
    i32 19, label %return
    i32 20, label %return
    i32 21, label %return
  ], !dbg !4822

sw.bb:                                            ; preds = %cond.end
  %call1 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %t) #6, !dbg !4823
  call void @llvm.dbg.value(metadata i32 %call1, metadata !4816, metadata !DIExpression()), !dbg !4824
  %and = and i32 %call1, 3, !dbg !4825
  %tobool2 = icmp eq i32 %and, 0, !dbg !4825
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !4827

land.lhs.true:                                    ; preds = %sw.bb
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4828
  %has_nonlocal_label = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 20, !dbg !4829
  %bf.load = load i32, i32* %has_nonlocal_label, align 8, !dbg !4829
  %bf.clear = and i32 %bf.load, 1048576, !dbg !4829
  %tobool3 = icmp eq i32 %bf.clear, 0, !dbg !4828
  br i1 %tobool3, label %if.end, label %cleanup, !dbg !4830

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %and4.lobit = and i32 %call1, 8, !dbg !4831
  %phitmp = icmp eq i32 %and4.lobit, 0, !dbg !4831
  br label %cleanup, !dbg !4831

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true ], [ %phitmp, %if.end ]
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %return

sw.bb9:                                           ; preds = %cond.end
  %call10 = tail call fastcc i32 @gimple_asm_nlabels(%union.gimple_statement_d* %t) #7, !dbg !4832
  %cmp = icmp eq i32 %call10, 0, !dbg !4834
  br i1 %cmp, label %sw.epilog, label %return, !dbg !4835

sw.epilog:                                        ; preds = %sw.bb9, %cond.end, %cleanup
  %call14 = tail call zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d* %t) #6, !dbg !4836
  br label %return, !dbg !4837

return:                                           ; preds = %sw.bb9, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cleanup, %sw.epilog
  %retval.1 = phi i8 [ %call14, %sw.epilog ], [ 1, %cleanup ], [ 1, %cond.end ], [ 1, %sw.bb9 ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], [ 1, %cond.end ], !dbg !4819
  ret i8 %retval.1, !dbg !4838
}

declare dso_local zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @simple_goto_p(%union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !4839 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !4841, metadata !DIExpression()), !dbg !4842
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %t) #7, !dbg !4843
  %cmp = icmp eq i32 %call, 3, !dbg !4844
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4845

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %t) #7, !dbg !4846
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4846
  %bf.load = load i64, i64* %0, align 8, !dbg !4846
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4847
  %cmp2 = icmp eq i64 %bf.cast1, 30, !dbg !4847
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %1, !dbg !4848
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @stmt_can_make_abnormal_goto(%union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !4849 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !4851, metadata !DIExpression()), !dbg !4852
  %call = tail call fastcc zeroext i8 @computed_goto_p(%union.gimple_statement_d* %t) #7, !dbg !4853
  %tobool = icmp eq i8 %call, 0, !dbg !4853
  br i1 %tobool, label %if.end, label %return, !dbg !4855

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %t) #7, !dbg !4856
  %tobool2 = icmp eq i8 %call1, 0, !dbg !4856
  br i1 %tobool2, label %return, label %if.then3, !dbg !4858

if.then3:                                         ; preds = %if.end
  %call4 = tail call zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d* %t) #6, !dbg !4859
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4859
  br i1 %tobool5, label %land.end, label %land.rhs, !dbg !4860

land.rhs:                                         ; preds = %if.then3
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4861
  %has_nonlocal_label = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 20, !dbg !4862
  %bf.load = load i32, i32* %has_nonlocal_label, align 8, !dbg !4862
  %bf.lshr = lshr i32 %bf.load, 20, !dbg !4862
  %1 = trunc i32 %bf.lshr to i8
  %2 = and i8 %1, 1
  br label %land.end

land.end:                                         ; preds = %if.then3, %land.rhs
  %3 = phi i8 [ 0, %if.then3 ], [ %2, %land.rhs ]
  br label %return, !dbg !4863

return:                                           ; preds = %if.end, %entry, %land.end
  %retval.0 = phi i8 [ %3, %land.end ], [ 1, %entry ], [ 0, %if.end ], !dbg !4852
  ret i8 %retval.0, !dbg !4864
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4865 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4867, metadata !DIExpression()), !dbg !4868
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4869
  %cmp = icmp eq i32 %call, 8, !dbg !4870
  %conv1 = zext i1 %cmp to i8, !dbg !4869
  ret i8 %conv1, !dbg !4871
}

declare dso_local zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !4872 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !4874, metadata !DIExpression()), !dbg !4875
  %call = tail call zeroext i8 @is_ctrl_stmt(%union.gimple_statement_d* %t) #7, !dbg !4876
  %tobool = icmp eq i8 %call, 0, !dbg !4876
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4877

lor.rhs:                                          ; preds = %entry
  %call1 = tail call zeroext i8 @is_ctrl_altering_stmt(%union.gimple_statement_d* %t) #7, !dbg !4878
  %tobool3 = icmp ne i8 %call1, 0, !dbg !4877
  %phitmp = zext i1 %tobool3 to i8, !dbg !4877
  br label %lor.end, !dbg !4877

lor.end:                                          ; preds = %entry, %lor.rhs
  %0 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %0, !dbg !4879
}

; Function Attrs: nounwind uwtable
define dso_local void @delete_tree_cfg_annotations() local_unnamed_addr #5 !dbg !4880 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4881
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4881
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4881
  %x_label_to_block_map = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 6, !dbg !4881
  store %struct.VEC_basic_block_gc* null, %struct.VEC_basic_block_gc** %x_label_to_block_map, align 8, !dbg !4882
  ret void, !dbg !4883
}

; Function Attrs: nounwind uwtable
define dso_local %union.gimple_statement_d* @first_stmt(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !4884 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4886, metadata !DIExpression()), !dbg !4889
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !4890
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4890
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4887, metadata !DIExpression(DW_OP_deref)), !dbg !4889
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %i, %struct.basic_block_def* %bb) #7, !dbg !4891
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !4888, metadata !DIExpression()), !dbg !4889
  br label %while.cond, !dbg !4892

while.cond:                                       ; preds = %while.body, %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4887, metadata !DIExpression(DW_OP_deref)), !dbg !4889
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4893
  %tobool = icmp eq i8 %call, 0, !dbg !4893
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4894

land.rhs:                                         ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4887, metadata !DIExpression(DW_OP_deref)), !dbg !4889
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4895
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4888, metadata !DIExpression()), !dbg !4889
  %call2 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call1) #7, !dbg !4896
  %tobool3 = icmp ne i8 %call2, 0, !dbg !4894
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %stmt.1 = phi %union.gimple_statement_d* [ null, %while.cond ], [ %call1, %land.rhs ], !dbg !4889
  %1 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !4889
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1, metadata !4888, metadata !DIExpression()), !dbg !4889
  br i1 %1, label %while.body, label %while.end, !dbg !4892

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4887, metadata !DIExpression(DW_OP_deref)), !dbg !4889
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4897
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !4888, metadata !DIExpression()), !dbg !4889
  br label %while.cond, !dbg !4892, !llvm.loop !4899

while.end:                                        ; preds = %land.end
  %stmt.1.lcssa = phi %union.gimple_statement_d* [ %stmt.1, %land.end ], !dbg !4889
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1.lcssa, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1.lcssa, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.1.lcssa, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4901
  ret %union.gimple_statement_d* %stmt.1.lcssa, !dbg !4902
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4903 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4905, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4906, metadata !DIExpression()), !dbg !4909
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !4910
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4907, metadata !DIExpression()), !dbg !4908
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %call) #7, !dbg !4911
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4912
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4913
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4914
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4915
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4916
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4917
  ret void, !dbg !4918
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_prev(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4919 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4921, metadata !DIExpression()), !dbg !4922
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4923
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4923
  %prev = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 1, !dbg !4924
  %1 = bitcast %struct.gimple_seq_node_d** %prev to i64*, !dbg !4924
  %2 = load i64, i64* %1, align 8, !dbg !4924
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4925
  store i64 %2, i64* %3, align 8, !dbg !4925
  ret void, !dbg !4926
}

; Function Attrs: nounwind uwtable
define dso_local %union.gimple_statement_d* @last_and_only_stmt(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !4927 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4929, metadata !DIExpression()), !dbg !4933
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !4934
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4934
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4933
  call fastcc void @gsi_last_nondebug_bb(%struct.gimple_stmt_iterator* nonnull sret %i, %struct.basic_block_def* %bb) #7, !dbg !4935
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4933
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4936
  %tobool = icmp eq i8 %call, 0, !dbg !4936
  br i1 %tobool, label %if.end, label %cleanup, !dbg !4938

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4933
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4939
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4931, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4933
  call fastcc void @gsi_prev_nondebug(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !4940
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4933
  %call2 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4941
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4941
  br i1 %tobool3, label %if.end5, label %cleanup, !dbg !4943

if.end5:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4933
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4944
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !4932, metadata !DIExpression()), !dbg !4933
  %call7 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call6) #7, !dbg !4945
  %cmp = icmp eq i32 %call7, 4, !dbg !4947
  %call1. = select i1 %cmp, %union.gimple_statement_d* %call1, %union.gimple_statement_d* null, !dbg !4948
  br label %cleanup, !dbg !4948

cleanup:                                          ; preds = %if.end, %entry, %if.end5
  %retval.0 = phi %union.gimple_statement_d* [ null, %entry ], [ %call1, %if.end ], [ %call1., %if.end5 ], !dbg !4933
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4949
  ret %union.gimple_statement_d* %retval.0, !dbg !4949
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_nondebug_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4950 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4952, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4953, metadata !DIExpression()), !dbg !4955
  tail call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !4956
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !4957
  %tobool = icmp eq i8 %call, 0, !dbg !4957
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4959

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !4960
  %call2 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call1) #7, !dbg !4961
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4961
  br i1 %tobool3, label %if.end, label %if.then, !dbg !4962

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @gsi_prev_nondebug(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !4963
  br label %if.end, !dbg !4963

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  ret void, !dbg !4964
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_prev_nondebug(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4965 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4967, metadata !DIExpression()), !dbg !4968
  br label %do.body, !dbg !4969

do.body:                                          ; preds = %land.rhs, %entry
  tail call fastcc void @gsi_prev(%struct.gimple_stmt_iterator* %i) #7, !dbg !4970
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4972
  %tobool = icmp eq i8 %call, 0, !dbg !4972
  br i1 %tobool, label %land.rhs, label %do.end, !dbg !4973

land.rhs:                                         ; preds = %do.body
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !4974
  %call2 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call1) #7, !dbg !4975
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4973
  br i1 %tobool3, label %do.end, label %do.body, !dbg !4976, !llvm.loop !4977

do.end:                                           ; preds = %land.rhs, %do.body
  ret void, !dbg !4979
}

; Function Attrs: nounwind uwtable
define dso_local void @verify_types_in_gimple_seq(%struct.gimple_seq_d* %stmts) local_unnamed_addr #5 !dbg !4980 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %stmts, metadata !4984, metadata !DIExpression()), !dbg !4985
  %call = tail call fastcc zeroext i8 @verify_types_in_gimple_seq_2(%struct.gimple_seq_d* %stmts) #7, !dbg !4986
  %tobool = icmp eq i8 %call, 0, !dbg !4986
  br i1 %tobool, label %if.end, label %if.then, !dbg !4988

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4989
  br label %if.end, !dbg !4989

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4990
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_types_in_gimple_seq_2(%struct.gimple_seq_d* %stmts) unnamed_addr #5 !dbg !4991 {
entry:
  %ittr = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %stmts, metadata !4995, metadata !DIExpression()), !dbg !5005
  %0 = bitcast %struct.gimple_stmt_iterator* %ittr to i8*, !dbg !5006
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5006
  call void @llvm.dbg.value(metadata i8 0, metadata !4997, metadata !DIExpression()), !dbg !5005
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5007
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5007
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %stmts) #7, !dbg !5007
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5007
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5007
  br label %for.cond, !dbg !5008

for.cond:                                         ; preds = %for.inc, %entry
  %err.0 = phi i8 [ 0, %entry ], [ %err.1, %for.inc ], !dbg !5005
  call void @llvm.dbg.value(metadata i8 %err.0, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ittr, metadata !4996, metadata !DIExpression(DW_OP_deref)), !dbg !5005
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ittr) #7, !dbg !5009
  %tobool = icmp eq i8 %call, 0, !dbg !5010
  br i1 %tobool, label %for.body, label %for.end, !dbg !5011

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ittr, metadata !4996, metadata !DIExpression(DW_OP_deref)), !dbg !5005
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ittr) #7, !dbg !5012
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4998, metadata !DIExpression()), !dbg !5013
  %call2 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !5014
  switch i32 %call2, label %sw.default [
    i32 10, label %sw.bb
    i32 17, label %sw.bb7
    i32 12, label %sw.bb20
    i32 11, label %sw.bb27
  ], !dbg !5015

sw.bb:                                            ; preds = %for.body
  %call3 = call fastcc %struct.gimple_seq_d* @gimple_bind_body(%union.gimple_statement_d* %call1) #7, !dbg !5016
  %call4 = call fastcc zeroext i8 @verify_types_in_gimple_seq_2(%struct.gimple_seq_d* %call3) #7, !dbg !5017
  %or5 = or i8 %err.0, %call4, !dbg !5018
  call void @llvm.dbg.value(metadata i8 %or5, metadata !4997, metadata !DIExpression()), !dbg !5005
  br label %for.inc, !dbg !5019

sw.bb7:                                           ; preds = %for.body
  %call8 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %call1) #7, !dbg !5020
  %call9 = call fastcc zeroext i8 @verify_types_in_gimple_seq_2(%struct.gimple_seq_d* %call8) #7, !dbg !5021
  %or123 = or i8 %err.0, %call9, !dbg !5022
  call void @llvm.dbg.value(metadata i8 %or123, metadata !4997, metadata !DIExpression()), !dbg !5005
  %call14 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %call1) #7, !dbg !5023
  %call15 = call fastcc zeroext i8 @verify_types_in_gimple_seq_2(%struct.gimple_seq_d* %call14) #7, !dbg !5024
  %or184 = or i8 %or123, %call15, !dbg !5025
  call void @llvm.dbg.value(metadata i8 %or184, metadata !4997, metadata !DIExpression()), !dbg !5005
  br label %for.inc, !dbg !5026

sw.bb20:                                          ; preds = %for.body
  %call21 = call fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* %call1) #7, !dbg !5027
  %call22 = call fastcc zeroext i8 @verify_types_in_gimple_seq_2(%struct.gimple_seq_d* %call21) #7, !dbg !5028
  %or252 = or i8 %err.0, %call22, !dbg !5029
  call void @llvm.dbg.value(metadata i8 %or252, metadata !4997, metadata !DIExpression()), !dbg !5005
  br label %for.inc, !dbg !5030

sw.bb27:                                          ; preds = %for.body
  %call28 = call fastcc %struct.gimple_seq_d* @gimple_catch_handler(%union.gimple_statement_d* %call1) #7, !dbg !5031
  %call29 = call fastcc zeroext i8 @verify_types_in_gimple_seq_2(%struct.gimple_seq_d* %call28) #7, !dbg !5032
  %or321 = or i8 %err.0, %call29, !dbg !5033
  call void @llvm.dbg.value(metadata i8 %or321, metadata !4997, metadata !DIExpression()), !dbg !5005
  br label %for.inc, !dbg !5034

sw.default:                                       ; preds = %for.body
  %call34 = call fastcc zeroext i8 @verify_types_in_gimple_stmt(%union.gimple_statement_d* %call1) #7, !dbg !5035
  call void @llvm.dbg.value(metadata i8 %call34, metadata !5002, metadata !DIExpression()), !dbg !5036
  %tobool35 = icmp eq i8 %call34, 0, !dbg !5037
  br i1 %tobool35, label %if.end, label %if.then, !dbg !5039

if.then:                                          ; preds = %sw.default
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call1) #6, !dbg !5040
  br label %if.end, !dbg !5040

if.end:                                           ; preds = %sw.default, %if.then
  %or386 = or i8 %err.0, %call34, !dbg !5041
  call void @llvm.dbg.value(metadata i8 %or386, metadata !4997, metadata !DIExpression()), !dbg !5005
  br label %for.inc, !dbg !5042

for.inc:                                          ; preds = %sw.bb, %sw.bb7, %sw.bb20, %sw.bb27, %if.end
  %err.1 = phi i8 [ %or386, %if.end ], [ %or321, %sw.bb27 ], [ %or252, %sw.bb20 ], [ %or184, %sw.bb7 ], [ %or5, %sw.bb ], !dbg !5043
  call void @llvm.dbg.value(metadata i8 %err.1, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ittr, metadata !4996, metadata !DIExpression(DW_OP_deref)), !dbg !5005
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %ittr) #7, !dbg !5044
  br label %for.cond, !dbg !5045, !llvm.loop !5046

for.end:                                          ; preds = %for.cond
  %err.0.lcssa = phi i8 [ %err.0, %for.cond ], !dbg !5005
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !4997, metadata !DIExpression()), !dbg !5005
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5048
  ret i8 %err.0.lcssa, !dbg !5049
}

declare dso_local void @internal_error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @tree_node_can_be_shared(%union.tree_node* %t) local_unnamed_addr #5 !dbg !5050 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5054, metadata !DIExpression()), !dbg !5055
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5056
  %bf.load = load i64, i64* %0, align 8, !dbg !5056
  %bf.cast = and i64 %bf.load, 65535, !dbg !5056
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5056
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5056
  %cmp = icmp eq i32 %1, 2, !dbg !5056
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !5056

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i32 %1, 3, !dbg !5056
  br i1 %cmp7, label %return, label %lor.lhs.false8, !dbg !5058

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %t) #6, !dbg !5059
  %tobool = icmp eq i8 %call, 0, !dbg !5059
  br i1 %tobool, label %lor.lhs.false9, label %return, !dbg !5060

lor.lhs.false9:                                   ; preds = %lor.lhs.false8
  %bf.load11 = load i64, i64* %0, align 8, !dbg !5061
  %bf.cast133 = and i64 %bf.load11, 65535, !dbg !5062
  %cmp14 = icmp eq i64 %bf.cast133, 141, !dbg !5062
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5063
  %cmp17 = icmp eq %union.tree_node* %2, %t, !dbg !5064
  %or.cond = or i1 %cmp14, %cmp17, !dbg !5065
  br i1 %or.cond, label %return, label %lor.lhs.false19, !dbg !5065

lor.lhs.false19:                                  ; preds = %lor.lhs.false9
  %cmp24 = icmp eq i64 %bf.cast133, 1, !dbg !5066
  br i1 %cmp24, label %return, label %if.end, !dbg !5067

if.end:                                           ; preds = %lor.lhs.false19
  %cmp30 = icmp eq i64 %bf.cast133, 139, !dbg !5068
  br i1 %cmp30, label %return, label %while.cond.preheader, !dbg !5070

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !5071

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %bf.load42 = phi i64 [ %bf.load35.pre, %while.body ], [ %bf.load11, %while.cond.preheader ], !dbg !5072
  %t.addr.0 = phi %union.tree_node* [ %7, %while.body ], [ %t, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !5054, metadata !DIExpression()), !dbg !5055
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5072
  %bf.cast376 = and i64 %bf.load42, 65535, !dbg !5073
  %cmp38 = icmp eq i64 %bf.cast376, 45, !dbg !5073
  br i1 %cmp38, label %land.lhs.true, label %lor.lhs.false40, !dbg !5074

lor.lhs.false40:                                  ; preds = %while.cond
  %cmp45 = icmp eq i64 %bf.cast376, 46, !dbg !5075
  br i1 %cmp45, label %land.lhs.true, label %lor.lhs.false51, !dbg !5076

land.lhs.true:                                    ; preds = %lor.lhs.false40, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5077
  %arrayidx47 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5077
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx47, align 8, !dbg !5077
  %call48 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %4) #6, !dbg !5078
  %tobool50 = icmp eq i8 %call48, 0, !dbg !5078
  br i1 %tobool50, label %land.lhs.true.lor.lhs.false51_crit_edge, label %while.body, !dbg !5079

land.lhs.true.lor.lhs.false51_crit_edge:          ; preds = %land.lhs.true
  %bf.load53.pre = load i64, i64* %3, align 8, !dbg !5080
  %.pre = and i64 %bf.load53.pre, 65535, !dbg !5081
  br label %lor.lhs.false51, !dbg !5079

lor.lhs.false51:                                  ; preds = %land.lhs.true.lor.lhs.false51_crit_edge, %lor.lhs.false40
  %bf.cast558.pre-phi = phi i64 [ %.pre, %land.lhs.true.lor.lhs.false51_crit_edge ], [ %bf.cast376, %lor.lhs.false40 ], !dbg !5081
  %cmp56 = icmp eq i64 %bf.cast558.pre-phi, 41, !dbg !5081
  br i1 %cmp56, label %while.body, label %lor.lhs.false58, !dbg !5082

lor.lhs.false58:                                  ; preds = %lor.lhs.false51
  %5 = add nsw i64 %bf.cast558.pre-phi, -43, !dbg !5083
  %6 = icmp ult i64 %5, 2, !dbg !5083
  br i1 %6, label %while.body, label %while.end, !dbg !5083

while.body:                                       ; preds = %land.lhs.true, %lor.lhs.false51, %lor.lhs.false58
  %operands72 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5084
  %7 = load %union.tree_node*, %union.tree_node** %operands72, align 8, !dbg !5084
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5054, metadata !DIExpression()), !dbg !5055
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5055
  %bf.load35.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !5072
  br label %while.cond, !dbg !5071, !llvm.loop !5085

while.end:                                        ; preds = %lor.lhs.false58
  %bf.cast558.pre-phi.lcssa = phi i64 [ %bf.cast558.pre-phi, %lor.lhs.false58 ], !dbg !5081
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !5054, metadata !DIExpression()), !dbg !5055
  %arrayidx79 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast558.pre-phi.lcssa, !dbg !5086
  %8 = load i32, i32* %arrayidx79, align 4, !dbg !5086
  %cmp80 = icmp eq i32 %8, 3, !dbg !5086
  %. = zext i1 %cmp80 to i8, !dbg !5055
  br label %return, !dbg !5055

return:                                           ; preds = %lor.lhs.false8, %while.end, %if.end, %entry, %lor.lhs.false, %lor.lhs.false9, %lor.lhs.false19
  %retval.0 = phi i8 [ 1, %lor.lhs.false19 ], [ 1, %lor.lhs.false9 ], [ 1, %lor.lhs.false8 ], [ 1, %lor.lhs.false ], [ 1, %entry ], [ 1, %if.end ], [ %., %while.end ], !dbg !5055
  ret i8 %retval.0, !dbg !5088
}

; Function Attrs: nounwind uwtable
define dso_local void @verify_stmts() local_unnamed_addr #5 !dbg !5089 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %wi = alloca %struct.walk_stmt_info, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %t = alloca %union.tree_node*, align 8
  %tmp56 = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5122
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5122
  call void @llvm.dbg.value(metadata i8 0, metadata !5093, metadata !DIExpression()), !dbg !5123
  %1 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !5124
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1) #8, !dbg !5124
  %2 = load i8, i8* @timevar_enable, align 1, !dbg !5125
  %tobool = icmp eq i8 %2, 0, !dbg !5125
  br i1 %tobool, label %do.end, label %if.then, !dbg !5128

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 108) #6, !dbg !5125
  br label %do.end, !dbg !5125

do.end:                                           ; preds = %entry, %if.then
  %call = tail call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !5129
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call, metadata !5094, metadata !DIExpression()), !dbg !5123
  %call1 = tail call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !5130
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call1, metadata !5095, metadata !DIExpression()), !dbg !5123
  %call2 = call i8* @memset(i8* nonnull %1, i32 0, i64 56) #6, !dbg !5131
  %info = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !5132
  %3 = bitcast i8** %info to %struct.pointer_set_t**, !dbg !5133
  store %struct.pointer_set_t* %call, %struct.pointer_set_t** %3, align 8, !dbg !5133
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5134
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5134
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5134
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !5134
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5134
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5135
  %8 = bitcast %union.tree_node** %t to i8*, !dbg !5136
  %9 = bitcast %struct.pointer_set_t* %call to i8*, !dbg !5136
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp56 to i8*, !dbg !5137
  br label %for.cond, !dbg !5134

for.cond:                                         ; preds = %for.inc133, %do.end
  %11 = phi %struct.control_flow_graph* [ %5, %do.end ], [ %.pre6, %for.inc133 ], !dbg !5138
  %12 = phi %struct.function* [ %4, %do.end ], [ %.pre, %for.inc133 ], !dbg !5138
  %err.0 = phi i8 [ 0, %do.end ], [ %err.7.lcssa, %for.inc133 ], !dbg !5139
  %.pn = phi %struct.basic_block_def* [ %6, %do.end ], [ %bb.0, %for.inc133 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !5140
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5140
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5091, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.0, metadata !5093, metadata !DIExpression()), !dbg !5123
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 1, !dbg !5138
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5138
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %13, !dbg !5138
  br i1 %cmp, label %for.end135, label %for.body, !dbg !5134

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5141
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #6, !dbg !5141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !5141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5141
  br label %for.cond5, !dbg !5142

for.cond5:                                        ; preds = %for.inc54, %for.body
  %err.1 = phi i8 [ %err.0, %for.body ], [ %err.3.lcssa, %for.inc54 ], !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.1, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5092, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call6 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5143
  %tobool7 = icmp eq i8 %call6, 0, !dbg !5144
  br i1 %tobool7, label %for.body8, label %for.end55, !dbg !5145

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5092, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call9 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5146
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !5098, metadata !DIExpression()), !dbg !5147
  %14 = bitcast %union.gimple_statement_d* %call9 to i8*, !dbg !5148
  %call10 = call i32 @pointer_set_insert(%struct.pointer_set_t* %call1, i8* %14) #6, !dbg !5149
  %call11 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %call9) #7, !dbg !5150
  %cmp12 = icmp eq %struct.basic_block_def* %call11, %bb.0, !dbg !5152
  br i1 %cmp12, label %if.end15, label %if.then13, !dbg !5153

if.then13:                                        ; preds = %for.body8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !5154
  %15 = or i8 %err.1, 1, !dbg !5156
  call void @llvm.dbg.value(metadata i8 %15, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %if.end15, !dbg !5157

if.end15:                                         ; preds = %for.body8, %if.then13
  %err.2 = phi i8 [ %15, %if.then13 ], [ %err.1, %for.body8 ], !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.2, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i64 0, metadata !5102, metadata !DIExpression()), !dbg !5147
  br label %for.cond16, !dbg !5158

for.cond16:                                       ; preds = %cleanup, %if.end15
  %i.0 = phi i64 [ 0, %if.end15 ], [ %inc, %cleanup ], !dbg !5159
  %err.3 = phi i8 [ %err.2, %if.end15 ], [ %err.6, %cleanup ], !dbg !5160
  call void @llvm.dbg.value(metadata i8 %err.3, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5102, metadata !DIExpression()), !dbg !5147
  %call17 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call9) #7, !dbg !5161
  %conv18 = zext i32 %call17 to i64, !dbg !5161
  %cmp19 = icmp ult i64 %i.0, %conv18, !dbg !5162
  br i1 %cmp19, label %for.body21, label %for.inc54, !dbg !5163

for.body21:                                       ; preds = %for.cond16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5164
  %call22 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %call9, i64 %i.0) #7, !dbg !5165
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !5103, metadata !DIExpression()), !dbg !5136
  store %union.tree_node* %call22, %union.tree_node** %t, align 8, !dbg !5166
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !5103, metadata !DIExpression()), !dbg !5136
  %tobool24 = icmp eq %union.tree_node* %call22, null, !dbg !5167
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !5169

if.then25:                                        ; preds = %for.body21
  call void (i8*, ...) @error(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !5170
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call9) #6, !dbg !5172
  %16 = or i8 %err.3, 1, !dbg !5173
  call void @llvm.dbg.value(metadata i8 %16, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %cleanup, !dbg !5174

if.else:                                          ; preds = %for.body21
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5169
  %bf.load = load i64, i64* %17, align 8, !dbg !5175
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !5177
  %cmp29 = icmp eq i64 %bf.cast3, 141, !dbg !5177
  br i1 %cmp29, label %if.end45, label %land.lhs.true, !dbg !5178

land.lhs.true:                                    ; preds = %if.else
  %cmp35 = icmp eq i64 %bf.cast3, 29, !dbg !5179
  br i1 %cmp35, label %if.end45, label %land.lhs.true37, !dbg !5180

land.lhs.true37:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !5103, metadata !DIExpression()), !dbg !5136
  %call38 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call22) #6, !dbg !5181
  %tobool39 = icmp eq i8 %call38, 0, !dbg !5181
  br i1 %tobool39, label %if.then40, label %if.end45, !dbg !5182

if.then40:                                        ; preds = %land.lhs.true37
  call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !5183
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call9) #6, !dbg !5185
  %18 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !5186
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !5103, metadata !DIExpression()), !dbg !5136
  call void @debug_generic_expr(%union.tree_node* %18) #6, !dbg !5187
  %19 = or i8 %err.3, 1, !dbg !5188
  call void @llvm.dbg.value(metadata i8 %19, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %if.end45, !dbg !5189

if.end45:                                         ; preds = %land.lhs.true37, %land.lhs.true, %if.else, %if.then40
  %err.4 = phi i8 [ %err.3, %land.lhs.true37 ], [ %19, %if.then40 ], [ %err.3, %land.lhs.true ], [ %err.3, %if.else ], !dbg !5160
  call void @llvm.dbg.value(metadata i8 %err.4, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !5103, metadata !DIExpression(DW_OP_deref)), !dbg !5136
  %call46 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %t, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @verify_node_sharing, i8* %9, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !5190
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !5110, metadata !DIExpression()), !dbg !5136
  %tobool47 = icmp eq %union.tree_node* %call46, null, !dbg !5191
  br i1 %tobool47, label %cleanup, label %if.then48, !dbg !5193

if.then48:                                        ; preds = %if.end45
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !5194
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call9) #6, !dbg !5196
  call void @debug_generic_expr(%union.tree_node* nonnull %call46) #6, !dbg !5197
  %20 = or i8 %err.4, 1, !dbg !5198
  call void @llvm.dbg.value(metadata i8 %20, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %cleanup, !dbg !5199

cleanup:                                          ; preds = %if.end45, %if.then48, %if.then25
  %err.6 = phi i8 [ %16, %if.then25 ], [ %20, %if.then48 ], [ %err.4, %if.end45 ], !dbg !5136
  call void @llvm.dbg.value(metadata i8 %err.6, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5200
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5201
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5102, metadata !DIExpression()), !dbg !5147
  br label %for.cond16, !dbg !5202, !llvm.loop !5203

for.inc54:                                        ; preds = %for.cond16
  %err.3.lcssa = phi i8 [ %err.3, %for.cond16 ], !dbg !5160
  call void @llvm.dbg.value(metadata i8 %err.3.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.3.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.3.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5092, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !5205
  br label %for.cond5, !dbg !5206, !llvm.loop !5207

for.end55:                                        ; preds = %for.cond5
  %err.1.lcssa = phi i8 [ %err.1, %for.cond5 ], !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.1.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.1.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.1.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !5209
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp56, %struct.basic_block_def* %bb.0) #7, !dbg !5209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !5209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !5209
  br label %for.cond57, !dbg !5210

for.cond57:                                       ; preds = %if.end131, %for.end55
  %err.7 = phi i8 [ %err.1.lcssa, %for.end55 ], [ %err.14, %if.end131 ], !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.7, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5092, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call58 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5211
  %tobool59 = icmp eq i8 %call58, 0, !dbg !5212
  br i1 %tobool59, label %for.body61, label %for.inc133, !dbg !5213

for.body61:                                       ; preds = %for.cond57
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5092, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call62 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5214
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call62, metadata !5111, metadata !DIExpression()), !dbg !5215
  %call63 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call62) #7, !dbg !5216
  %cmp64 = icmp eq i32 %call63, 34, !dbg !5218
  br i1 %cmp64, label %if.then69, label %lor.lhs.false, !dbg !5219

lor.lhs.false:                                    ; preds = %for.body61
  %call66 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call62) #7, !dbg !5220
  %cmp67 = icmp eq i32 %call66, 10, !dbg !5221
  br i1 %cmp67, label %if.then69, label %if.end73, !dbg !5222

if.then69:                                        ; preds = %lor.lhs.false, %for.body61
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !5223
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call62) #6, !dbg !5225
  %21 = or i8 %err.7, 1, !dbg !5226
  call void @llvm.dbg.value(metadata i8 %21, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %if.end73, !dbg !5227

if.end73:                                         ; preds = %if.then69, %lor.lhs.false
  %err.8 = phi i8 [ %21, %if.then69 ], [ %err.7, %lor.lhs.false ], !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.8, metadata !5093, metadata !DIExpression()), !dbg !5123
  %22 = bitcast %union.gimple_statement_d* %call62 to i8*, !dbg !5228
  %call74 = call i32 @pointer_set_insert(%struct.pointer_set_t* %call1, i8* %22) #6, !dbg !5229
  %call75 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %call62) #7, !dbg !5230
  %cmp76 = icmp eq %struct.basic_block_def* %call75, %bb.0, !dbg !5232
  br i1 %cmp76, label %if.end82, label %if.then78, !dbg !5233

if.then78:                                        ; preds = %if.end73
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !5234
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call62) #6, !dbg !5236
  %23 = or i8 %err.8, 1, !dbg !5237
  call void @llvm.dbg.value(metadata i8 %23, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %if.end82, !dbg !5238

if.end82:                                         ; preds = %if.end73, %if.then78
  %err.9 = phi i8 [ %23, %if.then78 ], [ %err.8, %if.end73 ], !dbg !5215
  call void @llvm.dbg.value(metadata i8 %err.9, metadata !5093, metadata !DIExpression()), !dbg !5123
  %call83 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call62) #7, !dbg !5239
  %cmp84 = icmp eq i32 %call83, 4, !dbg !5240
  br i1 %cmp84, label %if.then86, label %if.end118, !dbg !5241

if.then86:                                        ; preds = %if.end82
  %call87 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call62) #7, !dbg !5242
  call void @llvm.dbg.value(metadata %union.tree_node* %call87, metadata !5115, metadata !DIExpression()), !dbg !5243
  %label_decl_uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call87, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !5244
  %24 = bitcast %union.tree_node** %label_decl_uid to i32*, !dbg !5244
  %25 = load i32, i32* %24, align 8, !dbg !5244
  call void @llvm.dbg.value(metadata i32 %25, metadata !5118, metadata !DIExpression()), !dbg !5243
  %cmp88 = icmp eq i32 %25, -1, !dbg !5245
  br i1 %cmp88, label %if.then101, label %lor.lhs.false90, !dbg !5247

lor.lhs.false90:                                  ; preds = %if.then86
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5248
  %cfg92 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !5248
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg92, align 8, !dbg !5248
  %x_label_to_block_map = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 6, !dbg !5248
  %28 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_label_to_block_map, align 8, !dbg !5248
  %tobool93 = icmp eq %struct.VEC_basic_block_gc* %28, null, !dbg !5248
  br i1 %tobool93, label %cond.end, label %cond.true, !dbg !5248

cond.true:                                        ; preds = %lor.lhs.false90
  %base97 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %28, i64 0, i32 0, !dbg !5248
  br label %cond.end, !dbg !5248

cond.end:                                         ; preds = %lor.lhs.false90, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base97, %cond.true ], [ null, %lor.lhs.false90 ], !dbg !5248
  %call98 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %25) #7, !dbg !5248
  %cmp99 = icmp eq %struct.basic_block_def* %call98, %bb.0, !dbg !5249
  br i1 %cmp99, label %if.end105, label %if.then101, !dbg !5250

if.then101:                                       ; preds = %cond.end, %if.then86
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !5251
  %29 = or i8 %err.9, 1, !dbg !5253
  call void @llvm.dbg.value(metadata i8 %29, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %if.end105, !dbg !5254

if.end105:                                        ; preds = %cond.end, %if.then101
  %err.10 = phi i8 [ %29, %if.then101 ], [ %err.9, %cond.end ], !dbg !5215
  call void @llvm.dbg.value(metadata i8 %err.10, metadata !5093, metadata !DIExpression()), !dbg !5123
  %label_decl106 = bitcast %union.tree_node* %call87 to %struct.tree_label_decl*, !dbg !5255
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl106, i64 0, i32 2, !dbg !5255
  %30 = load i32, i32* %eh_landing_pad_nr, align 4, !dbg !5255
  call void @llvm.dbg.value(metadata i32 %30, metadata !5118, metadata !DIExpression()), !dbg !5243
  %tobool107 = icmp eq i32 %30, 0, !dbg !5256
  br i1 %tobool107, label %if.end118, label %if.then108, !dbg !5257

if.then108:                                       ; preds = %if.end105
  %call109 = call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32 %30) #6, !dbg !5258
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call109, metadata !5119, metadata !DIExpression()), !dbg !5259
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call109, i64 0, i32 2, !dbg !5260
  %31 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !5260
  %cmp110 = icmp eq %union.tree_node* %call87, %31, !dbg !5262
  br i1 %cmp110, label %if.end118, label %if.then112, !dbg !5263

if.then112:                                       ; preds = %if.then108
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !5264
  %32 = or i8 %err.10, 1, !dbg !5266
  call void @llvm.dbg.value(metadata i8 %32, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %if.end118, !dbg !5267

if.end118:                                        ; preds = %if.then108, %if.end105, %if.then112, %if.end82
  %err.13 = phi i8 [ %err.9, %if.end82 ], [ %err.10, %if.end105 ], [ %32, %if.then112 ], [ %err.10, %if.then108 ], !dbg !5215
  call void @llvm.dbg.value(metadata i8 %err.13, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5092, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call119 = call fastcc zeroext i8 @verify_stmt(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !5268
  %or1222 = or i8 %err.13, %call119, !dbg !5269
  call void @llvm.dbg.value(metadata i8 %or1222, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5092, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call124 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5270
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !5097, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call125 = call %union.tree_node* @walk_gimple_op(%union.gimple_statement_d* %call124, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @verify_node_sharing, %struct.walk_stmt_info* nonnull %wi) #6, !dbg !5271
  call void @llvm.dbg.value(metadata %union.tree_node* %call125, metadata !5096, metadata !DIExpression()), !dbg !5123
  %tobool126 = icmp eq %union.tree_node* %call125, null, !dbg !5272
  br i1 %tobool126, label %if.end131, label %if.then127, !dbg !5274

if.then127:                                       ; preds = %if.end118
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !5275
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call62) #6, !dbg !5277
  call void @debug_generic_expr(%union.tree_node* nonnull %call125) #6, !dbg !5278
  %33 = or i8 %or1222, 1, !dbg !5279
  call void @llvm.dbg.value(metadata i8 %33, metadata !5093, metadata !DIExpression()), !dbg !5123
  br label %if.end131, !dbg !5280

if.end131:                                        ; preds = %if.end118, %if.then127
  %err.14 = phi i8 [ %33, %if.then127 ], [ %or1222, %if.end118 ], !dbg !5215
  call void @llvm.dbg.value(metadata i8 %err.14, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5092, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !5281
  br label %for.cond57, !dbg !5282, !llvm.loop !5283

for.inc133:                                       ; preds = %for.cond57
  %err.7.lcssa = phi i8 [ %err.7, %for.cond57 ], !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.7.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.7.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.7.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5138
  %cfg4.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5285
  %.pre6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4.phi.trans.insert, align 8, !dbg !5138
  br label %for.cond, !dbg !5138, !llvm.loop !5286

for.end135:                                       ; preds = %for.cond
  %.lcssa = phi %struct.function* [ %12, %for.cond ], !dbg !5138
  %err.0.lcssa = phi i8 [ %err.0, %for.cond ], !dbg !5139
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !5093, metadata !DIExpression()), !dbg !5123
  store i1 false, i1* @eh_error_found, align 1, !dbg !5288
  %call137 = call %struct.htab* @get_eh_throw_stmt_table(%struct.function* %.lcssa) #6, !dbg !5289
  %tobool138 = icmp eq %struct.htab* %call137, null, !dbg !5289
  br i1 %tobool138, label %if.end142, label %if.then139, !dbg !5291

if.then139:                                       ; preds = %for.end135
  %34 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5292
  %call141 = call %struct.htab* @get_eh_throw_stmt_table(%struct.function* %34) #6, !dbg !5293
  %35 = bitcast %struct.pointer_set_t* %call1 to i8*, !dbg !5294
  call void @htab_traverse(%struct.htab* %call141, i32 (i8**, i8*)* nonnull @verify_eh_throw_stmt_node, i8* %35) #6, !dbg !5295
  br label %if.end142, !dbg !5295

if.end142:                                        ; preds = %for.end135, %if.then139
  %.b = load i1, i1* @eh_error_found, align 1, !dbg !5296
  %36 = zext i1 %.b to i8, !dbg !5296
  %or1451 = or i8 %err.0.lcssa, %36, !dbg !5298
  %tobool146 = icmp eq i8 %or1451, 0, !dbg !5298
  br i1 %tobool146, label %if.end148, label %if.then147, !dbg !5299

if.then147:                                       ; preds = %if.end142
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !5300
  br label %if.end148, !dbg !5300

if.end148:                                        ; preds = %if.end142, %if.then147
  call void @pointer_set_destroy(%struct.pointer_set_t* %call) #6, !dbg !5301
  call void @pointer_set_destroy(%struct.pointer_set_t* %call1) #6, !dbg !5302
  call void @verify_histograms() #6, !dbg !5303
  %37 = load i8, i8* @timevar_enable, align 1, !dbg !5304
  %tobool150 = icmp eq i8 %37, 0, !dbg !5304
  br i1 %tobool150, label %do.end154, label %if.then151, !dbg !5307

if.then151:                                       ; preds = %if.end148
  call void @timevar_pop_1(i32 108) #6, !dbg !5304
  br label %do.end154, !dbg !5304

do.end154:                                        ; preds = %if.end148, %if.then151
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1) #8, !dbg !5308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5308
  ret void, !dbg !5308
}

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #2

declare dso_local %struct.pointer_set_t* @pointer_set_create() local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i32 @pointer_set_insert(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5309 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5311, metadata !DIExpression()), !dbg !5312
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5313
  %0 = load i32, i32* %nargs, align 4, !dbg !5313
  ret i32 %0, !dbg !5314
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !5315 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5319, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i64 %index, metadata !5320, metadata !DIExpression()), !dbg !5322
  %conv = trunc i64 %index to i32, !dbg !5323
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !5324
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !5321, metadata !DIExpression()), !dbg !5322
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5325
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #7, !dbg !5326
  ret %union.tree_node* %call1, !dbg !5327
}

declare dso_local void @debug_gimple_stmt(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @debug_generic_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @verify_node_sharing(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !5328 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !5332, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !5333, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.value(metadata i8* %data, metadata !5334, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.value(metadata i8* %data, metadata !5335, metadata !DIExpression()), !dbg !5337
  %info = getelementptr inbounds i8, i8* %data, i64 24, !dbg !5338
  %0 = bitcast i8* %info to %struct.pointer_set_t**, !dbg !5338
  %1 = load %struct.pointer_set_t*, %struct.pointer_set_t** %0, align 8, !dbg !5338
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %1, metadata !5336, metadata !DIExpression()), !dbg !5337
  %2 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !5339
  %call = tail call zeroext i8 @tree_node_can_be_shared(%union.tree_node* %2) #7, !dbg !5341
  %tobool = icmp eq i8 %call, 0, !dbg !5341
  br i1 %tobool, label %if.end, label %if.then, !dbg !5342

if.then:                                          ; preds = %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !5343
  br label %cleanup, !dbg !5345

if.end:                                           ; preds = %entry
  %3 = bitcast %union.tree_node** %tp to i8**, !dbg !5346
  %4 = load i8*, i8** %3, align 8, !dbg !5346
  %call1 = tail call i32 @pointer_set_insert(%struct.pointer_set_t* %1, i8* %4) #6, !dbg !5348
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5348
  br i1 %tobool2, label %cleanup, label %if.then3, !dbg !5349

if.then3:                                         ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !5350
  br label %cleanup, !dbg !5351

cleanup:                                          ; preds = %if.end, %if.then3, %if.then
  %retval.0 = phi %union.tree_node* [ null, %if.then ], [ %5, %if.then3 ], [ null, %if.end ], !dbg !5337
  ret %union.tree_node* %retval.0, !dbg !5352
}

declare dso_local %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_stmt(%struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !5353 {
entry:
  %wi = alloca %struct.walk_stmt_info, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5357, metadata !DIExpression()), !dbg !5367
  %0 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !5368
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5368
  %call = tail call fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5369
  call void @llvm.dbg.value(metadata i8 %call, metadata !5360, metadata !DIExpression()), !dbg !5367
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5370
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !5361, metadata !DIExpression()), !dbg !5367
  %call2 = tail call fastcc zeroext i8 @is_gimple_omp(%union.gimple_statement_d* %call1) #7, !dbg !5371
  %tobool = icmp eq i8 %call2, 0, !dbg !5371
  br i1 %tobool, label %if.end, label %cleanup64, !dbg !5373

if.end:                                           ; preds = %entry
  %call3 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call1) #7, !dbg !5374
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5374
  br i1 %tobool4, label %if.end32, label %if.then5, !dbg !5375

if.then5:                                         ; preds = %if.end
  %call6 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %call1) #7, !dbg !5376
  %call7 = tail call zeroext i8 @is_gimple_call_addr(%union.tree_node* %call6) #6, !dbg !5378
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5378
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5379

if.then9:                                         ; preds = %if.then5
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.118, i64 0, i64 0)) #6, !dbg !5380
  br label %cleanup, !dbg !5382

if.end10:                                         ; preds = %if.then5
  %call11 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call1) #7, !dbg !5383
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5363, metadata !DIExpression()), !dbg !5384
  %tobool12 = icmp eq %union.tree_node* %call11, null, !dbg !5385
  br i1 %tobool12, label %cleanup, label %land.lhs.true, !dbg !5387

land.lhs.true:                                    ; preds = %if.end10
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5388
  %bf.load = load i64, i64* %1, align 8, !dbg !5388
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5389
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !5389
  br i1 %cmp, label %land.lhs.true13, label %cleanup, !dbg !5390

land.lhs.true13:                                  ; preds = %land.lhs.true
  %looping_const_or_pure_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 5, !dbg !5391
  %bf.load14 = load i32, i32* %looping_const_or_pure_flag, align 8, !dbg !5391
  %bf.clear15 = and i32 %bf.load14, 268435456, !dbg !5391
  %tobool16 = icmp eq i32 %bf.clear15, 0, !dbg !5391
  br i1 %tobool16, label %cleanup, label %land.lhs.true17, !dbg !5392

land.lhs.true17:                                  ; preds = %land.lhs.true13
  %bf.clear21 = and i32 %bf.load14, 134217728, !dbg !5393
  %tobool22 = icmp eq i32 %bf.clear21, 0, !dbg !5393
  br i1 %tobool22, label %land.lhs.true23, label %cleanup, !dbg !5394

land.lhs.true23:                                  ; preds = %land.lhs.true17
  %bf.cast282 = and i64 %bf.load, 1048576, !dbg !5395
  %tobool29 = icmp eq i64 %bf.cast282, 0, !dbg !5395
  br i1 %tobool29, label %if.then30, label %cleanup, !dbg !5396

if.then30:                                        ; preds = %land.lhs.true23
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.119, i64 0, i64 0)) #6, !dbg !5397
  br label %cleanup, !dbg !5399

cleanup:                                          ; preds = %land.lhs.true23, %land.lhs.true17, %land.lhs.true13, %if.end10, %land.lhs.true, %if.then30, %if.then9
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then30 ], [ false, %if.then9 ], [ true, %land.lhs.true23 ], [ true, %land.lhs.true17 ], [ true, %land.lhs.true13 ], [ true, %land.lhs.true ], [ true, %if.end10 ]
  br i1 %cleanup.dest.slot.0, label %if.end32, label %cleanup64

if.end32:                                         ; preds = %if.end, %cleanup
  %call33 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call1) #7, !dbg !5400
  %tobool34 = icmp eq i8 %call33, 0, !dbg !5400
  br i1 %tobool34, label %if.end36, label %cleanup64, !dbg !5402

if.end36:                                         ; preds = %if.end32
  %call37 = call i8* @memset(i8* nonnull %0, i32 0, i64 56) #6, !dbg !5403
  %call38 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5404
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !5359, metadata !DIExpression(DW_OP_deref)), !dbg !5367
  %call39 = call %union.tree_node* @walk_gimple_op(%union.gimple_statement_d* %call38, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @verify_expr, %struct.walk_stmt_info* nonnull %wi) #6, !dbg !5405
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !5358, metadata !DIExpression()), !dbg !5367
  %tobool40 = icmp eq %union.tree_node* %call39, null, !dbg !5406
  br i1 %tobool40, label %if.end44, label %if.then41, !dbg !5408

if.then41:                                        ; preds = %if.end36
  call void @debug_generic_expr(%union.tree_node* nonnull %call39) #6, !dbg !5409
  %call42 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5411
  %call43 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call42) #7, !dbg !5412
  call void (i32, i8*, ...) @inform(i32 %call43, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.120, i64 0, i64 0)) #6, !dbg !5413
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call1) #6, !dbg !5414
  br label %cleanup64, !dbg !5415

if.end44:                                         ; preds = %if.end36
  %call45 = call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %call1) #6, !dbg !5416
  call void @llvm.dbg.value(metadata i32 %call45, metadata !5362, metadata !DIExpression()), !dbg !5367
  %cmp46 = icmp eq i32 %call45, 0, !dbg !5417
  br i1 %cmp46, label %cleanup64, label %if.then47, !dbg !5419

if.then47:                                        ; preds = %if.end44
  %call48 = call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %call1) #6, !dbg !5420
  %tobool49 = icmp eq i8 %call48, 0, !dbg !5420
  br i1 %tobool49, label %if.then50, label %if.else, !dbg !5423

if.then50:                                        ; preds = %if.then47
  %2 = load i32, i32* @cgraph_state, align 4, !dbg !5424
  %cmp51 = icmp eq i32 %2, 2, !dbg !5427
  br i1 %cmp51, label %cleanup64, label %if.then52, !dbg !5428

if.then52:                                        ; preds = %if.then50
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.121, i64 0, i64 0)) #6, !dbg !5429
  br label %fail, !dbg !5431

if.else:                                          ; preds = %if.then47
  %cmp54 = icmp slt i32 %call45, 1, !dbg !5432
  %tobool56 = icmp ne i8 %call, 0, !dbg !5434
  %or.cond = or i1 %cmp54, %tobool56, !dbg !5435
  br i1 %or.cond, label %cleanup64, label %land.lhs.true57, !dbg !5435

land.lhs.true57:                                  ; preds = %if.else
  %call58 = call zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d* %call1) #6, !dbg !5436
  %tobool59 = icmp eq i8 %call58, 0, !dbg !5436
  br i1 %tobool59, label %cleanup64, label %if.then60, !dbg !5437

if.then60:                                        ; preds = %land.lhs.true57
  call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.122, i64 0, i64 0)) #6, !dbg !5438
  br label %fail, !dbg !5440

fail:                                             ; preds = %if.then60, %if.then52
  call void @llvm.dbg.label(metadata !5366), !dbg !5441
  call void @debug_gimple_stmt(%union.gimple_statement_d* %call1) #6, !dbg !5442
  br label %cleanup64, !dbg !5443

cleanup64:                                        ; preds = %land.lhs.true57, %if.then50, %if.end44, %if.end32, %entry, %if.else, %cleanup, %fail, %if.then41
  %retval.1 = phi i8 [ 1, %cleanup ], [ 1, %if.then41 ], [ 1, %fail ], [ 0, %entry ], [ 0, %if.end32 ], [ 0, %if.then50 ], [ 0, %if.else ], [ 0, %land.lhs.true57 ], [ 0, %if.end44 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5444
  ret i8 %retval.1, !dbg !5444
}

declare dso_local %union.tree_node* @walk_gimple_op(%union.gimple_statement_d*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, %struct.walk_stmt_info*) local_unnamed_addr #2

declare dso_local %struct.htab* @get_eh_throw_stmt_table(%struct.function*) local_unnamed_addr #2

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @verify_eh_throw_stmt_node(i8** %slot, i8* %data) #5 !dbg !5445 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5449, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.value(metadata i8* %data, metadata !5450, metadata !DIExpression()), !dbg !5453
  %0 = bitcast i8** %slot to %struct.throw_stmt_node**, !dbg !5454
  %1 = load %struct.throw_stmt_node*, %struct.throw_stmt_node** %0, align 8, !dbg !5454
  call void @llvm.dbg.value(metadata %struct.throw_stmt_node* %1, metadata !5451, metadata !DIExpression()), !dbg !5453
  %2 = bitcast i8* %data to %struct.pointer_set_t*, !dbg !5455
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %2, metadata !5452, metadata !DIExpression()), !dbg !5453
  %3 = bitcast %struct.throw_stmt_node* %1 to i8**, !dbg !5456
  %4 = load i8*, i8** %3, align 8, !dbg !5456
  %call = tail call i32 @pointer_set_contains(%struct.pointer_set_t* %2, i8* %4) #6, !dbg !5458
  %tobool = icmp eq i32 %call, 0, !dbg !5458
  br i1 %tobool, label %if.then, label %if.end, !dbg !5459

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.146, i64 0, i64 0)) #6, !dbg !5460
  %stmt1 = getelementptr inbounds %struct.throw_stmt_node, %struct.throw_stmt_node* %1, i64 0, i32 0, !dbg !5462
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt1, align 8, !dbg !5462
  tail call void @debug_gimple_stmt(%union.gimple_statement_d* %5) #6, !dbg !5463
  store i1 true, i1* @eh_error_found, align 1, !dbg !5464
  br label %if.end, !dbg !5465

if.end:                                           ; preds = %entry, %if.then
  ret i32 1, !dbg !5466
}

declare dso_local void @pointer_set_destroy(%struct.pointer_set_t*) local_unnamed_addr #2

declare dso_local void @verify_histograms() local_unnamed_addr #2

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @gimple_block_label(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !5467 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %s = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5471, metadata !DIExpression()), !dbg !5477
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !5478
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5478
  %1 = bitcast %struct.gimple_stmt_iterator* %s to i8*, !dbg !5478
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5478
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %s, metadata !5473, metadata !DIExpression(DW_OP_deref)), !dbg !5477
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %s, %struct.basic_block_def* %bb) #7, !dbg !5479
  call void @llvm.dbg.value(metadata i8 1, metadata !5474, metadata !DIExpression()), !dbg !5477
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5480
  br label %for.cond, !dbg !5482

for.cond:                                         ; preds = %for.inc, %entry
  %first.0 = phi i8 [ 1, %entry ], [ 0, %for.inc ], !dbg !5477
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !5474, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5472, metadata !DIExpression(DW_OP_deref)), !dbg !5477
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !5483
  %tobool = icmp eq i8 %call, 0, !dbg !5485
  br i1 %tobool, label %for.body, label %for.end, !dbg !5486

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5472, metadata !DIExpression(DW_OP_deref)), !dbg !5477
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !5487
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !5476, metadata !DIExpression()), !dbg !5477
  %call2 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !5489
  %cmp = icmp eq i32 %call2, 4, !dbg !5491
  br i1 %cmp, label %if.end, label %for.end, !dbg !5492

if.end:                                           ; preds = %for.body
  %call3 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call1) #7, !dbg !5493
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5475, metadata !DIExpression()), !dbg !5477
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5494
  %2 = bitcast i40* %nonlocal_flag to i64*, !dbg !5494
  %bf.load = load i64, i64* %2, align 8, !dbg !5494
  %bf.cast1 = and i64 %bf.load, 256, !dbg !5494
  %tobool4 = icmp eq i64 %bf.cast1, 0, !dbg !5494
  br i1 %tobool4, label %if.then5, label %for.inc, !dbg !5496

if.then5:                                         ; preds = %if.end
  %call3.lcssa = phi %union.tree_node* [ %call3, %if.end ], !dbg !5493
  %first.0.lcssa4 = phi i8 [ %first.0, %if.end ], !dbg !5477
  call void @llvm.dbg.value(metadata i8 %first.0.lcssa4, metadata !5474, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata i8 %first.0.lcssa4, metadata !5474, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata i8 %first.0.lcssa4, metadata !5474, metadata !DIExpression()), !dbg !5477
  %tobool6 = icmp eq i8 %first.0.lcssa4, 0, !dbg !5497
  br i1 %tobool6, label %if.then7, label %cleanup, !dbg !5500

if.then7:                                         ; preds = %if.then5
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5472, metadata !DIExpression(DW_OP_deref)), !dbg !5477
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %s, metadata !5473, metadata !DIExpression(DW_OP_deref)), !dbg !5477
  call void @gsi_move_before(%struct.gimple_stmt_iterator* nonnull %i, %struct.gimple_stmt_iterator* nonnull %s) #6, !dbg !5501
  br label %cleanup, !dbg !5501

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i8 0, metadata !5474, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5472, metadata !DIExpression(DW_OP_deref)), !dbg !5477
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !5502
  br label %for.cond, !dbg !5503, !llvm.loop !5504

for.end:                                          ; preds = %for.body, %for.cond
  %call10 = call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !5506
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5475, metadata !DIExpression()), !dbg !5477
  %call11 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call10) #6, !dbg !5507
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !5476, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %s, metadata !5473, metadata !DIExpression(DW_OP_deref)), !dbg !5477
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %s, %union.gimple_statement_d* %call11, i32 0) #6, !dbg !5508
  br label %cleanup, !dbg !5509

cleanup:                                          ; preds = %if.then5, %if.then7, %for.end
  %retval.0 = phi %union.tree_node* [ %call10, %for.end ], [ %call3.lcssa, %if.then7 ], [ %call3.lcssa, %if.then5 ], !dbg !5477
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5510
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5510
  ret %union.tree_node* %retval.0, !dbg !5510
}

declare dso_local void @gsi_move_before(%struct.gimple_stmt_iterator*, %struct.gimple_stmt_iterator*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_artificial_label(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @add_phi_args_after_copy_bb(%struct.basic_block_def* %bb_copy) local_unnamed_addr #5 !dbg !5511 {
entry:
  %e_copy = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb_copy, metadata !5513, metadata !DIExpression()), !dbg !5522
  %0 = bitcast %struct.edge_def** %e_copy to i8*, !dbg !5523
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5523
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5524
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5524
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5525
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5525
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb_copy, i64 0, i32 1, !dbg !5525
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !5525
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5525
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !5525
  store i32 %4, i32* %3, align 8, !dbg !5525
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5525
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !5525
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !5525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !5525
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5525
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5527
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5527
  br label %for.cond, !dbg !5525

for.cond:                                         ; preds = %for.body, %entry
  %9 = load i32, i32* %7, align 8, !dbg !5529
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !5529
  call void @llvm.dbg.value(metadata %struct.edge_def** %e_copy, metadata !5514, metadata !DIExpression(DW_OP_deref)), !dbg !5522
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e_copy) #7, !dbg !5529
  %tobool = icmp eq i8 %call1, 0, !dbg !5525
  br i1 %tobool, label %for.end, label %for.body, !dbg !5525

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e_copy, align 8, !dbg !5530
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !5514, metadata !DIExpression()), !dbg !5522
  call fastcc void @add_phi_args_after_copy_edge(%struct.edge_def* %11) #7, !dbg !5532
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5515, metadata !DIExpression(DW_OP_deref)), !dbg !5522
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5529
  br label %for.cond, !dbg !5529, !llvm.loop !5533

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5535
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5535
  ret void, !dbg !5535
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !5536 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !5540, metadata !DIExpression()), !dbg !5542
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !5543
  store i32 0, i32* %index, align 8, !dbg !5544
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !5545
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !5546
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !5547
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !5547
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !5547
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !5548 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !5553, metadata !DIExpression()), !dbg !5554
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !5555
  %tobool = icmp eq i8 %call, 0, !dbg !5555
  br i1 %tobool, label %if.then, label %if.else, !dbg !5557

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !5558
  br label %return, !dbg !5560

if.else:                                          ; preds = %entry
  br label %return, !dbg !5561

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !5563
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !5563
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !5563
  ret i8 %retval.0, !dbg !5564
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_phi_args_after_copy_edge(%struct.edge_def* %e_copy) unnamed_addr #5 !dbg !5565 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %psi_copy = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp34 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp36 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e_copy, metadata !5567, metadata !DIExpression()), !dbg !5578
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e_copy, i64 0, i32 0, !dbg !5579
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5579
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5569, metadata !DIExpression()), !dbg !5578
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !5580
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5580
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5581
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5581
  %3 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !5582
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5582
  %4 = bitcast %struct.gimple_stmt_iterator* %psi_copy to i8*, !dbg !5582
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5582
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e_copy, i64 0, i32 1, !dbg !5583
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !5583
  %call = tail call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %5) #7, !dbg !5585
  %call2 = tail call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call) #7, !dbg !5586
  %tobool = icmp eq i8 %call2, 0, !dbg !5586
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5587

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 13, !dbg !5588
  %6 = load i32, i32* %flags, align 8, !dbg !5588
  %7 = trunc i32 %6 to i8, !dbg !5589
  %tobool3 = icmp slt i8 %7, 0, !dbg !5589
  br i1 %tobool3, label %cond.true, label %cond.end, !dbg !5590

cond.true:                                        ; preds = %if.end
  %call4 = tail call %struct.basic_block_def* @get_bb_original(%struct.basic_block_def* %0) #6, !dbg !5591
  br label %cond.end, !dbg !5590

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.basic_block_def* [ %call4, %cond.true ], [ %0, %if.end ], !dbg !5590
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond, metadata !5568, metadata !DIExpression()), !dbg !5578
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !5592
  %flags6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 13, !dbg !5594
  %9 = load i32, i32* %flags6, align 8, !dbg !5594
  %10 = trunc i32 %9 to i8, !dbg !5595
  %tobool8 = icmp slt i8 %10, 0, !dbg !5595
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !5596

if.then9:                                         ; preds = %cond.end
  %call11 = tail call %struct.basic_block_def* @get_bb_original(%struct.basic_block_def* %8) #6, !dbg !5597
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call11, metadata !5570, metadata !DIExpression()), !dbg !5578
  br label %if.end13, !dbg !5598

if.end13:                                         ; preds = %cond.end, %if.then9
  %dest.0 = phi %struct.basic_block_def* [ %call11, %if.then9 ], [ %8, %cond.end ], !dbg !5599
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest.0, metadata !5570, metadata !DIExpression()), !dbg !5578
  %call14 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %cond, %struct.basic_block_def* %dest.0) #6, !dbg !5600
  call void @llvm.dbg.value(metadata %struct.edge_def* %call14, metadata !5571, metadata !DIExpression()), !dbg !5578
  store %struct.edge_def* %call14, %struct.edge_def** %e, align 8, !dbg !5601
  call void @llvm.dbg.value(metadata %struct.edge_def* %call14, metadata !5571, metadata !DIExpression()), !dbg !5578
  %tobool15 = icmp eq %struct.edge_def* %call14, null, !dbg !5602
  br i1 %tobool15, label %if.then16, label %if.end33, !dbg !5604

if.then16:                                        ; preds = %if.end13
  %11 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5605
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8, !dbg !5605
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond, i64 0, i32 1, !dbg !5605
  %call17 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !5605
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5605
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call17, 0, !dbg !5605
  store i32 %13, i32* %12, align 8, !dbg !5605
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5605
  %15 = extractvalue { i32, %struct.VEC_edge_gc** } %call17, 1, !dbg !5605
  store %struct.VEC_edge_gc** %15, %struct.VEC_edge_gc*** %14, align 8, !dbg !5605
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %11, i64 16, i1 false), !dbg !5605
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8, !dbg !5605
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5608
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5608
  br label %for.cond, !dbg !5605

for.cond:                                         ; preds = %for.inc, %if.then16
  %18 = load i32, i32* %16, align 8, !dbg !5610
  %19 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !5610
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5571, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  %call18 = call fastcc zeroext i8 @ei_cond(i32 %18, %struct.VEC_edge_gc** %19, %struct.edge_def** nonnull %e) #7, !dbg !5610
  %tobool19 = icmp eq i8 %call18, 0, !dbg !5605
  br i1 %tobool19, label %for.end, label %for.body, !dbg !5605

for.body:                                         ; preds = %for.cond
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5611
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !5571, metadata !DIExpression()), !dbg !5578
  %dest20 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 1, !dbg !5614
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest20, align 8, !dbg !5614
  %flags21 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i64 0, i32 13, !dbg !5615
  %22 = load i32, i32* %flags21, align 8, !dbg !5615
  %23 = trunc i32 %22 to i8, !dbg !5616
  %tobool23 = icmp slt i8 %23, 0, !dbg !5616
  br i1 %tobool23, label %land.lhs.true, label %for.inc, !dbg !5617

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !5571, metadata !DIExpression()), !dbg !5578
  %call25 = call %struct.basic_block_def* @get_bb_original(%struct.basic_block_def* %21) #6, !dbg !5618
  %cmp = icmp eq %struct.basic_block_def* %call25, %dest.0, !dbg !5619
  br i1 %cmp, label %for.end, label %for.inc, !dbg !5620

for.inc:                                          ; preds = %for.body, %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5572, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5610
  br label %for.cond, !dbg !5610, !llvm.loop !5621

for.end:                                          ; preds = %for.cond, %land.lhs.true
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5623
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !5571, metadata !DIExpression()), !dbg !5578
  %cmp28 = icmp eq %struct.edge_def* %24, null, !dbg !5623
  br i1 %cmp28, label %cond.true29, label %if.end33, !dbg !5623

cond.true29:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4962, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5623
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5624
  br label %if.end33, !dbg !5623

if.end33:                                         ; preds = %for.end, %if.end13, %cond.true29
  %25 = phi %struct.edge_def* [ %24, %for.end ], [ %call14, %if.end13 ], [ %.pre, %cond.true29 ], !dbg !5624
  %26 = bitcast %struct.gimple_stmt_iterator* %tmp34 to i8*, !dbg !5626
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8, !dbg !5626
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !5571, metadata !DIExpression()), !dbg !5578
  %dest35 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 1, !dbg !5627
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %dest35, align 8, !dbg !5627
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp34, %struct.basic_block_def* %27) #6, !dbg !5626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %26, i64 24, i1 false), !dbg !5626
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8, !dbg !5626
  %28 = bitcast %struct.gimple_stmt_iterator* %tmp36 to i8*, !dbg !5628
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8, !dbg !5628
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !5629
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp36, %struct.basic_block_def* %29) #6, !dbg !5628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %28, i64 24, i1 false), !dbg !5628
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8, !dbg !5628
  br label %for.cond38, !dbg !5630

for.cond38:                                       ; preds = %for.body41, %if.end33
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5576, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  %call39 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !5631
  %tobool40 = icmp eq i8 %call39, 0, !dbg !5633
  br i1 %tobool40, label %for.body41, label %cleanup.loopexit, !dbg !5634

for.body41:                                       ; preds = %for.cond38
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5576, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  %call42 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !5635
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call42, metadata !5573, metadata !DIExpression()), !dbg !5578
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi_copy, metadata !5577, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  %call43 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi_copy) #7, !dbg !5637
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call43, metadata !5574, metadata !DIExpression()), !dbg !5578
  %30 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5638
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !5571, metadata !DIExpression()), !dbg !5578
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i64 0, i32 6, !dbg !5638
  %31 = load i32, i32* %dest_idx, align 4, !dbg !5638
  %call44 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call42, i32 %31) #7, !dbg !5638
  %call45 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call44) #7, !dbg !5638
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !5575, metadata !DIExpression()), !dbg !5578
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5639
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !5571, metadata !DIExpression()), !dbg !5578
  %call46 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call42, %struct.edge_def* %32) #7, !dbg !5640
  call void @add_phi_arg(%union.gimple_statement_d* %call43, %union.tree_node* %call45, %struct.edge_def* %e_copy, i32 %call46) #6, !dbg !5641
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5576, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !5642
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi_copy, metadata !5577, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi_copy) #7, !dbg !5643
  br label %for.cond38, !dbg !5644, !llvm.loop !5645

cleanup.loopexit:                                 ; preds = %for.cond38
  br label %cleanup, !dbg !5647

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5647
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5647
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5647
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5647
  ret void, !dbg !5647
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !5648 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !5653, metadata !DIExpression()), !dbg !5654
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !5655
  %0 = load i32, i32* %index, align 8, !dbg !5655
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !5655
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !5655
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !5655
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5655
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5655

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !5655
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !5655
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !5655
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5655
  br label %cond.end, !dbg !5655

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5655
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5655
  %cmp = icmp ult i32 %0, %call2, !dbg !5655
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !5655

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.147, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5655
  br label %cond.end5, !dbg !5655

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !5656
  %inc = add i32 %5, 1, !dbg !5656
  store i32 %inc, i32* %index, align 8, !dbg !5656
  ret void, !dbg !5657
}

; Function Attrs: nounwind uwtable
define dso_local void @add_phi_args_after_copy(%struct.basic_block_def** %region_copy, i32 %n_region, %struct.edge_def* %e_copy) local_unnamed_addr #5 !dbg !5658 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %region_copy, metadata !5662, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %n_region, metadata !5663, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata %struct.edge_def* %e_copy, metadata !5664, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 0, metadata !5665, metadata !DIExpression()), !dbg !5666
  %wide.trip.count7 = zext i32 %n_region to i64, !dbg !5667
  br label %for.cond, !dbg !5670

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body ], [ 0, %entry ], !dbg !5671
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !5665, metadata !DIExpression()), !dbg !5666
  %exitcond8 = icmp eq i64 %indvars.iv5, %wide.trip.count7, !dbg !5667
  br i1 %exitcond8, label %for.cond1.preheader, label %for.body, !dbg !5672

for.cond1.preheader:                              ; preds = %for.cond
  %wide.trip.count3 = zext i32 %n_region to i64, !dbg !5673
  br label %for.cond1, !dbg !5676

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %region_copy, i64 %indvars.iv5, !dbg !5677
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !5677
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 13, !dbg !5678
  %1 = load i32, i32* %flags, align 8, !dbg !5679
  %or = or i32 %1, 128, !dbg !5679
  store i32 %or, i32* %flags, align 8, !dbg !5679
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !5680
  br label %for.cond, !dbg !5681, !llvm.loop !5682

for.cond1:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv1 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next2, %for.body3 ], !dbg !5684
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !5665, metadata !DIExpression()), !dbg !5666
  %exitcond4 = icmp eq i64 %indvars.iv1, %wide.trip.count3, !dbg !5673
  br i1 %exitcond4, label %for.end8, label %for.body3, !dbg !5676

for.body3:                                        ; preds = %for.cond1
  %arrayidx5 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %region_copy, i64 %indvars.iv1, !dbg !5685
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx5, align 8, !dbg !5685
  tail call void @add_phi_args_after_copy_bb(%struct.basic_block_def* %2) #7, !dbg !5686
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !5687
  br label %for.cond1, !dbg !5688, !llvm.loop !5689

for.end8:                                         ; preds = %for.cond1
  %tobool = icmp eq %struct.edge_def* %e_copy, null, !dbg !5691
  br i1 %tobool, label %if.end, label %if.then, !dbg !5693

if.then:                                          ; preds = %for.end8
  tail call fastcc void @add_phi_args_after_copy_edge(%struct.edge_def* nonnull %e_copy) #7, !dbg !5694
  br label %if.end, !dbg !5694

if.end:                                           ; preds = %for.end8, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !5665, metadata !DIExpression()), !dbg !5666
  %wide.trip.count = zext i32 %n_region to i64, !dbg !5695
  br label %for.cond9, !dbg !5698

for.cond9:                                        ; preds = %for.body11, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body11 ], [ 0, %if.end ], !dbg !5699
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5665, metadata !DIExpression()), !dbg !5666
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !5695
  br i1 %exitcond, label %for.end17, label %for.body11, !dbg !5700

for.body11:                                       ; preds = %for.cond9
  %arrayidx13 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %region_copy, i64 %indvars.iv, !dbg !5701
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx13, align 8, !dbg !5701
  %flags14 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 13, !dbg !5702
  %4 = load i32, i32* %flags14, align 8, !dbg !5703
  %and = and i32 %4, -129, !dbg !5703
  store i32 %and, i32* %flags14, align 8, !dbg !5703
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5704
  br label %for.cond9, !dbg !5705, !llvm.loop !5706

for.end17:                                        ; preds = %for.cond9
  ret void, !dbg !5708
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @gimple_duplicate_sese_region(%struct.edge_def* %entry1, %struct.edge_def* %exit, %struct.basic_block_def** %region, i32 %n_region, %struct.basic_block_def** %region_copy) local_unnamed_addr #5 !dbg !5709 {
entry:
  %exit.addr = alloca %struct.edge_def*, align 8
  %exit_copy = alloca %struct.edge_def*, align 8
  %doms = alloca %struct.VEC_basic_block_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !5713, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5714, metadata !DIExpression()), !dbg !5729
  store %struct.edge_def* %exit, %struct.edge_def** %exit.addr, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %region, metadata !5715, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i32 %n_region, metadata !5716, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %region_copy, metadata !5717, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i8 0, metadata !5719, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i8 0, metadata !5720, metadata !DIExpression()), !dbg !5729
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 1, !dbg !5730
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5730
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 3, !dbg !5731
  %1 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5731
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !5721, metadata !DIExpression()), !dbg !5729
  %2 = bitcast %struct.edge_def** %exit_copy to i8*, !dbg !5732
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5732
  %3 = bitcast %struct.VEC_basic_block_heap** %doms to i8*, !dbg !5733
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5733
  call void @llvm.dbg.value(metadata i32 0, metadata !5725, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i32 0, metadata !5726, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i64 0, metadata !5727, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i64 0, metadata !5728, metadata !DIExpression()), !dbg !5729
  %call = tail call zeroext i8 @can_copy_bbs_p(%struct.basic_block_def** %region, i32 %n_region) #6, !dbg !5734
  %tobool = icmp eq i8 %call, 0, !dbg !5734
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !5736

for.cond.preheader:                               ; preds = %entry
  %header = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 2, !dbg !5737
  br label %for.cond, !dbg !5742

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5743
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5718, metadata !DIExpression()), !dbg !5729
  %exitcond3 = icmp eq i32 %i.0, %n_region, !dbg !5744
  br i1 %exitcond3, label %for.end, label %for.body, !dbg !5742

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64, !dbg !5745
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %region, i64 %idxprom, !dbg !5745
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !5745
  %loop_father2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 3, !dbg !5747
  %5 = load %struct.loop*, %struct.loop** %loop_father2, align 8, !dbg !5747
  %cmp3 = icmp eq %struct.loop* %5, %1, !dbg !5748
  br i1 %cmp3, label %if.end5, label %cleanup.loopexit2, !dbg !5749

if.end5:                                          ; preds = %for.body
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5750
  %cmp9 = icmp eq %struct.basic_block_def* %4, %6, !dbg !5751
  br i1 %cmp9, label %for.inc, label %land.lhs.true, !dbg !5752

land.lhs.true:                                    ; preds = %if.end5
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !5753
  %cmp12 = icmp eq %struct.basic_block_def* %4, %7, !dbg !5754
  br i1 %cmp12, label %cleanup.loopexit2, label %for.inc, !dbg !5755

for.inc:                                          ; preds = %if.end5, %land.lhs.true
  %inc = add i32 %i.0, 1, !dbg !5756
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5718, metadata !DIExpression()), !dbg !5729
  br label %for.cond, !dbg !5757, !llvm.loop !5758

for.end:                                          ; preds = %for.cond
  tail call void @set_loop_copy(%struct.loop* %1, %struct.loop* %1) #6, !dbg !5760
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !5761
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5763
  %cmp17 = icmp eq %struct.basic_block_def* %8, %9, !dbg !5764
  br i1 %cmp17, label %if.then18, label %if.end42, !dbg !5765

if.then18:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata i8 1, metadata !5720, metadata !DIExpression()), !dbg !5729
  %call19 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %1) #7, !dbg !5766
  tail call void @set_loop_copy(%struct.loop* %1, %struct.loop* %call19) #6, !dbg !5768
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 3, !dbg !5769
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !5769
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5714, metadata !DIExpression()), !dbg !5729
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 0, !dbg !5771
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5771
  %call20 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %10, %struct.basic_block_def* %11) #6, !dbg !5772
  %tobool21 = icmp eq i8 %call20, 0, !dbg !5772
  br i1 %tobool21, label %cleanup, label %for.cond24.preheader, !dbg !5773

for.cond24.preheader:                             ; preds = %if.then18
  %wide.trip.count = zext i32 %n_region to i64, !dbg !5774
  br label %for.cond24, !dbg !5777

for.cond24:                                       ; preds = %for.cond24.preheader, %for.inc39
  %indvars.iv = phi i64 [ 0, %for.cond24.preheader ], [ %indvars.iv.next, %for.inc39 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5718, metadata !DIExpression()), !dbg !5729
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !5774
  br i1 %exitcond, label %if.end42.loopexit, label %for.body26, !dbg !5777

for.body26:                                       ; preds = %for.cond24
  %arrayidx28 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %region, i64 %indvars.iv, !dbg !5778
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx28, align 8, !dbg !5778
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5714, metadata !DIExpression()), !dbg !5729
  %src29 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 0, !dbg !5780
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %src29, align 8, !dbg !5780
  %cmp30 = icmp eq %struct.basic_block_def* %12, %13, !dbg !5781
  br i1 %cmp30, label %for.inc39, label %land.lhs.true31, !dbg !5782

land.lhs.true31:                                  ; preds = %for.body26
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5714, metadata !DIExpression()), !dbg !5729
  %call35 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %12, %struct.basic_block_def* %13) #6, !dbg !5783
  %tobool36 = icmp eq i8 %call35, 0, !dbg !5783
  br i1 %tobool36, label %for.inc39, label %cleanup.loopexit, !dbg !5784

for.inc39:                                        ; preds = %land.lhs.true31, %for.body26
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5785
  br label %for.cond24, !dbg !5786, !llvm.loop !5787

if.end42.loopexit:                                ; preds = %for.cond24
  br label %if.end42, !dbg !5789

if.end42:                                         ; preds = %if.end42.loopexit, %for.end
  %copying_header.0 = phi i8 [ 0, %for.end ], [ 1, %if.end42.loopexit ], !dbg !5729
  call void @llvm.dbg.value(metadata i8 %copying_header.0, metadata !5720, metadata !DIExpression()), !dbg !5729
  %tobool43 = icmp eq %struct.basic_block_def** %region_copy, null, !dbg !5789
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !5791

if.then44:                                        ; preds = %if.end42
  %conv45 = zext i32 %n_region to i64, !dbg !5792
  %mul = shl nuw nsw i64 %conv45, 3, !dbg !5792
  %call46 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5792
  %14 = bitcast i8* %call46 to %struct.basic_block_def**, !dbg !5792
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %14, metadata !5717, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i8 1, metadata !5719, metadata !DIExpression()), !dbg !5729
  br label %if.end47, !dbg !5794

if.end47:                                         ; preds = %if.end42, %if.then44
  %free_region_copy.0 = phi i8 [ 0, %if.end42 ], [ 1, %if.then44 ], !dbg !5729
  %region_copy.addr.0 = phi %struct.basic_block_def** [ %region_copy, %if.end42 ], [ %14, %if.then44 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %region_copy.addr.0, metadata !5717, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i8 %free_region_copy.0, metadata !5719, metadata !DIExpression()), !dbg !5729
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5795
  %call48 = tail call zeroext i8 @need_ssa_update_p(%struct.function* %15) #6, !dbg !5795
  %tobool49 = icmp eq i8 %call48, 0, !dbg !5795
  br i1 %tobool49, label %cond.end, label %cond.true, !dbg !5795

cond.true:                                        ; preds = %if.end47
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5085, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5795
  br label %cond.end, !dbg !5795

cond.end:                                         ; preds = %if.end47, %cond.true
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* null, metadata !5723, metadata !DIExpression()), !dbg !5729
  tail call void @initialize_original_copy_tables() #6, !dbg !5796
  %call50 = tail call %struct.VEC_basic_block_heap* @get_dominated_by_region(i32 1, %struct.basic_block_def** %region, i32 %n_region) #6, !dbg !5797
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call50, metadata !5723, metadata !DIExpression()), !dbg !5729
  store %struct.VEC_basic_block_heap* %call50, %struct.VEC_basic_block_heap** %doms, align 8, !dbg !5798
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5799
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 8, !dbg !5801
  %17 = load i64, i64* %count, align 8, !dbg !5801
  %tobool52 = icmp eq i64 %17, 0, !dbg !5802
  br i1 %tobool52, label %if.else, label %if.then53, !dbg !5803

if.then53:                                        ; preds = %cond.end
  call void @llvm.dbg.value(metadata i64 %17, metadata !5727, metadata !DIExpression()), !dbg !5729
  %count56 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 9, !dbg !5804
  %18 = load i64, i64* %count56, align 8, !dbg !5804
  call void @llvm.dbg.value(metadata i64 %18, metadata !5728, metadata !DIExpression()), !dbg !5729
  %cmp57 = icmp sgt i64 %18, %17, !dbg !5806
  %spec.select = select i1 %cmp57, i64 %17, i64 %18, !dbg !5808
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !5728, metadata !DIExpression()), !dbg !5729
  br label %if.end74, !dbg !5809

if.else:                                          ; preds = %cond.end
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 11, !dbg !5810
  %19 = load i32, i32* %frequency, align 8, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %19, metadata !5725, metadata !DIExpression()), !dbg !5729
  %src62 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 0, !dbg !5812
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %src62, align 8, !dbg !5812
  %frequency63 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i64 0, i32 11, !dbg !5812
  %21 = load i32, i32* %frequency63, align 8, !dbg !5812
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 8, !dbg !5812
  %22 = load i32, i32* %probability, align 4, !dbg !5812
  %mul64 = mul nsw i32 %21, %22, !dbg !5812
  %add = add nsw i32 %mul64, 5000, !dbg !5812
  %div = sdiv i32 %add, 10000, !dbg !5812
  call void @llvm.dbg.value(metadata i32 %div, metadata !5726, metadata !DIExpression()), !dbg !5729
  %cmp65 = icmp eq i32 %19, 0, !dbg !5813
  %cmp69 = icmp sgt i32 %div, %19, !dbg !5815
  %spec.select1 = select i1 %cmp69, i32 %19, i32 %div, !dbg !5815
  %total_freq.0 = select i1 %cmp65, i32 1, i32 %19, !dbg !5815
  %entry_freq.1 = select i1 %cmp65, i32 %div, i32 %spec.select1, !dbg !5815
  br label %if.end74, !dbg !5815

if.end74:                                         ; preds = %if.else, %if.then53
  %total_freq.1 = phi i32 [ 0, %if.then53 ], [ %total_freq.0, %if.else ], !dbg !5729
  %entry_freq.2 = phi i32 [ 0, %if.then53 ], [ %entry_freq.1, %if.else ], !dbg !5729
  %total_count.0 = phi i64 [ %17, %if.then53 ], [ 0, %if.else ], !dbg !5729
  %entry_count.1 = phi i64 [ %spec.select, %if.then53 ], [ 0, %if.else ], !dbg !5729
  call void @llvm.dbg.value(metadata i64 %entry_count.1, metadata !5728, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i64 %total_count.0, metadata !5727, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i32 %entry_freq.2, metadata !5726, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i32 %total_freq.1, metadata !5725, metadata !DIExpression()), !dbg !5729
  %call75 = tail call fastcc %struct.basic_block_def* @split_edge_bb_loc(%struct.edge_def* %entry1) #7, !dbg !5816
  call void @llvm.dbg.value(metadata %struct.edge_def** %exit.addr, metadata !5714, metadata !DIExpression(DW_OP_deref)), !dbg !5729
  call void @llvm.dbg.value(metadata %struct.edge_def** %exit_copy, metadata !5722, metadata !DIExpression(DW_OP_deref)), !dbg !5729
  call void @copy_bbs(%struct.basic_block_def** %region, i32 %n_region, %struct.basic_block_def** %region_copy.addr.0, %struct.edge_def** nonnull %exit.addr, i32 1, %struct.edge_def** nonnull %exit_copy, %struct.loop* %1, %struct.basic_block_def* %call75) #6, !dbg !5817
  %tobool76 = icmp eq i64 %total_count.0, 0, !dbg !5818
  br i1 %tobool76, label %if.else78, label %if.then77, !dbg !5820

if.then77:                                        ; preds = %if.end74
  %sub = sub nsw i64 %total_count.0, %entry_count.1, !dbg !5821
  call void @scale_bbs_frequencies_gcov_type(%struct.basic_block_def** %region, i32 %n_region, i64 %sub, i64 %total_count.0) #6, !dbg !5823
  call void @scale_bbs_frequencies_gcov_type(%struct.basic_block_def** %region_copy.addr.0, i32 %n_region, i64 %entry_count.1, i64 %total_count.0) #6, !dbg !5824
  br label %if.end80, !dbg !5825

if.else78:                                        ; preds = %if.end74
  %sub79 = sub nsw i32 %total_freq.1, %entry_freq.2, !dbg !5826
  call void @scale_bbs_frequencies_int(%struct.basic_block_def** %region, i32 %n_region, i32 %sub79, i32 %total_freq.1) #6, !dbg !5828
  call void @scale_bbs_frequencies_int(%struct.basic_block_def** %region_copy.addr.0, i32 %n_region, i32 %entry_freq.2, i32 %total_freq.1) #6, !dbg !5829
  br label %if.end80

if.end80:                                         ; preds = %if.else78, %if.then77
  %tobool81 = icmp eq i8 %copying_header.0, 0, !dbg !5830
  br i1 %tobool81, label %if.end87, label %if.then82, !dbg !5832

if.then82:                                        ; preds = %if.end80
  %23 = load %struct.edge_def*, %struct.edge_def** %exit.addr, align 8, !dbg !5833
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !5714, metadata !DIExpression()), !dbg !5729
  %dest83 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 1, !dbg !5835
  %24 = bitcast %struct.basic_block_def** %dest83 to i64*, !dbg !5835
  %25 = load i64, i64* %24, align 8, !dbg !5835
  %26 = bitcast %struct.basic_block_def** %header to i64*, !dbg !5836
  store i64 %25, i64* %26, align 8, !dbg !5836
  %27 = bitcast %struct.edge_def* %23 to i64*, !dbg !5837
  %28 = load i64, i64* %27, align 8, !dbg !5838
  %latch86 = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 3, !dbg !5839
  %29 = bitcast %struct.basic_block_def** %latch86 to i64*, !dbg !5840
  store i64 %28, i64* %29, align 8, !dbg !5840
  br label %if.end87, !dbg !5841

if.end87:                                         ; preds = %if.end80, %if.then82
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5842
  %call89 = call %struct.basic_block_def* @get_bb_copy(%struct.basic_block_def* %30) #6, !dbg !5843
  %call90 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %entry1, %struct.basic_block_def* %call89) #6, !dbg !5844
  call void @llvm.dbg.value(metadata %struct.edge_def* %call90, metadata !5724, metadata !DIExpression()), !dbg !5729
  %cmp91 = icmp eq %struct.edge_def* %call90, null, !dbg !5845
  br i1 %cmp91, label %cond.true93, label %cond.end95, !dbg !5845

cond.true93:                                      ; preds = %if.end87
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5140, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5845
  br label %cond.end95, !dbg !5845

cond.end95:                                       ; preds = %if.end87, %cond.true93
  call void @flush_pending_stmts(%struct.edge_def* %entry1) #6, !dbg !5846
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5847
  %src98 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 0, !dbg !5848
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %src98, align 8, !dbg !5848
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %31, %struct.basic_block_def* %32) #6, !dbg !5849
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5850
  %call100 = call %struct.basic_block_def* @get_bb_original(%struct.basic_block_def* %33) #6, !dbg !5850
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %doms, metadata !5723, metadata !DIExpression(DW_OP_deref)), !dbg !5729
  %call101 = call fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** nonnull %doms, %struct.basic_block_def* %call100) #7, !dbg !5850
  %34 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %doms, align 8, !dbg !5851
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %34, metadata !5723, metadata !DIExpression()), !dbg !5729
  call void @iterate_fix_dominators(i32 1, %struct.VEC_basic_block_heap* %34, i8 zeroext 0) #6, !dbg !5852
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %doms, metadata !5723, metadata !DIExpression(DW_OP_deref)), !dbg !5729
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %doms) #7, !dbg !5853
  call void @add_phi_args_after_copy(%struct.basic_block_def** %region_copy.addr.0, i32 %n_region, %struct.edge_def* null) #7, !dbg !5854
  call void @update_ssa(i32 2048) #6, !dbg !5855
  %tobool102 = icmp eq i8 %free_region_copy.0, 0, !dbg !5856
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !5858

if.then103:                                       ; preds = %cond.end95
  %35 = bitcast %struct.basic_block_def** %region_copy.addr.0 to i8*, !dbg !5859
  call void @free(i8* %35) #6, !dbg !5860
  br label %if.end104, !dbg !5860

if.end104:                                        ; preds = %cond.end95, %if.then103
  call void @free_original_copy_tables() #6, !dbg !5861
  br label %cleanup, !dbg !5862

cleanup.loopexit:                                 ; preds = %land.lhs.true31
  br label %cleanup, !dbg !5863

cleanup.loopexit2:                                ; preds = %land.lhs.true, %for.body
  br label %cleanup, !dbg !5863

cleanup:                                          ; preds = %cleanup.loopexit2, %cleanup.loopexit, %if.then18, %entry, %if.end104
  %retval.0 = phi i8 [ 1, %if.end104 ], [ 0, %entry ], [ 0, %if.then18 ], [ 0, %cleanup.loopexit ], [ 0, %cleanup.loopexit2 ], !dbg !5729
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5863
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5863
  ret i8 %retval.0, !dbg !5863
}

declare dso_local zeroext i8 @can_copy_bbs_p(%struct.basic_block_def**, i32) local_unnamed_addr #2

declare dso_local void @set_loop_copy(%struct.loop*, %struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !5864 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5870, metadata !DIExpression()), !dbg !5872
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !5873
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !5873
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !5873
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5873

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !5873
  br label %cond.end, !dbg !5873

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5873
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !5873
  call void @llvm.dbg.value(metadata i32 %call, metadata !5871, metadata !DIExpression()), !dbg !5872
  %cmp = icmp eq i32 %call, 0, !dbg !5874
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5876

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !5877
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !5877
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !5877

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !5877
  br label %cond.end8, !dbg !5877

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !5877
  %sub = add i32 %call, -1, !dbg !5877
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !5877
  br label %cleanup, !dbg !5878

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !5872
  ret %struct.loop* %retval.0, !dbg !5879
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local zeroext i8 @need_ssa_update_p(%struct.function*) local_unnamed_addr #2

declare dso_local void @initialize_original_copy_tables() local_unnamed_addr #2

declare dso_local %struct.VEC_basic_block_heap* @get_dominated_by_region(i32, %struct.basic_block_def**, i32) local_unnamed_addr #2

declare dso_local void @copy_bbs(%struct.basic_block_def**, i32, %struct.basic_block_def**, %struct.edge_def**, i32, %struct.edge_def**, %struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @split_edge_bb_loc(%struct.edge_def* %edge_in) unnamed_addr #5 !dbg !5880 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_in, metadata !5882, metadata !DIExpression()), !dbg !5888
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 1, !dbg !5889
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !5889
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5883, metadata !DIExpression()), !dbg !5888
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 5, !dbg !5890
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !5890
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !5884, metadata !DIExpression()), !dbg !5888
  %tobool = icmp eq %struct.basic_block_def* %1, null, !dbg !5891
  br i1 %tobool, label %if.end5, label %if.then, !dbg !5892

if.then:                                          ; preds = %entry
  %call = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* nonnull %1, %struct.basic_block_def* %0) #6, !dbg !5893
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !5885, metadata !DIExpression()), !dbg !5894
  %tobool2 = icmp eq %struct.edge_def* %call, null, !dbg !5895
  br i1 %tobool2, label %cleanup, label %land.lhs.true, !dbg !5897

land.lhs.true:                                    ; preds = %if.then
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 7, !dbg !5898
  %2 = load i32, i32* %flags, align 8, !dbg !5898
  %and = and i32 %2, 14, !dbg !5899
  %tobool3 = icmp eq i32 %and, 0, !dbg !5899
  br i1 %tobool3, label %if.then4, label %cleanup, !dbg !5900

if.then4:                                         ; preds = %land.lhs.true
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 0, !dbg !5901
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5901
  br label %cleanup, !dbg !5902

cleanup:                                          ; preds = %land.lhs.true, %if.then, %if.then4
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then4 ], [ true, %land.lhs.true ], [ true, %if.then ]
  %retval.0 = phi %struct.basic_block_def* [ %3, %if.then4 ], [ undef, %land.lhs.true ], [ undef, %if.then ]
  br i1 %cleanup.dest.slot.0, label %if.end5, label %cleanup6

if.end5:                                          ; preds = %entry, %cleanup
  br label %cleanup6, !dbg !5903

cleanup6:                                         ; preds = %cleanup, %if.end5
  %retval.1 = phi %struct.basic_block_def* [ %retval.0, %cleanup ], [ %1, %if.end5 ]
  ret %struct.basic_block_def* %retval.1, !dbg !5904
}

declare dso_local void @scale_bbs_frequencies_gcov_type(%struct.basic_block_def**, i32, i64, i64) local_unnamed_addr #2

declare dso_local void @scale_bbs_frequencies_int(%struct.basic_block_def**, i32, i32, i32) local_unnamed_addr #2

declare dso_local %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @get_bb_copy(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @flush_pending_stmts(%struct.edge_def*) #2

declare dso_local void @set_immediate_dominator(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** %vec_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !5905 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !5910, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !5911, metadata !DIExpression()), !dbg !5912
  %call = tail call fastcc i32 @VEC_basic_block_heap_reserve(%struct.VEC_basic_block_heap** %vec_, i32 1) #7, !dbg !5913
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !5913
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !5913
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5913

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %0, i64 0, i32 0, !dbg !5913
  br label %cond.end, !dbg !5913

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5913
  %call1 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %cond, %struct.basic_block_def* %obj_) #7, !dbg !5913
  ret %struct.basic_block_def** %call1, !dbg !5913
}

declare dso_local %struct.basic_block_def* @get_bb_original(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @iterate_fix_dominators(i32, %struct.VEC_basic_block_heap*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !5914 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !5918, metadata !DIExpression()), !dbg !5919
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !5920
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !5920
  br i1 %tobool, label %if.end, label %if.then, !dbg !5922

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !5922
  tail call void @free(i8* nonnull %1) #6, !dbg !5920
  br label %if.end, !dbg !5920

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !5922
  ret void, !dbg !5922
}

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

declare dso_local void @free_original_copy_tables() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @gimple_duplicate_sese_tail(%struct.edge_def* %entry1, %struct.edge_def* %exit, %struct.basic_block_def** %region, i32 %n_region, %struct.basic_block_def** %region_copy) local_unnamed_addr #5 !dbg !5923 {
entry:
  %doms = alloca %struct.VEC_basic_block_heap*, align 8
  %exits = alloca [2 x %struct.edge_def*], align 16
  %nexits = alloca [2 x %struct.edge_def*], align 16
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gsi1 = alloca %struct.gimple_stmt_iterator, align 8
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp123 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp175 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !5925, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5926, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %region, metadata !5927, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i32 %n_region, metadata !5928, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %region_copy, metadata !5929, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i8 0, metadata !5931, metadata !DIExpression()), !dbg !5957
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 1, !dbg !5958
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5958
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 3, !dbg !5959
  %1 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5959
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !5932, metadata !DIExpression()), !dbg !5957
  %dest2 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 1, !dbg !5960
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !5960
  %loop_father3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 3, !dbg !5961
  %3 = load %struct.loop*, %struct.loop** %loop_father3, align 8, !dbg !5961
  call void @llvm.dbg.value(metadata %struct.loop* %3, metadata !5933, metadata !DIExpression()), !dbg !5957
  %4 = bitcast %struct.VEC_basic_block_heap** %doms to i8*, !dbg !5962
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5962
  call void @llvm.dbg.value(metadata i32 0, metadata !5938, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i32 0, metadata !5939, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i64 0, metadata !5940, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i64 0, metadata !5941, metadata !DIExpression()), !dbg !5957
  %5 = bitcast [2 x %struct.edge_def*]* %exits to i8*, !dbg !5963
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !5963
  call void @llvm.dbg.declare(metadata [2 x %struct.edge_def*]* %exits, metadata !5942, metadata !DIExpression()), !dbg !5964
  %6 = bitcast [2 x %struct.edge_def*]* %nexits to i8*, !dbg !5963
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !5963
  call void @llvm.dbg.declare(metadata [2 x %struct.edge_def*]* %nexits, metadata !5944, metadata !DIExpression()), !dbg !5965
  %7 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5966
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5966
  %8 = bitcast %struct.gimple_stmt_iterator* %gsi1 to i8*, !dbg !5966
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5966
  %9 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !5967
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5967
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 0, !dbg !5968
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5968
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 1, !dbg !5968
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5968
  %tobool = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !5968
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5968

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !5968
  br label %cond.end, !dbg !5968

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5968
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5968
  %cmp = icmp eq i32 %call, 2, !dbg !5968
  br i1 %cmp, label %cond.end8, label %cond.true6, !dbg !5968

cond.true6:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5218, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5968
  br label %cond.end8, !dbg !5968

cond.end8:                                        ; preds = %cond.end, %cond.true6
  %arrayidx = getelementptr inbounds [2 x %struct.edge_def*], [2 x %struct.edge_def*]* %exits, i64 0, i64 0, !dbg !5969
  store %struct.edge_def* %exit, %struct.edge_def** %arrayidx, align 16, !dbg !5970
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5971
  %succs11 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 1, !dbg !5971
  %13 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs11, align 8, !dbg !5971
  %tobool12 = icmp eq %struct.VEC_edge_gc* %13, null, !dbg !5971
  br i1 %tobool12, label %cond.end18, label %cond.true13, !dbg !5971

cond.true13:                                      ; preds = %cond.end8
  %base16 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %13, i64 0, i32 0, !dbg !5971
  br label %cond.end18, !dbg !5971

cond.end18:                                       ; preds = %cond.end8, %cond.true13
  %cond19 = phi %struct.VEC_edge_base* [ %base16, %cond.true13 ], [ null, %cond.end8 ], !dbg !5971
  br i1 %tobool12, label %cond.end28, label %cond.true23, !dbg !5971

cond.true23:                                      ; preds = %cond.end18
  %base26 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %13, i64 0, i32 0, !dbg !5971
  br label %cond.end28, !dbg !5971

cond.end28:                                       ; preds = %cond.end18, %cond.true23
  %cond29 = phi %struct.VEC_edge_base* [ %base26, %cond.true23 ], [ null, %cond.end18 ], !dbg !5971
  %call30 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond29, i32 0) #7, !dbg !5971
  %cmp31 = icmp eq %struct.edge_def* %call30, %exit, !dbg !5971
  %conv = zext i1 %cmp31 to i32, !dbg !5971
  %call32 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond19, i32 %conv) #7, !dbg !5971
  %arrayidx33 = getelementptr inbounds [2 x %struct.edge_def*], [2 x %struct.edge_def*]* %exits, i64 0, i64 1, !dbg !5972
  store %struct.edge_def* %call32, %struct.edge_def** %arrayidx33, align 8, !dbg !5973
  %call34 = tail call zeroext i8 @can_copy_bbs_p(%struct.basic_block_def** %region, i32 %n_region) #6, !dbg !5974
  %tobool35 = icmp eq i8 %call34, 0, !dbg !5974
  br i1 %tobool35, label %cleanup, label %if.end, !dbg !5976

if.end:                                           ; preds = %cond.end28
  tail call void @initialize_original_copy_tables() #6, !dbg !5977
  tail call void @set_loop_copy(%struct.loop* %3, %struct.loop* %1) #6, !dbg !5978
  tail call void @duplicate_subloops(%struct.loop* %3, %struct.loop* %1) #6, !dbg !5979
  %tobool36 = icmp eq %struct.basic_block_def** %region_copy, null, !dbg !5980
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !5982

if.then37:                                        ; preds = %if.end
  %conv38 = zext i32 %n_region to i64, !dbg !5983
  %mul = shl nuw nsw i64 %conv38, 3, !dbg !5983
  %call39 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5983
  %14 = bitcast i8* %call39 to %struct.basic_block_def**, !dbg !5983
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %14, metadata !5929, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i8 1, metadata !5931, metadata !DIExpression()), !dbg !5957
  br label %if.end40, !dbg !5985

if.end40:                                         ; preds = %if.end, %if.then37
  %free_region_copy.0 = phi i8 [ 0, %if.end ], [ 1, %if.then37 ], !dbg !5957
  %region_copy.addr.0 = phi %struct.basic_block_def** [ %region_copy, %if.end ], [ %14, %if.then37 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %region_copy.addr.0, metadata !5929, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i8 %free_region_copy.0, metadata !5931, metadata !DIExpression()), !dbg !5957
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5986
  %call41 = tail call zeroext i8 @need_ssa_update_p(%struct.function* %15) #6, !dbg !5986
  %tobool42 = icmp eq i8 %call41, 0, !dbg !5986
  br i1 %tobool42, label %cond.end45, label %cond.true43, !dbg !5986

cond.true43:                                      ; preds = %if.end40
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5235, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5986
  br label %cond.end45, !dbg !5986

cond.end45:                                       ; preds = %if.end40, %cond.true43
  %call47 = tail call %struct.VEC_basic_block_heap* @get_dominated_by_region(i32 1, %struct.basic_block_def** %region, i32 %n_region) #6, !dbg !5987
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call47, metadata !5937, metadata !DIExpression()), !dbg !5957
  store %struct.VEC_basic_block_heap* %call47, %struct.VEC_basic_block_heap** %doms, align 8, !dbg !5988
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5989
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 8, !dbg !5991
  %17 = load i64, i64* %count, align 8, !dbg !5991
  %tobool49 = icmp eq i64 %17, 0, !dbg !5992
  br i1 %tobool49, label %if.else, label %if.then50, !dbg !5993

if.then50:                                        ; preds = %cond.end45
  call void @llvm.dbg.value(metadata i64 %17, metadata !5940, metadata !DIExpression()), !dbg !5957
  %count53 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 9, !dbg !5994
  %18 = load i64, i64* %count53, align 8, !dbg !5994
  call void @llvm.dbg.value(metadata i64 %18, metadata !5941, metadata !DIExpression()), !dbg !5957
  %cmp54 = icmp sgt i64 %18, %17, !dbg !5996
  %spec.select = select i1 %cmp54, i64 %17, i64 %18, !dbg !5998
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !5941, metadata !DIExpression()), !dbg !5957
  br label %if.end70, !dbg !5999

if.else:                                          ; preds = %cond.end45
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 11, !dbg !6000
  %19 = load i32, i32* %frequency, align 8, !dbg !6000
  call void @llvm.dbg.value(metadata i32 %19, metadata !5938, metadata !DIExpression()), !dbg !5957
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 8, !dbg !6002
  %20 = load i32, i32* %probability, align 4, !dbg !6002
  %mul61 = mul nsw i32 %19, %20, !dbg !6002
  %add = add nsw i32 %mul61, 5000, !dbg !6002
  %div = sdiv i32 %add, 10000, !dbg !6002
  call void @llvm.dbg.value(metadata i32 %div, metadata !5939, metadata !DIExpression()), !dbg !5957
  %cmp62 = icmp eq i32 %19, 0, !dbg !6003
  %spec.select1 = select i1 %cmp62, i32 1, i32 %19, !dbg !6005
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !5938, metadata !DIExpression()), !dbg !5957
  %cmp66 = icmp sgt i32 %div, %spec.select1, !dbg !6006
  %exit_freq.0 = select i1 %cmp66, i32 %spec.select1, i32 %div, !dbg !6008
  br label %if.end70, !dbg !6008

if.end70:                                         ; preds = %if.else, %if.then50
  %total_freq.1 = phi i32 [ 0, %if.then50 ], [ %spec.select1, %if.else ], !dbg !5957
  %exit_freq.1 = phi i32 [ 0, %if.then50 ], [ %exit_freq.0, %if.else ], !dbg !5957
  %total_count.0 = phi i64 [ %17, %if.then50 ], [ 0, %if.else ], !dbg !5957
  %exit_count.1 = phi i64 [ %spec.select, %if.then50 ], [ 0, %if.else ], !dbg !5957
  call void @llvm.dbg.value(metadata i64 %exit_count.1, metadata !5941, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i64 %total_count.0, metadata !5940, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i32 %exit_freq.1, metadata !5939, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata i32 %total_freq.1, metadata !5938, metadata !DIExpression()), !dbg !5957
  %arraydecay71 = getelementptr inbounds [2 x %struct.edge_def*], [2 x %struct.edge_def*]* %nexits, i64 0, i64 0, !dbg !6009
  %call72 = tail call fastcc %struct.basic_block_def* @split_edge_bb_loc(%struct.edge_def* %exit) #7, !dbg !6010
  call void @copy_bbs(%struct.basic_block_def** %region, i32 %n_region, %struct.basic_block_def** %region_copy.addr.0, %struct.edge_def** nonnull %arrayidx, i32 2, %struct.edge_def** nonnull %arraydecay71, %struct.loop* %3, %struct.basic_block_def* %call72) #6, !dbg !6011
  %tobool73 = icmp eq i64 %total_count.0, 0, !dbg !6012
  br i1 %tobool73, label %if.else75, label %if.then74, !dbg !6014

if.then74:                                        ; preds = %if.end70
  %sub = sub nsw i64 %total_count.0, %exit_count.1, !dbg !6015
  call void @scale_bbs_frequencies_gcov_type(%struct.basic_block_def** %region, i32 %n_region, i64 %sub, i64 %total_count.0) #6, !dbg !6017
  call void @scale_bbs_frequencies_gcov_type(%struct.basic_block_def** %region_copy.addr.0, i32 %n_region, i64 %exit_count.1, i64 %total_count.0) #6, !dbg !6018
  br label %if.end77, !dbg !6019

if.else75:                                        ; preds = %if.end70
  %sub76 = sub nsw i32 %total_freq.1, %exit_freq.1, !dbg !6020
  call void @scale_bbs_frequencies_int(%struct.basic_block_def** %region, i32 %n_region, i32 %sub76, i32 %total_freq.1) #6, !dbg !6022
  call void @scale_bbs_frequencies_int(%struct.basic_block_def** %region_copy.addr.0, i32 %n_region, i32 %exit_freq.1, i32 %total_freq.1) #6, !dbg !6023
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.then74
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest2, align 8, !dbg !6024
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %21, metadata !5935, metadata !DIExpression()), !dbg !5957
  %call79 = call %struct.basic_block_def* @get_bb_copy(%struct.basic_block_def* %21) #6, !dbg !6025
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call79, metadata !5936, metadata !DIExpression()), !dbg !5957
  %src80 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 0, !dbg !6026
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %src80, align 8, !dbg !6026
  %call81 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %22) #7, !dbg !6028
  %tobool82 = icmp eq %union.gimple_statement_d* %call81, null, !dbg !6028
  br i1 %tobool82, label %if.then87, label %lor.lhs.false, !dbg !6029

lor.lhs.false:                                    ; preds = %if.end77
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %src80, align 8, !dbg !6030
  %call84 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %23) #7, !dbg !6031
  %call85 = call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %call84) #7, !dbg !6032
  %tobool86 = icmp eq i8 %call85, 0, !dbg !6032
  br i1 %tobool86, label %if.then87, label %if.else89, !dbg !6033

if.then87:                                        ; preds = %lor.lhs.false, %if.end77
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %src80, align 8, !dbg !6034
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %24, metadata !5934, metadata !DIExpression()), !dbg !5957
  br label %if.end91, !dbg !6035

if.else89:                                        ; preds = %lor.lhs.false
  %call90 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %entry1) #6, !dbg !6036
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call90, metadata !5934, metadata !DIExpression()), !dbg !5957
  br label %if.end91

if.end91:                                         ; preds = %if.else89, %if.then87
  %switch_bb.0 = phi %struct.basic_block_def* [ %call90, %if.else89 ], [ %24, %if.then87 ], !dbg !6037
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %switch_bb.0, metadata !5934, metadata !DIExpression()), !dbg !5957
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %call79, %struct.basic_block_def* %switch_bb.0) #6, !dbg !6038
  %25 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6039
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8, !dbg !6039
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %switch_bb.0) #7, !dbg !6039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %25, i64 24, i1 false), !dbg !6039
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8, !dbg !6039
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6040
  %call93 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %26) #7, !dbg !6041
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call93, metadata !5948, metadata !DIExpression()), !dbg !5957
  %call94 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call93) #7, !dbg !6042
  %cmp95 = icmp eq i32 %call94, 1, !dbg !6042
  br i1 %cmp95, label %cond.end99, label %cond.true97, !dbg !6042

cond.true97:                                      ; preds = %if.end91
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5291, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6042
  br label %cond.end99, !dbg !6042

cond.end99:                                       ; preds = %if.end91, %cond.true97
  %call101 = call %union.gimple_statement_d* @gimple_copy(%union.gimple_statement_d* %call93) #6, !dbg !6043
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call101, metadata !5948, metadata !DIExpression()), !dbg !5957
  %27 = load %struct.edge_def*, %struct.edge_def** %arrayidx33, align 8, !dbg !6044
  %dest103 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %27, i64 0, i32 1, !dbg !6046
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %dest103, align 8, !dbg !6046
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %3, i64 0, i32 3, !dbg !6047
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !6047
  %cmp104 = icmp eq %struct.basic_block_def* %28, %29, !dbg !6048
  %call107 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call101) #7, !dbg !6049
  br i1 %cmp104, label %if.end136, label %if.else108, !dbg !6050

if.else108:                                       ; preds = %cond.end99
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6051
  %30 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6051
  %call110 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call101) #7, !dbg !6051
  %call111 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call101) #7, !dbg !6051
  %type113 = getelementptr inbounds %union.tree_node, %union.tree_node* %call111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6051
  %31 = load %union.tree_node*, %union.tree_node** %type113, align 8, !dbg !6051
  %call114 = call %union.tree_node* @build_int_cst(%union.tree_node* %31, i64 1) #6, !dbg !6051
  %call115 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %30, %union.tree_node* %call110, %union.tree_node* %call114) #6, !dbg !6051
  call void @llvm.dbg.value(metadata %union.tree_node* %call115, metadata !5953, metadata !DIExpression()), !dbg !5957
  %call116 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call101) #7, !dbg !6053
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6053
  %bf.load = load i64, i64* %32, align 8, !dbg !6053
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6055
  %cmp118 = icmp eq i64 %bf.cast2, 141, !dbg !6055
  br i1 %cmp118, label %if.then120, label %if.end136, !dbg !6056

if.then120:                                       ; preds = %if.else108
  %call121 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call101) #7, !dbg !6057
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6057
  %33 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6057
  %34 = load %union.gimple_statement_d*, %union.gimple_statement_d** %33, align 8, !dbg !6057
  %call122 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %34) #7, !dbg !6059
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call122, metadata !5952, metadata !DIExpression()), !dbg !5957
  %35 = bitcast %struct.gimple_stmt_iterator* %tmp123 to i8*, !dbg !6060
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #8, !dbg !6060
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp123, %struct.basic_block_def* %call122) #7, !dbg !6060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %35, i64 24, i1 false), !dbg !6060
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #8, !dbg !6060
  br label %for.cond, !dbg !6062

for.cond:                                         ; preds = %for.inc, %if.then120
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi1, metadata !5947, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  %call124 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi1) #7, !dbg !6063
  %tobool125 = icmp eq i8 %call124, 0, !dbg !6065
  br i1 %tobool125, label %for.body, label %for.end, !dbg !6066

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi1, metadata !5947, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  %call126 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi1) #7, !dbg !6067
  %call127 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call101) #7, !dbg !6069
  %def_stmt129 = getelementptr inbounds %union.tree_node, %union.tree_node* %call127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6069
  %36 = bitcast %union.tree_node** %def_stmt129 to %union.gimple_statement_d**, !dbg !6069
  %37 = load %union.gimple_statement_d*, %union.gimple_statement_d** %36, align 8, !dbg !6069
  %cmp130 = icmp eq %union.gimple_statement_d* %call126, %37, !dbg !6070
  br i1 %cmp130, label %for.end, label %for.inc, !dbg !6071

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi1, metadata !5947, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi1) #7, !dbg !6072
  br label %for.cond, !dbg !6073, !llvm.loop !6074

for.end:                                          ; preds = %for.body, %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi1, metadata !5947, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  %call134 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi1, %union.tree_node* %call115, i8 zeroext 1, %union.tree_node* null, i8 zeroext 0, i32 2) #6, !dbg !6076
  call void @llvm.dbg.value(metadata %union.tree_node* %call134, metadata !5953, metadata !DIExpression()), !dbg !5957
  br label %if.end136, !dbg !6077

if.end136:                                        ; preds = %if.else108, %for.end, %cond.end99
  %new_rhs.1 = phi %union.tree_node* [ %call107, %cond.end99 ], [ %call134, %for.end ], [ %call115, %if.else108 ], !dbg !6049
  call void @llvm.dbg.value(metadata %union.tree_node* %new_rhs.1, metadata !5953, metadata !DIExpression()), !dbg !5957
  %call137 = call %union.tree_node* @unshare_expr(%union.tree_node* %new_rhs.1) #6, !dbg !6078
  call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %call101, %union.tree_node* %call137) #7, !dbg !6079
  %call138 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %call101) #7, !dbg !6080
  %call139 = call %union.tree_node* @unshare_expr(%union.tree_node* %call138) #6, !dbg !6081
  call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %call101, %union.tree_node* %call139) #7, !dbg !6082
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5946, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call101, i32 0) #6, !dbg !6083
  %call140 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %switch_bb.0) #7, !dbg !6084
  call void @llvm.dbg.value(metadata %struct.edge_def* %call140, metadata !5949, metadata !DIExpression()), !dbg !5957
  %38 = load %struct.edge_def*, %struct.edge_def** %arrayidx33, align 8, !dbg !6085
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 7, !dbg !6086
  %39 = load i32, i32* %flags, align 8, !dbg !6086
  %flags142 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call140, i64 0, i32 7, !dbg !6087
  store i32 %39, i32* %flags142, align 8, !dbg !6088
  %40 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 16, !dbg !6089
  %flags144 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %40, i64 0, i32 7, !dbg !6090
  %41 = load i32, i32* %flags144, align 8, !dbg !6090
  %call145 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %switch_bb.0, %struct.basic_block_def* %call79, i32 %41) #6, !dbg !6091
  call void @llvm.dbg.value(metadata %struct.edge_def* %call145, metadata !5950, metadata !DIExpression()), !dbg !5957
  call void @rescan_loop_exit(%struct.edge_def* %call145, i8 zeroext 1, i8 zeroext 0) #6, !dbg !6092
  call void @add_phi_args_after_copy(%struct.basic_block_def** %region_copy.addr.0, i32 %n_region, %struct.edge_def* %call145) #7, !dbg !6093
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6094
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %42, metadata !5951, metadata !DIExpression()), !dbg !5957
  %43 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 16, !dbg !6095
  %44 = load %struct.edge_def*, %struct.edge_def** %arrayidx33, align 8, !dbg !6096
  %dest149 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %44, i64 0, i32 1, !dbg !6097
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %dest149, align 8, !dbg !6097
  %call150 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %43, %struct.basic_block_def* %45) #6, !dbg !6098
  call void @llvm.dbg.value(metadata %struct.edge_def* %call150, metadata !5945, metadata !DIExpression()), !dbg !5957
  %g = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call150, i64 0, i32 2, i32 0, !dbg !6099
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %g, align 8, !dbg !6100
  call void @llvm.dbg.value(metadata i32 0, metadata !5930, metadata !DIExpression()), !dbg !5957
  %46 = bitcast %struct.gimple_stmt_iterator* %tmp175 to i8*, !dbg !6101
  %wide.trip.count = zext i32 %n_region to i64, !dbg !6107
  br label %for.cond151, !dbg !6108

for.cond151:                                      ; preds = %for.inc189, %if.end136
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc189 ], [ 0, %if.end136 ], !dbg !6109
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5930, metadata !DIExpression()), !dbg !5957
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !6107
  br i1 %exitcond, label %for.end190, label %for.body154, !dbg !6110

for.body154:                                      ; preds = %for.cond151
  %arrayidx155 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %region_copy.addr.0, i64 %indvars.iv, !dbg !6111
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx155, align 8, !dbg !6111
  %call156 = call %struct.basic_block_def* @get_bb_original(%struct.basic_block_def* %47) #6, !dbg !6112
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !6113
  %cmp158 = icmp eq %struct.basic_block_def* %call156, %48, !dbg !6114
  br i1 %cmp158, label %if.then160, label %for.inc189, !dbg !6115

if.then160:                                       ; preds = %for.body154
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx155, align 8, !dbg !6116
  %call163 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %49) #7, !dbg !6116
  %tobool164 = icmp eq %struct.edge_def* %call163, null, !dbg !6116
  br i1 %tobool164, label %cond.true165, label %cond.end167, !dbg !6116

cond.true165:                                     ; preds = %if.then160
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6116
  br label %cond.end167, !dbg !6116

cond.end167:                                      ; preds = %if.then160, %cond.true165
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx155, align 8, !dbg !6117
  %call171 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %50) #7, !dbg !6118
  %call172 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %call171, %struct.basic_block_def* %42) #6, !dbg !6119
  call void @llvm.dbg.value(metadata %struct.edge_def* %call172, metadata !5945, metadata !DIExpression()), !dbg !5957
  %g174 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call172, i64 0, i32 2, i32 0, !dbg !6120
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %g174, align 8, !dbg !6121
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8, !dbg !6122
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp175, %struct.basic_block_def* %42) #6, !dbg !6122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %46, i64 24, i1 false), !dbg !6122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8, !dbg !6122
  br label %for.cond176, !dbg !6123

for.cond176:                                      ; preds = %for.body180, %cond.end167
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5954, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  %call177 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !6124
  %tobool178 = icmp eq i8 %call177, 0, !dbg !6126
  br i1 %tobool178, label %for.body180, label %for.inc189.loopexit, !dbg !6127

for.body180:                                      ; preds = %for.cond176
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5954, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  %call181 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !6128
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call181, metadata !5955, metadata !DIExpression()), !dbg !5957
  %51 = load %struct.edge_def*, %struct.edge_def** %arraydecay71, align 16, !dbg !6130
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %51, i64 0, i32 6, !dbg !6130
  %52 = load i32, i32* %dest_idx, align 4, !dbg !6130
  %call183 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call181, i32 %52) #7, !dbg !6130
  %call184 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call183) #7, !dbg !6130
  call void @llvm.dbg.value(metadata %union.tree_node* %call184, metadata !5956, metadata !DIExpression()), !dbg !5957
  %call185 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call181, %struct.edge_def* %call172) #7, !dbg !6131
  call void @add_phi_arg(%union.gimple_statement_d* %call181, %union.tree_node* %call184, %struct.edge_def* %call172, i32 %call185) #6, !dbg !6132
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5954, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !6133
  br label %for.cond176, !dbg !6134, !llvm.loop !6135

for.inc189.loopexit:                              ; preds = %for.cond176
  br label %for.inc189, !dbg !6137

for.inc189:                                       ; preds = %for.inc189.loopexit, %for.body154
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6137
  br label %for.cond151, !dbg !6138, !llvm.loop !6139

for.end190:                                       ; preds = %for.cond151
  %53 = load %struct.edge_def*, %struct.edge_def** %arraydecay71, align 16, !dbg !6141
  %arrayidx192 = getelementptr inbounds [2 x %struct.edge_def*], [2 x %struct.edge_def*]* %nexits, i64 0, i64 1, !dbg !6142
  %54 = load %struct.edge_def*, %struct.edge_def** %arrayidx192, align 8, !dbg !6142
  %dest193 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %54, i64 0, i32 1, !dbg !6143
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %dest193, align 8, !dbg !6143
  %call194 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %53, %struct.basic_block_def* %55) #6, !dbg !6144
  call void @llvm.dbg.value(metadata %struct.edge_def* %call194, metadata !5945, metadata !DIExpression()), !dbg !5957
  %g196 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call194, i64 0, i32 2, i32 0, !dbg !6145
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %g196, align 8, !dbg !6146
  %56 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %doms, align 8, !dbg !6147
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %56, metadata !5937, metadata !DIExpression()), !dbg !5957
  call void @iterate_fix_dominators(i32 1, %struct.VEC_basic_block_heap* %56, i8 zeroext 0) #6, !dbg !6148
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %doms, metadata !5937, metadata !DIExpression(DW_OP_deref)), !dbg !5957
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %doms) #7, !dbg !6149
  call void @update_ssa(i32 2048) #6, !dbg !6150
  %tobool197 = icmp eq i8 %free_region_copy.0, 0, !dbg !6151
  br i1 %tobool197, label %if.end199, label %if.then198, !dbg !6153

if.then198:                                       ; preds = %for.end190
  %57 = bitcast %struct.basic_block_def** %region_copy.addr.0 to i8*, !dbg !6154
  call void @free(i8* %57) #6, !dbg !6155
  br label %if.end199, !dbg !6155

if.end199:                                        ; preds = %for.end190, %if.then198
  call void @free_original_copy_tables() #6, !dbg !6156
  br label %cleanup, !dbg !6157

cleanup:                                          ; preds = %cond.end28, %if.end199
  %retval.0 = phi i8 [ 1, %if.end199 ], [ 0, %cond.end28 ], !dbg !5957
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !6158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !6158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !6158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !6158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6158
  ret i8 %retval.0, !dbg !6158
}

declare dso_local void @duplicate_subloops(%struct.loop*, %struct.loop*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @split_edge(%struct.edge_def*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_copy(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !6159 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6161, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !6162, metadata !DIExpression()), !dbg !6163
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !6164
  ret void, !dbg !6165
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !6166 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6168, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6169, metadata !DIExpression()), !dbg !6170
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !6171
  ret void, !dbg !6172
}

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6173 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6177, metadata !DIExpression()), !dbg !6178
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !6179
  %tobool = icmp eq i8 %call, 0, !dbg !6179
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6179

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.147, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6179
  br label %cond.end, !dbg !6179

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6180
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6180
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6180
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6180

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6180
  br label %cond.end5, !dbg !6180

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6180
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !6180
  ret %struct.edge_def* %call7, !dbg !6181
}

declare dso_local void @rescan_loop_exit(%struct.edge_def*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !6182 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !6186, metadata !DIExpression()), !dbg !6187
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !6188
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !6188
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6189
  ret %union.tree_node* %1, !dbg !6190
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6191 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6195, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.value(metadata i32 %i, metadata !6196, metadata !DIExpression()), !dbg !6197
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !6198
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !6199
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !6200
}

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %gs, %struct.edge_def* %e) unnamed_addr #0 !dbg !6201 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6205, metadata !DIExpression()), !dbg !6207
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6206, metadata !DIExpression()), !dbg !6207
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 6, !dbg !6208
  %0 = load i32, i32* %dest_idx, align 4, !dbg !6208
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %0) #7, !dbg !6209
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !6210
  %1 = load i32, i32* %locus, align 8, !dbg !6210
  ret i32 %1, !dbg !6211
}

; Function Attrs: nounwind uwtable
define dso_local void @gather_blocks_in_sese_region(%struct.basic_block_def* %entry1, %struct.basic_block_def* %exit, %struct.VEC_basic_block_heap** %bbs_p) local_unnamed_addr #5 !dbg !6212 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %entry1, metadata !6216, metadata !DIExpression()), !dbg !6220
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %exit, metadata !6217, metadata !DIExpression()), !dbg !6220
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs_p, metadata !6218, metadata !DIExpression()), !dbg !6220
  %call = tail call %struct.basic_block_def* @first_dom_son(i32 1, %struct.basic_block_def* %entry1) #6, !dbg !6221
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !6219, metadata !DIExpression()), !dbg !6220
  br label %for.cond, !dbg !6223

for.cond:                                         ; preds = %for.inc, %entry
  %son.0 = phi %struct.basic_block_def* [ %call, %entry ], [ %call3, %for.inc ], !dbg !6224
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %son.0, metadata !6219, metadata !DIExpression()), !dbg !6220
  %tobool = icmp eq %struct.basic_block_def* %son.0, null, !dbg !6225
  br i1 %tobool, label %for.end, label %for.body, !dbg !6225

for.body:                                         ; preds = %for.cond
  %call2 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** %bbs_p, %struct.basic_block_def* nonnull %son.0) #7, !dbg !6226
  %cmp = icmp eq %struct.basic_block_def* %son.0, %exit, !dbg !6229
  br i1 %cmp, label %for.inc, label %if.then, !dbg !6231

if.then:                                          ; preds = %for.body
  tail call void @gather_blocks_in_sese_region(%struct.basic_block_def* nonnull %son.0, %struct.basic_block_def* %exit, %struct.VEC_basic_block_heap** %bbs_p) #7, !dbg !6232
  br label %for.inc, !dbg !6232

for.inc:                                          ; preds = %for.body, %if.then
  %call3 = tail call %struct.basic_block_def* @next_dom_son(i32 1, %struct.basic_block_def* nonnull %son.0) #6, !dbg !6233
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !6219, metadata !DIExpression()), !dbg !6220
  br label %for.cond, !dbg !6234, !llvm.loop !6235

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6237
}

declare dso_local %struct.basic_block_def* @first_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @next_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @mark_virtual_ops_in_bb(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !6238 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp2 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6240, metadata !DIExpression()), !dbg !6242
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6243
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6243
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6244
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6244
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #6, !dbg !6244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6244
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6244
  br label %for.cond, !dbg !6246

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6241, metadata !DIExpression(DW_OP_deref)), !dbg !6242
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6247
  %tobool = icmp eq i8 %call, 0, !dbg !6249
  br i1 %tobool, label %for.body, label %for.end, !dbg !6250

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6241, metadata !DIExpression(DW_OP_deref)), !dbg !6242
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6251
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %call1) #6, !dbg !6252
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6241, metadata !DIExpression(DW_OP_deref)), !dbg !6242
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6253
  br label %for.cond, !dbg !6254, !llvm.loop !6255

for.end:                                          ; preds = %for.cond
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp2 to i8*, !dbg !6257
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6257
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp2, %struct.basic_block_def* %bb) #7, !dbg !6257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !6257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6257
  br label %for.cond3, !dbg !6259

for.cond3:                                        ; preds = %for.body7, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6241, metadata !DIExpression(DW_OP_deref)), !dbg !6242
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6260
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6262
  br i1 %tobool5, label %for.body7, label %for.end10, !dbg !6263

for.body7:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6241, metadata !DIExpression(DW_OP_deref)), !dbg !6242
  %call8 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6264
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %call8) #6, !dbg !6265
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6241, metadata !DIExpression(DW_OP_deref)), !dbg !6242
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6266
  br label %for.cond3, !dbg !6267, !llvm.loop !6268

for.end10:                                        ; preds = %for.cond3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6270
  ret void, !dbg !6270
}

declare dso_local void @mark_virtual_ops_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @move_sese_region_to_fn(%struct.function* %dest_cfun, %struct.basic_block_def* %entry_bb, %struct.basic_block_def* %exit_bb, %union.tree_node* %orig_block) local_unnamed_addr #5 !dbg !6271 {
entry:
  %bbs = alloca %struct.VEC_basic_block_heap*, align 8
  %dom_bbs = alloca %struct.VEC_basic_block_heap*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %abb = alloca %struct.basic_block_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %d = alloca %struct.move_stmt_d, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp57 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.function* %dest_cfun, metadata !6275, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %entry_bb, metadata !6276, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %exit_bb, metadata !6277, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_block, metadata !6278, metadata !DIExpression()), !dbg !6308
  %0 = bitcast %struct.VEC_basic_block_heap** %bbs to i8*, !dbg !6309
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6309
  %1 = bitcast %struct.VEC_basic_block_heap** %dom_bbs to i8*, !dbg !6309
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6309
  %call = tail call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* %entry_bb) #6, !dbg !6310
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !6281, metadata !DIExpression()), !dbg !6308
  %2 = bitcast %struct.basic_block_def** %bb to i8*, !dbg !6311
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6311
  %3 = bitcast %struct.basic_block_def** %abb to i8*, !dbg !6311
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6311
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6312
  call void @llvm.dbg.value(metadata %struct.function* %4, metadata !6287, metadata !DIExpression()), !dbg !6308
  %5 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6313
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6313
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %entry_bb, i64 0, i32 3, !dbg !6314
  %6 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !6314
  call void @llvm.dbg.value(metadata %struct.loop* %6, metadata !6300, metadata !DIExpression()), !dbg !6308
  %7 = bitcast %struct.move_stmt_d* %d to i8*, !dbg !6315
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #8, !dbg !6315
  %cmp = icmp eq %struct.basic_block_def* %entry_bb, %exit_bb, !dbg !6316
  br i1 %cmp, label %cond.true, label %land.lhs.true, !dbg !6316

land.lhs.true:                                    ; preds = %entry
  %tobool = icmp eq %struct.basic_block_def* %exit_bb, null, !dbg !6316
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !6316

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call1 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* nonnull %exit_bb, %struct.basic_block_def* %entry_bb) #6, !dbg !6316
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6316
  br i1 %tobool2, label %cond.true, label %cond.end, !dbg !6316

cond.true:                                        ; preds = %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5967, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6316
  br label %cond.end, !dbg !6316

cond.end:                                         ; preds = %lor.lhs.false, %land.lhs.true, %cond.true
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* null, metadata !6279, metadata !DIExpression()), !dbg !6308
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !6317
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs, metadata !6279, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  %call3 = call fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** nonnull %bbs, %struct.basic_block_def* %entry_bb) #7, !dbg !6318
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs, metadata !6279, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call void @gather_blocks_in_sese_region(%struct.basic_block_def* %entry_bb, %struct.basic_block_def* %exit_bb, %struct.VEC_basic_block_heap** nonnull %bbs) #7, !dbg !6319
  %8 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !6320
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %8, metadata !6279, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %8, metadata !6279, metadata !DIExpression()), !dbg !6308
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %8, i64 0, i32 0, !dbg !6320
  %call9 = call fastcc %struct.basic_block_def** @VEC_basic_block_base_address(%struct.VEC_basic_block_base* %base) #7, !dbg !6320
  %9 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !6321
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %9, metadata !6279, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %9, metadata !6279, metadata !DIExpression()), !dbg !6308
  %base12 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %9, i64 0, i32 0, !dbg !6321
  %call16 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base12) #7, !dbg !6321
  %call17 = call %struct.VEC_basic_block_heap* @get_dominated_by_region(i32 1, %struct.basic_block_def** %call9, i32 %call16) #6, !dbg !6322
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call17, metadata !6280, metadata !DIExpression()), !dbg !6308
  store %struct.VEC_basic_block_heap* %call17, %struct.VEC_basic_block_heap** %dom_bbs, align 8, !dbg !6323
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %entry_bb, i64 0, i32 0, !dbg !6324
  %10 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6324
  %tobool18 = icmp eq %struct.VEC_edge_gc* %10, null, !dbg !6324
  br i1 %tobool18, label %cond.end23, label %cond.true19, !dbg !6324

cond.true19:                                      ; preds = %cond.end
  %base21 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %10, i64 0, i32 0, !dbg !6324
  br label %cond.end23, !dbg !6324

cond.end23:                                       ; preds = %cond.end, %cond.true19
  %cond24 = phi %struct.VEC_edge_base* [ %base21, %cond.true19 ], [ null, %cond.end ], !dbg !6324
  %call25 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond24) #7, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %call25, metadata !6293, metadata !DIExpression()), !dbg !6308
  %conv26 = zext i32 %call25 to i64, !dbg !6325
  %call27 = call i8* @xcalloc(i64 %conv26, i64 8) #6, !dbg !6326
  %11 = bitcast i8* %call27 to %struct.basic_block_def**, !dbg !6327
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %11, metadata !6284, metadata !DIExpression()), !dbg !6308
  %call29 = call i8* @xcalloc(i64 %conv26, i64 4) #6, !dbg !6328
  %12 = bitcast i8* %call29 to i32*, !dbg !6329
  call void @llvm.dbg.value(metadata i32* %12, metadata !6288, metadata !DIExpression()), !dbg !6308
  %mul = shl nuw nsw i64 %conv26, 2, !dbg !6330
  %call31 = call i8* @xmalloc(i64 %mul) #6, !dbg !6330
  %13 = bitcast i8* %call31 to i32*, !dbg !6330
  call void @llvm.dbg.value(metadata i32* %13, metadata !6290, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i32 0, metadata !6292, metadata !DIExpression()), !dbg !6308
  %14 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6331
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !6331
  %call33 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6331
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6331
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call33, 0, !dbg !6331
  store i32 %16, i32* %15, align 8, !dbg !6331
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6331
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call33, 1, !dbg !6331
  store %struct.VEC_edge_gc** %18, %struct.VEC_edge_gc*** %17, align 8, !dbg !6331
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !6331
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !6331
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6333
  %20 = load i32, i32* %19, align 8, !dbg !6333
  %21 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6333
  %22 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %21, align 8, !dbg !6333
  br label %for.cond, !dbg !6335

for.cond:                                         ; preds = %for.body, %cond.end23
  %i.0 = phi i32 [ 0, %cond.end23 ], [ %inc, %for.body ], !dbg !6308
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6292, metadata !DIExpression()), !dbg !6308
  %call34 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %20, %struct.VEC_edge_gc** %22) #7, !dbg !6336
  call void @llvm.dbg.value(metadata %struct.edge_def* %call34, metadata !6295, metadata !DIExpression()), !dbg !6308
  %cmp35 = icmp eq %struct.edge_def* %call34, null, !dbg !6337
  br i1 %cmp35, label %for.end, label %for.body, !dbg !6338

for.body:                                         ; preds = %for.cond
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call34, i64 0, i32 8, !dbg !6339
  %23 = load i32, i32* %probability, align 4, !dbg !6339
  %idxprom = zext i32 %i.0 to i64, !dbg !6341
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !6341
  store i32 %23, i32* %arrayidx, align 4, !dbg !6342
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call34, i64 0, i32 7, !dbg !6343
  %24 = load i32, i32* %flags, align 8, !dbg !6343
  %arrayidx38 = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !6344
  store i32 %24, i32* %arrayidx38, align 4, !dbg !6345
  %25 = bitcast %struct.edge_def* %call34 to i64*, !dbg !6346
  %26 = load i64, i64* %25, align 8, !dbg !6346
  %inc = add i32 %i.0, 1, !dbg !6347
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6292, metadata !DIExpression()), !dbg !6308
  %arrayidx40 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %11, i64 %idxprom, !dbg !6348
  %27 = bitcast %struct.basic_block_def** %arrayidx40 to i64*, !dbg !6349
  store i64 %26, i64* %27, align 8, !dbg !6349
  call void @remove_edge(%struct.edge_def* nonnull %call34) #6, !dbg !6350
  br label %for.cond, !dbg !6351, !llvm.loop !6352

for.end:                                          ; preds = %for.cond
  %tobool41 = icmp eq %struct.basic_block_def* %exit_bb, null, !dbg !6354
  br i1 %tobool41, label %if.end, label %if.then, !dbg !6356

if.then:                                          ; preds = %for.end
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %exit_bb, i64 0, i32 1, !dbg !6357
  %28 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6357
  %tobool42 = icmp eq %struct.VEC_edge_gc* %28, null, !dbg !6357
  br i1 %tobool42, label %cond.end47, label %cond.true43, !dbg !6357

cond.true43:                                      ; preds = %if.then
  %base45 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %28, i64 0, i32 0, !dbg !6357
  br label %cond.end47, !dbg !6357

cond.end47:                                       ; preds = %if.then, %cond.true43
  %cond48 = phi %struct.VEC_edge_base* [ %base45, %cond.true43 ], [ null, %if.then ], !dbg !6357
  %call49 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond48) #7, !dbg !6357
  call void @llvm.dbg.value(metadata i32 %call49, metadata !6294, metadata !DIExpression()), !dbg !6308
  %conv50 = zext i32 %call49 to i64, !dbg !6359
  %call51 = call i8* @xcalloc(i64 %conv50, i64 8) #6, !dbg !6360
  %29 = bitcast i8* %call51 to %struct.basic_block_def**, !dbg !6361
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %29, metadata !6285, metadata !DIExpression()), !dbg !6308
  %call53 = call i8* @xcalloc(i64 %conv50, i64 4) #6, !dbg !6362
  %30 = bitcast i8* %call53 to i32*, !dbg !6363
  call void @llvm.dbg.value(metadata i32* %30, metadata !6289, metadata !DIExpression()), !dbg !6308
  %mul55 = shl nuw nsw i64 %conv50, 2, !dbg !6364
  %call56 = call i8* @xmalloc(i64 %mul55) #6, !dbg !6364
  %31 = bitcast i8* %call56 to i32*, !dbg !6364
  call void @llvm.dbg.value(metadata i32* %31, metadata !6291, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i32 0, metadata !6292, metadata !DIExpression()), !dbg !6308
  %32 = bitcast %struct.edge_iterator* %tmp57 to i8*, !dbg !6365
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8, !dbg !6365
  %call59 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6365
  %33 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp57, i64 0, i32 0, !dbg !6365
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call59, 0, !dbg !6365
  store i32 %34, i32* %33, align 8, !dbg !6365
  %35 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp57, i64 0, i32 1, !dbg !6365
  %36 = extractvalue { i32, %struct.VEC_edge_gc** } %call59, 1, !dbg !6365
  store %struct.VEC_edge_gc** %36, %struct.VEC_edge_gc*** %35, align 8, !dbg !6365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %32, i64 16, i1 false), !dbg !6365
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8, !dbg !6365
  %37 = load i32, i32* %19, align 8, !dbg !6367
  %38 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %21, align 8, !dbg !6367
  br label %for.cond60, !dbg !6369

for.cond60:                                       ; preds = %for.body64, %cond.end47
  %i.1 = phi i32 [ 0, %cond.end47 ], [ %inc71, %for.body64 ], !dbg !6370
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6292, metadata !DIExpression()), !dbg !6308
  %call61 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %37, %struct.VEC_edge_gc** %38) #7, !dbg !6371
  call void @llvm.dbg.value(metadata %struct.edge_def* %call61, metadata !6295, metadata !DIExpression()), !dbg !6308
  %cmp62 = icmp eq %struct.edge_def* %call61, null, !dbg !6372
  br i1 %cmp62, label %if.end.loopexit, label %for.body64, !dbg !6373

for.body64:                                       ; preds = %for.cond60
  %probability65 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call61, i64 0, i32 8, !dbg !6374
  %39 = load i32, i32* %probability65, align 4, !dbg !6374
  %idxprom66 = zext i32 %i.1 to i64, !dbg !6376
  %arrayidx67 = getelementptr inbounds i32, i32* %31, i64 %idxprom66, !dbg !6376
  store i32 %39, i32* %arrayidx67, align 4, !dbg !6377
  %flags68 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call61, i64 0, i32 7, !dbg !6378
  %40 = load i32, i32* %flags68, align 8, !dbg !6378
  %arrayidx70 = getelementptr inbounds i32, i32* %30, i64 %idxprom66, !dbg !6379
  store i32 %40, i32* %arrayidx70, align 4, !dbg !6380
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call61, i64 0, i32 1, !dbg !6381
  %41 = bitcast %struct.basic_block_def** %dest to i64*, !dbg !6381
  %42 = load i64, i64* %41, align 8, !dbg !6381
  %inc71 = add i32 %i.1, 1, !dbg !6382
  call void @llvm.dbg.value(metadata i32 %inc71, metadata !6292, metadata !DIExpression()), !dbg !6308
  %arrayidx73 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %29, i64 %idxprom66, !dbg !6383
  %43 = bitcast %struct.basic_block_def** %arrayidx73 to i64*, !dbg !6384
  store i64 %42, i64* %43, align 8, !dbg !6384
  call void @remove_edge(%struct.edge_def* nonnull %call61) #6, !dbg !6385
  br label %for.cond60, !dbg !6386, !llvm.loop !6387

if.end.loopexit:                                  ; preds = %for.cond60
  %phitmp = zext i32 %call49 to i64, !dbg !6389
  br label %if.end, !dbg !6389

if.end:                                           ; preds = %if.end.loopexit, %for.end
  %44 = phi i8* [ null, %for.end ], [ %call53, %if.end.loopexit ], !dbg !6390
  %exit_flag.0 = phi i32* [ null, %for.end ], [ %30, %if.end.loopexit ], !dbg !6390
  %45 = phi i8* [ null, %for.end ], [ %call56, %if.end.loopexit ], !dbg !6390
  %exit_prob.0 = phi i32* [ null, %for.end ], [ %31, %if.end.loopexit ], !dbg !6390
  %46 = phi i8* [ null, %for.end ], [ %call51, %if.end.loopexit ], !dbg !6390
  %exit_succ.0 = phi %struct.basic_block_def** [ null, %for.end ], [ %29, %if.end.loopexit ], !dbg !6390
  %num_exit_edges.0 = phi i64 [ 0, %for.end ], [ %phitmp, %if.end.loopexit ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %exit_succ.0, metadata !6285, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i32* %exit_prob.0, metadata !6291, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i32* %exit_flag.0, metadata !6289, metadata !DIExpression()), !dbg !6308
  %cfg = getelementptr inbounds %struct.function, %struct.function* %dest_cfun, i64 0, i32 1, !dbg !6389
  %47 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6389
  %cmp75 = icmp eq %struct.control_flow_graph* %47, null, !dbg !6389
  br i1 %cmp75, label %cond.end79, label %cond.true77, !dbg !6389

cond.true77:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6023, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6389
  br label %cond.end79, !dbg !6389

cond.end79:                                       ; preds = %if.end, %cond.true77
  call void @push_cfun(%struct.function* %dest_cfun) #6, !dbg !6391
  call void @init_empty_tree_cfg() #7, !dbg !6392
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* null, metadata !6299, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.htab* null, metadata !6297, metadata !DIExpression()), !dbg !6308
  %eh = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 0, !dbg !6393
  %48 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !6393
  %tobool81 = icmp eq %struct.eh_status* %48, null, !dbg !6394
  br i1 %tobool81, label %if.end102, label %for.cond83.preheader, !dbg !6395

for.cond83.preheader:                             ; preds = %cond.end79
  br label %for.cond83, !dbg !6396

for.cond83:                                       ; preds = %for.cond83.preheader, %for.body92
  %i.2 = phi i32 [ %inc94, %for.body92 ], [ 0, %for.cond83.preheader ], !dbg !6398
  %region.0 = phi %struct.eh_region_d* [ %call93, %for.body92 ], [ null, %for.cond83.preheader ], !dbg !6399
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.0, metadata !6302, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !6292, metadata !DIExpression()), !dbg !6308
  %49 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !6400
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %49, metadata !6279, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %49, metadata !6279, metadata !DIExpression()), !dbg !6308
  %base86 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %49, i64 0, i32 0, !dbg !6400
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !6283, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  %call90 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base86, i32 %i.2, %struct.basic_block_def** nonnull %bb) #7, !dbg !6400
  %tobool91 = icmp eq i32 %call90, 0, !dbg !6396
  br i1 %tobool91, label %for.end95, label %for.body92, !dbg !6396

for.body92:                                       ; preds = %for.cond83
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6402
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %50, metadata !6283, metadata !DIExpression()), !dbg !6308
  %call93 = call fastcc %struct.eh_region_d* @find_outermost_region_in_block(%struct.function* %4, %struct.basic_block_def* %50, %struct.eh_region_d* %region.0) #7, !dbg !6403
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call93, metadata !6302, metadata !DIExpression()), !dbg !6399
  %inc94 = add i32 %i.2, 1, !dbg !6404
  call void @llvm.dbg.value(metadata i32 %inc94, metadata !6292, metadata !DIExpression()), !dbg !6308
  br label %for.cond83, !dbg !6405, !llvm.loop !6406

for.end95:                                        ; preds = %for.cond83
  %region.0.lcssa = phi %struct.eh_region_d* [ %region.0, %for.cond83 ], !dbg !6399
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.0.lcssa, metadata !6302, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.0.lcssa, metadata !6302, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.0.lcssa, metadata !6302, metadata !DIExpression()), !dbg !6399
  call void @init_eh_for_function() #6, !dbg !6408
  %cmp96 = icmp eq %struct.eh_region_d* %region.0.lcssa, null, !dbg !6409
  br i1 %cmp96, label %if.end102, label %if.then98, !dbg !6411

if.then98:                                        ; preds = %for.end95
  %call99 = call %struct.htab* @htab_create(i64 17, i32 (i8*)* nonnull @tree_map_hash, i32 (i8*, i8*)* nonnull @tree_map_base_eq, void (i8*)* nonnull @free) #6, !dbg !6412
  call void @llvm.dbg.value(metadata %struct.htab* %call99, metadata !6297, metadata !DIExpression()), !dbg !6308
  %51 = bitcast %struct.htab* %call99 to i8*, !dbg !6414
  %call100 = call %struct.pointer_map_t* @duplicate_eh_regions(%struct.function* %4, %struct.eh_region_d* nonnull %region.0.lcssa, i32 0, %union.tree_node* (%union.tree_node*, i8*)* nonnull @new_label_mapper, i8* %51) #6, !dbg !6415
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %call100, metadata !6299, metadata !DIExpression()), !dbg !6308
  br label %if.end102, !dbg !6416

if.end102:                                        ; preds = %for.end95, %cond.end79, %if.then98
  %new_label_map.1 = phi %struct.htab* [ null, %cond.end79 ], [ %call99, %if.then98 ], [ null, %for.end95 ], !dbg !6308
  %eh_map.1 = phi %struct.pointer_map_t* [ null, %cond.end79 ], [ %call100, %if.then98 ], [ null, %for.end95 ], !dbg !6308
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %eh_map.1, metadata !6299, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.htab* %new_label_map.1, metadata !6297, metadata !DIExpression()), !dbg !6308
  call void @pop_cfun() #6, !dbg !6417
  %52 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !6418
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %52, metadata !6279, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %52, metadata !6279, metadata !DIExpression()), !dbg !6308
  %base105 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %52, i64 0, i32 0, !dbg !6418
  %call109 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base105) #7, !dbg !6418
  %cmp110 = icmp ugt i32 %call109, 1, !dbg !6418
  br i1 %cmp110, label %cond.end114, label %cond.true112, !dbg !6418

cond.true112:                                     ; preds = %if.end102
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6050, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6418
  br label %cond.end114, !dbg !6418

cond.end114:                                      ; preds = %if.end102, %cond.true112
  %53 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6419
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %53, i64 0, i32 0, !dbg !6420
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6420
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %54, metadata !6282, metadata !DIExpression()), !dbg !6308
  %call117 = call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !6421
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %call117, metadata !6298, metadata !DIExpression()), !dbg !6308
  %call118 = call i8* @memset(i8* nonnull %7, i32 0, i64 64) #6, !dbg !6422
  %orig_block119 = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 0, !dbg !6423
  store %union.tree_node* %orig_block, %union.tree_node** %orig_block119, align 8, !dbg !6424
  %decl = getelementptr inbounds %struct.function, %struct.function* %dest_cfun, i64 0, i32 6, !dbg !6425
  %55 = bitcast %union.tree_node** %decl to %struct.tree_decl_common**, !dbg !6425
  %56 = load %struct.tree_decl_common*, %struct.tree_decl_common** %55, align 8, !dbg !6425
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %56, i64 0, i32 5, !dbg !6425
  %57 = bitcast %union.tree_node** %initial to i64*, !dbg !6425
  %58 = load i64, i64* %57, align 8, !dbg !6425
  %new_block = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 1, !dbg !6426
  %59 = bitcast %union.tree_node** %new_block to i64*, !dbg !6427
  store i64 %58, i64* %59, align 8, !dbg !6427
  %60 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6428
  %decl121 = getelementptr inbounds %struct.function, %struct.function* %60, i64 0, i32 6, !dbg !6429
  %61 = bitcast %union.tree_node** %decl121 to i64*, !dbg !6429
  %62 = load i64, i64* %61, align 8, !dbg !6429
  %from_context = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 2, !dbg !6430
  %63 = bitcast %union.tree_node** %from_context to i64*, !dbg !6431
  store i64 %62, i64* %63, align 8, !dbg !6431
  %64 = ptrtoint %struct.tree_decl_common* %56 to i64, !dbg !6432
  %to_context = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 3, !dbg !6433
  %65 = bitcast %union.tree_node** %to_context to i64*, !dbg !6434
  store i64 %64, i64* %65, align 8, !dbg !6434
  %vars_map123 = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 4, !dbg !6435
  store %struct.pointer_map_t* %call117, %struct.pointer_map_t** %vars_map123, align 8, !dbg !6436
  %new_label_map124 = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 5, !dbg !6437
  store %struct.htab* %new_label_map.1, %struct.htab** %new_label_map124, align 8, !dbg !6438
  %eh_map125 = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 6, !dbg !6439
  store %struct.pointer_map_t* %eh_map.1, %struct.pointer_map_t** %eh_map125, align 8, !dbg !6440
  %remap_decls_p = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 7, !dbg !6441
  store i8 1, i8* %remap_decls_p, align 8, !dbg !6442
  call void @llvm.dbg.value(metadata i32 0, metadata !6292, metadata !DIExpression()), !dbg !6308
  br label %for.cond126, !dbg !6443

for.cond126:                                      ; preds = %for.body135, %cond.end114
  %i.3 = phi i32 [ 0, %cond.end114 ], [ %inc140, %for.body135 ], !dbg !6445
  %after.0 = phi %struct.basic_block_def* [ %54, %cond.end114 ], [ %68, %for.body135 ], !dbg !6308
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after.0, metadata !6282, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !6292, metadata !DIExpression()), !dbg !6308
  %66 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !6446
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %66, metadata !6279, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %66, metadata !6279, metadata !DIExpression()), !dbg !6308
  %base129 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %66, i64 0, i32 0, !dbg !6446
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !6283, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  %call133 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base129, i32 %i.3, %struct.basic_block_def** nonnull %bb) #7, !dbg !6446
  %tobool134 = icmp eq i32 %call133, 0, !dbg !6448
  br i1 %tobool134, label %for.end141, label %for.body135, !dbg !6448

for.body135:                                      ; preds = %for.cond126
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6449
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %67, metadata !6283, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %67, metadata !6283, metadata !DIExpression()), !dbg !6308
  %cmp136 = icmp ne %struct.basic_block_def* %67, %exit_bb, !dbg !6451
  %conv138 = zext i1 %cmp136 to i8, !dbg !6452
  call void @llvm.dbg.value(metadata %struct.move_stmt_d* %d, metadata !6301, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call fastcc void @move_block_to_fn(%struct.function* %dest_cfun, %struct.basic_block_def* %67, %struct.basic_block_def* %after.0, i8 zeroext %conv138, %struct.move_stmt_d* nonnull %d) #7, !dbg !6453
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6454
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %68, metadata !6283, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %68, metadata !6282, metadata !DIExpression()), !dbg !6308
  %inc140 = add i32 %i.3, 1, !dbg !6455
  call void @llvm.dbg.value(metadata i32 %inc140, metadata !6292, metadata !DIExpression()), !dbg !6308
  br label %for.cond126, !dbg !6456, !llvm.loop !6457

for.end141:                                       ; preds = %for.cond126
  %tobool142 = icmp eq %union.tree_node* %orig_block, null, !dbg !6459
  br i1 %tobool142, label %if.end174, label %if.then143, !dbg !6460

if.then143:                                       ; preds = %for.end141
  %69 = load %struct.tree_decl_common*, %struct.tree_decl_common** %55, align 8, !dbg !6461
  %initial146 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %69, i64 0, i32 5, !dbg !6461
  %70 = bitcast %union.tree_node** %initial146 to %struct.tree_block**, !dbg !6461
  %71 = load %struct.tree_block*, %struct.tree_block** %70, align 8, !dbg !6461
  %subblocks = getelementptr inbounds %struct.tree_block, %struct.tree_block* %71, i64 0, i32 5, !dbg !6461
  %72 = load %union.tree_node*, %union.tree_node** %subblocks, align 8, !dbg !6461
  %cmp148 = icmp eq %union.tree_node* %72, null, !dbg !6461
  br i1 %cmp148, label %cond.end152, label %cond.true150, !dbg !6461

cond.true150:                                     ; preds = %if.then143
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6078, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6461
  %.pre = load %struct.tree_decl_common*, %struct.tree_decl_common** %55, align 8, !dbg !6462
  %initial158.phi.trans.insert = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %.pre, i64 0, i32 5, !dbg !6463
  %.phi.trans.insert = bitcast %union.tree_node** %initial158.phi.trans.insert to %struct.tree_block**, !dbg !6463
  %.pre1 = load %struct.tree_block*, %struct.tree_block** %.phi.trans.insert, align 8, !dbg !6462
  br label %cond.end152, !dbg !6461

cond.end152:                                      ; preds = %if.then143, %cond.true150
  %73 = phi %struct.tree_block* [ %71, %if.then143 ], [ %.pre1, %cond.true150 ], !dbg !6462
  %74 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6464
  %75 = bitcast %union.tree_node** %74 to i64*, !dbg !6464
  %76 = load i64, i64* %75, align 8, !dbg !6464
  %subblocks160 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %73, i64 0, i32 5, !dbg !6462
  %77 = bitcast %union.tree_node** %subblocks160 to i64*, !dbg !6465
  store i64 %76, i64* %77, align 8, !dbg !6465
  br label %for.cond163, !dbg !6466

for.cond163:                                      ; preds = %for.body165, %cond.end152
  %block.0.in = phi %union.tree_node** [ %74, %cond.end152 ], [ %chain, %for.body165 ]
  %block.0 = load %union.tree_node*, %union.tree_node** %block.0.in, align 8, !dbg !6468
  call void @llvm.dbg.value(metadata %union.tree_node* %block.0, metadata !6305, metadata !DIExpression()), !dbg !6463
  %tobool164 = icmp eq %union.tree_node* %block.0, null, !dbg !6469
  br i1 %tobool164, label %for.end171, label %for.body165, !dbg !6469

for.body165:                                      ; preds = %for.cond163
  %78 = load %struct.tree_decl_common*, %struct.tree_decl_common** %55, align 8, !dbg !6470
  %initial168 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %78, i64 0, i32 5, !dbg !6470
  %79 = bitcast %union.tree_node** %initial168 to i64*, !dbg !6470
  %80 = load i64, i64* %79, align 8, !dbg !6470
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6472
  %81 = bitcast i40* %supercontext to i64*, !dbg !6473
  store i64 %80, i64* %81, align 8, !dbg !6473
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %block.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6474
  br label %for.cond163, !dbg !6475, !llvm.loop !6476

for.end171:                                       ; preds = %for.cond163
  store %union.tree_node* null, %union.tree_node** %74, align 8, !dbg !6478
  br label %if.end174, !dbg !6479

if.end174:                                        ; preds = %for.end141, %for.end171
  %82 = load %struct.tree_decl_common*, %struct.tree_decl_common** %55, align 8, !dbg !6480
  %initial177 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %82, i64 0, i32 5, !dbg !6480
  %83 = load %union.tree_node*, %union.tree_node** %initial177, align 8, !dbg !6480
  %.cast = bitcast %struct.tree_decl_common* %82 to %union.tree_node*, !dbg !6481
  call fastcc void @replace_block_vars_by_duplicates(%union.tree_node* %83, %struct.pointer_map_t* %call117, %union.tree_node* %.cast) #7, !dbg !6482
  %tobool179 = icmp eq %struct.htab* %new_label_map.1, null, !dbg !6483
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !6485

if.then180:                                       ; preds = %if.end174
  call void @htab_delete(%struct.htab* nonnull %new_label_map.1) #6, !dbg !6486
  br label %if.end181, !dbg !6486

if.end181:                                        ; preds = %if.end174, %if.then180
  %tobool182 = icmp eq %struct.pointer_map_t* %eh_map.1, null, !dbg !6487
  br i1 %tobool182, label %if.end184, label %if.then183, !dbg !6489

if.then183:                                       ; preds = %if.end181
  call void @pointer_map_destroy(%struct.pointer_map_t* nonnull %eh_map.1) #6, !dbg !6490
  br label %if.end184, !dbg !6490

if.end184:                                        ; preds = %if.end181, %if.then183
  call void @pointer_map_destroy(%struct.pointer_map_t* %call117) #6, !dbg !6491
  call void @push_cfun(%struct.function* %dest_cfun) #6, !dbg !6492
  %84 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6493
  %cfg186 = getelementptr inbounds %struct.function, %struct.function* %84, i64 0, i32 1, !dbg !6493
  %85 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg186, align 8, !dbg !6493
  %x_entry_block_ptr187 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %85, i64 0, i32 0, !dbg !6493
  %86 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr187, align 8, !dbg !6493
  %call188 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %86, %struct.basic_block_def* %entry_bb, i32 1) #6, !dbg !6494
  br i1 %tobool41, label %if.end194, label %if.then190, !dbg !6495

if.then190:                                       ; preds = %if.end184
  %87 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6496
  %cfg192 = getelementptr inbounds %struct.function, %struct.function* %87, i64 0, i32 1, !dbg !6496
  %88 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg192, align 8, !dbg !6496
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %88, i64 0, i32 1, !dbg !6496
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6496
  %call193 = call %struct.edge_def* @make_edge(%struct.basic_block_def* nonnull %exit_bb, %struct.basic_block_def* %89, i32 0) #6, !dbg !6498
  br label %if.end194, !dbg !6498

if.end194:                                        ; preds = %if.end184, %if.then190
  call void @pop_cfun() #6, !dbg !6499
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %11, align 8, !dbg !6500
  %call196 = call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %90) #6, !dbg !6501
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call196, metadata !6283, metadata !DIExpression()), !dbg !6308
  store %struct.basic_block_def* %call196, %struct.basic_block_def** %bb, align 8, !dbg !6502
  %91 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6503
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %91, i64 0, i32 4, !dbg !6503
  %92 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !6503
  %tobool198 = icmp eq %struct.loops* %92, null, !dbg !6503
  br i1 %tobool198, label %if.end200, label %if.then199, !dbg !6505

if.then199:                                       ; preds = %if.end194
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call196, metadata !6283, metadata !DIExpression()), !dbg !6308
  call void @add_bb_to_loop(%struct.basic_block_def* %call196, %struct.loop* %6) #6, !dbg !6506
  br label %if.end200, !dbg !6506

if.end200:                                        ; preds = %if.end194, %if.then199
  call void @llvm.dbg.value(metadata i32 0, metadata !6292, metadata !DIExpression()), !dbg !6308
  %wide.trip.count4 = zext i32 %call25 to i64, !dbg !6507
  br label %for.cond201, !dbg !6510

for.cond201:                                      ; preds = %for.body204, %if.end200
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.body204 ], [ 0, %if.end200 ], !dbg !6511
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !6292, metadata !DIExpression()), !dbg !6308
  %exitcond5 = icmp eq i64 %indvars.iv2, %wide.trip.count4, !dbg !6507
  br i1 %exitcond5, label %for.cond216.preheader, label %for.body204, !dbg !6512

for.cond216.preheader:                            ; preds = %for.cond201
  br label %for.cond216, !dbg !6513

for.body204:                                      ; preds = %for.cond201
  %arrayidx206 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %11, i64 %indvars.iv2, !dbg !6515
  %93 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx206, align 8, !dbg !6515
  %94 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6517
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %94, metadata !6283, metadata !DIExpression()), !dbg !6308
  %arrayidx208 = getelementptr inbounds i32, i32* %12, i64 %indvars.iv2, !dbg !6518
  %95 = load i32, i32* %arrayidx208, align 4, !dbg !6518
  %call209 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %93, %struct.basic_block_def* %94, i32 %95) #6, !dbg !6519
  call void @llvm.dbg.value(metadata %struct.edge_def* %call209, metadata !6295, metadata !DIExpression()), !dbg !6308
  %arrayidx211 = getelementptr inbounds i32, i32* %13, i64 %indvars.iv2, !dbg !6520
  %96 = load i32, i32* %arrayidx211, align 4, !dbg !6520
  %probability212 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call209, i64 0, i32 8, !dbg !6521
  store i32 %96, i32* %probability212, align 4, !dbg !6522
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !6523
  br label %for.cond201, !dbg !6524, !llvm.loop !6525

for.cond216:                                      ; preds = %for.cond216.preheader, %for.body219
  %indvars.iv = phi i64 [ 0, %for.cond216.preheader ], [ %indvars.iv.next, %for.body219 ], !dbg !6527
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6292, metadata !DIExpression()), !dbg !6308
  %97 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6308
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %97, metadata !6283, metadata !DIExpression()), !dbg !6308
  %exitcond = icmp eq i64 %indvars.iv, %num_exit_edges.0, !dbg !6528
  br i1 %exitcond, label %for.end230, label %for.body219, !dbg !6513

for.body219:                                      ; preds = %for.cond216
  %arrayidx221 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %exit_succ.0, i64 %indvars.iv, !dbg !6530
  %98 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx221, align 8, !dbg !6530
  %arrayidx223 = getelementptr inbounds i32, i32* %exit_flag.0, i64 %indvars.iv, !dbg !6532
  %99 = load i32, i32* %arrayidx223, align 4, !dbg !6532
  %call224 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %97, %struct.basic_block_def* %98, i32 %99) #6, !dbg !6533
  call void @llvm.dbg.value(metadata %struct.edge_def* %call224, metadata !6295, metadata !DIExpression()), !dbg !6308
  %arrayidx226 = getelementptr inbounds i32, i32* %exit_prob.0, i64 %indvars.iv, !dbg !6534
  %100 = load i32, i32* %arrayidx226, align 4, !dbg !6534
  %probability227 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call224, i64 0, i32 8, !dbg !6535
  store i32 %100, i32* %probability227, align 4, !dbg !6536
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6537
  br label %for.cond216, !dbg !6538, !llvm.loop !6539

for.end230:                                       ; preds = %for.cond216
  %.lcssa = phi %struct.basic_block_def* [ %97, %for.cond216 ], !dbg !6308
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %.lcssa, %struct.basic_block_def* %call) #6, !dbg !6541
  call void @llvm.dbg.value(metadata i32 0, metadata !6292, metadata !DIExpression()), !dbg !6308
  br label %for.cond231, !dbg !6542

for.cond231:                                      ; preds = %for.body240, %for.end230
  %i.6 = phi i32 [ 0, %for.end230 ], [ %inc242, %for.body240 ], !dbg !6544
  call void @llvm.dbg.value(metadata i32 %i.6, metadata !6292, metadata !DIExpression()), !dbg !6308
  %101 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %dom_bbs, align 8, !dbg !6545
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %101, metadata !6280, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %101, metadata !6280, metadata !DIExpression()), !dbg !6308
  %base234 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %101, i64 0, i32 0, !dbg !6545
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %abb, metadata !6286, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  %call238 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base234, i32 %i.6, %struct.basic_block_def** nonnull %abb) #7, !dbg !6545
  %tobool239 = icmp eq i32 %call238, 0, !dbg !6547
  br i1 %tobool239, label %for.end243, label %for.body240, !dbg !6547

for.body240:                                      ; preds = %for.cond231
  %102 = load %struct.basic_block_def*, %struct.basic_block_def** %abb, align 8, !dbg !6548
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %102, metadata !6286, metadata !DIExpression()), !dbg !6308
  %103 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6549
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %103, metadata !6283, metadata !DIExpression()), !dbg !6308
  call void @set_immediate_dominator(i32 1, %struct.basic_block_def* %102, %struct.basic_block_def* %103) #6, !dbg !6550
  %inc242 = add i32 %i.6, 1, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %inc242, metadata !6292, metadata !DIExpression()), !dbg !6308
  br label %for.cond231, !dbg !6552, !llvm.loop !6553

for.end243:                                       ; preds = %for.cond231
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %dom_bbs, metadata !6280, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %dom_bbs) #7, !dbg !6555
  br i1 %tobool41, label %if.end246, label %if.then245, !dbg !6556

if.then245:                                       ; preds = %for.end243
  call void @free(i8* %45) #6, !dbg !6557
  call void @free(i8* %44) #6, !dbg !6560
  call void @free(i8* %46) #6, !dbg !6561
  br label %if.end246, !dbg !6562

if.end246:                                        ; preds = %for.end243, %if.then245
  call void @free(i8* %call31) #6, !dbg !6563
  call void @free(i8* %call29) #6, !dbg !6564
  call void @free(i8* %call27) #6, !dbg !6565
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs, metadata !6279, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %bbs) #7, !dbg !6566
  %104 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6567
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %104, metadata !6283, metadata !DIExpression()), !dbg !6308
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #8, !dbg !6568
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6568
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6568
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6568
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6568
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6568
  ret %struct.basic_block_def* %104, !dbg !6569
}

declare dso_local %struct.basic_block_def* @get_immediate_dominator(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_address(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !6570 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6574, metadata !DIExpression()), !dbg !6575
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !6576
  %arraydecay = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 0, !dbg !6576
  %cond = select i1 %tobool, %struct.basic_block_def** null, %struct.basic_block_def** %arraydecay, !dbg !6576
  ret %struct.basic_block_def** %cond, !dbg !6576
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6577 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6582
  %tobool = icmp eq i8 %call, 0, !dbg !6582
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6583

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6584
  br label %cond.end, !dbg !6583

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !6583
  ret %struct.edge_def* %cond, !dbg !6585
}

declare dso_local void @remove_edge(%struct.edge_def*) local_unnamed_addr #2

declare dso_local void @push_cfun(%struct.function*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def** %ptr) unnamed_addr #0 !dbg !6586 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6590, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6591, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %ptr, metadata !6592, metadata !DIExpression()), !dbg !6593
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !6594
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6594

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !6594
  %0 = load i32, i32* %num, align 8, !dbg !6594
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6594
  br i1 %cmp, label %if.then, label %if.else, !dbg !6596

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6597
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6597
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !6597
  br label %return, !dbg !6597

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6599

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.basic_block_def* [ null, %if.else ], [ %1, %if.then ], !dbg !6601
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6601
  store %struct.basic_block_def* %storemerge, %struct.basic_block_def** %ptr, align 8, !dbg !6601
  ret i32 %retval.0, !dbg !6596
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.eh_region_d* @find_outermost_region_in_block(%struct.function* %src_cfun, %struct.basic_block_def* %bb, %struct.eh_region_d* %region) unnamed_addr #5 !dbg !6602 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.function* %src_cfun, metadata !6606, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6607, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !6608, metadata !DIExpression()), !dbg !6616
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !6617
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6617
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6618
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6618
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !6618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6618
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6618
  br label %for.cond, !dbg !6619

for.cond:                                         ; preds = %for.inc, %entry
  %region.addr.0 = phi %struct.eh_region_d* [ %region, %entry ], [ %region.addr.3, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.addr.0, metadata !6608, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6609, metadata !DIExpression(DW_OP_deref)), !dbg !6616
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !6620
  %tobool = icmp eq i8 %call, 0, !dbg !6621
  br i1 %tobool, label %for.body, label %for.end, !dbg !6622

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6609, metadata !DIExpression(DW_OP_deref)), !dbg !6616
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !6623
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !6610, metadata !DIExpression()), !dbg !6624
  %call2 = call i32 @lookup_stmt_eh_lp_fn(%struct.function* %src_cfun, %union.gimple_statement_d* %call1) #6, !dbg !6625
  call void @llvm.dbg.value(metadata i32 %call2, metadata !6615, metadata !DIExpression()), !dbg !6624
  %call3 = call %struct.eh_region_d* @get_eh_region_from_lp_number_fn(%struct.function* %src_cfun, i32 %call2) #6, !dbg !6626
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call3, metadata !6614, metadata !DIExpression()), !dbg !6624
  %tobool4 = icmp eq %struct.eh_region_d* %call3, null, !dbg !6627
  br i1 %tobool4, label %for.inc, label %if.then, !dbg !6629

if.then:                                          ; preds = %for.body
  %cmp = icmp eq %struct.eh_region_d* %region.addr.0, null, !dbg !6630
  br i1 %cmp, label %for.inc, label %if.else, !dbg !6633

if.else:                                          ; preds = %if.then
  %cmp6 = icmp eq %struct.eh_region_d* %call3, %region.addr.0, !dbg !6634
  br i1 %cmp6, label %for.inc, label %if.then7, !dbg !6636

if.then7:                                         ; preds = %if.else
  %call8 = call %struct.eh_region_d* @eh_region_outermost(%struct.function* %src_cfun, %struct.eh_region_d* nonnull %call3, %struct.eh_region_d* nonnull %region.addr.0) #6, !dbg !6637
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call8, metadata !6608, metadata !DIExpression()), !dbg !6616
  %cmp9 = icmp eq %struct.eh_region_d* %call8, null, !dbg !6639
  br i1 %cmp9, label %cond.true, label %for.inc, !dbg !6639

cond.true:                                        ; preds = %if.then7
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5863, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6639
  br label %for.inc, !dbg !6639

for.inc:                                          ; preds = %if.then7, %if.else, %for.body, %cond.true, %if.then
  %region.addr.3 = phi %struct.eh_region_d* [ %region.addr.0, %for.body ], [ %call3, %if.then ], [ %region.addr.0, %if.else ], [ %call8, %if.then7 ], [ null, %cond.true ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.addr.3, metadata !6608, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6609, metadata !DIExpression(DW_OP_deref)), !dbg !6616
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #7, !dbg !6640
  br label %for.cond, !dbg !6641, !llvm.loop !6642

for.end:                                          ; preds = %for.cond
  %region.addr.0.lcssa = phi %struct.eh_region_d* [ %region.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.addr.0.lcssa, metadata !6608, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.addr.0.lcssa, metadata !6608, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.addr.0.lcssa, metadata !6608, metadata !DIExpression()), !dbg !6616
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6644
  ret %struct.eh_region_d* %region.addr.0.lcssa, !dbg !6645
}

declare dso_local void @init_eh_for_function() local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i32 @tree_map_hash(i8*) #2

declare dso_local i32 @tree_map_base_eq(i8*, i8*) #2

declare dso_local %struct.pointer_map_t* @duplicate_eh_regions(%struct.function*, %struct.eh_region_d*, i32, %union.tree_node* (%union.tree_node*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @new_label_mapper(%union.tree_node* %decl, i8* %data) #5 !dbg !6646 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6650, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata i8* %data, metadata !6651, metadata !DIExpression()), !dbg !6655
  %0 = bitcast i8* %data to %struct.htab*, !dbg !6656
  call void @llvm.dbg.value(metadata %struct.htab* %0, metadata !6652, metadata !DIExpression()), !dbg !6655
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6657
  %bf.load = load i64, i64* %1, align 8, !dbg !6657
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6657
  %cmp = icmp eq i64 %bf.cast1, 30, !dbg !6657
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6657

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5878, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6657
  br label %cond.end, !dbg !6657

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call i8* @xmalloc(i64 24) #6, !dbg !6658
  call void @llvm.dbg.value(metadata i8* %call, metadata !6653, metadata !DIExpression()), !dbg !6655
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6659
  %2 = load i32, i32* %uid, align 4, !dbg !6659
  %hash1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6660
  %3 = bitcast i8* %hash1 to i32*, !dbg !6660
  store i32 %2, i32* %3, align 8, !dbg !6661
  %from = bitcast i8* %call to %union.tree_node**, !dbg !6662
  store %union.tree_node* %decl, %union.tree_node** %from, align 8, !dbg !6663
  %call3 = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !6664
  %to = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6665
  %4 = bitcast i8* %to to %union.tree_node**, !dbg !6665
  store %union.tree_node* %call3, %union.tree_node** %4, align 8, !dbg !6666
  %label_decl_uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6667
  %5 = bitcast %union.tree_node** %label_decl_uid to i32*, !dbg !6667
  %6 = load i32, i32* %5, align 8, !dbg !6667
  %label_decl_uid6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6668
  %7 = bitcast %union.tree_node** %label_decl_uid6 to i32*, !dbg !6668
  store i32 %6, i32* %7, align 8, !dbg !6669
  %8 = bitcast i8* %to to %struct.tree_label_decl**, !dbg !6670
  %9 = load %struct.tree_label_decl*, %struct.tree_label_decl** %8, align 8, !dbg !6670
  %label_decl_uid9 = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %9, i64 0, i32 1, !dbg !6670
  %10 = load i32, i32* %label_decl_uid9, align 8, !dbg !6670
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6672
  %cfg = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 1, !dbg !6673
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6673
  %last_label_uid = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 11, !dbg !6674
  %13 = load i32, i32* %last_label_uid, align 8, !dbg !6674
  %cmp10 = icmp slt i32 %10, %13, !dbg !6675
  br i1 %cmp10, label %if.end, label %if.then, !dbg !6676

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata i8* %call, metadata !6653, metadata !DIExpression()), !dbg !6655
  %add = add nsw i32 %10, 1, !dbg !6677
  store i32 %add, i32* %last_label_uid, align 8, !dbg !6678
  br label %if.end, !dbg !6679

if.end:                                           ; preds = %cond.end, %if.then
  %14 = load i32, i32* %3, align 8, !dbg !6680
  %call18 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %0, i8* %call, i32 %14, i32 1) #6, !dbg !6681
  call void @llvm.dbg.value(metadata i8** %call18, metadata !6654, metadata !DIExpression()), !dbg !6655
  %15 = load i8*, i8** %call18, align 8, !dbg !6682
  %cmp19 = icmp eq i8* %15, null, !dbg !6682
  br i1 %cmp19, label %cond.end22, label %cond.true20, !dbg !6682

cond.true20:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5889, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6682
  br label %cond.end22, !dbg !6682

cond.end22:                                       ; preds = %if.end, %cond.true20
  store i8* %call, i8** %call18, align 8, !dbg !6683
  %16 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !6684
  ret %union.tree_node* %16, !dbg !6685
}

declare dso_local void @pop_cfun() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @move_block_to_fn(%struct.function* %dest_cfun, %struct.basic_block_def* %bb, %struct.basic_block_def* %after, i8 zeroext %update_edge_count_p, %struct.move_stmt_d* %d) unnamed_addr #5 !dbg !6686 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp57 = alloca %struct.gimple_stmt_iterator, align 8
  %oi = alloca %struct.ssa_operand_iterator_d, align 8
  %tmp92 = alloca %struct.gimple_stmt_iterator, align 8
  %wi = alloca %struct.walk_stmt_info, align 8
  %tmp168 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.function* %dest_cfun, metadata !6690, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6691, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !6692, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata i8 %update_edge_count_p, metadata !6693, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata %struct.move_stmt_d* %d, metadata !6694, metadata !DIExpression()), !dbg !6734
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6735
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6735
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !6736
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6736
  %2 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !6737
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6737
  tail call void @delete_from_dominance_info(i32 1, %struct.basic_block_def* %bb) #6, !dbg !6738
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6739
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 4, !dbg !6739
  %4 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !6739
  %tobool = icmp eq %struct.loops* %4, null, !dbg !6739
  br i1 %tobool, label %if.end, label %if.then, !dbg !6741

if.then:                                          ; preds = %entry
  tail call void @remove_bb_from_loops(%struct.basic_block_def* %bb) #6, !dbg !6742
  br label %if.end, !dbg !6742

if.end:                                           ; preds = %entry, %if.then
  %call = tail call zeroext i8 @move_block_after(%struct.basic_block_def* %bb, %struct.basic_block_def* %after) #6, !dbg !6743
  %tobool1 = icmp eq i8 %update_edge_count_p, 0, !dbg !6744
  br i1 %tobool1, label %if.end10, label %if.then2, !dbg !6746

if.then2:                                         ; preds = %if.end
  %5 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6747
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6747
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6747
  %call3 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6747
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6747
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 0, !dbg !6747
  store i32 %7, i32* %6, align 8, !dbg !6747
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6747
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 1, !dbg !6747
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !6747
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !6747
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6747
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6749
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6749
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %dest_cfun, i64 0, i32 1, !dbg !6751
  br label %for.cond, !dbg !6747

for.cond:                                         ; preds = %for.body, %if.then2
  %12 = load i32, i32* %10, align 8, !dbg !6753
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !6753
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6697, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  %call4 = call fastcc zeroext i8 @ei_cond(i32 %12, %struct.VEC_edge_gc** %13, %struct.edge_def** nonnull %e) #7, !dbg !6753
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6747
  br i1 %tobool5, label %if.end10.loopexit, label %for.body, !dbg !6747

for.body:                                         ; preds = %for.cond
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6754
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !6755
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !6755
  %x_n_edges = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 4, !dbg !6756
  %16 = load i32, i32* %x_n_edges, align 4, !dbg !6757
  %dec = add nsw i32 %16, -1, !dbg !6757
  store i32 %dec, i32* %x_n_edges, align 4, !dbg !6757
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !6758
  %x_n_edges9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i64 0, i32 4, !dbg !6759
  %18 = load i32, i32* %x_n_edges9, align 4, !dbg !6760
  %inc = add nsw i32 %18, 1, !dbg !6760
  store i32 %inc, i32* %x_n_edges9, align 4, !dbg !6760
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6696, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6753
  br label %for.cond, !dbg !6753, !llvm.loop !6761

if.end10.loopexit:                                ; preds = %for.cond
  br label %if.end10, !dbg !6763

if.end10:                                         ; preds = %if.end10.loopexit, %if.end
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6763
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !6763
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !6763
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 2, !dbg !6763
  %21 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6763
  %tobool13 = icmp eq %struct.VEC_basic_block_gc* %21, null, !dbg !6763
  br i1 %tobool13, label %cond.end, label %cond.true, !dbg !6763

cond.true:                                        ; preds = %if.end10
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %21, i64 0, i32 0, !dbg !6763
  br label %cond.end, !dbg !6763

cond.end:                                         ; preds = %if.end10, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %if.end10 ], !dbg !6763
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6763
  %22 = load i32, i32* %index, align 8, !dbg !6763
  %call17 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond, i32 %22, %struct.basic_block_def* null) #7, !dbg !6763
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6764
  %cfg19 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 1, !dbg !6765
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg19, align 8, !dbg !6765
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i64 0, i32 3, !dbg !6766
  %25 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !6767
  %dec20 = add nsw i32 %25, -1, !dbg !6767
  store i32 %dec20, i32* %x_n_basic_blocks, align 8, !dbg !6767
  %cfg21 = getelementptr inbounds %struct.function, %struct.function* %dest_cfun, i64 0, i32 1, !dbg !6768
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21, align 8, !dbg !6768
  call void @llvm.dbg.value(metadata %struct.control_flow_graph* %26, metadata !6695, metadata !DIExpression()), !dbg !6734
  %x_n_basic_blocks22 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i64 0, i32 3, !dbg !6769
  %27 = load i32, i32* %x_n_basic_blocks22, align 8, !dbg !6770
  %inc23 = add nsw i32 %27, 1, !dbg !6770
  store i32 %inc23, i32* %x_n_basic_blocks22, align 8, !dbg !6770
  %28 = load i32, i32* %index, align 8, !dbg !6771
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i64 0, i32 5, !dbg !6773
  %29 = load i32, i32* %x_last_basic_block, align 8, !dbg !6773
  %cmp = icmp slt i32 %28, %29, !dbg !6774
  br i1 %cmp, label %if.end28, label %if.then25, !dbg !6775

if.then25:                                        ; preds = %cond.end
  %add = add nsw i32 %28, 1, !dbg !6776
  store i32 %add, i32* %x_last_basic_block, align 8, !dbg !6777
  br label %if.end28, !dbg !6778

if.end28:                                         ; preds = %cond.end, %if.then25
  %x_basic_block_info29 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i64 0, i32 2, !dbg !6779
  %30 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info29, align 8, !dbg !6779
  %tobool30 = icmp eq %struct.VEC_basic_block_gc* %30, null, !dbg !6779
  br i1 %tobool30, label %cond.end35, label %cond.true31, !dbg !6779

cond.true31:                                      ; preds = %if.end28
  %base33 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %30, i64 0, i32 0, !dbg !6779
  br label %cond.end35, !dbg !6779

cond.end35:                                       ; preds = %if.end28, %cond.true31
  %cond36 = phi %struct.VEC_basic_block_base* [ %base33, %cond.true31 ], [ null, %if.end28 ], !dbg !6779
  %call37 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond36) #7, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %call37, metadata !6699, metadata !DIExpression()), !dbg !6734
  %31 = load i32, i32* %x_last_basic_block, align 8, !dbg !6780
  %cmp39 = icmp ult i32 %31, %call37, !dbg !6782
  br i1 %cmp39, label %if.end46, label %if.then40, !dbg !6783

if.then40:                                        ; preds = %cond.end35
  %add43 = add nsw i32 %31, 3, !dbg !6784
  %div = sdiv i32 %add43, 4, !dbg !6786
  %add44 = add nsw i32 %31, %div, !dbg !6787
  call void @llvm.dbg.value(metadata i32 %add44, metadata !6700, metadata !DIExpression()), !dbg !6734
  call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_basic_block_info29, i32 %add44) #7, !dbg !6788
  br label %if.end46, !dbg !6789

if.end46:                                         ; preds = %cond.end35, %if.then40
  %32 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info29, align 8, !dbg !6790
  %tobool48 = icmp eq %struct.VEC_basic_block_gc* %32, null, !dbg !6790
  br i1 %tobool48, label %cond.end53, label %cond.true49, !dbg !6790

cond.true49:                                      ; preds = %if.end46
  %base51 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %32, i64 0, i32 0, !dbg !6790
  br label %cond.end53, !dbg !6790

cond.end53:                                       ; preds = %if.end46, %cond.true49
  %cond54 = phi %struct.VEC_basic_block_base* [ %base51, %cond.true49 ], [ null, %if.end46 ], !dbg !6790
  %33 = load i32, i32* %index, align 8, !dbg !6790
  %call56 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond54, i32 %33, %struct.basic_block_def* %bb) #7, !dbg !6790
  %34 = bitcast %struct.gimple_stmt_iterator* %tmp57 to i8*, !dbg !6791
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8, !dbg !6791
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp57, %struct.basic_block_def* %bb) #6, !dbg !6791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %34, i64 24, i1 false), !dbg !6791
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8, !dbg !6791
  %35 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %oi, i64 0, i32 0, !dbg !6792
  %vars_map = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 4, !dbg !6792
  %decl = getelementptr inbounds %struct.function, %struct.function* %dest_cfun, i64 0, i32 6, !dbg !6792
  br label %for.cond58, !dbg !6793

for.cond58:                                       ; preds = %cleanup, %cond.end53
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  %call59 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !6794
  %tobool60 = icmp eq i8 %call59, 0, !dbg !6795
  br i1 %tobool60, label %for.body61, label %for.end91, !dbg !6796

for.body61:                                       ; preds = %for.cond58
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  %call62 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !6797
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call62, metadata !6701, metadata !DIExpression()), !dbg !6792
  %call63 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call62) #7, !dbg !6798
  %call64 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call63) #7, !dbg !6798
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !6706, metadata !DIExpression()), !dbg !6792
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #8, !dbg !6799
  %call65 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call64) #6, !dbg !6800
  %tobool66 = icmp eq i8 %call65, 0, !dbg !6800
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !6802

if.then67:                                        ; preds = %for.body61
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %si, i8 zeroext 1) #6, !dbg !6803
  br label %cleanup, !dbg !6805, !llvm.loop !6806

if.end68:                                         ; preds = %for.body61
  %36 = load %struct.pointer_map_t*, %struct.pointer_map_t** %vars_map, align 8, !dbg !6808
  %37 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6808
  %call69 = call fastcc %union.tree_node* @replace_ssa_name(%union.tree_node* %call64, %struct.pointer_map_t* %36, %union.tree_node* %37) #7, !dbg !6808
  %call70 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call62) #7, !dbg !6808
  store %union.tree_node* %call69, %union.tree_node** %call70, align 8, !dbg !6808
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !6707, metadata !DIExpression(DW_OP_deref)), !dbg !6792
  %call71 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %oi, %union.gimple_statement_d* %call62, i32 1) #7, !dbg !6809
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call71, metadata !6705, metadata !DIExpression()), !dbg !6792
  br label %for.cond72, !dbg !6809

for.cond72:                                       ; preds = %for.inc85, %if.end68
  %use.0 = phi %struct.ssa_use_operand_d* [ %call71, %if.end68 ], [ %call86, %for.inc85 ], !dbg !6811
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use.0, metadata !6705, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !6707, metadata !DIExpression(DW_OP_deref)), !dbg !6792
  %call73 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %oi) #7, !dbg !6812
  %tobool74 = icmp eq i8 %call73, 0, !dbg !6812
  br i1 %tobool74, label %for.body76, label %for.end87, !dbg !6809

for.body76:                                       ; preds = %for.cond72
  %call77 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use.0) #7, !dbg !6814
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !6706, metadata !DIExpression()), !dbg !6792
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6816
  %bf.load = load i64, i64* %38, align 8, !dbg !6816
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6818
  %cmp79 = icmp eq i64 %bf.cast1, 141, !dbg !6818
  br i1 %cmp79, label %if.then80, label %for.inc85, !dbg !6819

if.then80:                                        ; preds = %for.body76
  %39 = load %struct.pointer_map_t*, %struct.pointer_map_t** %vars_map, align 8, !dbg !6820
  %40 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6820
  %call83 = call fastcc %union.tree_node* @replace_ssa_name(%union.tree_node* %call77, %struct.pointer_map_t* %39, %union.tree_node* %40) #7, !dbg !6820
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use.0, %union.tree_node* %call83) #7, !dbg !6820
  br label %for.inc85, !dbg !6820

for.inc85:                                        ; preds = %for.body76, %if.then80
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !6707, metadata !DIExpression(DW_OP_deref)), !dbg !6792
  %call86 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %oi) #7, !dbg !6812
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call86, metadata !6705, metadata !DIExpression()), !dbg !6792
  br label %for.cond72, !dbg !6812, !llvm.loop !6821

for.end87:                                        ; preds = %for.cond72
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #7, !dbg !6823
  br label %cleanup, !dbg !6824

cleanup:                                          ; preds = %for.end87, %if.then67
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #8, !dbg !6824
  br label %for.cond58

for.end91:                                        ; preds = %for.cond58
  %41 = bitcast %struct.gimple_stmt_iterator* %tmp92 to i8*, !dbg !6825
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8, !dbg !6825
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp92, %struct.basic_block_def* %bb) #7, !dbg !6825
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %41, i64 24, i1 false), !dbg !6825
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8, !dbg !6825
  %42 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !6826
  %info = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !6826
  %43 = bitcast i8** %info to %struct.move_stmt_d**, !dbg !6826
  %x_label_to_block_map = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i64 0, i32 6, !dbg !6827
  %eh_map = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 6, !dbg !6826
  br label %for.cond93, !dbg !6828

for.cond93:                                       ; preds = %if.end159, %for.end91
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  %call94 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !6829
  %tobool95 = icmp eq i8 %call94, 0, !dbg !6830
  br i1 %tobool95, label %for.body97, label %for.end167, !dbg !6831

for.body97:                                       ; preds = %for.cond93
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  %call98 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !6832
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call98, metadata !6720, metadata !DIExpression()), !dbg !6826
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %42) #8, !dbg !6833
  %call99 = call i8* @memset(i8* nonnull %42, i32 0, i64 56) #6, !dbg !6834
  store %struct.move_stmt_d* %d, %struct.move_stmt_d** %43, align 8, !dbg !6835
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !6724, metadata !DIExpression(DW_OP_deref)), !dbg !6826
  %call100 = call %union.tree_node* @walk_gimple_stmt(%struct.gimple_stmt_iterator* nonnull %si, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @move_stmt_r, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @move_stmt_op, %struct.walk_stmt_info* nonnull %wi) #6, !dbg !6836
  %call101 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call98) #7, !dbg !6837
  %cmp102 = icmp eq i32 %call101, 4, !dbg !6838
  br i1 %cmp102, label %if.then103, label %if.end159, !dbg !6839

if.then103:                                       ; preds = %for.body97
  %call104 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call98) #7, !dbg !6840
  call void @llvm.dbg.value(metadata %union.tree_node* %call104, metadata !6725, metadata !DIExpression()), !dbg !6827
  %label_decl_uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call104, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6841
  %44 = bitcast %union.tree_node** %label_decl_uid to i32*, !dbg !6841
  %45 = load i32, i32* %44, align 8, !dbg !6841
  call void @llvm.dbg.value(metadata i32 %45, metadata !6728, metadata !DIExpression()), !dbg !6827
  %cmp105 = icmp sgt i32 %45, -1, !dbg !6842
  br i1 %cmp105, label %cond.end108, label %cond.true106, !dbg !6842

cond.true106:                                     ; preds = %if.then103
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5788, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6842
  br label %cond.end108, !dbg !6842

cond.end108:                                      ; preds = %if.then103, %cond.true106
  %46 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_label_to_block_map, align 8, !dbg !6843
  %tobool110 = icmp eq %struct.VEC_basic_block_gc* %46, null, !dbg !6843
  br i1 %tobool110, label %cond.end115, label %cond.true111, !dbg !6843

cond.true111:                                     ; preds = %cond.end108
  %base113 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %46, i64 0, i32 0, !dbg !6843
  br label %cond.end115, !dbg !6843

cond.end115:                                      ; preds = %cond.end108, %cond.true111
  %cond116 = phi %struct.VEC_basic_block_base* [ %base113, %cond.true111 ], [ null, %cond.end108 ], !dbg !6843
  %call117 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond116) #7, !dbg !6843
  call void @llvm.dbg.value(metadata i32 %call117, metadata !6699, metadata !DIExpression()), !dbg !6734
  %cmp118 = icmp ugt i32 %call117, %45, !dbg !6844
  br i1 %cmp118, label %if.end123, label %if.then119, !dbg !6846

if.then119:                                       ; preds = %cond.end115
  %mul = mul nsw i32 %45, 3, !dbg !6847
  %div120 = sdiv i32 %mul, 2, !dbg !6849
  %add121 = add nsw i32 %div120, 1, !dbg !6850
  call void @llvm.dbg.value(metadata i32 %add121, metadata !6700, metadata !DIExpression()), !dbg !6734
  call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_label_to_block_map, i32 %add121) #7, !dbg !6851
  br label %if.end123, !dbg !6852

if.end123:                                        ; preds = %cond.end115, %if.then119
  %47 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_label_to_block_map, align 8, !dbg !6853
  %tobool125 = icmp eq %struct.VEC_basic_block_gc* %47, null, !dbg !6853
  br i1 %tobool125, label %cond.end130, label %cond.true126, !dbg !6853

cond.true126:                                     ; preds = %if.end123
  %base128 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %47, i64 0, i32 0, !dbg !6853
  br label %cond.end130, !dbg !6853

cond.end130:                                      ; preds = %if.end123, %cond.true126
  %cond131 = phi %struct.VEC_basic_block_base* [ %base128, %cond.true126 ], [ null, %if.end123 ], !dbg !6853
  %call132 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond131, i32 %45, %struct.basic_block_def* %bb) #7, !dbg !6853
  %48 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6854
  %cfg134 = getelementptr inbounds %struct.function, %struct.function* %48, i64 0, i32 1, !dbg !6854
  %49 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg134, align 8, !dbg !6854
  %x_label_to_block_map135 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %49, i64 0, i32 6, !dbg !6854
  %50 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_label_to_block_map135, align 8, !dbg !6854
  %tobool136 = icmp eq %struct.VEC_basic_block_gc* %50, null, !dbg !6854
  br i1 %tobool136, label %cond.end143, label %cond.true137, !dbg !6854

cond.true137:                                     ; preds = %cond.end130
  %base141 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %50, i64 0, i32 0, !dbg !6854
  br label %cond.end143, !dbg !6854

cond.end143:                                      ; preds = %cond.end130, %cond.true137
  %cond144 = phi %struct.VEC_basic_block_base* [ %base141, %cond.true137 ], [ null, %cond.end130 ], !dbg !6854
  %call145 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond144, i32 %45, %struct.basic_block_def* null) #7, !dbg !6854
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6855
  %51 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !6855
  %52 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6855
  %cmp147 = icmp eq %union.tree_node* %51, %52, !dbg !6855
  br i1 %cmp147, label %cond.end150, label %cond.true148, !dbg !6855

cond.true148:                                     ; preds = %cond.end143
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5801, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6855
  br label %cond.end150, !dbg !6855

cond.end150:                                      ; preds = %cond.end143, %cond.true148
  %53 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21, align 8, !dbg !6856
  %last_label_uid = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %53, i64 0, i32 11, !dbg !6858
  %54 = load i32, i32* %last_label_uid, align 8, !dbg !6858
  %cmp153 = icmp slt i32 %45, %54, !dbg !6859
  br i1 %cmp153, label %if.end159, label %if.then154, !dbg !6860

if.then154:                                       ; preds = %cond.end150
  %add155 = add nsw i32 %45, 1, !dbg !6861
  store i32 %add155, i32* %last_label_uid, align 8, !dbg !6862
  br label %if.end159, !dbg !6863

if.end159:                                        ; preds = %cond.end150, %if.then154, %for.body97
  %55 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6864
  %56 = load %struct.pointer_map_t*, %struct.pointer_map_t** %eh_map, align 8, !dbg !6865
  %call161 = call zeroext i8 @maybe_duplicate_eh_stmt_fn(%struct.function* %dest_cfun, %union.gimple_statement_d* %call98, %struct.function* %55, %union.gimple_statement_d* %call98, %struct.pointer_map_t* %56, i32 0) #6, !dbg !6866
  %57 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6867
  %call163 = call zeroext i8 @remove_stmt_from_eh_lp_fn(%struct.function* %57, %union.gimple_statement_d* %call98) #6, !dbg !6868
  %58 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6869
  call void @gimple_duplicate_stmt_histograms(%struct.function* %dest_cfun, %union.gimple_statement_d* %call98, %struct.function* %58, %union.gimple_statement_d* %call98) #6, !dbg !6870
  %59 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6871
  call void @gimple_remove_stmt_histograms(%struct.function* %59, %union.gimple_statement_d* %call98) #6, !dbg !6872
  call void @free_stmt_operands(%union.gimple_statement_d* %call98) #6, !dbg !6873
  call void @push_cfun(%struct.function* %dest_cfun) #6, !dbg !6874
  call fastcc void @update_stmt(%union.gimple_statement_d* %call98) #7, !dbg !6875
  call void @pop_cfun() #6, !dbg !6876
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %42) #8, !dbg !6877
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #7, !dbg !6878
  br label %for.cond93, !dbg !6879, !llvm.loop !6880

for.end167:                                       ; preds = %for.cond93
  %60 = bitcast %struct.edge_iterator* %tmp168 to i8*, !dbg !6882
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8, !dbg !6882
  %succs169 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6882
  %call170 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs169) #7, !dbg !6882
  %61 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp168, i64 0, i32 0, !dbg !6882
  %62 = extractvalue { i32, %struct.VEC_edge_gc** } %call170, 0, !dbg !6882
  store i32 %62, i32* %61, align 8, !dbg !6882
  %63 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp168, i64 0, i32 1, !dbg !6882
  %64 = extractvalue { i32, %struct.VEC_edge_gc** } %call170, 1, !dbg !6882
  store %struct.VEC_edge_gc** %64, %struct.VEC_edge_gc*** %63, align 8, !dbg !6882
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %60, i64 16, i1 false), !dbg !6882
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8, !dbg !6882
  %65 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6883
  %66 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6883
  %orig_block = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 0, !dbg !6884
  %new_block = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %d, i64 0, i32 1, !dbg !6884
  %67 = bitcast %union.tree_node** %new_block to i64*, !dbg !6884
  br label %for.cond171, !dbg !6882

for.cond171:                                      ; preds = %for.inc184, %for.end167
  %68 = load i32, i32* %65, align 8, !dbg !6886
  %69 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %66, align 8, !dbg !6886
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6697, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  %call172 = call fastcc zeroext i8 @ei_cond(i32 %68, %struct.VEC_edge_gc** %69, %struct.edge_def** nonnull %e) #7, !dbg !6886
  %tobool173 = icmp eq i8 %call172, 0, !dbg !6882
  br i1 %tobool173, label %for.end185, label %for.body174, !dbg !6882

for.body174:                                      ; preds = %for.cond171
  %70 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6887
  call void @llvm.dbg.value(metadata %struct.edge_def* %70, metadata !6697, metadata !DIExpression()), !dbg !6734
  %goto_locus = getelementptr inbounds %struct.edge_def, %struct.edge_def* %70, i64 0, i32 5, !dbg !6888
  %71 = load i32, i32* %goto_locus, align 8, !dbg !6888
  %tobool175 = icmp eq i32 %71, 0, !dbg !6887
  br i1 %tobool175, label %for.inc184, label %if.then176, !dbg !6889

if.then176:                                       ; preds = %for.body174
  call void @llvm.dbg.value(metadata %struct.edge_def* undef, metadata !6697, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !6729, metadata !DIExpression()), !dbg !6890
  %72 = load %union.tree_node*, %union.tree_node** %orig_block, align 8, !dbg !6891
  %cmp177 = icmp eq %union.tree_node* %72, null, !dbg !6892
  br i1 %cmp177, label %if.then180, label %lor.lhs.false, !dbg !6893

lor.lhs.false:                                    ; preds = %if.then176
  call void @llvm.dbg.value(metadata %struct.edge_def* %70, metadata !6697, metadata !DIExpression()), !dbg !6734
  %goto_block = getelementptr inbounds %struct.edge_def, %struct.edge_def* %70, i64 0, i32 4, !dbg !6894
  %73 = load %union.tree_node*, %union.tree_node** %goto_block, align 8, !dbg !6894
  call void @llvm.dbg.value(metadata %union.tree_node* %73, metadata !6729, metadata !DIExpression()), !dbg !6890
  %cmp179 = icmp eq %union.tree_node* %73, %72, !dbg !6895
  br i1 %cmp179, label %if.then180, label %for.inc184, !dbg !6896

if.then180:                                       ; preds = %lor.lhs.false, %if.then176
  %74 = load i64, i64* %67, align 8, !dbg !6897
  call void @llvm.dbg.value(metadata %struct.edge_def* %70, metadata !6697, metadata !DIExpression()), !dbg !6734
  %goto_block181 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %70, i64 0, i32 4, !dbg !6898
  %75 = bitcast %union.tree_node** %goto_block181 to i64*, !dbg !6899
  store i64 %74, i64* %75, align 8, !dbg !6899
  br label %for.inc184, !dbg !6900

for.inc184:                                       ; preds = %for.body174, %if.then180, %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6696, metadata !DIExpression(DW_OP_deref)), !dbg !6734
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6886
  br label %for.cond171, !dbg !6886, !llvm.loop !6901

for.end185:                                       ; preds = %for.cond171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6903
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6903
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6903
  ret void, !dbg !6903
}

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_block_vars_by_duplicates(%union.tree_node* %block, %struct.pointer_map_t* %vars_map, %union.tree_node* %to_context) unnamed_addr #5 !dbg !6904 {
entry:
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !6908, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %vars_map, metadata !6909, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.value(metadata %union.tree_node* %to_context, metadata !6910, metadata !DIExpression()), !dbg !6913
  %0 = bitcast %union.tree_node** %t to i8*, !dbg !6914
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6914
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !6911, metadata !DIExpression()), !dbg !6913
  %2 = bitcast %union.tree_node** %t to i64*, !dbg !6917
  %3 = bitcast %union.tree_node** %t to %struct.tree_decl_common**, !dbg !6920
  br label %for.cond, !dbg !6925

for.cond:                                         ; preds = %for.inc, %entry
  %tp.0 = phi %union.tree_node** [ %1, %entry ], [ %chain29, %for.inc ], !dbg !6926
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.0, metadata !6911, metadata !DIExpression()), !dbg !6913
  %4 = load %union.tree_node*, %union.tree_node** %tp.0, align 8, !dbg !6927
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !6928
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6928
  br i1 %tobool, label %for.end, label %for.body, !dbg !6928

for.body:                                         ; preds = %for.cond
  %6 = ptrtoint %union.tree_node* %4 to i64, !dbg !6928
  %7 = bitcast %union.tree_node** %tp.0 to i64*, !dbg !6929
  store i64 %6, i64* %2, align 8, !dbg !6930
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6931
  %bf.load = load i64, i64* %.cast, align 8, !dbg !6931
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6933
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !6933
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !6934

land.lhs.true:                                    ; preds = %for.body
  %cmp6 = icmp eq i64 %bf.cast1, 33, !dbg !6935
  br i1 %cmp6, label %if.end, label %for.inc, !dbg !6936

if.end:                                           ; preds = %land.lhs.true, %for.body
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !6912, metadata !DIExpression(DW_OP_deref)), !dbg !6913
  call fastcc void @replace_by_duplicate_decl(%union.tree_node** nonnull %t, %struct.pointer_map_t* %vars_map, %union.tree_node* %to_context) #7, !dbg !6937
  %8 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !6938
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6912, metadata !DIExpression()), !dbg !6913
  %9 = load %union.tree_node*, %union.tree_node** %tp.0, align 8, !dbg !6939
  %cmp7 = icmp eq %union.tree_node* %8, %9, !dbg !6940
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6941
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6941
  br i1 %cmp7, label %for.inc, label %if.then8, !dbg !6941

if.then8:                                         ; preds = %if.end
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6941
  %bf.load10 = load i64, i64* %12, align 8, !dbg !6942
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !6943
  %cmp13 = icmp eq i64 %bf.cast122, 32, !dbg !6943
  br i1 %cmp13, label %land.lhs.true14, label %if.end24, !dbg !6944

land.lhs.true14:                                  ; preds = %if.then8
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6945
  %13 = bitcast i40* %decl_flag_2 to i64*, !dbg !6945
  %bf.load15 = load i64, i64* %13, align 8, !dbg !6945
  %bf.cast174 = and i64 %bf.load15, 67108864, !dbg !6945
  %tobool18 = icmp eq i64 %bf.cast174, 0, !dbg !6945
  br i1 %tobool18, label %if.end24, label %if.then19, !dbg !6946

if.then19:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6912, metadata !DIExpression()), !dbg !6913
  %call = call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %9) #6, !dbg !6947
  call void @decl_value_expr_insert(%union.tree_node* %8, %union.tree_node* %call) #6, !dbg !6947
  %14 = load %struct.tree_decl_common*, %struct.tree_decl_common** %3, align 8, !dbg !6948
  %decl_flag_221 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %14, i64 0, i32 2, !dbg !6948
  %15 = bitcast i40* %decl_flag_221 to i64*, !dbg !6948
  %bf.load22 = load i64, i64* %15, align 8, !dbg !6949
  %bf.set = or i64 %bf.load22, 67108864, !dbg !6949
  store i64 %bf.set, i64* %15, align 8, !dbg !6949
  %.phi.trans.insert = bitcast %union.tree_node** %tp.0 to %struct.tree_common**, !dbg !6950
  %.pre = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !6951
  %16 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %14, i64 0, i32 0, i32 0, !dbg !6952
  br label %if.end24, !dbg !6952

if.end24:                                         ; preds = %land.lhs.true14, %if.then19, %if.then8
  %17 = phi %struct.tree_common* [ %11, %land.lhs.true14 ], [ %16, %if.then19 ], [ %11, %if.then8 ], !dbg !6953
  %18 = phi %struct.tree_common* [ %10, %land.lhs.true14 ], [ %.pre, %if.then19 ], [ %10, %if.then8 ], !dbg !6951
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 1, !dbg !6951
  %19 = bitcast %union.tree_node** %chain to i64*, !dbg !6951
  %20 = load i64, i64* %19, align 8, !dbg !6951
  %chain26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i64 0, i32 1, !dbg !6953
  %21 = bitcast %union.tree_node** %chain26 to i64*, !dbg !6954
  store i64 %20, i64* %21, align 8, !dbg !6954
  %.cast3 = ptrtoint %struct.tree_common* %17 to i64, !dbg !6955
  store i64 %.cast3, i64* %7, align 8, !dbg !6956
  br label %for.inc, !dbg !6957

for.inc:                                          ; preds = %land.lhs.true, %if.end, %if.end24
  %22 = phi %struct.tree_common* [ %5, %land.lhs.true ], [ %10, %if.end ], [ %17, %if.end24 ], !dbg !6958
  %chain29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %22, i64 0, i32 1, !dbg !6958
  call void @llvm.dbg.value(metadata %union.tree_node** %chain29, metadata !6911, metadata !DIExpression()), !dbg !6913
  br label %for.cond, !dbg !6959, !llvm.loop !6960

for.end:                                          ; preds = %for.cond
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6962
  br label %for.cond31, !dbg !6964

for.cond31:                                       ; preds = %for.body33, %for.end
  %block.addr.0.in = phi %union.tree_node** [ %23, %for.end ], [ %chain36, %for.body33 ]
  %block.addr.0 = load %union.tree_node*, %union.tree_node** %block.addr.0.in, align 8, !dbg !6965
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.0, metadata !6908, metadata !DIExpression()), !dbg !6913
  %tobool32 = icmp eq %union.tree_node* %block.addr.0, null, !dbg !6966
  br i1 %tobool32, label %for.end37, label %for.body33, !dbg !6966

for.body33:                                       ; preds = %for.cond31
  call fastcc void @replace_block_vars_by_duplicates(%union.tree_node* nonnull %block.addr.0, %struct.pointer_map_t* %vars_map, %union.tree_node* %to_context) #7, !dbg !6967
  %chain36 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6969
  br label %for.cond31, !dbg !6970, !llvm.loop !6971

for.end37:                                        ; preds = %for.cond31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6973
  ret void, !dbg !6973
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @add_bb_to_loop(%struct.basic_block_def*, %struct.loop*) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @print_node(%struct._IO_FILE*, i8*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @dump_eh_tree(%struct._IO_FILE*, %struct.function*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_has_body_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @dump_node(%union.tree_node*, i32, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local void @print_generic_decl(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @check_bb_profile(%struct.basic_block_def*, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local %struct.gimple_seq_d* @gimple_body(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6974 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6981, metadata !DIExpression()), !dbg !6983
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) #7, !dbg !6984
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call, metadata !6982, metadata !DIExpression()), !dbg !6983
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !6985
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6985

cond.true:                                        ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !6986
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6986
  br label %cond.end, !dbg !6985

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.gimple_statement_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6985
  ret %union.gimple_statement_d* %cond, !dbg !6987
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6988 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6990, metadata !DIExpression()), !dbg !6992
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) #7, !dbg !6993
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call, metadata !6991, metadata !DIExpression()), !dbg !6992
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !6994
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6994

cond.true:                                        ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !6995
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6995
  br label %cond.end, !dbg !6994

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.gimple_statement_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6994
  ret %union.gimple_statement_d* %cond, !dbg !6996
}

declare dso_local void @print_gimple_seq(%struct._IO_FILE*, %struct.gimple_seq_d*, i32, i32) local_unnamed_addr #2

declare dso_local void @print_generic_stmt_indented(%struct._IO_FILE*, %union.tree_node*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_function(%union.tree_node* %fn, i32 %flags) local_unnamed_addr #5 !dbg !6997 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !7001, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7002, metadata !DIExpression()), !dbg !7003
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7004
  tail call void @dump_function_to_file(%union.tree_node* %fn, %struct._IO_FILE* %0, i32 %flags) #7, !dbg !7005
  ret void, !dbg !7006
}

; Function Attrs: nounwind uwtable
define dso_local void @print_loops_bb(%struct._IO_FILE* %file, %struct.basic_block_def* %bb, i32 %indent, i32 %verbosity) local_unnamed_addr #5 !dbg !7007 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7011, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7012, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %indent, metadata !7013, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %verbosity, metadata !7014, metadata !DIExpression()), !dbg !7016
  %conv = sext i32 %indent to i64, !dbg !7017
  %add = add nsw i64 %conv, 1, !dbg !7017
  %0 = alloca i8, i64 %add, align 16, !dbg !7017
  call void @llvm.dbg.value(metadata i8* %0, metadata !7015, metadata !DIExpression()), !dbg !7016
  %call = call i8* @memset(i8* nonnull %0, i32 32, i64 %conv) #6, !dbg !7018
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %conv, !dbg !7019
  store i8 0, i8* %arrayidx, align 1, !dbg !7020
  %cmp = icmp sgt i32 %verbosity, 1, !dbg !7021
  br i1 %cmp, label %if.then, label %if.end, !dbg !7023

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7024
  %1 = load i32, i32* %index, align 8, !dbg !7024
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0), i8* nonnull %0, i32 %1) #6, !dbg !7026
  call fastcc void @print_pred_bbs(%struct._IO_FILE* %file, %struct.basic_block_def* %bb) #7, !dbg !7027
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !7028
  call fastcc void @print_succ_bbs(%struct._IO_FILE* %file, %struct.basic_block_def* %bb) #7, !dbg !7029
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !7030
  br label %if.end, !dbg !7031

if.end:                                           ; preds = %if.then, %entry
  %cmp6 = icmp sgt i32 %verbosity, 2, !dbg !7032
  br i1 %cmp6, label %if.then8, label %if.end12, !dbg !7034

if.then8:                                         ; preds = %if.end
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i8* nonnull %0) #6, !dbg !7035
  %add10 = add nsw i32 %indent, 4, !dbg !7037
  call void @gimple_dump_bb(%struct.basic_block_def* %bb, %struct._IO_FILE* %file, i32 %add10, i32 16448) #6, !dbg !7038
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i8* nonnull %0) #6, !dbg !7039
  br label %if.end12, !dbg !7040

if.end12:                                         ; preds = %if.then8, %if.end
  ret void, !dbg !7041
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_pred_bbs(%struct._IO_FILE* %file, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7042 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7046, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7047, metadata !DIExpression()), !dbg !7050
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !7051
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7051
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7052
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7052
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7053
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7053
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7053
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !7053
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7053
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7053
  store i32 %4, i32* %3, align 8, !dbg !7053
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7053
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7053
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !7053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7053
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7053
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7055
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7055
  br label %for.cond, !dbg !7053

for.cond:                                         ; preds = %for.body, %entry
  %9 = load i32, i32* %7, align 8, !dbg !7057
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !7057
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7048, metadata !DIExpression(DW_OP_deref)), !dbg !7050
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !7057
  %tobool = icmp eq i8 %call1, 0, !dbg !7053
  br i1 %tobool, label %for.end, label %for.body, !dbg !7053

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7058
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !7048, metadata !DIExpression()), !dbg !7050
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 0, !dbg !7059
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7059
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !7060
  %13 = load i32, i32* %index, align 8, !dbg !7060
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), i32 %13) #6, !dbg !7061
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7049, metadata !DIExpression(DW_OP_deref)), !dbg !7050
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7057
  br label %for.cond, !dbg !7057, !llvm.loop !7062

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7064
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7064
  ret void, !dbg !7064
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_succ_bbs(%struct._IO_FILE* %file, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7065 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7067, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7068, metadata !DIExpression()), !dbg !7071
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !7072
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7072
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7073
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7073
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7074
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7074
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7074
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7074
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7074
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7074
  store i32 %4, i32* %3, align 8, !dbg !7074
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7074
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7074
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !7074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7074
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7074
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7076
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7076
  br label %for.cond, !dbg !7074

for.cond:                                         ; preds = %for.body, %entry
  %9 = load i32, i32* %7, align 8, !dbg !7078
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !7078
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7069, metadata !DIExpression(DW_OP_deref)), !dbg !7071
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !7078
  %tobool = icmp eq i8 %call1, 0, !dbg !7074
  br i1 %tobool, label %for.end, label %for.body, !dbg !7074

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7079
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !7069, metadata !DIExpression()), !dbg !7071
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 1, !dbg !7080
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7080
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !7081
  %13 = load i32, i32* %index, align 8, !dbg !7081
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), i32 %13) #6, !dbg !7082
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7070, metadata !DIExpression(DW_OP_deref)), !dbg !7071
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7078
  br label %for.cond, !dbg !7078, !llvm.loop !7083

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7085
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7085
  ret void, !dbg !7085
}

; Function Attrs: nounwind uwtable
define dso_local void @print_loops(%struct._IO_FILE* %file, i32 %verbosity) local_unnamed_addr #5 !dbg !7086 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7088, metadata !DIExpression()), !dbg !7091
  call void @llvm.dbg.value(metadata i32 %verbosity, metadata !7089, metadata !DIExpression()), !dbg !7091
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7092
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7092
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7092
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !7092
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7092
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !7090, metadata !DIExpression()), !dbg !7091
  %tobool = icmp eq %struct.basic_block_def* %2, null, !dbg !7093
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7095

land.lhs.true:                                    ; preds = %entry
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 3, !dbg !7096
  %3 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !7096
  %tobool1 = icmp eq %struct.loop* %3, null, !dbg !7097
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7098

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @print_loop_and_siblings(%struct._IO_FILE* %file, %struct.loop* nonnull %3, i32 0, i32 %verbosity) #7, !dbg !7099
  br label %if.end, !dbg !7099

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  ret void, !dbg !7100
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_loop_and_siblings(%struct._IO_FILE* %file, %struct.loop* %loop, i32 %indent, i32 %verbosity) unnamed_addr #5 !dbg !7101 {
entry:
  br label %tailrecurse, !dbg !7109

tailrecurse:                                      ; preds = %if.end, %entry
  %loop.tr = phi %struct.loop* [ %loop, %entry ], [ %0, %if.end ]
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7105, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata %struct.loop* %loop.tr, metadata !7106, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata i32 %indent, metadata !7107, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata i32 %verbosity, metadata !7108, metadata !DIExpression()), !dbg !7110
  %cmp = icmp eq %struct.loop* %loop.tr, null, !dbg !7111
  br i1 %cmp, label %return, label %if.end, !dbg !7113

if.end:                                           ; preds = %tailrecurse
  tail call fastcc void @print_loop(%struct._IO_FILE* %file, %struct.loop* nonnull %loop.tr, i32 %indent, i32 %verbosity) #7, !dbg !7114
  %next = getelementptr inbounds %struct.loop, %struct.loop* %loop.tr, i64 0, i32 9, !dbg !7115
  %0 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !7115
  br label %tailrecurse, !dbg !7109

return:                                           ; preds = %tailrecurse
  ret void, !dbg !7116
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_loops(i32 %verbosity) local_unnamed_addr #5 !dbg !7117 {
entry:
  call void @llvm.dbg.value(metadata i32 %verbosity, metadata !7119, metadata !DIExpression()), !dbg !7120
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7121
  tail call void @print_loops(%struct._IO_FILE* %0, i32 %verbosity) #7, !dbg !7122
  ret void, !dbg !7123
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_loop(%struct.loop* %loop, i32 %verbosity) local_unnamed_addr #5 !dbg !7124 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7128, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata i32 %verbosity, metadata !7129, metadata !DIExpression()), !dbg !7130
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7131
  tail call fastcc void @print_loop(%struct._IO_FILE* %0, %struct.loop* %loop, i32 0, i32 %verbosity) #7, !dbg !7132
  ret void, !dbg !7133
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_loop(%struct._IO_FILE* %file, %struct.loop* %loop, i32 %indent, i32 %verbosity) unnamed_addr #5 !dbg !7134 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7136, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !7137, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i32 %indent, metadata !7138, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i32 %verbosity, metadata !7139, metadata !DIExpression()), !dbg !7142
  %cmp = icmp eq %struct.loop* %loop, null, !dbg !7143
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !7145

if.end:                                           ; preds = %entry
  %conv = sext i32 %indent to i64, !dbg !7146
  %add = add nsw i64 %conv, 1, !dbg !7146
  %0 = alloca i8, i64 %add, align 16, !dbg !7146
  call void @llvm.dbg.value(metadata i8* %0, metadata !7140, metadata !DIExpression()), !dbg !7142
  %call = call i8* @memset(i8* nonnull %0, i32 32, i64 %conv) #6, !dbg !7147
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %conv, !dbg !7148
  store i8 0, i8* %arrayidx, align 1, !dbg !7149
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !7150
  %1 = load i32, i32* %num, align 8, !dbg !7150
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !7151
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !7151
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !7152
  %3 = load i32, i32* %index, align 8, !dbg !7152
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !7153
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !7153
  %index2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !7154
  %5 = load i32, i32* %index2, align 8, !dbg !7154
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.149, i64 0, i64 0), i8* nonnull %0, i32 %1, i32 %3, i32 %5) #6, !dbg !7155
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0)) #6, !dbg !7156
  %nb_iterations = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 11, !dbg !7157
  %6 = load %union.tree_node*, %union.tree_node** %nb_iterations, align 8, !dbg !7157
  call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %6, i32 0) #6, !dbg !7158
  %any_upper_bound = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 14, !dbg !7159
  %7 = load i8, i8* %any_upper_bound, align 8, !dbg !7159
  %tobool = icmp eq i8 %7, 0, !dbg !7161
  br i1 %tobool, label %if.end7, label %if.then5, !dbg !7162

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.151, i64 0, i64 0)) #6, !dbg !7163
  %8 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 12, i32 0, !dbg !7165
  %9 = load i64, i64* %8, align 8, !dbg !7165
  %10 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 12, i32 1, !dbg !7165
  %11 = load i64, i64* %10, align 8, !dbg !7165
  call void @dump_double_int(%struct._IO_FILE* %file, i64 %9, i64 %11, i8 zeroext 1) #6, !dbg !7165
  br label %if.end7, !dbg !7166

if.end7:                                          ; preds = %if.end, %if.then5
  %any_estimate = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 15, !dbg !7167
  %12 = load i8, i8* %any_estimate, align 1, !dbg !7167
  %tobool8 = icmp eq i8 %12, 0, !dbg !7169
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !7170

if.then9:                                         ; preds = %if.end7
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.152, i64 0, i64 0)) #6, !dbg !7171
  %13 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 13, i32 0, !dbg !7173
  %14 = load i64, i64* %13, align 8, !dbg !7173
  %15 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 13, i32 1, !dbg !7173
  %16 = load i64, i64* %15, align 8, !dbg !7173
  call void @dump_double_int(%struct._IO_FILE* %file, i64 %14, i64 %16, i8 zeroext 1) #6, !dbg !7173
  br label %if.end11, !dbg !7174

if.end11:                                         ; preds = %if.end7, %if.then9
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !7175
  %cmp13 = icmp sgt i32 %verbosity, 0, !dbg !7176
  br i1 %cmp13, label %if.then15, label %cleanup.cont, !dbg !7178

if.then15:                                        ; preds = %if.end11
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i64 0, i64 0), i8* nonnull %0) #6, !dbg !7179
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7181
  %cfg = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !7181
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7181
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 0, !dbg !7181
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7181
  br label %for.cond, !dbg !7181

for.cond:                                         ; preds = %for.inc, %if.then15
  %.pre2 = phi %struct.function* [ %17, %if.then15 ], [ %.pre, %for.inc ]
  %20 = phi %struct.control_flow_graph* [ %18, %if.then15 ], [ %.pre1, %for.inc ], !dbg !7183
  %.pn = phi %struct.basic_block_def* [ %19, %if.then15 ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !7185
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7185
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7141, metadata !DIExpression()), !dbg !7142
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 1, !dbg !7183
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7183
  %cmp19 = icmp eq %struct.basic_block_def* %bb.0, %21, !dbg !7183
  br i1 %cmp19, label %for.end, label %for.body, !dbg !7181

for.body:                                         ; preds = %for.cond
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 3, !dbg !7186
  %22 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !7186
  %cmp21 = icmp eq %struct.loop* %22, %loop, !dbg !7188
  br i1 %cmp21, label %if.then23, label %for.inc, !dbg !7189

if.then23:                                        ; preds = %for.body
  call void @print_loops_bb(%struct._IO_FILE* %file, %struct.basic_block_def* %bb.0, i32 %indent, i32 %verbosity) #7, !dbg !7190
  %.pre.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7183
  br label %for.inc, !dbg !7190

for.inc:                                          ; preds = %for.body, %if.then23
  %.pre = phi %struct.function* [ %.pre2, %for.body ], [ %.pre.pre, %if.then23 ], !dbg !7183
  %cfg18.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !7191
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18.phi.trans.insert, align 8, !dbg !7183
  br label %for.cond, !dbg !7183, !llvm.loop !7192

for.end:                                          ; preds = %for.cond
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !7194
  %23 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !7194
  %add26 = add nsw i32 %indent, 2, !dbg !7195
  call fastcc void @print_loop_and_siblings(%struct._IO_FILE* %file, %struct.loop* %23, i32 %add26, i32 %verbosity) #7, !dbg !7196
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.154, i64 0, i64 0), i8* nonnull %0) #6, !dbg !7197
  br label %cleanup.cont, !dbg !7198

cleanup.cont:                                     ; preds = %entry, %for.end, %if.end11
  ret void, !dbg !7199
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_loop_num(i32 %num, i32 %verbosity) local_unnamed_addr #5 !dbg !7200 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !7204, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i32 %verbosity, metadata !7205, metadata !DIExpression()), !dbg !7206
  %call = tail call fastcc %struct.loop* @get_loop(i32 %num) #7, !dbg !7207
  tail call void @debug_loop(%struct.loop* %call, i32 %verbosity) #7, !dbg !7208
  ret void, !dbg !7209
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !7210 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !7214, metadata !DIExpression()), !dbg !7215
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7216
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !7216
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !7216
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !7216
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !7216
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !7216
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7216

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !7216
  br label %cond.end, !dbg !7216

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7216
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #7, !dbg !7216
  ret %struct.loop* %call, !dbg !7217
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @gimple_purge_dead_abnormal_call_edges(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !7218 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7220, metadata !DIExpression()), !dbg !7227
  %call = tail call zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def* %bb) #7, !dbg !7228
  call void @llvm.dbg.value(metadata i8 %call, metadata !7221, metadata !DIExpression()), !dbg !7227
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7229
  %has_nonlocal_label = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 20, !dbg !7230
  %bf.load = load i32, i32* %has_nonlocal_label, align 8, !dbg !7230
  %bf.clear = and i32 %bf.load, 1048576, !dbg !7230
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !7229
  br i1 %tobool, label %if.end15, label %if.then, !dbg !7231

if.then:                                          ; preds = %entry
  %call1 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !7232
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !7222, metadata !DIExpression()), !dbg !7233
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7234
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7234
  %tobool2 = icmp eq %union.gimple_statement_d* %call1, null, !dbg !7235
  br i1 %tobool2, label %if.then5, label %land.lhs.true, !dbg !7237

land.lhs.true:                                    ; preds = %if.then
  %call3 = tail call zeroext i8 @stmt_can_make_abnormal_goto(%union.gimple_statement_d* nonnull %call1) #7, !dbg !7238
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7238
  br i1 %tobool4, label %if.then5, label %if.end11, !dbg !7239

if.then5:                                         ; preds = %land.lhs.true, %if.then
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7240
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7240
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7240
  %call6 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7240
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7240
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call6, 0, !dbg !7240
  store i32 %4, i32* %3, align 8, !dbg !7240
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7240
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call6, 1, !dbg !7240
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !7240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7240
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7240
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7242
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7242
  br label %for.cond, !dbg !7244

for.cond:                                         ; preds = %if.end, %if.then5
  %changed.0 = phi i8 [ %call, %if.then5 ], [ %changed.1, %if.end ], !dbg !7227
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7221, metadata !DIExpression()), !dbg !7227
  %9 = load i32, i32* %7, align 8, !dbg !7245
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !7245
  %call7 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %9, %struct.VEC_edge_gc** %10) #7, !dbg !7245
  call void @llvm.dbg.value(metadata %struct.edge_def* %call7, metadata !7226, metadata !DIExpression()), !dbg !7233
  %tobool8 = icmp eq %struct.edge_def* %call7, null, !dbg !7246
  br i1 %tobool8, label %if.end11.loopexit, label %for.body, !dbg !7246

for.body:                                         ; preds = %for.cond
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call7, i64 0, i32 7, !dbg !7247
  %11 = load i32, i32* %flags, align 8, !dbg !7247
  %and = and i32 %11, 2, !dbg !7250
  %tobool9 = icmp eq i32 %and, 0, !dbg !7250
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !7251

if.then10:                                        ; preds = %for.body
  call void @remove_edge(%struct.edge_def* nonnull %call7) #6, !dbg !7252
  call void @llvm.dbg.value(metadata i8 1, metadata !7221, metadata !DIExpression()), !dbg !7227
  br label %if.end, !dbg !7254

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7225, metadata !DIExpression(DW_OP_deref)), !dbg !7233
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7255
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %changed.1 = phi i8 [ 1, %if.then10 ], [ %changed.0, %if.else ], !dbg !7227
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !7221, metadata !DIExpression()), !dbg !7227
  br label %for.cond, !dbg !7256, !llvm.loop !7257

if.end11.loopexit:                                ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !7227
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7221, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7221, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7221, metadata !DIExpression()), !dbg !7227
  br label %if.end11, !dbg !7259

if.end11:                                         ; preds = %if.end11.loopexit, %land.lhs.true
  %changed.2 = phi i8 [ %call, %land.lhs.true ], [ %changed.0.lcssa, %if.end11.loopexit ], !dbg !7261
  call void @llvm.dbg.value(metadata i8 %changed.2, metadata !7221, metadata !DIExpression()), !dbg !7227
  %tobool12 = icmp eq i8 %changed.2, 0, !dbg !7259
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7262

if.then13:                                        ; preds = %if.end11
  call void @free_dominance_info(i32 1) #6, !dbg !7263
  br label %if.end14, !dbg !7263

if.end14:                                         ; preds = %if.end11, %if.then13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7264
  br label %if.end15, !dbg !7265

if.end15:                                         ; preds = %entry, %if.end14
  %changed.3 = phi i8 [ %changed.2, %if.end14 ], [ %call, %entry ], !dbg !7261
  call void @llvm.dbg.value(metadata i8 %changed.3, metadata !7221, metadata !DIExpression()), !dbg !7227
  ret i8 %changed.3, !dbg !7266
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !7267 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7269, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8 0, metadata !7270, metadata !DIExpression()), !dbg !7274
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7275
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7275
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !7276
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7273, metadata !DIExpression()), !dbg !7274
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !7277
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7279

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d* nonnull %call) #6, !dbg !7280
  %tobool2 = icmp eq i8 %call1, 0, !dbg !7280
  br i1 %tobool2, label %if.end, label %cleanup, !dbg !7281

if.end:                                           ; preds = %land.lhs.true, %entry
  %1 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7282
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7282
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7282
  %call3 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7282
  %2 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7282
  %3 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 0, !dbg !7282
  store i32 %3, i32* %2, align 8, !dbg !7282
  %4 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7282
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 1, !dbg !7282
  store %struct.VEC_edge_gc** %5, %struct.VEC_edge_gc*** %4, align 8, !dbg !7282
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !7282
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7282
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7284
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7284
  br label %for.cond, !dbg !7286

for.cond:                                         ; preds = %if.end8, %if.end
  %changed.0 = phi i8 [ 0, %if.end ], [ %changed.1, %if.end8 ], !dbg !7274
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7270, metadata !DIExpression()), !dbg !7274
  %8 = load i32, i32* %6, align 8, !dbg !7287
  %9 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !7287
  %call4 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %8, %struct.VEC_edge_gc** %9) #7, !dbg !7287
  call void @llvm.dbg.value(metadata %struct.edge_def* %call4, metadata !7271, metadata !DIExpression()), !dbg !7274
  %tobool5 = icmp eq %struct.edge_def* %call4, null, !dbg !7288
  br i1 %tobool5, label %cleanup.loopexit, label %for.body, !dbg !7288

for.body:                                         ; preds = %for.cond
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call4, i64 0, i32 7, !dbg !7289
  %10 = load i32, i32* %flags, align 8, !dbg !7289
  %and = and i32 %10, 8, !dbg !7292
  %tobool6 = icmp eq i32 %and, 0, !dbg !7292
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !7293

if.then7:                                         ; preds = %for.body
  call void @remove_edge_and_dominated_blocks(%struct.edge_def* nonnull %call4) #7, !dbg !7294
  call void @llvm.dbg.value(metadata i8 1, metadata !7270, metadata !DIExpression()), !dbg !7274
  br label %if.end8, !dbg !7296

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7272, metadata !DIExpression(DW_OP_deref)), !dbg !7274
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7297
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then7
  %changed.1 = phi i8 [ 1, %if.then7 ], [ %changed.0, %if.else ], !dbg !7274
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !7270, metadata !DIExpression()), !dbg !7274
  br label %for.cond, !dbg !7298, !llvm.loop !7299

cleanup.loopexit:                                 ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !7274
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7270, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7270, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7270, metadata !DIExpression()), !dbg !7274
  br label %cleanup, !dbg !7301

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true
  %retval.0 = phi i8 [ 0, %land.lhs.true ], [ %changed.0.lcssa, %cleanup.loopexit ], !dbg !7274
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7301
  ret i8 %retval.0, !dbg !7301
}

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @remove_edge_and_dominated_blocks(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !7302 {
entry:
  %bbs_to_remove = alloca %struct.VEC_basic_block_heap*, align 8
  %bbs_to_fix_dom = alloca %struct.VEC_basic_block_heap*, align 8
  %f = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %i = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp35 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !7304, metadata !DIExpression()), !dbg !7323
  %0 = bitcast %struct.VEC_basic_block_heap** %bbs_to_remove to i8*, !dbg !7324
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7324
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* null, metadata !7305, metadata !DIExpression()), !dbg !7323
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %bbs_to_remove, align 8, !dbg !7325
  %1 = bitcast %struct.VEC_basic_block_heap** %bbs_to_fix_dom to i8*, !dbg !7326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7326
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* null, metadata !7306, metadata !DIExpression()), !dbg !7323
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %bbs_to_fix_dom, align 8, !dbg !7327
  %2 = bitcast %struct.edge_def** %f to i8*, !dbg !7328
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7328
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7329
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !7329
  call void @llvm.dbg.value(metadata i8 0, metadata !7311, metadata !DIExpression()), !dbg !7323
  %4 = bitcast i32* %i to i8*, !dbg !7330
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !7330
  %5 = bitcast %struct.basic_block_def** %bb to i8*, !dbg !7331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !7331
  %6 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7332
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8, !dbg !7332
  %call = tail call zeroext i8 @dom_info_available_p(i32 1) #6, !dbg !7333
  %tobool = icmp eq i8 %call, 0, !dbg !7333
  br i1 %tobool, label %if.then, label %if.end, !dbg !7335

if.then:                                          ; preds = %entry
  tail call void @remove_edge(%struct.edge_def* %e) #6, !dbg !7336
  br label %cleanup, !dbg !7338

if.end:                                           ; preds = %entry
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !7339
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7339
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7341
  %cfg = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !7341
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7341
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !7341
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7341
  %cmp = icmp eq %struct.basic_block_def* %7, %10, !dbg !7342
  br i1 %cmp, label %if.then1, label %if.end6, !dbg !7343

if.then1:                                         ; preds = %if.end
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cfgcleanup_altered_bbs, align 8, !dbg !7344
  %tobool2 = icmp eq %struct.bitmap_head_def* %11, null, !dbg !7344
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !7347

if.then3:                                         ; preds = %if.then1
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !7348
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7348
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !7349
  %13 = load i32, i32* %index, align 8, !dbg !7349
  %call4 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %11, i32 %13) #6, !dbg !7350
  br label %if.end5, !dbg !7350

if.end5:                                          ; preds = %if.then1, %if.then3
  tail call void @remove_edge(%struct.edge_def* %e) #6, !dbg !7351
  br label %cleanup, !dbg !7352

if.end6:                                          ; preds = %if.end
  %14 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7353
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !7353
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 0, !dbg !7353
  %call8 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !7353
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7353
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 0, !dbg !7353
  store i32 %16, i32* %15, align 8, !dbg !7353
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7353
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 1, !dbg !7353
  store %struct.VEC_edge_gc** %18, %struct.VEC_edge_gc*** %17, align 8, !dbg !7353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !7353
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !7353
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7355
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7355
  br label %for.cond, !dbg !7353

for.cond:                                         ; preds = %for.inc, %if.end6
  %21 = load i32, i32* %19, align 8, !dbg !7357
  %22 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !7357
  call void @llvm.dbg.value(metadata %struct.edge_def** %f, metadata !7309, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call9 = call fastcc zeroext i8 @ei_cond(i32 %21, %struct.VEC_edge_gc** %22, %struct.edge_def** nonnull %f) #7, !dbg !7357
  %tobool10 = icmp eq i8 %call9, 0, !dbg !7353
  br i1 %tobool10, label %for.end, label %for.body, !dbg !7353

for.body:                                         ; preds = %for.cond
  %23 = load %struct.edge_def*, %struct.edge_def** %f, align 8, !dbg !7358
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !7309, metadata !DIExpression()), !dbg !7323
  %cmp11 = icmp eq %struct.edge_def* %23, %e, !dbg !7361
  br i1 %cmp11, label %for.inc, label %if.end13, !dbg !7362

if.end13:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !7309, metadata !DIExpression()), !dbg !7323
  %src14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 0, !dbg !7363
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %src14, align 8, !dbg !7363
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7365
  %call16 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %24, %struct.basic_block_def* %25) #6, !dbg !7366
  %tobool17 = icmp eq i8 %call16, 0, !dbg !7366
  br i1 %tobool17, label %for.end, label %for.inc, !dbg !7367

for.inc:                                          ; preds = %if.end13, %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7357
  br label %for.cond, !dbg !7357, !llvm.loop !7368

for.end:                                          ; preds = %if.end13, %for.cond
  %none_removed.0 = phi i1 [ false, %for.cond ], [ true, %if.end13 ]
  %call20 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7370
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call20, metadata !7307, metadata !DIExpression()), !dbg !7323
  %call21 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7371
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call21, metadata !7308, metadata !DIExpression()), !dbg !7323
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7372
  br i1 %none_removed.0, label %if.then23, label %if.else, !dbg !7374

if.then23:                                        ; preds = %for.end
  %call25 = call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* %26) #6, !dbg !7375
  %index26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call25, i64 0, i32 9, !dbg !7376
  %27 = load i32, i32* %index26, align 8, !dbg !7376
  %call27 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call21, i32 %27) #6, !dbg !7377
  br label %if.end91, !dbg !7377

if.else:                                          ; preds = %for.end
  %call29 = call %struct.VEC_basic_block_heap* @get_all_dominated_blocks(i32 1, %struct.basic_block_def* %26) #6, !dbg !7378
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call29, metadata !7305, metadata !DIExpression()), !dbg !7323
  store %struct.VEC_basic_block_heap* %call29, %struct.VEC_basic_block_heap** %bbs_to_remove, align 8, !dbg !7380
  call void @llvm.dbg.value(metadata i32 0, metadata !7312, metadata !DIExpression()), !dbg !7323
  %28 = bitcast %struct.edge_iterator* %tmp35 to i8*, !dbg !7381
  %29 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp35, i64 0, i32 0, !dbg !7381
  %30 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp35, i64 0, i32 1, !dbg !7381
  br label %for.cond30, !dbg !7386

for.cond30:                                       ; preds = %for.inc53, %if.else
  %31 = phi %struct.VEC_basic_block_heap* [ %call29, %if.else ], [ %.pre, %for.inc53 ], !dbg !7387
  %storemerge = phi i32 [ 0, %if.else ], [ %inc, %for.inc53 ], !dbg !7388
  store i32 %storemerge, i32* %i, align 4, !dbg !7388
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %31, metadata !7305, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %31, metadata !7305, metadata !DIExpression()), !dbg !7323
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %31, i64 0, i32 0, !dbg !7387
  call void @llvm.dbg.value(metadata i32 %storemerge, metadata !7312, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !7313, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call32 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base, i32 %storemerge, %struct.basic_block_def** nonnull %bb) #7, !dbg !7387
  %tobool33 = icmp eq i32 %call32, 0, !dbg !7389
  br i1 %tobool33, label %for.end54, label %for.body34, !dbg !7389

for.body34:                                       ; preds = %for.cond30
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8, !dbg !7390
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7390
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %32, metadata !7313, metadata !DIExpression()), !dbg !7323
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i64 0, i32 1, !dbg !7390
  %call36 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7390
  %33 = extractvalue { i32, %struct.VEC_edge_gc** } %call36, 0, !dbg !7390
  store i32 %33, i32* %29, align 8, !dbg !7390
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call36, 1, !dbg !7390
  store %struct.VEC_edge_gc** %34, %struct.VEC_edge_gc*** %30, align 8, !dbg !7390
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %28, i64 16, i1 false), !dbg !7390
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8, !dbg !7390
  br label %for.cond37, !dbg !7390

for.cond37:                                       ; preds = %for.inc51, %for.body34
  %35 = load i32, i32* %19, align 8, !dbg !7391
  %36 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !7391
  call void @llvm.dbg.value(metadata %struct.edge_def** %f, metadata !7309, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call38 = call fastcc zeroext i8 @ei_cond(i32 %35, %struct.VEC_edge_gc** %36, %struct.edge_def** nonnull %f) #7, !dbg !7391
  %tobool39 = icmp eq i8 %call38, 0, !dbg !7390
  br i1 %tobool39, label %for.inc53, label %for.body40, !dbg !7390

for.body40:                                       ; preds = %for.cond37
  %37 = load %struct.edge_def*, %struct.edge_def** %f, align 8, !dbg !7393
  call void @llvm.dbg.value(metadata %struct.edge_def* %37, metadata !7309, metadata !DIExpression()), !dbg !7323
  %dest41 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %37, i64 0, i32 1, !dbg !7396
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %dest41, align 8, !dbg !7396
  %39 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7397
  %cfg43 = getelementptr inbounds %struct.function, %struct.function* %39, i64 0, i32 1, !dbg !7397
  %40 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg43, align 8, !dbg !7397
  %x_exit_block_ptr44 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %40, i64 0, i32 1, !dbg !7397
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr44, align 8, !dbg !7397
  %cmp45 = icmp eq %struct.basic_block_def* %38, %41, !dbg !7398
  br i1 %cmp45, label %for.inc51, label %if.then46, !dbg !7399

if.then46:                                        ; preds = %for.body40
  call void @llvm.dbg.value(metadata %struct.edge_def* %37, metadata !7309, metadata !DIExpression()), !dbg !7323
  %index48 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i64 0, i32 9, !dbg !7400
  %42 = load i32, i32* %index48, align 8, !dbg !7400
  %call49 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call20, i32 %42) #6, !dbg !7401
  br label %for.inc51, !dbg !7401

for.inc51:                                        ; preds = %for.body40, %if.then46
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7310, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7391
  br label %for.cond37, !dbg !7391, !llvm.loop !7402

for.inc53:                                        ; preds = %for.cond37
  %43 = load i32, i32* %i, align 4, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %43, metadata !7312, metadata !DIExpression()), !dbg !7323
  %inc = add i32 %43, 1, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7312, metadata !DIExpression()), !dbg !7323
  %.pre = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs_to_remove, align 8, !dbg !7387
  br label %for.cond30, !dbg !7405, !llvm.loop !7406

for.end54:                                        ; preds = %for.cond30
  call void @llvm.dbg.value(metadata i32 0, metadata !7312, metadata !DIExpression()), !dbg !7323
  br label %for.cond55, !dbg !7408

for.cond55:                                       ; preds = %for.body64, %for.end54
  %storemerge1 = phi i32 [ 0, %for.end54 ], [ %inc68, %for.body64 ], !dbg !7410
  store i32 %storemerge1, i32* %i, align 4, !dbg !7410
  %44 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs_to_remove, align 8, !dbg !7411
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %44, metadata !7305, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %44, metadata !7305, metadata !DIExpression()), !dbg !7323
  %base58 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %44, i64 0, i32 0, !dbg !7411
  call void @llvm.dbg.value(metadata i32 %storemerge1, metadata !7312, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !7313, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call62 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base58, i32 %storemerge1, %struct.basic_block_def** nonnull %bb) #7, !dbg !7411
  %tobool63 = icmp eq i32 %call62, 0, !dbg !7413
  br i1 %tobool63, label %for.end69, label %for.body64, !dbg !7413

for.body64:                                       ; preds = %for.cond55
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7414
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %45, metadata !7313, metadata !DIExpression()), !dbg !7323
  %index65 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i64 0, i32 9, !dbg !7415
  %46 = load i32, i32* %index65, align 8, !dbg !7415
  %call66 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %call20, i32 %46) #6, !dbg !7416
  %47 = load i32, i32* %i, align 4, !dbg !7417
  call void @llvm.dbg.value(metadata i32 %47, metadata !7312, metadata !DIExpression()), !dbg !7323
  %inc68 = add i32 %47, 1, !dbg !7417
  call void @llvm.dbg.value(metadata i32 %inc68, metadata !7312, metadata !DIExpression()), !dbg !7323
  br label %for.cond55, !dbg !7418, !llvm.loop !7419

for.end69:                                        ; preds = %for.cond55
  call void @llvm.dbg.value(metadata i32* %i, metadata !7312, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7315, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call20, i32 0, i32* nonnull %i) #7, !dbg !7421
  br label %for.cond70, !dbg !7421

for.cond70:                                       ; preds = %cond.end83, %for.end69
  call void @llvm.dbg.value(metadata i32* %i, metadata !7312, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7315, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call71 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7423
  %tobool72 = icmp eq i8 %call71, 0, !dbg !7421
  br i1 %tobool72, label %if.end91.loopexit, label %for.body73, !dbg !7421

for.body73:                                       ; preds = %for.cond70
  %48 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7425
  %cfg75 = getelementptr inbounds %struct.function, %struct.function* %48, i64 0, i32 1, !dbg !7425
  %49 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg75, align 8, !dbg !7425
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %49, i64 0, i32 2, !dbg !7425
  %50 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7425
  %tobool76 = icmp eq %struct.VEC_basic_block_gc* %50, null, !dbg !7425
  br i1 %tobool76, label %cond.end83, label %cond.true77, !dbg !7425

cond.true77:                                      ; preds = %for.body73
  %base81 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %50, i64 0, i32 0, !dbg !7425
  br label %cond.end83, !dbg !7425

cond.end83:                                       ; preds = %for.body73, %cond.true77
  %cond84 = phi %struct.VEC_basic_block_base* [ %base81, %cond.true77 ], [ null, %for.body73 ], !dbg !7425
  %51 = load i32, i32* %i, align 4, !dbg !7425
  call void @llvm.dbg.value(metadata i32 %51, metadata !7312, metadata !DIExpression()), !dbg !7323
  %call85 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond84, i32 %51) #7, !dbg !7425
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call85, metadata !7313, metadata !DIExpression()), !dbg !7323
  store %struct.basic_block_def* %call85, %struct.basic_block_def** %bb, align 8, !dbg !7427
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call85, metadata !7313, metadata !DIExpression()), !dbg !7323
  %call86 = call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* %call85) #6, !dbg !7428
  %index87 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call86, i64 0, i32 9, !dbg !7429
  %52 = load i32, i32* %index87, align 8, !dbg !7429
  %call88 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call21, i32 %52) #6, !dbg !7430
  call void @llvm.dbg.value(metadata i32* %i, metadata !7312, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7315, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7423
  br label %for.cond70, !dbg !7423, !llvm.loop !7431

if.end91.loopexit:                                ; preds = %for.cond70
  br label %if.end91, !dbg !7433

if.end91:                                         ; preds = %if.end91.loopexit, %if.then23
  %53 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cfgcleanup_altered_bbs, align 8, !dbg !7433
  %tobool92 = icmp eq %struct.bitmap_head_def* %53, null, !dbg !7433
  br i1 %tobool92, label %if.end98, label %if.then93, !dbg !7435

if.then93:                                        ; preds = %if.end91
  %src94 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !7436
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %src94, align 8, !dbg !7436
  %index95 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %54, i64 0, i32 9, !dbg !7438
  %55 = load i32, i32* %index95, align 8, !dbg !7438
  %call96 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %53, i32 %55) #6, !dbg !7439
  %56 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cfgcleanup_altered_bbs, align 8, !dbg !7440
  %call97 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %56, %struct.bitmap_head_def* %call20) #6, !dbg !7441
  br label %if.end98, !dbg !7442

if.end98:                                         ; preds = %if.end91, %if.then93
  br i1 %none_removed.0, label %if.then100, label %if.else101, !dbg !7443

if.then100:                                       ; preds = %if.end98
  call void @remove_edge(%struct.edge_def* %e) #6, !dbg !7444
  br label %if.end120, !dbg !7444

if.else101:                                       ; preds = %if.end98
  %57 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs_to_remove, align 8, !dbg !7446
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %57, metadata !7305, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %57, metadata !7305, metadata !DIExpression()), !dbg !7323
  %base104 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %57, i64 0, i32 0, !dbg !7446
  %call108 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base104) #7, !dbg !7446
  call void @llvm.dbg.value(metadata i32 %call108, metadata !7312, metadata !DIExpression()), !dbg !7323
  store i32 %call108, i32* %i, align 4, !dbg !7449
  br label %for.cond109, !dbg !7450

for.cond109:                                      ; preds = %for.body111, %if.else101
  %58 = phi i32 [ %.pre2, %for.body111 ], [ %call108, %if.else101 ], !dbg !7451
  call void @llvm.dbg.value(metadata i32 %58, metadata !7312, metadata !DIExpression()), !dbg !7323
  %dec = add i32 %58, -1, !dbg !7451
  call void @llvm.dbg.value(metadata i32 %dec, metadata !7312, metadata !DIExpression()), !dbg !7323
  store i32 %dec, i32* %i, align 4, !dbg !7451
  %cmp110 = icmp eq i32 %58, 0, !dbg !7453
  br i1 %cmp110, label %if.end120.loopexit, label %for.body111, !dbg !7454

for.body111:                                      ; preds = %for.cond109
  %59 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs_to_remove, align 8, !dbg !7455
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %59, metadata !7305, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %59, metadata !7305, metadata !DIExpression()), !dbg !7323
  %base114 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %59, i64 0, i32 0, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %dec, metadata !7312, metadata !DIExpression()), !dbg !7323
  %call118 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %base114, i32 %dec) #7, !dbg !7455
  call void @delete_basic_block(%struct.basic_block_def* %call118) #6, !dbg !7456
  %.pre2 = load i32, i32* %i, align 4, !dbg !7451
  br label %for.cond109, !dbg !7457, !llvm.loop !7458

if.end120.loopexit:                               ; preds = %for.cond109
  br label %if.end120, !dbg !7460

if.end120:                                        ; preds = %if.end120.loopexit, %if.then100
  call void @llvm.dbg.value(metadata i32* %i, metadata !7312, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7315, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call21, i32 0, i32* nonnull %i) #7, !dbg !7460
  br label %for.cond121, !dbg !7460

for.cond121:                                      ; preds = %for.inc146, %if.end120
  call void @llvm.dbg.value(metadata i32* %i, metadata !7312, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7315, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call122 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7462
  %tobool123 = icmp eq i8 %call122, 0, !dbg !7460
  br i1 %tobool123, label %for.end147, label %for.body124, !dbg !7460

for.body124:                                      ; preds = %for.cond121
  %60 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7464
  %cfg126 = getelementptr inbounds %struct.function, %struct.function* %60, i64 0, i32 1, !dbg !7464
  %61 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg126, align 8, !dbg !7464
  %x_basic_block_info127 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %61, i64 0, i32 2, !dbg !7464
  %62 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info127, align 8, !dbg !7464
  %tobool128 = icmp eq %struct.VEC_basic_block_gc* %62, null, !dbg !7464
  br i1 %tobool128, label %cond.end135, label %cond.true129, !dbg !7464

cond.true129:                                     ; preds = %for.body124
  %base133 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %62, i64 0, i32 0, !dbg !7464
  br label %cond.end135, !dbg !7464

cond.end135:                                      ; preds = %for.body124, %cond.true129
  %cond136 = phi %struct.VEC_basic_block_base* [ %base133, %cond.true129 ], [ null, %for.body124 ], !dbg !7464
  %63 = load i32, i32* %i, align 4, !dbg !7464
  call void @llvm.dbg.value(metadata i32 %63, metadata !7312, metadata !DIExpression()), !dbg !7323
  %call137 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond136, i32 %63) #7, !dbg !7464
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call137, metadata !7313, metadata !DIExpression()), !dbg !7323
  store %struct.basic_block_def* %call137, %struct.basic_block_def** %bb, align 8, !dbg !7466
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call137, metadata !7313, metadata !DIExpression()), !dbg !7323
  %call138 = call %struct.basic_block_def* @first_dom_son(i32 1, %struct.basic_block_def* %call137) #6, !dbg !7467
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call138, metadata !7314, metadata !DIExpression()), !dbg !7323
  br label %for.cond139, !dbg !7469

for.cond139:                                      ; preds = %for.body141, %cond.end135
  %dbb.0 = phi %struct.basic_block_def* [ %call138, %cond.end135 ], [ %call144, %for.body141 ], !dbg !7470
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dbb.0, metadata !7314, metadata !DIExpression()), !dbg !7323
  %tobool140 = icmp eq %struct.basic_block_def* %dbb.0, null, !dbg !7471
  br i1 %tobool140, label %for.inc146, label %for.body141, !dbg !7471

for.body141:                                      ; preds = %for.cond139
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs_to_fix_dom, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  %call142 = call fastcc %struct.basic_block_def** @VEC_basic_block_heap_safe_push(%struct.VEC_basic_block_heap** nonnull %bbs_to_fix_dom, %struct.basic_block_def* nonnull %dbb.0) #7, !dbg !7472
  %call144 = call %struct.basic_block_def* @next_dom_son(i32 1, %struct.basic_block_def* nonnull %dbb.0) #6, !dbg !7474
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call144, metadata !7314, metadata !DIExpression()), !dbg !7323
  br label %for.cond139, !dbg !7475, !llvm.loop !7476

for.inc146:                                       ; preds = %for.cond139
  call void @llvm.dbg.value(metadata i32* %i, metadata !7312, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7315, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7462
  br label %for.cond121, !dbg !7462, !llvm.loop !7478

for.end147:                                       ; preds = %for.cond121
  %64 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %bbs_to_fix_dom, align 8, !dbg !7480
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %64, metadata !7306, metadata !DIExpression()), !dbg !7323
  call void @iterate_fix_dominators(i32 1, %struct.VEC_basic_block_heap* %64, i8 zeroext 1) #6, !dbg !7481
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call20) #6, !dbg !7482
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !7307, metadata !DIExpression()), !dbg !7323
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call21) #6, !dbg !7483
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !7308, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs_to_remove, metadata !7305, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %bbs_to_remove) #7, !dbg !7484
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs_to_fix_dom, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7323
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %bbs_to_fix_dom) #7, !dbg !7485
  br label %cleanup, !dbg !7486

cleanup:                                          ; preds = %for.end147, %if.end5, %if.then
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8, !dbg !7486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !7486
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !7486
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !7486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7486
  ret void, !dbg !7486
}

declare dso_local zeroext i8 @dom_info_available_p(i32) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local %struct.VEC_basic_block_heap* @get_all_dominated_blocks(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !7487 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7495, metadata !DIExpression()), !dbg !7499
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !7496, metadata !DIExpression()), !dbg !7499
  call void @llvm.dbg.value(metadata i32 0, metadata !7497, metadata !DIExpression()), !dbg !7499
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !7498, metadata !DIExpression()), !dbg !7499
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !7500
  %1 = load i64, i64* %0, align 8, !dbg !7500
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !7501
  store i64 %1, i64* %2, align 8, !dbg !7501
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !7502
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !7503
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !7504
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !7507
  br label %while.body, !dbg !7507

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !7508
  br i1 %tobool, label %if.then, label %if.end, !dbg !7509

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !7510
  br label %while.end, !dbg !7512

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !7513

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !7507, !llvm.loop !7514

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !7516

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !7516
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !7518
  %7 = load i32, i32* %indx9, align 8, !dbg !7518
  %cmp11 = icmp eq i32 %7, 0, !dbg !7519
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !7520

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !7521
  %8 = load i32, i32* %indx14, align 8, !dbg !7521
  %mul = shl i32 %8, 7, !dbg !7522
  call void @llvm.dbg.value(metadata i32 %mul, metadata !7497, metadata !DIExpression()), !dbg !7499
  br label %if.end15, !dbg !7523

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !7497, metadata !DIExpression()), !dbg !7499
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !7524
  store i32 0, i32* %word_no, align 8, !dbg !7525
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !7526
  %9 = load i64, i64* %arrayidx, align 8, !dbg !7526
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !7527
  store i64 %9, i64* %bits21, align 8, !dbg !7528
  %tobool23 = icmp eq i64 %9, 0, !dbg !7529
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !7529
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !7530
  call void @llvm.dbg.value(metadata i32 %add, metadata !7497, metadata !DIExpression()), !dbg !7499
  store i32 %add, i32* %bit_no, align 4, !dbg !7531
  ret void, !dbg !7532
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !7533 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7537, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !7538, metadata !DIExpression()), !dbg !7542
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !7543
  %0 = load i64, i64* %bits, align 8, !dbg !7543
  %tobool = icmp eq i64 %0, 0, !dbg !7544
  br i1 %tobool, label %if.end, label %next_bit, !dbg !7545

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !7546
  br label %next_bit, !dbg !7549

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !7539), !dbg !7550
  br label %while.cond, !dbg !7549

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !7551
  %and = and i64 %2, 1, !dbg !7552
  %tobool2 = icmp eq i64 %and, 0, !dbg !7553
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !7549

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !7554
  store i64 %shr, i64* %bits, align 8, !dbg !7554
  %3 = load i32, i32* %bit_no, align 4, !dbg !7556
  %add = add i32 %3, 1, !dbg !7556
  store i32 %add, i32* %bit_no, align 4, !dbg !7556
  %.pre = load i64, i64* %bits, align 8, !dbg !7551
  br label %while.cond, !dbg !7549, !llvm.loop !7557

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !7559
  %sub = add i32 %4, 63, !dbg !7560
  %div = and i32 %sub, -64, !dbg !7561
  store i32 %div, i32* %bit_no, align 4, !dbg !7562
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !7563
  %5 = load i32, i32* %word_no, align 8, !dbg !7564
  %inc = add i32 %5, 1, !dbg !7564
  store i32 %inc, i32* %word_no, align 8, !dbg !7564
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !7565
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !7565
  br label %while.body6, !dbg !7566

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !7567

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !7568
  %cmp = icmp eq i32 %8, 2, !dbg !7569
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !7565
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !7567

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !7546
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !7546
  %10 = load i64, i64* %arrayidx, align 8, !dbg !7546
  store i64 %10, i64* %bits, align 8, !dbg !7570
  %tobool14 = icmp eq i64 %10, 0, !dbg !7571
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !7573

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !7574
  %add17 = add i32 %11, 64, !dbg !7574
  store i32 %add17, i32* %bit_no, align 4, !dbg !7574
  %12 = load i32, i32* %word_no, align 8, !dbg !7575
  %inc19 = add i32 %12, 1, !dbg !7575
  store i32 %inc19, i32* %word_no, align 8, !dbg !7575
  br label %while.cond7, !dbg !7567, !llvm.loop !7576

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !7565
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !7578
  %14 = load i64, i64* %13, align 8, !dbg !7578
  store i64 %14, i64* %6, align 8, !dbg !7579
  %tobool24 = icmp eq i64 %14, 0, !dbg !7580
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !7582

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !7582
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !7583
  %16 = load i32, i32* %indx, align 8, !dbg !7583
  %mul28 = shl i32 %16, 7, !dbg !7584
  store i32 %mul28, i32* %bit_no, align 4, !dbg !7585
  store i32 0, i32* %word_no, align 8, !dbg !7586
  br label %while.body6, !dbg !7566, !llvm.loop !7587

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !7589

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !7589

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !7542
  ret i8 %retval.0, !dbg !7589
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !7590 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7594, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !7595, metadata !DIExpression()), !dbg !7596
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !7597
  %0 = load i64, i64* %bits, align 8, !dbg !7598
  %shr = lshr i64 %0, 1, !dbg !7598
  store i64 %shr, i64* %bits, align 8, !dbg !7598
  %1 = load i32, i32* %bit_no, align 4, !dbg !7599
  %add = add i32 %1, 1, !dbg !7599
  store i32 %add, i32* %bit_no, align 4, !dbg !7599
  ret void, !dbg !7600
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @delete_basic_block(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @gimple_purge_all_dead_eh_edges(%struct.bitmap_head_def* %blocks) local_unnamed_addr #5 !dbg !7601 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %blocks, metadata !7605, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i8 0, metadata !7606, metadata !DIExpression()), !dbg !7613
  %0 = bitcast i32* %i to i8*, !dbg !7614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7614
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7615
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7615
  call void @llvm.dbg.value(metadata i32* %i, metadata !7607, metadata !DIExpression(DW_OP_deref)), !dbg !7613
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7608, metadata !DIExpression(DW_OP_deref)), !dbg !7613
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %blocks, i32 0, i32* nonnull %i) #7, !dbg !7616
  br label %for.cond, !dbg !7616

for.cond:                                         ; preds = %for.inc, %entry
  %changed.0 = phi i8 [ 0, %entry ], [ %changed.1, %for.inc ], !dbg !7613
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7606, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32* %i, metadata !7607, metadata !DIExpression(DW_OP_deref)), !dbg !7613
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7608, metadata !DIExpression(DW_OP_deref)), !dbg !7613
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7617
  %tobool = icmp eq i8 %call, 0, !dbg !7616
  br i1 %tobool, label %for.end, label %for.body, !dbg !7616

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7618
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !7618
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7618
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 2, !dbg !7618
  %4 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7618
  %tobool1 = icmp eq %struct.VEC_basic_block_gc* %4, null, !dbg !7618
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !7618

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %4, i64 0, i32 0, !dbg !7618
  br label %cond.end, !dbg !7618

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !7618
  %5 = load i32, i32* %i, align 4, !dbg !7618
  call void @llvm.dbg.value(metadata i32 %5, metadata !7607, metadata !DIExpression()), !dbg !7613
  %call5 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %5) #7, !dbg !7618
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call5, metadata !7609, metadata !DIExpression()), !dbg !7619
  %tobool6 = icmp ne %struct.basic_block_def* %call5, null, !dbg !7620
  %tobool7 = icmp ne i8 %changed.0, 0, !dbg !7620
  %or.cond = or i1 %tobool6, %tobool7, !dbg !7620
  br i1 %or.cond, label %cond.end10, label %cond.true8, !dbg !7620

cond.true8:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6844, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7620
  br label %cond.end10, !dbg !7620

cond.end10:                                       ; preds = %cond.end, %cond.true8
  %cmp = icmp eq %struct.basic_block_def* %call5, null, !dbg !7621
  br i1 %cmp, label %for.inc, label %if.then, !dbg !7623

if.then:                                          ; preds = %cond.end10
  %call13 = call zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def* nonnull %call5) #7, !dbg !7624
  %or1 = or i8 %changed.0, %call13, !dbg !7625
  call void @llvm.dbg.value(metadata i8 %or1, metadata !7606, metadata !DIExpression()), !dbg !7613
  br label %for.inc, !dbg !7626

for.inc:                                          ; preds = %cond.end10, %if.then
  %changed.1 = phi i8 [ %or1, %if.then ], [ %changed.0, %cond.end10 ], !dbg !7613
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !7606, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32* %i, metadata !7607, metadata !DIExpression(DW_OP_deref)), !dbg !7613
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7608, metadata !DIExpression(DW_OP_deref)), !dbg !7613
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7617
  br label %for.cond, !dbg !7617, !llvm.loop !7627

for.end:                                          ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !7613
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7606, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7606, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7606, metadata !DIExpression()), !dbg !7613
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7629
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7629
  ret i8 %changed.0.lcssa, !dbg !7630
}

; Function Attrs: nounwind uwtable
define internal i32 @gimple_verify_flow_info() #5 !dbg !7631 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp24 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp88 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp102 = alloca %struct.edge_iterator, align 8
  %tmp121 = alloca %struct.edge_iterator, align 8
  %true_edge = alloca %struct.edge_def*, align 8
  %false_edge = alloca %struct.edge_def*, align 8
  %tmp171 = alloca %struct.edge_iterator, align 8
  %e212 = alloca %struct.edge_def*, align 8
  %tmp271 = alloca %struct.edge_iterator, align 8
  %tmp318 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !7633, metadata !DIExpression()), !dbg !7675
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !7676
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7676
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !7677
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7677
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7678
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7678
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7679
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !7679
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7679
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !7679
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7679
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 7, i32 0, !dbg !7681
  %6 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !7681
  %tobool = icmp eq %struct.gimple_bb_info* %6, null, !dbg !7679
  br i1 %tobool, label %if.end, label %if.then, !dbg !7682

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.155, i64 0, i64 0)) #6, !dbg !7683
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7685
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !7687
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !7685
  br label %if.end, !dbg !7688

if.end:                                           ; preds = %entry, %if.then
  %7 = phi %struct.control_flow_graph* [ %.pre4, %if.then ], [ %4, %entry ], !dbg !7685
  %err.0 = phi i32 [ 1, %if.then ], [ 0, %entry ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.0, metadata !7633, metadata !DIExpression()), !dbg !7675
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 1, !dbg !7685
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7685
  %gimple4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 7, i32 0, !dbg !7689
  %9 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple4, align 8, !dbg !7689
  %tobool5 = icmp eq %struct.gimple_bb_info* %9, null, !dbg !7685
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !7690

if.then6:                                         ; preds = %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.156, i64 0, i64 0)) #6, !dbg !7691
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  %.pre5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7693
  %cfg9.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre5, i64 0, i32 1, !dbg !7695
  %.pre6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9.phi.trans.insert, align 8, !dbg !7693
  %x_exit_block_ptr10.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre6, i64 0, i32 1, !dbg !7695
  %.pre7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr10.phi.trans.insert, align 8, !dbg !7693
  br label %if.end7, !dbg !7696

if.end7:                                          ; preds = %if.end, %if.then6
  %10 = phi %struct.basic_block_def* [ %.pre7, %if.then6 ], [ %8, %if.end ], !dbg !7693
  %err.1 = phi i32 [ 1, %if.then6 ], [ %err.0, %if.end ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.1, metadata !7633, metadata !DIExpression()), !dbg !7675
  %11 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7693
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8, !dbg !7693
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 0, !dbg !7693
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !7693
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7693
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7693
  store i32 %13, i32* %12, align 8, !dbg !7693
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7693
  %15 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7693
  store %struct.VEC_edge_gc** %15, %struct.VEC_edge_gc*** %14, align 8, !dbg !7693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %11, i64 16, i1 false), !dbg !7693
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8, !dbg !7693
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7697
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7697
  br label %for.cond, !dbg !7693

for.cond:                                         ; preds = %for.inc, %if.end7
  %err.2 = phi i32 [ %err.1, %if.end7 ], [ %err.3, %for.inc ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.2, metadata !7633, metadata !DIExpression()), !dbg !7675
  %18 = load i32, i32* %16, align 8, !dbg !7699
  %19 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !7699
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7637, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call11 = call fastcc zeroext i8 @ei_cond(i32 %18, %struct.VEC_edge_gc** %19, %struct.edge_def** nonnull %e) #7, !dbg !7699
  %tobool12 = icmp eq i8 %call11, 0, !dbg !7693
  br i1 %tobool12, label %for.end, label %for.body, !dbg !7693

for.body:                                         ; preds = %for.cond
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7700
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !7637, metadata !DIExpression()), !dbg !7675
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 7, !dbg !7702
  %21 = load i32, i32* %flags, align 8, !dbg !7702
  %and = and i32 %21, 1, !dbg !7703
  %tobool13 = icmp eq i32 %and, 0, !dbg !7703
  br i1 %tobool13, label %for.inc, label %if.then14, !dbg !7704

if.then14:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !7637, metadata !DIExpression()), !dbg !7675
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 0, !dbg !7705
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7705
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 9, !dbg !7707
  %23 = load i32, i32* %index, align 8, !dbg !7707
  call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.157, i64 0, i64 0), i32 %23) #6, !dbg !7708
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.inc, !dbg !7709

for.inc:                                          ; preds = %for.body, %if.then14
  %err.3 = phi i32 [ 1, %if.then14 ], [ %err.2, %for.body ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.3, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7699
  br label %for.cond, !dbg !7699, !llvm.loop !7710

for.end:                                          ; preds = %for.cond
  %err.2.lcssa = phi i32 [ %err.2, %for.cond ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.2.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.2.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.2.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7712
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !7712
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !7712
  %x_entry_block_ptr18 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 0, !dbg !7712
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr18, align 8, !dbg !7712
  %27 = bitcast %struct.gimple_stmt_iterator* %tmp24 to i8*, !dbg !7713
  %28 = bitcast %struct.gimple_stmt_iterator* %tmp88 to i8*, !dbg !7714
  %29 = bitcast %struct.edge_iterator* %tmp102 to i8*, !dbg !7715
  %30 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp102, i64 0, i32 0, !dbg !7715
  %31 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp102, i64 0, i32 1, !dbg !7715
  %32 = bitcast %struct.edge_iterator* %tmp121 to i8*, !dbg !7719
  %33 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp121, i64 0, i32 0, !dbg !7719
  %34 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp121, i64 0, i32 1, !dbg !7719
  %35 = bitcast %struct.edge_def** %e212 to i8*, !dbg !7723
  %36 = bitcast %struct.edge_iterator* %tmp271 to i8*, !dbg !7724
  %37 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp271, i64 0, i32 0, !dbg !7724
  %38 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp271, i64 0, i32 1, !dbg !7724
  %39 = bitcast %struct.edge_iterator* %tmp318 to i8*, !dbg !7726
  %40 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp318, i64 0, i32 0, !dbg !7726
  %41 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp318, i64 0, i32 1, !dbg !7726
  %42 = bitcast %struct.edge_iterator* %tmp171 to i8*, !dbg !7728
  %43 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp171, i64 0, i32 0, !dbg !7728
  %44 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp171, i64 0, i32 1, !dbg !7728
  %45 = bitcast %struct.edge_def** %true_edge to i8*, !dbg !7732
  %46 = bitcast %struct.edge_def** %false_edge to i8*, !dbg !7732
  br label %for.cond19, !dbg !7712

for.cond19:                                       ; preds = %cleanup333, %for.end
  %47 = phi %struct.control_flow_graph* [ %25, %for.end ], [ %.pre9, %cleanup333 ], !dbg !7733
  %.pn = phi %struct.basic_block_def* [ %26, %for.end ], [ %bb.0, %cleanup333 ]
  %err.4 = phi i32 [ %err.2.lcssa, %for.end ], [ %err.36, %cleanup333 ], !dbg !7734
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !7735
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %err.4, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7634, metadata !DIExpression()), !dbg !7675
  %x_exit_block_ptr22 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %47, i64 0, i32 1, !dbg !7733
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr22, align 8, !dbg !7733
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %48, !dbg !7733
  br i1 %cmp, label %for.end338, label %for.body23, !dbg !7712

for.body23:                                       ; preds = %for.cond19
  call void @llvm.dbg.value(metadata i8 0, metadata !7639, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7636, metadata !DIExpression()), !dbg !7675
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8, !dbg !7736
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp24, %struct.basic_block_def* %bb.0) #7, !dbg !7736
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %27, i64 24, i1 false), !dbg !7736
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8, !dbg !7736
  %index38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !7737
  br label %for.cond25, !dbg !7740

for.cond25:                                       ; preds = %for.inc62, %for.body23
  %stmt.0 = phi %union.gimple_statement_d* [ null, %for.body23 ], [ %call29, %for.inc62 ], !dbg !7714
  %err.5 = phi i32 [ %err.4, %for.body23 ], [ %err.10, %for.inc62 ], !dbg !7734
  call void @llvm.dbg.value(metadata i32 %err.5, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !7636, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7635, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call26 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7741
  %tobool27 = icmp eq i8 %call26, 0, !dbg !7742
  br i1 %tobool27, label %for.body28, label %for.end63, !dbg !7743

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !7647, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7635, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call29 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7745
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call29, metadata !7636, metadata !DIExpression()), !dbg !7675
  %call30 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call29) #7, !dbg !7746
  %cmp31 = icmp eq i32 %call30, 4, !dbg !7748
  br i1 %cmp31, label %if.end33, label %cleanup, !dbg !7749

if.end33:                                         ; preds = %for.body28
  %call34 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call29) #7, !dbg !7750
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !7643, metadata !DIExpression()), !dbg !7744
  %tobool35 = icmp eq %union.gimple_statement_d* %stmt.0, null, !dbg !7751
  br i1 %tobool35, label %if.end40, label %land.lhs.true, !dbg !7752

land.lhs.true:                                    ; preds = %if.end33
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7753
  %49 = bitcast i40* %nonlocal_flag to i64*, !dbg !7753
  %bf.load = load i64, i64* %49, align 8, !dbg !7753
  %bf.cast3 = and i64 %bf.load, 256, !dbg !7753
  %tobool36 = icmp eq i64 %bf.cast3, 0, !dbg !7753
  br i1 %tobool36, label %if.end40, label %if.then37, !dbg !7754

if.then37:                                        ; preds = %land.lhs.true
  call void (i8*, ...) @error(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.158, i64 0, i64 0)) #6, !dbg !7755
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7756
  call void @print_generic_expr(%struct._IO_FILE* %50, %union.tree_node* %call34, i32 0) #6, !dbg !7757
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7758
  %52 = load i32, i32* %index38, align 8, !dbg !7759
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.159, i64 0, i64 0), i32 %52) #6, !dbg !7760
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %if.end40, !dbg !7761

if.end40:                                         ; preds = %land.lhs.true, %if.end33, %if.then37
  %err.6 = phi i32 [ 1, %if.then37 ], [ %err.5, %land.lhs.true ], [ %err.5, %if.end33 ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.6, metadata !7633, metadata !DIExpression()), !dbg !7675
  br i1 %tobool35, label %if.end47, label %land.lhs.true42, !dbg !7762

land.lhs.true42:                                  ; preds = %if.end40
  %label_decl = bitcast %union.tree_node* %call34 to %struct.tree_label_decl*, !dbg !7764
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl, i64 0, i32 2, !dbg !7764
  %53 = load i32, i32* %eh_landing_pad_nr, align 4, !dbg !7764
  %cmp43 = icmp eq i32 %53, 0, !dbg !7765
  br i1 %cmp43, label %if.end47, label %if.then44, !dbg !7766

if.then44:                                        ; preds = %land.lhs.true42
  call void (i8*, ...) @error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.160, i64 0, i64 0)) #6, !dbg !7767
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7769
  call void @print_generic_expr(%struct._IO_FILE* %54, %union.tree_node* %call34, i32 0) #6, !dbg !7770
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7771
  %56 = load i32, i32* %index38, align 8, !dbg !7772
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.159, i64 0, i64 0), i32 %56) #6, !dbg !7773
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %if.end47, !dbg !7774

if.end47:                                         ; preds = %land.lhs.true42, %if.end40, %if.then44
  %err.7 = phi i32 [ 1, %if.then44 ], [ %err.6, %land.lhs.true42 ], [ %err.6, %if.end40 ], !dbg !7744
  call void @llvm.dbg.value(metadata i32 %err.7, metadata !7633, metadata !DIExpression()), !dbg !7675
  %57 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7775
  %call49 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %57, %union.tree_node* %call34) #7, !dbg !7775
  %cmp50 = icmp eq %struct.basic_block_def* %call49, %bb.0, !dbg !7777
  br i1 %cmp50, label %if.end54, label %if.then51, !dbg !7778

if.then51:                                        ; preds = %if.end47
  call void (i8*, ...) @error(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.161, i64 0, i64 0)) #6, !dbg !7779
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7781
  call void @print_generic_expr(%struct._IO_FILE* %58, %union.tree_node* %call34, i32 0) #6, !dbg !7782
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7783
  %60 = load i32, i32* %index38, align 8, !dbg !7784
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.162, i64 0, i64 0), i32 %60) #6, !dbg !7785
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %if.end54, !dbg !7786

if.end54:                                         ; preds = %if.end47, %if.then51
  %err.8 = phi i32 [ 1, %if.then51 ], [ %err.7, %if.end47 ], !dbg !7744
  call void @llvm.dbg.value(metadata i32 %err.8, metadata !7633, metadata !DIExpression()), !dbg !7675
  %call55 = call %union.tree_node* @decl_function_context(%union.tree_node* %call34) #6, !dbg !7787
  %61 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7789
  %cmp56 = icmp eq %union.tree_node* %call55, %61, !dbg !7790
  br i1 %cmp56, label %cleanup, label %if.then57, !dbg !7791

if.then57:                                        ; preds = %if.end54
  call void (i8*, ...) @error(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.161, i64 0, i64 0)) #6, !dbg !7792
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7794
  call void @print_generic_expr(%struct._IO_FILE* %62, %union.tree_node* %call34, i32 0) #6, !dbg !7795
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7796
  %64 = load i32, i32* %index38, align 8, !dbg !7797
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.163, i64 0, i64 0), i32 %64) #6, !dbg !7798
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %cleanup, !dbg !7799

cleanup:                                          ; preds = %if.end54, %for.body28, %if.then57
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body28 ], [ true, %if.then57 ], [ true, %if.end54 ]
  %err.10 = phi i32 [ %err.5, %for.body28 ], [ 1, %if.then57 ], [ %err.8, %if.end54 ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.10, metadata !7633, metadata !DIExpression()), !dbg !7675
  br i1 %cleanup.dest.slot.0, label %for.inc62, label %for.end63

for.inc62:                                        ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7635, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !7800
  br label %for.cond25, !dbg !7801, !llvm.loop !7802

for.end63:                                        ; preds = %cleanup, %for.cond25
  %err.11 = phi i32 [ %err.10, %cleanup ], [ %err.5, %for.cond25 ], !dbg !7734
  call void @llvm.dbg.value(metadata i32 %err.11, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.cond64, !dbg !7804

for.cond64:                                       ; preds = %for.inc86, %for.end63
  %found_ctrl_stmt.0 = phi i8 [ 0, %for.end63 ], [ %spec.select, %for.inc86 ], !dbg !7714
  %err.12 = phi i32 [ %err.11, %for.end63 ], [ %err.14, %for.inc86 ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.12, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i8 %found_ctrl_stmt.0, metadata !7639, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7635, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call65 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7805
  %tobool66 = icmp eq i8 %call65, 0, !dbg !7806
  br i1 %tobool66, label %for.body68, label %for.end87, !dbg !7807

for.body68:                                       ; preds = %for.cond64
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7635, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call70 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call70, metadata !7648, metadata !DIExpression()), !dbg !7809
  %tobool71 = icmp eq i8 %found_ctrl_stmt.0, 0, !dbg !7810
  br i1 %tobool71, label %if.end74, label %if.then72, !dbg !7812

if.then72:                                        ; preds = %for.body68
  %65 = load i32, i32* %index38, align 8, !dbg !7813
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.164, i64 0, i64 0), i32 %65) #6, !dbg !7815
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %if.end74, !dbg !7816

if.end74:                                         ; preds = %for.body68, %if.then72
  %err.13 = phi i32 [ 1, %if.then72 ], [ %err.12, %for.body68 ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.13, metadata !7633, metadata !DIExpression()), !dbg !7675
  %call75 = call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %call70) #7, !dbg !7817
  %tobool76 = icmp eq i8 %call75, 0, !dbg !7817
  %spec.select = select i1 %tobool76, i8 %found_ctrl_stmt.0, i8 1, !dbg !7819
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !7639, metadata !DIExpression()), !dbg !7714
  %call79 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call70) #7, !dbg !7820
  %cmp80 = icmp eq i32 %call79, 4, !dbg !7822
  br i1 %cmp80, label %if.then81, label %for.inc86, !dbg !7823

if.then81:                                        ; preds = %if.end74
  call void (i8*, ...) @error(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.161, i64 0, i64 0)) #6, !dbg !7824
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7826
  %call82 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call70) #7, !dbg !7827
  call void @print_generic_expr(%struct._IO_FILE* %66, %union.tree_node* %call82, i32 0) #6, !dbg !7828
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7829
  %68 = load i32, i32* %index38, align 8, !dbg !7830
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.165, i64 0, i64 0), i32 %68) #6, !dbg !7831
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.inc86, !dbg !7832

for.inc86:                                        ; preds = %if.end74, %if.then81
  %err.14 = phi i32 [ 1, %if.then81 ], [ %err.13, %if.end74 ], !dbg !7809
  call void @llvm.dbg.value(metadata i32 %err.14, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7635, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !7833
  br label %for.cond64, !dbg !7834, !llvm.loop !7835

for.end87:                                        ; preds = %for.cond64
  %err.12.lcssa = phi i32 [ %err.12, %for.cond64 ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.12.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.12.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.12.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8, !dbg !7837
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp88, %struct.basic_block_def* %bb.0) #7, !dbg !7837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %28, i64 24, i1 false), !dbg !7837
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8, !dbg !7837
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7635, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call89 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7838
  %tobool90 = icmp eq i8 %call89, 0, !dbg !7838
  br i1 %tobool90, label %if.end92, label %cleanup333, !dbg !7840

if.end92:                                         ; preds = %for.end87
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7635, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call93 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7841
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call93, metadata !7636, metadata !DIExpression()), !dbg !7675
  %call94 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call93) #7, !dbg !7842
  %cmp95 = icmp eq i32 %call94, 4, !dbg !7844
  br i1 %cmp95, label %cleanup333, label %if.end97, !dbg !7845

if.end97:                                         ; preds = %if.end92
  %call98 = call zeroext i8 @verify_eh_edges(%union.gimple_statement_d* %call93) #6, !dbg !7846
  %conv = zext i8 %call98 to i32, !dbg !7846
  %or = or i32 %err.12.lcssa, %conv, !dbg !7847
  call void @llvm.dbg.value(metadata i32 %or, metadata !7633, metadata !DIExpression()), !dbg !7675
  %call99 = call zeroext i8 @is_ctrl_stmt(%union.gimple_statement_d* %call93) #7, !dbg !7848
  %tobool100 = icmp eq i8 %call99, 0, !dbg !7848
  br i1 %tobool100, label %if.end116, label %if.then101, !dbg !7849

if.then101:                                       ; preds = %if.end97
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8, !dbg !7850
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !7850
  %call103 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7850
  %69 = extractvalue { i32, %struct.VEC_edge_gc** } %call103, 0, !dbg !7850
  store i32 %69, i32* %30, align 8, !dbg !7850
  %70 = extractvalue { i32, %struct.VEC_edge_gc** } %call103, 1, !dbg !7850
  store %struct.VEC_edge_gc** %70, %struct.VEC_edge_gc*** %31, align 8, !dbg !7850
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %29, i64 16, i1 false), !dbg !7850
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8, !dbg !7850
  br label %for.cond104, !dbg !7850

for.cond104:                                      ; preds = %for.inc114, %if.then101
  %err.15 = phi i32 [ %or, %if.then101 ], [ %err.16, %for.inc114 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.15, metadata !7633, metadata !DIExpression()), !dbg !7675
  %71 = load i32, i32* %16, align 8, !dbg !7851
  %72 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !7851
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7637, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call105 = call fastcc zeroext i8 @ei_cond(i32 %71, %struct.VEC_edge_gc** %72, %struct.edge_def** nonnull %e) #7, !dbg !7851
  %tobool106 = icmp eq i8 %call105, 0, !dbg !7850
  br i1 %tobool106, label %if.end116.loopexit, label %for.body107, !dbg !7850

for.body107:                                      ; preds = %for.cond104
  %73 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7853
  call void @llvm.dbg.value(metadata %struct.edge_def* %73, metadata !7637, metadata !DIExpression()), !dbg !7675
  %flags108 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %73, i64 0, i32 7, !dbg !7855
  %74 = load i32, i32* %flags108, align 8, !dbg !7855
  %and109 = and i32 %74, 1, !dbg !7856
  %tobool110 = icmp eq i32 %and109, 0, !dbg !7856
  br i1 %tobool110, label %for.inc114, label %if.then111, !dbg !7857

if.then111:                                       ; preds = %for.body107
  %75 = load i32, i32* %index38, align 8, !dbg !7858
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.166, i64 0, i64 0), i32 %75) #6, !dbg !7860
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.inc114, !dbg !7861

for.inc114:                                       ; preds = %for.body107, %if.then111
  %err.16 = phi i32 [ 1, %if.then111 ], [ %err.15, %for.body107 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.16, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7851
  br label %for.cond104, !dbg !7851, !llvm.loop !7862

if.end116.loopexit:                               ; preds = %for.cond104
  %err.15.lcssa = phi i32 [ %err.15, %for.cond104 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.15.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.15.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.15.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %if.end116, !dbg !7864

if.end116:                                        ; preds = %if.end116.loopexit, %if.end97
  %err.17 = phi i32 [ %or, %if.end97 ], [ %err.15.lcssa, %if.end116.loopexit ], !dbg !7847
  call void @llvm.dbg.value(metadata i32 %err.17, metadata !7633, metadata !DIExpression()), !dbg !7675
  %call117 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call93) #7, !dbg !7864
  %cmp118 = icmp eq i32 %call117, 1, !dbg !7865
  br i1 %cmp118, label %if.end136, label %if.then120, !dbg !7866

if.then120:                                       ; preds = %if.end116
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8, !dbg !7867
  %succs122 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !7867
  %call123 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs122) #7, !dbg !7867
  %76 = extractvalue { i32, %struct.VEC_edge_gc** } %call123, 0, !dbg !7867
  store i32 %76, i32* %33, align 8, !dbg !7867
  %77 = extractvalue { i32, %struct.VEC_edge_gc** } %call123, 1, !dbg !7867
  store %struct.VEC_edge_gc** %77, %struct.VEC_edge_gc*** %34, align 8, !dbg !7867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %32, i64 16, i1 false), !dbg !7867
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8, !dbg !7867
  br label %for.cond124, !dbg !7867

for.cond124:                                      ; preds = %for.inc134, %if.then120
  %err.18 = phi i32 [ %err.17, %if.then120 ], [ %err.19, %for.inc134 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.18, metadata !7633, metadata !DIExpression()), !dbg !7675
  %78 = load i32, i32* %16, align 8, !dbg !7868
  %79 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !7868
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7637, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call125 = call fastcc zeroext i8 @ei_cond(i32 %78, %struct.VEC_edge_gc** %79, %struct.edge_def** nonnull %e) #7, !dbg !7868
  %tobool126 = icmp eq i8 %call125, 0, !dbg !7867
  br i1 %tobool126, label %if.end136.loopexit, label %for.body127, !dbg !7867

for.body127:                                      ; preds = %for.cond124
  %80 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7870
  call void @llvm.dbg.value(metadata %struct.edge_def* %80, metadata !7637, metadata !DIExpression()), !dbg !7675
  %flags128 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %80, i64 0, i32 7, !dbg !7872
  %81 = load i32, i32* %flags128, align 8, !dbg !7872
  %and129 = and i32 %81, 3072, !dbg !7873
  %tobool130 = icmp eq i32 %and129, 0, !dbg !7873
  br i1 %tobool130, label %for.inc134, label %if.then131, !dbg !7874

if.then131:                                       ; preds = %for.body127
  %82 = load i32, i32* %index38, align 8, !dbg !7875
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.167, i64 0, i64 0), i32 %82) #6, !dbg !7877
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.inc134, !dbg !7878

for.inc134:                                       ; preds = %for.body127, %if.then131
  %err.19 = phi i32 [ 1, %if.then131 ], [ %err.18, %for.body127 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.19, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7868
  br label %for.cond124, !dbg !7868, !llvm.loop !7879

if.end136.loopexit:                               ; preds = %for.cond124
  %err.18.lcssa = phi i32 [ %err.18, %for.cond124 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.18.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.18.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.18.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %if.end136, !dbg !7881

if.end136:                                        ; preds = %if.end136.loopexit, %if.end116
  %err.20 = phi i32 [ %err.17, %if.end116 ], [ %err.18.lcssa, %if.end136.loopexit ], !dbg !7847
  call void @llvm.dbg.value(metadata i32 %err.20, metadata !7633, metadata !DIExpression()), !dbg !7675
  %call137 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call93) #7, !dbg !7881
  %83 = add i32 %call137, -1, !dbg !7882
  %84 = lshr i32 %83, 1, !dbg !7882
  %85 = shl i32 %83, 31, !dbg !7882
  %86 = or i32 %84, %85, !dbg !7882
  switch i32 %86, label %cleanup333 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb166
    i32 4, label %sw.bb191
    i32 2, label %sw.bb211
    i32 7, label %sw.bb329
  ], !dbg !7882

sw.bb:                                            ; preds = %if.end136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8, !dbg !7883
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8, !dbg !7884
  call void @llvm.dbg.value(metadata %struct.edge_def** %true_edge, metadata !7652, metadata !DIExpression(DW_OP_deref)), !dbg !7732
  call void @llvm.dbg.value(metadata %struct.edge_def** %false_edge, metadata !7655, metadata !DIExpression(DW_OP_deref)), !dbg !7732
  call void @extract_true_false_edges_from_block(%struct.basic_block_def* %bb.0, %struct.edge_def** nonnull %true_edge, %struct.edge_def** nonnull %false_edge) #7, !dbg !7885
  %87 = load %struct.edge_def*, %struct.edge_def** %true_edge, align 8, !dbg !7886
  call void @llvm.dbg.value(metadata %struct.edge_def* %87, metadata !7652, metadata !DIExpression()), !dbg !7732
  %tobool138 = icmp ne %struct.edge_def* %87, null, !dbg !7886
  %88 = load %struct.edge_def*, %struct.edge_def** %false_edge, align 8, !dbg !7888
  call void @llvm.dbg.value(metadata %struct.edge_def* %88, metadata !7655, metadata !DIExpression()), !dbg !7732
  %tobool139 = icmp ne %struct.edge_def* %88, null, !dbg !7888
  %or.cond = and i1 %tobool138, %tobool139, !dbg !7889
  br i1 %or.cond, label %lor.lhs.false140, label %if.then163, !dbg !7889

lor.lhs.false140:                                 ; preds = %sw.bb
  call void @llvm.dbg.value(metadata %struct.edge_def* %87, metadata !7652, metadata !DIExpression()), !dbg !7732
  %flags141 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %87, i64 0, i32 7, !dbg !7890
  %89 = load i32, i32* %flags141, align 8, !dbg !7890
  %and142 = and i32 %89, 1024, !dbg !7891
  %tobool143 = icmp eq i32 %and142, 0, !dbg !7891
  br i1 %tobool143, label %if.then163, label %lor.lhs.false144, !dbg !7892

lor.lhs.false144:                                 ; preds = %lor.lhs.false140
  call void @llvm.dbg.value(metadata %struct.edge_def* %88, metadata !7655, metadata !DIExpression()), !dbg !7732
  %flags145 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %88, i64 0, i32 7, !dbg !7893
  %90 = load i32, i32* %flags145, align 8, !dbg !7893
  %and146 = and i32 %90, 2048, !dbg !7894
  %tobool147 = icmp eq i32 %and146, 0, !dbg !7894
  br i1 %tobool147, label %if.then163, label %lor.lhs.false148, !dbg !7895

lor.lhs.false148:                                 ; preds = %lor.lhs.false144
  call void @llvm.dbg.value(metadata %struct.edge_def* %87, metadata !7652, metadata !DIExpression()), !dbg !7732
  %and150 = and i32 %89, 3, !dbg !7896
  %tobool151 = icmp eq i32 %and150, 0, !dbg !7896
  br i1 %tobool151, label %lor.lhs.false152, label %if.then163, !dbg !7897

lor.lhs.false152:                                 ; preds = %lor.lhs.false148
  call void @llvm.dbg.value(metadata %struct.edge_def* %88, metadata !7655, metadata !DIExpression()), !dbg !7732
  %and154 = and i32 %90, 3, !dbg !7898
  %tobool155 = icmp eq i32 %and154, 0, !dbg !7898
  br i1 %tobool155, label %lor.lhs.false156, label %if.then163, !dbg !7899

lor.lhs.false156:                                 ; preds = %lor.lhs.false152
  %succs157 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !7900
  %91 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs157, align 8, !dbg !7900
  %tobool158 = icmp eq %struct.VEC_edge_gc* %91, null, !dbg !7900
  br i1 %tobool158, label %cond.end, label %cond.true, !dbg !7900

cond.true:                                        ; preds = %lor.lhs.false156
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %91, i64 0, i32 0, !dbg !7900
  br label %cond.end, !dbg !7900

cond.end:                                         ; preds = %lor.lhs.false156, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %lor.lhs.false156 ], !dbg !7900
  %call160 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7900
  %cmp161 = icmp ugt i32 %call160, 2, !dbg !7901
  br i1 %cmp161, label %if.then163, label %if.end165, !dbg !7902

if.then163:                                       ; preds = %lor.lhs.false152, %lor.lhs.false148, %lor.lhs.false144, %lor.lhs.false140, %cond.end, %sw.bb
  %92 = load i32, i32* %index38, align 8, !dbg !7903
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.168, i64 0, i64 0), i32 %92) #6, !dbg !7905
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %if.end165, !dbg !7906

if.end165:                                        ; preds = %if.then163, %cond.end
  %err.21 = phi i32 [ 1, %if.then163 ], [ %err.20, %cond.end ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.21, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8, !dbg !7907
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8, !dbg !7907
  br label %cleanup333, !dbg !7908

sw.bb166:                                         ; preds = %if.end136
  %call167 = call zeroext i8 @simple_goto_p(%union.gimple_statement_d* %call93) #7, !dbg !7909
  %tobool168 = icmp eq i8 %call167, 0, !dbg !7909
  br i1 %tobool168, label %if.else, label %if.then169, !dbg !7910

if.then169:                                       ; preds = %sw.bb166
  %93 = load i32, i32* %index38, align 8, !dbg !7911
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.169, i64 0, i64 0), i32 %93) #6, !dbg !7913
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %cleanup333, !dbg !7914

if.else:                                          ; preds = %sw.bb166
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8, !dbg !7915
  %succs172 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !7915
  %call173 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs172) #7, !dbg !7915
  %94 = extractvalue { i32, %struct.VEC_edge_gc** } %call173, 0, !dbg !7915
  store i32 %94, i32* %43, align 8, !dbg !7915
  %95 = extractvalue { i32, %struct.VEC_edge_gc** } %call173, 1, !dbg !7915
  store %struct.VEC_edge_gc** %95, %struct.VEC_edge_gc*** %44, align 8, !dbg !7915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %42, i64 16, i1 false), !dbg !7915
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8, !dbg !7915
  br label %for.cond174, !dbg !7915

for.cond174:                                      ; preds = %for.inc188, %if.else
  %err.22 = phi i32 [ %err.20, %if.else ], [ %err.23, %for.inc188 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.22, metadata !7633, metadata !DIExpression()), !dbg !7675
  %96 = load i32, i32* %16, align 8, !dbg !7916
  %97 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !7916
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7637, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  %call175 = call fastcc zeroext i8 @ei_cond(i32 %96, %struct.VEC_edge_gc** %97, %struct.edge_def** nonnull %e) #7, !dbg !7916
  %tobool176 = icmp eq i8 %call175, 0, !dbg !7915
  br i1 %tobool176, label %cleanup333.loopexit, label %for.body177, !dbg !7915

for.body177:                                      ; preds = %for.cond174
  %98 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7918
  call void @llvm.dbg.value(metadata %struct.edge_def* %98, metadata !7637, metadata !DIExpression()), !dbg !7675
  %flags178 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %98, i64 0, i32 7, !dbg !7920
  %99 = load i32, i32* %flags178, align 8, !dbg !7920
  %and179 = and i32 %99, 3073, !dbg !7921
  %tobool180 = icmp eq i32 %and179, 0, !dbg !7921
  br i1 %tobool180, label %lor.lhs.false181, label %if.then185, !dbg !7922

lor.lhs.false181:                                 ; preds = %for.body177
  call void @llvm.dbg.value(metadata %struct.edge_def* %98, metadata !7637, metadata !DIExpression()), !dbg !7675
  %and183 = and i32 %99, 2, !dbg !7923
  %tobool184 = icmp eq i32 %and183, 0, !dbg !7923
  br i1 %tobool184, label %if.then185, label %for.inc188, !dbg !7924

if.then185:                                       ; preds = %lor.lhs.false181, %for.body177
  %100 = load i32, i32* %index38, align 8, !dbg !7925
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.168, i64 0, i64 0), i32 %100) #6, !dbg !7927
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.inc188, !dbg !7928

for.inc188:                                       ; preds = %lor.lhs.false181, %if.then185
  %err.23 = phi i32 [ 1, %if.then185 ], [ %err.22, %lor.lhs.false181 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.23, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7916
  br label %for.cond174, !dbg !7916, !llvm.loop !7929

sw.bb191:                                         ; preds = %if.end136
  %call192 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb.0) #7, !dbg !7931
  %tobool193 = icmp eq i8 %call192, 0, !dbg !7931
  br i1 %tobool193, label %if.then199, label %lor.lhs.false194, !dbg !7933

lor.lhs.false194:                                 ; preds = %sw.bb191
  %call195 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb.0) #7, !dbg !7934
  %flags196 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call195, i64 0, i32 7, !dbg !7935
  %101 = load i32, i32* %flags196, align 8, !dbg !7935
  %and197 = and i32 %101, 3075, !dbg !7936
  %tobool198 = icmp eq i32 %and197, 0, !dbg !7936
  br i1 %tobool198, label %if.end201, label %if.then199, !dbg !7937

if.then199:                                       ; preds = %lor.lhs.false194, %sw.bb191
  %102 = load i32, i32* %index38, align 8, !dbg !7938
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.168, i64 0, i64 0), i32 %102) #6, !dbg !7940
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %if.end201, !dbg !7941

if.end201:                                        ; preds = %lor.lhs.false194, %if.then199
  %err.25 = phi i32 [ 1, %if.then199 ], [ %err.20, %lor.lhs.false194 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.25, metadata !7633, metadata !DIExpression()), !dbg !7675
  %call202 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb.0) #7, !dbg !7942
  %103 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7944
  %cfg204 = getelementptr inbounds %struct.function, %struct.function* %103, i64 0, i32 1, !dbg !7944
  %104 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg204, align 8, !dbg !7944
  %x_exit_block_ptr205 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %104, i64 0, i32 1, !dbg !7944
  %105 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr205, align 8, !dbg !7944
  %cmp206 = icmp eq %struct.basic_block_def* %call202, %105, !dbg !7945
  br i1 %cmp206, label %cleanup333, label %if.then208, !dbg !7946

if.then208:                                       ; preds = %if.end201
  %106 = load i32, i32* %index38, align 8, !dbg !7947
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.170, i64 0, i64 0), i32 %106) #6, !dbg !7949
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %cleanup333, !dbg !7950

sw.bb211:                                         ; preds = %if.end136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8, !dbg !7951
  %call213 = call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %call93) #7, !dbg !7952
  %conv214 = zext i32 %call213 to i64, !dbg !7952
  call void @llvm.dbg.value(metadata i64 %conv214, metadata !7660, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i64 0, metadata !7659, metadata !DIExpression()), !dbg !7723
  br label %for.cond215, !dbg !7953

for.cond215:                                      ; preds = %cond.end230, %sw.bb211
  %i.0 = phi i64 [ 0, %sw.bb211 ], [ %inc, %cond.end230 ], !dbg !7954
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !7659, metadata !DIExpression()), !dbg !7723
  %exitcond = icmp eq i64 %i.0, %conv214, !dbg !7955
  br i1 %exitcond, label %for.end234, label %for.body218, !dbg !7956

for.body218:                                      ; preds = %for.cond215
  %conv219 = trunc i64 %i.0 to i32, !dbg !7957
  %call220 = call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %call93, i32 %conv219) #7, !dbg !7957
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call220, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7957
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7957
  %107 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7957
  call void @llvm.dbg.value(metadata %union.tree_node* %107, metadata !7661, metadata !DIExpression()), !dbg !7958
  %108 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7959
  %call222 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %108, %union.tree_node* %107) #7, !dbg !7959
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call222, metadata !7665, metadata !DIExpression()), !dbg !7958
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call222, i64 0, i32 2, !dbg !7960
  %109 = load i8*, i8** %aux, align 8, !dbg !7960
  %tobool223 = icmp eq i8* %109, null, !dbg !7960
  br i1 %tobool223, label %cond.end230, label %lor.lhs.false224, !dbg !7960

lor.lhs.false224:                                 ; preds = %for.body218
  %cmp226 = icmp eq i8* %109, inttoptr (i64 1 to i8*), !dbg !7960
  br i1 %cmp226, label %cond.end230, label %cond.true228, !dbg !7960

cond.true228:                                     ; preds = %lor.lhs.false224
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7960
  br label %cond.end230, !dbg !7960

cond.end230:                                      ; preds = %for.body218, %lor.lhs.false224, %cond.true228
  store i8* inttoptr (i64 1 to i8*), i8** %aux, align 8, !dbg !7961
  %inc = add nuw nsw i64 %i.0, 1, !dbg !7962
  call void @llvm.dbg.value(metadata i64 %inc, metadata !7659, metadata !DIExpression()), !dbg !7723
  br label %for.cond215, !dbg !7963, !llvm.loop !7964

for.end234:                                       ; preds = %for.cond215
  %call235 = call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %call93, i32 0) #7, !dbg !7966
  call void @llvm.dbg.value(metadata %union.tree_node* %call235, metadata !7656, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i64 1, metadata !7659, metadata !DIExpression()), !dbg !7723
  br label %for.cond236, !dbg !7967

for.cond236:                                      ; preds = %cleanup265, %for.end234
  %prev.0 = phi %union.tree_node* [ %call235, %for.end234 ], [ %prev.1, %cleanup265 ], !dbg !7723
  %i.1 = phi i64 [ 1, %for.end234 ], [ %inc269, %cleanup265 ], !dbg !7968
  %err.27 = phi i32 [ %err.20, %for.end234 ], [ %err.29, %cleanup265 ], !dbg !7847
  call void @llvm.dbg.value(metadata i32 %err.27, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !7659, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0, metadata !7656, metadata !DIExpression()), !dbg !7723
  %cmp237 = icmp ult i64 %i.1, %conv214, !dbg !7969
  br i1 %cmp237, label %for.body239, label %for.end270, !dbg !7970

for.body239:                                      ; preds = %for.cond236
  %conv240 = trunc i64 %i.1 to i32, !dbg !7971
  %call241 = call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %call93, i32 %conv240) #7, !dbg !7972
  call void @llvm.dbg.value(metadata %union.tree_node* %call241, metadata !7666, metadata !DIExpression()), !dbg !7973
  %operands243 = getelementptr inbounds %union.tree_node, %union.tree_node* %call241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7974
  %110 = load %union.tree_node*, %union.tree_node** %operands243, align 8, !dbg !7974
  %tobool245 = icmp eq %union.tree_node* %110, null, !dbg !7974
  br i1 %tobool245, label %if.then246, label %if.end247, !dbg !7976

if.then246:                                       ; preds = %for.body239
  call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.171, i64 0, i64 0)) #6, !dbg !7977
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %cleanup265, !dbg !7979

if.end247:                                        ; preds = %for.body239
  %operands249 = getelementptr inbounds %union.tree_node, %union.tree_node* %prev.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7980
  %111 = load %union.tree_node*, %union.tree_node** %operands249, align 8, !dbg !7980
  %tobool251 = icmp eq %union.tree_node* %111, null, !dbg !7980
  br i1 %tobool251, label %cleanup265, label %land.lhs.true252, !dbg !7982

land.lhs.true252:                                 ; preds = %if.end247
  %call259 = call i32 @tree_int_cst_lt(%union.tree_node* nonnull %111, %union.tree_node* nonnull %110) #6, !dbg !7983
  %tobool260 = icmp eq i32 %call259, 0, !dbg !7983
  br i1 %tobool260, label %if.then261, label %cleanup265, !dbg !7984

if.then261:                                       ; preds = %land.lhs.true252
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.172, i64 0, i64 0)) #6, !dbg !7985
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7987
  call void @print_generic_expr(%struct._IO_FILE* %112, %union.tree_node* %prev.0, i32 0) #6, !dbg !7988
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7989
  %call262 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.173, i64 0, i64 0)) #6, !dbg !7990
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7991
  call void @print_generic_expr(%struct._IO_FILE* %114, %union.tree_node* %call241, i32 0) #6, !dbg !7992
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7993
  %call263 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.174, i64 0, i64 0)) #6, !dbg !7994
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %cleanup265, !dbg !7995

cleanup265:                                       ; preds = %land.lhs.true252, %if.end247, %if.then261, %if.then246
  %prev.1 = phi %union.tree_node* [ %prev.0, %if.then246 ], [ %call241, %if.then261 ], [ %call241, %land.lhs.true252 ], [ %call241, %if.end247 ], !dbg !7723
  %err.29 = phi i32 [ 1, %if.then246 ], [ 1, %if.then261 ], [ %err.27, %land.lhs.true252 ], [ %err.27, %if.end247 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.29, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.1, metadata !7656, metadata !DIExpression()), !dbg !7723
  %inc269 = add nuw nsw i64 %i.1, 1, !dbg !7996
  call void @llvm.dbg.value(metadata i64 %inc269, metadata !7659, metadata !DIExpression()), !dbg !7723
  br label %for.cond236, !dbg !7997, !llvm.loop !7998

for.end270:                                       ; preds = %for.cond236
  %err.27.lcssa = phi i32 [ %err.27, %for.cond236 ], !dbg !7847
  call void @llvm.dbg.value(metadata i32 %err.27.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.27.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.27.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8, !dbg !8000
  %succs272 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !8000
  %call273 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs272) #7, !dbg !8000
  %116 = extractvalue { i32, %struct.VEC_edge_gc** } %call273, 0, !dbg !8000
  store i32 %116, i32* %37, align 8, !dbg !8000
  %117 = extractvalue { i32, %struct.VEC_edge_gc** } %call273, 1, !dbg !8000
  store %struct.VEC_edge_gc** %117, %struct.VEC_edge_gc*** %38, align 8, !dbg !8000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %36, i64 16, i1 false), !dbg !8000
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8, !dbg !8000
  br label %for.cond274, !dbg !8000

for.cond274:                                      ; preds = %for.inc293, %for.end270
  %err.30 = phi i32 [ %err.27.lcssa, %for.end270 ], [ %err.32, %for.inc293 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.30, metadata !7633, metadata !DIExpression()), !dbg !7675
  %118 = load i32, i32* %16, align 8, !dbg !8001
  %119 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !8001
  call void @llvm.dbg.value(metadata %struct.edge_def** %e212, metadata !7658, metadata !DIExpression(DW_OP_deref)), !dbg !7723
  %call275 = call fastcc zeroext i8 @ei_cond(i32 %118, %struct.VEC_edge_gc** %119, %struct.edge_def** nonnull %e212) #7, !dbg !8001
  %tobool276 = icmp eq i8 %call275, 0, !dbg !8000
  br i1 %tobool276, label %for.cond295.preheader, label %for.body277, !dbg !8000

for.cond295.preheader:                            ; preds = %for.cond274
  %err.30.lcssa = phi i32 [ %err.30, %for.cond274 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.30.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.30.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.30.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.cond295, !dbg !8003

for.body277:                                      ; preds = %for.cond274
  %120 = load %struct.edge_def*, %struct.edge_def** %e212, align 8, !dbg !8004
  call void @llvm.dbg.value(metadata %struct.edge_def* %120, metadata !7658, metadata !DIExpression()), !dbg !7723
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %120, i64 0, i32 1, !dbg !8007
  %121 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8007
  %aux278 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %121, i64 0, i32 2, !dbg !8008
  %122 = load i8*, i8** %aux278, align 8, !dbg !8008
  %tobool279 = icmp eq i8* %122, null, !dbg !8004
  br i1 %tobool279, label %if.then280, label %if.end284, !dbg !8009

if.then280:                                       ; preds = %for.body277
  %123 = load i32, i32* %index38, align 8, !dbg !8010
  call void @llvm.dbg.value(metadata %struct.edge_def* %120, metadata !7658, metadata !DIExpression()), !dbg !7723
  %index283 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %121, i64 0, i32 9, !dbg !8012
  %124 = load i32, i32* %index283, align 8, !dbg !8012
  call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.175, i64 0, i64 0), i32 %123, i32 %124) #6, !dbg !8013
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  %.pre10 = load %struct.edge_def*, %struct.edge_def** %e212, align 8, !dbg !8014
  %dest285.phi.trans.insert = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.pre10, i64 0, i32 1, !dbg !8015
  %.pre11 = load %struct.basic_block_def*, %struct.basic_block_def** %dest285.phi.trans.insert, align 8, !dbg !8016
  br label %if.end284, !dbg !8017

if.end284:                                        ; preds = %for.body277, %if.then280
  %125 = phi %struct.basic_block_def* [ %121, %for.body277 ], [ %.pre11, %if.then280 ], !dbg !8016
  %126 = phi %struct.edge_def* [ %120, %for.body277 ], [ %.pre10, %if.then280 ], !dbg !8014
  %err.31 = phi i32 [ %err.30, %for.body277 ], [ 1, %if.then280 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.31, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.edge_def* %126, metadata !7658, metadata !DIExpression()), !dbg !7723
  %aux286 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %125, i64 0, i32 2, !dbg !8018
  store i8* inttoptr (i64 2 to i8*), i8** %aux286, align 8, !dbg !8019
  call void @llvm.dbg.value(metadata %struct.edge_def* %126, metadata !7658, metadata !DIExpression()), !dbg !7723
  %flags287 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %126, i64 0, i32 7, !dbg !8020
  %127 = load i32, i32* %flags287, align 8, !dbg !8020
  %and288 = and i32 %127, 3075, !dbg !8022
  %tobool289 = icmp eq i32 %and288, 0, !dbg !8022
  br i1 %tobool289, label %for.inc293, label %if.then290, !dbg !8023

if.then290:                                       ; preds = %if.end284
  %128 = load i32, i32* %index38, align 8, !dbg !8024
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.168, i64 0, i64 0), i32 %128) #6, !dbg !8026
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.inc293, !dbg !8027

for.inc293:                                       ; preds = %if.end284, %if.then290
  %err.32 = phi i32 [ 1, %if.then290 ], [ %err.31, %if.end284 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.32, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8001
  br label %for.cond274, !dbg !8001, !llvm.loop !8028

for.cond295:                                      ; preds = %for.cond295.preheader, %for.inc315
  %i.2 = phi i64 [ %inc316, %for.inc315 ], [ 0, %for.cond295.preheader ], !dbg !8030
  %err.33 = phi i32 [ %err.34, %for.inc315 ], [ %err.30.lcssa, %for.cond295.preheader ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.33, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !7659, metadata !DIExpression()), !dbg !7723
  %exitcond12 = icmp eq i64 %i.2, %conv214, !dbg !8031
  br i1 %exitcond12, label %for.end317, label %for.body298, !dbg !8003

for.body298:                                      ; preds = %for.cond295
  %conv300 = trunc i64 %i.2 to i32, !dbg !8032
  %call301 = call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %call93, i32 %conv300) #7, !dbg !8032
  %operands303 = getelementptr inbounds %union.tree_node, %union.tree_node* %call301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8032
  %arrayidx304 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands303, i64 2, !dbg !8032
  %129 = load %union.tree_node*, %union.tree_node** %arrayidx304, align 8, !dbg !8032
  call void @llvm.dbg.value(metadata %union.tree_node* %129, metadata !7670, metadata !DIExpression()), !dbg !8033
  %130 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8034
  %call307 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %130, %union.tree_node* %129) #7, !dbg !8034
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call307, metadata !7674, metadata !DIExpression()), !dbg !8033
  %aux308 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call307, i64 0, i32 2, !dbg !8035
  %131 = load i8*, i8** %aux308, align 8, !dbg !8035
  %cmp309 = icmp eq i8* %131, inttoptr (i64 2 to i8*), !dbg !8037
  br i1 %cmp309, label %for.inc315, label %if.then311, !dbg !8038

if.then311:                                       ; preds = %for.body298
  %132 = load i32, i32* %index38, align 8, !dbg !8039
  %index313 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call307, i64 0, i32 9, !dbg !8041
  %133 = load i32, i32* %index313, align 8, !dbg !8041
  call void (i8*, ...) @error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.176, i64 0, i64 0), i32 %132, i32 %133) #6, !dbg !8042
  call void @llvm.dbg.value(metadata i32 1, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %for.inc315, !dbg !8043

for.inc315:                                       ; preds = %for.body298, %if.then311
  %err.34 = phi i32 [ 1, %if.then311 ], [ %err.33, %for.body298 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.34, metadata !7633, metadata !DIExpression()), !dbg !7675
  %inc316 = add nuw nsw i64 %i.2, 1, !dbg !8044
  call void @llvm.dbg.value(metadata i64 %inc316, metadata !7659, metadata !DIExpression()), !dbg !7723
  br label %for.cond295, !dbg !8045, !llvm.loop !8046

for.end317:                                       ; preds = %for.cond295
  %err.33.lcssa = phi i32 [ %err.33, %for.cond295 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.33.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.33.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.33.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #8, !dbg !8048
  %call320 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs272) #7, !dbg !8048
  %134 = extractvalue { i32, %struct.VEC_edge_gc** } %call320, 0, !dbg !8048
  store i32 %134, i32* %40, align 8, !dbg !8048
  %135 = extractvalue { i32, %struct.VEC_edge_gc** } %call320, 1, !dbg !8048
  store %struct.VEC_edge_gc** %135, %struct.VEC_edge_gc*** %41, align 8, !dbg !8048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %39, i64 16, i1 false), !dbg !8048
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #8, !dbg !8048
  br label %for.cond321, !dbg !8048

for.cond321:                                      ; preds = %for.body324, %for.end317
  %136 = load i32, i32* %16, align 8, !dbg !8049
  %137 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !8049
  call void @llvm.dbg.value(metadata %struct.edge_def** %e212, metadata !7658, metadata !DIExpression(DW_OP_deref)), !dbg !7723
  %call322 = call fastcc zeroext i8 @ei_cond(i32 %136, %struct.VEC_edge_gc** %137, %struct.edge_def** nonnull %e212) #7, !dbg !8049
  %tobool323 = icmp eq i8 %call322, 0, !dbg !8048
  br i1 %tobool323, label %for.end328, label %for.body324, !dbg !8048

for.body324:                                      ; preds = %for.cond321
  %138 = load %struct.edge_def*, %struct.edge_def** %e212, align 8, !dbg !8051
  call void @llvm.dbg.value(metadata %struct.edge_def* %138, metadata !7658, metadata !DIExpression()), !dbg !7723
  %dest325 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %138, i64 0, i32 1, !dbg !8052
  %139 = load %struct.basic_block_def*, %struct.basic_block_def** %dest325, align 8, !dbg !8052
  %aux326 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %139, i64 0, i32 2, !dbg !8053
  store i8* null, i8** %aux326, align 8, !dbg !8054
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7675
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8049
  br label %for.cond321, !dbg !8049, !llvm.loop !8055

for.end328:                                       ; preds = %for.cond321
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8, !dbg !8057
  br label %cleanup333, !dbg !8058

sw.bb329:                                         ; preds = %if.end136
  %call330 = call zeroext i8 @verify_eh_dispatch_edge(%union.gimple_statement_d* %call93) #6, !dbg !8059
  %conv331 = zext i8 %call330 to i32, !dbg !8059
  %or332 = or i32 %err.20, %conv331, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %or332, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %cleanup333, !dbg !8061

cleanup333.loopexit:                              ; preds = %for.cond174
  %err.22.lcssa = phi i32 [ %err.22, %for.cond174 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %err.22.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.22.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.22.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  br label %cleanup333, !dbg !7733

cleanup333:                                       ; preds = %cleanup333.loopexit, %if.end201, %for.end87, %if.end165, %for.end328, %sw.bb329, %if.then169, %if.then208, %if.end136, %if.end92
  %err.36 = phi i32 [ %err.12.lcssa, %for.end87 ], [ %err.12.lcssa, %if.end92 ], [ %or332, %sw.bb329 ], [ %err.33.lcssa, %for.end328 ], [ %err.21, %if.end165 ], [ 1, %if.then169 ], [ 1, %if.then208 ], [ %err.25, %if.end201 ], [ %err.20, %if.end136 ], [ %err.22.lcssa, %cleanup333.loopexit ], !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.36, metadata !7633, metadata !DIExpression()), !dbg !7675
  %.pre8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7733
  %cfg21.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre8, i64 0, i32 1, !dbg !8062
  %.pre9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21.phi.trans.insert, align 8, !dbg !7733
  br label %for.cond19, !dbg !7733, !llvm.loop !8063

for.end338:                                       ; preds = %for.cond19
  %err.4.lcssa = phi i32 [ %err.4, %for.cond19 ], !dbg !7734
  call void @llvm.dbg.value(metadata i32 %err.4.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.4.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %err.4.lcssa, metadata !7633, metadata !DIExpression()), !dbg !7675
  %call339 = call i32 @dom_info_state(i32 1) #6, !dbg !8065
  %cmp340 = icmp eq i32 %call339, 0, !dbg !8067
  br i1 %cmp340, label %if.end343, label %if.then342, !dbg !8068

if.then342:                                       ; preds = %for.end338
  call void @verify_dominators(i32 1) #6, !dbg !8069
  br label %if.end343, !dbg !8069

if.end343:                                        ; preds = %for.end338, %if.then342
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8070
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8070
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8070
  ret i32 %err.4.lcssa, !dbg !8071
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @create_bb(i8* %h, i8* %e, %struct.basic_block_def* %after) #5 !dbg !8072 {
entry:
  call void @llvm.dbg.value(metadata i8* %h, metadata !8074, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata i8* %e, metadata !8075, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !8076, metadata !DIExpression()), !dbg !8081
  %tobool = icmp eq i8* %e, null, !dbg !8082
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8082

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8082
  br label %cond.end, !dbg !8082

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %struct.basic_block_def* @alloc_block() #6, !dbg !8083
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8077, metadata !DIExpression()), !dbg !8081
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8084
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !8084
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8084
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !8084
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !8084
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !8085
  store i32 %2, i32* %index, align 8, !dbg !8086
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 13, !dbg !8087
  store i32 1, i32* %flags, align 8, !dbg !8088
  %call1 = tail call i8* @ggc_alloc_cleared_stat(i64 16) #6, !dbg !8089
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, i32 0, !dbg !8090
  %3 = bitcast %struct.gimple_bb_info** %gimple to i8**, !dbg !8091
  store i8* %call1, i8** %3, align 8, !dbg !8091
  %tobool2 = icmp eq i8* %h, null, !dbg !8092
  br i1 %tobool2, label %cond.false4, label %cond.true3, !dbg !8092

cond.true3:                                       ; preds = %cond.end
  %4 = bitcast i8* %h to %struct.gimple_seq_d*, !dbg !8093
  br label %cond.end6, !dbg !8092

cond.false4:                                      ; preds = %cond.end
  %call5 = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !8094
  br label %cond.end6, !dbg !8092

cond.end6:                                        ; preds = %cond.false4, %cond.true3
  %cond7 = phi %struct.gimple_seq_d* [ %4, %cond.true3 ], [ %call5, %cond.false4 ], !dbg !8092
  tail call fastcc void @set_bb_seq(%struct.basic_block_def* %call, %struct.gimple_seq_d* %cond7) #7, !dbg !8095
  tail call void @link_block(%struct.basic_block_def* %call, %struct.basic_block_def* %after) #6, !dbg !8096
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8097
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !8097
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !8097
  %x_last_basic_block10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 5, !dbg !8097
  %7 = load i32, i32* %x_last_basic_block10, align 8, !dbg !8097
  %conv = sext i32 %7 to i64, !dbg !8098
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 2, !dbg !8099
  %8 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !8099
  %tobool13 = icmp eq %struct.VEC_basic_block_gc* %8, null, !dbg !8099
  br i1 %tobool13, label %cond.end19, label %cond.true14, !dbg !8099

cond.true14:                                      ; preds = %cond.end6
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %8, i64 0, i32 0, !dbg !8099
  br label %cond.end19, !dbg !8099

cond.end19:                                       ; preds = %cond.end6, %cond.true14
  %cond20 = phi %struct.VEC_basic_block_base* [ %base, %cond.true14 ], [ null, %cond.end6 ], !dbg !8099
  %call21 = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond20) #7, !dbg !8099
  %conv22 = zext i32 %call21 to i64, !dbg !8099
  %cmp = icmp eq i64 %conv, %conv22, !dbg !8100
  br i1 %cmp, label %if.then, label %if.end, !dbg !8101

if.then:                                          ; preds = %cond.end19
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8102
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !8102
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !8102
  %x_last_basic_block26 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 5, !dbg !8102
  %11 = load i32, i32* %x_last_basic_block26, align 8, !dbg !8102
  %add = add nsw i32 %11, 3, !dbg !8103
  %div = sdiv i32 %add, 4, !dbg !8104
  %add30 = add nsw i32 %11, %div, !dbg !8105
  %x_basic_block_info34 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 2, !dbg !8106
  tail call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_basic_block_info34, i32 %add30) #7, !dbg !8106
  br label %if.end, !dbg !8107

if.end:                                           ; preds = %if.then, %cond.end19
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8108
  %cfg37 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !8108
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg37, align 8, !dbg !8108
  %x_basic_block_info38 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 2, !dbg !8108
  %14 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info38, align 8, !dbg !8108
  %tobool39 = icmp eq %struct.VEC_basic_block_gc* %14, null, !dbg !8108
  br i1 %tobool39, label %cond.end46, label %cond.true40, !dbg !8108

cond.true40:                                      ; preds = %if.end
  %base44 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %14, i64 0, i32 0, !dbg !8108
  br label %cond.end46, !dbg !8108

cond.end46:                                       ; preds = %if.end, %cond.true40
  %cond47 = phi %struct.VEC_basic_block_base* [ %base44, %cond.true40 ], [ null, %if.end ], !dbg !8108
  %x_last_basic_block50 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 5, !dbg !8108
  %15 = load i32, i32* %x_last_basic_block50, align 8, !dbg !8108
  %call51 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond47, i32 %15, %struct.basic_block_def* %call) #7, !dbg !8108
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8109
  %cfg53 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 1, !dbg !8109
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg53, align 8, !dbg !8109
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i64 0, i32 3, !dbg !8109
  %18 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !8110
  %inc = add nsw i32 %18, 1, !dbg !8110
  store i32 %inc, i32* %x_n_basic_blocks, align 8, !dbg !8110
  %19 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg53, align 8, !dbg !8111
  %x_last_basic_block56 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %19, i64 0, i32 5, !dbg !8111
  %20 = load i32, i32* %x_last_basic_block56, align 8, !dbg !8112
  %inc57 = add nsw i32 %20, 1, !dbg !8112
  store i32 %inc57, i32* %x_last_basic_block56, align 8, !dbg !8112
  ret %struct.basic_block_def* %call, !dbg !8113
}

; Function Attrs: nounwind uwtable
define internal %struct.edge_def* @gimple_redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %dest) #5 !dbg !8114 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !8116, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest, metadata !8117, metadata !DIExpression()), !dbg !8149
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !8150
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8150
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !8118, metadata !DIExpression()), !dbg !8149
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8151
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8151
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !8152
  %2 = load i32, i32* %flags, align 8, !dbg !8152
  %and = and i32 %2, 2, !dbg !8154
  %tobool = icmp eq i32 %and, 0, !dbg !8154
  br i1 %tobool, label %if.end, label %cleanup, !dbg !8155

if.end:                                           ; preds = %entry
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !8156
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !8156
  %cmp = icmp eq %struct.basic_block_def* %3, %dest, !dbg !8158
  br i1 %cmp, label %cleanup, label %if.end3, !dbg !8159

if.end3:                                          ; preds = %if.end
  %and5 = and i32 %2, 8, !dbg !8160
  %tobool6 = icmp eq i32 %and5, 0, !dbg !8160
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !8162

if.then7:                                         ; preds = %if.end3
  %call = tail call %struct.edge_def* @redirect_eh_edge(%struct.edge_def* %e, %struct.basic_block_def* %dest) #6, !dbg !8163
  br label %cleanup, !dbg !8164

if.end8:                                          ; preds = %if.end3
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8165
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !8165
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8165
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !8165
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !8165
  %cmp10 = icmp eq %struct.basic_block_def* %0, %6, !dbg !8167
  br i1 %cmp10, label %if.end16, label %if.then11, !dbg !8168

if.then11:                                        ; preds = %if.end8
  %call12 = tail call fastcc %struct.edge_def* @gimple_try_redirect_by_replacing_jump(%struct.edge_def* %e, %struct.basic_block_def* %dest) #7, !dbg !8169
  call void @llvm.dbg.value(metadata %struct.edge_def* %call12, metadata !8120, metadata !DIExpression()), !dbg !8149
  %tobool13 = icmp eq %struct.edge_def* %call12, null, !dbg !8171
  br i1 %tobool13, label %if.end16, label %cleanup, !dbg !8173

if.end16:                                         ; preds = %if.then11, %if.end8
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8174
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !8174
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %0) #7, !dbg !8174
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !8174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !8174
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8119, metadata !DIExpression(DW_OP_deref)), !dbg !8149
  %call17 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8175
  %tobool18 = icmp eq i8 %call17, 0, !dbg !8175
  br i1 %tobool18, label %cond.false, label %cond.end, !dbg !8175

cond.false:                                       ; preds = %if.end16
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8119, metadata !DIExpression(DW_OP_deref)), !dbg !8149
  %call19 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8176
  br label %cond.end, !dbg !8175

cond.end:                                         ; preds = %if.end16, %cond.false
  %cond = phi %union.gimple_statement_d* [ %call19, %cond.false ], [ null, %if.end16 ], !dbg !8175
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %cond, metadata !8121, metadata !DIExpression()), !dbg !8149
  %tobool20 = icmp eq %union.gimple_statement_d* %cond, null, !dbg !8177
  br i1 %tobool20, label %cond.end24, label %cond.true21, !dbg !8177

cond.true21:                                      ; preds = %cond.end
  %call22 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %cond) #7, !dbg !8178
  br label %cond.end24, !dbg !8177

cond.end24:                                       ; preds = %cond.end, %cond.true21
  %cond25 = phi i32 [ %call22, %cond.true21 ], [ 0, %cond.end ], !dbg !8177
  switch i32 %cond25, label %sw.default [
    i32 1, label %sw.epilog
    i32 3, label %sw.bb
    i32 5, label %sw.bb26
    i32 7, label %sw.bb64
    i32 9, label %sw.bb98
    i32 28, label %sw.epilog
    i32 21, label %sw.epilog
    i32 31, label %sw.epilog
    i32 23, label %sw.epilog
    i32 15, label %sw.bb101
  ], !dbg !8179

sw.bb:                                            ; preds = %cond.end24
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4670, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8180
  br label %sw.bb26, !dbg !8180

sw.bb26:                                          ; preds = %cond.end24, %sw.bb
  %call27 = call %union.tree_node* @gimple_block_label(%struct.basic_block_def* %dest) #7, !dbg !8181
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !8122, metadata !DIExpression()), !dbg !8182
  %call28 = call fastcc %union.tree_node* @get_cases_for_edge(%struct.edge_def* %e, %union.gimple_statement_d* %cond) #7, !dbg !8183
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !8125, metadata !DIExpression()), !dbg !8182
  %tobool29 = icmp eq %union.tree_node* %call28, null, !dbg !8184
  br i1 %tobool29, label %if.else, label %if.then30, !dbg !8185

if.then30:                                        ; preds = %sw.bb26
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8186
  %call32 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %8, %struct.basic_block_def* %dest) #6, !dbg !8187
  call void @llvm.dbg.value(metadata %struct.edge_def* %call32, metadata !8126, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !8130, metadata !DIExpression()), !dbg !8188
  br label %while.cond, !dbg !8189

while.cond:                                       ; preds = %while.body, %if.then30
  %cases.0 = phi %union.tree_node* [ %call28, %if.then30 ], [ %9, %while.body ], !dbg !8182
  %last.0 = phi %union.tree_node* [ undef, %if.then30 ], [ %cases.0, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0, metadata !8129, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata %union.tree_node* %cases.0, metadata !8125, metadata !DIExpression()), !dbg !8182
  %tobool33 = icmp eq %union.tree_node* %cases.0, null, !dbg !8189
  br i1 %tobool33, label %while.end, label %while.body, !dbg !8189

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %cases.0, metadata !8129, metadata !DIExpression()), !dbg !8188
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %cases.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8190
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !8190
  store %union.tree_node* %call27, %union.tree_node** %arrayidx, align 8, !dbg !8192
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %cases.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8193
  %9 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8193
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !8125, metadata !DIExpression()), !dbg !8182
  br label %while.cond, !dbg !8189, !llvm.loop !8194

while.end:                                        ; preds = %while.cond
  %last.0.lcssa = phi %union.tree_node* [ %last.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !8129, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !8129, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !8129, metadata !DIExpression()), !dbg !8188
  %tobool34 = icmp eq %struct.edge_def* %call32, null, !dbg !8196
  br i1 %tobool34, label %sw.epilog, label %if.then35, !dbg !8197

if.then35:                                        ; preds = %while.end
  %call36 = call fastcc %union.tree_node* @get_cases_for_edge(%struct.edge_def* nonnull %call32, %union.gimple_statement_d* %cond) #7, !dbg !8198
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !8131, metadata !DIExpression()), !dbg !8199
  %chain38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8200
  %10 = bitcast %union.tree_node** %chain38 to i64*, !dbg !8200
  %11 = load i64, i64* %10, align 8, !dbg !8200
  %chain40 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8201
  %12 = bitcast %union.tree_node** %chain40 to i64*, !dbg !8202
  store i64 %11, i64* %12, align 8, !dbg !8202
  store %union.tree_node* %call28, %union.tree_node** %chain38, align 8, !dbg !8203
  br label %sw.epilog, !dbg !8204

if.else:                                          ; preds = %sw.bb26
  %call44 = call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %cond) #7, !dbg !8205
  %conv45 = zext i32 %call44 to i64, !dbg !8205
  call void @llvm.dbg.value(metadata i64 %conv45, metadata !8136, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i64 0, metadata !8134, metadata !DIExpression()), !dbg !8206
  br label %for.cond, !dbg !8207

for.cond:                                         ; preds = %for.inc, %if.else
  %i.0 = phi i64 [ 0, %if.else ], [ %inc, %for.inc ], !dbg !8208
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !8134, metadata !DIExpression()), !dbg !8206
  %exitcond = icmp eq i64 %i.0, %conv45, !dbg !8209
  br i1 %exitcond, label %sw.epilog.loopexit, label %for.body, !dbg !8210

for.body:                                         ; preds = %for.cond
  %conv48 = trunc i64 %i.0 to i32, !dbg !8211
  %call49 = call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %cond, i32 %conv48) #7, !dbg !8212
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !8137, metadata !DIExpression()), !dbg !8213
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8214
  %operands52 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8214
  %arrayidx53 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands52, i64 2, !dbg !8214
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8, !dbg !8214
  %call54 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %13, %union.tree_node* %14) #7, !dbg !8214
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !8216
  %cmp56 = icmp eq %struct.basic_block_def* %call54, %15, !dbg !8217
  br i1 %cmp56, label %if.then58, label %for.inc, !dbg !8218

if.then58:                                        ; preds = %for.body
  store %union.tree_node* %call27, %union.tree_node** %arrayidx53, align 8, !dbg !8219
  br label %for.inc, !dbg !8220

for.inc:                                          ; preds = %for.body, %if.then58
  %inc = add nuw nsw i64 %i.0, 1, !dbg !8221
  call void @llvm.dbg.value(metadata i64 %inc, metadata !8134, metadata !DIExpression()), !dbg !8206
  br label %for.cond, !dbg !8222, !llvm.loop !8223

sw.bb64:                                          ; preds = %cond.end24
  %call67 = call fastcc i32 @gimple_asm_nlabels(%union.gimple_statement_d* %cond) #7, !dbg !8225
  call void @llvm.dbg.value(metadata i32 %call67, metadata !8143, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8144, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 0, metadata !8141, metadata !DIExpression()), !dbg !8226
  br label %for.cond69, !dbg !8227

for.cond69:                                       ; preds = %for.inc87, %sw.bb64
  %i65.0 = phi i32 [ 0, %sw.bb64 ], [ %inc88, %for.inc87 ], !dbg !8228
  %label68.0 = phi %union.tree_node* [ null, %sw.bb64 ], [ %label68.2, %for.inc87 ], !dbg !8229
  call void @llvm.dbg.value(metadata %union.tree_node* %label68.0, metadata !8144, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %i65.0, metadata !8141, metadata !DIExpression()), !dbg !8226
  %cmp70 = icmp slt i32 %i65.0, %call67, !dbg !8230
  br i1 %cmp70, label %for.body72, label %for.end89, !dbg !8231

for.body72:                                       ; preds = %for.cond69
  %call73 = call fastcc %union.tree_node* @gimple_asm_label_op(%union.gimple_statement_d* %cond, i32 %i65.0) #7, !dbg !8232
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !8145, metadata !DIExpression()), !dbg !8233
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8234
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8234
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !8234
  %call75 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %16, %union.tree_node* %18) #7, !dbg !8234
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !8236
  %cmp77 = icmp eq %struct.basic_block_def* %call75, %19, !dbg !8237
  br i1 %cmp77, label %if.then79, label %for.inc87, !dbg !8238

if.then79:                                        ; preds = %for.body72
  %tobool80 = icmp eq %union.tree_node* %label68.0, null, !dbg !8239
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !8242

if.then81:                                        ; preds = %if.then79
  %call82 = call %union.tree_node* @gimple_block_label(%struct.basic_block_def* %dest) #7, !dbg !8243
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !8144, metadata !DIExpression()), !dbg !8226
  br label %if.end83, !dbg !8244

if.end83:                                         ; preds = %if.then79, %if.then81
  %label68.1 = phi %union.tree_node* [ %label68.0, %if.then79 ], [ %call82, %if.then81 ], !dbg !8226
  call void @llvm.dbg.value(metadata %union.tree_node* %label68.1, metadata !8144, metadata !DIExpression()), !dbg !8226
  store %union.tree_node* %label68.1, %union.tree_node** %17, align 8, !dbg !8245
  br label %for.inc87, !dbg !8246

for.inc87:                                        ; preds = %for.body72, %if.end83
  %label68.2 = phi %union.tree_node* [ %label68.1, %if.end83 ], [ %label68.0, %for.body72 ], !dbg !8229
  call void @llvm.dbg.value(metadata %union.tree_node* %label68.2, metadata !8144, metadata !DIExpression()), !dbg !8226
  %inc88 = add nuw nsw i32 %i65.0, 1, !dbg !8247
  call void @llvm.dbg.value(metadata i32 %inc88, metadata !8141, metadata !DIExpression()), !dbg !8226
  br label %for.cond69, !dbg !8248, !llvm.loop !8249

for.end89:                                        ; preds = %for.cond69
  %label68.0.lcssa = phi %union.tree_node* [ %label68.0, %for.cond69 ], !dbg !8229
  call void @llvm.dbg.value(metadata %union.tree_node* %label68.0.lcssa, metadata !8144, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata %union.tree_node* %label68.0.lcssa, metadata !8144, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata %union.tree_node* %label68.0.lcssa, metadata !8144, metadata !DIExpression()), !dbg !8226
  %tobool90 = icmp eq %union.tree_node* %label68.0.lcssa, null, !dbg !8251
  br i1 %tobool90, label %lor.lhs.false, label %sw.epilog, !dbg !8251

lor.lhs.false:                                    ; preds = %for.end89
  %20 = load i32, i32* %flags, align 8, !dbg !8251
  %and92 = and i32 %20, 1, !dbg !8251
  %tobool93 = icmp eq i32 %and92, 0, !dbg !8251
  br i1 %tobool93, label %cond.true94, label %sw.epilog, !dbg !8251

cond.true94:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4735, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8251
  br label %sw.epilog, !dbg !8251

sw.bb98:                                          ; preds = %cond.end24
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8119, metadata !DIExpression(DW_OP_deref)), !dbg !8149
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !8252
  %21 = load i32, i32* %flags, align 8, !dbg !8253
  %or = or i32 %21, 1, !dbg !8253
  store i32 %or, i32* %flags, align 8, !dbg !8253
  br label %sw.epilog, !dbg !8254

sw.bb101:                                         ; preds = %cond.end24
  %22 = load i32, i32* %flags, align 8, !dbg !8255
  %and103 = and i32 %22, 1, !dbg !8257
  %tobool104 = icmp eq i32 %and103, 0, !dbg !8257
  br i1 %tobool104, label %if.then105, label %sw.epilog, !dbg !8258

if.then105:                                       ; preds = %sw.bb101
  call void @redirect_eh_dispatch_edge(%union.gimple_statement_d* %cond, %struct.edge_def* %e, %struct.basic_block_def* %dest) #6, !dbg !8259
  br label %sw.epilog, !dbg !8259

sw.default:                                       ; preds = %cond.end24
  %23 = load i32, i32* %flags, align 8, !dbg !8260
  %and108 = and i32 %23, 1, !dbg !8260
  %tobool109 = icmp eq i32 %and108, 0, !dbg !8260
  br i1 %tobool109, label %cond.true110, label %sw.epilog, !dbg !8260

cond.true110:                                     ; preds = %sw.default
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4759, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8260
  br label %sw.epilog, !dbg !8260

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !8261

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %while.end, %lor.lhs.false, %for.end89, %sw.bb101, %cond.true110, %if.then105, %cond.end24, %cond.end24, %cond.end24, %cond.end24, %cond.true94, %if.then35, %sw.bb98, %cond.end24
  %call114 = call %struct.edge_def* @ssa_redirect_edge(%struct.edge_def* %e, %struct.basic_block_def* %dest) #6, !dbg !8261
  call void @llvm.dbg.value(metadata %struct.edge_def* %call114, metadata !8116, metadata !DIExpression()), !dbg !8149
  br label %cleanup, !dbg !8262

cleanup:                                          ; preds = %if.then11, %entry, %if.end, %sw.epilog, %if.then7
  %retval.0 = phi %struct.edge_def* [ %call, %if.then7 ], [ %call114, %sw.epilog ], [ null, %entry ], [ null, %if.end ], [ %call12, %if.then11 ], !dbg !8149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8263
  ret %struct.edge_def* %retval.0, !dbg !8263
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @gimple_redirect_edge_and_branch_force(%struct.edge_def* %e, %struct.basic_block_def* %dest) #5 !dbg !8264 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !8266, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest, metadata !8267, metadata !DIExpression()), !dbg !8268
  %call = tail call %struct.edge_def* @gimple_redirect_edge_and_branch(%struct.edge_def* %e, %struct.basic_block_def* %dest) #7, !dbg !8269
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !8266, metadata !DIExpression()), !dbg !8268
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !8270
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8270

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4789, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8270
  br label %cond.end, !dbg !8270

cond.end:                                         ; preds = %entry, %cond.true
  ret %struct.basic_block_def* null, !dbg !8271
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gimple_can_remove_branch_p(%struct.edge_def* %e) #5 !dbg !8272 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !8274, metadata !DIExpression()), !dbg !8275
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !8276
  %0 = load i32, i32* %flags, align 8, !dbg !8276
  %and = and i32 %0, 10, !dbg !8278
  %tobool = icmp eq i32 %and, 0, !dbg !8278
  %. = zext i1 %tobool to i8, !dbg !8275
  ret i8 %., !dbg !8279
}

; Function Attrs: nounwind uwtable
define internal void @remove_bb(%struct.basic_block_def* %bb) #5 !dbg !8280 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %new_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp48 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp58 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8282, metadata !DIExpression()), !dbg !8297
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !8298
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8298
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8299
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !8299
  br i1 %tobool, label %if.end4, label %if.then, !dbg !8301

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !8302
  %2 = load i32, i32* %index, align 8, !dbg !8302
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.177, i64 0, i64 0), i32 %2) #6, !dbg !8304
  %3 = load i32, i32* @dump_flags, align 4, !dbg !8305
  %and = and i32 %3, 8, !dbg !8307
  %tobool1 = icmp eq i32 %and, 0, !dbg !8307
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !8308

if.then2:                                         ; preds = %if.then
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8309
  tail call void @dump_bb(%struct.basic_block_def* %bb, %struct._IO_FILE* %4, i32 0) #6, !dbg !8311
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8312
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !8313
  br label %if.end4, !dbg !8314

if.end4:                                          ; preds = %if.then, %entry, %if.then2
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8315
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 4, !dbg !8315
  %7 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !8315
  %tobool5 = icmp eq %struct.loops* %7, null, !dbg !8315
  br i1 %tobool5, label %if.end10, label %if.then6, !dbg !8316

if.then6:                                         ; preds = %if.end4
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !8317
  %8 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !8317
  call void @llvm.dbg.value(metadata %struct.loop* %8, metadata !8284, metadata !DIExpression()), !dbg !8318
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %8, i64 0, i32 3, !dbg !8319
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !8319
  %cmp = icmp eq %struct.basic_block_def* %9, %bb, !dbg !8321
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !8322

lor.lhs.false:                                    ; preds = %if.then6
  %header = getelementptr inbounds %struct.loop, %struct.loop* %8, i64 0, i32 2, !dbg !8323
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !8323
  %cmp7 = icmp eq %struct.basic_block_def* %10, %bb, !dbg !8324
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !8325

if.then8:                                         ; preds = %lor.lhs.false, %if.then6
  tail call void @free_numbers_of_iterations_estimates_loop(%struct.loop* %8) #6, !dbg !8326
  br label %if.end10, !dbg !8326

if.end10:                                         ; preds = %if.end4, %lor.lhs.false, %if.then8
  %call11 = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !8327
  %cmp12 = icmp eq %struct.gimple_seq_d* %call11, null, !dbg !8328
  br i1 %cmp12, label %if.end61, label %if.then13, !dbg !8329

if.then13:                                        ; preds = %if.end10
  %11 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8330
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !8330
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !8330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !8330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !8330
  %12 = bitcast %struct.gimple_stmt_iterator* %new_gsi to i8*, !dbg !8331
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 5, !dbg !8331
  %13 = bitcast %struct.gimple_stmt_iterator* %tmp48 to i8*, !dbg !8331
  %14 = bitcast %struct.gimple_stmt_iterator* %tmp58 to i8*, !dbg !8332
  br label %for.cond, !dbg !8334

for.cond:                                         ; preds = %if.end60, %if.then13
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !8283, metadata !DIExpression(DW_OP_deref)), !dbg !8297
  %call14 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !8335
  %tobool15 = icmp eq i8 %call14, 0, !dbg !8336
  br i1 %tobool15, label %for.body, label %if.end61.loopexit, !dbg !8337

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !8283, metadata !DIExpression(DW_OP_deref)), !dbg !8297
  %call16 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !8338
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !8287, metadata !DIExpression()), !dbg !8339
  %call17 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call16) #7, !dbg !8340
  %cmp18 = icmp eq i32 %call17, 4, !dbg !8341
  br i1 %cmp18, label %land.lhs.true, label %if.else, !dbg !8342

land.lhs.true:                                    ; preds = %for.body
  %call19 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call16) #7, !dbg !8343
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8343
  %bf.load = load i64, i64* %15, align 8, !dbg !8343
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !8343
  %tobool20 = icmp eq i64 %bf.cast1, 0, !dbg !8343
  br i1 %tobool20, label %lor.lhs.false21, label %if.then28, !dbg !8344

lor.lhs.false21:                                  ; preds = %land.lhs.true
  %call22 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call16) #7, !dbg !8345
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8345
  %16 = bitcast i40* %nonlocal_flag to i64*, !dbg !8345
  %bf.load23 = load i64, i64* %16, align 8, !dbg !8345
  %bf.cast262 = and i64 %bf.load23, 256, !dbg !8345
  %tobool27 = icmp eq i64 %bf.cast262, 0, !dbg !8345
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !8346

if.then28:                                        ; preds = %lor.lhs.false21, %land.lhs.true
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !8347
  %call29 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call16) #7, !dbg !8348
  %nonlocal_flag31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8348
  %17 = bitcast i40* %nonlocal_flag31 to i64*, !dbg !8348
  %bf.load32 = load i64, i64* %17, align 8, !dbg !8348
  %bf.cast353 = and i64 %bf.load32, 256, !dbg !8348
  %tobool36 = icmp eq i64 %bf.cast353, 0, !dbg !8348
  br i1 %tobool36, label %if.end47, label %if.then37, !dbg !8350

if.then37:                                        ; preds = %if.then28
  %call38 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call16) #7, !dbg !8351
  %nonlocal_flag40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8351
  %18 = bitcast i40* %nonlocal_flag40 to i64*, !dbg !8351
  %bf.load41 = load i64, i64* %18, align 8, !dbg !8353
  %bf.clear42 = and i64 %bf.load41, -257, !dbg !8353
  store i64 %bf.clear42, i64* %18, align 8, !dbg !8353
  %call43 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call16) #7, !dbg !8354
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8354
  %bf.load45 = load i64, i64* %19, align 8, !dbg !8355
  %bf.set = or i64 %bf.load45, 65536, !dbg !8355
  store i64 %bf.set, i64* %19, align 8, !dbg !8355
  br label %if.end47, !dbg !8356

if.end47:                                         ; preds = %if.then28, %if.then37
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !8357
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %20, metadata !8293, metadata !DIExpression()), !dbg !8331
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !dbg !8358
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp48, %struct.basic_block_def* %20) #7, !dbg !8358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %13, i64 24, i1 false), !dbg !8358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !dbg !8358
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !8283, metadata !DIExpression(DW_OP_deref)), !dbg !8297
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %i, i8 zeroext 0) #6, !dbg !8359
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %new_gsi, metadata !8296, metadata !DIExpression(DW_OP_deref)), !dbg !8331
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %new_gsi, %union.gimple_statement_d* %call16, i32 0) #6, !dbg !8360
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !8361
  br label %if.end54, !dbg !8362

if.else:                                          ; preds = %lor.lhs.false21, %for.body
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8363
  %call50 = call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %21) #7, !dbg !8366
  %tobool51 = icmp eq i8 %call50, 0, !dbg !8366
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !8367

if.then52:                                        ; preds = %if.else
  call void @release_defs(%union.gimple_statement_d* %call16) #6, !dbg !8368
  br label %if.end53, !dbg !8368

if.end53:                                         ; preds = %if.else, %if.then52
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !8283, metadata !DIExpression(DW_OP_deref)), !dbg !8297
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %i, i8 zeroext 1) #6, !dbg !8369
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end47
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !8283, metadata !DIExpression(DW_OP_deref)), !dbg !8297
  %call55 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !8370
  %tobool56 = icmp eq i8 %call55, 0, !dbg !8370
  br i1 %tobool56, label %if.else59, label %if.then57, !dbg !8371

if.then57:                                        ; preds = %if.end54
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8, !dbg !8372
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp58, %struct.basic_block_def* %bb) #7, !dbg !8372
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !8372
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8, !dbg !8372
  br label %if.end60, !dbg !8373

if.else59:                                        ; preds = %if.end54
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !8283, metadata !DIExpression(DW_OP_deref)), !dbg !8297
  call fastcc void @gsi_prev(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !8374
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then57
  br label %for.cond, !dbg !8375, !llvm.loop !8376

if.end61.loopexit:                                ; preds = %for.cond
  br label %if.end61, !dbg !8378

if.end61:                                         ; preds = %if.end61.loopexit, %if.end10
  call fastcc void @remove_phi_nodes_and_edges_for_unreachable_block(%struct.basic_block_def* %bb) #7, !dbg !8378
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !8379
  store %struct.gimple_bb_info* null, %struct.gimple_bb_info** %gimple, align 8, !dbg !8380
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8381
  ret void, !dbg !8381
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @gimple_split_block(%struct.basic_block_def* %bb, i8* %stmt) #5 !dbg !8382 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gsi_tgt = alloca %struct.gimple_stmt_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp8 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp31 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8384, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i8* %stmt, metadata !8385, metadata !DIExpression()), !dbg !8393
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8394
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8394
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi_tgt to i8*, !dbg !8395
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8395
  %2 = bitcast %struct.edge_def** %e to i8*, !dbg !8396
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8396
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8397
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !8397
  %call = tail call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %bb) #6, !dbg !8398
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8390, metadata !DIExpression()), !dbg !8393
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !8399
  %4 = bitcast %struct.VEC_edge_gc** %succs to i64*, !dbg !8399
  %5 = load i64, i64* %4, align 8, !dbg !8399
  %succs1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 1, !dbg !8400
  %6 = bitcast %struct.VEC_edge_gc** %succs1 to i64*, !dbg !8401
  store i64 %5, i64* %6, align 8, !dbg !8401
  store %struct.VEC_edge_gc* null, %struct.VEC_edge_gc** %succs, align 8, !dbg !8402
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8403
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !8403
  %call4 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs1) #7, !dbg !8403
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !8403
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call4, 0, !dbg !8403
  store i32 %9, i32* %8, align 8, !dbg !8403
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !8403
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call4, 1, !dbg !8403
  store %struct.VEC_edge_gc** %11, %struct.VEC_edge_gc*** %10, align 8, !dbg !8403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %7, i64 16, i1 false), !dbg !8403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !8403
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8405
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8405
  br label %for.cond, !dbg !8403

for.cond:                                         ; preds = %for.body, %entry
  %14 = load i32, i32* %12, align 8, !dbg !8407
  %15 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %13, align 8, !dbg !8407
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8391, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call5 = call fastcc zeroext i8 @ei_cond(i32 %14, %struct.VEC_edge_gc** %15, %struct.edge_def** nonnull %e) #7, !dbg !8407
  %tobool = icmp eq i8 %call5, 0, !dbg !8403
  br i1 %tobool, label %for.end, label %for.body, !dbg !8403

for.body:                                         ; preds = %for.cond
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8408
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !8391, metadata !DIExpression()), !dbg !8393
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 0, !dbg !8409
  store %struct.basic_block_def* %call, %struct.basic_block_def** %src, align 8, !dbg !8410
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8392, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8407
  br label %for.cond, !dbg !8407, !llvm.loop !8411

for.end:                                          ; preds = %for.cond
  %tobool6 = icmp eq i8* %stmt, null, !dbg !8413
  br i1 %tobool6, label %if.end, label %land.lhs.true, !dbg !8415

land.lhs.true:                                    ; preds = %for.end
  %17 = bitcast i8* %stmt to %union.gimple_statement_d*, !dbg !8416
  %call7 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %17) #7, !dbg !8417
  %cmp = icmp eq i32 %call7, 4, !dbg !8418
  %spec.select = select i1 %cmp, i8* null, i8* %stmt, !dbg !8419
  br label %if.end, !dbg !8419

if.end:                                           ; preds = %for.end, %land.lhs.true
  %stmt.addr.0 = phi i8* [ null, %for.end ], [ %spec.select, %land.lhs.true ]
  call void @llvm.dbg.value(metadata i8* %stmt.addr.0, metadata !8385, metadata !DIExpression()), !dbg !8393
  %18 = bitcast %struct.gimple_stmt_iterator* %tmp8 to i8*, !dbg !8420
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8, !dbg !8420
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp8, %struct.basic_block_def* %bb) #7, !dbg !8420
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %18, i64 24, i1 false), !dbg !8420
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8, !dbg !8420
  %tobool18 = icmp eq i8* %stmt.addr.0, null, !dbg !8422
  br i1 %tobool18, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !8426

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond9, !dbg !8426

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond9.us, !dbg !8426

for.cond9.us:                                     ; preds = %for.inc24.us, %if.end.split.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call10.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8427
  %tobool11.us = icmp eq i8 %call10.us, 0, !dbg !8428
  br i1 %tobool11.us, label %for.body12.us, label %for.end25.loopexit.us-lcssa.us.loopexit, !dbg !8429

for.body12.us:                                    ; preds = %for.cond9.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call13.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8430
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13.us, metadata !8388, metadata !DIExpression()), !dbg !8393
  %call14.us = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call13.us) #7, !dbg !8431
  %cmp15.us = icmp eq i32 %call14.us, 4, !dbg !8433
  br i1 %cmp15.us, label %for.inc24.us, label %if.end17.us, !dbg !8434

if.end17.us:                                      ; preds = %for.body12.us
  br label %for.end25.loopexit.us-lcssa.us, !dbg !8435

for.inc24.us:                                     ; preds = %for.body12.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8436
  br label %for.cond9.us, !dbg !8437, !llvm.loop !8438

for.end25.loopexit.us-lcssa.us.loopexit:          ; preds = %for.cond9.us
  br label %for.end25.loopexit.us-lcssa.us, !dbg !8440

for.end25.loopexit.us-lcssa.us:                   ; preds = %for.end25.loopexit.us-lcssa.us.loopexit, %if.end17.us
  br label %for.end25.loopexit, !dbg !8440

for.cond9:                                        ; preds = %for.inc24, %if.end.if.end.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call10 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8427
  %tobool11 = icmp eq i8 %call10, 0, !dbg !8428
  br i1 %tobool11, label %for.body12, label %for.end25.loopexit.us-lcssa, !dbg !8429

for.body12:                                       ; preds = %for.cond9
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call13 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8430
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13, metadata !8388, metadata !DIExpression()), !dbg !8393
  %call14 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call13) #7, !dbg !8431
  %cmp15 = icmp eq i32 %call14, 4, !dbg !8433
  br i1 %cmp15, label %for.inc24, label %if.end17, !dbg !8434

if.end17:                                         ; preds = %for.body12
  %19 = bitcast %union.gimple_statement_d* %call13 to i8*, !dbg !8442
  %cmp21 = icmp eq i8* %stmt.addr.0, %19, !dbg !8444
  br i1 %cmp21, label %if.then22.us-lcssa, label %for.inc24, !dbg !8445

if.then22.us-lcssa:                               ; preds = %if.end17
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8446
  br label %for.end25, !dbg !8448

for.inc24:                                        ; preds = %if.end17, %for.body12
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8436
  br label %for.cond9, !dbg !8437, !llvm.loop !8438

for.end25.loopexit.us-lcssa:                      ; preds = %for.cond9
  br label %for.end25.loopexit, !dbg !8440

for.end25.loopexit:                               ; preds = %for.end25.loopexit.us-lcssa.us, %for.end25.loopexit.us-lcssa
  br label %for.end25, !dbg !8440

for.end25:                                        ; preds = %for.end25.loopexit, %if.then22.us-lcssa
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call26 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8440
  %tobool27 = icmp eq i8 %call26, 0, !dbg !8440
  br i1 %tobool27, label %if.end29, label %cleanup, !dbg !8449

if.end29:                                         ; preds = %for.end25
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8386, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call30 = call %struct.gimple_seq_d* @gsi_split_seq_before(%struct.gimple_stmt_iterator* nonnull %gsi) #6, !dbg !8450
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call30, metadata !8389, metadata !DIExpression()), !dbg !8393
  call fastcc void @set_bb_seq(%struct.basic_block_def* %call, %struct.gimple_seq_d* %call30) #7, !dbg !8451
  %20 = bitcast %struct.gimple_stmt_iterator* %tmp31 to i8*, !dbg !8452
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8, !dbg !8452
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp31, %struct.gimple_seq_d* %call30) #7, !dbg !8452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %20, i64 24, i1 false), !dbg !8452
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8, !dbg !8452
  br label %for.cond32, !dbg !8454

for.cond32:                                       ; preds = %for.body36, %if.end29
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_tgt, metadata !8387, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call33 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_tgt) #7, !dbg !8455
  %tobool34 = icmp eq i8 %call33, 0, !dbg !8457
  br i1 %tobool34, label %for.body36, label %cleanup.loopexit, !dbg !8458

for.body36:                                       ; preds = %for.cond32
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_tgt, metadata !8387, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  %call37 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi_tgt) #7, !dbg !8459
  call void @gimple_set_bb(%union.gimple_statement_d* %call37, %struct.basic_block_def* %call) #6, !dbg !8460
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_tgt, metadata !8387, metadata !DIExpression(DW_OP_deref)), !dbg !8393
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi_tgt) #7, !dbg !8461
  br label %for.cond32, !dbg !8462, !llvm.loop !8463

cleanup.loopexit:                                 ; preds = %for.cond32
  br label %cleanup, !dbg !8465

cleanup:                                          ; preds = %cleanup.loopexit, %for.end25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !8465
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8465
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8465
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8465
  ret %struct.basic_block_def* %call, !dbg !8465
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gimple_move_block_after(%struct.basic_block_def* %bb, %struct.basic_block_def* %after) #5 !dbg !8466 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8468, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !8469, metadata !DIExpression()), !dbg !8470
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 5, !dbg !8471
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !8471
  %cmp = icmp eq %struct.basic_block_def* %0, %after, !dbg !8473
  br i1 %cmp, label %return, label %if.end, !dbg !8474

if.end:                                           ; preds = %entry
  tail call void @unlink_block(%struct.basic_block_def* %bb) #6, !dbg !8475
  tail call void @link_block(%struct.basic_block_def* %bb, %struct.basic_block_def* %after) #6, !dbg !8476
  br label %return, !dbg !8477

return:                                           ; preds = %entry, %if.end
  ret i8 1, !dbg !8478
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gimple_can_merge_blocks_p(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #5 !dbg !8479 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !8481, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !8482, metadata !DIExpression()), !dbg !8490
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8491
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8491
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %a) #7, !dbg !8492
  %tobool = icmp eq i8 %call, 0, !dbg !8492
  br i1 %tobool, label %cleanup64, label %if.end, !dbg !8494

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %a) #7, !dbg !8495
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 7, !dbg !8497
  %1 = load i32, i32* %flags, align 8, !dbg !8497
  %and = and i32 %1, 10, !dbg !8498
  %tobool2 = icmp eq i32 %and, 0, !dbg !8498
  br i1 %tobool2, label %if.end4, label %cleanup64, !dbg !8499

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %a) #7, !dbg !8500
  %cmp = icmp eq %struct.basic_block_def* %call5, %b, !dbg !8502
  br i1 %cmp, label %if.end7, label %cleanup64, !dbg !8503

if.end7:                                          ; preds = %if.end4
  %call8 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %b) #7, !dbg !8504
  %tobool9 = icmp eq i8 %call8, 0, !dbg !8504
  br i1 %tobool9, label %cleanup64, label %if.end11, !dbg !8506

if.end11:                                         ; preds = %if.end7
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8507
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !8507
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8507
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !8507
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8507
  %cmp12 = icmp eq %struct.basic_block_def* %4, %b, !dbg !8509
  br i1 %cmp12, label %cleanup64, label %if.end14, !dbg !8510

if.end14:                                         ; preds = %if.end11
  %call15 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %a) #7, !dbg !8511
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call15, metadata !8483, metadata !DIExpression()), !dbg !8490
  %cond = icmp eq %union.gimple_statement_d* %call15, null, !dbg !8512
  br i1 %cond, label %if.end30, label %land.lhs.true, !dbg !8512

land.lhs.true:                                    ; preds = %if.end14
  %call17 = tail call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* nonnull %call15) #7, !dbg !8514
  %tobool18 = icmp eq i8 %call17, 0, !dbg !8514
  br i1 %tobool18, label %if.end20, label %cleanup64, !dbg !8515

if.end20:                                         ; preds = %land.lhs.true
  %call23 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call15) #7, !dbg !8516
  %cmp24 = icmp eq i32 %call23, 4, !dbg !8518
  br i1 %cmp24, label %land.lhs.true26, label %if.end30, !dbg !8519

land.lhs.true26:                                  ; preds = %if.end20
  %call27 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* nonnull %call15) #7, !dbg !8520
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8520
  %5 = bitcast i40* %nonlocal_flag to i64*, !dbg !8520
  %bf.load = load i64, i64* %5, align 8, !dbg !8520
  %bf.cast2 = and i64 %bf.load, 256, !dbg !8520
  %tobool28 = icmp eq i64 %bf.cast2, 0, !dbg !8520
  br i1 %tobool28, label %if.end30, label %cleanup64, !dbg !8521

if.end30:                                         ; preds = %land.lhs.true26, %if.end14, %if.end20
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8522
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !8522
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %b) #7, !dbg !8522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !8522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !8522
  br label %for.cond, !dbg !8523

for.cond:                                         ; preds = %for.inc, %if.end30
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8484, metadata !DIExpression(DW_OP_deref)), !dbg !8490
  %call31 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8524
  %tobool32 = icmp eq i8 %call31, 0, !dbg !8525
  br i1 %tobool32, label %for.body, label %for.end, !dbg !8526

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8484, metadata !DIExpression(DW_OP_deref)), !dbg !8490
  %call33 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8527
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call33, metadata !8483, metadata !DIExpression()), !dbg !8490
  %call34 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call33) #7, !dbg !8528
  %cmp35 = icmp eq i32 %call34, 4, !dbg !8530
  br i1 %cmp35, label %if.end38, label %cleanup, !dbg !8531

if.end38:                                         ; preds = %for.body
  %call39 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call33) #7, !dbg !8532
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !8486, metadata !DIExpression()), !dbg !8533
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8534
  %7 = bitcast i40* %artificial_flag to i64*, !dbg !8534
  %bf.load41 = load i64, i64* %7, align 8, !dbg !8534
  %bf.cast441 = lshr i64 %bf.load41, 12, !dbg !8536
  %8 = trunc i64 %bf.cast441 to i32, !dbg !8536
  %9 = and i32 %8, 1, !dbg !8536
  %10 = xor i32 %9, 1, !dbg !8536
  br label %cleanup, !dbg !8536

cleanup:                                          ; preds = %for.body, %if.end38
  %cleanup.dest.slot.0 = phi i32 [ 2, %for.body ], [ %10, %if.end38 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup64.loopexit [
    i32 0, label %for.inc
    i32 2, label %for.end
  ]

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8484, metadata !DIExpression(DW_OP_deref)), !dbg !8490
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8537
  br label %for.cond, !dbg !8538, !llvm.loop !8539

for.end:                                          ; preds = %cleanup, %for.cond
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8541
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 4, !dbg !8541
  %12 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !8541
  %tobool49 = icmp eq %struct.loops* %12, null, !dbg !8541
  br i1 %tobool49, label %if.end54, label %land.lhs.true50, !dbg !8543

land.lhs.true50:                                  ; preds = %for.end
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 3, !dbg !8544
  %13 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !8544
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %13, i64 0, i32 3, !dbg !8545
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !8545
  %cmp51 = icmp eq %struct.basic_block_def* %14, %b, !dbg !8546
  br i1 %cmp51, label %cleanup64, label %if.end54, !dbg !8547

if.end54:                                         ; preds = %for.end, %land.lhs.true50
  %call55 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %b) #7, !dbg !8548
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call55, metadata !8485, metadata !DIExpression()), !dbg !8490
  %call56 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call55) #7, !dbg !8549
  %tobool57 = icmp eq i8 %call56, 0, !dbg !8549
  br i1 %tobool57, label %land.lhs.true58, label %if.end63, !dbg !8551

land.lhs.true58:                                  ; preds = %if.end54
  %call59 = call zeroext i8 @name_mappings_registered_p() #6, !dbg !8552
  %tobool61 = icmp eq i8 %call59, 0, !dbg !8552
  br i1 %tobool61, label %if.end63, label %cleanup64, !dbg !8553

if.end63:                                         ; preds = %land.lhs.true58, %if.end54
  br label %cleanup64, !dbg !8554

cleanup64.loopexit:                               ; preds = %cleanup
  br label %cleanup64, !dbg !8555

cleanup64:                                        ; preds = %cleanup64.loopexit, %land.lhs.true26, %land.lhs.true58, %land.lhs.true, %if.end7, %if.end4, %if.end, %entry, %land.lhs.true50, %if.end11, %if.end63
  %retval.2 = phi i8 [ 1, %if.end63 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %if.end7 ], [ 0, %if.end11 ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true26 ], [ 0, %land.lhs.true50 ], [ 0, %land.lhs.true58 ], [ 0, %cleanup64.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8555
  ret i8 %retval.2, !dbg !8555
}

; Function Attrs: nounwind uwtable
define internal void @gimple_merge_blocks(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #5 !dbg !8556 {
entry:
  %last = alloca %struct.gimple_stmt_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp3 = alloca %struct.gimple_stmt_iterator, align 8
  %iter = alloca %struct.immediate_use_iterator_d, align 8
  %tmp84 = alloca %struct.gimple_stmt_iterator, align 8
  %dest_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp112 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !8558, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !8559, metadata !DIExpression()), !dbg !8593
  %0 = bitcast %struct.gimple_stmt_iterator* %last to i8*, !dbg !8594
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8594
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8594
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8594
  %2 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !8594
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8594
  %call = tail call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %b) #7, !dbg !8595
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !8563, metadata !DIExpression()), !dbg !8593
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8596
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !8596
  br i1 %tobool, label %if.end, label %if.then, !dbg !8598

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 9, !dbg !8599
  %4 = load i32, i32* %index, align 8, !dbg !8599
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !8600
  %5 = load i32, i32* %index1, align 8, !dbg !8600
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.178, i64 0, i64 0), i32 %4, i32 %5) #6, !dbg !8601
  br label %if.end, !dbg !8601

if.end:                                           ; preds = %entry, %if.then
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8602
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !8602
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %a) #7, !dbg !8602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !8602
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !8602
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp3 to i8*, !dbg !8603
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !8603
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp3, %struct.gimple_seq_d* %call) #7, !dbg !8603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !8603
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !8603
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 3, !dbg !8604
  %loop_father25 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 3, !dbg !8604
  %8 = bitcast %struct.immediate_use_iterator_d* %iter to i8*, !dbg !8606
  br label %for.cond, !dbg !8607

for.cond:                                         ; preds = %if.end66, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !8562, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !8608
  %tobool5 = icmp eq i8 %call4, 0, !dbg !8609
  br i1 %tobool5, label %for.body, label %for.end67, !dbg !8610

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !8562, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !8611
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !8564, metadata !DIExpression()), !dbg !8612
  %call7 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call6) #7, !dbg !8613
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !8568, metadata !DIExpression()), !dbg !8612
  %call8 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %call6, i64 0) #7, !dbg !8614
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !8569, metadata !DIExpression()), !dbg !8612
  %call9 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call7) #6, !dbg !8615
  %tobool10 = icmp eq i8 %call9, 0, !dbg !8615
  br i1 %tobool10, label %lor.end, label %lor.rhs, !dbg !8616

lor.rhs:                                          ; preds = %for.body
  %call11 = call zeroext i8 @may_propagate_copy(%union.tree_node* %call7, %union.tree_node* %call8) #6, !dbg !8617
  %tobool12 = icmp ne i8 %call11, 0, !dbg !8616
  br label %lor.end, !dbg !8616

lor.end:                                          ; preds = %for.body, %lor.rhs
  %9 = phi i1 [ true, %for.body ], [ %tobool12, %lor.rhs ]
  %conv13 = zext i1 %9 to i8, !dbg !8618
  call void @llvm.dbg.value(metadata i8 %conv13, metadata !8571, metadata !DIExpression()), !dbg !8612
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8619
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 4, !dbg !8619
  %11 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !8619
  %tobool14 = icmp eq %struct.loops* %11, null, !dbg !8619
  br i1 %tobool14, label %if.end29, label %land.lhs.true, !dbg !8620

land.lhs.true:                                    ; preds = %lor.end
  %call15 = call fastcc zeroext i8 @loops_state_satisfies_p(i32 32) #7, !dbg !8621
  %tobool17 = icmp eq i8 %call15, 0, !dbg !8621
  br i1 %tobool17, label %if.end29, label %land.lhs.true18, !dbg !8622

land.lhs.true18:                                  ; preds = %land.lhs.true
  %call19 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call7) #6, !dbg !8623
  %tobool21 = icmp eq i8 %call19, 0, !dbg !8623
  br i1 %tobool21, label %if.end29, label %land.lhs.true22, !dbg !8624

land.lhs.true22:                                  ; preds = %land.lhs.true18
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8625
  %bf.load = load i64, i64* %12, align 8, !dbg !8625
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !8626
  %cmp = icmp eq i64 %bf.cast3, 141, !dbg !8626
  br i1 %cmp, label %land.lhs.true24, label %if.end29, !dbg !8627

land.lhs.true24:                                  ; preds = %land.lhs.true22
  %13 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !8628
  %14 = load %struct.loop*, %struct.loop** %loop_father25, align 8, !dbg !8629
  %cmp26 = icmp eq %struct.loop* %13, %14, !dbg !8630
  %narrow = and i1 %cmp26, %9, !dbg !8631
  %spec.select = zext i1 %narrow to i8, !dbg !8631
  br label %if.end29, !dbg !8631

if.end29:                                         ; preds = %land.lhs.true18, %land.lhs.true, %lor.end, %land.lhs.true24, %land.lhs.true22
  %may_replace_uses.0 = phi i8 [ %conv13, %land.lhs.true22 ], [ %conv13, %land.lhs.true18 ], [ %conv13, %land.lhs.true ], [ %conv13, %lor.end ], [ %spec.select, %land.lhs.true24 ], !dbg !8612
  call void @llvm.dbg.value(metadata i8 %may_replace_uses.0, metadata !8571, metadata !DIExpression()), !dbg !8612
  %tobool30 = icmp eq i8 %may_replace_uses.0, 0, !dbg !8632
  %call35 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call7) #6, !dbg !8633
  %tobool36 = icmp ne i8 %call35, 0, !dbg !8633
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !8634

if.then31:                                        ; preds = %if.end29
  br i1 %tobool36, label %cond.end, label %cond.true, !dbg !8635

cond.true:                                        ; preds = %if.then31
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1596, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8635
  br label %cond.end, !dbg !8635

cond.end:                                         ; preds = %if.then31, %cond.true
  %call34 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call7, %union.tree_node* %call8) #6, !dbg !8637
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call34, metadata !8570, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8561, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call34, i32 0) #6, !dbg !8638
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !8562, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %psi, i8 zeroext 0) #6, !dbg !8639
  br label %if.end66, !dbg !8640

if.else:                                          ; preds = %if.end29
  br i1 %tobool36, label %if.else64, label %if.then37, !dbg !8641

if.then37:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #8, !dbg !8642
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !8572, metadata !DIExpression(DW_OP_deref)), !dbg !8606
  %call38 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %iter, %union.tree_node* %call7) #7, !dbg !8643
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call38, metadata !8578, metadata !DIExpression()), !dbg !8606
  br label %for.cond39, !dbg !8643

for.cond39:                                       ; preds = %for.inc51, %if.then37
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !8572, metadata !DIExpression(DW_OP_deref)), !dbg !8606
  %call40 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !8645
  %tobool41 = icmp eq i8 %call40, 0, !dbg !8645
  br i1 %tobool41, label %for.body43, label %for.end53, !dbg !8643

for.body43:                                       ; preds = %for.cond39
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !8572, metadata !DIExpression(DW_OP_deref)), !dbg !8606
  %call44 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !8647
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call44, metadata !8577, metadata !DIExpression()), !dbg !8606
  br label %for.cond45, !dbg !8647

for.cond45:                                       ; preds = %for.body49, %for.body43
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call44, %for.body43 ], [ %call50, %for.body49 ], !dbg !8649
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !8577, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !8572, metadata !DIExpression(DW_OP_deref)), !dbg !8606
  %call46 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !8650
  %tobool47 = icmp eq i8 %call46, 0, !dbg !8650
  br i1 %tobool47, label %for.body49, label %for.inc51, !dbg !8647

for.body49:                                       ; preds = %for.cond45
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %call8) #7, !dbg !8652
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !8572, metadata !DIExpression(DW_OP_deref)), !dbg !8606
  %call50 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !8650
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call50, metadata !8577, metadata !DIExpression()), !dbg !8606
  br label %for.cond45, !dbg !8650, !llvm.loop !8653

for.inc51:                                        ; preds = %for.cond45
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !8572, metadata !DIExpression(DW_OP_deref)), !dbg !8606
  %call52 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !8645
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call52, metadata !8578, metadata !DIExpression()), !dbg !8606
  br label %for.cond39, !dbg !8645, !llvm.loop !8655

for.end53:                                        ; preds = %for.cond39
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8657
  %bf.load55 = load i64, i64* %15, align 8, !dbg !8657
  %bf.cast572 = and i64 %bf.load55, 4194304, !dbg !8657
  %tobool58 = icmp eq i64 %bf.cast572, 0, !dbg !8657
  br i1 %tobool58, label %if.end63, label %if.then59, !dbg !8659

if.then59:                                        ; preds = %for.end53
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8660
  %bf.load61 = load i64, i64* %16, align 8, !dbg !8661
  %bf.set = or i64 %bf.load61, 4194304, !dbg !8661
  store i64 %bf.set, i64* %16, align 8, !dbg !8661
  br label %if.end63, !dbg !8660

if.end63:                                         ; preds = %for.end53, %if.then59
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #8, !dbg !8662
  br label %if.end65, !dbg !8663

if.else64:                                        ; preds = %if.else
  call void @replace_uses_by(%union.tree_node* %call7, %union.tree_node* %call8) #7, !dbg !8664
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.end63
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !8562, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %psi, i8 zeroext 1) #6, !dbg !8665
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %cond.end
  br label %for.cond, !dbg !8666, !llvm.loop !8667

for.end67:                                        ; preds = %for.cond
  %call68 = call zeroext i8 @move_block_after(%struct.basic_block_def* %b, %struct.basic_block_def* %a) #6, !dbg !8669
  %call69 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %a) #7, !dbg !8670
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call69, i64 0, i32 7, !dbg !8670
  %17 = load i32, i32* %flags, align 8, !dbg !8670
  %and = and i32 %17, 1, !dbg !8670
  %tobool70 = icmp eq i32 %and, 0, !dbg !8670
  br i1 %tobool70, label %cond.true71, label %cond.end73, !dbg !8670

cond.true71:                                      ; preds = %for.end67
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1634, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8670
  br label %cond.end73, !dbg !8670

cond.end73:                                       ; preds = %for.end67, %cond.true71
  %call75 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %a) #7, !dbg !8671
  %tobool76 = icmp eq %union.gimple_statement_d* %call75, null, !dbg !8671
  br i1 %tobool76, label %cond.end82, label %lor.lhs.false, !dbg !8671

lor.lhs.false:                                    ; preds = %cond.end73
  %call77 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %a) #7, !dbg !8671
  %call78 = call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %call77) #7, !dbg !8671
  %tobool79 = icmp eq i8 %call78, 0, !dbg !8671
  br i1 %tobool79, label %cond.end82, label %cond.true80, !dbg !8671

cond.true80:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1635, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8671
  br label %cond.end82, !dbg !8671

cond.end82:                                       ; preds = %lor.lhs.false, %cond.end73, %cond.true80
  %18 = bitcast %struct.gimple_stmt_iterator* %tmp84 to i8*, !dbg !8672
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8, !dbg !8672
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp84, %struct.basic_block_def* %b) #7, !dbg !8672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %18, i64 24, i1 false), !dbg !8672
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8, !dbg !8672
  %19 = bitcast %struct.gimple_stmt_iterator* %dest_gsi to i8*, !dbg !8673
  br label %for.cond85, !dbg !8674

for.cond85:                                       ; preds = %if.end110, %cond.end82
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8561, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  %call86 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8675
  %tobool87 = icmp eq i8 %call86, 0, !dbg !8676
  br i1 %tobool87, label %for.body89, label %for.end111, !dbg !8677

for.body89:                                       ; preds = %for.cond85
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8561, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  %call91 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8678
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call91, metadata !8579, metadata !DIExpression()), !dbg !8679
  %call92 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call91) #7, !dbg !8680
  %cmp93 = icmp eq i32 %call92, 4, !dbg !8681
  br i1 %cmp93, label %if.then95, label %if.else109, !dbg !8682

if.then95:                                        ; preds = %for.body89
  %call96 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call91) #7, !dbg !8683
  call void @llvm.dbg.value(metadata %union.tree_node* %call96, metadata !8583, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8561, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0) #6, !dbg !8685
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8686
  %bf.load98 = load i64, i64* %20, align 8, !dbg !8686
  %bf.cast1011 = and i64 %bf.load98, 65536, !dbg !8686
  %tobool102 = icmp eq i64 %bf.cast1011, 0, !dbg !8686
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !8687

if.then103:                                       ; preds = %if.then95
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8, !dbg !8688
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %dest_gsi, metadata !8587, metadata !DIExpression(DW_OP_deref)), !dbg !8673
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %dest_gsi, %struct.basic_block_def* %a) #7, !dbg !8689
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %dest_gsi, metadata !8587, metadata !DIExpression(DW_OP_deref)), !dbg !8673
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %dest_gsi, %union.gimple_statement_d* %call91, i32 0) #6, !dbg !8690
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8, !dbg !8691
  br label %if.end104, !dbg !8692

if.end104:                                        ; preds = %if.then95, %if.then103
  %label_decl = bitcast %union.tree_node* %call96 to %struct.tree_label_decl*, !dbg !8693
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl, i64 0, i32 2, !dbg !8693
  %21 = load i32, i32* %eh_landing_pad_nr, align 4, !dbg !8693
  call void @llvm.dbg.value(metadata i32 %21, metadata !8586, metadata !DIExpression()), !dbg !8684
  %tobool105 = icmp eq i32 %21, 0, !dbg !8694
  br i1 %tobool105, label %if.end110, label %if.then106, !dbg !8695

if.then106:                                       ; preds = %if.end104
  %call107 = call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32 %21) #6, !dbg !8696
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call107, metadata !8590, metadata !DIExpression()), !dbg !8697
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call107, i64 0, i32 2, !dbg !8698
  store %union.tree_node* null, %union.tree_node** %post_landing_pad, align 8, !dbg !8699
  br label %if.end110, !dbg !8700

if.else109:                                       ; preds = %for.body89
  call void @gimple_set_bb(%union.gimple_statement_d* %call91, %struct.basic_block_def* %a) #6, !dbg !8701
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8561, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8703
  br label %if.end110

if.end110:                                        ; preds = %if.end104, %if.then106, %if.else109
  br label %for.cond85, !dbg !8704, !llvm.loop !8705

for.end111:                                       ; preds = %for.cond85
  %22 = bitcast %struct.gimple_stmt_iterator* %tmp112 to i8*, !dbg !8707
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8, !dbg !8707
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp112, %struct.basic_block_def* %a) #7, !dbg !8707
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %22, i64 24, i1 false), !dbg !8707
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8, !dbg !8707
  %call113 = call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %b) #7, !dbg !8708
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last, metadata !8560, metadata !DIExpression(DW_OP_deref)), !dbg !8593
  call void @gsi_insert_seq_after(%struct.gimple_stmt_iterator* nonnull %last, %struct.gimple_seq_d* %call113, i32 0) #6, !dbg !8709
  call fastcc void @set_bb_seq(%struct.basic_block_def* %b, %struct.gimple_seq_d* null) #7, !dbg !8710
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cfgcleanup_altered_bbs, align 8, !dbg !8711
  %tobool114 = icmp eq %struct.bitmap_head_def* %23, null, !dbg !8711
  br i1 %tobool114, label %if.end118, label %if.then115, !dbg !8713

if.then115:                                       ; preds = %for.end111
  %index116 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 9, !dbg !8714
  %24 = load i32, i32* %index116, align 8, !dbg !8714
  %call117 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %23, i32 %24) #6, !dbg !8715
  br label %if.end118, !dbg !8715

if.end118:                                        ; preds = %for.end111, %if.then115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8716
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8716
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8716
  ret void, !dbg !8716
}

declare dso_local void @gimple_predict_edge(%struct.edge_def*, i32, i32) #2

declare dso_local zeroext i8 @gimple_predicted_by_p(%struct.basic_block_def*, i32) #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gimple_can_duplicate_bb_p(%struct.basic_block_def* %bb) #5 !dbg !8717 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8719, metadata !DIExpression()), !dbg !8720
  ret i8 1, !dbg !8721
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @gimple_duplicate_bb(%struct.basic_block_def* %bb) #5 !dbg !8722 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gsi_tgt = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp9 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp10 = alloca %struct.gimple_stmt_iterator, align 8
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8724, metadata !DIExpression()), !dbg !8737
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8738
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8738
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi_tgt to i8*, !dbg !8738
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8738
  %call = tail call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %bb) #7, !dbg !8739
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !8728, metadata !DIExpression()), !dbg !8737
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8740
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !8740
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8740
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !8740
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8740
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 5, !dbg !8741
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !8741
  %call1 = tail call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %5) #6, !dbg !8742
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call1, metadata !8725, metadata !DIExpression()), !dbg !8737
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8743
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !8743
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %call) #7, !dbg !8743
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !8743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !8743
  br label %for.cond, !dbg !8745

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8726, metadata !DIExpression(DW_OP_deref)), !dbg !8737
  %call2 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8746
  %tobool = icmp eq i8 %call2, 0, !dbg !8748
  br i1 %tobool, label %for.body, label %for.end, !dbg !8749

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8726, metadata !DIExpression(DW_OP_deref)), !dbg !8737
  %call3 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8750
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !8729, metadata !DIExpression()), !dbg !8737
  %call4 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call3) #7, !dbg !8752
  %call5 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %call4, %struct.basic_block_def* %call1) #6, !dbg !8753
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !8731, metadata !DIExpression()), !dbg !8737
  %call6 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call5) #7, !dbg !8754
  %call7 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call5) #7, !dbg !8755
  %call8 = call %union.tree_node* @create_new_def_for(%union.tree_node* %call6, %union.gimple_statement_d* %call5, %union.tree_node** %call7) #6, !dbg !8756
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8726, metadata !DIExpression(DW_OP_deref)), !dbg !8737
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8757
  br label %for.cond, !dbg !8758, !llvm.loop !8759

for.end:                                          ; preds = %for.cond
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp9 to i8*, !dbg !8761
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !8761
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp9, %struct.basic_block_def* %call1) #7, !dbg !8761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !8761
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !8761
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp10 to i8*, !dbg !8762
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !8762
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp10, %struct.basic_block_def* %bb) #7, !dbg !8762
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !8762
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !8762
  %9 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !8763
  br label %for.cond11, !dbg !8764

for.cond11:                                       ; preds = %cleanup, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8726, metadata !DIExpression(DW_OP_deref)), !dbg !8737
  %call12 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8765
  %tobool13 = icmp eq i8 %call12, 0, !dbg !8766
  br i1 %tobool13, label %for.body15, label %for.end35, !dbg !8767

for.body15:                                       ; preds = %for.cond11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #8, !dbg !8768
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8726, metadata !DIExpression(DW_OP_deref)), !dbg !8737
  %call16 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8769
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !8730, metadata !DIExpression()), !dbg !8737
  %call17 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call16) #7, !dbg !8770
  %cmp = icmp eq i32 %call17, 4, !dbg !8772
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8773

if.end:                                           ; preds = %for.body15
  %call18 = call %union.gimple_statement_d* @gimple_copy(%union.gimple_statement_d* %call16) #6, !dbg !8774
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call18, metadata !8731, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_tgt, metadata !8727, metadata !DIExpression(DW_OP_deref)), !dbg !8737
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi_tgt, %union.gimple_statement_d* %call18, i32 0) #6, !dbg !8775
  %call19 = call zeroext i8 @maybe_duplicate_eh_stmt(%union.gimple_statement_d* %call18, %union.gimple_statement_d* %call16) #6, !dbg !8776
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8777
  call void @gimple_duplicate_stmt_histograms(%struct.function* %10, %union.gimple_statement_d* %call18, %struct.function* %10, %union.gimple_statement_d* %call16) #6, !dbg !8778
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !8736, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  %call22 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %call18, i32 10) #7, !dbg !8779
  call void @llvm.dbg.value(metadata %union.tree_node** %call22, metadata !8732, metadata !DIExpression()), !dbg !8763
  br label %for.cond23, !dbg !8779

for.cond23:                                       ; preds = %for.body27, %if.end
  %def_p.0 = phi %union.tree_node** [ %call22, %if.end ], [ %call31, %for.body27 ], !dbg !8781
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !8732, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !8736, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  %call24 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !8782
  %tobool25 = icmp eq i8 %call24, 0, !dbg !8782
  br i1 %tobool25, label %for.body27, label %cleanup.loopexit, !dbg !8779

for.body27:                                       ; preds = %for.cond23
  %call28 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #7, !dbg !8784
  %call29 = call %union.tree_node* @create_new_def_for(%union.tree_node* %call28, %union.gimple_statement_d* %call18, %union.tree_node** %def_p.0) #6, !dbg !8785
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !8736, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  %call31 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !8782
  call void @llvm.dbg.value(metadata %union.tree_node** %call31, metadata !8732, metadata !DIExpression()), !dbg !8763
  br label %for.cond23, !dbg !8782, !llvm.loop !8786

cleanup.loopexit:                                 ; preds = %for.cond23
  br label %cleanup, !dbg !8788

cleanup:                                          ; preds = %cleanup.loopexit, %for.body15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #8, !dbg !8788
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8726, metadata !DIExpression(DW_OP_deref)), !dbg !8737
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8789
  br label %for.cond11, !dbg !8790, !llvm.loop !8791

for.end35:                                        ; preds = %for.cond11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8793
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8793
  ret %struct.basic_block_def* %call1, !dbg !8794
}

; Function Attrs: nounwind uwtable
define internal %struct.basic_block_def* @gimple_split_edge(%struct.edge_def* %edge_in) #5 !dbg !8795 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_in, metadata !8797, metadata !DIExpression()), !dbg !8803
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 7, !dbg !8804
  %0 = load i32, i32* %flags, align 8, !dbg !8804
  %and = and i32 %0, 2, !dbg !8804
  %tobool = icmp eq i32 %and, 0, !dbg !8804
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8804

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2468, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8804
  br label %cond.end, !dbg !8804

cond.end:                                         ; preds = %entry, %cond.true
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 1, !dbg !8805
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !8805
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !8800, metadata !DIExpression()), !dbg !8803
  %call = tail call fastcc %struct.basic_block_def* @split_edge_bb_loc(%struct.edge_def* %edge_in) #7, !dbg !8806
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8799, metadata !DIExpression()), !dbg !8803
  %call2 = tail call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %call) #6, !dbg !8807
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !8798, metadata !DIExpression()), !dbg !8803
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 0, !dbg !8808
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8808
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 11, !dbg !8808
  %3 = load i32, i32* %frequency, align 8, !dbg !8808
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 8, !dbg !8808
  %4 = load i32, i32* %probability, align 4, !dbg !8808
  %mul = mul nsw i32 %3, %4, !dbg !8808
  %add = add nsw i32 %mul, 5000, !dbg !8808
  %div = sdiv i32 %add, 10000, !dbg !8808
  %frequency3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 11, !dbg !8809
  store i32 %div, i32* %frequency3, align 8, !dbg !8810
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 9, !dbg !8811
  %5 = load i64, i64* %count, align 8, !dbg !8811
  %count4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 8, !dbg !8812
  store i64 %5, i64* %count4, align 8, !dbg !8813
  %call5 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call2, %struct.basic_block_def* %1, i32 1) #6, !dbg !8814
  call void @llvm.dbg.value(metadata %struct.edge_def* %call5, metadata !8801, metadata !DIExpression()), !dbg !8803
  %probability6 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call5, i64 0, i32 8, !dbg !8815
  store i32 10000, i32* %probability6, align 4, !dbg !8816
  %6 = load i64, i64* %count, align 8, !dbg !8817
  %count8 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call5, i64 0, i32 9, !dbg !8818
  store i64 %6, i64* %count8, align 8, !dbg !8819
  %call9 = tail call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %edge_in, %struct.basic_block_def* %call2) #6, !dbg !8820
  call void @llvm.dbg.value(metadata %struct.edge_def* %call9, metadata !8802, metadata !DIExpression()), !dbg !8803
  %cmp = icmp eq %struct.edge_def* %call9, %edge_in, !dbg !8821
  br i1 %cmp, label %cond.end12, label %cond.true10, !dbg !8821

cond.true10:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2482, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8821
  br label %cond.end12, !dbg !8821

cond.end12:                                       ; preds = %cond.end, %cond.true10
  tail call fastcc void @reinstall_phi_args(%struct.edge_def* %call5, %struct.edge_def* %call9) #7, !dbg !8822
  ret %struct.basic_block_def* %call2, !dbg !8823
}

; Function Attrs: nounwind uwtable
define internal void @gimple_make_forwarder_block(%struct.edge_def* %fallthru) #5 !dbg !8824 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp10 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru, metadata !8826, metadata !DIExpression()), !dbg !8838
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !8839
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8839
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8840
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8840
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8841
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8841
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %fallthru, i64 0, i32 0, !dbg !8842
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8842
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !8829, metadata !DIExpression()), !dbg !8838
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %fallthru, i64 0, i32 1, !dbg !8843
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8843
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !8830, metadata !DIExpression()), !dbg !8838
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %4) #7, !dbg !8844
  %tobool = icmp eq i8 %call, 0, !dbg !8844
  br i1 %tobool, label %if.end, label %cleanup, !dbg !8846

if.end:                                           ; preds = %entry
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8847
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !8847
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %3) #6, !dbg !8847
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !8847
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !8847
  br label %for.cond, !dbg !8848

for.cond:                                         ; preds = %for.body, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8832, metadata !DIExpression(DW_OP_deref)), !dbg !8838
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8849
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8850
  br i1 %tobool2, label %for.body, label %for.end, !dbg !8851

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8832, metadata !DIExpression(DW_OP_deref)), !dbg !8838
  %call3 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8852
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !8833, metadata !DIExpression()), !dbg !8853
  %call4 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call3) #7, !dbg !8854
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !8831, metadata !DIExpression()), !dbg !8838
  %call5 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %call4, %struct.basic_block_def* %4) #6, !dbg !8855
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !8837, metadata !DIExpression()), !dbg !8853
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8856
  %6 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !8856
  store %union.gimple_statement_d* %call5, %union.gimple_statement_d** %6, align 8, !dbg !8857
  %var7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8858
  %7 = bitcast i32* %var7 to %union.tree_node**, !dbg !8858
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !8858
  %call8 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %8, %union.gimple_statement_d* %call3) #7, !dbg !8859
  call fastcc void @gimple_phi_set_result(%union.gimple_statement_d* %call3, %union.tree_node* %call8) #7, !dbg !8860
  %call9 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call3) #7, !dbg !8861
  call void @add_phi_arg(%union.gimple_statement_d* %call5, %union.tree_node* %call9, %struct.edge_def* %fallthru, i32 0) #6, !dbg !8862
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8832, metadata !DIExpression(DW_OP_deref)), !dbg !8838
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8863
  br label %for.cond, !dbg !8864, !llvm.loop !8865

for.end:                                          ; preds = %for.cond
  %9 = bitcast %struct.edge_iterator* %tmp10 to i8*, !dbg !8867
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8, !dbg !8867
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 0, !dbg !8867
  %call11 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8867
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp10, i64 0, i32 0, !dbg !8867
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call11, 0, !dbg !8867
  store i32 %11, i32* %10, align 8, !dbg !8867
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp10, i64 0, i32 1, !dbg !8867
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call11, 1, !dbg !8867
  store %struct.VEC_edge_gc** %13, %struct.VEC_edge_gc*** %12, align 8, !dbg !8867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %9, i64 16, i1 false), !dbg !8867
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8, !dbg !8867
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8869
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8869
  br label %for.cond12, !dbg !8867

for.cond12:                                       ; preds = %for.inc18, %for.end
  %16 = load i32, i32* %14, align 8, !dbg !8871
  %17 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %15, align 8, !dbg !8871
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8827, metadata !DIExpression(DW_OP_deref)), !dbg !8838
  %call13 = call fastcc zeroext i8 @ei_cond(i32 %16, %struct.VEC_edge_gc** %17, %struct.edge_def** nonnull %e) #7, !dbg !8871
  %tobool14 = icmp eq i8 %call13, 0, !dbg !8867
  br i1 %tobool14, label %cleanup.loopexit, label %for.body15, !dbg !8867

for.body15:                                       ; preds = %for.cond12
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8872
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !8827, metadata !DIExpression()), !dbg !8838
  %cmp = icmp eq %struct.edge_def* %18, %fallthru, !dbg !8875
  br i1 %cmp, label %for.inc18, label %if.end17, !dbg !8876

if.end17:                                         ; preds = %for.body15
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !8827, metadata !DIExpression()), !dbg !8838
  call void @flush_pending_stmts(%struct.edge_def* %18) #6, !dbg !8877
  br label %for.inc18, !dbg !8878

for.inc18:                                        ; preds = %for.body15, %if.end17
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8828, metadata !DIExpression(DW_OP_deref)), !dbg !8838
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8871
  br label %for.cond12, !dbg !8871, !llvm.loop !8879

cleanup.loopexit:                                 ; preds = %for.cond12
  br label %cleanup, !dbg !8881

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8881
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8881
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8881
  ret void, !dbg !8881
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gimple_block_ends_with_call_p(%struct.basic_block_def* %bb) #5 !dbg !8882 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8884, metadata !DIExpression()), !dbg !8886
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8887
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8887
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8885, metadata !DIExpression(DW_OP_deref)), !dbg !8886
  call fastcc void @gsi_last_nondebug_bb(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.basic_block_def* %bb) #7, !dbg !8888
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8885, metadata !DIExpression(DW_OP_deref)), !dbg !8886
  %call = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8889
  %call1 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call) #7, !dbg !8890
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8891
  ret i8 %call1, !dbg !8892
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gimple_block_ends_with_condjump_p(%struct.basic_block_def* %bb) #5 !dbg !8893 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8895, metadata !DIExpression()), !dbg !8897
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !8898
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !8896, metadata !DIExpression()), !dbg !8897
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !8899
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !8900

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !8901
  %cmp = icmp eq i32 %call1, 1, !dbg !8902
  %phitmp = zext i1 %cmp to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !8903
}

; Function Attrs: nounwind uwtable
define internal i32 @gimple_flow_call_edges_add(%struct.simple_bitmap_def* %blocks) #5 !dbg !8904 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gsi47 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %blocks, metadata !8906, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 0, metadata !8908, metadata !DIExpression()), !dbg !8932
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8933
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !8933
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8933
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !8933
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !8933
  call void @llvm.dbg.value(metadata i32 %2, metadata !8909, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i8 0, metadata !8910, metadata !DIExpression()), !dbg !8932
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !8934
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !8934
  %cmp = icmp eq i32 %3, 2, !dbg !8936
  br i1 %cmp, label %cleanup96, label %if.end, !dbg !8937

if.end:                                           ; preds = %entry
  %tobool = icmp eq %struct.simple_bitmap_def* %blocks, null, !dbg !8938
  br i1 %tobool, label %if.end11, label %if.else, !dbg !8940

if.else:                                          ; preds = %if.end
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !8941
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8941
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 5, !dbg !8941
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !8941
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 9, !dbg !8941
  %6 = load i32, i32* %index, align 8, !dbg !8941
  %div = lshr i32 %6, 6, !dbg !8941
  %idxprom = zext i32 %div to i64, !dbg !8941
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %idxprom, !dbg !8941
  %7 = load i64, i64* %arrayidx, align 8, !dbg !8941
  %rem = and i32 %6, 63, !dbg !8941
  %sh_prom = zext i32 %rem to i64, !dbg !8941
  %8 = shl i64 1, %sh_prom
  %9 = and i64 %7, %8
  %phitmp = icmp ne i64 %9, 0
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.else
  %check_last_block.0 = phi i1 [ %phitmp, %if.else ], [ true, %if.end ]
  br i1 %check_last_block.0, label %if.then13, label %if.end36, !dbg !8942

if.then13:                                        ; preds = %if.end11
  %x_exit_block_ptr16 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !8943
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr16, align 8, !dbg !8943
  %prev_bb17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 5, !dbg !8944
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb17, align 8, !dbg !8944
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %11, metadata !8911, metadata !DIExpression()), !dbg !8945
  %12 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8946
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !8946
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8914, metadata !DIExpression(DW_OP_deref)), !dbg !8945
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.basic_block_def* %11) #7, !dbg !8947
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !8915, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8914, metadata !DIExpression(DW_OP_deref)), !dbg !8945
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8948
  %tobool18 = icmp eq i8 %call, 0, !dbg !8948
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !8950

if.then19:                                        ; preds = %if.then13
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8914, metadata !DIExpression(DW_OP_deref)), !dbg !8945
  %call20 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8951
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20, metadata !8915, metadata !DIExpression()), !dbg !8945
  br label %if.end21, !dbg !8952

if.end21:                                         ; preds = %if.then13, %if.then19
  %t.0 = phi %union.gimple_statement_d* [ null, %if.then13 ], [ %call20, %if.then19 ], !dbg !8945
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t.0, metadata !8915, metadata !DIExpression()), !dbg !8945
  %tobool22 = icmp eq %union.gimple_statement_d* %t.0, null, !dbg !8953
  br i1 %tobool22, label %if.end35, label %land.lhs.true, !dbg !8954

land.lhs.true:                                    ; preds = %if.end21
  %call23 = call fastcc zeroext i8 @need_fake_edge_p(%union.gimple_statement_d* nonnull %t.0) #7, !dbg !8955
  %tobool25 = icmp eq i8 %call23, 0, !dbg !8955
  br i1 %tobool25, label %if.end35, label %if.then26, !dbg !8956

if.then26:                                        ; preds = %land.lhs.true
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8957
  %cfg28 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !8957
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg28, align 8, !dbg !8957
  %x_exit_block_ptr29 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 1, !dbg !8957
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr29, align 8, !dbg !8957
  %call30 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %11, %struct.basic_block_def* %15) #6, !dbg !8958
  call void @llvm.dbg.value(metadata %struct.edge_def* %call30, metadata !8916, metadata !DIExpression()), !dbg !8959
  %tobool31 = icmp eq %struct.edge_def* %call30, null, !dbg !8960
  br i1 %tobool31, label %if.end35, label %if.then32, !dbg !8962

if.then32:                                        ; preds = %if.then26
  %call33 = call %union.gimple_statement_d* @gimple_build_nop() #6, !dbg !8963
  call void @gsi_insert_on_edge(%struct.edge_def* nonnull %call30, %union.gimple_statement_d* %call33) #6, !dbg !8965
  call void @gsi_commit_edge_inserts() #6, !dbg !8966
  br label %if.end35, !dbg !8967

if.end35:                                         ; preds = %if.then26, %land.lhs.true, %if.end21, %if.then32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !8968
  br label %if.end36, !dbg !8969

if.end36:                                         ; preds = %if.end35, %if.end11
  call void @llvm.dbg.value(metadata i32 0, metadata !8907, metadata !DIExpression()), !dbg !8932
  %16 = bitcast %struct.gimple_stmt_iterator* %gsi47 to i8*, !dbg !8970
  %17 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8970
  br i1 %tobool, label %if.end36.split.us, label %if.end36.if.end36.split_crit_edge, !dbg !8971

if.end36.if.end36.split_crit_edge:                ; preds = %if.end36
  br label %for.cond, !dbg !8971

if.end36.split.us:                                ; preds = %if.end36
  br label %for.cond.us, !dbg !8971

for.cond.us:                                      ; preds = %cleanup.us, %if.end36.split.us
  %blocks_split.0.us = phi i32 [ 0, %if.end36.split.us ], [ %blocks_split.6.us, %cleanup.us ], !dbg !8972
  %i.0.us = phi i32 [ 0, %if.end36.split.us ], [ %inc92.us, %cleanup.us ], !dbg !8973
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !8907, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.us, metadata !8908, metadata !DIExpression()), !dbg !8932
  %cmp37.us = icmp slt i32 %i.0.us, %2, !dbg !8974
  br i1 %cmp37.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !8975

for.body.us:                                      ; preds = %for.cond.us
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8976
  %cfg41.us = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, i32 1, !dbg !8976
  %19 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg41.us, align 8, !dbg !8976
  %x_basic_block_info.us = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %19, i64 0, i32 2, !dbg !8976
  %20 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info.us, align 8, !dbg !8976
  %tobool42.us = icmp eq %struct.VEC_basic_block_gc* %20, null, !dbg !8976
  br i1 %tobool42.us, label %cond.end.us, label %cond.true.us, !dbg !8976

cond.true.us:                                     ; preds = %for.body.us
  %base.us = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %20, i64 0, i32 0, !dbg !8976
  br label %cond.end.us, !dbg !8976

cond.end.us:                                      ; preds = %cond.true.us, %for.body.us
  %cond.us = phi %struct.VEC_basic_block_base* [ %base.us, %cond.true.us ], [ null, %for.body.us ], !dbg !8976
  %call46.us = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond.us, i32 %i.0.us) #7, !dbg !8976
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call46.us, metadata !8919, metadata !DIExpression()), !dbg !8970
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8, !dbg !8977
  %tobool48.us = icmp eq %struct.basic_block_def* %call46.us, null, !dbg !8978
  br i1 %tobool48.us, label %cleanup.us, label %if.end50.us, !dbg !8980

if.end50.us:                                      ; preds = %cond.end.us
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8, !dbg !8981
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* nonnull %call46.us) #7, !dbg !8981
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %17, i64 24, i1 false), !dbg !8981
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8, !dbg !8981
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  %call64.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi47) #7, !dbg !8982
  %tobool65.us = icmp eq i8 %call64.us, 0, !dbg !8982
  br i1 %tobool65.us, label %if.then66.us, label %cleanup.us, !dbg !8983

if.then66.us:                                     ; preds = %if.end50.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  %call67.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi47) #7, !dbg !8984
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call67.us, metadata !8925, metadata !DIExpression()), !dbg !8970
  br label %do.body.us, !dbg !8985

do.body.us:                                       ; preds = %if.end85.us, %if.then66.us
  %blocks_split.1.us = phi i32 [ %blocks_split.0.us, %if.then66.us ], [ %blocks_split.4.us, %if.end85.us ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.1.us, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  %call68.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi47) #7, !dbg !8986
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call68.us, metadata !8924, metadata !DIExpression()), !dbg !8970
  %call69.us = call fastcc zeroext i8 @need_fake_edge_p(%union.gimple_statement_d* %call68.us) #7, !dbg !8987
  %tobool70.us = icmp eq i8 %call69.us, 0, !dbg !8987
  br i1 %tobool70.us, label %if.end85.us, label %if.then71.us, !dbg !8988

if.then71.us:                                     ; preds = %do.body.us
  %cmp73.us = icmp eq %union.gimple_statement_d* %call68.us, %call67.us, !dbg !8989
  br i1 %cmp73.us, label %if.end80.us, label %if.then75.us, !dbg !8991

if.then75.us:                                     ; preds = %if.then71.us
  %21 = bitcast %union.gimple_statement_d* %call68.us to i8*, !dbg !8992
  %call76.us = call %struct.edge_def* @split_block(%struct.basic_block_def* nonnull %call46.us, i8* %21) #6, !dbg !8994
  call void @llvm.dbg.value(metadata %struct.edge_def* %call76.us, metadata !8926, metadata !DIExpression()), !dbg !8995
  %tobool77.us = icmp ne %struct.edge_def* %call76.us, null, !dbg !8996
  %inc.us = zext i1 %tobool77.us to i32, !dbg !8998
  %spec.select.us = add nsw i32 %blocks_split.1.us, %inc.us, !dbg !8998
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !8908, metadata !DIExpression()), !dbg !8932
  br label %if.end80.us, !dbg !8999

if.end80.us:                                      ; preds = %if.then75.us, %if.then71.us
  %blocks_split.3.us = phi i32 [ %spec.select.us, %if.then75.us ], [ %blocks_split.1.us, %if.then71.us ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.3.us, metadata !8908, metadata !DIExpression()), !dbg !8932
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9000
  %cfg82.us = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, i32 1, !dbg !9000
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg82.us, align 8, !dbg !9000
  %x_exit_block_ptr83.us = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i64 0, i32 1, !dbg !9000
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr83.us, align 8, !dbg !9000
  %call84.us = call %struct.edge_def* @make_edge(%struct.basic_block_def* nonnull %call46.us, %struct.basic_block_def* %24, i32 16) #6, !dbg !9001
  br label %if.end85.us, !dbg !9002

if.end85.us:                                      ; preds = %if.end80.us, %do.body.us
  %blocks_split.4.us = phi i32 [ %blocks_split.3.us, %if.end80.us ], [ %blocks_split.1.us, %do.body.us ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.us, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  call fastcc void @gsi_prev(%struct.gimple_stmt_iterator* nonnull %gsi47) #7, !dbg !9003
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  %call86.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi47) #7, !dbg !9004
  %tobool87.us = icmp eq i8 %call86.us, 0, !dbg !9005
  br i1 %tobool87.us, label %do.body.us, label %cleanup.loopexit.us, !dbg !9006, !llvm.loop !9007

cleanup.us:                                       ; preds = %cleanup.loopexit.us, %if.end50.us, %cond.end.us
  %blocks_split.6.us = phi i32 [ %blocks_split.0.us, %cond.end.us ], [ %blocks_split.0.us, %if.end50.us ], [ %blocks_split.4.us.lcssa, %cleanup.loopexit.us ], !dbg !8972
  call void @llvm.dbg.value(metadata i32 %blocks_split.6.us, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8, !dbg !9009
  %inc92.us = add nuw nsw i32 %i.0.us, 1, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %inc92.us, metadata !8907, metadata !DIExpression()), !dbg !8932
  br label %for.cond.us, !dbg !9011, !llvm.loop !9012

cleanup.loopexit.us:                              ; preds = %if.end85.us
  %blocks_split.4.us.lcssa = phi i32 [ %blocks_split.4.us, %if.end85.us ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.us.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.us.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.us.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  br label %cleanup.us, !dbg !9009

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  %blocks_split.0.us.lcssa = phi i32 [ %blocks_split.0.us, %for.cond.us ], !dbg !8972
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.us.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.us.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  br label %for.end, !dbg !9014

for.cond:                                         ; preds = %cleanup, %if.end36.if.end36.split_crit_edge
  %blocks_split.0 = phi i32 [ 0, %if.end36.if.end36.split_crit_edge ], [ %blocks_split.6, %cleanup ], !dbg !8972
  %i.0 = phi i32 [ 0, %if.end36.if.end36.split_crit_edge ], [ %inc92, %cleanup ], !dbg !8973
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8907, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.0, metadata !8908, metadata !DIExpression()), !dbg !8932
  %cmp37 = icmp slt i32 %i.0, %2, !dbg !8974
  br i1 %cmp37, label %for.body, label %for.end.us-lcssa, !dbg !8975

for.body:                                         ; preds = %for.cond
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8976
  %cfg41 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, i32 1, !dbg !8976
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg41, align 8, !dbg !8976
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i64 0, i32 2, !dbg !8976
  %27 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !8976
  %tobool42 = icmp eq %struct.VEC_basic_block_gc* %27, null, !dbg !8976
  br i1 %tobool42, label %cond.end, label %cond.true, !dbg !8976

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %27, i64 0, i32 0, !dbg !8976
  br label %cond.end, !dbg !8976

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !8976
  %call46 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %i.0) #7, !dbg !8976
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call46, metadata !8919, metadata !DIExpression()), !dbg !8970
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8, !dbg !8977
  %tobool48 = icmp eq %struct.basic_block_def* %call46, null, !dbg !8978
  br i1 %tobool48, label %cleanup, label %if.end50, !dbg !8980

if.end50:                                         ; preds = %cond.end
  %div54 = lshr i32 %i.0, 6, !dbg !9016
  %idxprom55 = zext i32 %div54 to i64, !dbg !9016
  %arrayidx56 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %idxprom55, !dbg !9016
  %28 = load i64, i64* %arrayidx56, align 8, !dbg !9016
  %rem57 = and i32 %i.0, 63, !dbg !9016
  %sh_prom58 = zext i32 %rem57 to i64, !dbg !9016
  %29 = shl i64 1, %sh_prom58, !dbg !9016
  %30 = and i64 %28, %29, !dbg !9016
  %tobool61 = icmp eq i64 %30, 0, !dbg !9016
  br i1 %tobool61, label %cleanup, label %if.end63, !dbg !9018

if.end63:                                         ; preds = %if.end50
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8, !dbg !8981
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* nonnull %call46) #7, !dbg !8981
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %17, i64 24, i1 false), !dbg !8981
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8, !dbg !8981
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  %call64 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi47) #7, !dbg !8982
  %tobool65 = icmp eq i8 %call64, 0, !dbg !8982
  br i1 %tobool65, label %if.then66, label %cleanup, !dbg !8983

if.then66:                                        ; preds = %if.end63
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  %call67 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi47) #7, !dbg !8984
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call67, metadata !8925, metadata !DIExpression()), !dbg !8970
  br label %do.body, !dbg !8985

do.body:                                          ; preds = %if.end85, %if.then66
  %blocks_split.1 = phi i32 [ %blocks_split.0, %if.then66 ], [ %blocks_split.4, %if.end85 ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.1, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  %call68 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi47) #7, !dbg !8986
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call68, metadata !8924, metadata !DIExpression()), !dbg !8970
  %call69 = call fastcc zeroext i8 @need_fake_edge_p(%union.gimple_statement_d* %call68) #7, !dbg !8987
  %tobool70 = icmp eq i8 %call69, 0, !dbg !8987
  br i1 %tobool70, label %if.end85, label %if.then71, !dbg !8988

if.then71:                                        ; preds = %do.body
  %cmp73 = icmp eq %union.gimple_statement_d* %call68, %call67, !dbg !8989
  br i1 %cmp73, label %if.end80, label %if.then75, !dbg !8991

if.then75:                                        ; preds = %if.then71
  %31 = bitcast %union.gimple_statement_d* %call68 to i8*, !dbg !8992
  %call76 = call %struct.edge_def* @split_block(%struct.basic_block_def* nonnull %call46, i8* %31) #6, !dbg !8994
  call void @llvm.dbg.value(metadata %struct.edge_def* %call76, metadata !8926, metadata !DIExpression()), !dbg !8995
  %tobool77 = icmp ne %struct.edge_def* %call76, null, !dbg !8996
  %inc = zext i1 %tobool77 to i32, !dbg !8998
  %spec.select = add nsw i32 %blocks_split.1, %inc, !dbg !8998
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8908, metadata !DIExpression()), !dbg !8932
  br label %if.end80, !dbg !8999

if.end80:                                         ; preds = %if.then71, %if.then75
  %blocks_split.3 = phi i32 [ %spec.select, %if.then75 ], [ %blocks_split.1, %if.then71 ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.3, metadata !8908, metadata !DIExpression()), !dbg !8932
  %32 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9000
  %cfg82 = getelementptr inbounds %struct.function, %struct.function* %32, i64 0, i32 1, !dbg !9000
  %33 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg82, align 8, !dbg !9000
  %x_exit_block_ptr83 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %33, i64 0, i32 1, !dbg !9000
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr83, align 8, !dbg !9000
  %call84 = call %struct.edge_def* @make_edge(%struct.basic_block_def* nonnull %call46, %struct.basic_block_def* %34, i32 16) #6, !dbg !9001
  br label %if.end85, !dbg !9002

if.end85:                                         ; preds = %do.body, %if.end80
  %blocks_split.4 = phi i32 [ %blocks_split.3, %if.end80 ], [ %blocks_split.1, %do.body ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.4, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  call fastcc void @gsi_prev(%struct.gimple_stmt_iterator* nonnull %gsi47) #7, !dbg !9003
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi47, metadata !8923, metadata !DIExpression(DW_OP_deref)), !dbg !8970
  %call86 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi47) #7, !dbg !9004
  %tobool87 = icmp eq i8 %call86, 0, !dbg !9005
  br i1 %tobool87, label %do.body, label %cleanup.loopexit, !dbg !9006, !llvm.loop !9007

cleanup.loopexit:                                 ; preds = %if.end85
  %blocks_split.4.lcssa = phi i32 [ %blocks_split.4, %if.end85 ], !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.4.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  br label %cleanup, !dbg !9009

cleanup:                                          ; preds = %cleanup.loopexit, %if.end50, %if.end63, %cond.end
  %blocks_split.6 = phi i32 [ %blocks_split.0, %cond.end ], [ %blocks_split.0, %if.end50 ], [ %blocks_split.0, %if.end63 ], [ %blocks_split.4.lcssa, %cleanup.loopexit ], !dbg !8972
  call void @llvm.dbg.value(metadata i32 %blocks_split.6, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8, !dbg !9009
  %inc92 = add nuw nsw i32 %i.0, 1, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %inc92, metadata !8907, metadata !DIExpression()), !dbg !8932
  br label %for.cond, !dbg !9011, !llvm.loop !9012

for.end.us-lcssa:                                 ; preds = %for.cond
  %blocks_split.0.lcssa2 = phi i32 [ %blocks_split.0, %for.cond ], !dbg !8972
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.lcssa2, metadata !8908, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.lcssa2, metadata !8908, metadata !DIExpression()), !dbg !8932
  br label %for.end, !dbg !9014

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %blocks_split.0.lcssa = phi i32 [ %blocks_split.0.lcssa2, %for.end.us-lcssa ], [ %blocks_split.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !8972
  call void @llvm.dbg.value(metadata i32 %blocks_split.0.lcssa, metadata !8908, metadata !DIExpression()), !dbg !8932
  %tobool93 = icmp eq i32 %blocks_split.0.lcssa, 0, !dbg !9014
  br i1 %tobool93, label %cleanup96, label %if.then94, !dbg !9019

if.then94:                                        ; preds = %for.end
  call void @verify_flow_info() #6, !dbg !9020
  br label %cleanup96, !dbg !9020

cleanup96:                                        ; preds = %for.end, %if.then94, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %blocks_split.0.lcssa, %if.then94 ], [ 0, %for.end ], !dbg !8932
  ret i32 %retval.0, !dbg !9021
}

; Function Attrs: nounwind uwtable
define internal void @gimple_execute_on_growing_pred(%struct.edge_def* %e) #5 !dbg !9022 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !9024, metadata !DIExpression()), !dbg !9026
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !9027
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !9027
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !9025, metadata !DIExpression()), !dbg !9026
  %call = tail call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %0) #7, !dbg !9028
  %call1 = tail call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call) #7, !dbg !9030
  %tobool = icmp eq i8 %call1, 0, !dbg !9030
  br i1 %tobool, label %if.then, label %if.end, !dbg !9031

if.then:                                          ; preds = %entry
  tail call void @reserve_phi_args_for_new_edge(%struct.basic_block_def* %0) #6, !dbg !9032
  br label %if.end, !dbg !9032

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !9033
}

; Function Attrs: nounwind uwtable
define internal void @gimple_execute_on_shrinking_pred(%struct.edge_def* %e) #5 !dbg !9034 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !9036, metadata !DIExpression()), !dbg !9037
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !9038
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !9038
  %call = tail call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %0) #7, !dbg !9040
  %call1 = tail call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call) #7, !dbg !9041
  %tobool = icmp eq i8 %call1, 0, !dbg !9041
  br i1 %tobool, label %if.then, label %if.end, !dbg !9042

if.then:                                          ; preds = %entry
  tail call void @remove_phi_args(%struct.edge_def* %e) #6, !dbg !9043
  br label %if.end, !dbg !9043

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !9044
}

declare dso_local zeroext i8 @gimple_duplicate_loop_to_header_edge(%struct.loop*, %struct.edge_def*, i32, %struct.simple_bitmap_def*, %struct.edge_def*, %struct.VEC_edge_heap**, i32) #2

; Function Attrs: nounwind uwtable
define internal void @gimple_lv_add_condition_to_bb(%struct.basic_block_def* %first_head, %struct.basic_block_def* %second_head, %struct.basic_block_def* %cond_bb, i8* %cond_e) #5 !dbg !9045 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first_head, metadata !9047, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %second_head, metadata !9048, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond_bb, metadata !9049, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata i8* %cond_e, metadata !9050, metadata !DIExpression()), !dbg !9055
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !9056
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9056
  %1 = bitcast i8* %cond_e to %union.tree_node*, !dbg !9057
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9053, metadata !DIExpression()), !dbg !9055
  %call = tail call %union.gimple_statement_d* @gimple_build_cond_from_tree(%union.tree_node* %1, %union.tree_node* null, %union.tree_node* null) #6, !dbg !9058
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !9052, metadata !DIExpression()), !dbg !9055
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !9059
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !9059
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %cond_bb) #7, !dbg !9059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !9059
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !9059
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9051, metadata !DIExpression(DW_OP_deref)), !dbg !9055
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call, i32 0) #6, !dbg !9060
  %call1 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %cond_bb) #7, !dbg !9061
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !9054, metadata !DIExpression()), !dbg !9055
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 7, !dbg !9062
  %3 = load i32, i32* %flags, align 8, !dbg !9063
  %and = and i32 %3, -2050, !dbg !9063
  %or = or i32 %and, 2048, !dbg !9064
  store i32 %or, i32* %flags, align 8, !dbg !9064
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9065
  ret void, !dbg !9065
}

; Function Attrs: nounwind uwtable
define internal void @gimple_lv_adjust_loop_header_phi(%struct.basic_block_def* %first, %struct.basic_block_def* %second, %struct.basic_block_def* %new_head, %struct.edge_def* %e) #5 !dbg !9066 {
entry:
  %psi1 = alloca %struct.gimple_stmt_iterator, align 8
  %psi2 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp1 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first, metadata !9068, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %second, metadata !9069, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_head, metadata !9070, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !9071, metadata !DIExpression()), !dbg !9078
  %0 = bitcast %struct.gimple_stmt_iterator* %psi1 to i8*, !dbg !9079
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9079
  %1 = bitcast %struct.gimple_stmt_iterator* %psi2 to i8*, !dbg !9079
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !9079
  %call = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %new_head, %struct.basic_block_def* %second) #6, !dbg !9080
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !9077, metadata !DIExpression()), !dbg !9078
  %cmp = icmp eq %struct.edge_def* %call, null, !dbg !9081
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !9081

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6897, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9081
  br label %cond.end, !dbg !9081

cond.end:                                         ; preds = %entry, %cond.true
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !9082
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !9082
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %second) #6, !dbg !9082
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !9082
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !9082
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp1 to i8*, !dbg !9084
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9084
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp1, %struct.basic_block_def* %first) #6, !dbg !9084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !9084
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9084
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 6, !dbg !9085
  br label %for.cond, !dbg !9088

for.cond:                                         ; preds = %for.body, %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi2, metadata !9075, metadata !DIExpression(DW_OP_deref)), !dbg !9078
  %call2 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi2) #7, !dbg !9089
  %tobool = icmp eq i8 %call2, 0, !dbg !9089
  br i1 %tobool, label %land.rhs, label %for.end, !dbg !9090

land.rhs:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi1, metadata !9074, metadata !DIExpression(DW_OP_deref)), !dbg !9078
  %call3 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi1) #7, !dbg !9091
  %tobool4 = icmp eq i8 %call3, 0, !dbg !9092
  br i1 %tobool4, label %for.body, label %for.end, !dbg !9093

for.body:                                         ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi1, metadata !9074, metadata !DIExpression(DW_OP_deref)), !dbg !9078
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi1) #7, !dbg !9094
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !9072, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi2, metadata !9075, metadata !DIExpression(DW_OP_deref)), !dbg !9078
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi2) #7, !dbg !9095
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !9073, metadata !DIExpression()), !dbg !9078
  %4 = load i32, i32* %dest_idx, align 4, !dbg !9096
  %call7 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call6, i32 %4) #7, !dbg !9096
  %call8 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call7) #7, !dbg !9096
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !9076, metadata !DIExpression()), !dbg !9078
  %call9 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call6, %struct.edge_def* %call) #7, !dbg !9097
  call void @add_phi_arg(%union.gimple_statement_d* %call5, %union.tree_node* %call8, %struct.edge_def* %e, i32 %call9) #6, !dbg !9098
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi2, metadata !9075, metadata !DIExpression(DW_OP_deref)), !dbg !9078
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi2) #7, !dbg !9099
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi1, metadata !9074, metadata !DIExpression(DW_OP_deref)), !dbg !9078
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi1) #7, !dbg !9100
  br label %for.cond, !dbg !9101, !llvm.loop !9102

for.end:                                          ; preds = %for.cond, %land.rhs
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !9104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9104
  ret void, !dbg !9104
}

; Function Attrs: nounwind uwtable
define dso_local void @extract_true_false_edges_from_block(%struct.basic_block_def* %b, %struct.edge_def** %true_edge, %struct.edge_def** %false_edge) #5 !dbg !9105 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !9107, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata %struct.edge_def** %true_edge, metadata !9108, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata %struct.edge_def** %false_edge, metadata !9109, metadata !DIExpression()), !dbg !9111
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 1, !dbg !9112
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !9112
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !9112
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9112

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !9112
  br label %cond.end, !dbg !9112

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9112
  %call = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !9112
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !9110, metadata !DIExpression()), !dbg !9111
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 7, !dbg !9113
  %1 = load i32, i32* %flags, align 8, !dbg !9113
  %and = and i32 %1, 1024, !dbg !9115
  %tobool2 = icmp eq i32 %and, 0, !dbg !9115
  br i1 %tobool2, label %if.else, label %if.then, !dbg !9116

if.then:                                          ; preds = %cond.end
  store %struct.edge_def* %call, %struct.edge_def** %true_edge, align 8, !dbg !9117
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !9119
  %tobool4 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !9119
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !9119

cond.true5:                                       ; preds = %if.then
  %base7 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !9119
  br label %cond.end9, !dbg !9119

cond.end9:                                        ; preds = %if.then, %cond.true5
  %cond10 = phi %struct.VEC_edge_base* [ %base7, %cond.true5 ], [ null, %if.then ], !dbg !9119
  %call11 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond10, i32 1) #7, !dbg !9119
  store %struct.edge_def* %call11, %struct.edge_def** %false_edge, align 8, !dbg !9120
  br label %if.end, !dbg !9121

if.else:                                          ; preds = %cond.end
  store %struct.edge_def* %call, %struct.edge_def** %false_edge, align 8, !dbg !9122
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !9124
  %tobool13 = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !9124
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !9124

cond.true14:                                      ; preds = %if.else
  %base16 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !9124
  br label %cond.end18, !dbg !9124

cond.end18:                                       ; preds = %if.else, %cond.true14
  %cond19 = phi %struct.VEC_edge_base* [ %base16, %cond.true14 ], [ null, %if.else ], !dbg !9124
  %call20 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond19, i32 1) #7, !dbg !9124
  store %struct.edge_def* %call20, %struct.edge_def** %true_edge, align 8, !dbg !9125
  br label %if.end

if.end:                                           ; preds = %cond.end18, %cond.end9
  ret void, !dbg !9126
}

; Function Attrs: nounwind uwtable
define internal i32 @split_critical_edges() #5 !dbg !9127 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp46 = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !9142
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9142
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !9143
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9143
  tail call void @start_recording_case_labels() #7, !dbg !9144
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9145
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !9145
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9145
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !9145
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !9146
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !9146
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !9146
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !9147
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !9147
  %9 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !9148
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp46 to i8*, !dbg !9148
  br label %for.cond, !dbg !9145

for.cond:                                         ; preds = %for.inc63, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.inc63 ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !9149
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !9129, metadata !DIExpression()), !dbg !9150
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !9145
  br i1 %tobool, label %for.end64, label %for.body, !dbg !9145

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !9151
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !9151
  %call = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !9151
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !9151
  store i32 %11, i32* %5, align 8, !dbg !9151
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !9151
  store %struct.VEC_edge_gc** %12, %struct.VEC_edge_gc*** %6, align 8, !dbg !9151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !9151
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !9151
  br label %for.cond1, !dbg !9151

for.cond1:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %7, align 8, !dbg !9152
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !9152
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !9130, metadata !DIExpression(DW_OP_deref)), !dbg !9150
  %call2 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %e) #7, !dbg !9152
  %tobool3 = icmp eq i8 %call2, 0, !dbg !9151
  br i1 %tobool3, label %for.inc63, label %for.body4, !dbg !9151

for.body4:                                        ; preds = %for.cond1
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9153
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !9130, metadata !DIExpression()), !dbg !9150
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 0, !dbg !9153
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !9153
  %succs5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 1, !dbg !9153
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs5, align 8, !dbg !9153
  %tobool6 = icmp eq %struct.VEC_edge_gc* %17, null, !dbg !9153
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !9153

cond.true:                                        ; preds = %for.body4
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !9130, metadata !DIExpression()), !dbg !9150
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %17, i64 0, i32 0, !dbg !9153
  br label %cond.end, !dbg !9153

cond.end:                                         ; preds = %for.body4, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %for.body4 ], !dbg !9153
  %call9 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !9153
  %cmp = icmp ugt i32 %call9, 1, !dbg !9153
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9153

land.lhs.true:                                    ; preds = %cond.end
  %18 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9153
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !9130, metadata !DIExpression()), !dbg !9150
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %18, i64 0, i32 1, !dbg !9153
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !9153
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i64 0, i32 0, !dbg !9153
  %20 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !9153
  %tobool10 = icmp eq %struct.VEC_edge_gc* %20, null, !dbg !9153
  br i1 %tobool10, label %cond.end16, label %cond.true11, !dbg !9153

cond.true11:                                      ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !9130, metadata !DIExpression()), !dbg !9150
  %base14 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %20, i64 0, i32 0, !dbg !9153
  br label %cond.end16, !dbg !9153

cond.end16:                                       ; preds = %land.lhs.true, %cond.true11
  %cond17 = phi %struct.VEC_edge_base* [ %base14, %cond.true11 ], [ null, %land.lhs.true ], !dbg !9153
  %call18 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond17) #7, !dbg !9153
  %cmp19 = icmp ugt i32 %call18, 1, !dbg !9153
  br i1 %cmp19, label %land.lhs.true20, label %if.else, !dbg !9154

land.lhs.true20:                                  ; preds = %cond.end16
  %21 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9155
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !9130, metadata !DIExpression()), !dbg !9150
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %21, i64 0, i32 7, !dbg !9156
  %22 = load i32, i32* %flags, align 8, !dbg !9156
  %and = and i32 %22, 2, !dbg !9157
  %tobool21 = icmp eq i32 %and, 0, !dbg !9157
  br i1 %tobool21, label %if.then, label %if.else, !dbg !9158

if.then:                                          ; preds = %land.lhs.true20
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !9130, metadata !DIExpression()), !dbg !9150
  %call22 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %21) #6, !dbg !9159
  br label %for.inc, !dbg !9159

if.else:                                          ; preds = %land.lhs.true20, %cond.end16, %cond.end
  %23 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9160
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !9130, metadata !DIExpression()), !dbg !9150
  %dest23 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 1, !dbg !9161
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %dest23, align 8, !dbg !9161
  %call24 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %24) #7, !dbg !9162
  %tobool25 = icmp eq i8 %call24, 0, !dbg !9162
  br i1 %tobool25, label %land.lhs.true35, label %lor.lhs.false, !dbg !9163

lor.lhs.false:                                    ; preds = %if.else
  %25 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9164
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !9130, metadata !DIExpression()), !dbg !9150
  %dest26 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 1, !dbg !9165
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %dest26, align 8, !dbg !9165
  %call27 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %26) #7, !dbg !9166
  %call28 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call27) #7, !dbg !9167
  %tobool29 = icmp eq i8 %call28, 0, !dbg !9167
  br i1 %tobool29, label %land.lhs.true35, label %lor.lhs.false30, !dbg !9168

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %27 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9169
  call void @llvm.dbg.value(metadata %struct.edge_def* %27, metadata !9130, metadata !DIExpression()), !dbg !9150
  %dest31 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %27, i64 0, i32 1, !dbg !9170
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %dest31, align 8, !dbg !9170
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9171
  %cfg33 = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, i32 1, !dbg !9171
  %30 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg33, align 8, !dbg !9171
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i64 0, i32 1, !dbg !9171
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9171
  %cmp34 = icmp eq %struct.basic_block_def* %28, %31, !dbg !9172
  br i1 %cmp34, label %land.lhs.true35, label %for.inc, !dbg !9173

land.lhs.true35:                                  ; preds = %lor.lhs.false, %if.else, %lor.lhs.false30
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9174
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !9130, metadata !DIExpression()), !dbg !9150
  %src36 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 0, !dbg !9175
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %src36, align 8, !dbg !9175
  %34 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9176
  %cfg38 = getelementptr inbounds %struct.function, %struct.function* %34, i64 0, i32 1, !dbg !9176
  %35 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg38, align 8, !dbg !9176
  %x_entry_block_ptr39 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %35, i64 0, i32 0, !dbg !9176
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr39, align 8, !dbg !9176
  %cmp40 = icmp eq %struct.basic_block_def* %33, %36, !dbg !9177
  br i1 %cmp40, label %for.inc, label %land.lhs.true41, !dbg !9178

land.lhs.true41:                                  ; preds = %land.lhs.true35
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !9130, metadata !DIExpression()), !dbg !9150
  %flags42 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 7, !dbg !9179
  %37 = load i32, i32* %flags42, align 8, !dbg !9179
  %and43 = and i32 %37, 2, !dbg !9180
  %tobool44 = icmp eq i32 %and43, 0, !dbg !9180
  br i1 %tobool44, label %if.then45, label %for.inc, !dbg !9181

if.then45:                                        ; preds = %land.lhs.true41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !9182
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !9183
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !9130, metadata !DIExpression()), !dbg !9150
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp46, %struct.basic_block_def* %33) #7, !dbg !9183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !9183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !9183
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9132, metadata !DIExpression(DW_OP_deref)), !dbg !9148
  %call48 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9184
  %tobool49 = icmp eq i8 %call48, 0, !dbg !9184
  br i1 %tobool49, label %land.lhs.true50, label %if.end, !dbg !9186

land.lhs.true50:                                  ; preds = %if.then45
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9132, metadata !DIExpression(DW_OP_deref)), !dbg !9148
  %call51 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9187
  %call52 = call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %call51) #7, !dbg !9188
  %tobool53 = icmp eq i8 %call52, 0, !dbg !9188
  br i1 %tobool53, label %if.end, label %land.lhs.true54, !dbg !9189

land.lhs.true54:                                  ; preds = %land.lhs.true50
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9132, metadata !DIExpression(DW_OP_deref)), !dbg !9148
  %call55 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9190
  %call56 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call55) #7, !dbg !9191
  %cmp57 = icmp eq i32 %call56, 9, !dbg !9192
  br i1 %cmp57, label %if.end, label %if.then59, !dbg !9193

if.then59:                                        ; preds = %land.lhs.true54
  %38 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9194
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !9130, metadata !DIExpression()), !dbg !9150
  %call60 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %38) #6, !dbg !9195
  br label %if.end, !dbg !9195

if.end:                                           ; preds = %land.lhs.true54, %land.lhs.true50, %if.then45, %if.then59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !9196
  br label %for.inc, !dbg !9197

for.inc:                                          ; preds = %land.lhs.true41, %land.lhs.true35, %if.then, %if.end, %lor.lhs.false30
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9131, metadata !DIExpression(DW_OP_deref)), !dbg !9150
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9152
  br label %for.cond1, !dbg !9152, !llvm.loop !9198

for.inc63:                                        ; preds = %for.cond1
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !9200
  br label %for.cond, !dbg !9200, !llvm.loop !9201

for.end64:                                        ; preds = %for.cond
  call void @end_recording_case_labels() #7, !dbg !9203
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9204
  ret i32 0, !dbg !9205
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @gimplify_build3(%struct.gimple_stmt_iterator* %gsi, i32 %code, %union.tree_node* %type, %union.tree_node* %a, %union.tree_node* %b, %union.tree_node* %c) local_unnamed_addr #5 !dbg !9206 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9210, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %code, metadata !9211, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9212, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata %union.tree_node* %a, metadata !9213, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata %union.tree_node* %b, metadata !9214, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata %union.tree_node* %c, metadata !9215, metadata !DIExpression()), !dbg !9218
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9219
  %call1 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !9220
  call void @llvm.dbg.value(metadata i32 %call1, metadata !9217, metadata !DIExpression()), !dbg !9218
  %call2 = tail call %union.tree_node* @fold_build3_stat_loc(i32 %call1, i32 %code, %union.tree_node* %type, %union.tree_node* %a, %union.tree_node* %b, %union.tree_node* %c) #6, !dbg !9221
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9216, metadata !DIExpression()), !dbg !9218
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %call2) #6, !dbg !9222
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9216, metadata !DIExpression()), !dbg !9218
  %call4 = tail call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call3, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !9223
  ret %union.tree_node* %call4, !dbg !9224
}

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @gimplify_build2(%struct.gimple_stmt_iterator* %gsi, i32 %code, %union.tree_node* %type, %union.tree_node* %a, %union.tree_node* %b) local_unnamed_addr #5 !dbg !9225 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9229, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i32 %code, metadata !9230, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9231, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata %union.tree_node* %a, metadata !9232, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata %union.tree_node* %b, metadata !9233, metadata !DIExpression()), !dbg !9235
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9236
  %call1 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !9236
  %call2 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %call1, i32 %code, %union.tree_node* %type, %union.tree_node* %a, %union.tree_node* %b) #6, !dbg !9236
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9234, metadata !DIExpression()), !dbg !9235
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %call2) #6, !dbg !9237
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9234, metadata !DIExpression()), !dbg !9235
  %call4 = tail call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call3, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !9238
  ret %union.tree_node* %call4, !dbg !9239
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @gimplify_build1(%struct.gimple_stmt_iterator* %gsi, i32 %code, %union.tree_node* %type, %union.tree_node* %a) local_unnamed_addr #5 !dbg !9240 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9244, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.value(metadata i32 %code, metadata !9245, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9246, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.value(metadata %union.tree_node* %a, metadata !9247, metadata !DIExpression()), !dbg !9249
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9250
  %call1 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !9250
  %call2 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %call1, i32 %code, %union.tree_node* %type, %union.tree_node* %a) #6, !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9248, metadata !DIExpression()), !dbg !9249
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %call2) #6, !dbg !9251
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9248, metadata !DIExpression()), !dbg !9249
  %call4 = tail call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call3, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !9252
  ret %union.tree_node* %call4, !dbg !9253
}

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @execute_warn_function_return() #5 !dbg !9254 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp65 = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !9267
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9267
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !9268
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9268
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9269
  %decl = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 6, !dbg !9269
  %3 = bitcast %union.tree_node** %decl to i64**, !dbg !9269
  %4 = load i64*, i64** %3, align 8, !dbg !9269
  %bf.load = load i64, i64* %4, align 8, !dbg !9269
  %bf.cast1 = and i64 %bf.load, 524288, !dbg !9269
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !9269
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !9270

land.lhs.true:                                    ; preds = %entry
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !9271
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9271
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !9271
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9271
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 0, !dbg !9271
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !9271
  %tobool2 = icmp eq %struct.VEC_edge_gc* %7, null, !dbg !9271
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !9271

cond.true:                                        ; preds = %land.lhs.true
  %base7 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !9271
  br label %cond.end, !dbg !9271

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base7, %cond.true ], [ null, %land.lhs.true ], !dbg !9271
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !9271
  %cmp = icmp eq i32 %call, 0, !dbg !9272
  br i1 %cmp, label %if.else, label %if.then, !dbg !9273

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 0, metadata !9256, metadata !DIExpression()), !dbg !9274
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !9275
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !9275
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9275
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !9275
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !9275
  %x_exit_block_ptr10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !9275
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr10, align 8, !dbg !9275
  %preds11 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 0, !dbg !9275
  %call12 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds11) #7, !dbg !9275
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !9275
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call12, 0, !dbg !9275
  store i32 %13, i32* %12, align 8, !dbg !9275
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !9275
  %15 = extractvalue { i32, %struct.VEC_edge_gc** } %call12, 1, !dbg !9275
  store %struct.VEC_edge_gc** %15, %struct.VEC_edge_gc*** %14, align 8, !dbg !9275
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !9275
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !9275
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !9278
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !9278
  br label %for.cond, !dbg !9275

for.cond:                                         ; preds = %for.inc, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !9256, metadata !DIExpression()), !dbg !9274
  %18 = load i32, i32* %16, align 8, !dbg !9280
  %19 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %17, align 8, !dbg !9280
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !9258, metadata !DIExpression(DW_OP_deref)), !dbg !9274
  %call13 = call fastcc zeroext i8 @ei_cond(i32 %18, %struct.VEC_edge_gc** %19, %struct.edge_def** nonnull %e) #7, !dbg !9280
  %tobool14 = icmp eq i8 %call13, 0, !dbg !9275
  br i1 %tobool14, label %for.end, label %for.body, !dbg !9275

for.body:                                         ; preds = %for.cond
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9281
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !9258, metadata !DIExpression()), !dbg !9274
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 0, !dbg !9283
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !9283
  %call15 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %21) #7, !dbg !9284
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call15, metadata !9257, metadata !DIExpression()), !dbg !9274
  %call16 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call15) #7, !dbg !9285
  %cmp17 = icmp eq i32 %call16, 9, !dbg !9287
  br i1 %cmp17, label %land.lhs.true18, label %for.inc, !dbg !9288

land.lhs.true18:                                  ; preds = %for.body
  %call19 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call15) #7, !dbg !9289
  call void @llvm.dbg.value(metadata i32 %call19, metadata !9256, metadata !DIExpression()), !dbg !9274
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9290
  br i1 %cmp20, label %for.inc, label %for.end, !dbg !9291

for.inc:                                          ; preds = %land.lhs.true18, %for.body
  call void @llvm.dbg.value(metadata i32 0, metadata !9256, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9259, metadata !DIExpression(DW_OP_deref)), !dbg !9274
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9280
  br label %for.cond, !dbg !9280, !llvm.loop !9292

for.end:                                          ; preds = %land.lhs.true18, %for.cond
  %location.2 = phi i32 [ 0, %for.cond ], [ %call19, %land.lhs.true18 ], !dbg !9294
  call void @llvm.dbg.value(metadata i32 %location.2, metadata !9256, metadata !DIExpression()), !dbg !9274
  %cmp22 = icmp eq i32 %location.2, 0, !dbg !9295
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !9297

if.then23:                                        ; preds = %for.end
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9298
  %function_end_locus = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, i32 16, !dbg !9299
  %23 = load i32, i32* %function_end_locus, align 4, !dbg !9299
  call void @llvm.dbg.value(metadata i32 %23, metadata !9256, metadata !DIExpression()), !dbg !9274
  br label %if.end25, !dbg !9300

if.end25:                                         ; preds = %if.then23, %for.end
  %location.3 = phi i32 [ %23, %if.then23 ], [ %location.2, %for.end ], !dbg !9294
  call void @llvm.dbg.value(metadata i32 %location.3, metadata !9256, metadata !DIExpression()), !dbg !9274
  %call26 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location.3, i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.179, i64 0, i64 0)) #6, !dbg !9301
  br label %if.end103, !dbg !9302

if.else:                                          ; preds = %cond.end, %entry
  %24 = load i32, i32* @warn_return_type, align 4, !dbg !9303
  %tobool27 = icmp eq i32 %24, 0, !dbg !9303
  br i1 %tobool27, label %if.end103, label %land.lhs.true28, !dbg !9304

land.lhs.true28:                                  ; preds = %if.else
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9305
  %decl30 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, i32 6, !dbg !9305
  %26 = bitcast %union.tree_node** %decl30 to i64**, !dbg !9305
  %27 = load i64*, i64** %26, align 8, !dbg !9305
  %bf.load32 = load i64, i64* %27, align 8, !dbg !9305
  %bf.cast352 = and i64 %bf.load32, 8388608, !dbg !9305
  %tobool36 = icmp eq i64 %bf.cast352, 0, !dbg !9305
  br i1 %tobool36, label %land.lhs.true37, label %if.end103, !dbg !9306

land.lhs.true37:                                  ; preds = %land.lhs.true28
  %cfg39 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, i32 1, !dbg !9307
  %28 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg39, align 8, !dbg !9307
  %x_exit_block_ptr40 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %28, i64 0, i32 1, !dbg !9307
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr40, align 8, !dbg !9307
  %preds41 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 0, !dbg !9307
  %30 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds41, align 8, !dbg !9307
  %tobool42 = icmp eq %struct.VEC_edge_gc* %30, null, !dbg !9307
  br i1 %tobool42, label %cond.end50, label %cond.true43, !dbg !9307

cond.true43:                                      ; preds = %land.lhs.true37
  %base48 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %30, i64 0, i32 0, !dbg !9307
  br label %cond.end50, !dbg !9307

cond.end50:                                       ; preds = %land.lhs.true37, %cond.true43
  %cond51 = phi %struct.VEC_edge_base* [ %base48, %cond.true43 ], [ null, %land.lhs.true37 ], !dbg !9307
  %call52 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond51) #7, !dbg !9307
  %cmp53 = icmp eq i32 %call52, 0, !dbg !9308
  br i1 %cmp53, label %if.end103, label %land.lhs.true54, !dbg !9309

land.lhs.true54:                                  ; preds = %cond.end50
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9310
  %decl56 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 6, !dbg !9310
  %32 = bitcast %union.tree_node** %decl56 to %struct.tree_common**, !dbg !9310
  %33 = load %struct.tree_common*, %struct.tree_common** %32, align 8, !dbg !9310
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %33, i64 0, i32 2, !dbg !9310
  %34 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !9310
  %35 = load %struct.tree_common*, %struct.tree_common** %34, align 8, !dbg !9310
  %type58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %35, i64 0, i32 2, !dbg !9310
  %36 = bitcast %union.tree_node** %type58 to i64**, !dbg !9310
  %37 = load i64*, i64** %36, align 8, !dbg !9310
  %bf.load60 = load i64, i64* %37, align 8, !dbg !9310
  %bf.cast623 = and i64 %bf.load60, 65535, !dbg !9310
  %cmp63 = icmp eq i64 %bf.cast623, 19, !dbg !9310
  br i1 %cmp63, label %if.end103, label %if.then64, !dbg !9311

if.then64:                                        ; preds = %land.lhs.true54
  %38 = bitcast %struct.edge_iterator* %tmp65 to i8*, !dbg !9312
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #8, !dbg !9312
  %cfg67 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 1, !dbg !9312
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg67, align 8, !dbg !9312
  %x_exit_block_ptr68 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i64 0, i32 1, !dbg !9312
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr68, align 8, !dbg !9312
  %preds69 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 0, !dbg !9312
  %call70 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds69) #7, !dbg !9312
  %41 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp65, i64 0, i32 0, !dbg !9312
  %42 = extractvalue { i32, %struct.VEC_edge_gc** } %call70, 0, !dbg !9312
  store i32 %42, i32* %41, align 8, !dbg !9312
  %43 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp65, i64 0, i32 1, !dbg !9312
  %44 = extractvalue { i32, %struct.VEC_edge_gc** } %call70, 1, !dbg !9312
  store %struct.VEC_edge_gc** %44, %struct.VEC_edge_gc*** %43, align 8, !dbg !9312
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %38, i64 16, i1 false), !dbg !9312
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8, !dbg !9312
  %45 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !9313
  %46 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !9313
  br label %for.cond71, !dbg !9312

for.cond71:                                       ; preds = %for.inc100, %if.then64
  %47 = load i32, i32* %45, align 8, !dbg !9314
  %48 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %46, align 8, !dbg !9314
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !9258, metadata !DIExpression(DW_OP_deref)), !dbg !9274
  %call72 = call fastcc zeroext i8 @ei_cond(i32 %47, %struct.VEC_edge_gc** %48, %struct.edge_def** nonnull %e) #7, !dbg !9314
  %tobool73 = icmp eq i8 %call72, 0, !dbg !9312
  br i1 %tobool73, label %if.end103.loopexit, label %for.body74, !dbg !9312

for.body74:                                       ; preds = %for.cond71
  %49 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9315
  call void @llvm.dbg.value(metadata %struct.edge_def* %49, metadata !9258, metadata !DIExpression()), !dbg !9274
  %src76 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %49, i64 0, i32 0, !dbg !9316
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %src76, align 8, !dbg !9316
  %call77 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %50) #7, !dbg !9317
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call77, metadata !9260, metadata !DIExpression()), !dbg !9318
  %call78 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call77) #7, !dbg !9319
  %cmp79 = icmp eq i32 %call78, 9, !dbg !9321
  br i1 %cmp79, label %land.lhs.true80, label %cleanup, !dbg !9322

land.lhs.true80:                                  ; preds = %for.body74
  %call81 = call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %call77) #7, !dbg !9323
  %cmp82 = icmp eq %union.tree_node* %call81, null, !dbg !9324
  br i1 %cmp82, label %land.lhs.true83, label %cleanup, !dbg !9325

land.lhs.true83:                                  ; preds = %land.lhs.true80
  %call84 = call fastcc zeroext i8 @gimple_no_warning_p(%union.gimple_statement_d* %call77) #7, !dbg !9326
  %tobool85 = icmp eq i8 %call84, 0, !dbg !9326
  br i1 %tobool85, label %if.then86, label %cleanup, !dbg !9327

if.then86:                                        ; preds = %land.lhs.true83
  %call87 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call77) #7, !dbg !9328
  call void @llvm.dbg.value(metadata i32 %call87, metadata !9256, metadata !DIExpression()), !dbg !9274
  %cmp88 = icmp eq i32 %call87, 0, !dbg !9330
  br i1 %cmp88, label %if.then89, label %if.end92, !dbg !9332

if.then89:                                        ; preds = %if.then86
  %51 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9333
  %function_end_locus91 = getelementptr inbounds %struct.function, %struct.function* %51, i64 0, i32 16, !dbg !9334
  %52 = load i32, i32* %function_end_locus91, align 4, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %52, metadata !9256, metadata !DIExpression()), !dbg !9274
  br label %if.end92, !dbg !9335

if.end92:                                         ; preds = %if.then89, %if.then86
  %location.4 = phi i32 [ %52, %if.then89 ], [ %call87, %if.then86 ], !dbg !9336
  call void @llvm.dbg.value(metadata i32 %location.4, metadata !9256, metadata !DIExpression()), !dbg !9274
  %call93 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location.4, i32 172, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.180, i64 0, i64 0)) #6, !dbg !9337
  %53 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9338
  %decl95 = getelementptr inbounds %struct.function, %struct.function* %53, i64 0, i32 6, !dbg !9338
  %54 = bitcast %union.tree_node** %decl95 to i64**, !dbg !9338
  %55 = load i64*, i64** %54, align 8, !dbg !9338
  %bf.load97 = load i64, i64* %55, align 8, !dbg !9339
  %bf.set = or i64 %bf.load97, 8388608, !dbg !9339
  store i64 %bf.set, i64* %55, align 8, !dbg !9339
  br label %cleanup, !dbg !9340

cleanup:                                          ; preds = %land.lhs.true83, %for.body74, %land.lhs.true80, %if.end92
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end92 ], [ true, %land.lhs.true83 ], [ true, %land.lhs.true80 ], [ true, %for.body74 ]
  br i1 %cleanup.dest.slot.0, label %for.inc100, label %if.end103.loopexit

for.inc100:                                       ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9259, metadata !DIExpression(DW_OP_deref)), !dbg !9274
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9314
  br label %for.cond71, !dbg !9314, !llvm.loop !9341

if.end103.loopexit:                               ; preds = %cleanup, %for.cond71
  br label %if.end103, !dbg !9343

if.end103:                                        ; preds = %if.end103.loopexit, %cond.end50, %land.lhs.true28, %if.else, %land.lhs.true54, %if.end25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9343
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9343
  ret i32 0, !dbg !9344
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_warn_function_noreturn() #5 !dbg !9345 {
entry:
  %0 = load i32, i32* @warn_missing_noreturn, align 4, !dbg !9346
  %tobool = icmp eq i32 %0, 0, !dbg !9346
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9348

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9349
  %decl = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 6, !dbg !9349
  %2 = bitcast %union.tree_node** %decl to i64**, !dbg !9349
  %3 = load i64*, i64** %2, align 8, !dbg !9349
  %bf.load = load i64, i64* %3, align 8, !dbg !9349
  %bf.cast1 = and i64 %bf.load, 524288, !dbg !9349
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !9349
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !9350

land.lhs.true2:                                   ; preds = %land.lhs.true
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !9351
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9351
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !9351
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9351
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 0, !dbg !9351
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !9351
  %tobool4 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !9351
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !9351

cond.true:                                        ; preds = %land.lhs.true2
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !9351
  br label %cond.end, !dbg !9351

cond.end:                                         ; preds = %land.lhs.true2, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base9, %cond.true ], [ null, %land.lhs.true2 ], !dbg !9351
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !9351
  %cmp = icmp eq i32 %call, 0, !dbg !9352
  br i1 %cmp, label %land.lhs.true10, label %if.end, !dbg !9353

land.lhs.true10:                                  ; preds = %cond.end
  %7 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 12), align 8, !dbg !9354
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9355
  %decl12 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 6, !dbg !9356
  %9 = load %union.tree_node*, %union.tree_node** %decl12, align 8, !dbg !9356
  %call13 = tail call zeroext i8 %7(%union.tree_node* %9) #6, !dbg !9357
  %tobool14 = icmp eq i8 %call13, 0, !dbg !9357
  br i1 %tobool14, label %if.then, label %if.end, !dbg !9358

if.then:                                          ; preds = %land.lhs.true10
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9359
  %decl16 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 6, !dbg !9359
  %11 = bitcast %union.tree_node** %decl16 to %struct.tree_decl_minimal**, !dbg !9359
  %12 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %11, align 8, !dbg !9359
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %12, i64 0, i32 1, !dbg !9359
  %13 = load i32, i32* %locus, align 8, !dbg !9359
  %call17 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %13, i32 133, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.181, i64 0, i64 0)) #6, !dbg !9360
  br label %if.end, !dbg !9360

if.end:                                           ; preds = %land.lhs.true10, %land.lhs.true, %entry, %if.then, %cond.end
  ret i32 0, !dbg !9361
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_warn_unused_result() #5 !dbg !9362 {
entry:
  %0 = load i8, i8* @flag_warn_unused_result, align 1, !dbg !9363
  ret i8 %0, !dbg !9364
}

; Function Attrs: nounwind uwtable
define internal i32 @run_warn_unused_result() #5 !dbg !9365 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !9366
  %call = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %0) #6, !dbg !9367
  tail call fastcc void @do_warn_unused_result(%struct.gimple_seq_d* %call) #7, !dbg !9368
  ret i32 0, !dbg !9369
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_gc_safe_grow(%struct.VEC_basic_block_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !9370 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !9372, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.value(metadata i32 %size_, metadata !9373, metadata !DIExpression()), !dbg !9374
  %cmp = icmp sgt i32 %size_, -1, !dbg !9375
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9375

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !9375
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !9375
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9375

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !9375
  br label %cond.end, !dbg !9375

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !9375
  %call = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #7, !dbg !9375
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !9375
  %tobool2 = icmp eq %struct.VEC_basic_block_gc* %1, null, !dbg !9375
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !9375

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %1, i64 0, i32 0, i32 0, !dbg !9375
  %2 = load i32, i32* %num, align 8, !dbg !9375
  br label %cond.end11, !dbg !9375

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !9375
  %sub = sub nsw i32 %size_, %cond12, !dbg !9375
  %call13 = tail call fastcc i32 @VEC_basic_block_gc_reserve_exact(%struct.VEC_basic_block_gc** %vec_, i32 %sub) #7, !dbg !9375
  %3 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !9375
  %num20 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %3, i64 0, i32 0, i32 0, !dbg !9375
  store i32 %size_, i32* %num20, align 8, !dbg !9375
  ret void, !dbg !9375
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_gc_reserve_exact(%struct.VEC_basic_block_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9376 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !9380, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !9381, metadata !DIExpression()), !dbg !9383
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !9384
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !9384
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9384

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !9384
  br label %cond.end, !dbg !9384

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9384
  %call = tail call fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %cond, i32 %alloc_) #7, !dbg !9384
  %tobool1 = icmp eq i32 %call, 0, !dbg !9384
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9382, metadata !DIExpression()), !dbg !9383
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9384

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_basic_block_gc** %vec_ to i8**, !dbg !9385
  %2 = load i8*, i8** %1, align 8, !dbg !9385
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %2, i32 %alloc_) #6, !dbg !9385
  store i8* %call3, i8** %1, align 8, !dbg !9385
  br label %if.end, !dbg !9385

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9384
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9387 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !9392, metadata !DIExpression()), !dbg !9393
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !9394
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9394

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 1, !dbg !9394
  %0 = load i32, i32* %alloc, align 4, !dbg !9394
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !9394
  %1 = load i32, i32* %num, align 8, !dbg !9394
  %sub = sub i32 %0, %1, !dbg !9394
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !9394
  br label %cond.end, !dbg !9394

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !9394
  br label %cond.end, !dbg !9394

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !9394
  ret i32 %cond, !dbg !9394
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_gimple_cfg(%struct.gimple_seq_d* %seq) unnamed_addr #5 !dbg !9395 {
entry:
  %local_dump_flags = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !9397, metadata !DIExpression()), !dbg !9401
  tail call void @gimple_register_cfg_hooks() #6, !dbg !9402
  %call = tail call i8* @memset(i8* bitcast (%struct.cfg_stats_d* @cfg_stats to i8*), i32 0, i64 8) #6, !dbg !9403
  tail call void @init_empty_tree_cfg() #7, !dbg !9404
  store i1 false, i1* @found_computed_goto, align 1, !dbg !9405
  tail call fastcc void @make_blocks(%struct.gimple_seq_d* %seq) #7, !dbg !9406
  %.b = load i1, i1* @found_computed_goto, align 1, !dbg !9407
  br i1 %.b, label %if.then, label %if.end, !dbg !9409

if.then:                                          ; preds = %entry
  tail call fastcc void @factor_computed_gotos() #7, !dbg !9410
  br label %if.end, !dbg !9410

if.end:                                           ; preds = %entry, %if.then
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9411
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !9411
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9411
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 3, !dbg !9411
  %2 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !9411
  %cmp = icmp eq i32 %2, 2, !dbg !9413
  br i1 %cmp, label %if.then1, label %if.end5, !dbg !9414

if.then1:                                         ; preds = %if.end
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !9415
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !9415
  %call4 = tail call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %3) #6, !dbg !9416
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9417
  %cfg7.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !9419
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7.phi.trans.insert, align 8, !dbg !9417
  br label %if.end5, !dbg !9416

if.end5:                                          ; preds = %if.then1, %if.end
  %4 = phi %struct.control_flow_graph* [ %.pre1, %if.then1 ], [ %1, %if.end ], !dbg !9417
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 2, !dbg !9417
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !9417
  %tobool8 = icmp eq %struct.VEC_basic_block_gc* %5, null, !dbg !9417
  br i1 %tobool8, label %cond.end, label %cond.true, !dbg !9417

cond.true:                                        ; preds = %if.end5
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i64 0, i32 0, !dbg !9417
  br label %cond.end, !dbg !9417

cond.end:                                         ; preds = %if.end5, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %if.end5 ], !dbg !9417
  %call12 = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #7, !dbg !9417
  %conv = zext i32 %call12 to i64, !dbg !9417
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9420
  %cfg14 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !9420
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg14, align 8, !dbg !9420
  %x_n_basic_blocks15 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 3, !dbg !9420
  %8 = load i32, i32* %x_n_basic_blocks15, align 8, !dbg !9420
  %conv16 = sext i32 %8 to i64, !dbg !9421
  %cmp17 = icmp ult i64 %conv, %conv16, !dbg !9422
  br i1 %cmp17, label %if.then19, label %if.end26, !dbg !9423

if.then19:                                        ; preds = %cond.end
  %x_basic_block_info22 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 2, !dbg !9424
  tail call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_basic_block_info22, i32 %8) #7, !dbg !9424
  br label %if.end26, !dbg !9424

if.end26:                                         ; preds = %if.then19, %cond.end
  tail call void @cleanup_dead_labels() #7, !dbg !9425
  tail call void @group_case_labels() #7, !dbg !9426
  %call27 = tail call %struct.htab* @htab_create(i64 13, i32 (i8*)* nonnull @locus_map_hash, i32 (i8*, i8*)* nonnull @locus_map_eq, void (i8*)* nonnull @free) #6, !dbg !9427
  store %struct.htab* %call27, %struct.htab** @discriminator_per_locus, align 8, !dbg !9428
  tail call fastcc void @make_edges() #7, !dbg !9429
  tail call void @cleanup_dead_labels() #7, !dbg !9430
  %9 = load %struct.htab*, %struct.htab** @discriminator_per_locus, align 8, !dbg !9431
  tail call void @htab_delete(%struct.htab* %9) #6, !dbg !9432
  %10 = bitcast i32* %local_dump_flags to i8*, !dbg !9433
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8, !dbg !9433
  call void @llvm.dbg.value(metadata i32* %local_dump_flags, metadata !9398, metadata !DIExpression(DW_OP_deref)), !dbg !9434
  %call28 = call %struct._IO_FILE* @dump_begin(i32 7, i32* nonnull %local_dump_flags) #6, !dbg !9435
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call28, metadata !9400, metadata !DIExpression()), !dbg !9434
  %tobool29 = icmp eq %struct._IO_FILE* %call28, null, !dbg !9436
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !9438

if.then30:                                        ; preds = %if.end26
  call fastcc void @gimple_cfg2vcg(%struct._IO_FILE* nonnull %call28) #7, !dbg !9439
  call void @dump_end(i32 7, %struct._IO_FILE* nonnull %call28) #6, !dbg !9441
  br label %if.end31, !dbg !9442

if.end31:                                         ; preds = %if.end26, %if.then30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8, !dbg !9443
  ret void, !dbg !9444
}

declare dso_local void @gimple_set_body(%union.tree_node*, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local void @dump_scope_blocks(%struct._IO_FILE*, i32) local_unnamed_addr #2

declare dso_local void @gimple_register_cfg_hooks() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @make_blocks(%struct.gimple_seq_d* %seq) unnamed_addr #5 !dbg !9445 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !9447, metadata !DIExpression()), !dbg !9462
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !9463
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9463
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9448, metadata !DIExpression(DW_OP_deref)), !dbg !9462
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %i, %struct.gimple_seq_d* %seq) #7, !dbg !9464
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !9449, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8 1, metadata !9450, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8 1, metadata !9451, metadata !DIExpression()), !dbg !9462
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9465
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !9465
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9465
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !9465
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !9465
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !9452, metadata !DIExpression()), !dbg !9462
  br label %while.cond, !dbg !9466

while.cond:                                       ; preds = %if.end54, %entry
  %bb.0 = phi %struct.basic_block_def* [ %3, %entry ], [ %bb.1, %if.end54 ], !dbg !9462
  %first_stmt_of_seq.0 = phi i8 [ 1, %entry ], [ 0, %if.end54 ], !dbg !9462
  %start_new_block.0 = phi i8 [ 1, %entry ], [ %start_new_block.2, %if.end54 ], !dbg !9462
  %stmt.0 = phi %union.gimple_statement_d* [ null, %entry ], [ %call1, %if.end54 ], !dbg !9462
  %seq.addr.0 = phi %struct.gimple_seq_d* [ %seq, %entry ], [ %seq.addr.2, %if.end54 ]
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.addr.0, metadata !9447, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !9449, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8 %start_new_block.0, metadata !9450, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8 %first_stmt_of_seq.0, metadata !9451, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !9452, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9448, metadata !DIExpression(DW_OP_deref)), !dbg !9462
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !9467
  %tobool = icmp eq i8 %call, 0, !dbg !9468
  br i1 %tobool, label %while.body, label %while.end, !dbg !9466

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !9453, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9448, metadata !DIExpression(DW_OP_deref)), !dbg !9462
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !9470
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !9449, metadata !DIExpression()), !dbg !9462
  %tobool2 = icmp eq i8 %start_new_block.0, 0, !dbg !9471
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !9473

lor.lhs.false:                                    ; preds = %while.body
  %call3 = call fastcc zeroext i8 @stmt_starts_bb_p(%union.gimple_statement_d* %call1, %union.gimple_statement_d* %stmt.0) #7, !dbg !9474
  %tobool5 = icmp eq i8 %call3, 0, !dbg !9474
  br i1 %tobool5, label %if.end10, label %if.then, !dbg !9475

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %tobool6 = icmp eq i8 %first_stmt_of_seq.0, 0, !dbg !9476
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9479

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9448, metadata !DIExpression(DW_OP_deref)), !dbg !9462
  %call8 = call %struct.gimple_seq_d* @gsi_split_seq_before(%struct.gimple_stmt_iterator* nonnull %i) #6, !dbg !9480
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call8, metadata !9447, metadata !DIExpression()), !dbg !9462
  br label %if.end, !dbg !9481

if.end:                                           ; preds = %if.then, %if.then7
  %seq.addr.1 = phi %struct.gimple_seq_d* [ %seq.addr.0, %if.then ], [ %call8, %if.then7 ]
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.addr.1, metadata !9447, metadata !DIExpression()), !dbg !9462
  %4 = bitcast %struct.gimple_seq_d* %seq.addr.1 to i8*, !dbg !9482
  %call9 = call %struct.basic_block_def* @create_basic_block(i8* %4, i8* null, %struct.basic_block_def* %bb.0) #6, !dbg !9483
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call9, metadata !9452, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8 0, metadata !9450, metadata !DIExpression()), !dbg !9462
  br label %if.end10, !dbg !9484

if.end10:                                         ; preds = %lor.lhs.false, %if.end
  %bb.1 = phi %struct.basic_block_def* [ %call9, %if.end ], [ %bb.0, %lor.lhs.false ], !dbg !9462
  %seq.addr.2 = phi %struct.gimple_seq_d* [ %seq.addr.1, %if.end ], [ %seq.addr.0, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq.addr.2, metadata !9447, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8 0, metadata !9450, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !9452, metadata !DIExpression()), !dbg !9462
  call void @gimple_set_bb(%union.gimple_statement_d* %call1, %struct.basic_block_def* %bb.1) #6, !dbg !9485
  %call11 = call fastcc zeroext i8 @computed_goto_p(%union.gimple_statement_d* %call1) #7, !dbg !9486
  %tobool12 = icmp eq i8 %call11, 0, !dbg !9486
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !9488

if.then13:                                        ; preds = %if.end10
  store i1 true, i1* @found_computed_goto, align 1, !dbg !9489
  br label %if.end14, !dbg !9490

if.end14:                                         ; preds = %if.end10, %if.then13
  %call15 = call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %call1) #7, !dbg !9491
  %tobool16 = icmp eq i8 %call15, 0, !dbg !9491
  br i1 %tobool16, label %if.end54, label %if.then17, !dbg !9492

if.then17:                                        ; preds = %if.end14
  %call18 = call fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %call1) #7, !dbg !9493
  %tobool20 = icmp eq i8 %call18, 0, !dbg !9493
  br i1 %tobool20, label %if.end54, label %land.lhs.true, !dbg !9494

land.lhs.true:                                    ; preds = %if.then17
  %call21 = call zeroext i8 @stmt_can_make_abnormal_goto(%union.gimple_statement_d* %call1) #7, !dbg !9495
  %tobool23 = icmp eq i8 %call21, 0, !dbg !9495
  br i1 %tobool23, label %if.end54, label %land.lhs.true24, !dbg !9496

land.lhs.true24:                                  ; preds = %land.lhs.true
  %call25 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call1) #6, !dbg !9497
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9497
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9497
  %call26 = call zeroext i8 @is_gimple_reg_type(%union.tree_node* %5) #6, !dbg !9498
  %tobool28 = icmp eq i8 %call26, 0, !dbg !9498
  br i1 %tobool28, label %if.end54, label %if.then29, !dbg !9499

if.then29:                                        ; preds = %land.lhs.true24
  %call30 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call1) #6, !dbg !9500
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !9455, metadata !DIExpression()), !dbg !9501
  %type32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9502
  %6 = load %union.tree_node*, %union.tree_node** %type32, align 8, !dbg !9502
  %call33 = call %union.tree_node* @create_tmp_var(%union.tree_node* %6, i8* null) #6, !dbg !9503
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !9460, metadata !DIExpression()), !dbg !9501
  %call34 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call30, %union.tree_node* %call33) #6, !dbg !9504
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call34, metadata !9461, metadata !DIExpression()), !dbg !9501
  %call35 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call1) #7, !dbg !9505
  call fastcc void @gimple_set_location(%union.gimple_statement_d* %call34, i32 %call35) #7, !dbg !9506
  %call36 = call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %call1) #7, !dbg !9507
  call fastcc void @gimple_set_block(%union.gimple_statement_d* %call34, %union.tree_node* %call36) #7, !dbg !9508
  call void @gimple_set_lhs(%union.gimple_statement_d* %call1, %union.tree_node* %call33) #6, !dbg !9509
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9510
  %7 = bitcast %union.tree_node** %type38 to i64**, !dbg !9510
  %8 = load i64*, i64** %7, align 8, !dbg !9510
  %bf.load = load i64, i64* %8, align 8, !dbg !9510
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9512
  %cmp = icmp eq i64 %bf.cast1, 13, !dbg !9512
  br i1 %cmp, label %if.then49, label %lor.lhs.false40, !dbg !9513

lor.lhs.false40:                                  ; preds = %if.then29
  %cmp47 = icmp eq i64 %bf.cast1, 14, !dbg !9514
  br i1 %cmp47, label %if.then49, label %if.end52, !dbg !9515

if.then49:                                        ; preds = %lor.lhs.false40, %if.then29
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9516
  %9 = bitcast i40* %gimple_reg_flag to i64*, !dbg !9516
  %bf.load50 = load i64, i64* %9, align 8, !dbg !9517
  %bf.set = or i64 %bf.load50, 134217728, !dbg !9517
  store i64 %bf.set, i64* %9, align 8, !dbg !9517
  br label %if.end52, !dbg !9516

if.end52:                                         ; preds = %if.then49, %lor.lhs.false40
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9448, metadata !DIExpression(DW_OP_deref)), !dbg !9462
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %i, %union.gimple_statement_d* %call34, i32 1) #6, !dbg !9518
  br label %if.end54, !dbg !9519

if.end54:                                         ; preds = %land.lhs.true24, %land.lhs.true, %if.then17, %if.end14, %if.end52
  %start_new_block.2 = phi i8 [ 0, %if.end14 ], [ 1, %if.end52 ], [ 1, %land.lhs.true24 ], [ 1, %land.lhs.true ], [ 1, %if.then17 ], !dbg !9469
  call void @llvm.dbg.value(metadata i8 %start_new_block.2, metadata !9450, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !9448, metadata !DIExpression(DW_OP_deref)), !dbg !9462
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !9520
  call void @llvm.dbg.value(metadata i8 0, metadata !9451, metadata !DIExpression()), !dbg !9462
  br label %while.cond, !dbg !9466, !llvm.loop !9521

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9523
  ret void, !dbg !9523
}

; Function Attrs: nounwind uwtable
define internal fastcc void @factor_computed_gotos() unnamed_addr #5 !dbg !9524 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %new_gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9527, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9528, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !9529, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !9530, metadata !DIExpression()), !dbg !9543
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9544
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !9544
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9544
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !9544
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !9544
  %3 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !9545
  %4 = bitcast %struct.gimple_stmt_iterator* %new_gsi to i8*, !dbg !9546
  br label %for.cond, !dbg !9544

for.cond:                                         ; preds = %cleanup, %entry
  %5 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %cleanup ], !dbg !9547
  %factored_computed_goto.0 = phi %union.gimple_statement_d* [ null, %entry ], [ %factored_computed_goto.3, %cleanup ], !dbg !9548
  %var.0 = phi %union.tree_node* [ null, %entry ], [ %var.3, %cleanup ], !dbg !9549
  %factored_label_decl.0 = phi %union.tree_node* [ null, %entry ], [ %factored_label_decl.3, %cleanup ], !dbg !9550
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %cleanup ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !9551
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !9551
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !9526, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.tree_node* %factored_label_decl.0, metadata !9527, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !9528, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %factored_computed_goto.0, metadata !9530, metadata !DIExpression()), !dbg !9543
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !9547
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9547
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %6, !dbg !9547
  br i1 %cmp, label %for.end, label %for.body, !dbg !9544

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9552
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9531, metadata !DIExpression(DW_OP_deref)), !dbg !9545
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.basic_block_def* %bb.0) #7, !dbg !9553
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9531, metadata !DIExpression(DW_OP_deref)), !dbg !9545
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9554
  %tobool = icmp eq i8 %call, 0, !dbg !9554
  br i1 %tobool, label %if.end, label %cleanup, !dbg !9556

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9531, metadata !DIExpression(DW_OP_deref)), !dbg !9545
  %call3 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !9557
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !9535, metadata !DIExpression()), !dbg !9545
  %cmp4 = icmp eq %union.gimple_statement_d* %call3, %factored_computed_goto.0, !dbg !9558
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !9560

if.end6:                                          ; preds = %if.end
  %call7 = call fastcc zeroext i8 @computed_goto_p(%union.gimple_statement_d* %call3) #7, !dbg !9561
  %tobool8 = icmp eq i8 %call7, 0, !dbg !9561
  br i1 %tobool8, label %cleanup, label %if.then9, !dbg !9562

if.then9:                                         ; preds = %if.end6
  %tobool10 = icmp eq %union.gimple_statement_d* %factored_computed_goto.0, null, !dbg !9563
  br i1 %tobool10, label %if.then11, label %if.end17, !dbg !9564

if.then11:                                        ; preds = %if.then9
  %call12 = call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %bb.0) #6, !dbg !9565
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call12, metadata !9539, metadata !DIExpression()), !dbg !9546
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !9566
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %new_gsi, metadata !9542, metadata !DIExpression(DW_OP_deref)), !dbg !9546
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %new_gsi, %struct.basic_block_def* %call12) #7, !dbg !9567
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !9568
  %call13 = call %union.tree_node* @create_tmp_var(%union.tree_node* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !9569
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !9528, metadata !DIExpression()), !dbg !9543
  %call14 = call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !9570
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !9527, metadata !DIExpression()), !dbg !9543
  %call15 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call14) #6, !dbg !9571
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call15, metadata !9529, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %new_gsi, metadata !9542, metadata !DIExpression(DW_OP_deref)), !dbg !9546
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %new_gsi, %union.gimple_statement_d* %call15, i32 0) #6, !dbg !9572
  %call16 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call13) #6, !dbg !9573
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !9530, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %new_gsi, metadata !9542, metadata !DIExpression(DW_OP_deref)), !dbg !9546
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %new_gsi, %union.gimple_statement_d* %call16, i32 0) #6, !dbg !9574
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !9575
  br label %if.end17, !dbg !9576

if.end17:                                         ; preds = %if.then9, %if.then11
  %factored_computed_goto.1 = phi %union.gimple_statement_d* [ %factored_computed_goto.0, %if.then9 ], [ %call16, %if.then11 ], !dbg !9543
  %var.1 = phi %union.tree_node* [ %var.0, %if.then9 ], [ %call13, %if.then11 ], !dbg !9543
  %factored_label_decl.1 = phi %union.tree_node* [ %factored_label_decl.0, %if.then9 ], [ %call14, %if.then11 ], !dbg !9543
  call void @llvm.dbg.value(metadata %union.tree_node* %factored_label_decl.1, metadata !9527, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.tree_node* %var.1, metadata !9528, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %factored_computed_goto.1, metadata !9530, metadata !DIExpression()), !dbg !9543
  %call18 = call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %call3) #7, !dbg !9577
  %call19 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %var.1, %union.tree_node* %call18) #6, !dbg !9577
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !9536, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !9531, metadata !DIExpression(DW_OP_deref)), !dbg !9545
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call19, i32 1) #6, !dbg !9579
  call fastcc void @gimple_goto_set_dest(%union.gimple_statement_d* %call3, %union.tree_node* %factored_label_decl.1) #7, !dbg !9580
  br label %cleanup, !dbg !9581

cleanup:                                          ; preds = %if.end6, %for.body, %if.end17, %if.end
  %factored_computed_goto.3 = phi %union.gimple_statement_d* [ %factored_computed_goto.0, %for.body ], [ %factored_computed_goto.0, %if.end ], [ %factored_computed_goto.1, %if.end17 ], [ %factored_computed_goto.0, %if.end6 ], !dbg !9548
  %var.3 = phi %union.tree_node* [ %var.0, %for.body ], [ %var.0, %if.end ], [ %var.1, %if.end17 ], [ %var.0, %if.end6 ], !dbg !9549
  %factored_label_decl.3 = phi %union.tree_node* [ %factored_label_decl.0, %for.body ], [ %factored_label_decl.0, %if.end ], [ %factored_label_decl.1, %if.end17 ], [ %factored_label_decl.0, %if.end6 ], !dbg !9550
  call void @llvm.dbg.value(metadata %union.tree_node* %factored_label_decl.3, metadata !9527, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.tree_node* %var.3, metadata !9528, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %factored_computed_goto.3, metadata !9530, metadata !DIExpression()), !dbg !9543
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9582
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9547
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !9583
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !9547
  br label %for.cond, !dbg !9547, !llvm.loop !9584

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9586
}

; Function Attrs: nounwind uwtable
define internal i32 @locus_map_hash(i8* %item) #5 !dbg !9587 {
entry:
  call void @llvm.dbg.value(metadata i8* %item, metadata !9591, metadata !DIExpression()), !dbg !9592
  %locus = bitcast i8* %item to i32*, !dbg !9593
  %0 = load i32, i32* %locus, align 4, !dbg !9593
  ret i32 %0, !dbg !9594
}

; Function Attrs: nounwind uwtable
define internal i32 @locus_map_eq(i8* %va, i8* %vb) #5 !dbg !9595 {
entry:
  call void @llvm.dbg.value(metadata i8* %va, metadata !9597, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.value(metadata i8* %vb, metadata !9598, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.value(metadata i8* %va, metadata !9599, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.value(metadata i8* %vb, metadata !9600, metadata !DIExpression()), !dbg !9601
  %locus = bitcast i8* %va to i32*, !dbg !9602
  %0 = load i32, i32* %locus, align 4, !dbg !9602
  %locus1 = bitcast i8* %vb to i32*, !dbg !9603
  %1 = load i32, i32* %locus1, align 4, !dbg !9603
  %cmp = icmp eq i32 %0, %1, !dbg !9604
  %conv = zext i1 %cmp to i32, !dbg !9604
  ret i32 %conv, !dbg !9605
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_edges() unnamed_addr #5 !dbg !9606 {
entry:
  call void @llvm.dbg.value(metadata %struct.omp_region* null, metadata !9609, metadata !DIExpression()), !dbg !9636
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9637
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !9637
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9637
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !9637
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !9637
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !9638
  %3 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !9638
  %tobool = icmp eq %struct.VEC_basic_block_gc* %3, null, !dbg !9638
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9638

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %3, i64 0, i32 0, !dbg !9638
  br label %cond.end, !dbg !9638

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9638
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 2) #7, !dbg !9638
  %call6 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %2, %struct.basic_block_def* %call, i32 1) #6, !dbg !9639
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9640
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !9640
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !9640
  %x_entry_block_ptr9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !9640
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr9, align 8, !dbg !9640
  br label %for.cond, !dbg !9640

for.cond:                                         ; preds = %for.inc99, %cond.end
  %7 = phi %struct.control_flow_graph* [ %5, %cond.end ], [ %.pre1, %for.inc99 ], !dbg !9641
  %fallthru.0 = phi i8 [ undef, %cond.end ], [ %fallthru.3, %for.inc99 ]
  %cur_region.0 = phi %struct.omp_region* [ null, %cond.end ], [ %cur_region.2, %for.inc99 ], !dbg !9642
  %.pn = phi %struct.basic_block_def* [ %6, %cond.end ], [ %bb.0, %for.inc99 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !9643
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !9643
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !9608, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata %struct.omp_region* %cur_region.0, metadata !9609, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i8 %fallthru.0, metadata !9627, metadata !DIExpression()), !dbg !9644
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 1, !dbg !9641
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9641
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %8, !dbg !9641
  br i1 %cmp, label %for.end101, label %for.body, !dbg !9640

for.body:                                         ; preds = %for.cond
  %call12 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb.0) #7, !dbg !9645
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !9623, metadata !DIExpression()), !dbg !9644
  %tobool13 = icmp eq %union.gimple_statement_d* %call12, null, !dbg !9646
  br i1 %tobool13, label %if.end88, label %if.then, !dbg !9647

if.then:                                          ; preds = %for.body
  %call14 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call12) #7, !dbg !9648
  call void @llvm.dbg.value(metadata i32 %call14, metadata !9628, metadata !DIExpression()), !dbg !9649
  switch i32 %call14, label %sw.default80 [
    i32 3, label %sw.bb
    i32 9, label %sw.bb15
    i32 1, label %sw.bb20
    i32 5, label %sw.bb21
    i32 14, label %sw.bb22
    i32 15, label %sw.bb23
    i32 8, label %sw.bb25
    i32 6, label %sw.bb31
    i32 7, label %sw.bb36
    i32 26, label %sw.bb37
    i32 27, label %sw.bb37
    i32 23, label %sw.bb37
    i32 32, label %sw.bb37
    i32 24, label %sw.bb37
    i32 25, label %sw.bb37
    i32 22, label %sw.bb37
    i32 29, label %sw.bb37
    i32 30, label %sw.bb39
    i32 31, label %if.end88
    i32 19, label %sw.bb42
    i32 20, label %sw.bb42
    i32 28, label %sw.bb43
    i32 21, label %sw.bb47
  ], !dbg !9650

sw.bb:                                            ; preds = %if.then
  tail call fastcc void @make_goto_expr_edges(%struct.basic_block_def* %bb.0) #7, !dbg !9651
  call void @llvm.dbg.value(metadata i8 0, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9652

sw.bb15:                                          ; preds = %if.then
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9653
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !9653
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !9653
  %x_exit_block_ptr18 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !9653
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr18, align 8, !dbg !9653
  %call19 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %11, i32 0) #6, !dbg !9654
  call void @llvm.dbg.value(metadata i8 0, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9655

sw.bb20:                                          ; preds = %if.then
  tail call fastcc void @make_cond_expr_edges(%struct.basic_block_def* %bb.0) #7, !dbg !9656
  call void @llvm.dbg.value(metadata i8 0, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9657

sw.bb21:                                          ; preds = %if.then
  tail call fastcc void @make_gimple_switch_edges(%struct.basic_block_def* %bb.0) #7, !dbg !9658
  call void @llvm.dbg.value(metadata i8 0, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9659

sw.bb22:                                          ; preds = %if.then
  tail call void @make_eh_edges(%union.gimple_statement_d* nonnull %call12) #6, !dbg !9660
  call void @llvm.dbg.value(metadata i8 0, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9661

sw.bb23:                                          ; preds = %if.then
  %call24 = tail call zeroext i8 @make_eh_dispatch_edges(%union.gimple_statement_d* nonnull %call12) #6, !dbg !9662
  call void @llvm.dbg.value(metadata i8 %call24, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9663

sw.bb25:                                          ; preds = %if.then
  %call26 = tail call zeroext i8 @stmt_can_make_abnormal_goto(%union.gimple_statement_d* nonnull %call12) #7, !dbg !9664
  %tobool27 = icmp eq i8 %call26, 0, !dbg !9664
  br i1 %tobool27, label %if.end, label %if.then28, !dbg !9666

if.then28:                                        ; preds = %sw.bb25
  tail call void @make_abnormal_goto_edges(%struct.basic_block_def* %bb.0, i8 zeroext 1) #7, !dbg !9667
  br label %if.end, !dbg !9667

if.end:                                           ; preds = %sw.bb25, %if.then28
  tail call void @make_eh_edges(%union.gimple_statement_d* nonnull %call12) #6, !dbg !9668
  %call29 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* nonnull %call12) #6, !dbg !9669
  %and = lshr i32 %call29, 3, !dbg !9670
  %12 = trunc i32 %and to i8, !dbg !9670
  %13 = and i8 %12, 1, !dbg !9670
  %14 = xor i8 %13, 1, !dbg !9670
  call void @llvm.dbg.value(metadata i8 %14, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9671

sw.bb31:                                          ; preds = %if.then
  %call32 = tail call zeroext i8 @is_ctrl_altering_stmt(%union.gimple_statement_d* nonnull %call12) #7, !dbg !9672
  %tobool33 = icmp eq i8 %call32, 0, !dbg !9672
  br i1 %tobool33, label %if.end88, label %if.then34, !dbg !9674

if.then34:                                        ; preds = %sw.bb31
  tail call void @make_eh_edges(%union.gimple_statement_d* nonnull %call12) #6, !dbg !9675
  br label %if.end88, !dbg !9675

sw.bb36:                                          ; preds = %if.then
  tail call fastcc void @make_gimple_asm_edges(%struct.basic_block_def* %bb.0) #7, !dbg !9676
  call void @llvm.dbg.value(metadata i8 1, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9677

sw.bb37:                                          ; preds = %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then
  %call38 = tail call %struct.omp_region* @new_omp_region(%struct.basic_block_def* %bb.0, i32 %call14, %struct.omp_region* %cur_region.0) #6, !dbg !9678
  call void @llvm.dbg.value(metadata %struct.omp_region* %call38, metadata !9609, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i8 1, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9679

sw.bb39:                                          ; preds = %if.then
  %call40 = tail call %struct.omp_region* @new_omp_region(%struct.basic_block_def* %bb.0, i32 30, %struct.omp_region* %cur_region.0) #6, !dbg !9680
  call void @llvm.dbg.value(metadata %struct.omp_region* %call40, metadata !9609, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i8 1, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9681

sw.bb42:                                          ; preds = %if.then, %if.then
  call void @llvm.dbg.value(metadata i8 1, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9682

sw.bb43:                                          ; preds = %if.then
  %exit = getelementptr inbounds %struct.omp_region, %struct.omp_region* %cur_region.0, i64 0, i32 4, !dbg !9683
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %exit, align 8, !dbg !9684
  %type = getelementptr inbounds %struct.omp_region, %struct.omp_region* %cur_region.0, i64 0, i32 7, !dbg !9685
  %15 = load i32, i32* %type, align 8, !dbg !9685
  %cmp44 = icmp ne i32 %15, 29, !dbg !9686
  %conv46 = zext i1 %cmp44 to i8, !dbg !9687
  call void @llvm.dbg.value(metadata i8 %conv46, metadata !9627, metadata !DIExpression()), !dbg !9644
  %outer = getelementptr inbounds %struct.omp_region, %struct.omp_region* %cur_region.0, i64 0, i32 0, !dbg !9688
  %16 = load %struct.omp_region*, %struct.omp_region** %outer, align 8, !dbg !9688
  call void @llvm.dbg.value(metadata %struct.omp_region* %16, metadata !9609, metadata !DIExpression()), !dbg !9636
  br label %if.end88, !dbg !9689

sw.bb47:                                          ; preds = %if.then
  %cont = getelementptr inbounds %struct.omp_region, %struct.omp_region* %cur_region.0, i64 0, i32 5, !dbg !9690
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %cont, align 8, !dbg !9691
  %type48 = getelementptr inbounds %struct.omp_region, %struct.omp_region* %cur_region.0, i64 0, i32 7, !dbg !9692
  %17 = load i32, i32* %type48, align 8, !dbg !9692
  switch i32 %17, label %sw.default [
    i32 23, label %sw.bb49
    i32 30, label %sw.bb60
  ], !dbg !9693

sw.bb49:                                          ; preds = %sw.bb47
  %entry50 = getelementptr inbounds %struct.omp_region, %struct.omp_region* %cur_region.0, i64 0, i32 3, !dbg !9694
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %entry50, align 8, !dbg !9694
  %call51 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %18) #7, !dbg !9695
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call51, i64 0, i32 7, !dbg !9696
  %19 = load i32, i32* %flags, align 8, !dbg !9697
  %or = or i32 %19, 2, !dbg !9697
  store i32 %or, i32* %flags, align 8, !dbg !9697
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %entry50, align 8, !dbg !9698
  %call53 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %20) #7, !dbg !9699
  %call54 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %call53, i32 2) #6, !dbg !9700
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %entry50, align 8, !dbg !9701
  %next_bb56 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !9702
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb56, align 8, !dbg !9702
  %call57 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %21, %struct.basic_block_def* %22, i32 2) #6, !dbg !9703
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb56, align 8, !dbg !9704
  %call59 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %23, i32 3) #6, !dbg !9705
  call void @llvm.dbg.value(metadata i8 0, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9706

sw.bb60:                                          ; preds = %sw.bb47
  %entry61 = getelementptr inbounds %struct.omp_region, %struct.omp_region* %cur_region.0, i64 0, i32 3, !dbg !9707
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %entry61, align 8, !dbg !9707
  %call62 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %24) #7, !dbg !9708
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call62, metadata !9631, metadata !DIExpression()), !dbg !9709
  %inner = getelementptr inbounds %struct.omp_region, %struct.omp_region* %cur_region.0, i64 0, i32 1, !dbg !9710
  br label %for.cond63, !dbg !9712

for.cond63:                                       ; preds = %cond.end71, %sw.bb60
  %i.0.in = phi %struct.omp_region** [ %inner, %sw.bb60 ], [ %next, %cond.end71 ]
  %i.0 = load %struct.omp_region*, %struct.omp_region** %i.0.in, align 8, !dbg !9713
  call void @llvm.dbg.value(metadata %struct.omp_region* %i.0, metadata !9635, metadata !DIExpression()), !dbg !9709
  %tobool64 = icmp eq %struct.omp_region* %i.0, null, !dbg !9714
  br i1 %tobool64, label %for.end, label %for.body65, !dbg !9714

for.body65:                                       ; preds = %for.cond63
  %type66 = getelementptr inbounds %struct.omp_region, %struct.omp_region* %i.0, i64 0, i32 7, !dbg !9715
  %25 = load i32, i32* %type66, align 8, !dbg !9715
  %cmp67 = icmp eq i32 %25, 29, !dbg !9715
  br i1 %cmp67, label %cond.end71, label %cond.true69, !dbg !9715

cond.true69:                                      ; preds = %for.body65
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9715
  br label %cond.end71, !dbg !9715

cond.end71:                                       ; preds = %for.body65, %cond.true69
  %entry73 = getelementptr inbounds %struct.omp_region, %struct.omp_region* %i.0, i64 0, i32 3, !dbg !9718
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %entry73, align 8, !dbg !9718
  %call74 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call62, %struct.basic_block_def* %26, i32 0) #6, !dbg !9719
  %exit75 = getelementptr inbounds %struct.omp_region, %struct.omp_region* %i.0, i64 0, i32 4, !dbg !9720
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %exit75, align 8, !dbg !9720
  %call76 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %27, %struct.basic_block_def* %bb.0, i32 1) #6, !dbg !9721
  %next = getelementptr inbounds %struct.omp_region, %struct.omp_region* %i.0, i64 0, i32 2, !dbg !9722
  br label %for.cond63, !dbg !9723, !llvm.loop !9724

for.end:                                          ; preds = %for.cond63
  %call77 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %call62, i32 0) #6, !dbg !9726
  %next_bb78 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !9727
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb78, align 8, !dbg !9727
  %call79 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call62, %struct.basic_block_def* %28, i32 0) #6, !dbg !9728
  call void @llvm.dbg.value(metadata i8 0, metadata !9627, metadata !DIExpression()), !dbg !9644
  br label %if.end88, !dbg !9729

sw.default:                                       ; preds = %sw.bb47
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 661, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9730
  br label %if.end88, !dbg !9731

sw.default80:                                     ; preds = %if.then
  %call81 = tail call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* nonnull %call12) #7, !dbg !9732
  %tobool82 = icmp eq i8 %call81, 0, !dbg !9732
  br i1 %tobool82, label %if.end88, label %cond.true83, !dbg !9732

cond.true83:                                      ; preds = %sw.default80
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 666, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9732
  br label %if.end88, !dbg !9732

if.end88:                                         ; preds = %sw.default80, %sw.bb31, %for.body, %sw.bb, %sw.bb15, %sw.bb20, %sw.bb21, %sw.bb22, %sw.bb23, %if.end, %sw.bb36, %sw.bb37, %sw.bb39, %sw.bb42, %sw.bb43, %if.then34, %if.then, %sw.default, %for.end, %sw.bb49, %cond.true83
  %fallthru.3 = phi i8 [ %conv46, %sw.bb43 ], [ 1, %sw.bb42 ], [ 1, %sw.bb39 ], [ 1, %sw.bb37 ], [ 1, %sw.bb36 ], [ %14, %if.end ], [ %call24, %sw.bb23 ], [ 0, %sw.bb22 ], [ 0, %sw.bb21 ], [ 0, %sw.bb20 ], [ 0, %sw.bb15 ], [ 0, %sw.bb ], [ 1, %if.then34 ], [ 1, %sw.bb31 ], [ 0, %if.then ], [ %fallthru.0, %sw.default ], [ 0, %for.end ], [ 0, %sw.bb49 ], [ 1, %sw.default80 ], [ 1, %cond.true83 ], [ 1, %for.body ], !dbg !9733
  %cur_region.2 = phi %struct.omp_region* [ %16, %sw.bb43 ], [ %cur_region.0, %sw.bb42 ], [ %call40, %sw.bb39 ], [ %call38, %sw.bb37 ], [ %cur_region.0, %sw.bb36 ], [ %cur_region.0, %if.end ], [ %cur_region.0, %sw.bb23 ], [ %cur_region.0, %sw.bb22 ], [ %cur_region.0, %sw.bb21 ], [ %cur_region.0, %sw.bb20 ], [ %cur_region.0, %sw.bb15 ], [ %cur_region.0, %sw.bb ], [ %cur_region.0, %if.then34 ], [ %cur_region.0, %sw.bb31 ], [ %cur_region.0, %if.then ], [ %cur_region.0, %sw.default ], [ %cur_region.0, %for.end ], [ %cur_region.0, %sw.bb49 ], [ %cur_region.0, %sw.default80 ], [ %cur_region.0, %cond.true83 ], [ %cur_region.0, %for.body ], !dbg !9642
  call void @llvm.dbg.value(metadata %struct.omp_region* %cur_region.2, metadata !9609, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i8 %fallthru.3, metadata !9627, metadata !DIExpression()), !dbg !9644
  %tobool89 = icmp eq i8 %fallthru.3, 0, !dbg !9734
  br i1 %tobool89, label %for.inc99, label %if.then90, !dbg !9736

if.then90:                                        ; preds = %if.end88
  %next_bb91 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !9737
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb91, align 8, !dbg !9737
  %call92 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %29, i32 1) #6, !dbg !9739
  br i1 %tobool13, label %for.inc99, label %if.then94, !dbg !9740

if.then94:                                        ; preds = %if.then90
  %call95 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %call12) #7, !dbg !9741
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb91, align 8, !dbg !9743
  tail call fastcc void @assign_discriminator(i32 %call95, %struct.basic_block_def* %30) #7, !dbg !9744
  br label %for.inc99, !dbg !9744

for.inc99:                                        ; preds = %if.then90, %if.end88, %if.then94
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9641
  %cfg11.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !9745
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11.phi.trans.insert, align 8, !dbg !9641
  br label %for.cond, !dbg !9641, !llvm.loop !9746

for.end101:                                       ; preds = %for.cond
  %31 = load %struct.omp_region*, %struct.omp_region** @root_omp_region, align 8, !dbg !9748
  %tobool102 = icmp eq %struct.omp_region* %31, null, !dbg !9748
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !9750

if.then103:                                       ; preds = %for.end101
  tail call void @free_omp_regions() #6, !dbg !9751
  br label %if.end104, !dbg !9751

if.end104:                                        ; preds = %for.end101, %if.then103
  tail call void @fold_cond_expr_cond() #7, !dbg !9752
  ret void, !dbg !9753
}

declare dso_local %struct._IO_FILE* @dump_begin(i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gimple_cfg2vcg(%struct._IO_FILE* %file) unnamed_addr #5 !dbg !9754 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp38 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !9756, metadata !DIExpression()), !dbg !9772
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !9773
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9773
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !9774
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9774
  %2 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !9775
  %3 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !9776
  %call = tail call i8* %2(%union.tree_node* %3, i32 2) #6, !dbg !9777
  call void @llvm.dbg.value(metadata i8* %call, metadata !9760, metadata !DIExpression()), !dbg !9772
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i64 0, i64 0), i8* %call) #6, !dbg !9778
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !9779
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !9780
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !9781
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !9781
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9781
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !9781
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9781
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !9781
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !9781
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 1, !dbg !9781
  %call4 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !9781
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !9781
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call4, 0, !dbg !9781
  store i32 %9, i32* %8, align 8, !dbg !9781
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !9781
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call4, 1, !dbg !9781
  store %struct.VEC_edge_gc** %11, %struct.VEC_edge_gc*** %10, align 8, !dbg !9781
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !9781
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !9781
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !9783
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !9783
  br label %for.cond, !dbg !9781

for.cond:                                         ; preds = %if.end, %entry
  %14 = load i32, i32* %12, align 8, !dbg !9785
  %15 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %13, align 8, !dbg !9785
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !9757, metadata !DIExpression(DW_OP_deref)), !dbg !9772
  %call5 = call fastcc zeroext i8 @ei_cond(i32 %14, %struct.VEC_edge_gc** %15, %struct.edge_def** nonnull %e) #7, !dbg !9785
  %tobool = icmp eq i8 %call5, 0, !dbg !9781
  br i1 %tobool, label %for.end, label %for.body, !dbg !9781

for.body:                                         ; preds = %for.cond
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9786
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !9757, metadata !DIExpression()), !dbg !9772
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 1, !dbg !9788
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !9788
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 9, !dbg !9789
  %18 = load i32, i32* %index, align 8, !dbg !9789
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.53, i64 0, i64 0), i32 %18) #6, !dbg !9790
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9791
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !9757, metadata !DIExpression()), !dbg !9772
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i64 0, i32 7, !dbg !9793
  %20 = load i32, i32* %flags, align 8, !dbg !9793
  %and = and i32 %20, 16, !dbg !9794
  %tobool7 = icmp eq i32 %and, 0, !dbg !9794
  br i1 %tobool7, label %if.else, label %if.then, !dbg !9795

if.then:                                          ; preds = %for.body
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.54, i64 0, i64 0)) #6, !dbg !9796
  br label %if.end, !dbg !9796

if.else:                                          ; preds = %for.body
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.55, i64 0, i64 0)) #6, !dbg !9797
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #6, !dbg !9798
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9758, metadata !DIExpression(DW_OP_deref)), !dbg !9772
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9785
  br label %for.cond, !dbg !9785, !llvm.loop !9799

for.end:                                          ; preds = %for.cond
  %call11 = call i32 @fputc(i32 10, %struct._IO_FILE* %file) #6, !dbg !9801
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9802
  %cfg13 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 1, !dbg !9802
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg13, align 8, !dbg !9802
  %x_entry_block_ptr14 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i64 0, i32 0, !dbg !9802
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr14, align 8, !dbg !9802
  %24 = bitcast %struct.edge_iterator* %tmp38 to i8*, !dbg !9803
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp38, i64 0, i32 0, !dbg !9803
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp38, i64 0, i32 1, !dbg !9803
  br label %for.cond15, !dbg !9802

for.cond15:                                       ; preds = %for.inc78, %for.end
  %27 = phi %struct.control_flow_graph* [ %22, %for.end ], [ %.pre1, %for.inc78 ], !dbg !9805
  %.pn = phi %struct.basic_block_def* [ %23, %for.end ], [ %bb.0, %for.inc78 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !9806
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !9806
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !9759, metadata !DIExpression()), !dbg !9772
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 1, !dbg !9805
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !9805
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %28, !dbg !9805
  br i1 %cmp, label %for.end80, label %for.body18, !dbg !9802

for.body18:                                       ; preds = %for.cond15
  call void @llvm.dbg.value(metadata i32 0, metadata !9768, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 0, metadata !9769, metadata !DIExpression()), !dbg !9807
  %call19 = call %union.gimple_statement_d* @first_stmt(%struct.basic_block_def* %bb.0) #7, !dbg !9808
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !9770, metadata !DIExpression()), !dbg !9807
  %call20 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb.0) #7, !dbg !9809
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20, metadata !9771, metadata !DIExpression()), !dbg !9807
  %tobool21 = icmp eq %union.gimple_statement_d* %call19, null, !dbg !9810
  br i1 %tobool21, label %if.end26, label %if.then22, !dbg !9812

if.then22:                                        ; preds = %for.body18
  %call23 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call19) #7, !dbg !9813
  call void @llvm.dbg.value(metadata i32 %call23, metadata !9761, metadata !DIExpression()), !dbg !9807
  %idxprom = zext i32 %call23 to i64, !dbg !9815
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @gimple_code_name, i64 0, i64 %idxprom, !dbg !9815
  %29 = load i8*, i8** %arrayidx, align 8, !dbg !9815
  call void @llvm.dbg.value(metadata i8* %29, metadata !9766, metadata !DIExpression()), !dbg !9807
  %call24 = call fastcc i32 @get_lineno(%union.gimple_statement_d* nonnull %call19) #7, !dbg !9816
  call void @llvm.dbg.value(metadata i32 %call24, metadata !9768, metadata !DIExpression()), !dbg !9807
  br label %if.end26, !dbg !9817

if.end26:                                         ; preds = %for.body18, %if.then22
  %head_name.0 = phi i8* [ %29, %if.then22 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0), %for.body18 ], !dbg !9818
  %head_line.0 = phi i32 [ %call24, %if.then22 ], [ 0, %for.body18 ], !dbg !9807
  call void @llvm.dbg.value(metadata i32 %head_line.0, metadata !9768, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i8* %head_name.0, metadata !9766, metadata !DIExpression()), !dbg !9807
  %tobool27 = icmp eq %union.gimple_statement_d* %call20, null, !dbg !9819
  br i1 %tobool27, label %if.end34, label %if.then28, !dbg !9821

if.then28:                                        ; preds = %if.end26
  %call29 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call20) #7, !dbg !9822
  call void @llvm.dbg.value(metadata i32 %call29, metadata !9765, metadata !DIExpression()), !dbg !9807
  %idxprom30 = zext i32 %call29 to i64, !dbg !9824
  %arrayidx31 = getelementptr inbounds [0 x i8*], [0 x i8*]* @gimple_code_name, i64 0, i64 %idxprom30, !dbg !9824
  %30 = load i8*, i8** %arrayidx31, align 8, !dbg !9824
  call void @llvm.dbg.value(metadata i8* %30, metadata !9767, metadata !DIExpression()), !dbg !9807
  %call32 = call fastcc i32 @get_lineno(%union.gimple_statement_d* nonnull %call20) #7, !dbg !9825
  call void @llvm.dbg.value(metadata i32 %call32, metadata !9769, metadata !DIExpression()), !dbg !9807
  br label %if.end34, !dbg !9826

if.end34:                                         ; preds = %if.end26, %if.then28
  %end_name.0 = phi i8* [ %30, %if.then28 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0), %if.end26 ], !dbg !9827
  %end_line.0 = phi i32 [ %call32, %if.then28 ], [ 0, %if.end26 ], !dbg !9807
  call void @llvm.dbg.value(metadata i32 %end_line.0, metadata !9769, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i8* %end_name.0, metadata !9767, metadata !DIExpression()), !dbg !9807
  %index35 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !9828
  %31 = load i32, i32* %index35, align 8, !dbg !9828
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.58, i64 0, i64 0), i32 %31, i32 %31, i8* %head_name.0, i32 %head_line.0, i8* %end_name.0, i32 %end_line.0) #6, !dbg !9829
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8, !dbg !9830
  %succs39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !9830
  %call40 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs39) #7, !dbg !9830
  %32 = extractvalue { i32, %struct.VEC_edge_gc** } %call40, 0, !dbg !9830
  store i32 %32, i32* %25, align 8, !dbg !9830
  %33 = extractvalue { i32, %struct.VEC_edge_gc** } %call40, 1, !dbg !9830
  store %struct.VEC_edge_gc** %33, %struct.VEC_edge_gc*** %26, align 8, !dbg !9830
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %24, i64 16, i1 false), !dbg !9830
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8, !dbg !9830
  br label %for.cond41, !dbg !9830

for.cond41:                                       ; preds = %if.end66, %if.end34
  %34 = load i32, i32* %12, align 8, !dbg !9831
  %35 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %13, align 8, !dbg !9831
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !9757, metadata !DIExpression(DW_OP_deref)), !dbg !9772
  %call42 = call fastcc zeroext i8 @ei_cond(i32 %34, %struct.VEC_edge_gc** %35, %struct.edge_def** nonnull %e) #7, !dbg !9831
  %tobool43 = icmp eq i8 %call42, 0, !dbg !9830
  br i1 %tobool43, label %for.end69, label %for.body44, !dbg !9830

for.body44:                                       ; preds = %for.cond41
  %36 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9833
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !9757, metadata !DIExpression()), !dbg !9772
  %dest45 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %36, i64 0, i32 1, !dbg !9836
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %dest45, align 8, !dbg !9836
  %38 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9837
  %cfg47 = getelementptr inbounds %struct.function, %struct.function* %38, i64 0, i32 1, !dbg !9837
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg47, align 8, !dbg !9837
  %x_exit_block_ptr48 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i64 0, i32 1, !dbg !9837
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr48, align 8, !dbg !9837
  %cmp49 = icmp eq %struct.basic_block_def* %37, %40, !dbg !9838
  %41 = load i32, i32* %index35, align 8, !dbg !9839
  br i1 %cmp49, label %if.then50, label %if.else53, !dbg !9840

if.then50:                                        ; preds = %for.body44
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i32 %41) #6, !dbg !9841
  br label %if.end58, !dbg !9841

if.else53:                                        ; preds = %for.body44
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !9757, metadata !DIExpression()), !dbg !9772
  %index56 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i64 0, i32 9, !dbg !9842
  %42 = load i32, i32* %index56, align 8, !dbg !9842
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.60, i64 0, i64 0), i32 %41, i32 %42) #6, !dbg !9843
  br label %if.end58

if.end58:                                         ; preds = %if.else53, %if.then50
  %43 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !9844
  call void @llvm.dbg.value(metadata %struct.edge_def* %43, metadata !9757, metadata !DIExpression()), !dbg !9772
  %flags59 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %43, i64 0, i32 7, !dbg !9846
  %44 = load i32, i32* %flags59, align 8, !dbg !9846
  %and60 = and i32 %44, 16, !dbg !9847
  %tobool61 = icmp eq i32 %and60, 0, !dbg !9847
  br i1 %tobool61, label %if.else64, label %if.then62, !dbg !9848

if.then62:                                        ; preds = %if.end58
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !9849
  br label %if.end66, !dbg !9849

if.else64:                                        ; preds = %if.end58
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !9850
  br label %if.end66

if.end66:                                         ; preds = %if.else64, %if.then62
  %call67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #6, !dbg !9851
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !9758, metadata !DIExpression(DW_OP_deref)), !dbg !9772
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !9831
  br label %for.cond41, !dbg !9831, !llvm.loop !9852

for.end69:                                        ; preds = %for.cond41
  %next_bb70 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !9854
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb70, align 8, !dbg !9854
  %46 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9856
  %cfg72 = getelementptr inbounds %struct.function, %struct.function* %46, i64 0, i32 1, !dbg !9856
  %47 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg72, align 8, !dbg !9856
  %x_exit_block_ptr73 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %47, i64 0, i32 1, !dbg !9856
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr73, align 8, !dbg !9856
  %cmp74 = icmp eq %struct.basic_block_def* %45, %48, !dbg !9857
  br i1 %cmp74, label %for.inc78, label %if.then75, !dbg !9858

if.then75:                                        ; preds = %for.end69
  %call76 = call i32 @fputc(i32 10, %struct._IO_FILE* %file) #6, !dbg !9859
  %.pre.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9805
  %cfg17.phi.trans.insert.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre.pre, i64 0, i32 1, !dbg !9860
  %.pre1.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17.phi.trans.insert.phi.trans.insert, align 8, !dbg !9805
  br label %for.inc78, !dbg !9859

for.inc78:                                        ; preds = %for.end69, %if.then75
  %.pre1 = phi %struct.control_flow_graph* [ %47, %for.end69 ], [ %.pre1.pre, %if.then75 ], !dbg !9805
  br label %for.cond15, !dbg !9805, !llvm.loop !9861

for.end80:                                        ; preds = %for.cond15
  %call81 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), %struct._IO_FILE* %file) #6, !dbg !9863
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !9864
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9864
  ret void, !dbg !9864
}

declare dso_local void @dump_end(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !9865 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !9869, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !9870, metadata !DIExpression()), !dbg !9872
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !9873
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !9874
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !9875
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !9876
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !9877
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !9878
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !9879

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !9880
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !9880
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !9881
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !9882

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !9883
  br label %cond.end, !dbg !9882

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !9882
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !9884
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !9885
  ret void, !dbg !9886
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @stmt_starts_bb_p(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %prev_stmt) unnamed_addr #0 !dbg !9887 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9891, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %prev_stmt, metadata !9892, metadata !DIExpression()), !dbg !9893
  %cmp = icmp eq %union.gimple_statement_d* %stmt, null, !dbg !9894
  br i1 %cmp, label %return, label %if.end, !dbg !9896

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %stmt) #7, !dbg !9897
  %cmp1 = icmp eq i32 %call, 4, !dbg !9899
  br i1 %cmp1, label %if.then2, label %return, !dbg !9900

if.then2:                                         ; preds = %if.end
  %call3 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* nonnull %stmt) #7, !dbg !9901
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9901
  %0 = bitcast i40* %nonlocal_flag to i64*, !dbg !9901
  %bf.load = load i64, i64* %0, align 8, !dbg !9901
  %bf.cast1 = and i64 %bf.load, 256, !dbg !9901
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !9901
  br i1 %tobool, label %lor.lhs.false, label %return, !dbg !9904

lor.lhs.false:                                    ; preds = %if.then2
  %call4 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* nonnull %stmt) #7, !dbg !9905
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9905
  %bf.load5 = load i64, i64* %1, align 8, !dbg !9905
  %bf.cast82 = and i64 %bf.load5, 65536, !dbg !9905
  %tobool9 = icmp eq i64 %bf.cast82, 0, !dbg !9905
  %tobool12 = icmp ne %union.gimple_statement_d* %prev_stmt, null, !dbg !9906
  %or.cond = and i1 %tobool9, %tobool12, !dbg !9908
  br i1 %or.cond, label %land.lhs.true, label %return, !dbg !9908

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %prev_stmt) #7, !dbg !9909
  %cmp14 = icmp eq i32 %call13, 4, !dbg !9910
  br i1 %cmp14, label %if.then15, label %return, !dbg !9911

if.then15:                                        ; preds = %land.lhs.true
  %call16 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* nonnull %prev_stmt) #7, !dbg !9912
  %nonlocal_flag18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9912
  %2 = bitcast i40* %nonlocal_flag18 to i64*, !dbg !9912
  %bf.load19 = load i64, i64* %2, align 8, !dbg !9912
  %bf.cast223 = and i64 %bf.load19, 256, !dbg !9912
  %tobool23 = icmp eq i64 %bf.cast223, 0, !dbg !9912
  br i1 %tobool23, label %if.end25, label %return, !dbg !9915

if.end25:                                         ; preds = %if.then15
  %3 = load i64, i64* getelementptr inbounds (%struct.cfg_stats_d, %struct.cfg_stats_d* @cfg_stats, i64 0, i32 0), align 8, !dbg !9916
  %inc = add nsw i64 %3, 1, !dbg !9916
  store i64 %inc, i64* getelementptr inbounds (%struct.cfg_stats_d, %struct.cfg_stats_d* @cfg_stats, i64 0, i32 0), align 8, !dbg !9916
  br label %return, !dbg !9917

return:                                           ; preds = %if.then15, %if.then2, %lor.lhs.false, %if.end, %land.lhs.true, %entry, %if.end25
  %retval.0 = phi i8 [ 0, %if.end25 ], [ 0, %entry ], [ 1, %lor.lhs.false ], [ 1, %if.then2 ], [ 1, %if.then15 ], [ 1, %land.lhs.true ], [ 0, %if.end ], !dbg !9893
  ret i8 %retval.0, !dbg !9918
}

declare dso_local %struct.gimple_seq_d* @gsi_split_seq_before(%struct.gimple_stmt_iterator*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @create_basic_block(i8*, i8*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @gimple_set_bb(%union.gimple_statement_d*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !9919 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9921, metadata !DIExpression()), !dbg !9922
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !9923
  %tobool = icmp eq i8 %call, 0, !dbg !9923
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !9924

lor.rhs:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !9925
  %tobool3 = icmp eq i8 %call1, 0, !dbg !9925
  br i1 %tobool3, label %lor.end, label %land.rhs, !dbg !9926

land.rhs:                                         ; preds = %lor.rhs
  %call4 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !9927
  %cmp = icmp ne %union.tree_node* %call4, null, !dbg !9928
  %phitmp = zext i1 %cmp to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry, %land.rhs
  %0 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !9929
}

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_location(%union.gimple_statement_d* %g, i32 %location) unnamed_addr #0 !dbg !9930 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i32 %location, metadata !9935, metadata !DIExpression()), !dbg !9936
  %location1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !9937
  store i32 %location, i32* %location1, align 8, !dbg !9938
  ret void, !dbg !9939
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_block(%union.gimple_statement_d* %g, %union.tree_node* %block) unnamed_addr #0 !dbg !9940 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9942, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !9943, metadata !DIExpression()), !dbg !9944
  %block1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !9945
  store %union.tree_node* %block, %union.tree_node** %block1, align 8, !dbg !9946
  ret void, !dbg !9947
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9948 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9950, metadata !DIExpression()), !dbg !9951
  %block = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !9952
  %0 = load %union.tree_node*, %union.tree_node** %block, align 8, !dbg !9952
  ret %union.tree_node* %0, !dbg !9953
}

declare dso_local void @gimple_set_lhs(%union.gimple_statement_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !9954 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !9958, metadata !DIExpression()), !dbg !9959
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !9960
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9960

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !9961
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !9961
  br label %cond.end, !dbg !9960

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !9960
  ret %struct.gimple_seq_node_d* %cond, !dbg !9962
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9963 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9965, metadata !DIExpression()), !dbg !9966
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !9967
  %cmp = icmp eq i32 %call, 6, !dbg !9968
  %conv1 = zext i1 %cmp to i8, !dbg !9967
  ret i8 %conv1, !dbg !9969
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9970 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9972, metadata !DIExpression()), !dbg !9973
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !9974
  ret %union.tree_node* %call, !dbg !9975
}

declare dso_local %union.gimple_statement_d* @gimple_build_goto(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @make_goto_expr_edges(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !9976 {
entry:
  %last = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9978, metadata !DIExpression()), !dbg !9986
  %0 = bitcast %struct.gimple_stmt_iterator* %last to i8*, !dbg !9987
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9987
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last, metadata !9979, metadata !DIExpression(DW_OP_deref)), !dbg !9986
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %last, %struct.basic_block_def* %bb) #7, !dbg !9988
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last, metadata !9979, metadata !DIExpression(DW_OP_deref)), !dbg !9986
  %call = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %last) #7, !dbg !9989
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !9980, metadata !DIExpression()), !dbg !9986
  %call1 = call zeroext i8 @simple_goto_p(%union.gimple_statement_d* %call) #7, !dbg !9990
  %tobool = icmp eq i8 %call1, 0, !dbg !9990
  br i1 %tobool, label %if.end11, label %if.then, !dbg !9991

if.then:                                          ; preds = %entry
  %call2 = call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %call) #7, !dbg !9992
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9981, metadata !DIExpression()), !dbg !9993
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9994
  %call3 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %1, %union.tree_node* %call2) #7, !dbg !9994
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !9984, metadata !DIExpression()), !dbg !9993
  %call4 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %call3, i32 1) #6, !dbg !9995
  call void @llvm.dbg.value(metadata %struct.edge_def* %call4, metadata !9985, metadata !DIExpression()), !dbg !9993
  %call5 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !9996
  %goto_locus = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call4, i64 0, i32 5, !dbg !9997
  store i32 %call5, i32* %goto_locus, align 8, !dbg !9998
  call fastcc void @assign_discriminator(i32 %call5, %struct.basic_block_def* %call3) #7, !dbg !9999
  %2 = load i32, i32* %goto_locus, align 8, !dbg !10000
  %tobool8 = icmp eq i32 %2, 0, !dbg !10002
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !10003

if.then9:                                         ; preds = %if.then
  %call10 = call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %call) #7, !dbg !10004
  %goto_block = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call4, i64 0, i32 4, !dbg !10005
  store %union.tree_node* %call10, %union.tree_node** %goto_block, align 8, !dbg !10006
  br label %if.end, !dbg !10007

if.end:                                           ; preds = %if.then, %if.then9
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %last, metadata !9979, metadata !DIExpression(DW_OP_deref)), !dbg !9986
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %last, i8 zeroext 1) #6, !dbg !10008
  br label %cleanup

if.end11:                                         ; preds = %entry
  call void @make_abnormal_goto_edges(%struct.basic_block_def* %bb, i8 zeroext 0) #7, !dbg !10009
  br label %cleanup, !dbg !10010

cleanup:                                          ; preds = %if.end11, %if.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10010
  ret void, !dbg !10010
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_cond_expr_edges(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10011 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10013, metadata !DIExpression()), !dbg !10023
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !10024
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !10014, metadata !DIExpression()), !dbg !10023
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !10025
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10025

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 788, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10025
  br label %cond.end, !dbg !10025

cond.end:                                         ; preds = %entry, %cond.true
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !10026
  %cmp = icmp eq i32 %call2, 1, !dbg !10026
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !10026

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 789, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10026
  br label %cond.end5, !dbg !10026

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %call7 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !10027
  call void @llvm.dbg.value(metadata i32 %call7, metadata !10022, metadata !DIExpression()), !dbg !10023
  %call8 = tail call fastcc %union.tree_node* @gimple_cond_true_label(%union.gimple_statement_d* %call) #7, !dbg !10028
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !10019, metadata !DIExpression()), !dbg !10023
  %call9 = tail call fastcc %union.tree_node* @gimple_cond_false_label(%union.gimple_statement_d* %call) #7, !dbg !10029
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !10020, metadata !DIExpression()), !dbg !10023
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10030
  %call10 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %0, %union.tree_node* %call8) #7, !dbg !10030
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call10, metadata !10017, metadata !DIExpression()), !dbg !10023
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10031
  %call12 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %1, %union.tree_node* %call9) #7, !dbg !10031
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call12, metadata !10018, metadata !DIExpression()), !dbg !10023
  %call13 = tail call %union.gimple_statement_d* @first_stmt(%struct.basic_block_def* %call10) #7, !dbg !10032
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13, metadata !10015, metadata !DIExpression()), !dbg !10023
  %call14 = tail call %union.gimple_statement_d* @first_stmt(%struct.basic_block_def* %call12) #7, !dbg !10033
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call14, metadata !10016, metadata !DIExpression()), !dbg !10023
  %call15 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %call10, i32 1024) #6, !dbg !10034
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15, metadata !10021, metadata !DIExpression()), !dbg !10023
  tail call fastcc void @assign_discriminator(i32 %call7, %struct.basic_block_def* %call10) #7, !dbg !10035
  %call16 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call13) #7, !dbg !10036
  %goto_locus = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 5, !dbg !10037
  store i32 %call16, i32* %goto_locus, align 8, !dbg !10038
  %tobool18 = icmp eq i32 %call16, 0, !dbg !10039
  br i1 %tobool18, label %if.end, label %if.then, !dbg !10041

if.then:                                          ; preds = %cond.end5
  %call19 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %call13) #7, !dbg !10042
  %goto_block = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 4, !dbg !10043
  store %union.tree_node* %call19, %union.tree_node** %goto_block, align 8, !dbg !10044
  br label %if.end, !dbg !10045

if.end:                                           ; preds = %cond.end5, %if.then
  %call20 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %call12, i32 2048) #6, !dbg !10046
  call void @llvm.dbg.value(metadata %struct.edge_def* %call20, metadata !10021, metadata !DIExpression()), !dbg !10023
  %tobool21 = icmp eq %struct.edge_def* %call20, null, !dbg !10047
  br i1 %tobool21, label %if.end31, label %if.then22, !dbg !10049

if.then22:                                        ; preds = %if.end
  tail call fastcc void @assign_discriminator(i32 %call7, %struct.basic_block_def* %call12) #7, !dbg !10050
  %call23 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call14) #7, !dbg !10052
  %goto_locus24 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 5, !dbg !10053
  store i32 %call23, i32* %goto_locus24, align 8, !dbg !10054
  %tobool26 = icmp eq i32 %call23, 0, !dbg !10055
  br i1 %tobool26, label %if.end31, label %if.then27, !dbg !10057

if.then27:                                        ; preds = %if.then22
  %call28 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %call14) #7, !dbg !10058
  %goto_block29 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 4, !dbg !10059
  store %union.tree_node* %call28, %union.tree_node** %goto_block29, align 8, !dbg !10060
  br label %if.end31, !dbg !10061

if.end31:                                         ; preds = %if.then22, %if.end, %if.then27
  tail call fastcc void @gimple_cond_set_true_label(%union.gimple_statement_d* %call, %union.tree_node* null) #7, !dbg !10062
  tail call fastcc void @gimple_cond_set_false_label(%union.gimple_statement_d* %call, %union.tree_node* null) #7, !dbg !10063
  ret void, !dbg !10064
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_gimple_switch_edges(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10065 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10067, metadata !DIExpression()), !dbg !10077
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !10078
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !10068, metadata !DIExpression()), !dbg !10077
  %call2 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !10079
  call void @llvm.dbg.value(metadata i32 %call2, metadata !10069, metadata !DIExpression()), !dbg !10077
  %call3 = tail call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %call) #7, !dbg !10080
  %conv = zext i32 %call3 to i64, !dbg !10080
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10071, metadata !DIExpression()), !dbg !10077
  call void @llvm.dbg.value(metadata i64 0, metadata !10070, metadata !DIExpression()), !dbg !10077
  br label %for.cond, !dbg !10081

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !10082
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !10070, metadata !DIExpression()), !dbg !10077
  %exitcond = icmp eq i64 %i.0, %conv, !dbg !10083
  br i1 %exitcond, label %for.end, label %for.body, !dbg !10084

for.body:                                         ; preds = %for.cond
  %conv5 = trunc i64 %i.0 to i32, !dbg !10085
  %call6 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %call, i32 %conv5) #7, !dbg !10085
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10085
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !10085
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10085
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10072, metadata !DIExpression()), !dbg !10086
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10087
  %call7 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %1, %union.tree_node* %0) #7, !dbg !10087
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call7, metadata !10076, metadata !DIExpression()), !dbg !10086
  %call8 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %call7, i32 0) #6, !dbg !10088
  tail call fastcc void @assign_discriminator(i32 %call2, %struct.basic_block_def* %call7) #7, !dbg !10089
  %inc = add nuw nsw i64 %i.0, 1, !dbg !10090
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10070, metadata !DIExpression()), !dbg !10077
  br label %for.cond, !dbg !10091, !llvm.loop !10092

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10094
}

declare dso_local void @make_eh_edges(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @make_eh_dispatch_edges(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @make_gimple_asm_edges(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10095 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10097, metadata !DIExpression()), !dbg !10107
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !10108
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !10098, metadata !DIExpression()), !dbg !10107
  %call1 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !10109
  call void @llvm.dbg.value(metadata i32 %call1, metadata !10099, metadata !DIExpression()), !dbg !10107
  %call2 = tail call fastcc i32 @gimple_asm_nlabels(%union.gimple_statement_d* %call) #7, !dbg !10110
  call void @llvm.dbg.value(metadata i32 %call2, metadata !10101, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata i32 0, metadata !10100, metadata !DIExpression()), !dbg !10107
  br label %for.cond, !dbg !10111

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !10112
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10100, metadata !DIExpression()), !dbg !10107
  %cmp = icmp slt i32 %i.0, %call2, !dbg !10113
  br i1 %cmp, label %for.body, label %for.end, !dbg !10114

for.body:                                         ; preds = %for.cond
  %call3 = tail call fastcc %union.tree_node* @gimple_asm_label_op(%union.gimple_statement_d* %call, i32 %i.0) #7, !dbg !10115
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10115
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !10115
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !10102, metadata !DIExpression()), !dbg !10116
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10117
  %call4 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %2, %union.tree_node* %1) #7, !dbg !10117
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !10106, metadata !DIExpression()), !dbg !10116
  %call5 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %call4, i32 0) #6, !dbg !10118
  tail call fastcc void @assign_discriminator(i32 %call1, %struct.basic_block_def* %call4) #7, !dbg !10119
  %inc = add nuw nsw i32 %i.0, 1, !dbg !10120
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10100, metadata !DIExpression()), !dbg !10107
  br label %for.cond, !dbg !10121, !llvm.loop !10122

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10124
}

declare dso_local %struct.omp_region* @new_omp_region(%struct.basic_block_def*, i32, %struct.omp_region*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !10125 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10129, metadata !DIExpression()), !dbg !10130
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !10131
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !10132
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !10132
  ret %struct.basic_block_def* %0, !dbg !10133
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_discriminator(i32 %locus, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10134 {
entry:
  call void @llvm.dbg.value(metadata i32 %locus, metadata !10138, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10139, metadata !DIExpression()), !dbg !10142
  %cmp = icmp eq i32 %locus, 0, !dbg !10143
  br i1 %cmp, label %cleanup.cont, label %lor.lhs.false, !dbg !10145

lor.lhs.false:                                    ; preds = %entry
  %discriminator = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 12, !dbg !10146
  %0 = load i32, i32* %discriminator, align 4, !dbg !10146
  %cmp1 = icmp eq i32 %0, 0, !dbg !10147
  br i1 %cmp1, label %if.end, label %cleanup.cont, !dbg !10148

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call fastcc %union.gimple_statement_d* @first_non_label_stmt(%struct.basic_block_def* %bb) #7, !dbg !10149
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !10140, metadata !DIExpression()), !dbg !10142
  %call2 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #7, !dbg !10150
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !10141, metadata !DIExpression()), !dbg !10142
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !10151
  br i1 %tobool, label %lor.lhs.false6, label %land.lhs.true, !dbg !10153

land.lhs.true:                                    ; preds = %if.end
  %call3 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %call) #7, !dbg !10154
  %call4 = tail call fastcc zeroext i8 @same_line_p(i32 %locus, i32 %call3) #7, !dbg !10155
  %tobool5 = icmp eq i8 %call4, 0, !dbg !10155
  br i1 %tobool5, label %lor.lhs.false6, label %if.then13, !dbg !10156

lor.lhs.false6:                                   ; preds = %land.lhs.true, %if.end
  %tobool7 = icmp eq %union.gimple_statement_d* %call2, null, !dbg !10157
  br i1 %tobool7, label %cleanup.cont, label %land.lhs.true8, !dbg !10158

land.lhs.true8:                                   ; preds = %lor.lhs.false6
  %call9 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %call2) #7, !dbg !10159
  %call10 = tail call fastcc zeroext i8 @same_line_p(i32 %locus, i32 %call9) #7, !dbg !10160
  %tobool12 = icmp eq i8 %call10, 0, !dbg !10160
  br i1 %tobool12, label %cleanup.cont, label %if.then13, !dbg !10161

if.then13:                                        ; preds = %land.lhs.true, %land.lhs.true8
  %call14 = tail call fastcc i32 @next_discriminator_for_locus(i32 %locus) #7, !dbg !10162
  store i32 %call14, i32* %discriminator, align 4, !dbg !10163
  br label %cleanup.cont, !dbg !10164

cleanup.cont:                                     ; preds = %land.lhs.true8, %lor.lhs.false6, %lor.lhs.false, %entry, %if.then13
  ret void, !dbg !10165
}

declare dso_local void @free_omp_regions() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_non_label_stmt(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !10166 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10168, metadata !DIExpression()), !dbg !10170
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !10171
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10171
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !10169, metadata !DIExpression(DW_OP_deref)), !dbg !10170
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %i, %struct.basic_block_def* %bb) #7, !dbg !10172
  br label %while.cond, !dbg !10173

while.cond:                                       ; preds = %while.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !10169, metadata !DIExpression(DW_OP_deref)), !dbg !10170
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !10174
  %tobool = icmp eq i8 %call, 0, !dbg !10174
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !10175

land.rhs:                                         ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !10169, metadata !DIExpression(DW_OP_deref)), !dbg !10170
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !10176
  %call2 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !10177
  %cmp = icmp eq i32 %call2, 4, !dbg !10178
  br i1 %cmp, label %while.body, label %while.end, !dbg !10173

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !10169, metadata !DIExpression(DW_OP_deref)), !dbg !10170
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !10179
  br label %while.cond, !dbg !10173, !llvm.loop !10180

while.end:                                        ; preds = %while.cond, %land.rhs
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !10169, metadata !DIExpression(DW_OP_deref)), !dbg !10170
  %call3 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !10182
  %tobool4 = icmp eq i8 %call3, 0, !dbg !10182
  br i1 %tobool4, label %cond.true, label %cond.end, !dbg !10183

cond.true:                                        ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !10169, metadata !DIExpression(DW_OP_deref)), !dbg !10170
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !10184
  br label %cond.end, !dbg !10183

cond.end:                                         ; preds = %while.end, %cond.true
  %cond = phi %union.gimple_statement_d* [ %call5, %cond.true ], [ null, %while.end ], !dbg !10183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10185
  ret %union.gimple_statement_d* %cond, !dbg !10186
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @same_line_p(i32 %locus1, i32 %locus2) unnamed_addr #5 !dbg !10187 {
entry:
  %from = alloca %struct.expanded_location, align 8
  %to = alloca %struct.expanded_location, align 8
  %tmp = alloca %struct.expanded_location, align 8
  %tmp1 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata i32 %locus1, metadata !10191, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 %locus2, metadata !10192, metadata !DIExpression()), !dbg !10202
  %0 = bitcast %struct.expanded_location* %from to i8*, !dbg !10203
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10203
  %1 = bitcast %struct.expanded_location* %to to i8*, !dbg !10203
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !10203
  %cmp = icmp eq i32 %locus1, %locus2, !dbg !10204
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10206

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.expanded_location* %tmp to i8*, !dbg !10207
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !10207
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %locus1) #6, !dbg !10207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !10207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !10207
  %3 = bitcast %struct.expanded_location* %tmp1 to i8*, !dbg !10208
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !10208
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp1, i32 %locus2) #6, !dbg !10208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !10208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !10208
  %line = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %from, i64 0, i32 1, !dbg !10209
  %4 = load i32, i32* %line, align 8, !dbg !10209
  %line2 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %to, i64 0, i32 1, !dbg !10211
  %5 = load i32, i32* %line2, align 8, !dbg !10211
  %cmp3 = icmp eq i32 %4, %5, !dbg !10212
  br i1 %cmp3, label %if.end5, label %cleanup, !dbg !10213

if.end5:                                          ; preds = %if.end
  %file = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %from, i64 0, i32 0, !dbg !10214
  %6 = load i8*, i8** %file, align 8, !dbg !10214
  %file6 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %to, i64 0, i32 0, !dbg !10216
  %7 = load i8*, i8** %file6, align 8, !dbg !10216
  %cmp7 = icmp eq i8* %6, %7, !dbg !10217
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !10218

if.end9:                                          ; preds = %if.end5
  %cmp11 = icmp eq i8* %6, null, !dbg !10219
  br i1 %cmp11, label %land.end, label %land.lhs.true, !dbg !10220

land.lhs.true:                                    ; preds = %if.end9
  %cmp13 = icmp eq i8* %7, null, !dbg !10221
  br i1 %cmp13, label %land.end, label %land.rhs, !dbg !10222

land.rhs:                                         ; preds = %land.lhs.true
  %call = call i32 @strcmp(i8* nonnull %6, i8* nonnull %7) #6, !dbg !10223
  %cmp16 = icmp eq i32 %call, 0, !dbg !10224
  %phitmp = zext i1 %cmp16 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %if.end9, %land.rhs
  %8 = phi i8 [ 0, %land.lhs.true ], [ 0, %if.end9 ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !10225

cleanup:                                          ; preds = %if.end, %if.end5, %entry, %land.end
  %retval.0 = phi i8 [ %8, %land.end ], [ 1, %entry ], [ 0, %if.end ], [ 1, %if.end5 ], !dbg !10202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !10226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !10226
  ret i8 %retval.0, !dbg !10226
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @next_discriminator_for_locus(i32 %locus) unnamed_addr #5 !dbg !10227 {
entry:
  %item = alloca %struct.locus_discrim_map, align 4
  call void @llvm.dbg.value(metadata i32 %locus, metadata !10231, metadata !DIExpression()), !dbg !10234
  %0 = bitcast %struct.locus_discrim_map* %item to i8*, !dbg !10235
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10235
  %locus1 = getelementptr inbounds %struct.locus_discrim_map, %struct.locus_discrim_map* %item, i64 0, i32 0, !dbg !10236
  store i32 %locus, i32* %locus1, align 4, !dbg !10237
  %discriminator = getelementptr inbounds %struct.locus_discrim_map, %struct.locus_discrim_map* %item, i64 0, i32 1, !dbg !10238
  store i32 0, i32* %discriminator, align 4, !dbg !10239
  %1 = load %struct.htab*, %struct.htab** @discriminator_per_locus, align 8, !dbg !10240
  %call = call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %locus, i32 1) #6, !dbg !10241
  %2 = bitcast i8** %call to %struct.locus_discrim_map**, !dbg !10242
  call void @llvm.dbg.value(metadata %struct.locus_discrim_map** %2, metadata !10233, metadata !DIExpression()), !dbg !10234
  %tobool = icmp eq i8** %call, null, !dbg !10243
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10243

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 724, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10243
  br label %cond.end, !dbg !10243

cond.end:                                         ; preds = %entry, %cond.true
  %3 = load %struct.locus_discrim_map*, %struct.locus_discrim_map** %2, align 8, !dbg !10244
  %cmp = icmp eq %struct.locus_discrim_map* %3, null, !dbg !10246
  br i1 %cmp, label %if.then, label %if.end, !dbg !10247

if.then:                                          ; preds = %cond.end
  %call2 = call i8* @xmalloc(i64 8) #6, !dbg !10248
  store i8* %call2, i8** %call, align 8, !dbg !10250
  %tobool3 = icmp eq i8* %call2, null, !dbg !10251
  %4 = bitcast i8* %call2 to %struct.locus_discrim_map*, !dbg !10251
  br i1 %tobool3, label %cond.true4, label %cond.end6, !dbg !10251

cond.true4:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 728, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10251
  %.pre = load %struct.locus_discrim_map*, %struct.locus_discrim_map** %2, align 8, !dbg !10252
  br label %cond.end6, !dbg !10251

cond.end6:                                        ; preds = %if.then, %cond.true4
  %5 = phi %struct.locus_discrim_map* [ %4, %if.then ], [ %.pre, %cond.true4 ], !dbg !10252
  %locus8 = getelementptr inbounds %struct.locus_discrim_map, %struct.locus_discrim_map* %5, i64 0, i32 0, !dbg !10253
  store i32 %locus, i32* %locus8, align 4, !dbg !10254
  %6 = load %struct.locus_discrim_map*, %struct.locus_discrim_map** %2, align 8, !dbg !10255
  %discriminator9 = getelementptr inbounds %struct.locus_discrim_map, %struct.locus_discrim_map* %6, i64 0, i32 1, !dbg !10256
  store i32 0, i32* %discriminator9, align 4, !dbg !10257
  %.pre1 = load %struct.locus_discrim_map*, %struct.locus_discrim_map** %2, align 8, !dbg !10258
  br label %if.end, !dbg !10259

if.end:                                           ; preds = %cond.end6, %cond.end
  %7 = phi %struct.locus_discrim_map* [ %.pre1, %cond.end6 ], [ %3, %cond.end ], !dbg !10258
  %discriminator10 = getelementptr inbounds %struct.locus_discrim_map, %struct.locus_discrim_map* %7, i64 0, i32 1, !dbg !10260
  %8 = load i32, i32* %discriminator10, align 4, !dbg !10261
  %inc = add nsw i32 %8, 1, !dbg !10261
  store i32 %inc, i32* %discriminator10, align 4, !dbg !10261
  %9 = load %struct.locus_discrim_map*, %struct.locus_discrim_map** %2, align 8, !dbg !10262
  %discriminator11 = getelementptr inbounds %struct.locus_discrim_map, %struct.locus_discrim_map* %9, i64 0, i32 1, !dbg !10263
  %10 = load i32, i32* %discriminator11, align 4, !dbg !10263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10264
  ret i32 %10, !dbg !10265
}

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_lineno(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !10266 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10270, metadata !DIExpression()), !dbg !10272
  %tobool = icmp eq %union.gimple_statement_d* %stmt, null, !dbg !10273
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10275

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* nonnull %stmt) #7, !dbg !10276
  call void @llvm.dbg.value(metadata i32 %call, metadata !10271, metadata !DIExpression()), !dbg !10272
  %cmp = icmp eq i32 %call, 0, !dbg !10277
  br i1 %cmp, label %cleanup, label %if.end2, !dbg !10279

if.end2:                                          ; preds = %if.end
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %call) #6, !dbg !10280
  %line = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 1, !dbg !10280
  %0 = load i32, i32* %line, align 8, !dbg !10280
  br label %cleanup, !dbg !10281

cleanup:                                          ; preds = %entry, %if.end, %if.end2
  %retval.0 = phi i32 [ %0, %if.end2 ], [ -1, %entry ], [ -1, %if.end ], !dbg !10272
  ret i32 %retval.0, !dbg !10282
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !10283 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !10287, metadata !DIExpression()), !dbg !10288
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !10289
  %0 = load i32, i32* %flags, align 8, !dbg !10289
  %and = and i32 %0, 512, !dbg !10290
  %tobool = icmp eq i32 %and, 0, !dbg !10290
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !10291

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !10292
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !10292
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !10293
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !10294

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !10295
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !10295
  br label %cond.end, !dbg !10294

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !10294
  ret %struct.gimple_seq_d* %cond, !dbg !10296
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !10297 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10299, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata i32 %i, metadata !10300, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !10301, metadata !DIExpression()), !dbg !10302
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !10303
  %tobool = icmp eq i8 %call, 0, !dbg !10303
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !10303

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !10303
  %cmp = icmp ugt i32 %call1, %i, !dbg !10303
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10303

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10303
  br label %cond.end, !dbg !10303

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !10304
  %idxprom = zext i32 %i to i64, !dbg !10304
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !10304
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !10305
  ret void, !dbg !10306
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !10307 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10309, metadata !DIExpression()), !dbg !10310
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !10311
  %cmp = icmp eq i32 %call, 0, !dbg !10312
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !10313

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !10314
  %cmp2 = icmp ult i32 %call1, 10, !dbg !10315
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !10316
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10317 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10321, metadata !DIExpression()), !dbg !10323
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !10324
  %idxprom = zext i32 %call to i64, !dbg !10325
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !10325
  %0 = load i64, i64* %arrayidx, align 8, !dbg !10325
  call void @llvm.dbg.value(metadata i64 %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  %cmp = icmp eq i64 %0, 0, !dbg !10326
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10326

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10326
  br label %cond.end, !dbg !10326

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !10327
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !10328
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !10329
  ret %union.tree_node** %2, !dbg !10330
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10331 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10335, metadata !DIExpression()), !dbg !10336
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !10337
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !10338
  ret i32 %call1, !dbg !10339
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !10340 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !10344, metadata !DIExpression()), !dbg !10345
  %idxprom = zext i32 %code to i64, !dbg !10346
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !10346
  %0 = load i32, i32* %arrayidx, align 4, !dbg !10346
  ret i32 %0, !dbg !10347
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_, %struct.eh_landing_pad_d** %ptr) unnamed_addr #0 !dbg !10348 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !10355, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10356, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %ptr, metadata !10357, metadata !DIExpression()), !dbg !10358
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !10359
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10359

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !10359
  %0 = load i32, i32* %num, align 8, !dbg !10359
  %cmp = icmp ugt i32 %0, %ix_, !dbg !10359
  br i1 %cmp, label %if.then, label %if.else, !dbg !10361

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !10362
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10362
  %1 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !10362
  br label %return, !dbg !10362

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !10364

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_landing_pad_d* [ null, %if.else ], [ %1, %if.then ], !dbg !10366
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !10366
  store %struct.eh_landing_pad_d* %storemerge, %struct.eh_landing_pad_d** %ptr, align 8, !dbg !10366
  ret i32 %retval.0, !dbg !10361
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d* @ehr_next(%struct.eh_region_d* %r, %struct.eh_region_d* %start) unnamed_addr #0 !dbg !10367 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r, metadata !10371, metadata !DIExpression()), !dbg !10373
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !10372, metadata !DIExpression()), !dbg !10373
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 1, !dbg !10374
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %inner, align 8, !dbg !10374
  %tobool = icmp eq %struct.eh_region_d* %0, null, !dbg !10376
  br i1 %tobool, label %if.else, label %if.then, !dbg !10377

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %0, metadata !10371, metadata !DIExpression()), !dbg !10373
  br label %return, !dbg !10378

if.else:                                          ; preds = %entry
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 2, !dbg !10379
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer, align 8, !dbg !10379
  %tobool2 = icmp ne %struct.eh_region_d* %1, null, !dbg !10381
  %cmp = icmp ne %struct.eh_region_d* %r, null, !dbg !10382
  %or.cond = and i1 %tobool2, %cmp, !dbg !10383
  br i1 %or.cond, label %if.then3, label %do.body.preheader, !dbg !10383

do.body.preheader:                                ; preds = %if.else
  br label %do.body, !dbg !10384

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %1, metadata !10371, metadata !DIExpression()), !dbg !10373
  br label %return, !dbg !10386

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %r.addr.0 = phi %struct.eh_region_d* [ %2, %do.cond ], [ %r, %do.body.preheader ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r.addr.0, metadata !10371, metadata !DIExpression()), !dbg !10373
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r.addr.0, i64 0, i32 0, !dbg !10387
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !10387
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %2, metadata !10371, metadata !DIExpression()), !dbg !10373
  %cmp6 = icmp eq %struct.eh_region_d* %2, null, !dbg !10389
  br i1 %cmp6, label %return.loopexit, label %do.cond, !dbg !10391

do.cond:                                          ; preds = %do.body
  %next_peer8 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %2, i64 0, i32 2, !dbg !10392
  %3 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer8, align 8, !dbg !10392
  %cmp9 = icmp eq %struct.eh_region_d* %3, null, !dbg !10393
  br i1 %cmp9, label %do.body, label %do.end, !dbg !10394, !llvm.loop !10395

do.end:                                           ; preds = %do.cond
  %.lcssa = phi %struct.eh_region_d* [ %3, %do.cond ], !dbg !10392
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %.lcssa, metadata !10371, metadata !DIExpression()), !dbg !10373
  br label %return

return.loopexit:                                  ; preds = %do.body
  br label %return, !dbg !10397

return:                                           ; preds = %return.loopexit, %if.then, %do.end, %if.then3
  %retval.0 = phi %struct.eh_region_d* [ %0, %if.then ], [ %1, %if.then3 ], [ %.lcssa, %do.end ], [ null, %return.loopexit ], !dbg !10373
  ret %struct.eh_region_d* %retval.0, !dbg !10397
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_num_ops(%union.gimple_statement_d* %gs, i32 %num_ops) unnamed_addr #0 !dbg !10398 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10400, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %num_ops, metadata !10401, metadata !DIExpression()), !dbg !10402
  %num_ops1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !10403
  store i32 %num_ops, i32* %num_ops1, align 4, !dbg !10404
  ret void, !dbg !10405
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !10406 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !10410, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !10411, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !10413, metadata !DIExpression()), !dbg !10418
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !10419
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !10419
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !10414, metadata !DIExpression()), !dbg !10418
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #7, !dbg !10420
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10415, metadata !DIExpression()), !dbg !10418
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !10421
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !10421
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !10422
  %tobool = icmp eq i8 %call1, 0, !dbg !10422
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10417, metadata !DIExpression()), !dbg !10418
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !10423
  %cmp = icmp eq i32 %call2, 16, !dbg !10425
  br i1 %cmp, label %if.then, label %if.else, !dbg !10426

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !10416, metadata !DIExpression(DW_OP_deref)), !dbg !10418
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !10427
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !10412, metadata !DIExpression()), !dbg !10418
  br label %for.cond, !dbg !10427

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !10430
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !10413, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !10412, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !10416, metadata !DIExpression(DW_OP_deref)), !dbg !10418
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !10431
  %tobool6 = icmp eq i8 %call5, 0, !dbg !10431
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !10427

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !10433
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !10435
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !10436

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #7, !dbg !10437
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !10413, metadata !DIExpression()), !dbg !10418
  br label %for.inc, !dbg !10438

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !10413, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !10416, metadata !DIExpression(DW_OP_deref)), !dbg !10418
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !10431
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !10412, metadata !DIExpression()), !dbg !10418
  br label %for.cond, !dbg !10431, !llvm.loop !10439

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !10441

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !10416, metadata !DIExpression(DW_OP_deref)), !dbg !10418
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !10443
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !10412, metadata !DIExpression()), !dbg !10418
  br label %for.cond17, !dbg !10443

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !10447
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !10413, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !10412, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !10416, metadata !DIExpression(DW_OP_deref)), !dbg !10418
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !10448
  %tobool19 = icmp eq i8 %call18, 0, !dbg !10448
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !10443

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #7, !dbg !10450
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !10452
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !10453

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #7, !dbg !10454
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !10413, metadata !DIExpression()), !dbg !10418
  br label %for.inc28, !dbg !10455

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !10413, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !10416, metadata !DIExpression(DW_OP_deref)), !dbg !10418
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !10448
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !10412, metadata !DIExpression()), !dbg !10418
  br label %for.cond17, !dbg !10448, !llvm.loop !10456

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #7, !dbg !10458
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !10412, metadata !DIExpression()), !dbg !10418
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !10460
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !10461

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #7, !dbg !10462
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !10465
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !10466

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #7, !dbg !10467
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !10413, metadata !DIExpression()), !dbg !10418
  br label %if.end44, !dbg !10468

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !10413, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !10413, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !10413, metadata !DIExpression()), !dbg !10418
  br label %if.end44, !dbg !10469

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !10413, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !10413, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !10413, metadata !DIExpression()), !dbg !10418
  br label %if.end44, !dbg !10469

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !10471
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !10413, metadata !DIExpression()), !dbg !10418
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !10469
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !10469
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !10472
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !10473

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !10474
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #7, !dbg !10475
  br label %if.end49, !dbg !10475

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !10476
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #7, !dbg !10477
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !10478
  ret void, !dbg !10478
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !10479 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !10484, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !10485, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 %flags, metadata !10486, metadata !DIExpression()), !dbg !10489
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !10490
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10487, metadata !DIExpression()), !dbg !10489
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !10491
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !10492
  store i8 0, i8* %done, align 8, !dbg !10493
  %and = and i32 %flags, 5, !dbg !10494
  %cmp = icmp eq i32 %and, 0, !dbg !10494
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10494

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10494
  br label %cond.end, !dbg !10494

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !10495
  %tobool = icmp eq i8 %call1, 0, !dbg !10495
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !10488, metadata !DIExpression()), !dbg !10489
  %and3 = and i32 %cond2, %flags, !dbg !10496
  %cmp4 = icmp eq i32 %and3, 0, !dbg !10498
  br i1 %cmp4, label %if.then, label %if.end, !dbg !10499

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !10500
  br label %cleanup, !dbg !10502

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !10503
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !10504
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !10505
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !10506
  store i32 %call7, i32* %num_phi, align 4, !dbg !10507
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !10508
  store i32 2, i32* %iter_type, align 4, !dbg !10509
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !10510
  br label %cleanup, !dbg !10511

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !10489
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !10512
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !10513 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !10519, metadata !DIExpression()), !dbg !10520
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !10521
  %0 = load i8, i8* %done, align 8, !dbg !10521
  ret i8 %0, !dbg !10522
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !10523 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !10527, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !10528, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !10529, metadata !DIExpression()), !dbg !10530
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !10531
  br i1 %cmp, label %if.end3, label %if.then, !dbg !10533

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !10534
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !10534
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !10537
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !10538

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #7, !dbg !10539
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #7, !dbg !10541
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !10529, metadata !DIExpression()), !dbg !10530
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !10529, metadata !DIExpression()), !dbg !10530
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !10542
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !10543 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !10547, metadata !DIExpression()), !dbg !10549
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !10550
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !10550
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !10552
  br i1 %tobool, label %if.end, label %if.then, !dbg !10553

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !10554
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !10548, metadata !DIExpression()), !dbg !10549
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !10556
  %2 = load i64, i64* %1, align 8, !dbg !10556
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !10557
  store i64 %2, i64* %3, align 8, !dbg !10557
  br label %cleanup, !dbg !10558

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !10559
  %4 = load i32, i32* %phi_i, align 8, !dbg !10559
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !10561
  %5 = load i32, i32* %num_phi, align 4, !dbg !10561
  %cmp = icmp slt i32 %4, %5, !dbg !10562
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !10563

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !10564
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !10564
  %inc = add nsw i32 %4, 1, !dbg !10564
  store i32 %inc, i32* %phi_i, align 8, !dbg !10564
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !10564
  br label %cleanup, !dbg !10566

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !10567
  store i8 1, i8* %done, align 8, !dbg !10568
  br label %cleanup, !dbg !10569

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !10549
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !10570
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !10571 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !10573, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10574, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata i32 %flags, metadata !10575, metadata !DIExpression()), !dbg !10576
  %0 = and i32 %flags, 11, !dbg !10577
  %1 = icmp eq i32 %0, 1, !dbg !10577
  br i1 %1, label %cond.end, label %cond.true, !dbg !10577

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10577
  br label %cond.end, !dbg !10577

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !10578
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !10579
  store i32 2, i32* %iter_type, align 4, !dbg !10580
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !10581
  ret %struct.ssa_use_operand_d* %call, !dbg !10582
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !10583 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10587, metadata !DIExpression()), !dbg !10589
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !10590
  %tobool = icmp eq i8 %call, 0, !dbg !10590
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10592

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !10593
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !10593
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !10593
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !10588, metadata !DIExpression()), !dbg !10589
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !10594
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !10596

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !10597
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !10597
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !10598
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !10598
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !10599
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !10600
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !10601
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !10601

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !10602
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !10603 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !10607, metadata !DIExpression()), !dbg !10608
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !10609
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !10609
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !10611
  br i1 %cmp, label %return, label %if.end, !dbg !10612

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !10613
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !10613
  %2 = load i64, i64* %1, align 8, !dbg !10613
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !10614
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !10615
  store i64 %2, i64* %3, align 8, !dbg !10615
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !10616
  %5 = load i64, i64* %4, align 8, !dbg !10616
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !10617
  %7 = load i64*, i64** %6, align 8, !dbg !10617
  store i64 %5, i64* %7, align 8, !dbg !10618
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !10619
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !10620
  br label %return, !dbg !10621

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !10621
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !10622 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !10626, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !10627, metadata !DIExpression()), !dbg !10628
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !10629
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !10630
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !10631
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !10631
  %1 = load i64, i64* %0, align 8, !dbg !10631
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !10632
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !10633
  store i64 %1, i64* %2, align 8, !dbg !10633
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !10634
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !10635
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !10636
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !10637
  ret void, !dbg !10638
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10639 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10641, metadata !DIExpression()), !dbg !10642
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !10643
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !10643
  ret %union.tree_node* %0, !dbg !10644
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !10645 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !10649, metadata !DIExpression()), !dbg !10650
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !10651
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !10652
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !10653
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !10654
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !10655
  store i32 0, i32* %iter_type, align 4, !dbg !10656
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !10657
  store i32 0, i32* %phi_i, align 8, !dbg !10658
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !10659
  store i32 0, i32* %num_phi, align 4, !dbg !10660
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !10661
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !10662
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !10663
  store i8 1, i8* %done, align 8, !dbg !10664
  ret void, !dbg !10665
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !10666 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !10670, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10671, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.value(metadata i32 %flags, metadata !10672, metadata !DIExpression()), !dbg !10673
  %0 = and i32 %flags, 10, !dbg !10674
  %1 = icmp eq i32 %0, 8, !dbg !10674
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !10674

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !10674
  %3 = icmp eq i32 %2, 4, !dbg !10674
  br i1 %3, label %cond.true, label %cond.end, !dbg !10674

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10674
  br label %cond.end, !dbg !10674

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !10675
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !10676

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !10677
  br label %cond.end12, !dbg !10676

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !10676
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !10678
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !10679
  %and14 = and i32 %flags, 8, !dbg !10680
  %tobool15 = icmp eq i32 %and14, 0, !dbg !10680
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !10682

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !10683
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !10684

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !10685
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !10686
  br i1 %cmp, label %if.end, label %if.then, !dbg !10687

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !10688
  %6 = load i64*, i64** %5, align 8, !dbg !10688
  %7 = load i64, i64* %6, align 8, !dbg !10689
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !10690
  store i64 %7, i64* %8, align 8, !dbg !10690
  br label %if.end, !dbg !10691

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !10692
  %tobool24 = icmp eq i32 %and23, 0, !dbg !10692
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !10693

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !10694
  br label %cond.end28, !dbg !10693

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !10693
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !10695
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !10696
  %and30 = and i32 %flags, 4, !dbg !10697
  %tobool31 = icmp eq i32 %and30, 0, !dbg !10697
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !10699

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !10700
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !10701

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !10702
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !10703
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !10704

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !10705
  %11 = load i64*, i64** %10, align 8, !dbg !10705
  %12 = load i64, i64* %11, align 8, !dbg !10706
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !10707
  store i64 %12, i64* %13, align 8, !dbg !10707
  br label %if.end42, !dbg !10708

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !10709
  store i8 0, i8* %done, align 8, !dbg !10710
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !10711
  store i32 0, i32* %phi_i, align 8, !dbg !10712
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !10713
  store i32 0, i32* %num_phi, align 4, !dbg !10714
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !10715
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !10716
  ret void, !dbg !10717
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !10718 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10722, metadata !DIExpression()), !dbg !10723
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !10724
  %tobool = icmp eq i8 %call, 0, !dbg !10724
  br i1 %tobool, label %return, label %if.end, !dbg !10726

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !10727
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !10727
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !10727
  br label %return, !dbg !10728

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !10723
  ret %struct.def_optype_d* %retval.0, !dbg !10729
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !10730 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10732, metadata !DIExpression()), !dbg !10733
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !10734
  %tobool = icmp eq i8 %call, 0, !dbg !10734
  br i1 %tobool, label %return, label %if.end, !dbg !10736

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !10737
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !10737
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !10737
  br label %return, !dbg !10738

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !10733
  ret %union.tree_node* %retval.0, !dbg !10739
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !10740 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10744, metadata !DIExpression()), !dbg !10745
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !10746
  %tobool = icmp eq i8 %call, 0, !dbg !10746
  br i1 %tobool, label %return, label %if.end, !dbg !10748

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !10749
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !10749
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !10749
  br label %return, !dbg !10750

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !10745
  ret %struct.use_optype_d* %retval.0, !dbg !10751
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !10752 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10754, metadata !DIExpression()), !dbg !10755
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !10756
  %tobool = icmp eq i8 %call, 0, !dbg !10756
  br i1 %tobool, label %return, label %if.end, !dbg !10758

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !10759
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !10759
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !10759
  br label %return, !dbg !10760

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !10755
  ret %union.tree_node* %retval.0, !dbg !10761
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !10762 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10764, metadata !DIExpression()), !dbg !10765
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !10766
  %cmp = icmp ugt i32 %call, 5, !dbg !10767
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10768

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !10769
  %cmp2 = icmp ult i32 %call1, 10, !dbg !10770
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !10771
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !10772 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10776, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata i32 %index, metadata !10777, metadata !DIExpression()), !dbg !10778
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !10779
  %0 = load i32, i32* %capacity, align 8, !dbg !10779
  %cmp = icmp ult i32 %0, %index, !dbg !10779
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10779

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10779
  br label %cond.end, !dbg !10779

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !10780
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !10780
  ret %struct.phi_arg_d* %arrayidx, !dbg !10781
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !10782 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10786, metadata !DIExpression()), !dbg !10787
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !10788
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !10788
  ret %struct.VEC_int_heap* %0, !dbg !10788
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !10789 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10790
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !10790
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !10790
  %tobool = icmp eq %struct.loops* %1, null, !dbg !10790
  br i1 %tobool, label %return, label %if.end, !dbg !10792

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !10793
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !10793
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !10793
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !10793

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !10793
  br label %cond.end, !dbg !10793

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !10793
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !10793
  br label %return, !dbg !10794

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !10795
  ret i32 %retval.0, !dbg !10796
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !10797 {
entry:
  unreachable, !dbg !10806
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !10807 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !10812, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !10813, metadata !DIExpression()), !dbg !10815
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !10816
  %0 = load i32, i32* %num1, align 4, !dbg !10816
  %inc = add i32 %0, 1, !dbg !10816
  store i32 %inc, i32* %num1, align 4, !dbg !10816
  %idxprom = zext i32 %0 to i64, !dbg !10816
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10816
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !10814, metadata !DIExpression()), !dbg !10815
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !10816
  ret i32* %arrayidx, !dbg !10816
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !10817 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !10821, metadata !DIExpression()), !dbg !10822
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !10823
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10823

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !10823
  %0 = load i32, i32* %num, align 8, !dbg !10823
  br label %cond.end, !dbg !10823

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10823
  ret i32 %cond, !dbg !10823
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !10824 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !10830, metadata !DIExpression()), !dbg !10833
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10831, metadata !DIExpression()), !dbg !10833
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !10832, metadata !DIExpression()), !dbg !10833
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !10834
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10834

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !10834
  %0 = load i32, i32* %num, align 4, !dbg !10834
  %cmp = icmp ugt i32 %0, %ix_, !dbg !10834
  br i1 %cmp, label %if.then, label %if.else, !dbg !10836

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !10837
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10837
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10837
  br label %return, !dbg !10837

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !10839

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !10841
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !10841
  store i32 %storemerge, i32* %ptr, align 4, !dbg !10841
  ret i32 %retval.0, !dbg !10836
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !10842 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !10847, metadata !DIExpression()), !dbg !10848
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !10849
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !10849
  br i1 %tobool, label %if.end, label %if.then, !dbg !10851

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !10851
  tail call void @free(i8* nonnull %1) #6, !dbg !10849
  br label %if.end, !dbg !10849

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !10851
  ret void, !dbg !10851
}

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @find_case_label_for_value(%union.gimple_statement_d* %switch_stmt, %union.tree_node* %val) unnamed_addr #5 !dbg !10852 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %switch_stmt, metadata !10856, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !10857, metadata !DIExpression()), !dbg !10868
  %call = tail call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %switch_stmt) #7, !dbg !10869
  %conv = zext i32 %call to i64, !dbg !10869
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10860, metadata !DIExpression()), !dbg !10868
  %call1 = tail call fastcc %union.tree_node* @gimple_switch_default_label(%union.gimple_statement_d* %switch_stmt) #7, !dbg !10870
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10861, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i64 0, metadata !10858, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10859, metadata !DIExpression()), !dbg !10868
  br label %for.cond, !dbg !10871

for.cond:                                         ; preds = %cleanup, %entry
  %low.0 = phi i64 [ 0, %entry ], [ %low.0.div, %cleanup ], !dbg !10872
  %high.0 = phi i64 [ %conv, %entry ], [ %div.high.0, %cleanup ], !dbg !10873
  %retval.0 = phi %union.tree_node* [ undef, %entry ], [ %retval.1, %cleanup ]
  call void @llvm.dbg.value(metadata i64 %high.0, metadata !10859, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i64 %low.0, metadata !10858, metadata !DIExpression()), !dbg !10868
  %sub = sub i64 %high.0, %low.0, !dbg !10874
  %cmp = icmp ugt i64 %sub, 1, !dbg !10875
  br i1 %cmp, label %for.body, label %cleanup33, !dbg !10876

for.body:                                         ; preds = %for.cond
  %add = add i64 %high.0, %low.0, !dbg !10877
  %div = lshr i64 %add, 1, !dbg !10878
  call void @llvm.dbg.value(metadata i64 %div, metadata !10862, metadata !DIExpression()), !dbg !10879
  %conv3 = trunc i64 %div to i32, !dbg !10880
  %call4 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %switch_stmt, i32 %conv3) #7, !dbg !10881
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !10866, metadata !DIExpression()), !dbg !10879
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10882
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !10882
  %call6 = tail call i32 @tree_int_cst_compare(%union.tree_node* %0, %union.tree_node* %val) #6, !dbg !10883
  call void @llvm.dbg.value(metadata i32 %call6, metadata !10867, metadata !DIExpression()), !dbg !10879
  %cmp7 = icmp sgt i32 %call6, 0, !dbg !10884
  %low.0.div = select i1 %cmp7, i64 %low.0, i64 %div
  %div.high.0 = select i1 %cmp7, i64 %div, i64 %high.0
  call void @llvm.dbg.value(metadata i64 %div.high.0, metadata !10859, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i64 %low.0.div, metadata !10858, metadata !DIExpression()), !dbg !10868
  %arrayidx11 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10886
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8, !dbg !10886
  %cmp12 = icmp eq %union.tree_node* %1, null, !dbg !10888
  br i1 %cmp12, label %if.then14, label %if.else19, !dbg !10889

if.then14:                                        ; preds = %for.body
  %cmp15 = icmp eq i32 %call6, 0, !dbg !10890
  br i1 %cmp15, label %cleanup, label %if.end30, !dbg !10893

if.else19:                                        ; preds = %for.body
  %cmp20 = icmp slt i32 %call6, 1, !dbg !10894
  br i1 %cmp20, label %land.lhs.true, label %if.end30, !dbg !10897

land.lhs.true:                                    ; preds = %if.else19
  %call25 = tail call i32 @tree_int_cst_compare(%union.tree_node* nonnull %1, %union.tree_node* %val) #6, !dbg !10898
  %cmp26 = icmp sgt i32 %call25, -1, !dbg !10899
  br i1 %cmp26, label %cleanup, label %if.end30, !dbg !10900

if.end30:                                         ; preds = %if.else19, %land.lhs.true, %if.then14
  br label %cleanup, !dbg !10901

cleanup:                                          ; preds = %land.lhs.true, %if.then14, %if.end30
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end30 ], [ false, %if.then14 ], [ false, %land.lhs.true ]
  %retval.1 = phi %union.tree_node* [ %retval.0, %if.end30 ], [ %call4, %if.then14 ], [ %call4, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.cond, label %cleanup33, !llvm.loop !10902

cleanup33:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi %union.tree_node* [ %retval.1, %cleanup ], [ %call1, %for.cond ], !dbg !10868
  ret %union.tree_node* %retval.2, !dbg !10904
}

declare dso_local i32 @tree_int_cst_compare(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !10905 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !10907, metadata !DIExpression()), !dbg !10908
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !10909
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10909

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !10910
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !10910
  br label %cond.end, !dbg !10909

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !10909
  ret %struct.gimple_seq_node_d* %cond, !dbg !10911
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_bind_body(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10912 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10916, metadata !DIExpression()), !dbg !10917
  %body = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !10918
  %0 = bitcast [1 x %struct.phi_arg_d]* %body to %struct.gimple_seq_d**, !dbg !10918
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !10918
  ret %struct.gimple_seq_d* %1, !dbg !10919
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10920 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10922, metadata !DIExpression()), !dbg !10923
  %eval = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !10924
  %0 = bitcast i32* %eval to %struct.gimple_seq_d**, !dbg !10924
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !10924
  ret %struct.gimple_seq_d* %1, !dbg !10925
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10926 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10928, metadata !DIExpression()), !dbg !10929
  %cleanup = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !10930
  %0 = bitcast %union.tree_node** %cleanup to %struct.gimple_seq_d**, !dbg !10930
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !10930
  ret %struct.gimple_seq_d* %1, !dbg !10931
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10932 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10934, metadata !DIExpression()), !dbg !10935
  %failure = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !10936
  %0 = bitcast %union.tree_node** %failure to %struct.gimple_seq_d**, !dbg !10936
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !10936
  ret %struct.gimple_seq_d* %1, !dbg !10937
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_catch_handler(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10938 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10940, metadata !DIExpression()), !dbg !10941
  %handler = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !10942
  %0 = bitcast %union.tree_node** %handler to %struct.gimple_seq_d**, !dbg !10942
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !10942
  ret %struct.gimple_seq_d* %1, !dbg !10943
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_types_in_gimple_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !10944 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10946, metadata !DIExpression()), !dbg !10947
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !10948
  switch i32 %call, label %sw.default [
    i32 6, label %sw.bb
    i32 4, label %sw.bb2
    i32 8, label %sw.bb5
    i32 1, label %sw.bb7
    i32 3, label %sw.bb35
    i32 5, label %sw.bb37
    i32 9, label %sw.bb39
    i32 7, label %return
    i32 16, label %sw.bb42
    i32 18, label %return
    i32 33, label %return
    i32 14, label %return
    i32 15, label %return
    i32 13, label %return
    i32 26, label %return
    i32 27, label %return
    i32 23, label %return
    i32 30, label %return
    i32 31, label %return
    i32 32, label %return
    i32 29, label %return
    i32 24, label %return
    i32 25, label %return
    i32 22, label %return
    i32 28, label %return
    i32 19, label %return
    i32 20, label %return
    i32 21, label %return
    i32 2, label %sw.bb46
  ], !dbg !10949

sw.bb:                                            ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @verify_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !10950
  br label %return, !dbg !10952

sw.bb2:                                           ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %stmt) #7, !dbg !10953
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10953
  %bf.load = load i64, i64* %0, align 8, !dbg !10953
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !10954
  %cmp = icmp ne i64 %bf.cast3, 30, !dbg !10954
  %conv4 = zext i1 %cmp to i8, !dbg !10953
  br label %return, !dbg !10955

sw.bb5:                                           ; preds = %entry
  %call6 = tail call fastcc zeroext i8 @verify_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !10956
  br label %return, !dbg !10957

sw.bb7:                                           ; preds = %entry
  %call8 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %stmt) #7, !dbg !10958
  %idxprom = sext i32 %call8 to i64, !dbg !10958
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !10958
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10958
  %cmp9 = icmp eq i32 %1, 5, !dbg !10960
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10961

if.then:                                          ; preds = %sw.bb7
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.66, i64 0, i64 0)) #6, !dbg !10962
  br label %return, !dbg !10964

if.end:                                           ; preds = %sw.bb7
  %call11 = tail call fastcc %union.tree_node* @gimple_cond_true_label(%union.gimple_statement_d* %stmt) #7, !dbg !10965
  %tobool = icmp eq %union.tree_node* %call11, null, !dbg !10965
  br i1 %tobool, label %lor.lhs.false19, label %lor.lhs.false, !dbg !10967

lor.lhs.false:                                    ; preds = %if.end
  %call12 = tail call fastcc %union.tree_node* @gimple_cond_true_label(%union.gimple_statement_d* %stmt) #7, !dbg !10968
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10968
  %bf.load14 = load i64, i64* %2, align 8, !dbg !10968
  %bf.cast162 = and i64 %bf.load14, 65535, !dbg !10969
  %cmp17 = icmp eq i64 %bf.cast162, 30, !dbg !10969
  br i1 %cmp17, label %lor.lhs.false19, label %if.then30, !dbg !10970

lor.lhs.false19:                                  ; preds = %if.end, %lor.lhs.false
  %call20 = tail call fastcc %union.tree_node* @gimple_cond_false_label(%union.gimple_statement_d* %stmt) #7, !dbg !10971
  %tobool21 = icmp eq %union.tree_node* %call20, null, !dbg !10971
  br i1 %tobool21, label %if.end31, label %lor.lhs.false22, !dbg !10972

lor.lhs.false22:                                  ; preds = %lor.lhs.false19
  %call23 = tail call fastcc %union.tree_node* @gimple_cond_false_label(%union.gimple_statement_d* %stmt) #7, !dbg !10973
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10973
  %bf.load25 = load i64, i64* %3, align 8, !dbg !10973
  %bf.cast271 = and i64 %bf.load25, 65535, !dbg !10974
  %cmp28 = icmp eq i64 %bf.cast271, 30, !dbg !10974
  br i1 %cmp28, label %if.end31, label %if.then30, !dbg !10975

if.then30:                                        ; preds = %lor.lhs.false22, %lor.lhs.false
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.67, i64 0, i64 0)) #6, !dbg !10976
  br label %return, !dbg !10978

if.end31:                                         ; preds = %lor.lhs.false19, %lor.lhs.false22
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !10979
  %call32 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !10980
  %call33 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %stmt) #7, !dbg !10981
  %call34 = tail call fastcc zeroext i8 @verify_gimple_comparison(%union.tree_node* %4, %union.tree_node* %call32, %union.tree_node* %call33) #7, !dbg !10982
  br label %return, !dbg !10983

sw.bb35:                                          ; preds = %entry
  %call36 = tail call fastcc zeroext i8 @verify_gimple_goto(%union.gimple_statement_d* %stmt) #7, !dbg !10984
  br label %return, !dbg !10985

sw.bb37:                                          ; preds = %entry
  %call38 = tail call fastcc zeroext i8 @verify_gimple_switch(%union.gimple_statement_d* %stmt) #7, !dbg !10986
  br label %return, !dbg !10987

sw.bb39:                                          ; preds = %entry
  %call40 = tail call fastcc zeroext i8 @verify_gimple_return(%union.gimple_statement_d* %stmt) #7, !dbg !10988
  br label %return, !dbg !10989

sw.bb42:                                          ; preds = %entry
  %call43 = tail call fastcc zeroext i8 @verify_gimple_phi(%union.gimple_statement_d* %stmt) #7, !dbg !10990
  br label %return, !dbg !10991

sw.bb46:                                          ; preds = %entry
  %call47 = tail call fastcc zeroext i8 @verify_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !10992
  br label %return, !dbg !10993

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3828, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !10994
  br label %return, !dbg !10995

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default, %sw.bb46, %sw.bb42, %sw.bb39, %sw.bb37, %sw.bb35, %if.end31, %if.then30, %if.then, %sw.bb5, %sw.bb2, %sw.bb
  %retval.0 = phi i8 [ 0, %sw.default ], [ 0, %sw.bb46 ], [ %call43, %sw.bb42 ], [ %call40, %sw.bb39 ], [ %call38, %sw.bb37 ], [ %call36, %sw.bb35 ], [ 1, %if.then ], [ %call34, %if.end31 ], [ 1, %if.then30 ], [ %call6, %sw.bb5 ], [ %conv4, %sw.bb2 ], [ %call1, %sw.bb ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], !dbg !10947
  ret i8 %retval.0, !dbg !10996
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_assign(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !10997 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10999, metadata !DIExpression()), !dbg !11000
  %call = tail call fastcc i32 @gimple_assign_rhs_class(%union.gimple_statement_d* %stmt) #7, !dbg !11001
  switch i32 %call, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb2
    i32 1, label %sw.bb4
  ], !dbg !11002

sw.bb:                                            ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @verify_gimple_assign_single(%union.gimple_statement_d* %stmt) #7, !dbg !11003
  br label %return, !dbg !11005

sw.bb2:                                           ; preds = %entry
  %call3 = tail call fastcc zeroext i8 @verify_gimple_assign_unary(%union.gimple_statement_d* %stmt) #7, !dbg !11006
  br label %return, !dbg !11007

sw.bb4:                                           ; preds = %entry
  %call5 = tail call fastcc zeroext i8 @verify_gimple_assign_binary(%union.gimple_statement_d* %stmt) #7, !dbg !11008
  br label %return, !dbg !11009

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3616, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !11010
  br label %return, !dbg !11011

return:                                           ; preds = %sw.default, %sw.bb4, %sw.bb2, %sw.bb
  %retval.0 = phi i8 [ 0, %sw.default ], [ %call5, %sw.bb4 ], [ %call3, %sw.bb2 ], [ %call1, %sw.bb ], !dbg !11000
  ret i8 %retval.0, !dbg !11012
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_call(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11013 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11015, metadata !DIExpression()), !dbg !11023
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %stmt) #7, !dbg !11024
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11016, metadata !DIExpression()), !dbg !11023
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11025
  %bf.load = load i64, i64* %0, align 8, !dbg !11025
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11027
  %cmp = icmp eq i64 %bf.cast1, 50, !dbg !11027
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11028

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call) #6, !dbg !11029
  %tobool = icmp eq i8 %call1, 0, !dbg !11029
  br i1 %tobool, label %if.then, label %if.end, !dbg !11030

if.then:                                          ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.100, i64 0, i64 0)) #6, !dbg !11031
  tail call void @debug_generic_stmt(%union.tree_node* %call) #6, !dbg !11033
  br label %cleanup, !dbg !11034

if.end:                                           ; preds = %land.lhs.true, %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11035
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !11035
  %2 = load i64*, i64** %1, align 8, !dbg !11035
  %bf.load3 = load i64, i64* %2, align 8, !dbg !11035
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !11035
  %cmp6 = icmp eq i64 %bf.cast52, 10, !dbg !11035
  br i1 %cmp6, label %lor.lhs.false14, label %lor.lhs.false, !dbg !11035

lor.lhs.false:                                    ; preds = %if.end
  %cmp13 = icmp eq i64 %bf.cast52, 12, !dbg !11035
  br i1 %cmp13, label %lor.lhs.false14, label %if.then34, !dbg !11037

lor.lhs.false14:                                  ; preds = %lor.lhs.false, %if.end
  %3 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !11038
  %type18 = getelementptr inbounds i64, i64* %2, i64 2, !dbg !11038
  %4 = bitcast i64* %type18 to i64**, !dbg !11038
  %5 = load i64*, i64** %4, align 8, !dbg !11038
  %bf.load20 = load i64, i64* %5, align 8, !dbg !11038
  %bf.cast224 = and i64 %bf.load20, 65535, !dbg !11039
  %cmp23 = icmp eq i64 %bf.cast224, 20, !dbg !11039
  br i1 %cmp23, label %if.end35, label %land.lhs.true24, !dbg !11040

land.lhs.true24:                                  ; preds = %lor.lhs.false14
  %cmp33 = icmp eq i64 %bf.cast224, 21, !dbg !11041
  br i1 %cmp33, label %if.end35, label %if.then34, !dbg !11042

if.then34:                                        ; preds = %land.lhs.true24, %lor.lhs.false
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.101, i64 0, i64 0)) #6, !dbg !11043
  br label %cleanup, !dbg !11045

if.end35:                                         ; preds = %land.lhs.true24, %lor.lhs.false14
  %call36 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11046
  %tobool37 = icmp eq %union.tree_node* %call36, null, !dbg !11046
  br i1 %tobool37, label %if.end47, label %land.lhs.true38, !dbg !11048

land.lhs.true38:                                  ; preds = %if.end35
  %call39 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11049
  %call40 = tail call zeroext i8 @is_gimple_lvalue(%union.tree_node* %call39) #6, !dbg !11050
  %tobool41 = icmp eq i8 %call40, 0, !dbg !11050
  br i1 %tobool41, label %if.then46, label %lor.lhs.false42, !dbg !11051

lor.lhs.false42:                                  ; preds = %land.lhs.true38
  %call43 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11052
  %call44 = tail call fastcc zeroext i8 @verify_types_in_gimple_reference(%union.tree_node* %call43, i8 zeroext 1) #7, !dbg !11053
  %tobool45 = icmp eq i8 %call44, 0, !dbg !11053
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !11054

if.then46:                                        ; preds = %lor.lhs.false42, %land.lhs.true38
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.102, i64 0, i64 0)) #6, !dbg !11055
  br label %cleanup, !dbg !11057

if.end47:                                         ; preds = %lor.lhs.false42, %if.end35
  %call48 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11058
  %tobool49 = icmp eq %union.tree_node* %call48, null, !dbg !11058
  br i1 %tobool49, label %if.end55, label %land.lhs.true50, !dbg !11060

land.lhs.true50:                                  ; preds = %if.end47
  %call51 = tail call fastcc zeroext i8 @gimple_call_noreturn_p(%union.gimple_statement_d* %stmt) #7, !dbg !11061
  %tobool53 = icmp eq i8 %call51, 0, !dbg !11061
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !11062

if.then54:                                        ; preds = %land.lhs.true50
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.103, i64 0, i64 0)) #6, !dbg !11063
  br label %cleanup, !dbg !11065

if.end55:                                         ; preds = %land.lhs.true50, %if.end47
  %6 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !11066
  %type59 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !11066
  %7 = load %union.tree_node*, %union.tree_node** %type59, align 8, !dbg !11066
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11017, metadata !DIExpression()), !dbg !11023
  %call60 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11067
  %tobool61 = icmp eq %union.tree_node* %call60, null, !dbg !11067
  br i1 %tobool61, label %if.end114, label %land.lhs.true62, !dbg !11069

land.lhs.true62:                                  ; preds = %if.end55
  %call63 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11070
  %type65 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11070
  %8 = load %union.tree_node*, %union.tree_node** %type65, align 8, !dbg !11070
  %type67 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11071
  %9 = load %union.tree_node*, %union.tree_node** %type67, align 8, !dbg !11071
  %call68 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %8, %union.tree_node* %9) #6, !dbg !11072
  %tobool69 = icmp eq i8 %call68, 0, !dbg !11072
  br i1 %tobool69, label %land.lhs.true70, label %if.end114, !dbg !11073

land.lhs.true70:                                  ; preds = %land.lhs.true62
  %call71 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11074
  %type73 = getelementptr inbounds %union.tree_node, %union.tree_node* %call71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11074
  %10 = bitcast %union.tree_node** %type73 to i64**, !dbg !11074
  %11 = load i64*, i64** %10, align 8, !dbg !11074
  %bf.load75 = load i64, i64* %11, align 8, !dbg !11074
  %bf.cast777 = and i64 %bf.load75, 65535, !dbg !11074
  %cmp78 = icmp eq i64 %bf.cast777, 10, !dbg !11074
  br i1 %cmp78, label %land.lhs.true90, label %lor.lhs.false80, !dbg !11074

lor.lhs.false80:                                  ; preds = %land.lhs.true70
  %call81 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11074
  %type83 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11074
  %12 = bitcast %union.tree_node** %type83 to i64**, !dbg !11074
  %13 = load i64*, i64** %12, align 8, !dbg !11074
  %bf.load85 = load i64, i64* %13, align 8, !dbg !11074
  %bf.cast878 = and i64 %bf.load85, 65535, !dbg !11074
  %cmp88 = icmp eq i64 %bf.cast878, 12, !dbg !11074
  br i1 %cmp88, label %land.lhs.true90, label %if.then108, !dbg !11075

land.lhs.true90:                                  ; preds = %lor.lhs.false80, %land.lhs.true70
  %14 = bitcast %union.tree_node** %type67 to i64**, !dbg !11076
  %15 = load i64*, i64** %14, align 8, !dbg !11076
  %bf.load94 = load i64, i64* %15, align 8, !dbg !11076
  %bf.cast969 = and i64 %bf.load94, 65535, !dbg !11076
  %cmp97 = icmp eq i64 %bf.cast969, 10, !dbg !11076
  br i1 %cmp97, label %if.end114, label %lor.lhs.false99, !dbg !11076

lor.lhs.false99:                                  ; preds = %land.lhs.true90
  %cmp106 = icmp eq i64 %bf.cast969, 12, !dbg !11076
  br i1 %cmp106, label %if.end114, label %if.then108, !dbg !11077

if.then108:                                       ; preds = %lor.lhs.false99, %lor.lhs.false80
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.104, i64 0, i64 0)) #6, !dbg !11078
  %call109 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11080
  %type111 = getelementptr inbounds %union.tree_node, %union.tree_node* %call109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11080
  %16 = load %union.tree_node*, %union.tree_node** %type111, align 8, !dbg !11080
  tail call void @debug_generic_stmt(%union.tree_node* %16) #6, !dbg !11081
  %17 = load %union.tree_node*, %union.tree_node** %type67, align 8, !dbg !11082
  tail call void @debug_generic_stmt(%union.tree_node* %17) #6, !dbg !11083
  br label %cleanup, !dbg !11084

if.end114:                                        ; preds = %land.lhs.true62, %if.end55, %lor.lhs.false99, %land.lhs.true90
  %call115 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !11085
  %tobool116 = icmp eq %union.tree_node* %call115, null, !dbg !11085
  br i1 %tobool116, label %if.end123, label %land.lhs.true117, !dbg !11087

land.lhs.true117:                                 ; preds = %if.end114
  %call118 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !11088
  %call119 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call118) #6, !dbg !11089
  %tobool120 = icmp eq i8 %call119, 0, !dbg !11089
  br i1 %tobool120, label %if.then121, label %if.end123, !dbg !11090

if.then121:                                       ; preds = %land.lhs.true117
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.105, i64 0, i64 0)) #6, !dbg !11091
  %call122 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !11093
  tail call void @debug_generic_stmt(%union.tree_node* %call122) #6, !dbg !11094
  br label %cleanup, !dbg !11095

if.end123:                                        ; preds = %land.lhs.true117, %if.end114
  %call124 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !11096
  %tobool125 = icmp eq %union.tree_node* %call124, null, !dbg !11096
  br i1 %tobool125, label %if.end150, label %if.then126, !dbg !11098

if.then126:                                       ; preds = %if.end123
  %bf.load128 = load i64, i64* %0, align 8, !dbg !11099
  %bf.cast1305 = and i64 %bf.load128, 65535, !dbg !11102
  %cmp131 = icmp eq i64 %bf.cast1305, 121, !dbg !11102
  br i1 %cmp131, label %lor.lhs.false133, label %if.then140, !dbg !11103

lor.lhs.false133:                                 ; preds = %if.then126
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11104
  %18 = bitcast %union.tree_node** %operands to i64**, !dbg !11104
  %19 = load i64*, i64** %18, align 8, !dbg !11104
  %bf.load135 = load i64, i64* %19, align 8, !dbg !11104
  %bf.cast1376 = and i64 %bf.load135, 65535, !dbg !11105
  %cmp138 = icmp eq i64 %bf.cast1376, 29, !dbg !11105
  br i1 %cmp138, label %if.end141, label %if.then140, !dbg !11106

if.then140:                                       ; preds = %lor.lhs.false133, %if.then126
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.106, i64 0, i64 0)) #6, !dbg !11107
  br label %cleanup, !dbg !11109

if.end141:                                        ; preds = %lor.lhs.false133
  %regdecl_flag = getelementptr inbounds i64, i64* %19, i64 27, !dbg !11110
  %20 = bitcast i64* %regdecl_flag to i32*, !dbg !11110
  %bf.load145 = load i32, i32* %20, align 8, !dbg !11110
  %bf.clear146 = and i32 %bf.load145, 4194304, !dbg !11110
  %tobool147 = icmp eq i32 %bf.clear146, 0, !dbg !11110
  br i1 %tobool147, label %if.then148, label %if.end150, !dbg !11112

if.then148:                                       ; preds = %if.end141
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.107, i64 0, i64 0)) #6, !dbg !11113
  br label %cleanup, !dbg !11115

if.end150:                                        ; preds = %if.end141, %if.end123
  call void @llvm.dbg.value(metadata i32 0, metadata !11018, metadata !DIExpression()), !dbg !11023
  br label %for.cond, !dbg !11116

for.cond:                                         ; preds = %for.inc, %if.end150
  %i.0 = phi i32 [ 0, %if.end150 ], [ %inc, %for.inc ], !dbg !11117
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !11018, metadata !DIExpression()), !dbg !11023
  %call151 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !11118
  %cmp152 = icmp ult i32 %i.0, %call151, !dbg !11119
  br i1 %cmp152, label %for.body, label %cleanup.loopexit, !dbg !11120

for.body:                                         ; preds = %for.cond
  %call154 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %i.0) #7, !dbg !11121
  call void @llvm.dbg.value(metadata %union.tree_node* %call154, metadata !11019, metadata !DIExpression()), !dbg !11122
  %call155 = tail call zeroext i8 @is_gimple_operand(%union.tree_node* %call154) #6, !dbg !11123
  %tobool156 = icmp eq i8 %call155, 0, !dbg !11123
  br i1 %tobool156, label %if.then157, label %for.inc, !dbg !11125

if.then157:                                       ; preds = %for.body
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.108, i64 0, i64 0)) #6, !dbg !11126
  tail call void @debug_generic_expr(%union.tree_node* %call154) #6, !dbg !11128
  br label %for.inc, !dbg !11129

for.inc:                                          ; preds = %for.body, %if.then157
  %inc = add i32 %i.0, 1, !dbg !11130
  call void @llvm.dbg.value(metadata i32 %inc, metadata !11018, metadata !DIExpression()), !dbg !11023
  br label %for.cond, !dbg !11131, !llvm.loop !11132

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !11134

cleanup:                                          ; preds = %cleanup.loopexit, %if.then148, %if.then140, %if.then121, %if.then108, %if.then54, %if.then46, %if.then34, %if.then
  %retval.0 = phi i8 [ 1, %if.then34 ], [ 1, %if.then46 ], [ 1, %if.then54 ], [ 1, %if.then140 ], [ 1, %if.then148 ], [ 1, %if.then121 ], [ 1, %if.then108 ], [ 1, %if.then ], [ 0, %cleanup.loopexit ], !dbg !11023
  ret i8 %retval.0, !dbg !11134
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_comparison(%union.tree_node* %type, %union.tree_node* %op0, %union.tree_node* %op1) unnamed_addr #5 !dbg !11135 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !11139, metadata !DIExpression()), !dbg !11144
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !11140, metadata !DIExpression()), !dbg !11144
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !11141, metadata !DIExpression()), !dbg !11144
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11145
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !11145
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11142, metadata !DIExpression()), !dbg !11144
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11146
  %1 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !11146
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11143, metadata !DIExpression()), !dbg !11144
  %call = tail call zeroext i8 @is_gimple_val(%union.tree_node* %op0) #6, !dbg !11147
  %tobool = icmp eq i8 %call, 0, !dbg !11147
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11149

lor.lhs.false:                                    ; preds = %entry
  %call4 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %op1) #6, !dbg !11150
  %tobool5 = icmp eq i8 %call4, 0, !dbg !11150
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11151

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.109, i64 0, i64 0)) #6, !dbg !11152
  br label %cleanup, !dbg !11154

if.end:                                           ; preds = %lor.lhs.false
  %call6 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !11155
  %tobool7 = icmp eq i8 %call6, 0, !dbg !11155
  br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false55, !dbg !11157

land.lhs.true:                                    ; preds = %if.end
  %call8 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %1, %union.tree_node* %0) #6, !dbg !11158
  %tobool9 = icmp eq i8 %call8, 0, !dbg !11158
  br i1 %tobool9, label %land.lhs.true10, label %lor.lhs.false55, !dbg !11159

land.lhs.true10:                                  ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11160
  %bf.load = load i64, i64* %2, align 8, !dbg !11160
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11160
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !11160
  br i1 %cmp, label %lor.lhs.false17, label %lor.lhs.false11, !dbg !11160

lor.lhs.false11:                                  ; preds = %land.lhs.true10
  %cmp16 = icmp eq i64 %bf.cast1, 12, !dbg !11160
  br i1 %cmp16, label %lor.lhs.false17, label %if.then73, !dbg !11161

lor.lhs.false17:                                  ; preds = %lor.lhs.false11, %land.lhs.true10
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11162
  %bf.load19 = load i64, i64* %3, align 8, !dbg !11162
  %bf.cast213 = and i64 %bf.load19, 65535, !dbg !11162
  %cmp22 = icmp eq i64 %bf.cast213, 10, !dbg !11162
  br i1 %cmp22, label %lor.lhs.false29, label %lor.lhs.false23, !dbg !11162

lor.lhs.false23:                                  ; preds = %lor.lhs.false17
  %cmp28 = icmp eq i64 %bf.cast213, 12, !dbg !11162
  br i1 %cmp28, label %lor.lhs.false29, label %if.then73, !dbg !11163

lor.lhs.false29:                                  ; preds = %lor.lhs.false23, %lor.lhs.false17
  %cmp34 = icmp eq i64 %bf.cast1, 14, !dbg !11164
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !11164

cond.true:                                        ; preds = %lor.lhs.false29
  %call35 = tail call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !11164
  %bf.load40.pre = load i64, i64* %3, align 8, !dbg !11165
  br label %cond.end, !dbg !11164

cond.false:                                       ; preds = %lor.lhs.false29
  %type36 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !11164
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type36, i64 0, i32 6, !dbg !11164
  %bf.load37 = load i32, i32* %mode, align 4, !dbg !11164
  %bf.lshr = lshr i32 %bf.load37, 16, !dbg !11164
  %bf.clear38 = and i32 %bf.lshr, 255, !dbg !11164
  br label %cond.end, !dbg !11164

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load40 = phi i64 [ %bf.load40.pre, %cond.true ], [ %bf.load19, %cond.false ], !dbg !11165
  %cond = phi i32 [ %call35, %cond.true ], [ %bf.clear38, %cond.false ], !dbg !11164
  %bf.cast426 = and i64 %bf.load40, 65535, !dbg !11165
  %cmp43 = icmp eq i64 %bf.cast426, 14, !dbg !11165
  br i1 %cmp43, label %cond.true44, label %cond.false46, !dbg !11165

cond.true44:                                      ; preds = %cond.end
  %call45 = tail call i32 @vector_type_mode(%union.tree_node* %1) #6, !dbg !11165
  br label %cond.end52, !dbg !11165

cond.false46:                                     ; preds = %cond.end
  %type47 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !11165
  %mode48 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type47, i64 0, i32 6, !dbg !11165
  %bf.load49 = load i32, i32* %mode48, align 4, !dbg !11165
  %bf.lshr50 = lshr i32 %bf.load49, 16, !dbg !11165
  %bf.clear51 = and i32 %bf.lshr50, 255, !dbg !11165
  br label %cond.end52, !dbg !11165

cond.end52:                                       ; preds = %cond.false46, %cond.true44
  %cond53 = phi i32 [ %call45, %cond.true44 ], [ %bf.clear51, %cond.false46 ], !dbg !11165
  %cmp54 = icmp eq i32 %cond, %cond53, !dbg !11166
  br i1 %cmp54, label %lor.lhs.false55, label %if.then73, !dbg !11167

lor.lhs.false55:                                  ; preds = %cond.end52, %land.lhs.true, %if.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11168
  %bf.load57 = load i64, i64* %4, align 8, !dbg !11168
  %bf.cast597 = and i64 %bf.load57, 65535, !dbg !11168
  %cmp60 = icmp eq i64 %bf.cast597, 6, !dbg !11168
  br i1 %cmp60, label %cleanup, label %lor.lhs.false61, !dbg !11168

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %cmp66 = icmp eq i64 %bf.cast597, 7, !dbg !11168
  br i1 %cmp66, label %cleanup, label %lor.lhs.false67, !dbg !11168

lor.lhs.false67:                                  ; preds = %lor.lhs.false61
  %cmp72 = icmp eq i64 %bf.cast597, 8, !dbg !11168
  br i1 %cmp72, label %cleanup, label %if.then73, !dbg !11169

if.then73:                                        ; preds = %cond.end52, %lor.lhs.false67, %lor.lhs.false23, %lor.lhs.false11
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.110, i64 0, i64 0)) #6, !dbg !11170
  tail call void @debug_generic_expr(%union.tree_node* %type) #6, !dbg !11172
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11173
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11174
  br label %cleanup, !dbg !11175

cleanup:                                          ; preds = %lor.lhs.false55, %lor.lhs.false61, %lor.lhs.false67, %if.then73, %if.then
  %retval.0 = phi i8 [ 1, %if.then73 ], [ 1, %if.then ], [ 0, %lor.lhs.false67 ], [ 0, %lor.lhs.false61 ], [ 0, %lor.lhs.false55 ], !dbg !11144
  ret i8 %retval.0, !dbg !11176
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_goto(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11177 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11179, metadata !DIExpression()), !dbg !11181
  %call = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %stmt) #7, !dbg !11182
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11180, metadata !DIExpression()), !dbg !11181
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11183
  %bf.load = load i64, i64* %0, align 8, !dbg !11183
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11185
  %cmp = icmp eq i64 %bf.cast1, 30, !dbg !11185
  br i1 %cmp, label %cleanup, label %land.lhs.true, !dbg !11186

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call) #6, !dbg !11187
  %tobool = icmp eq i8 %call1, 0, !dbg !11187
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11188

lor.lhs.false:                                    ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11189
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !11189
  %2 = load i64*, i64** %1, align 8, !dbg !11189
  %bf.load3 = load i64, i64* %2, align 8, !dbg !11189
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !11189
  %cmp6 = icmp eq i64 %bf.cast52, 10, !dbg !11189
  br i1 %cmp6, label %cleanup, label %lor.lhs.false7, !dbg !11189

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp14 = icmp eq i64 %bf.cast52, 12, !dbg !11189
  br i1 %cmp14, label %cleanup, label %if.then, !dbg !11190

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false7
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.111, i64 0, i64 0)) #6, !dbg !11191
  br label %cleanup, !dbg !11193

cleanup:                                          ; preds = %entry, %lor.lhs.false, %lor.lhs.false7, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !11181
  ret i8 %retval.0, !dbg !11194
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_switch(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11195 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11197, metadata !DIExpression()), !dbg !11198
  %call = tail call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt) #7, !dbg !11199
  %call1 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call) #6, !dbg !11201
  %tobool = icmp eq i8 %call1, 0, !dbg !11201
  br i1 %tobool, label %if.then, label %return, !dbg !11202

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.112, i64 0, i64 0)) #6, !dbg !11203
  %call2 = tail call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt) #7, !dbg !11205
  tail call void @debug_generic_stmt(%union.tree_node* %call2) #6, !dbg !11206
  br label %return, !dbg !11207

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %entry ], !dbg !11198
  ret i8 %retval.0, !dbg !11208
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_return(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11209 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11211, metadata !DIExpression()), !dbg !11214
  %call = tail call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %stmt) #7, !dbg !11215
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11212, metadata !DIExpression()), !dbg !11214
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !11216
  %decl = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 6, !dbg !11216
  %1 = bitcast %union.tree_node** %decl to %struct.tree_common**, !dbg !11216
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !11216
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !11216
  %3 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !11216
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !11216
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !11216
  %5 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !11216
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11213, metadata !DIExpression()), !dbg !11214
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !11217
  br i1 %cmp, label %cleanup, label %if.end, !dbg !11219

if.end:                                           ; preds = %entry
  %call3 = tail call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %call) #6, !dbg !11220
  %tobool = icmp eq i8 %call3, 0, !dbg !11220
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !11222

land.lhs.true:                                    ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11223
  %bf.load = load i64, i64* %6, align 8, !dbg !11223
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11224
  %cmp4 = icmp eq i64 %bf.cast1, 36, !dbg !11224
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !11225

if.then5:                                         ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.113, i64 0, i64 0)) #6, !dbg !11226
  tail call void @debug_generic_stmt(%union.tree_node* nonnull %call) #6, !dbg !11228
  br label %cleanup, !dbg !11229

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11230
  %7 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !11230
  %call9 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %5, %union.tree_node* %7) #6, !dbg !11232
  %tobool10 = icmp eq i8 %call9, 0, !dbg !11232
  br i1 %tobool10, label %land.lhs.true11, label %cleanup, !dbg !11233

land.lhs.true11:                                  ; preds = %if.end6
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11234
  %bf.load13 = load i64, i64* %8, align 8, !dbg !11234
  %bf.cast152 = and i64 %bf.load13, 65535, !dbg !11235
  %cmp16 = icmp eq i64 %bf.cast152, 36, !dbg !11235
  br i1 %cmp16, label %land.lhs.true17, label %if.then32, !dbg !11236

land.lhs.true17:                                  ; preds = %land.lhs.true11
  %9 = bitcast %union.tree_node** %type8 to i64**, !dbg !11237
  %10 = load i64*, i64** %9, align 8, !dbg !11237
  %bf.load21 = load i64, i64* %10, align 8, !dbg !11237
  %bf.cast233 = and i64 %bf.load21, 65535, !dbg !11238
  %cmp24 = icmp eq i64 %bf.cast233, 12, !dbg !11238
  br i1 %cmp24, label %land.lhs.true25, label %if.then32, !dbg !11239

land.lhs.true25:                                  ; preds = %land.lhs.true17
  %type29 = getelementptr inbounds i64, i64* %10, i64 2, !dbg !11240
  %11 = bitcast i64* %type29 to %union.tree_node**, !dbg !11240
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !11240
  %call30 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %5, %union.tree_node* %12) #6, !dbg !11241
  %tobool31 = icmp eq i8 %call30, 0, !dbg !11241
  br i1 %tobool31, label %if.then32, label %cleanup, !dbg !11242

if.then32:                                        ; preds = %land.lhs.true25, %land.lhs.true17, %land.lhs.true11
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.114, i64 0, i64 0)) #6, !dbg !11243
  tail call void @debug_generic_stmt(%union.tree_node* %5) #6, !dbg !11245
  %13 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !11246
  tail call void @debug_generic_stmt(%union.tree_node* %13) #6, !dbg !11247
  br label %cleanup, !dbg !11248

cleanup:                                          ; preds = %land.lhs.true25, %if.end6, %entry, %if.then32, %if.then5
  %retval.0 = phi i8 [ 1, %if.then32 ], [ 1, %if.then5 ], [ 0, %entry ], [ 0, %land.lhs.true25 ], [ 0, %if.end6 ], !dbg !11214
  ret i8 %retval.0, !dbg !11249
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_phi(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11250 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11252, metadata !DIExpression()), !dbg !11259
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %stmt) #7, !dbg !11260
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11260
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !11260
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11253, metadata !DIExpression()), !dbg !11259
  %call2 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %stmt) #7, !dbg !11261
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11261
  %bf.load = load i64, i64* %1, align 8, !dbg !11261
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11263
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !11263
  br i1 %cmp, label %for.cond.preheader, label %if.then, !dbg !11264

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !11265

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.115, i64 0, i64 0)) #6, !dbg !11266
  br label %cleanup27, !dbg !11268

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !11269
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11254, metadata !DIExpression()), !dbg !11259
  %call3 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !11270
  %2 = zext i32 %call3 to i64, !dbg !11271
  %cmp4 = icmp ult i64 %indvars.iv, %2, !dbg !11271
  br i1 %cmp4, label %for.body, label %cleanup27.loopexit, !dbg !11265

for.body:                                         ; preds = %for.cond
  %call5 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %stmt, i64 %indvars.iv) #7, !dbg !11272
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !11255, metadata !DIExpression()), !dbg !11273
  %call6 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %stmt) #7, !dbg !11274
  %call7 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call6) #6, !dbg !11276
  %tobool = icmp eq i8 %call7, 0, !dbg !11276
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !11277

land.lhs.true:                                    ; preds = %for.body
  %call9 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call5) #6, !dbg !11278
  %tobool10 = icmp eq i8 %call9, 0, !dbg !11278
  br i1 %tobool10, label %if.then17, label %lor.lhs.false, !dbg !11279

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  %call11 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %stmt) #7, !dbg !11280
  %call12 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call11) #6, !dbg !11281
  %tobool13 = icmp eq i8 %call12, 0, !dbg !11281
  br i1 %tobool13, label %land.lhs.true14, label %if.end18, !dbg !11282

land.lhs.true14:                                  ; preds = %lor.lhs.false
  %call15 = tail call zeroext i8 @is_gimple_addressable(%union.tree_node* %call5) #6, !dbg !11283
  %tobool16 = icmp eq i8 %call15, 0, !dbg !11283
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !11284

if.then17:                                        ; preds = %land.lhs.true, %land.lhs.true14
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0)) #6, !dbg !11285
  tail call void @debug_generic_stmt(%union.tree_node* %call5) #6, !dbg !11287
  br label %cleanup, !dbg !11288

if.end18:                                         ; preds = %land.lhs.true14, %lor.lhs.false
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11289
  %3 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !11289
  %call21 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %3) #6, !dbg !11291
  %tobool22 = icmp eq i8 %call21, 0, !dbg !11291
  br i1 %tobool22, label %if.then23, label %cleanup, !dbg !11292

if.then23:                                        ; preds = %if.end18
  %4 = trunc i64 %indvars.iv to i32, !dbg !11293
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.117, i64 0, i64 0), i32 %4) #6, !dbg !11293
  tail call void @debug_generic_stmt(%union.tree_node* %0) #6, !dbg !11295
  %5 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !11296
  tail call void @debug_generic_stmt(%union.tree_node* %5) #6, !dbg !11297
  br label %cleanup, !dbg !11298

cleanup:                                          ; preds = %if.end18, %if.then23, %if.then17
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then23 ], [ false, %if.then17 ], [ true, %if.end18 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup27.loopexit

for.inc:                                          ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11299
  br label %for.cond, !dbg !11300, !llvm.loop !11301

cleanup27.loopexit:                               ; preds = %cleanup, %for.cond
  %retval.2.ph = phi i8 [ 0, %for.cond ], [ 1, %cleanup ]
  br label %cleanup27, !dbg !11303

cleanup27:                                        ; preds = %cleanup27.loopexit, %if.then
  %retval.2 = phi i8 [ 1, %if.then ], [ %retval.2.ph, %cleanup27.loopexit ]
  ret i8 %retval.2, !dbg !11303
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_debug(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11304 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11306, metadata !DIExpression()), !dbg !11307
  ret i8 undef, !dbg !11308
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_class(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11309 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11313, metadata !DIExpression()), !dbg !11314
  %call = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) #7, !dbg !11315
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !11316
  ret i32 %call1, !dbg !11317
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_assign_single(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11318 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11320, metadata !DIExpression()), !dbg !11330
  %call = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !11331
  call void @llvm.dbg.value(metadata i32 %call, metadata !11321, metadata !DIExpression()), !dbg !11330
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11332
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !11322, metadata !DIExpression()), !dbg !11330
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11333
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11333
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11323, metadata !DIExpression()), !dbg !11330
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !11334
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !11324, metadata !DIExpression()), !dbg !11330
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11335
  %1 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !11335
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11325, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.value(metadata i8 0, metadata !11326, metadata !DIExpression()), !dbg !11330
  %call5 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !11336
  %tobool = icmp eq i8 %call5, 0, !dbg !11336
  br i1 %tobool, label %if.then, label %if.end, !dbg !11338

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0)) #6, !dbg !11339
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11341
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11342
  br label %cleanup72, !dbg !11343

if.end:                                           ; preds = %entry
  %call6 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %call1) #7, !dbg !11344
  %tobool7 = icmp eq i8 %call6, 0, !dbg !11344
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !11346

if.then8:                                         ; preds = %if.end
  %call9 = tail call fastcc zeroext i8 @verify_types_in_gimple_reference(%union.tree_node* %call1, i8 zeroext 1) #7, !dbg !11347
  call void @llvm.dbg.value(metadata i8 %call9, metadata !11326, metadata !DIExpression()), !dbg !11330
  br label %if.end12, !dbg !11348

if.end12:                                         ; preds = %if.end, %if.then8
  %res.0 = phi i8 [ %call9, %if.then8 ], [ 0, %if.end ], !dbg !11330
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !11326, metadata !DIExpression()), !dbg !11330
  switch i32 %call, label %cleanup72 [
    i32 121, label %sw.bb
    i32 41, label %sw.bb38
    i32 42, label %sw.bb38
    i32 47, label %sw.bb38
    i32 48, label %sw.bb38
    i32 49, label %sw.bb38
    i32 45, label %sw.bb38
    i32 46, label %sw.bb38
    i32 118, label %sw.bb38
    i32 43, label %sw.bb38
    i32 44, label %sw.bb38
    i32 152, label %sw.bb38
    i32 34, label %sw.bb57
    i32 32, label %sw.bb57
  ], !dbg !11349

sw.bb:                                            ; preds = %if.end12
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11350
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !11350
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11327, metadata !DIExpression()), !dbg !11351
  %call13 = tail call zeroext i8 @is_gimple_addressable(%union.tree_node* %2) #6, !dbg !11352
  %tobool14 = icmp eq i8 %call13, 0, !dbg !11352
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !11354

if.then15:                                        ; preds = %sw.bb
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !11355
  br label %cleanup72, !dbg !11357

if.end16:                                         ; preds = %sw.bb
  %type18 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11358
  %3 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !11358
  %4 = bitcast %union.tree_node** %type4 to %struct.tree_common**, !dbg !11360
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !11360
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !11360
  %6 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !11360
  %call23 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %3, %union.tree_node* %6) #6, !dbg !11361
  %tobool24 = icmp eq i8 %call23, 0, !dbg !11361
  br i1 %tobool24, label %land.lhs.true, label %if.end36, !dbg !11362

land.lhs.true:                                    ; preds = %if.end16
  %7 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !11363
  %8 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !11364
  %call29 = tail call fastcc zeroext i8 @one_pointer_to_useless_type_conversion_p(%union.tree_node* %7, %union.tree_node* %8) #7, !dbg !11365
  %tobool30 = icmp eq i8 %call29, 0, !dbg !11365
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !11366

if.then31:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.70, i64 0, i64 0)) #6, !dbg !11367
  %9 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !11369
  tail call void @debug_generic_stmt(%union.tree_node* %9) #6, !dbg !11370
  %10 = load %union.tree_node*, %union.tree_node** %type18, align 8, !dbg !11371
  tail call void @debug_generic_stmt(%union.tree_node* %10) #6, !dbg !11372
  br label %cleanup72, !dbg !11373

if.end36:                                         ; preds = %land.lhs.true, %if.end16
  %call37 = tail call fastcc zeroext i8 @verify_types_in_gimple_reference(%union.tree_node* %2, i8 zeroext 1) #7, !dbg !11374
  br label %cleanup72, !dbg !11375

sw.bb38:                                          ; preds = %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12, %if.end12
  %call39 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !11376
  %tobool40 = icmp eq i8 %call39, 0, !dbg !11376
  br i1 %tobool40, label %land.lhs.true41, label %if.end48, !dbg !11378

land.lhs.true41:                                  ; preds = %sw.bb38
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11379
  %call44 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %11) #6, !dbg !11380
  %tobool46 = icmp eq i8 %call44, 0, !dbg !11380
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !11381

if.then47:                                        ; preds = %land.lhs.true41
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !11382
  tail call void @debug_generic_stmt(%union.tree_node* %call1) #6, !dbg !11384
  tail call void @debug_generic_stmt(%union.tree_node* %call2) #6, !dbg !11385
  br label %cleanup72, !dbg !11386

if.end48:                                         ; preds = %land.lhs.true41, %sw.bb38
  %tobool50 = icmp eq i8 %res.0, 0, !dbg !11387
  br i1 %tobool50, label %lor.rhs, label %lor.end, !dbg !11388

lor.rhs:                                          ; preds = %if.end48
  %call51 = tail call fastcc zeroext i8 @verify_types_in_gimple_reference(%union.tree_node* %call2, i8 zeroext 0) #7, !dbg !11389
  %tobool53 = icmp ne i8 %call51, 0, !dbg !11388
  %phitmp = zext i1 %tobool53 to i8, !dbg !11388
  br label %lor.end, !dbg !11388

lor.end:                                          ; preds = %if.end48, %lor.rhs
  %12 = phi i8 [ 1, %if.end48 ], [ %phitmp, %lor.rhs ]
  br label %cleanup72, !dbg !11390

sw.bb57:                                          ; preds = %if.end12, %if.end12
  %call58 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !11391
  %tobool59 = icmp eq i8 %call58, 0, !dbg !11391
  br i1 %tobool59, label %land.lhs.true60, label %cleanup72, !dbg !11393

land.lhs.true60:                                  ; preds = %sw.bb57
  %call61 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call2) #6, !dbg !11394
  %tobool62 = icmp eq i8 %call61, 0, !dbg !11394
  br i1 %tobool62, label %land.lhs.true63, label %cleanup72, !dbg !11395

land.lhs.true63:                                  ; preds = %land.lhs.true60
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11396
  %call66 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %13) #6, !dbg !11397
  %tobool68 = icmp eq i8 %call66, 0, !dbg !11397
  br i1 %tobool68, label %cleanup72, label %if.then69, !dbg !11398

if.then69:                                        ; preds = %land.lhs.true63
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !11399
  tail call void @debug_generic_stmt(%union.tree_node* %call1) #6, !dbg !11401
  tail call void @debug_generic_stmt(%union.tree_node* %call2) #6, !dbg !11402
  br label %cleanup72, !dbg !11403

cleanup72:                                        ; preds = %land.lhs.true63, %land.lhs.true60, %sw.bb57, %if.end12, %if.then15, %if.then31, %if.end36, %if.then69, %lor.end, %if.then47, %if.then
  %retval.1 = phi i8 [ 1, %if.then69 ], [ %12, %lor.end ], [ 1, %if.then47 ], [ 1, %if.then ], [ %call37, %if.end36 ], [ 1, %if.then31 ], [ 1, %if.then15 ], [ %res.0, %land.lhs.true63 ], [ %res.0, %land.lhs.true60 ], [ %res.0, %sw.bb57 ], [ %res.0, %if.end12 ], !dbg !11330
  ret i8 %retval.1, !dbg !11404
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_assign_unary(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11405 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11407, metadata !DIExpression()), !dbg !11413
  %call = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !11414
  call void @llvm.dbg.value(metadata i32 %call, metadata !11408, metadata !DIExpression()), !dbg !11413
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11415
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !11409, metadata !DIExpression()), !dbg !11413
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11416
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11416
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11410, metadata !DIExpression()), !dbg !11413
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !11417
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !11411, metadata !DIExpression()), !dbg !11413
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11418
  %1 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !11418
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11412, metadata !DIExpression()), !dbg !11413
  %call5 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !11419
  %tobool = icmp eq i8 %call5, 0, !dbg !11419
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11421

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @optimize, align 4, !dbg !11422
  %cmp = icmp eq i32 %2, 0, !dbg !11423
  br i1 %cmp, label %land.lhs.true6, label %if.then, !dbg !11424

land.lhs.true6:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11425
  %bf.load = load i64, i64* %3, align 8, !dbg !11425
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !11426
  %cmp7 = icmp eq i64 %bf.cast2, 13, !dbg !11426
  br i1 %cmp7, label %if.end, label %if.then, !dbg !11427

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.81, i64 0, i64 0)) #6, !dbg !11428
  br label %cleanup, !dbg !11430

if.end:                                           ; preds = %entry, %land.lhs.true6
  %call8 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call2) #6, !dbg !11431
  %tobool9 = icmp eq i8 %call8, 0, !dbg !11431
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !11433

if.then10:                                        ; preds = %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !11434
  br label %cleanup, !dbg !11436

if.end11:                                         ; preds = %if.end
  switch i32 %call, label %sw.default [
    i32 116, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb158
    i32 115, label %sw.bb197
    i32 78, label %sw.bb205
    i32 77, label %sw.bb231
    i32 174, label %cleanup
    i32 175, label %cleanup
    i32 164, label %cleanup
    i32 165, label %cleanup
    i32 166, label %cleanup
    i32 176, label %cleanup
    i32 177, label %cleanup
    i32 96, label %sw.epilog
    i32 79, label %sw.epilog
    i32 82, label %sw.epilog
    i32 90, label %sw.epilog
    i32 112, label %sw.epilog
    i32 117, label %sw.epilog
    i32 124, label %sw.epilog
  ], !dbg !11437

sw.bb:                                            ; preds = %if.end11, %if.end11
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11438
  %bf.load13 = load i64, i64* %4, align 8, !dbg !11438
  %bf.cast1515 = and i64 %bf.load13, 65535, !dbg !11438
  %cmp16 = icmp eq i64 %bf.cast1515, 10, !dbg !11438
  br i1 %cmp16, label %land.lhs.true22, label %lor.lhs.false, !dbg !11438

lor.lhs.false:                                    ; preds = %sw.bb
  %cmp21 = icmp eq i64 %bf.cast1515, 12, !dbg !11438
  br i1 %cmp21, label %land.lhs.true22, label %lor.lhs.false.lor.lhs.false51_crit_edge, !dbg !11442

lor.lhs.false.lor.lhs.false51_crit_edge:          ; preds = %lor.lhs.false
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11443
  %bf.load53.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !11444
  %.pre = and i64 %bf.load53.pre, 65535, !dbg !11444
  br label %lor.lhs.false51, !dbg !11442

land.lhs.true22:                                  ; preds = %lor.lhs.false, %sw.bb
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11445
  %bf.load24 = load i64, i64* %5, align 8, !dbg !11445
  %bf.cast2633 = and i64 %bf.load24, 65535, !dbg !11445
  %cmp27 = icmp eq i64 %bf.cast2633, 6, !dbg !11445
  br i1 %cmp27, label %land.lhs.true40, label %lor.lhs.false28, !dbg !11445

lor.lhs.false28:                                  ; preds = %land.lhs.true22
  %cmp33 = icmp eq i64 %bf.cast2633, 7, !dbg !11445
  br i1 %cmp33, label %land.lhs.true40, label %lor.lhs.false34, !dbg !11445

lor.lhs.false34:                                  ; preds = %lor.lhs.false28
  %cmp39 = icmp eq i64 %bf.cast2633, 8, !dbg !11445
  br i1 %cmp39, label %land.lhs.true40, label %lor.lhs.false51, !dbg !11446

land.lhs.true40:                                  ; preds = %lor.lhs.false34, %lor.lhs.false28, %land.lhs.true22
  %type41 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !11447
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type41, i64 0, i32 6, !dbg !11447
  %bf.load42 = load i32, i32* %precision, align 4, !dbg !11447
  %bf.clear43 = and i32 %bf.load42, 1023, !dbg !11447
  %type44 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !11448
  %precision45 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type44, i64 0, i32 6, !dbg !11448
  %bf.load46 = load i32, i32* %precision45, align 4, !dbg !11448
  %bf.clear47 = and i32 %bf.load46, 1023, !dbg !11448
  %cmp48 = icmp uge i32 %bf.clear43, %bf.clear47, !dbg !11449
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !11450
  %cmp50 = icmp eq %union.tree_node* %1, %6, !dbg !11451
  %or.cond = or i1 %cmp48, %cmp50, !dbg !11452
  br i1 %or.cond, label %cleanup, label %lor.lhs.false51, !dbg !11452

lor.lhs.false51:                                  ; preds = %lor.lhs.false.lor.lhs.false51_crit_edge, %land.lhs.true40, %lor.lhs.false34
  %bf.cast5517.pre-phi = phi i64 [ %.pre, %lor.lhs.false.lor.lhs.false51_crit_edge ], [ %bf.cast2633, %land.lhs.true40 ], [ %bf.cast2633, %lor.lhs.false34 ], !dbg !11444
  %cmp56 = icmp eq i64 %bf.cast5517.pre-phi, 10, !dbg !11444
  br i1 %cmp56, label %land.lhs.true63, label %lor.lhs.false57, !dbg !11444

lor.lhs.false57:                                  ; preds = %lor.lhs.false51
  %cmp62 = icmp eq i64 %bf.cast5517.pre-phi, 12, !dbg !11444
  br i1 %cmp62, label %land.lhs.true63, label %if.end94, !dbg !11453

land.lhs.true63:                                  ; preds = %lor.lhs.false57, %lor.lhs.false51
  %cmp68 = icmp eq i64 %bf.cast1515, 6, !dbg !11454
  br i1 %cmp68, label %land.lhs.true81, label %lor.lhs.false69, !dbg !11454

lor.lhs.false69:                                  ; preds = %land.lhs.true63
  %cmp74 = icmp eq i64 %bf.cast1515, 7, !dbg !11454
  br i1 %cmp74, label %land.lhs.true81, label %lor.lhs.false75, !dbg !11454

lor.lhs.false75:                                  ; preds = %lor.lhs.false69
  %cmp80 = icmp eq i64 %bf.cast1515, 8, !dbg !11454
  br i1 %cmp80, label %land.lhs.true81, label %if.end94, !dbg !11455

land.lhs.true81:                                  ; preds = %lor.lhs.false75, %lor.lhs.false69, %land.lhs.true63
  %type82 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !11456
  %precision83 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type82, i64 0, i32 6, !dbg !11456
  %bf.load84 = load i32, i32* %precision83, align 4, !dbg !11456
  %bf.clear85 = and i32 %bf.load84, 1023, !dbg !11456
  %type86 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !11457
  %precision87 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type86, i64 0, i32 6, !dbg !11457
  %bf.load88 = load i32, i32* %precision87, align 4, !dbg !11457
  %bf.clear89 = and i32 %bf.load88, 1023, !dbg !11457
  %cmp90 = icmp uge i32 %bf.clear85, %bf.clear89, !dbg !11458
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !11459
  %cmp92 = icmp eq %union.tree_node* %0, %7, !dbg !11460
  %or.cond1 = or i1 %cmp90, %cmp92, !dbg !11461
  br i1 %or.cond1, label %cleanup, label %if.end94, !dbg !11461

if.end94:                                         ; preds = %land.lhs.true81, %lor.lhs.false75, %lor.lhs.false57
  %cmp99 = icmp eq i64 %bf.cast1515, 5, !dbg !11462
  br i1 %cmp99, label %land.lhs.true100, label %lor.lhs.false106, !dbg !11464

land.lhs.true100:                                 ; preds = %if.end94
  %cmp105 = icmp eq i64 %bf.cast5517.pre-phi, 8, !dbg !11465
  br i1 %cmp105, label %cleanup, label %lor.lhs.false106, !dbg !11466

lor.lhs.false106:                                 ; preds = %land.lhs.true100, %if.end94
  %cmp111 = icmp eq i64 %bf.cast1515, 8, !dbg !11467
  br i1 %cmp111, label %land.lhs.true112, label %if.end119, !dbg !11468

land.lhs.true112:                                 ; preds = %lor.lhs.false106
  %cmp117 = icmp eq i64 %bf.cast5517.pre-phi, 5, !dbg !11469
  br i1 %cmp117, label %cleanup, label %if.end119, !dbg !11470

if.end119:                                        ; preds = %land.lhs.true112, %lor.lhs.false106
  %cmp124 = icmp eq i64 %bf.cast1515, 6, !dbg !11471
  br i1 %cmp124, label %lor.end, label %lor.lhs.false125, !dbg !11471

lor.lhs.false125:                                 ; preds = %if.end119
  %cmp130 = icmp eq i64 %bf.cast1515, 7, !dbg !11471
  br i1 %cmp130, label %lor.end, label %lor.rhs, !dbg !11471

lor.rhs:                                          ; preds = %lor.lhs.false125
  %phitmp = zext i1 %cmp111 to i32, !dbg !11471
  br label %lor.end, !dbg !11471

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false125, %if.end119
  %8 = phi i32 [ 1, %lor.lhs.false125 ], [ 1, %if.end119 ], [ %phitmp, %lor.rhs ]
  %cmp140 = icmp eq i64 %bf.cast5517.pre-phi, 6, !dbg !11473
  br i1 %cmp140, label %lor.end153, label %lor.lhs.false141, !dbg !11473

lor.lhs.false141:                                 ; preds = %lor.end
  %cmp146 = icmp eq i64 %bf.cast5517.pre-phi, 7, !dbg !11473
  br i1 %cmp146, label %lor.end153, label %lor.rhs147, !dbg !11473

lor.rhs147:                                       ; preds = %lor.lhs.false141
  %cmp152 = icmp eq i64 %bf.cast5517.pre-phi, 8, !dbg !11473
  %phitmp27 = zext i1 %cmp152 to i32, !dbg !11473
  br label %lor.end153, !dbg !11473

lor.end153:                                       ; preds = %lor.rhs147, %lor.lhs.false141, %lor.end
  %9 = phi i32 [ 1, %lor.lhs.false141 ], [ 1, %lor.end ], [ %phitmp27, %lor.rhs147 ]
  %cmp155 = icmp eq i32 %8, %9, !dbg !11474
  br i1 %cmp155, label %cleanup, label %if.then156, !dbg !11475

if.then156:                                       ; preds = %lor.end153
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.83, i64 0, i64 0)) #6, !dbg !11476
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11478
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11479
  br label %cleanup, !dbg !11480

sw.bb158:                                         ; preds = %if.end11
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11481
  %bf.load160 = load i64, i64* %10, align 8, !dbg !11481
  %bf.cast16211 = and i64 %bf.load160, 65535, !dbg !11481
  %cmp163 = icmp eq i64 %bf.cast16211, 10, !dbg !11481
  br i1 %cmp163, label %lor.lhs.false170, label %lor.lhs.false164, !dbg !11481

lor.lhs.false164:                                 ; preds = %sw.bb158
  %cmp169 = icmp eq i64 %bf.cast16211, 12, !dbg !11481
  br i1 %cmp169, label %lor.lhs.false170, label %if.then195, !dbg !11484

lor.lhs.false170:                                 ; preds = %lor.lhs.false164, %sw.bb158
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11485
  %bf.load172 = load i64, i64* %11, align 8, !dbg !11485
  %bf.cast17413 = and i64 %bf.load172, 65535, !dbg !11485
  %cmp175 = icmp eq i64 %bf.cast17413, 10, !dbg !11485
  br i1 %cmp175, label %lor.lhs.false182, label %lor.lhs.false176, !dbg !11485

lor.lhs.false176:                                 ; preds = %lor.lhs.false170
  %cmp181 = icmp eq i64 %bf.cast17413, 12, !dbg !11485
  br i1 %cmp181, label %lor.lhs.false182, label %if.then195, !dbg !11486

lor.lhs.false182:                                 ; preds = %lor.lhs.false176, %lor.lhs.false170
  %type184 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11487
  %12 = bitcast %union.tree_node** %type184 to i64**, !dbg !11487
  %13 = load i64*, i64** %12, align 8, !dbg !11487
  %bf.load186 = load i64, i64* %13, align 8, !dbg !11487
  %bf.lshr = lshr i64 %bf.load186, 56, !dbg !11487
  %bf.cast187 = trunc i64 %bf.lshr to i32, !dbg !11487
  %type189 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11488
  %14 = bitcast %union.tree_node** %type189 to i64**, !dbg !11488
  %15 = load i64*, i64** %14, align 8, !dbg !11488
  %bf.load191 = load i64, i64* %15, align 8, !dbg !11488
  %bf.lshr192 = lshr i64 %bf.load191, 56, !dbg !11488
  %bf.cast193 = trunc i64 %bf.lshr192 to i32, !dbg !11488
  %cmp194 = icmp eq i32 %bf.cast187, %bf.cast193, !dbg !11489
  br i1 %cmp194, label %if.then195, label %cleanup, !dbg !11490

if.then195:                                       ; preds = %lor.lhs.false182, %lor.lhs.false176, %lor.lhs.false164
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.84, i64 0, i64 0)) #6, !dbg !11491
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11493
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11494
  br label %cleanup, !dbg !11495

sw.bb197:                                         ; preds = %if.end11
  %call198 = tail call fastcc zeroext i8 @valid_fixed_convert_types_p(%union.tree_node* %0, %union.tree_node* %1) #7, !dbg !11496
  %tobool199 = icmp eq i8 %call198, 0, !dbg !11496
  br i1 %tobool199, label %land.lhs.true200, label %cleanup, !dbg !11499

land.lhs.true200:                                 ; preds = %sw.bb197
  %call201 = tail call fastcc zeroext i8 @valid_fixed_convert_types_p(%union.tree_node* %1, %union.tree_node* %0) #7, !dbg !11500
  %tobool202 = icmp eq i8 %call201, 0, !dbg !11500
  br i1 %tobool202, label %if.then203, label %cleanup, !dbg !11501

if.then203:                                       ; preds = %land.lhs.true200
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !11502
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11504
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11505
  br label %cleanup, !dbg !11506

sw.bb205:                                         ; preds = %if.end11
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11507
  %bf.load207 = load i64, i64* %16, align 8, !dbg !11507
  %bf.cast2097 = and i64 %bf.load207, 65535, !dbg !11507
  %cmp210 = icmp eq i64 %bf.cast2097, 6, !dbg !11507
  br i1 %cmp210, label %lor.lhs.false223, label %lor.lhs.false211, !dbg !11507

lor.lhs.false211:                                 ; preds = %sw.bb205
  %cmp216 = icmp eq i64 %bf.cast2097, 7, !dbg !11507
  br i1 %cmp216, label %lor.lhs.false223, label %lor.lhs.false217, !dbg !11507

lor.lhs.false217:                                 ; preds = %lor.lhs.false211
  %cmp222 = icmp eq i64 %bf.cast2097, 8, !dbg !11507
  br i1 %cmp222, label %lor.lhs.false223, label %if.then229, !dbg !11510

lor.lhs.false223:                                 ; preds = %lor.lhs.false217, %lor.lhs.false211, %sw.bb205
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11511
  %bf.load225 = load i64, i64* %17, align 8, !dbg !11511
  %bf.cast22710 = and i64 %bf.load225, 65535, !dbg !11511
  %cmp228 = icmp eq i64 %bf.cast22710, 9, !dbg !11511
  br i1 %cmp228, label %cleanup, label %if.then229, !dbg !11512

if.then229:                                       ; preds = %lor.lhs.false223, %lor.lhs.false217
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.86, i64 0, i64 0)) #6, !dbg !11513
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11515
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11516
  br label %cleanup, !dbg !11517

sw.bb231:                                         ; preds = %if.end11
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11518
  %bf.load233 = load i64, i64* %18, align 8, !dbg !11518
  %bf.cast2353 = and i64 %bf.load233, 65535, !dbg !11518
  %cmp236 = icmp eq i64 %bf.cast2353, 6, !dbg !11518
  br i1 %cmp236, label %lor.lhs.false249, label %lor.lhs.false237, !dbg !11518

lor.lhs.false237:                                 ; preds = %sw.bb231
  %cmp242 = icmp eq i64 %bf.cast2353, 7, !dbg !11518
  br i1 %cmp242, label %lor.lhs.false249, label %lor.lhs.false243, !dbg !11518

lor.lhs.false243:                                 ; preds = %lor.lhs.false237
  %cmp248 = icmp eq i64 %bf.cast2353, 8, !dbg !11518
  br i1 %cmp248, label %lor.lhs.false249, label %if.then255, !dbg !11521

lor.lhs.false249:                                 ; preds = %lor.lhs.false243, %lor.lhs.false237, %sw.bb231
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11522
  %bf.load251 = load i64, i64* %19, align 8, !dbg !11522
  %bf.cast2536 = and i64 %bf.load251, 65535, !dbg !11522
  %cmp254 = icmp eq i64 %bf.cast2536, 9, !dbg !11522
  br i1 %cmp254, label %cleanup, label %if.then255, !dbg !11523

if.then255:                                       ; preds = %lor.lhs.false249, %lor.lhs.false243
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !11524
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11526
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11527
  br label %cleanup, !dbg !11528

sw.default:                                       ; preds = %if.end11
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3206, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !11529
  br label %sw.epilog, !dbg !11530

sw.epilog:                                        ; preds = %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %sw.default
  %call259 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !11531
  %tobool260 = icmp eq i8 %call259, 0, !dbg !11531
  br i1 %tobool260, label %if.then261, label %cleanup, !dbg !11533

if.then261:                                       ; preds = %sw.epilog
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.88, i64 0, i64 0)) #6, !dbg !11534
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11536
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11537
  br label %cleanup, !dbg !11538

cleanup:                                          ; preds = %lor.end153, %land.lhs.true200, %sw.bb197, %sw.epilog, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %lor.lhs.false249, %lor.lhs.false223, %lor.lhs.false182, %land.lhs.true100, %land.lhs.true112, %land.lhs.true40, %land.lhs.true81, %if.then261, %if.then255, %if.then229, %if.then203, %if.then195, %if.then156, %if.then10, %if.then
  %retval.0 = phi i8 [ 1, %if.then261 ], [ 1, %if.then255 ], [ 1, %if.then229 ], [ 1, %if.then203 ], [ 1, %if.then195 ], [ 1, %if.then156 ], [ 1, %if.then10 ], [ 1, %if.then ], [ 0, %land.lhs.true81 ], [ 0, %land.lhs.true40 ], [ 0, %land.lhs.true112 ], [ 0, %land.lhs.true100 ], [ 0, %lor.end153 ], [ 0, %lor.lhs.false182 ], [ 0, %land.lhs.true200 ], [ 0, %sw.bb197 ], [ 0, %lor.lhs.false223 ], [ 0, %lor.lhs.false249 ], [ 0, %if.end11 ], [ 0, %if.end11 ], [ 0, %if.end11 ], [ 0, %if.end11 ], [ 0, %if.end11 ], [ 0, %if.end11 ], [ 0, %if.end11 ], [ 0, %sw.epilog ], !dbg !11413
  ret i8 %retval.0, !dbg !11539
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_gimple_assign_binary(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !11540 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11542, metadata !DIExpression()), !dbg !11559
  %call = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %call, metadata !11543, metadata !DIExpression()), !dbg !11559
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !11561
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !11544, metadata !DIExpression()), !dbg !11559
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11562
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11562
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11545, metadata !DIExpression()), !dbg !11559
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !11563
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !11546, metadata !DIExpression()), !dbg !11559
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11564
  %1 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !11564
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11547, metadata !DIExpression()), !dbg !11559
  %call5 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !11565
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !11548, metadata !DIExpression()), !dbg !11559
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11566
  %2 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !11566
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11549, metadata !DIExpression()), !dbg !11559
  %call8 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !11567
  %tobool = icmp eq i8 %call8, 0, !dbg !11567
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11569

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* @optimize, align 4, !dbg !11570
  %cmp = icmp eq i32 %3, 0, !dbg !11571
  br i1 %cmp, label %land.lhs.true9, label %if.then, !dbg !11572

land.lhs.true9:                                   ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11573
  %bf.load = load i64, i64* %4, align 8, !dbg !11573
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11574
  %cmp10 = icmp eq i64 %bf.cast1, 13, !dbg !11574
  br i1 %cmp10, label %if.end, label %if.then, !dbg !11575

if.then:                                          ; preds = %land.lhs.true9, %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.89, i64 0, i64 0)) #6, !dbg !11576
  br label %cleanup, !dbg !11578

if.end:                                           ; preds = %entry, %land.lhs.true9
  %call11 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call2) #6, !dbg !11579
  %tobool12 = icmp eq i8 %call11, 0, !dbg !11579
  br i1 %tobool12, label %if.then15, label %lor.lhs.false, !dbg !11581

lor.lhs.false:                                    ; preds = %if.end
  %call13 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %call5) #6, !dbg !11582
  %tobool14 = icmp eq i8 %call13, 0, !dbg !11582
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !11583

if.then15:                                        ; preds = %lor.lhs.false, %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.90, i64 0, i64 0)) #6, !dbg !11584
  br label %cleanup, !dbg !11586

if.end16:                                         ; preds = %lor.lhs.false
  switch i32 %call, label %sw.default [
    i32 123, label %sw.bb
    i32 83, label %sw.bb72
    i32 84, label %sw.bb72
    i32 85, label %sw.bb72
    i32 86, label %sw.bb72
    i32 170, label %sw.bb209
    i32 171, label %sw.bb209
    i32 63, label %sw.bb329
    i32 64, label %if.end16.sw.bb385_crit_edge
    i32 66, label %do_pointer_plus_expr_check
    i32 91, label %sw.bb443
    i32 92, label %sw.bb443
    i32 93, label %sw.bb444
    i32 94, label %sw.bb444
    i32 95, label %sw.bb444
    i32 97, label %sw.bb500
    i32 98, label %sw.bb500
    i32 99, label %sw.bb500
    i32 100, label %sw.bb500
    i32 101, label %sw.bb500
    i32 102, label %sw.bb500
    i32 103, label %sw.bb500
    i32 104, label %sw.bb500
    i32 105, label %sw.bb500
    i32 106, label %sw.bb500
    i32 107, label %sw.bb500
    i32 108, label %sw.bb500
    i32 109, label %sw.bb500
    i32 110, label %sw.bb500
    i32 168, label %cleanup
    i32 169, label %cleanup
    i32 172, label %cleanup
    i32 173, label %cleanup
    i32 178, label %cleanup
    i32 179, label %cleanup
    i32 180, label %cleanup
    i32 181, label %cleanup
    i32 182, label %cleanup
    i32 183, label %cleanup
    i32 184, label %cleanup
    i32 65, label %sw.epilog
    i32 67, label %sw.epilog
    i32 68, label %sw.epilog
    i32 69, label %sw.epilog
    i32 70, label %sw.epilog
    i32 71, label %sw.epilog
    i32 72, label %sw.epilog
    i32 73, label %sw.epilog
    i32 74, label %sw.epilog
    i32 75, label %sw.epilog
    i32 76, label %sw.epilog
    i32 80, label %sw.epilog
    i32 81, label %sw.epilog
    i32 87, label %sw.epilog
    i32 88, label %sw.epilog
    i32 89, label %sw.epilog
  ], !dbg !11587

if.end16.sw.bb385_crit_edge:                      ; preds = %if.end16
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11588
  %bf.load387.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !11591
  %.pre = and i64 %bf.load387.pre, 65535, !dbg !11591
  br label %sw.bb385, !dbg !11587

sw.bb:                                            ; preds = %if.end16
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11592
  %bf.load18 = load i64, i64* %5, align 8, !dbg !11592
  %bf.cast2060 = and i64 %bf.load18, 65535, !dbg !11595
  %cmp21 = icmp eq i64 %bf.cast2060, 13, !dbg !11595
  br i1 %cmp21, label %lor.lhs.false22, label %if.then70, !dbg !11596

lor.lhs.false22:                                  ; preds = %sw.bb
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11597
  %bf.load24 = load i64, i64* %6, align 8, !dbg !11597
  %bf.cast2661 = and i64 %bf.load24, 65535, !dbg !11597
  %cmp27 = icmp eq i64 %bf.cast2661, 6, !dbg !11597
  br i1 %cmp27, label %lor.lhs.false46, label %lor.lhs.false28, !dbg !11597

lor.lhs.false28:                                  ; preds = %lor.lhs.false22
  %cmp33 = icmp eq i64 %bf.cast2661, 7, !dbg !11597
  br i1 %cmp33, label %lor.lhs.false46, label %lor.lhs.false34, !dbg !11597

lor.lhs.false34:                                  ; preds = %lor.lhs.false28
  %cmp39 = icmp eq i64 %bf.cast2661, 8, !dbg !11597
  br i1 %cmp39, label %lor.lhs.false46, label %lor.lhs.false40, !dbg !11598

lor.lhs.false40:                                  ; preds = %lor.lhs.false34
  %cmp45 = icmp eq i64 %bf.cast2661, 9, !dbg !11599
  br i1 %cmp45, label %lor.lhs.false46, label %if.then70, !dbg !11600

lor.lhs.false46:                                  ; preds = %lor.lhs.false40, %lor.lhs.false34, %lor.lhs.false28, %lor.lhs.false22
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11601
  %bf.load48 = load i64, i64* %7, align 8, !dbg !11601
  %bf.cast5065 = and i64 %bf.load48, 65535, !dbg !11601
  %cmp51 = icmp eq i64 %bf.cast5065, 6, !dbg !11601
  br i1 %cmp51, label %cleanup, label %lor.lhs.false52, !dbg !11601

lor.lhs.false52:                                  ; preds = %lor.lhs.false46
  %cmp57 = icmp eq i64 %bf.cast5065, 7, !dbg !11601
  br i1 %cmp57, label %cleanup, label %lor.lhs.false58, !dbg !11601

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %cmp63 = icmp eq i64 %bf.cast5065, 8, !dbg !11601
  br i1 %cmp63, label %cleanup, label %lor.lhs.false64, !dbg !11602

lor.lhs.false64:                                  ; preds = %lor.lhs.false58
  %cmp69 = icmp eq i64 %bf.cast5065, 9, !dbg !11603
  br i1 %cmp69, label %cleanup, label %if.then70, !dbg !11604

if.then70:                                        ; preds = %sw.bb, %lor.lhs.false64, %lor.lhs.false40
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.91, i64 0, i64 0)) #6, !dbg !11605
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11607
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11608
  tail call void @debug_generic_expr(%union.tree_node* %2) #6, !dbg !11609
  br label %cleanup, !dbg !11610

sw.bb72:                                          ; preds = %if.end16, %if.end16, %if.end16, %if.end16
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11611
  %bf.load74 = load i64, i64* %8, align 8, !dbg !11611
  %bf.cast7641 = and i64 %bf.load74, 65535, !dbg !11611
  %cmp77 = icmp eq i64 %bf.cast7641, 6, !dbg !11611
  br i1 %cmp77, label %lor.lhs.false126, label %lor.lhs.false78, !dbg !11611

lor.lhs.false78:                                  ; preds = %sw.bb72
  %cmp83 = icmp eq i64 %bf.cast7641, 7, !dbg !11611
  br i1 %cmp83, label %lor.lhs.false126, label %lor.lhs.false84, !dbg !11611

lor.lhs.false84:                                  ; preds = %lor.lhs.false78
  %cmp89 = icmp eq i64 %bf.cast7641, 8, !dbg !11611
  br i1 %cmp89, label %lor.lhs.false126, label %land.lhs.true90, !dbg !11614

land.lhs.true90:                                  ; preds = %lor.lhs.false84
  %cmp95 = icmp eq i64 %bf.cast7641, 11, !dbg !11615
  br i1 %cmp95, label %lor.lhs.false126, label %land.lhs.true96, !dbg !11616

land.lhs.true96:                                  ; preds = %land.lhs.true90
  %cmp101 = icmp eq i64 %bf.cast7641, 14, !dbg !11617
  br i1 %cmp101, label %land.lhs.true102, label %if.then207, !dbg !11618

land.lhs.true102:                                 ; preds = %land.lhs.true96
  %type104 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11619
  %9 = bitcast %union.tree_node** %type104 to i64**, !dbg !11619
  %10 = load i64*, i64** %9, align 8, !dbg !11619
  %bf.load106 = load i64, i64* %10, align 8, !dbg !11619
  %bf.cast10846 = and i64 %bf.load106, 65535, !dbg !11619
  %cmp109 = icmp eq i64 %bf.cast10846, 6, !dbg !11619
  br i1 %cmp109, label %lor.lhs.false126, label %lor.lhs.false110, !dbg !11619

lor.lhs.false110:                                 ; preds = %land.lhs.true102
  %cmp117 = icmp eq i64 %bf.cast10846, 7, !dbg !11619
  br i1 %cmp117, label %lor.lhs.false126, label %lor.lhs.false118, !dbg !11619

lor.lhs.false118:                                 ; preds = %lor.lhs.false110
  %cmp125 = icmp eq i64 %bf.cast10846, 8, !dbg !11619
  br i1 %cmp125, label %lor.lhs.false126, label %if.then207, !dbg !11620

lor.lhs.false126:                                 ; preds = %lor.lhs.false118, %lor.lhs.false110, %land.lhs.true102, %land.lhs.true90, %lor.lhs.false84, %lor.lhs.false78, %sw.bb72
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11621
  %bf.load128 = load i64, i64* %11, align 8, !dbg !11621
  %bf.cast13049 = and i64 %bf.load128, 65535, !dbg !11621
  %cmp131 = icmp eq i64 %bf.cast13049, 6, !dbg !11621
  br i1 %cmp131, label %lor.lhs.false204, label %lor.lhs.false132, !dbg !11621

lor.lhs.false132:                                 ; preds = %lor.lhs.false126
  %cmp137 = icmp eq i64 %bf.cast13049, 7, !dbg !11621
  br i1 %cmp137, label %lor.lhs.false204, label %lor.lhs.false138, !dbg !11621

lor.lhs.false138:                                 ; preds = %lor.lhs.false132
  %cmp143 = icmp eq i64 %bf.cast13049, 8, !dbg !11621
  br i1 %cmp143, label %lor.lhs.false204, label %land.lhs.true144, !dbg !11622

land.lhs.true144:                                 ; preds = %lor.lhs.false138
  %cmp149 = icmp eq i64 %bf.cast7641, 14, !dbg !11623
  br i1 %cmp149, label %land.lhs.true150, label %if.then207, !dbg !11624

land.lhs.true150:                                 ; preds = %land.lhs.true144
  %type152 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11625
  %12 = bitcast %union.tree_node** %type152 to i64**, !dbg !11625
  %13 = load i64*, i64** %12, align 8, !dbg !11625
  %bf.load154 = load i64, i64* %13, align 8, !dbg !11625
  %bf.cast15653 = and i64 %bf.load154, 65535, !dbg !11625
  %cmp157 = icmp eq i64 %bf.cast15653, 6, !dbg !11625
  br i1 %cmp157, label %land.lhs.true174, label %lor.lhs.false158, !dbg !11625

lor.lhs.false158:                                 ; preds = %land.lhs.true150
  %cmp165 = icmp eq i64 %bf.cast15653, 7, !dbg !11625
  br i1 %cmp165, label %land.lhs.true174, label %lor.lhs.false166, !dbg !11625

lor.lhs.false166:                                 ; preds = %lor.lhs.false158
  %cmp173 = icmp eq i64 %bf.cast15653, 8, !dbg !11625
  br i1 %cmp173, label %land.lhs.true174, label %if.then207, !dbg !11626

land.lhs.true174:                                 ; preds = %lor.lhs.false166, %lor.lhs.false158, %land.lhs.true150
  %cmp179 = icmp eq i64 %bf.cast13049, 14, !dbg !11627
  br i1 %cmp179, label %land.lhs.true180, label %if.then207, !dbg !11628

land.lhs.true180:                                 ; preds = %land.lhs.true174
  %type182 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11629
  %14 = bitcast %union.tree_node** %type182 to i64**, !dbg !11629
  %15 = load i64*, i64** %14, align 8, !dbg !11629
  %bf.load184 = load i64, i64* %15, align 8, !dbg !11629
  %bf.cast18657 = and i64 %bf.load184, 65535, !dbg !11629
  %cmp187 = icmp eq i64 %bf.cast18657, 6, !dbg !11629
  br i1 %cmp187, label %lor.lhs.false204, label %lor.lhs.false188, !dbg !11629

lor.lhs.false188:                                 ; preds = %land.lhs.true180
  %cmp195 = icmp eq i64 %bf.cast18657, 7, !dbg !11629
  br i1 %cmp195, label %lor.lhs.false204, label %lor.lhs.false196, !dbg !11629

lor.lhs.false196:                                 ; preds = %lor.lhs.false188
  %cmp203 = icmp eq i64 %bf.cast18657, 8, !dbg !11629
  br i1 %cmp203, label %lor.lhs.false204, label %if.then207, !dbg !11630

lor.lhs.false204:                                 ; preds = %lor.lhs.false196, %lor.lhs.false188, %land.lhs.true180, %lor.lhs.false138, %lor.lhs.false132, %lor.lhs.false126
  %call205 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !11631
  %tobool206 = icmp eq i8 %call205, 0, !dbg !11631
  br i1 %tobool206, label %if.then207, label %cleanup, !dbg !11632

if.then207:                                       ; preds = %lor.lhs.false204, %lor.lhs.false196, %land.lhs.true174, %lor.lhs.false166, %land.lhs.true144, %lor.lhs.false118, %land.lhs.true96
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.92, i64 0, i64 0)) #6, !dbg !11633
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11635
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11636
  tail call void @debug_generic_expr(%union.tree_node* %2) #6, !dbg !11637
  br label %cleanup, !dbg !11638

sw.bb209:                                         ; preds = %if.end16, %if.end16
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11639
  %bf.load211 = load i64, i64* %16, align 8, !dbg !11639
  %bf.cast21326 = and i64 %bf.load211, 65535, !dbg !11642
  %cmp214 = icmp eq i64 %bf.cast21326, 14, !dbg !11642
  br i1 %cmp214, label %lor.lhs.false215, label %if.then306, !dbg !11643

lor.lhs.false215:                                 ; preds = %sw.bb209
  %type217 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11644
  %17 = bitcast %union.tree_node** %type217 to i64**, !dbg !11644
  %18 = load i64*, i64** %17, align 8, !dbg !11644
  %bf.load219 = load i64, i64* %18, align 8, !dbg !11644
  %bf.cast22127 = and i64 %bf.load219, 65535, !dbg !11644
  %cmp222 = icmp eq i64 %bf.cast22127, 6, !dbg !11644
  br i1 %cmp222, label %lor.lhs.false255, label %lor.lhs.false223, !dbg !11644

lor.lhs.false223:                                 ; preds = %lor.lhs.false215
  %cmp230 = icmp eq i64 %bf.cast22127, 7, !dbg !11644
  br i1 %cmp230, label %lor.lhs.false255, label %lor.lhs.false231, !dbg !11644

lor.lhs.false231:                                 ; preds = %lor.lhs.false223
  %cmp238 = icmp eq i64 %bf.cast22127, 8, !dbg !11644
  br i1 %cmp238, label %lor.lhs.false255, label %lor.lhs.false239, !dbg !11645

lor.lhs.false239:                                 ; preds = %lor.lhs.false231
  %cmp246 = icmp eq i64 %bf.cast22127, 11, !dbg !11646
  br i1 %cmp246, label %lor.lhs.false255, label %lor.lhs.false247, !dbg !11647

lor.lhs.false247:                                 ; preds = %lor.lhs.false239
  %cmp254 = icmp eq i64 %bf.cast22127, 9, !dbg !11648
  br i1 %cmp254, label %lor.lhs.false255, label %if.then306, !dbg !11649

lor.lhs.false255:                                 ; preds = %lor.lhs.false247, %lor.lhs.false239, %lor.lhs.false231, %lor.lhs.false223, %lor.lhs.false215
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11650
  %bf.load257 = load i64, i64* %19, align 8, !dbg !11650
  %bf.cast25932 = and i64 %bf.load257, 65535, !dbg !11650
  %cmp260 = icmp eq i64 %bf.cast25932, 6, !dbg !11650
  br i1 %cmp260, label %lor.lhs.false303, label %lor.lhs.false261, !dbg !11650

lor.lhs.false261:                                 ; preds = %lor.lhs.false255
  %cmp266 = icmp eq i64 %bf.cast25932, 7, !dbg !11650
  br i1 %cmp266, label %lor.lhs.false303, label %lor.lhs.false267, !dbg !11650

lor.lhs.false267:                                 ; preds = %lor.lhs.false261
  %cmp272 = icmp eq i64 %bf.cast25932, 8, !dbg !11650
  br i1 %cmp272, label %lor.lhs.false303, label %land.lhs.true273, !dbg !11651

land.lhs.true273:                                 ; preds = %lor.lhs.false267
  %cmp278 = icmp eq i64 %bf.cast25932, 14, !dbg !11652
  br i1 %cmp278, label %lor.lhs.false279, label %if.then306, !dbg !11653

lor.lhs.false279:                                 ; preds = %land.lhs.true273
  %type281 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11654
  %20 = bitcast %union.tree_node** %type281 to i64**, !dbg !11654
  %21 = load i64*, i64** %20, align 8, !dbg !11654
  %bf.load283 = load i64, i64* %21, align 8, !dbg !11654
  %bf.cast28536 = and i64 %bf.load283, 65535, !dbg !11654
  %cmp286 = icmp eq i64 %bf.cast28536, 6, !dbg !11654
  br i1 %cmp286, label %lor.lhs.false303, label %lor.lhs.false287, !dbg !11654

lor.lhs.false287:                                 ; preds = %lor.lhs.false279
  %cmp294 = icmp eq i64 %bf.cast28536, 7, !dbg !11654
  br i1 %cmp294, label %lor.lhs.false303, label %lor.lhs.false295, !dbg !11654

lor.lhs.false295:                                 ; preds = %lor.lhs.false287
  %cmp302 = icmp eq i64 %bf.cast28536, 8, !dbg !11654
  br i1 %cmp302, label %lor.lhs.false303, label %if.then306, !dbg !11655

lor.lhs.false303:                                 ; preds = %lor.lhs.false295, %lor.lhs.false287, %lor.lhs.false279, %lor.lhs.false267, %lor.lhs.false261, %lor.lhs.false255
  %call304 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !11656
  %tobool305 = icmp eq i8 %call304, 0, !dbg !11656
  br i1 %tobool305, label %if.then306, label %if.end307, !dbg !11657

if.then306:                                       ; preds = %lor.lhs.false303, %land.lhs.true273, %sw.bb209, %lor.lhs.false295, %lor.lhs.false247
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.93, i64 0, i64 0)) #6, !dbg !11658
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11660
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11661
  tail call void @debug_generic_expr(%union.tree_node* %2) #6, !dbg !11662
  br label %cleanup, !dbg !11663

if.end307:                                        ; preds = %lor.lhs.false303
  %22 = load i64*, i64** %17, align 8, !dbg !11664
  %bf.load311 = load i64, i64* %22, align 8, !dbg !11664
  %bf.cast31339 = and i64 %bf.load311, 65535, !dbg !11664
  %cmp314 = icmp eq i64 %bf.cast31339, 9, !dbg !11664
  br i1 %cmp314, label %land.lhs.true315, label %cleanup, !dbg !11666

land.lhs.true315:                                 ; preds = %if.end307
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11667
  %bf.load317 = load i64, i64* %23, align 8, !dbg !11667
  %bf.cast31940 = and i64 %bf.load317, 65535, !dbg !11668
  %cmp320 = icmp eq i64 %bf.cast31940, 23, !dbg !11668
  br i1 %cmp320, label %lor.lhs.false321, label %if.then327, !dbg !11669

lor.lhs.false321:                                 ; preds = %land.lhs.true315
  %size = getelementptr inbounds i64, i64* %22, i64 4, !dbg !11670
  %24 = bitcast i64* %size to %union.tree_node**, !dbg !11670
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !11670
  %call325 = tail call %union.tree_node* @div_if_zero_remainder(i32 76, %union.tree_node* %call5, %union.tree_node* %25) #6, !dbg !11671
  %tobool326 = icmp eq %union.tree_node* %call325, null, !dbg !11671
  br i1 %tobool326, label %if.then327, label %cleanup, !dbg !11672

if.then327:                                       ; preds = %lor.lhs.false321, %land.lhs.true315
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.94, i64 0, i64 0)) #6, !dbg !11673
  br label %cleanup, !dbg !11675

sw.bb329:                                         ; preds = %if.end16
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11676
  %bf.load331 = load i64, i64* %26, align 8, !dbg !11676
  %bf.cast33319 = and i64 %bf.load331, 65535, !dbg !11677
  %cmp334 = icmp eq i64 %bf.cast33319, 14, !dbg !11677
  br i1 %cmp334, label %land.lhs.true335, label %sw.bb385, !dbg !11678

land.lhs.true335:                                 ; preds = %sw.bb329
  %type337 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11679
  %27 = bitcast %union.tree_node** %type337 to i64**, !dbg !11679
  %28 = load i64*, i64** %27, align 8, !dbg !11679
  %bf.load339 = load i64, i64* %28, align 8, !dbg !11679
  %bf.cast34120 = and i64 %bf.load339, 65535, !dbg !11679
  %cmp342 = icmp eq i64 %bf.cast34120, 10, !dbg !11679
  %29 = bitcast i64* %28 to %union.tree_node*, !dbg !11679
  br i1 %cmp342, label %if.then351, label %lor.lhs.false343, !dbg !11679

lor.lhs.false343:                                 ; preds = %land.lhs.true335
  %cmp350 = icmp eq i64 %bf.cast34120, 12, !dbg !11679
  br i1 %cmp350, label %if.then351, label %sw.bb385, !dbg !11680

if.then351:                                       ; preds = %lor.lhs.false343, %land.lhs.true335
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11681
  %bf.load353 = load i64, i64* %30, align 8, !dbg !11681
  %bf.cast35522 = and i64 %bf.load353, 65535, !dbg !11683
  %cmp356 = icmp eq i64 %bf.cast35522, 14, !dbg !11683
  br i1 %cmp356, label %lor.lhs.false357, label %if.then363, !dbg !11684

lor.lhs.false357:                                 ; preds = %if.then351
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11685
  %bf.load359 = load i64, i64* %31, align 8, !dbg !11685
  %bf.cast36123 = and i64 %bf.load359, 65535, !dbg !11686
  %cmp362 = icmp eq i64 %bf.cast36123, 14, !dbg !11686
  br i1 %cmp362, label %if.end364, label %if.then363, !dbg !11687

if.then363:                                       ; preds = %lor.lhs.false357, %if.then351
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.95, i64 0, i64 0)) #6, !dbg !11688
  br label %cleanup, !dbg !11690

if.end364:                                        ; preds = %lor.lhs.false357
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !11545, metadata !DIExpression()), !dbg !11559
  %type368 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11691
  %32 = load %union.tree_node*, %union.tree_node** %type368, align 8, !dbg !11691
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !11547, metadata !DIExpression()), !dbg !11559
  %type370 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11692
  %33 = load %union.tree_node*, %union.tree_node** %type370, align 8, !dbg !11692
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !11549, metadata !DIExpression()), !dbg !11559
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11693
  %bf.load372 = load i64, i64* %34, align 8, !dbg !11693
  %bf.cast37424 = and i64 %bf.load372, 65535, !dbg !11693
  %cmp375 = icmp eq i64 %bf.cast37424, 10, !dbg !11693
  br i1 %cmp375, label %if.then382, label %lor.lhs.false376, !dbg !11693

lor.lhs.false376:                                 ; preds = %if.end364
  %cmp381 = icmp eq i64 %bf.cast37424, 12, !dbg !11693
  br i1 %cmp381, label %if.then382, label %do_pointer_plus_expr_check, !dbg !11694

if.then382:                                       ; preds = %lor.lhs.false376, %if.end364
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !11550, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !11547, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !11549, metadata !DIExpression()), !dbg !11559
  br label %do_pointer_plus_expr_check, !dbg !11696

sw.bb385:                                         ; preds = %if.end16.sw.bb385_crit_edge, %sw.bb329, %lor.lhs.false343
  %bf.cast38913.pre-phi = phi i64 [ %.pre, %if.end16.sw.bb385_crit_edge ], [ %bf.cast33319, %sw.bb329 ], [ 14, %lor.lhs.false343 ], !dbg !11591
  %cmp390 = icmp eq i64 %bf.cast38913.pre-phi, 10, !dbg !11591
  br i1 %cmp390, label %if.then421, label %lor.lhs.false391, !dbg !11591

lor.lhs.false391:                                 ; preds = %sw.bb385
  %cmp396 = icmp eq i64 %bf.cast38913.pre-phi, 12, !dbg !11591
  br i1 %cmp396, label %if.then421, label %lor.lhs.false397, !dbg !11697

lor.lhs.false397:                                 ; preds = %lor.lhs.false391
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11698
  %bf.load399 = load i64, i64* %35, align 8, !dbg !11698
  %bf.cast40115 = and i64 %bf.load399, 65535, !dbg !11698
  %cmp402 = icmp eq i64 %bf.cast40115, 10, !dbg !11698
  br i1 %cmp402, label %if.then421, label %lor.lhs.false403, !dbg !11698

lor.lhs.false403:                                 ; preds = %lor.lhs.false397
  %cmp408 = icmp eq i64 %bf.cast40115, 12, !dbg !11698
  br i1 %cmp408, label %if.then421, label %lor.lhs.false409, !dbg !11699

lor.lhs.false409:                                 ; preds = %lor.lhs.false403
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11700
  %bf.load411 = load i64, i64* %36, align 8, !dbg !11700
  %bf.cast41317 = and i64 %bf.load411, 65535, !dbg !11700
  %cmp414 = icmp eq i64 %bf.cast41317, 10, !dbg !11700
  br i1 %cmp414, label %if.then421, label %lor.lhs.false415, !dbg !11700

lor.lhs.false415:                                 ; preds = %lor.lhs.false409
  %cmp420 = icmp eq i64 %bf.cast41317, 12, !dbg !11700
  br i1 %cmp420, label %if.then421, label %sw.epilog, !dbg !11701

if.then421:                                       ; preds = %lor.lhs.false415, %lor.lhs.false409, %lor.lhs.false403, %lor.lhs.false397, %lor.lhs.false391, %sw.bb385
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.96, i64 0, i64 0)) #6, !dbg !11702
  br label %cleanup, !dbg !11704

do_pointer_plus_expr_check:                       ; preds = %if.end16, %lor.lhs.false376, %if.then382
  %lhs_type.0 = phi %union.tree_node* [ %29, %if.then382 ], [ %29, %lor.lhs.false376 ], [ %0, %if.end16 ], !dbg !11559
  %rhs1_type.1 = phi %union.tree_node* [ %33, %if.then382 ], [ %32, %lor.lhs.false376 ], [ %1, %if.end16 ], !dbg !11559
  %rhs2_type.1 = phi %union.tree_node* [ %32, %if.then382 ], [ %33, %lor.lhs.false376 ], [ %2, %if.end16 ], !dbg !11559
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs2_type.1, metadata !11549, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs1_type.1, metadata !11547, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs_type.0, metadata !11545, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.label(metadata !11557), !dbg !11705
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs1_type.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11706
  %bf.load425 = load i64, i64* %37, align 8, !dbg !11706
  %bf.cast42711 = and i64 %bf.load425, 65535, !dbg !11706
  %cmp428 = icmp eq i64 %bf.cast42711, 10, !dbg !11706
  br i1 %cmp428, label %lor.lhs.false435, label %lor.lhs.false429, !dbg !11706

lor.lhs.false429:                                 ; preds = %do_pointer_plus_expr_check
  %cmp434 = icmp eq i64 %bf.cast42711, 12, !dbg !11706
  br i1 %cmp434, label %lor.lhs.false435, label %if.then441, !dbg !11708

lor.lhs.false435:                                 ; preds = %lor.lhs.false429, %do_pointer_plus_expr_check
  %call436 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %lhs_type.0, %union.tree_node* %rhs1_type.1) #6, !dbg !11709
  %tobool437 = icmp eq i8 %call436, 0, !dbg !11709
  br i1 %tobool437, label %if.then441, label %lor.lhs.false438, !dbg !11710

lor.lhs.false438:                                 ; preds = %lor.lhs.false435
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !11711
  %call439 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %38, %union.tree_node* %rhs2_type.1) #6, !dbg !11712
  %tobool440 = icmp eq i8 %call439, 0, !dbg !11712
  br i1 %tobool440, label %if.then441, label %cleanup, !dbg !11713

if.then441:                                       ; preds = %lor.lhs.false438, %lor.lhs.false435, %lor.lhs.false429
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.97, i64 0, i64 0)) #6, !dbg !11714
  tail call void @debug_generic_stmt(%union.tree_node* %lhs_type.0) #6, !dbg !11716
  tail call void @debug_generic_stmt(%union.tree_node* %rhs1_type.1) #6, !dbg !11717
  tail call void @debug_generic_stmt(%union.tree_node* %rhs2_type.1) #6, !dbg !11718
  br label %cleanup, !dbg !11719

sw.bb443:                                         ; preds = %if.end16, %if.end16
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3394, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !11720
  br label %sw.bb444, !dbg !11720

sw.bb444:                                         ; preds = %if.end16, %if.end16, %if.end16, %sw.bb443
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11721
  %bf.load446 = load i64, i64* %39, align 8, !dbg !11721
  %bf.cast4482 = and i64 %bf.load446, 65535, !dbg !11721
  %cmp449 = icmp eq i64 %bf.cast4482, 6, !dbg !11721
  br i1 %cmp449, label %lor.lhs.false462, label %lor.lhs.false450, !dbg !11721

lor.lhs.false450:                                 ; preds = %sw.bb444
  %cmp455 = icmp eq i64 %bf.cast4482, 7, !dbg !11721
  br i1 %cmp455, label %lor.lhs.false462, label %lor.lhs.false456, !dbg !11721

lor.lhs.false456:                                 ; preds = %lor.lhs.false450
  %cmp461 = icmp eq i64 %bf.cast4482, 8, !dbg !11721
  br i1 %cmp461, label %lor.lhs.false462, label %if.then498, !dbg !11724

lor.lhs.false462:                                 ; preds = %lor.lhs.false456, %lor.lhs.false450, %sw.bb444
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11725
  %bf.load464 = load i64, i64* %40, align 8, !dbg !11725
  %bf.cast4665 = and i64 %bf.load464, 65535, !dbg !11725
  %cmp467 = icmp eq i64 %bf.cast4665, 6, !dbg !11725
  br i1 %cmp467, label %lor.lhs.false480, label %lor.lhs.false468, !dbg !11725

lor.lhs.false468:                                 ; preds = %lor.lhs.false462
  %cmp473 = icmp eq i64 %bf.cast4665, 7, !dbg !11725
  br i1 %cmp473, label %lor.lhs.false480, label %lor.lhs.false474, !dbg !11725

lor.lhs.false474:                                 ; preds = %lor.lhs.false468
  %cmp479 = icmp eq i64 %bf.cast4665, 8, !dbg !11725
  br i1 %cmp479, label %lor.lhs.false480, label %if.then498, !dbg !11726

lor.lhs.false480:                                 ; preds = %lor.lhs.false474, %lor.lhs.false468, %lor.lhs.false462
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11727
  %bf.load482 = load i64, i64* %41, align 8, !dbg !11727
  %bf.cast4848 = and i64 %bf.load482, 65535, !dbg !11727
  %cmp485 = icmp eq i64 %bf.cast4848, 6, !dbg !11727
  br i1 %cmp485, label %cleanup, label %lor.lhs.false486, !dbg !11727

lor.lhs.false486:                                 ; preds = %lor.lhs.false480
  %cmp491 = icmp eq i64 %bf.cast4848, 7, !dbg !11727
  br i1 %cmp491, label %cleanup, label %lor.lhs.false492, !dbg !11727

lor.lhs.false492:                                 ; preds = %lor.lhs.false486
  %cmp497 = icmp eq i64 %bf.cast4848, 8, !dbg !11727
  br i1 %cmp497, label %cleanup, label %if.then498, !dbg !11728

if.then498:                                       ; preds = %lor.lhs.false492, %lor.lhs.false474, %lor.lhs.false456
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.98, i64 0, i64 0)) #6, !dbg !11729
  tail call void @debug_generic_expr(%union.tree_node* %0) #6, !dbg !11731
  tail call void @debug_generic_expr(%union.tree_node* %1) #6, !dbg !11732
  tail call void @debug_generic_expr(%union.tree_node* %2) #6, !dbg !11733
  br label %cleanup, !dbg !11734

sw.bb500:                                         ; preds = %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16
  %call501 = tail call fastcc zeroext i8 @verify_gimple_comparison(%union.tree_node* %0, %union.tree_node* %call2, %union.tree_node* %call5) #7, !dbg !11735
  br label %cleanup, !dbg !11736

sw.default:                                       ; preds = %if.end16
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3467, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !11737
  br label %sw.epilog, !dbg !11738

sw.epilog:                                        ; preds = %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %lor.lhs.false415, %sw.default
  %call504 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !11739
  %tobool505 = icmp eq i8 %call504, 0, !dbg !11739
  br i1 %tobool505, label %if.then509, label %lor.lhs.false506, !dbg !11741

lor.lhs.false506:                                 ; preds = %sw.epilog
  %call507 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %0, %union.tree_node* %2) #6, !dbg !11742
  %tobool508 = icmp eq i8 %call507, 0, !dbg !11742
  br i1 %tobool508, label %if.then509, label %cleanup, !dbg !11743

if.then509:                                       ; preds = %lor.lhs.false506, %sw.epilog
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i64 0, i64 0)) #6, !dbg !11744
  tail call void @debug_generic_stmt(%union.tree_node* %0) #6, !dbg !11746
  tail call void @debug_generic_stmt(%union.tree_node* %1) #6, !dbg !11747
  tail call void @debug_generic_stmt(%union.tree_node* %2) #6, !dbg !11748
  br label %cleanup, !dbg !11749

cleanup:                                          ; preds = %lor.lhs.false204, %lor.lhs.false321, %lor.lhs.false438, %lor.lhs.false506, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %if.end16, %lor.lhs.false480, %lor.lhs.false486, %lor.lhs.false492, %if.end307, %lor.lhs.false46, %lor.lhs.false52, %lor.lhs.false58, %lor.lhs.false64, %if.then509, %sw.bb500, %if.then498, %if.then441, %if.then421, %if.then363, %if.then327, %if.then306, %if.then207, %if.then70, %if.then15, %if.then
  %retval.0 = phi i8 [ 1, %if.then509 ], [ %call501, %sw.bb500 ], [ 1, %if.then498 ], [ 1, %if.then441 ], [ 1, %if.then421 ], [ 1, %if.then363 ], [ 1, %if.then306 ], [ 1, %if.then327 ], [ 1, %if.then207 ], [ 1, %if.then70 ], [ 1, %if.then15 ], [ 1, %if.then ], [ 0, %lor.lhs.false64 ], [ 0, %lor.lhs.false58 ], [ 0, %lor.lhs.false52 ], [ 0, %lor.lhs.false46 ], [ 0, %lor.lhs.false204 ], [ 0, %lor.lhs.false321 ], [ 0, %if.end307 ], [ 0, %lor.lhs.false438 ], [ 0, %lor.lhs.false492 ], [ 0, %lor.lhs.false486 ], [ 0, %lor.lhs.false480 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %if.end16 ], [ 0, %lor.lhs.false506 ], !dbg !11559
  ret i8 %retval.0, !dbg !11750
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !11751 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !11755, metadata !DIExpression()), !dbg !11756
  %idxprom = sext i32 %code to i64, !dbg !11757
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !11757
  %0 = load i8, i8* %arrayidx, align 1, !dbg !11757
  %conv = zext i8 %0 to i32, !dbg !11758
  ret i32 %conv, !dbg !11759
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11760 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11762, metadata !DIExpression()), !dbg !11764
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !11765
  call void @llvm.dbg.value(metadata i32 %call, metadata !11763, metadata !DIExpression()), !dbg !11764
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !11766
  %cmp = icmp eq i32 %call1, 3, !dbg !11768
  br i1 %cmp, label %if.then, label %if.end, !dbg !11769

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !11770
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11770
  %bf.load = load i64, i64* %0, align 8, !dbg !11770
  %1 = trunc i64 %bf.load to i32, !dbg !11770
  %bf.cast = and i32 %1, 65535, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !11763, metadata !DIExpression()), !dbg !11764
  br label %if.end, !dbg !11771

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !11764
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !11763, metadata !DIExpression()), !dbg !11764
  ret i32 %code.0, !dbg !11772
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !11773 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11775, metadata !DIExpression()), !dbg !11777
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !11778
  call void @llvm.dbg.value(metadata i32 %call, metadata !11776, metadata !DIExpression()), !dbg !11777
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !11779

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !11781
  %bf.load = load i32, i32* %0, align 8, !dbg !11781
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11781
  br label %cleanup, !dbg !11782

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !11783
  br label %cleanup, !dbg !11785

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !11777
  ret i32 %retval.0, !dbg !11786
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11787 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11789, metadata !DIExpression()), !dbg !11790
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !11791
  ret %union.tree_node* %call, !dbg !11792
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11793 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11795, metadata !DIExpression()), !dbg !11796
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !11797
  ret %union.tree_node* %call, !dbg !11798
}

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !11799 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !11801, metadata !DIExpression()), !dbg !11802
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11803
  %bf.load = load i64, i64* %0, align 8, !dbg !11803
  %1 = trunc i64 %bf.load to i16, !dbg !11803
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !11804

sw.default:                                       ; preds = %entry
  br label %return, !dbg !11805

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !11807
  ret i8 %retval.0, !dbg !11808
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_types_in_gimple_reference(%union.tree_node* %expr, i8 zeroext %require_lvalue) unnamed_addr #5 !dbg !11809 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !11813, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.value(metadata i8 %require_lvalue, metadata !11814, metadata !DIExpression()), !dbg !11817
  %tobool138 = icmp eq i8 %require_lvalue, 0, !dbg !11818
  br label %while.cond, !dbg !11822

while.cond:                                       ; preds = %cleanup, %entry
  %expr.addr.0 = phi %union.tree_node* [ %expr, %entry ], [ %expr.addr.1, %cleanup ]
  %retval.0 = phi i8 [ undef, %entry ], [ %retval.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !11813, metadata !DIExpression()), !dbg !11817
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %expr.addr.0) #7, !dbg !11823
  %tobool = icmp eq i8 %call, 0, !dbg !11822
  br i1 %tobool, label %while.end, label %while.body, !dbg !11822

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11824
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !11824
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11815, metadata !DIExpression()), !dbg !11825
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11826
  %bf.load = load i64, i64* %1, align 8, !dbg !11826
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11828
  %cmp = icmp eq i64 %bf.cast1, 45, !dbg !11828
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11829

lor.lhs.false:                                    ; preds = %while.body
  %cmp5 = icmp eq i64 %bf.cast1, 46, !dbg !11830
  br i1 %cmp5, label %if.then, label %if.end33, !dbg !11831

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !11832
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8, !dbg !11832
  %call9 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %2) #6, !dbg !11835
  %tobool10 = icmp eq i8 %call9, 0, !dbg !11835
  br i1 %tobool10, label %if.then32, label %lor.lhs.false11, !dbg !11836

lor.lhs.false11:                                  ; preds = %if.then
  %arrayidx14 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !11837
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !11837
  %tobool15 = icmp eq %union.tree_node* %3, null, !dbg !11837
  br i1 %tobool15, label %lor.lhs.false21, label %land.lhs.true, !dbg !11838

land.lhs.true:                                    ; preds = %lor.lhs.false11
  %call19 = tail call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %3) #6, !dbg !11839
  %tobool20 = icmp eq i8 %call19, 0, !dbg !11839
  br i1 %tobool20, label %if.then32, label %lor.lhs.false21, !dbg !11840

lor.lhs.false21:                                  ; preds = %land.lhs.true, %lor.lhs.false11
  %arrayidx24 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !11841
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx24, align 8, !dbg !11841
  %tobool25 = icmp eq %union.tree_node* %4, null, !dbg !11841
  br i1 %tobool25, label %if.end33, label %land.lhs.true26, !dbg !11842

land.lhs.true26:                                  ; preds = %lor.lhs.false21
  %call30 = tail call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %4) #6, !dbg !11843
  %tobool31 = icmp eq i8 %call30, 0, !dbg !11843
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !11844

if.then32:                                        ; preds = %land.lhs.true, %land.lhs.true26, %if.then
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.72, i64 0, i64 0)) #6, !dbg !11845
  tail call void @debug_generic_stmt(%union.tree_node* %expr.addr.0) #6, !dbg !11847
  br label %cleanup, !dbg !11848

if.end33:                                         ; preds = %land.lhs.true26, %lor.lhs.false21, %lor.lhs.false
  %bf.load35 = load i64, i64* %1, align 8, !dbg !11849
  %bf.cast373 = and i64 %bf.load35, 65535, !dbg !11851
  %cmp38 = icmp eq i64 %bf.cast373, 45, !dbg !11851
  br i1 %cmp38, label %land.lhs.true39, label %if.end53, !dbg !11852

land.lhs.true39:                                  ; preds = %if.end33
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11853
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11853
  %type41 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11854
  %6 = bitcast %union.tree_node** %type41 to %struct.tree_common**, !dbg !11854
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !11854
  %type43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !11854
  %8 = load %union.tree_node*, %union.tree_node** %type43, align 8, !dbg !11854
  %call44 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %5, %union.tree_node* %8) #6, !dbg !11855
  %tobool45 = icmp eq i8 %call44, 0, !dbg !11855
  br i1 %tobool45, label %if.then46, label %land.lhs.true39.if.end53_crit_edge, !dbg !11856

land.lhs.true39.if.end53_crit_edge:               ; preds = %land.lhs.true39
  %bf.load55.pre = load i64, i64* %1, align 8, !dbg !11857
  br label %if.end53, !dbg !11856

if.then46:                                        ; preds = %land.lhs.true39
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.73, i64 0, i64 0)) #6, !dbg !11859
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11861
  tail call void @debug_generic_stmt(%union.tree_node* %9) #6, !dbg !11862
  %10 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !11863
  %type52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !11863
  %11 = load %union.tree_node*, %union.tree_node** %type52, align 8, !dbg !11863
  tail call void @debug_generic_stmt(%union.tree_node* %11) #6, !dbg !11864
  br label %cleanup, !dbg !11865

if.end53:                                         ; preds = %land.lhs.true39.if.end53_crit_edge, %if.end33
  %bf.load55 = phi i64 [ %bf.load55.pre, %land.lhs.true39.if.end53_crit_edge ], [ %bf.load35, %if.end33 ], !dbg !11857
  %bf.cast574 = and i64 %bf.load55, 65535, !dbg !11866
  %cmp58 = icmp eq i64 %bf.cast574, 46, !dbg !11866
  br i1 %cmp58, label %land.lhs.true59, label %if.end79, !dbg !11867

land.lhs.true59:                                  ; preds = %if.end53
  %type61 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11868
  %12 = bitcast %union.tree_node** %type61 to %struct.tree_common**, !dbg !11868
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !11868
  %type63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !11868
  %14 = load %union.tree_node*, %union.tree_node** %type63, align 8, !dbg !11868
  %type65 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11869
  %15 = bitcast %union.tree_node** %type65 to %struct.tree_common**, !dbg !11869
  %16 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !11869
  %type67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !11869
  %17 = load %union.tree_node*, %union.tree_node** %type67, align 8, !dbg !11869
  %call68 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %14, %union.tree_node* %17) #6, !dbg !11870
  %tobool69 = icmp eq i8 %call68, 0, !dbg !11870
  br i1 %tobool69, label %if.then70, label %land.lhs.true59.if.end79_crit_edge, !dbg !11871

land.lhs.true59.if.end79_crit_edge:               ; preds = %land.lhs.true59
  %bf.load81.pre = load i64, i64* %1, align 8, !dbg !11872
  %.pre = and i64 %bf.load81.pre, 65535, !dbg !11874
  br label %if.end79, !dbg !11871

if.then70:                                        ; preds = %land.lhs.true59
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !11875
  %18 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !11877
  %type74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !11877
  %19 = load %union.tree_node*, %union.tree_node** %type74, align 8, !dbg !11877
  tail call void @debug_generic_stmt(%union.tree_node* %19) #6, !dbg !11878
  %20 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !11879
  %type78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %20, i64 0, i32 2, !dbg !11879
  %21 = load %union.tree_node*, %union.tree_node** %type78, align 8, !dbg !11879
  tail call void @debug_generic_stmt(%union.tree_node* %21) #6, !dbg !11880
  br label %cleanup, !dbg !11881

if.end79:                                         ; preds = %land.lhs.true59.if.end79_crit_edge, %if.end53
  %bf.cast835.pre-phi = phi i64 [ %.pre, %land.lhs.true59.if.end79_crit_edge ], [ %bf.cast574, %if.end53 ], !dbg !11874
  %bf.load87 = phi i64 [ %bf.load81.pre, %land.lhs.true59.if.end79_crit_edge ], [ %bf.load55, %if.end53 ], !dbg !11872
  %cmp84 = icmp eq i64 %bf.cast835.pre-phi, 43, !dbg !11874
  br i1 %cmp84, label %land.lhs.true91, label %lor.lhs.false85, !dbg !11882

lor.lhs.false85:                                  ; preds = %if.end79
  %cmp90 = icmp eq i64 %bf.cast835.pre-phi, 44, !dbg !11883
  br i1 %cmp90, label %land.lhs.true91, label %if.end107, !dbg !11884

land.lhs.true91:                                  ; preds = %lor.lhs.false85, %if.end79
  %type93 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11885
  %22 = load %union.tree_node*, %union.tree_node** %type93, align 8, !dbg !11885
  %type95 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11886
  %23 = bitcast %union.tree_node** %type95 to %struct.tree_common**, !dbg !11886
  %24 = load %struct.tree_common*, %struct.tree_common** %23, align 8, !dbg !11886
  %type97 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %24, i64 0, i32 2, !dbg !11886
  %25 = load %union.tree_node*, %union.tree_node** %type97, align 8, !dbg !11886
  %call98 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %22, %union.tree_node* %25) #6, !dbg !11887
  %tobool99 = icmp eq i8 %call98, 0, !dbg !11887
  br i1 %tobool99, label %if.then100, label %land.lhs.true91.if.end107_crit_edge, !dbg !11888

land.lhs.true91.if.end107_crit_edge:              ; preds = %land.lhs.true91
  %bf.load109.pre = load i64, i64* %1, align 8, !dbg !11889
  br label %if.end107, !dbg !11888

if.then100:                                       ; preds = %land.lhs.true91
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.75, i64 0, i64 0)) #6, !dbg !11891
  %26 = load %union.tree_node*, %union.tree_node** %type93, align 8, !dbg !11893
  tail call void @debug_generic_stmt(%union.tree_node* %26) #6, !dbg !11894
  %27 = load %struct.tree_common*, %struct.tree_common** %23, align 8, !dbg !11895
  %type106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %27, i64 0, i32 2, !dbg !11895
  %28 = load %union.tree_node*, %union.tree_node** %type106, align 8, !dbg !11895
  tail call void @debug_generic_stmt(%union.tree_node* %28) #6, !dbg !11896
  br label %cleanup, !dbg !11897

if.end107:                                        ; preds = %land.lhs.true91.if.end107_crit_edge, %lor.lhs.false85
  %bf.load109 = phi i64 [ %bf.load109.pre, %land.lhs.true91.if.end107_crit_edge ], [ %bf.load87, %lor.lhs.false85 ], !dbg !11889
  %bf.cast1117 = and i64 %bf.load109, 65535, !dbg !11898
  %cmp112 = icmp eq i64 %bf.cast1117, 41, !dbg !11898
  br i1 %cmp112, label %land.lhs.true113, label %if.end131, !dbg !11899

land.lhs.true113:                                 ; preds = %if.end107
  %type115 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11900
  %29 = load %union.tree_node*, %union.tree_node** %type115, align 8, !dbg !11900
  %arrayidx118 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !11901
  %30 = bitcast %union.tree_node** %arrayidx118 to %struct.tree_common**, !dbg !11901
  %31 = load %struct.tree_common*, %struct.tree_common** %30, align 8, !dbg !11901
  %type120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %31, i64 0, i32 2, !dbg !11901
  %32 = load %union.tree_node*, %union.tree_node** %type120, align 8, !dbg !11901
  %call121 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %29, %union.tree_node* %32) #6, !dbg !11902
  %tobool122 = icmp eq i8 %call121, 0, !dbg !11902
  br i1 %tobool122, label %if.then123, label %land.lhs.true113.if.end131_crit_edge, !dbg !11903

land.lhs.true113.if.end131_crit_edge:             ; preds = %land.lhs.true113
  %bf.load133.pre = load i64, i64* %1, align 8, !dbg !11904
  br label %if.end131, !dbg !11903

if.then123:                                       ; preds = %land.lhs.true113
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.76, i64 0, i64 0)) #6, !dbg !11905
  %33 = load %union.tree_node*, %union.tree_node** %type115, align 8, !dbg !11907
  tail call void @debug_generic_stmt(%union.tree_node* %33) #6, !dbg !11908
  %34 = load %struct.tree_common*, %struct.tree_common** %30, align 8, !dbg !11909
  %type130 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %34, i64 0, i32 2, !dbg !11909
  %35 = load %union.tree_node*, %union.tree_node** %type130, align 8, !dbg !11909
  tail call void @debug_generic_stmt(%union.tree_node* %35) #6, !dbg !11910
  br label %cleanup, !dbg !11911

if.end131:                                        ; preds = %land.lhs.true113.if.end131_crit_edge, %if.end107
  %bf.load133 = phi i64 [ %bf.load133.pre, %land.lhs.true113.if.end131_crit_edge ], [ %bf.load109, %if.end107 ], !dbg !11904
  %bf.cast1358 = and i64 %bf.load133, 65535, !dbg !11912
  %cmp136 = icmp eq i64 %bf.cast1358, 118, !dbg !11912
  br i1 %cmp136, label %if.then137, label %if.end156, !dbg !11913

if.then137:                                       ; preds = %if.end131
  br i1 %tobool138, label %if.else, label %land.lhs.true139, !dbg !11914

land.lhs.true139:                                 ; preds = %if.then137
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11915
  %bf.load141 = load i64, i64* %36, align 8, !dbg !11915
  %bf.cast1439 = and i64 %bf.load141, 65535, !dbg !11916
  %cmp144 = icmp eq i64 %bf.cast1439, 141, !dbg !11916
  br i1 %cmp144, label %if.then150, label %lor.lhs.false146, !dbg !11917

lor.lhs.false146:                                 ; preds = %land.lhs.true139
  %call147 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %0) #6, !dbg !11918
  %tobool149 = icmp eq i8 %call147, 0, !dbg !11918
  br i1 %tobool149, label %if.else, label %if.then150, !dbg !11919

if.then150:                                       ; preds = %lor.lhs.false146, %land.lhs.true139
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.77, i64 0, i64 0)) #6, !dbg !11920
  tail call void @debug_generic_stmt(%union.tree_node* %expr.addr.0) #6, !dbg !11922
  br label %cleanup, !dbg !11923

if.else:                                          ; preds = %lor.lhs.false146, %if.then137
  %call151 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %0) #7, !dbg !11924
  %tobool152 = icmp eq i8 %call151, 0, !dbg !11924
  br i1 %tobool152, label %cleanup, label %if.end156, !dbg !11926

if.end156:                                        ; preds = %if.else, %if.end131
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11813, metadata !DIExpression()), !dbg !11817
  br label %cleanup, !dbg !11927

cleanup:                                          ; preds = %if.else, %if.end156, %if.then150, %if.then123, %if.then100, %if.then70, %if.then46, %if.then32
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then150 ], [ true, %if.end156 ], [ false, %if.then123 ], [ false, %if.then100 ], [ false, %if.then70 ], [ false, %if.then46 ], [ false, %if.then32 ], [ false, %if.else ]
  %expr.addr.1 = phi %union.tree_node* [ %expr.addr.0, %if.then150 ], [ %0, %if.end156 ], [ %expr.addr.0, %if.then123 ], [ %expr.addr.0, %if.then100 ], [ %expr.addr.0, %if.then70 ], [ %expr.addr.0, %if.then46 ], [ %expr.addr.0, %if.then32 ], [ %expr.addr.0, %if.else ]
  %retval.1 = phi i8 [ 1, %if.then150 ], [ %retval.0, %if.end156 ], [ 1, %if.then123 ], [ 1, %if.then100 ], [ 1, %if.then70 ], [ 1, %if.then46 ], [ 1, %if.then32 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.1, metadata !11813, metadata !DIExpression()), !dbg !11817
  br i1 %cleanup.dest.slot.0, label %while.cond, label %return.loopexit, !llvm.loop !11928

while.end:                                        ; preds = %while.cond
  %expr.addr.0.lcssa = phi %union.tree_node* [ %expr.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !11813, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !11813, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !11813, metadata !DIExpression()), !dbg !11817
  br i1 %tobool138, label %lor.lhs.false159, label %land.rhs, !dbg !11929

lor.lhs.false159:                                 ; preds = %while.end
  %call160 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %expr.addr.0.lcssa) #6, !dbg !11930
  %tobool161 = icmp eq i8 %call160, 0, !dbg !11930
  br i1 %tobool161, label %land.rhs, label %land.end, !dbg !11931

land.rhs:                                         ; preds = %lor.lhs.false159, %while.end
  %call162 = tail call fastcc zeroext i8 @verify_types_in_gimple_min_lval(%union.tree_node* %expr.addr.0.lcssa) #7, !dbg !11932
  %tobool164 = icmp ne i8 %call162, 0, !dbg !11931
  %phitmp = zext i1 %tobool164 to i8
  br label %land.end

land.end:                                         ; preds = %lor.lhs.false159, %land.rhs
  %37 = phi i8 [ 0, %lor.lhs.false159 ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !11933

return.loopexit:                                  ; preds = %cleanup
  %retval.1.lcssa = phi i8 [ %retval.1, %cleanup ]
  br label %return, !dbg !11934

return:                                           ; preds = %return.loopexit, %land.end
  %retval.2 = phi i8 [ %37, %land.end ], [ %retval.1.lcssa, %return.loopexit ], !dbg !11817
  ret i8 %retval.2, !dbg !11934
}

declare dso_local zeroext i8 @is_gimple_addressable(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @one_pointer_to_useless_type_conversion_p(%union.tree_node* %dest, %union.tree_node* %src_obj) unnamed_addr #5 !dbg !11935 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !11939, metadata !DIExpression()), !dbg !11942
  call void @llvm.dbg.value(metadata %union.tree_node* %src_obj, metadata !11940, metadata !DIExpression()), !dbg !11942
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %src_obj, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11943
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !11943
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !11943
  br i1 %tobool, label %cleanup, label %if.end, !dbg !11945

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !11946

for.cond:                                         ; preds = %for.inc, %if.end
  %src.0 = phi %union.tree_node* [ %1, %if.end ], [ %src.0.pre, %for.inc ], !dbg !11948
  call void @llvm.dbg.value(metadata %union.tree_node* %src.0, metadata !11941, metadata !DIExpression()), !dbg !11942
  %tobool3 = icmp eq %union.tree_node* %src.0, null, !dbg !11949
  br i1 %tobool3, label %cleanup.loopexit, label %for.body, !dbg !11949

for.body:                                         ; preds = %for.cond
  %call = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %dest, %union.tree_node* nonnull %src.0) #6, !dbg !11950
  %tobool4 = icmp eq i8 %call, 0, !dbg !11950
  br i1 %tobool4, label %for.inc, label %cleanup.loopexit, !dbg !11953

for.inc:                                          ; preds = %for.body
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %src.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !11954
  %2 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !11954
  %src.0.pre = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !11948
  br label %for.cond, !dbg !11955, !llvm.loop !11956

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !11958

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !11942
  ret i8 %retval.0, !dbg !11958
}

declare dso_local void @debug_generic_stmt(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @verify_types_in_gimple_min_lval(%union.tree_node* %expr) unnamed_addr #5 !dbg !11959 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !11961, metadata !DIExpression()), !dbg !11963
  %call = tail call zeroext i8 @is_gimple_id(%union.tree_node* %expr) #6, !dbg !11964
  %tobool = icmp eq i8 %call, 0, !dbg !11964
  br i1 %tobool, label %if.end, label %cleanup, !dbg !11966

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11967
  %bf.load = load i64, i64* %0, align 8, !dbg !11967
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11967
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !11967
  br i1 %cmp, label %if.end18, label %lor.lhs.false, !dbg !11967

lor.lhs.false:                                    ; preds = %if.end
  %cmp5 = icmp eq i64 %bf.cast1, 48, !dbg !11967
  br i1 %cmp5, label %if.end18, label %lor.lhs.false6, !dbg !11967

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 49, !dbg !11967
  br i1 %cmp11, label %if.end18, label %land.lhs.true, !dbg !11969

land.lhs.true:                                    ; preds = %lor.lhs.false6
  %cmp16 = icmp eq i64 %bf.cast1, 152, !dbg !11970
  br i1 %cmp16, label %if.end18, label %if.then17, !dbg !11971

if.then17:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !11972
  br label %cleanup, !dbg !11974

if.end18:                                         ; preds = %land.lhs.true, %lor.lhs.false6, %lor.lhs.false, %if.end
  %cmp23 = icmp eq i64 %bf.cast1, 152, !dbg !11975
  br i1 %cmp23, label %cleanup, label %if.end25, !dbg !11977

if.end25:                                         ; preds = %if.end18
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11978
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !11978
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !11962, metadata !DIExpression()), !dbg !11963
  %call26 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %1) #6, !dbg !11979
  %tobool27 = icmp eq i8 %call26, 0, !dbg !11979
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !11981

if.then28:                                        ; preds = %if.end25
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.79, i64 0, i64 0)) #6, !dbg !11982
  tail call void @debug_generic_stmt(%union.tree_node* %1) #6, !dbg !11984
  br label %cleanup, !dbg !11985

if.end29:                                         ; preds = %if.end25
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11986
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11986
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11988
  %3 = bitcast %union.tree_node** %type31 to %struct.tree_common**, !dbg !11988
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !11988
  %type33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !11988
  %5 = load %union.tree_node*, %union.tree_node** %type33, align 8, !dbg !11988
  %call34 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %2, %union.tree_node* %5) #6, !dbg !11989
  %tobool35 = icmp eq i8 %call34, 0, !dbg !11989
  br i1 %tobool35, label %if.then36, label %cleanup, !dbg !11990

if.then36:                                        ; preds = %if.end29
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.80, i64 0, i64 0)) #6, !dbg !11991
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11993
  tail call void @debug_generic_stmt(%union.tree_node* %6) #6, !dbg !11994
  %7 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !11995
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !11995
  %8 = load %union.tree_node*, %union.tree_node** %type42, align 8, !dbg !11995
  tail call void @debug_generic_stmt(%union.tree_node* %8) #6, !dbg !11996
  br label %cleanup, !dbg !11997

cleanup:                                          ; preds = %if.end29, %entry, %if.end18, %if.then36, %if.then28, %if.then17
  %retval.0 = phi i8 [ 1, %if.then36 ], [ 1, %if.then28 ], [ 1, %if.then17 ], [ 0, %entry ], [ 0, %if.end18 ], [ 0, %if.end29 ], !dbg !11963
  ret i8 %retval.0, !dbg !11998
}

declare dso_local zeroext i8 @is_gimple_id(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @valid_fixed_convert_types_p(%union.tree_node* %type1, %union.tree_node* %type2) unnamed_addr #5 !dbg !11999 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type1, metadata !12001, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata %union.tree_node* %type2, metadata !12002, metadata !DIExpression()), !dbg !12003
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12004
  %bf.load = load i64, i64* %0, align 8, !dbg !12004
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12004
  %cmp = icmp eq i64 %bf.cast1, 11, !dbg !12004
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12005

land.rhs:                                         ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12006
  %bf.load2 = load i64, i64* %1, align 8, !dbg !12006
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !12006
  %cmp5 = icmp eq i64 %bf.cast42, 6, !dbg !12006
  br i1 %cmp5, label %land.end, label %lor.lhs.false, !dbg !12006

lor.lhs.false:                                    ; preds = %land.rhs
  %cmp10 = icmp eq i64 %bf.cast42, 7, !dbg !12006
  br i1 %cmp10, label %land.end, label %lor.lhs.false11, !dbg !12006

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp16 = icmp eq i64 %bf.cast42, 8, !dbg !12006
  br i1 %cmp16, label %land.end, label %lor.lhs.false17, !dbg !12007

lor.lhs.false17:                                  ; preds = %lor.lhs.false11
  %cmp22 = icmp eq i64 %bf.cast42, 9, !dbg !12008
  br i1 %cmp22, label %land.end, label %lor.rhs, !dbg !12009

lor.rhs:                                          ; preds = %lor.lhs.false17
  %cmp27 = icmp eq i64 %bf.cast42, 11, !dbg !12010
  %phitmp = zext i1 %cmp27 to i8, !dbg !12009
  br label %land.end, !dbg !12009

land.end:                                         ; preds = %land.rhs, %lor.lhs.false, %lor.lhs.false11, %lor.lhs.false17, %lor.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ 1, %lor.lhs.false17 ], [ 1, %lor.lhs.false11 ], [ 1, %lor.lhs.false ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  ret i8 %2, !dbg !12011
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12012 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12014, metadata !DIExpression()), !dbg !12015
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !12016
  %cmp = icmp ugt i32 %call, 2, !dbg !12018
  br i1 %cmp, label %if.then, label %return, !dbg !12019

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !12020
  br label %return, !dbg !12021

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !12022
  ret %union.tree_node* %retval.0, !dbg !12023
}

declare dso_local %union.tree_node* @div_if_zero_remainder(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12024 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12026, metadata !DIExpression()), !dbg !12027
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !12028
  ret %union.tree_node* %call, !dbg !12029
}

declare dso_local zeroext i8 @is_gimple_lvalue(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_noreturn_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !12030 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !12032, metadata !DIExpression()), !dbg !12033
  %call = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %s) #6, !dbg !12034
  %and = lshr i32 %call, 3, !dbg !12035
  %0 = trunc i32 %and to i8, !dbg !12035
  %1 = and i8 %0, 1, !dbg !12035
  ret i8 %1, !dbg !12036
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12037 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12039, metadata !DIExpression()), !dbg !12040
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !12041
  ret %union.tree_node* %call, !dbg !12042
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12043 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12045, metadata !DIExpression()), !dbg !12047
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !12048
  call void @llvm.dbg.value(metadata i32 %call, metadata !12046, metadata !DIExpression()), !dbg !12047
  %sub = add i32 %call, -3, !dbg !12049
  ret i32 %sub, !dbg !12050
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !12051 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12053, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.value(metadata i32 %index, metadata !12054, metadata !DIExpression()), !dbg !12055
  %add = add i32 %index, 3, !dbg !12056
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !12057
  ret %union.tree_node* %call, !dbg !12058
}

declare dso_local zeroext i8 @is_gimple_operand(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12059 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12061, metadata !DIExpression()), !dbg !12062
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !12063
  ret %union.tree_node* %call, !dbg !12064
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12065 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12067, metadata !DIExpression()), !dbg !12068
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !12069
  ret %union.tree_node* %call, !dbg !12070
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !12071 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !12073, metadata !DIExpression()), !dbg !12074
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !12075
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !12075
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !12076
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !12077

land.rhs:                                         ; preds = %entry
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !12078
  %1 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %next, align 8, !dbg !12078
  %cmp2 = icmp eq %struct.gimple_seq_node_d* %1, null, !dbg !12079
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !12080
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_omp(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !12081 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !12083, metadata !DIExpression()), !dbg !12084
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !12085
  %call.off = add i32 %call, -19, !dbg !12086
  %switch = icmp ult i32 %call.off, 14, !dbg !12086
  %. = zext i1 %switch to i8, !dbg !12087
  ret i8 %., !dbg !12089
}

declare dso_local zeroext i8 @is_gimple_call_addr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12090 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12092, metadata !DIExpression()), !dbg !12094
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !12095
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12093, metadata !DIExpression()), !dbg !12094
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12096
  %bf.load = load i64, i64* %0, align 8, !dbg !12096
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12098
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !12098
  br i1 %cmp, label %if.then, label %cleanup, !dbg !12099

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12100
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !12100
  br label %cleanup, !dbg !12101

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !12094
  ret %union.tree_node* %retval.0, !dbg !12102
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @verify_expr(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !12103 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !12105, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !12106, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata i8* %data, metadata !12107, metadata !DIExpression()), !dbg !12116
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !12117
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12108, metadata !DIExpression()), !dbg !12116
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12118
  %bf.load = load i64, i64* %1, align 8, !dbg !12118
  %bf.cast = and i64 %bf.load, 65535, !dbg !12118
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !12118
  %2 = load i32, i32* %arrayidx, align 4, !dbg !12118
  %cmp = icmp eq i32 %2, 2, !dbg !12118
  br i1 %cmp, label %if.then, label %if.end, !dbg !12120

if.then:                                          ; preds = %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !12121
  %bf.load2.pre = load i64, i64* %1, align 8, !dbg !12122
  br label %if.end, !dbg !12123

if.end:                                           ; preds = %if.then, %entry
  %bf.load6 = phi i64 [ %bf.load2.pre, %if.then ], [ %bf.load, %entry ], !dbg !12122
  %3 = trunc i64 %bf.load6 to i16, !dbg !12122
  switch i16 %3, label %sw.epilog [
    i16 141, label %sw.bb
    i16 47, label %sw.bb11
    i16 148, label %sw.bb18
    i16 53, label %sw.bb26
    i16 121, label %sw.bb27
    i16 56, label %sw.bb112
    i16 117, label %sw.bb146
    i16 116, label %do.body
    i16 113, label %do.body
    i16 77, label %do.body
    i16 78, label %do.body
    i16 79, label %do.body
    i16 82, label %do.body
    i16 90, label %do.body
    i16 96, label %do.body
    i16 43, label %sw.bb158
    i16 44, label %sw.bb158
    i16 41, label %sw.bb158
    i16 45, label %sw.bb158
    i16 46, label %sw.bb158
    i16 42, label %sw.bb158
    i16 118, label %sw.bb158
    i16 63, label %sw.bb388
    i16 64, label %sw.bb388
    i16 66, label %sw.bb434
    i16 97, label %do.body470
    i16 98, label %do.body470
    i16 99, label %do.body470
    i16 100, label %do.body470
    i16 101, label %do.body470
    i16 102, label %do.body470
    i16 103, label %do.body470
    i16 104, label %do.body470
    i16 105, label %do.body470
    i16 106, label %do.body470
    i16 107, label %do.body470
    i16 108, label %do.body470
    i16 109, label %do.body470
    i16 110, label %do.body470
    i16 65, label %do.body470
    i16 67, label %do.body470
    i16 68, label %do.body470
    i16 69, label %do.body470
    i16 70, label %do.body470
    i16 71, label %do.body470
    i16 72, label %do.body470
    i16 73, label %do.body470
    i16 74, label %do.body470
    i16 75, label %do.body470
    i16 76, label %do.body470
    i16 80, label %do.body470
    i16 81, label %do.body470
    i16 83, label %do.body470
    i16 84, label %do.body470
    i16 85, label %do.body470
    i16 86, label %do.body470
    i16 87, label %do.body470
    i16 88, label %do.body470
    i16 89, label %do.body470
    i16 51, label %sw.bb496
  ], !dbg !12124

sw.bb:                                            ; preds = %if.end
  %bf.cast827 = and i64 %bf.load6, 33554432, !dbg !12125
  %tobool = icmp eq i64 %bf.cast827, 0, !dbg !12125
  br i1 %tobool, label %sw.epilog, label %if.then9, !dbg !12127

if.then9:                                         ; preds = %sw.bb
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.123, i64 0, i64 0)) #6, !dbg !12128
  %4 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !12130
  br label %cleanup514, !dbg !12131

sw.bb11:                                          ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12132
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !12132
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !12109, metadata !DIExpression()), !dbg !12116
  %call = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %5) #6, !dbg !12133
  %tobool13 = icmp eq i8 %call, 0, !dbg !12133
  br i1 %tobool13, label %land.lhs.true, label %sw.epilog, !dbg !12135

land.lhs.true:                                    ; preds = %sw.bb11
  %call14 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %5) #6, !dbg !12136
  %tobool15 = icmp eq i8 %call14, 0, !dbg !12136
  br i1 %tobool15, label %if.then16, label %sw.epilog, !dbg !12137

if.then16:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.124, i64 0, i64 0)) #6, !dbg !12138
  br label %cleanup514, !dbg !12140

sw.bb18:                                          ; preds = %if.end
  %operands20 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12141
  %arrayidx21 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands20, i64 1, !dbg !12141
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx21, align 8, !dbg !12141
  %call22 = tail call %union.tree_node* @fold(%union.tree_node* %6) #6, !dbg !12142
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !12109, metadata !DIExpression()), !dbg !12116
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !dbg !12143
  %cmp23 = icmp eq %union.tree_node* %call22, %7, !dbg !12145
  br i1 %cmp23, label %if.then24, label %sw.epilog, !dbg !12146

if.then24:                                        ; preds = %sw.bb18
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.125, i64 0, i64 0)) #6, !dbg !12147
  %8 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !12149
  br label %cleanup514, !dbg !12150

sw.bb26:                                          ; preds = %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.126, i64 0, i64 0)) #6, !dbg !12151
  %9 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !12152
  br label %cleanup514, !dbg !12153

sw.bb27:                                          ; preds = %if.end
  %call28 = tail call zeroext i8 @is_gimple_address(%union.tree_node* %0) #6, !dbg !12154
  %tobool29 = icmp eq i8 %call28, 0, !dbg !12154
  br i1 %tobool29, label %cond.true, label %cond.end, !dbg !12154

cond.true:                                        ; preds = %sw.bb27
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2544, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !12154
  br label %cond.end, !dbg !12154

cond.end:                                         ; preds = %sw.bb27, %cond.true
  %bf.load31 = load i64, i64* %1, align 8, !dbg !12155
  call void @llvm.dbg.value(metadata i8 undef, metadata !12113, metadata !DIExpression()), !dbg !12156
  tail call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* %0) #6, !dbg !12157
  call void @llvm.dbg.value(metadata i8 undef, metadata !12115, metadata !DIExpression()), !dbg !12156
  %bf.load48 = load i64, i64* %1, align 8, !dbg !12158
  %bf.lshr3228 = xor i64 %bf.load31, %bf.load48, !dbg !12159
  %10 = and i64 %bf.lshr3228, 131072, !dbg !12159
  %cmp55 = icmp eq i64 %10, 0, !dbg !12159
  br i1 %cmp55, label %if.end58, label %if.then57, !dbg !12161

if.then57:                                        ; preds = %cond.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.127, i64 0, i64 0)) #6, !dbg !12162
  br label %cleanup, !dbg !12164

if.end58:                                         ; preds = %cond.end
  %11 = and i64 %bf.lshr3228, 65536, !dbg !12165
  %cmp61 = icmp eq i64 %11, 0, !dbg !12165
  br i1 %cmp61, label %if.end64, label %if.then63, !dbg !12167

if.then63:                                        ; preds = %if.end58
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.128, i64 0, i64 0)) #6, !dbg !12168
  br label %cleanup, !dbg !12170

if.end64:                                         ; preds = %if.end58
  br label %for.cond, !dbg !12171

for.cond:                                         ; preds = %for.inc, %if.end64
  %.pn = phi %union.tree_node* [ %0, %if.end64 ], [ %x.0, %for.inc ]
  %x.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12173
  %x.0 = load %union.tree_node*, %union.tree_node** %x.0.in, align 8, !dbg !12173
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !12109, metadata !DIExpression()), !dbg !12116
  %call68 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %x.0) #7, !dbg !12174
  %tobool69 = icmp eq i8 %call68, 0, !dbg !12176
  br i1 %tobool69, label %for.end, label %for.inc, !dbg !12176

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !12177, !llvm.loop !12178

for.end:                                          ; preds = %for.cond
  %x.0.lcssa = phi %union.tree_node* [ %x.0, %for.cond ], !dbg !12173
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12180
  %bf.load74 = load i64, i64* %12, align 8, !dbg !12180
  %bf.cast7622 = and i64 %bf.load74, 65535, !dbg !12182
  %cmp77 = icmp eq i64 %bf.cast7622, 32, !dbg !12182
  br i1 %cmp77, label %if.end93, label %lor.lhs.false, !dbg !12183

lor.lhs.false:                                    ; preds = %for.end
  %cmp83 = icmp eq i64 %bf.cast7622, 34, !dbg !12184
  br i1 %cmp83, label %if.end93, label %lor.lhs.false85, !dbg !12185

lor.lhs.false85:                                  ; preds = %lor.lhs.false
  %cmp90 = icmp eq i64 %bf.cast7622, 36, !dbg !12186
  br i1 %cmp90, label %if.end93, label %cleanup, !dbg !12187

if.end93:                                         ; preds = %lor.lhs.false85, %lor.lhs.false, %for.end
  %bf.cast9825 = and i64 %bf.load74, 262144, !dbg !12188
  %tobool99 = icmp eq i64 %bf.cast9825, 0, !dbg !12188
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !12190

if.then100:                                       ; preds = %if.end93
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.129, i64 0, i64 0)) #6, !dbg !12191
  br label %cleanup, !dbg !12193

if.end101:                                        ; preds = %if.end93
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12194
  %13 = bitcast i40* %gimple_reg_flag to i64*, !dbg !12194
  %bf.load102 = load i64, i64* %13, align 8, !dbg !12194
  %bf.cast10526 = and i64 %bf.load102, 134217728, !dbg !12194
  %tobool106 = icmp eq i64 %bf.cast10526, 0, !dbg !12194
  br i1 %tobool106, label %cleanup, label %if.then107, !dbg !12196

if.then107:                                       ; preds = %if.end101
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.130, i64 0, i64 0)) #6, !dbg !12197
  br label %cleanup, !dbg !12199

cleanup:                                          ; preds = %if.end101, %lor.lhs.false85, %if.then107, %if.then100, %if.then63, %if.then57
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then57 ], [ false, %if.then63 ], [ false, %if.then107 ], [ false, %if.then100 ], [ false, %lor.lhs.false85 ], [ true, %if.end101 ]
  %retval.0 = phi %union.tree_node* [ %0, %if.then57 ], [ %0, %if.then63 ], [ %x.0.lcssa, %if.then107 ], [ %x.0.lcssa, %if.then100 ], [ null, %lor.lhs.false85 ], [ undef, %if.end101 ]
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %cleanup514

sw.bb112:                                         ; preds = %if.end
  %operands114 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12200
  %14 = load %union.tree_node*, %union.tree_node** %operands114, align 8, !dbg !12200
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !12109, metadata !DIExpression()), !dbg !12116
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12201
  %15 = bitcast %union.tree_node** %type to i64**, !dbg !12201
  %16 = load i64*, i64** %15, align 8, !dbg !12201
  %bf.load117 = load i64, i64* %16, align 8, !dbg !12201
  %bf.cast11919 = and i64 %bf.load117, 65535, !dbg !12201
  %cmp120 = icmp eq i64 %bf.cast11919, 6, !dbg !12201
  br i1 %cmp120, label %if.end141, label %lor.lhs.false122, !dbg !12201

lor.lhs.false122:                                 ; preds = %sw.bb112
  %cmp129 = icmp eq i64 %bf.cast11919, 7, !dbg !12201
  br i1 %cmp129, label %if.end141, label %lor.lhs.false131, !dbg !12201

lor.lhs.false131:                                 ; preds = %lor.lhs.false122
  %cmp138 = icmp eq i64 %bf.cast11919, 8, !dbg !12201
  br i1 %cmp138, label %if.end141, label %if.then140, !dbg !12203

if.then140:                                       ; preds = %lor.lhs.false131
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.131, i64 0, i64 0)) #6, !dbg !12204
  br label %cleanup514, !dbg !12206

if.end141:                                        ; preds = %lor.lhs.false131, %lor.lhs.false122, %sw.bb112
  %call142 = tail call zeroext i8 @is_gimple_condexpr(%union.tree_node* %14) #6, !dbg !12207
  %tobool143 = icmp eq i8 %call142, 0, !dbg !12207
  br i1 %tobool143, label %if.then144, label %sw.epilog, !dbg !12209

if.then144:                                       ; preds = %if.end141
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.132, i64 0, i64 0)) #6, !dbg !12210
  br label %cleanup514, !dbg !12212

sw.bb146:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2605, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !12213
  br label %do.body, !dbg !12213

do.body:                                          ; preds = %sw.bb146, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %operands149 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12214
  %17 = load %union.tree_node*, %union.tree_node** %operands149, align 8, !dbg !12214
  %call151 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %17) #6, !dbg !12214
  %tobool152 = icmp eq i8 %call151, 0, !dbg !12214
  br i1 %tobool152, label %if.then153, label %sw.epilog, !dbg !12217

if.then153:                                       ; preds = %do.body
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.133, i64 0, i64 0)) #6, !dbg !12218
  %18 = load %union.tree_node*, %union.tree_node** %operands149, align 8, !dbg !12218
  br label %cleanup514, !dbg !12218

sw.bb158:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  br label %while.cond, !dbg !12220

while.cond:                                       ; preds = %if.end377, %sw.bb158
  %t.0 = phi %union.tree_node* [ %0, %sw.bb158 ], [ %40, %if.end377 ], !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !12108, metadata !DIExpression()), !dbg !12116
  %call159 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %t.0) #7, !dbg !12221
  %tobool160 = icmp eq i8 %call159, 0, !dbg !12220
  br i1 %tobool160, label %while.end, label %while.body, !dbg !12220

while.body:                                       ; preds = %while.cond
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12222
  %bf.load162 = load i64, i64* %19, align 8, !dbg !12222
  %bf.cast1648 = and i64 %bf.load162, 65535, !dbg !12225
  %cmp165 = icmp eq i64 %bf.cast1648, 41, !dbg !12225
  br i1 %cmp165, label %land.lhs.true167, label %if.else, !dbg !12226

land.lhs.true167:                                 ; preds = %while.body
  %operands169 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12227
  %arrayidx170 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands169, i64 2, !dbg !12227
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx170, align 8, !dbg !12227
  %tobool171 = icmp eq %union.tree_node* %20, null, !dbg !12227
  br i1 %tobool171, label %if.else, label %do.body173, !dbg !12228

do.body173:                                       ; preds = %land.lhs.true167
  %call177 = tail call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %20) #6, !dbg !12229
  %tobool178 = icmp eq i8 %call177, 0, !dbg !12229
  br i1 %tobool178, label %if.then179, label %if.end377, !dbg !12232

if.then179:                                       ; preds = %do.body173
  %arrayidx170.lcssa = phi %union.tree_node** [ %arrayidx170, %do.body173 ], !dbg !12227
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.134, i64 0, i64 0)) #6, !dbg !12233
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx170.lcssa, align 8, !dbg !12233
  br label %cleanup514, !dbg !12233

if.else:                                          ; preds = %land.lhs.true167, %while.body
  %cmp190 = icmp eq i64 %bf.cast1648, 45, !dbg !12235
  br i1 %cmp190, label %do.body200, label %lor.lhs.false192, !dbg !12237

lor.lhs.false192:                                 ; preds = %if.else
  %cmp197 = icmp eq i64 %bf.cast1648, 46, !dbg !12238
  br i1 %cmp197, label %do.body200, label %if.else251, !dbg !12239

do.body200:                                       ; preds = %if.else, %lor.lhs.false192
  %operands202 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12240
  %arrayidx203 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands202, i64 1, !dbg !12240
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx203, align 8, !dbg !12240
  %call204 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %22) #6, !dbg !12240
  %tobool205 = icmp eq i8 %call204, 0, !dbg !12240
  br i1 %tobool205, label %if.then206, label %do.end212, !dbg !12244

if.then206:                                       ; preds = %do.body200
  %arrayidx203.lcssa = phi %union.tree_node** [ %arrayidx203, %do.body200 ], !dbg !12240
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.135, i64 0, i64 0)) #6, !dbg !12245
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx203.lcssa, align 8, !dbg !12245
  br label %cleanup514, !dbg !12245

do.end212:                                        ; preds = %do.body200
  %arrayidx215 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands202, i64 2, !dbg !12247
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx215, align 8, !dbg !12247
  %tobool216 = icmp eq %union.tree_node* %24, null, !dbg !12247
  br i1 %tobool216, label %if.end231, label %do.body218, !dbg !12249

do.body218:                                       ; preds = %do.end212
  %call222 = tail call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %24) #6, !dbg !12250
  %tobool223 = icmp eq i8 %call222, 0, !dbg !12250
  br i1 %tobool223, label %if.then224, label %if.end231, !dbg !12253

if.then224:                                       ; preds = %do.body218
  %arrayidx215.lcssa = phi %union.tree_node** [ %arrayidx215, %do.body218 ], !dbg !12247
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i64 0, i64 0)) #6, !dbg !12254
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx215.lcssa, align 8, !dbg !12254
  br label %cleanup514, !dbg !12254

if.end231:                                        ; preds = %do.body218, %do.end212
  %arrayidx234 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands202, i64 3, !dbg !12256
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx234, align 8, !dbg !12256
  %tobool235 = icmp eq %union.tree_node* %26, null, !dbg !12256
  br i1 %tobool235, label %if.end377, label %do.body237, !dbg !12258

do.body237:                                       ; preds = %if.end231
  %call241 = tail call zeroext i8 @is_gimple_val(%union.tree_node* nonnull %26) #6, !dbg !12259
  %tobool242 = icmp eq i8 %call241, 0, !dbg !12259
  br i1 %tobool242, label %if.then243, label %if.end377, !dbg !12262

if.then243:                                       ; preds = %do.body237
  %arrayidx234.lcssa = phi %union.tree_node** [ %arrayidx234, %do.body237 ], !dbg !12256
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.137, i64 0, i64 0)) #6, !dbg !12263
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx234.lcssa, align 8, !dbg !12263
  br label %cleanup514, !dbg !12263

if.else251:                                       ; preds = %lor.lhs.false192
  %cmp256 = icmp eq i64 %bf.cast1648, 42, !dbg !12265
  br i1 %cmp256, label %if.then258, label %if.end377, !dbg !12267

if.then258:                                       ; preds = %if.else251
  %operands260 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12268
  %arrayidx261 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands260, i64 1, !dbg !12268
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx261, align 8, !dbg !12268
  %call262 = tail call i32 @host_integerp(%union.tree_node* %28, i32 1) #6, !dbg !12271
  %tobool263 = icmp eq i32 %call262, 0, !dbg !12271
  br i1 %tobool263, label %if.then270, label %lor.lhs.false264, !dbg !12272

lor.lhs.false264:                                 ; preds = %if.then258
  %arrayidx267 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands260, i64 2, !dbg !12273
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx267, align 8, !dbg !12273
  %call268 = tail call i32 @host_integerp(%union.tree_node* %29, i32 1) #6, !dbg !12274
  %tobool269 = icmp eq i32 %call268, 0, !dbg !12274
  br i1 %tobool269, label %if.then270, label %if.else271, !dbg !12275

if.then270:                                       ; preds = %lor.lhs.false264, %if.then258
  %t.0.lcssa49 = phi %union.tree_node* [ %t.0, %lor.lhs.false264 ], [ %t.0, %if.then258 ], !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa49, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa49, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa49, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa49, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa49, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa49, metadata !12108, metadata !DIExpression()), !dbg !12116
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.138, i64 0, i64 0)) #6, !dbg !12276
  br label %cleanup514, !dbg !12278

if.else271:                                       ; preds = %lor.lhs.false264
  %type273 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12279
  %30 = bitcast %union.tree_node** %type273 to i64**, !dbg !12279
  %31 = load i64*, i64** %30, align 8, !dbg !12279
  %bf.load275 = load i64, i64* %31, align 8, !dbg !12279
  %bf.cast27712 = and i64 %bf.load275, 65535, !dbg !12279
  %cmp278 = icmp eq i64 %bf.cast27712, 6, !dbg !12279
  %32 = bitcast i64* %31 to %struct.tree_type*, !dbg !12279
  br i1 %cmp278, label %land.lhs.true298, label %lor.lhs.false280, !dbg !12279

lor.lhs.false280:                                 ; preds = %if.else271
  %cmp287 = icmp eq i64 %bf.cast27712, 7, !dbg !12279
  br i1 %cmp287, label %land.lhs.true298, label %lor.lhs.false289, !dbg !12279

lor.lhs.false289:                                 ; preds = %lor.lhs.false280
  %cmp296 = icmp eq i64 %bf.cast27712, 8, !dbg !12279
  br i1 %cmp296, label %land.lhs.true298, label %if.end313, !dbg !12281

land.lhs.true298:                                 ; preds = %lor.lhs.false289, %lor.lhs.false280, %if.else271
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 6, !dbg !12282
  %bf.load302 = load i32, i32* %precision, align 4, !dbg !12282
  %bf.clear303 = and i32 %bf.load302, 1023, !dbg !12282
  %conv304 = zext i32 %bf.clear303 to i64, !dbg !12282
  %33 = bitcast %union.tree_node** %arrayidx261 to %struct.tree_int_cst**, !dbg !12283
  %34 = load %struct.tree_int_cst*, %struct.tree_int_cst** %33, align 8, !dbg !12283
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %34, i64 0, i32 1, i32 0, !dbg !12283
  %35 = load i64, i64* %low, align 8, !dbg !12283
  %cmp309 = icmp eq i64 %35, %conv304, !dbg !12284
  br i1 %cmp309, label %if.end313, label %if.then311, !dbg !12285

if.then311:                                       ; preds = %land.lhs.true298
  %t.0.lcssa50 = phi %union.tree_node* [ %t.0, %land.lhs.true298 ], !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa50, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa50, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa50, metadata !12108, metadata !DIExpression()), !dbg !12116
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.139, i64 0, i64 0)) #6, !dbg !12286
  br label %cleanup514, !dbg !12288

if.end313:                                        ; preds = %land.lhs.true298, %lor.lhs.false289
  br i1 %cmp278, label %if.end377, label %lor.lhs.false322, !dbg !12289

lor.lhs.false322:                                 ; preds = %if.end313
  %cmp329 = icmp eq i64 %bf.cast27712, 7, !dbg !12289
  br i1 %cmp329, label %if.end377, label %lor.lhs.false331, !dbg !12289

lor.lhs.false331:                                 ; preds = %lor.lhs.false322
  %cmp338 = icmp eq i64 %bf.cast27712, 8, !dbg !12289
  br i1 %cmp338, label %if.end377, label %land.lhs.true340, !dbg !12291

land.lhs.true340:                                 ; preds = %lor.lhs.false331
  %cmp347 = icmp eq i64 %bf.cast27712, 14, !dbg !12292
  br i1 %cmp347, label %cond.true349, label %cond.false353, !dbg !12292

cond.true349:                                     ; preds = %land.lhs.true340
  %.cast = bitcast i64* %31 to %union.tree_node*, !dbg !12292
  %call352 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !12292
  br label %cond.end360, !dbg !12292

cond.false353:                                    ; preds = %land.lhs.true340
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 6, !dbg !12292
  %bf.load357 = load i32, i32* %mode, align 4, !dbg !12292
  %bf.lshr358 = lshr i32 %bf.load357, 16, !dbg !12292
  %bf.clear359 = and i32 %bf.lshr358, 255, !dbg !12292
  br label %cond.end360, !dbg !12292

cond.end360:                                      ; preds = %cond.false353, %cond.true349
  %cond361 = phi i32 [ %call352, %cond.true349 ], [ %bf.clear359, %cond.false353 ], !dbg !12292
  %idxprom362 = zext i32 %cond361 to i64, !dbg !12292
  %arrayidx363 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom362, !dbg !12292
  %36 = load i16, i16* %arrayidx363, align 2, !dbg !12292
  %conv364 = zext i16 %36 to i64, !dbg !12292
  %37 = bitcast %union.tree_node** %arrayidx261 to %struct.tree_int_cst**, !dbg !12293
  %38 = load %struct.tree_int_cst*, %struct.tree_int_cst** %37, align 8, !dbg !12293
  %low370 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %38, i64 0, i32 1, i32 0, !dbg !12293
  %39 = load i64, i64* %low370, align 8, !dbg !12293
  %cmp371 = icmp eq i64 %39, %conv364, !dbg !12294
  br i1 %cmp371, label %if.end377, label %if.then373, !dbg !12295

if.then373:                                       ; preds = %cond.end360
  %t.0.lcssa51 = phi %union.tree_node* [ %t.0, %cond.end360 ], !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa51, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa51, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa51, metadata !12108, metadata !DIExpression()), !dbg !12116
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.140, i64 0, i64 0)) #6, !dbg !12296
  br label %cleanup514, !dbg !12298

if.end377:                                        ; preds = %do.body173, %do.body237, %if.end231, %cond.end360, %if.end313, %lor.lhs.false322, %lor.lhs.false331, %if.else251
  %operands379 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12299
  %40 = load %union.tree_node*, %union.tree_node** %operands379, align 8, !dbg !12299
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !12108, metadata !DIExpression()), !dbg !12116
  br label %while.cond, !dbg !12220, !llvm.loop !12300

while.end:                                        ; preds = %while.cond
  %t.0.lcssa = phi %union.tree_node* [ %t.0, %while.cond ], !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !12108, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !12108, metadata !DIExpression()), !dbg !12116
  %call381 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %t.0.lcssa) #6, !dbg !12302
  %tobool382 = icmp eq i8 %call381, 0, !dbg !12302
  br i1 %tobool382, label %land.lhs.true383, label %if.end387, !dbg !12304

land.lhs.true383:                                 ; preds = %while.end
  %call384 = tail call zeroext i8 @is_gimple_lvalue(%union.tree_node* %t.0.lcssa) #6, !dbg !12305
  %tobool385 = icmp eq i8 %call384, 0, !dbg !12305
  br i1 %tobool385, label %if.then386, label %if.end387, !dbg !12306

if.then386:                                       ; preds = %land.lhs.true383
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.141, i64 0, i64 0)) #6, !dbg !12307
  br label %cleanup514, !dbg !12309

if.end387:                                        ; preds = %land.lhs.true383, %while.end
  store i32 0, i32* %walk_subtrees, align 4, !dbg !12310
  br label %sw.epilog, !dbg !12311

sw.bb388:                                         ; preds = %if.end, %if.end
  %type390 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12312
  %41 = bitcast %union.tree_node** %type390 to i64**, !dbg !12312
  %42 = load i64*, i64** %41, align 8, !dbg !12312
  %bf.load392 = load i64, i64* %42, align 8, !dbg !12312
  %bf.cast3946 = and i64 %bf.load392, 65535, !dbg !12312
  %cmp395 = icmp eq i64 %bf.cast3946, 10, !dbg !12312
  br i1 %cmp395, label %if.then406, label %lor.lhs.false397, !dbg !12312

lor.lhs.false397:                                 ; preds = %sw.bb388
  %cmp404 = icmp eq i64 %bf.cast3946, 12, !dbg !12312
  br i1 %cmp404, label %if.then406, label %do.body408, !dbg !12314

if.then406:                                       ; preds = %lor.lhs.false397, %sw.bb388
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.142, i64 0, i64 0)) #6, !dbg !12315
  br label %cleanup514, !dbg !12317

do.body408:                                       ; preds = %lor.lhs.false397
  %operands410 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12318
  %43 = load %union.tree_node*, %union.tree_node** %operands410, align 8, !dbg !12318
  %call412 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %43) #6, !dbg !12318
  %tobool413 = icmp eq i8 %call412, 0, !dbg !12318
  br i1 %tobool413, label %if.then414, label %do.body421, !dbg !12321

if.then414:                                       ; preds = %do.body408
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.143, i64 0, i64 0)) #6, !dbg !12322
  %44 = load %union.tree_node*, %union.tree_node** %operands410, align 8, !dbg !12322
  br label %cleanup514, !dbg !12322

do.body421:                                       ; preds = %do.body408
  %arrayidx424 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands410, i64 1, !dbg !12324
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx424, align 8, !dbg !12324
  %call425 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %45) #6, !dbg !12324
  %tobool426 = icmp eq i8 %call425, 0, !dbg !12324
  br i1 %tobool426, label %if.then427, label %sw.epilog, !dbg !12327

if.then427:                                       ; preds = %do.body421
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.143, i64 0, i64 0)) #6, !dbg !12328
  %46 = load %union.tree_node*, %union.tree_node** %arrayidx424, align 8, !dbg !12328
  br label %cleanup514, !dbg !12328

sw.bb434:                                         ; preds = %if.end
  %operands436 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12330
  %47 = bitcast %union.tree_node** %operands436 to %struct.tree_common**, !dbg !12330
  %48 = load %struct.tree_common*, %struct.tree_common** %47, align 8, !dbg !12330
  %type439 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %48, i64 0, i32 2, !dbg !12330
  %49 = bitcast %union.tree_node** %type439 to i64**, !dbg !12330
  %50 = load i64*, i64** %49, align 8, !dbg !12330
  %bf.load441 = load i64, i64* %50, align 8, !dbg !12330
  %bf.cast4434 = and i64 %bf.load441, 65535, !dbg !12330
  %cmp444 = icmp eq i64 %bf.cast4434, 10, !dbg !12330
  br i1 %cmp444, label %if.end459, label %lor.lhs.false446, !dbg !12330

lor.lhs.false446:                                 ; preds = %sw.bb434
  %cmp456 = icmp eq i64 %bf.cast4434, 12, !dbg !12330
  br i1 %cmp456, label %if.end459, label %if.then458, !dbg !12332

if.then458:                                       ; preds = %lor.lhs.false446
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.144, i64 0, i64 0)) #6, !dbg !12333
  br label %cleanup514, !dbg !12335

if.end459:                                        ; preds = %lor.lhs.false446, %sw.bb434
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !12336
  %arrayidx462 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands436, i64 1, !dbg !12338
  %52 = bitcast %union.tree_node** %arrayidx462 to %struct.tree_common**, !dbg !12338
  %53 = load %struct.tree_common*, %struct.tree_common** %52, align 8, !dbg !12338
  %type464 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %53, i64 0, i32 2, !dbg !12338
  %54 = load %union.tree_node*, %union.tree_node** %type464, align 8, !dbg !12338
  %call465 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %51, %union.tree_node* %54) #6, !dbg !12339
  %tobool466 = icmp eq i8 %call465, 0, !dbg !12339
  br i1 %tobool466, label %if.then467, label %do.body470, !dbg !12340

if.then467:                                       ; preds = %if.end459
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.145, i64 0, i64 0)) #6, !dbg !12341
  br label %cleanup514, !dbg !12343

do.body470:                                       ; preds = %if.end459, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %operands472 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12344
  %55 = load %union.tree_node*, %union.tree_node** %operands472, align 8, !dbg !12344
  %call474 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %55) #6, !dbg !12344
  %tobool475 = icmp eq i8 %call474, 0, !dbg !12344
  br i1 %tobool475, label %if.then476, label %do.body483, !dbg !12347

if.then476:                                       ; preds = %do.body470
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.143, i64 0, i64 0)) #6, !dbg !12348
  %56 = load %union.tree_node*, %union.tree_node** %operands472, align 8, !dbg !12348
  br label %cleanup514, !dbg !12348

do.body483:                                       ; preds = %do.body470
  %arrayidx486 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands472, i64 1, !dbg !12350
  %57 = load %union.tree_node*, %union.tree_node** %arrayidx486, align 8, !dbg !12350
  %call487 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %57) #6, !dbg !12350
  %tobool488 = icmp eq i8 %call487, 0, !dbg !12350
  br i1 %tobool488, label %if.then489, label %sw.epilog, !dbg !12353

if.then489:                                       ; preds = %do.body483
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.143, i64 0, i64 0)) #6, !dbg !12354
  %58 = load %union.tree_node*, %union.tree_node** %arrayidx486, align 8, !dbg !12354
  br label %cleanup514, !dbg !12354

sw.bb496:                                         ; preds = %if.end
  %bf.cast5012 = and i64 %bf.load6, 131072, !dbg !12356
  %tobool502 = icmp eq i64 %bf.cast5012, 0, !dbg !12356
  br i1 %tobool502, label %sw.epilog, label %land.lhs.true503, !dbg !12358

land.lhs.true503:                                 ; preds = %sw.bb496
  %type505 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12359
  %59 = bitcast %union.tree_node** %type505 to i64**, !dbg !12359
  %60 = load i64*, i64** %59, align 8, !dbg !12359
  %bf.load507 = load i64, i64* %60, align 8, !dbg !12359
  %bf.cast5093 = and i64 %bf.load507, 65535, !dbg !12360
  %cmp510 = icmp eq i64 %bf.cast5093, 14, !dbg !12360
  br i1 %cmp510, label %if.then512, label %sw.epilog, !dbg !12361

if.then512:                                       ; preds = %land.lhs.true503
  store i32 0, i32* %walk_subtrees, align 4, !dbg !12362
  br label %sw.epilog, !dbg !12363

sw.epilog:                                        ; preds = %sw.bb, %land.lhs.true, %sw.bb11, %if.end141, %do.body, %do.body421, %do.body483, %sw.bb496, %if.end, %land.lhs.true503, %if.then512, %sw.bb18, %cleanup, %if.end387
  br label %cleanup514, !dbg !12364

cleanup514:                                       ; preds = %cleanup, %sw.epilog, %if.then489, %if.then476, %if.then467, %if.then458, %if.then427, %if.then414, %if.then406, %if.then386, %if.then373, %if.then311, %if.then270, %if.then243, %if.then224, %if.then206, %if.then179, %if.then153, %if.then144, %if.then140, %sw.bb26, %if.then24, %if.then16, %if.then9
  %retval.1 = phi %union.tree_node* [ null, %sw.epilog ], [ %58, %if.then489 ], [ %56, %if.then476 ], [ %0, %if.then467 ], [ %0, %if.then458 ], [ %0, %if.then406 ], [ %46, %if.then427 ], [ %44, %if.then414 ], [ %21, %if.then179 ], [ %27, %if.then243 ], [ %25, %if.then224 ], [ %23, %if.then206 ], [ %t.0.lcssa50, %if.then311 ], [ %t.0.lcssa51, %if.then373 ], [ %t.0.lcssa49, %if.then270 ], [ %t.0.lcssa, %if.then386 ], [ %18, %if.then153 ], [ %14, %if.then144 ], [ %14, %if.then140 ], [ %retval.0, %cleanup ], [ %9, %sw.bb26 ], [ %8, %if.then24 ], [ %5, %if.then16 ], [ %4, %if.then9 ], !dbg !12116
  ret %union.tree_node* %retval.1, !dbg !12365
}

declare dso_local void @inform(i32, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @lookup_stmt_eh_lp(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_condexpr(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @pointer_set_contains(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !12366 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !12371
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !12371
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12371

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !12371
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !12371
  br label %cond.end, !dbg !12371

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12371
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !12371
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !12372
  %conv3 = zext i1 %cmp to i8, !dbg !12373
  ret i8 %conv3, !dbg !12374
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !12375 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !12378
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !12378
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12378

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !12378
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !12378
  br label %cond.end, !dbg !12378

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12378
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !12378
  ret %struct.edge_def* %call2, !dbg !12379
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !12380 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !12385
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !12385

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.147, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !12385
  br label %cond.end, !dbg !12385

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !12386
  ret %struct.VEC_edge_gc* %0, !dbg !12387
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !12388 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !12392, metadata !DIExpression()), !dbg !12393
  %cmp = icmp eq %struct.gimple_seq_d* %s, null, !dbg !12394
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !12395

lor.rhs:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !12396
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !12396
  %cmp1 = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !12397
  %phitmp = zext i1 %cmp1 to i8, !dbg !12395
  br label %lor.end, !dbg !12395

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !12398
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !12399 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !12401, metadata !DIExpression()), !dbg !12402
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !12403
  %0 = load i32, i32* %flags, align 8, !dbg !12403
  %and = and i32 %0, 512, !dbg !12403
  %tobool = icmp eq i32 %and, 0, !dbg !12403
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12403

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), i32 510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !12403
  br label %cond.end, !dbg !12403

cond.end:                                         ; preds = %entry, %cond.true
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !12404
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !12404
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !12406
  br i1 %tobool1, label %return, label %if.end, !dbg !12407

if.end:                                           ; preds = %cond.end
  %phi_nodes = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 1, !dbg !12408
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %phi_nodes, align 8, !dbg !12408
  br label %return, !dbg !12409

return:                                           ; preds = %cond.end, %if.end
  %retval.0 = phi %struct.gimple_seq_d* [ %2, %if.end ], [ null, %cond.end ], !dbg !12402
  ret %struct.gimple_seq_d* %retval.0, !dbg !12410
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !12411 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !12415, metadata !DIExpression()), !dbg !12417
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !12416, metadata !DIExpression()), !dbg !12417
  br label %land.end, !dbg !12418

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !12418
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !12418
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !12418
  ret %struct.loop* %0, !dbg !12418
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_heap_reserve(%struct.VEC_basic_block_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !12419 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !12423, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 1, metadata !12424, metadata !DIExpression()), !dbg !12426
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !12427
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !12427
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12427

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %0, i64 0, i32 0, !dbg !12427
  br label %cond.end, !dbg !12427

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12427
  %call = tail call fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %cond, i32 1) #7, !dbg !12427
  %tobool1 = icmp eq i32 %call, 0, !dbg !12427
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !12427
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !12425, metadata !DIExpression()), !dbg !12426
  br i1 %tobool1, label %if.then, label %if.end, !dbg !12427

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_basic_block_heap** %vec_ to i8**, !dbg !12428
  %2 = load i8*, i8** %1, align 8, !dbg !12428
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !12428
  store i8* %call3, i8** %1, align 8, !dbg !12428
  br label %if.end, !dbg !12428

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !12427
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %vec_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !12430 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !12434, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !12435, metadata !DIExpression()), !dbg !12437
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !12438
  %0 = load i32, i32* %num1, align 8, !dbg !12438
  %inc = add i32 %0, 1, !dbg !12438
  store i32 %inc, i32* %num1, align 8, !dbg !12438
  %idxprom = zext i32 %0 to i64, !dbg !12438
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !12438
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %arrayidx, metadata !12436, metadata !DIExpression()), !dbg !12437
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !12438
  ret %struct.basic_block_def** %arrayidx, !dbg !12438
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !12439 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !12441, metadata !DIExpression()), !dbg !12442
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !12443
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12443
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !12443
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12443

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !12443
  br label %cond.end, !dbg !12443

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12443
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !12443
  %cmp = icmp eq i32 %call, 1, !dbg !12444
  %conv2 = zext i1 %cmp to i8, !dbg !12443
  ret i8 %conv2, !dbg !12445
}

declare dso_local i32 @lookup_stmt_eh_lp_fn(%struct.function*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %struct.eh_region_d* @get_eh_region_from_lp_number_fn(%struct.function*, i32) local_unnamed_addr #2

declare dso_local %struct.eh_region_d* @eh_region_outermost(%struct.function*, %struct.eh_region_d*, %struct.eh_region_d*) local_unnamed_addr #2

declare dso_local void @delete_from_dominance_info(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @remove_bb_from_loops(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @move_block_after(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !12446 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !12450, metadata !DIExpression()), !dbg !12451
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !12452
  ret %union.tree_node* %0, !dbg !12453
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12454 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12456, metadata !DIExpression()), !dbg !12457
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !12458
  ret %union.tree_node** %result, !dbg !12459
}

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @replace_ssa_name(%union.tree_node* %name, %struct.pointer_map_t* %vars_map, %union.tree_node* %to_context) unnamed_addr #5 !dbg !12460 {
entry:
  %decl = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !12464, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %vars_map, metadata !12465, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.value(metadata %union.tree_node* %to_context, metadata !12466, metadata !DIExpression()), !dbg !12470
  %0 = bitcast %union.tree_node** %decl to i8*, !dbg !12471
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !12471
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12472
  %1 = bitcast i32* %var to i64*, !dbg !12472
  %2 = load i64, i64* %1, align 8, !dbg !12472
  %3 = bitcast %union.tree_node** %decl to i64*, !dbg !12473
  store i64 %2, i64* %3, align 8, !dbg !12473
  %call = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %name) #6, !dbg !12474
  %tobool = icmp eq i8 %call, 0, !dbg !12474
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !12474

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5447, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !12474
  br label %cond.end, !dbg !12474

cond.end:                                         ; preds = %entry, %cond.true
  %4 = bitcast %union.tree_node* %name to i8*, !dbg !12475
  %call1 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %vars_map, i8* %4) #6, !dbg !12476
  call void @llvm.dbg.value(metadata i8** %call1, metadata !12467, metadata !DIExpression()), !dbg !12470
  %tobool2 = icmp eq i8** %call1, null, !dbg !12477
  br i1 %tobool2, label %if.then, label %if.else, !dbg !12479

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %union.tree_node** %decl, metadata !12469, metadata !DIExpression(DW_OP_deref)), !dbg !12470
  call fastcc void @replace_by_duplicate_decl(%union.tree_node** nonnull %decl, %struct.pointer_map_t* %vars_map, %union.tree_node* %to_context) #7, !dbg !12480
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %to_context, i64 0, i32 0, i32 1, !dbg !12482
  %5 = load %struct.function*, %struct.function** %f, align 8, !dbg !12482
  call void @push_cfun(%struct.function* %5) #6, !dbg !12483
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12484
  %call3 = call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %6) #7, !dbg !12486
  %tobool4 = icmp eq i8 %call3, 0, !dbg !12486
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !12487

if.then5:                                         ; preds = %if.then
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !12488
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !12469, metadata !DIExpression()), !dbg !12470
  %call6 = call zeroext i8 @add_referenced_var(%union.tree_node* %7) #6, !dbg !12489
  br label %if.end, !dbg !12489

if.end:                                           ; preds = %if.then, %if.then5
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !12490
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !12469, metadata !DIExpression()), !dbg !12470
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12491
  %9 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !12491
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %9, align 8, !dbg !12491
  %call8 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %8, %union.gimple_statement_d* %10) #7, !dbg !12492
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !12468, metadata !DIExpression()), !dbg !12470
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12493
  %bf.load = load i64, i64* %11, align 8, !dbg !12493
  %bf.cast1 = and i64 %bf.load, 4294967296, !dbg !12493
  %tobool9 = icmp eq i64 %bf.cast1, 0, !dbg !12493
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !12495

if.then10:                                        ; preds = %if.end
  %12 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !12496
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !12469, metadata !DIExpression()), !dbg !12470
  call void @set_default_def(%union.tree_node* %12, %union.tree_node* %call8) #6, !dbg !12497
  br label %if.end11, !dbg !12497

if.end11:                                         ; preds = %if.end, %if.then10
  call void @pop_cfun() #6, !dbg !12498
  %call12 = call i8** @pointer_map_insert(%struct.pointer_map_t* %vars_map, i8* %4) #6, !dbg !12499
  call void @llvm.dbg.value(metadata i8** %call12, metadata !12467, metadata !DIExpression()), !dbg !12470
  %13 = bitcast i8** %call12 to %union.tree_node**, !dbg !12500
  store %union.tree_node* %call8, %union.tree_node** %13, align 8, !dbg !12500
  br label %if.end13, !dbg !12501

if.else:                                          ; preds = %cond.end
  %14 = bitcast i8** %call1 to %union.tree_node**, !dbg !12502
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !12502
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !12468, metadata !DIExpression()), !dbg !12470
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end11
  %new_name.0 = phi %union.tree_node* [ %15, %if.else ], [ %call8, %if.end11 ], !dbg !12503
  call void @llvm.dbg.value(metadata %union.tree_node* %new_name.0, metadata !12468, metadata !DIExpression()), !dbg !12470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !12504
  ret %union.tree_node* %new_name.0, !dbg !12505
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !12506 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !12510, metadata !DIExpression()), !dbg !12512
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !12511, metadata !DIExpression()), !dbg !12512
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !12513
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !12514
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !12514
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !12515
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !12516
  ret void, !dbg !12517
}

declare dso_local %union.tree_node* @walk_gimple_stmt(%struct.gimple_stmt_iterator*, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, %struct.walk_stmt_info*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @move_stmt_r(%struct.gimple_stmt_iterator* %gsi_p, i8* %handled_ops_p, %struct.walk_stmt_info* %wi) #5 !dbg !12518 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_p, metadata !12522, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata i8* %handled_ops_p, metadata !12523, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !12524, metadata !DIExpression()), !dbg !12539
  %info = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !12540
  %0 = bitcast i8** %info to %struct.move_stmt_d**, !dbg !12540
  %1 = load %struct.move_stmt_d*, %struct.move_stmt_d** %0, align 8, !dbg !12540
  call void @llvm.dbg.value(metadata %struct.move_stmt_d* %1, metadata !12525, metadata !DIExpression()), !dbg !12539
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi_p) #7, !dbg !12541
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !12526, metadata !DIExpression()), !dbg !12539
  %call1 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %call) #7, !dbg !12542
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !12527, metadata !DIExpression()), !dbg !12539
  %orig_block = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 0, !dbg !12543
  %2 = load %union.tree_node*, %union.tree_node** %orig_block, align 8, !dbg !12543
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !12545
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12546

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq %union.tree_node* %call1, %2, !dbg !12547
  %cmp5 = icmp eq %union.tree_node* %call1, null, !dbg !12548
  %or.cond = or i1 %cmp3, %cmp5, !dbg !12549
  br i1 %or.cond, label %if.then, label %if.end, !dbg !12549

if.then:                                          ; preds = %lor.lhs.false, %entry
  %new_block = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 1, !dbg !12550
  %3 = load %union.tree_node*, %union.tree_node** %new_block, align 8, !dbg !12550
  tail call fastcc void @gimple_set_block(%union.gimple_statement_d* %call, %union.tree_node* %3) #7, !dbg !12551
  br label %if.end, !dbg !12551

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %call6 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !12552
  switch i32 %call6, label %sw.default29 [
    i32 8, label %sw.bb
    i32 14, label %sw.bb20
    i32 15, label %sw.bb24
    i32 28, label %sw.epilog38
    i32 21, label %sw.epilog38
  ], !dbg !12553

sw.bb:                                            ; preds = %if.end
  %call7 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call) #7, !dbg !12554
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !12531, metadata !DIExpression()), !dbg !12555
  %tobool = icmp eq %union.tree_node* %call7, null, !dbg !12556
  br i1 %tobool, label %sw.epilog38, label %land.lhs.true, !dbg !12558

land.lhs.true:                                    ; preds = %sw.bb
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 5, !dbg !12559
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !12559
  %bf.clear = and i32 %bf.load, 6144, !dbg !12559
  %cmp8 = icmp eq i32 %bf.clear, 6144, !dbg !12560
  br i1 %cmp8, label %if.then9, label %sw.epilog38, !dbg !12561

if.then9:                                         ; preds = %land.lhs.true
  %bf.clear12 = and i32 %bf.load, 2047, !dbg !12562
  switch i32 %bf.clear12, label %sw.epilog38 [
    i32 554, label %sw.bb13
    i32 552, label %sw.bb16
    i32 553, label %sw.bb16
  ], !dbg !12563

sw.bb13:                                          ; preds = %if.then9
  %call14 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 1) #7, !dbg !12564
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !12528, metadata !DIExpression()), !dbg !12555
  %call15 = tail call fastcc %union.tree_node* @move_stmt_eh_region_tree_nr(%union.tree_node* %call14, %struct.move_stmt_d* %1) #7, !dbg !12566
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !12528, metadata !DIExpression()), !dbg !12555
  tail call fastcc void @gimple_call_set_arg(%union.gimple_statement_d* %call, i32 1, %union.tree_node* %call15) #7, !dbg !12567
  br label %sw.bb16, !dbg !12567

sw.bb16:                                          ; preds = %if.then9, %if.then9, %sw.bb13
  %call17 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 0) #7, !dbg !12568
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !12528, metadata !DIExpression()), !dbg !12555
  %call18 = tail call fastcc %union.tree_node* @move_stmt_eh_region_tree_nr(%union.tree_node* %call17, %struct.move_stmt_d* %1) #7, !dbg !12569
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !12528, metadata !DIExpression()), !dbg !12555
  tail call fastcc void @gimple_call_set_arg(%union.gimple_statement_d* %call, i32 0, %union.tree_node* %call18) #7, !dbg !12570
  br label %sw.epilog38, !dbg !12571

sw.bb20:                                          ; preds = %if.end
  %call22 = tail call fastcc i32 @gimple_resx_region(%union.gimple_statement_d* %call) #7, !dbg !12572
  call void @llvm.dbg.value(metadata i32 %call22, metadata !12532, metadata !DIExpression()), !dbg !12573
  %call23 = tail call fastcc i32 @move_stmt_eh_region_nr(i32 %call22, %struct.move_stmt_d* %1) #7, !dbg !12574
  call void @llvm.dbg.value(metadata i32 %call23, metadata !12532, metadata !DIExpression()), !dbg !12573
  tail call fastcc void @gimple_resx_set_region(%union.gimple_statement_d* %call, i32 %call23) #7, !dbg !12575
  br label %sw.epilog38, !dbg !12576

sw.bb24:                                          ; preds = %if.end
  %call26 = tail call fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %call) #7, !dbg !12577
  call void @llvm.dbg.value(metadata i32 %call26, metadata !12534, metadata !DIExpression()), !dbg !12578
  %call27 = tail call fastcc i32 @move_stmt_eh_region_nr(i32 %call26, %struct.move_stmt_d* %1) #7, !dbg !12579
  call void @llvm.dbg.value(metadata i32 %call27, metadata !12534, metadata !DIExpression()), !dbg !12578
  tail call fastcc void @gimple_eh_dispatch_set_region(%union.gimple_statement_d* %call, i32 %call27) #7, !dbg !12580
  br label %sw.epilog38, !dbg !12581

sw.default29:                                     ; preds = %if.end
  %call30 = tail call fastcc zeroext i8 @is_gimple_omp(%union.gimple_statement_d* %call) #7, !dbg !12582
  %tobool31 = icmp eq i8 %call30, 0, !dbg !12582
  br i1 %tobool31, label %sw.epilog38, label %if.then32, !dbg !12583

if.then32:                                        ; preds = %sw.default29
  %remap_decls_p = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 7, !dbg !12584
  %4 = load i8, i8* %remap_decls_p, align 8, !dbg !12584
  call void @llvm.dbg.value(metadata i8 %4, metadata !12536, metadata !DIExpression()), !dbg !12585
  store i8 0, i8* %remap_decls_p, align 8, !dbg !12586
  store i8 1, i8* %handled_ops_p, align 1, !dbg !12587
  %call34 = tail call fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %call) #7, !dbg !12588
  %call35 = tail call %union.gimple_statement_d* @walk_gimple_seq(%struct.gimple_seq_d* %call34, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)* nonnull @move_stmt_r, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @move_stmt_op, %struct.walk_stmt_info* %wi) #6, !dbg !12589
  store i8 %4, i8* %remap_decls_p, align 8, !dbg !12590
  br label %sw.epilog38, !dbg !12591

sw.epilog38:                                      ; preds = %sw.default29, %sw.bb, %if.then32, %if.end, %if.end, %land.lhs.true, %if.then9, %sw.bb16, %sw.bb24, %sw.bb20
  ret %union.tree_node* null, !dbg !12592
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @move_stmt_op(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !12593 {
entry:
  %in = alloca %struct.tree_map, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !12595, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !12596, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i8* %data, metadata !12597, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i8* %data, metadata !12598, metadata !DIExpression()), !dbg !12611
  %info = getelementptr inbounds i8, i8* %data, i64 24, !dbg !12612
  %0 = bitcast i8* %info to %struct.move_stmt_d**, !dbg !12612
  %1 = load %struct.move_stmt_d*, %struct.move_stmt_d** %0, align 8, !dbg !12612
  call void @llvm.dbg.value(metadata %struct.move_stmt_d* %1, metadata !12599, metadata !DIExpression()), !dbg !12611
  %2 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !12613
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !12600, metadata !DIExpression()), !dbg !12611
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12614
  %bf.load = load i64, i64* %3, align 8, !dbg !12614
  %bf.cast = and i64 %bf.load, 65535, !dbg !12614
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !12614
  %4 = load i32, i32* %arrayidx, align 4, !dbg !12614
  %cmp = icmp ugt i32 %4, 3, !dbg !12614
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12614

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %4, 11, !dbg !12614
  br i1 %cmp7, label %if.then, label %if.else, !dbg !12615

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %union.tree_node** @tree_block(%union.tree_node* %2) #6, !dbg !12616
  %5 = load %union.tree_node*, %union.tree_node** %call, align 8, !dbg !12616
  %tobool = icmp eq %union.tree_node* %5, null, !dbg !12616
  br i1 %tobool, label %if.end133, label %cond.true, !dbg !12616

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5498, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !12616
  br label %if.end133, !dbg !12616

if.else:                                          ; preds = %land.lhs.true, %entry
  %cmp14 = icmp eq i32 %4, 3, !dbg !12617
  br i1 %cmp14, label %if.then20, label %lor.lhs.false, !dbg !12618

lor.lhs.false:                                    ; preds = %if.else
  %cmp19 = icmp eq i64 %bf.cast, 141, !dbg !12619
  br i1 %cmp19, label %if.then20, label %if.else121, !dbg !12620

if.then20:                                        ; preds = %lor.lhs.false, %if.else
  %cmp25 = icmp eq i64 %bf.cast, 141, !dbg !12621
  br i1 %cmp25, label %if.then26, label %if.else28, !dbg !12622

if.then26:                                        ; preds = %if.then20
  %vars_map = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 4, !dbg !12623
  %6 = load %struct.pointer_map_t*, %struct.pointer_map_t** %vars_map, align 8, !dbg !12623
  %to_context = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 3, !dbg !12624
  %7 = load %union.tree_node*, %union.tree_node** %to_context, align 8, !dbg !12624
  %call27 = tail call fastcc %union.tree_node* @replace_ssa_name(%union.tree_node* %2, %struct.pointer_map_t* %6, %union.tree_node* %7) #7, !dbg !12625
  store %union.tree_node* %call27, %union.tree_node** %tp, align 8, !dbg !12626
  br label %if.end120, !dbg !12627

if.else28:                                        ; preds = %if.then20
  %cmp33 = icmp eq i64 %bf.cast, 30, !dbg !12628
  br i1 %cmp33, label %if.then34, label %if.else45, !dbg !12629

if.then34:                                        ; preds = %if.else28
  %new_label_map = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 5, !dbg !12630
  %8 = load %struct.htab*, %struct.htab** %new_label_map, align 8, !dbg !12630
  %tobool35 = icmp eq %struct.htab* %8, null, !dbg !12631
  br i1 %tobool35, label %if.end42, label %if.then36, !dbg !12632

if.then36:                                        ; preds = %if.then34
  %9 = bitcast %struct.tree_map* %in to i8*, !dbg !12633
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !12633
  %from = getelementptr inbounds %struct.tree_map, %struct.tree_map* %in, i64 0, i32 0, i32 0, !dbg !12634
  store %union.tree_node* %2, %union.tree_node** %from, align 8, !dbg !12635
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12636
  %10 = load i32, i32* %uid, align 4, !dbg !12636
  %call39 = call i8* @htab_find_with_hash(%struct.htab* nonnull %8, i8* nonnull %9, i32 %10) #6, !dbg !12637
  call void @llvm.dbg.value(metadata i8* %call39, metadata !12610, metadata !DIExpression()), !dbg !12638
  %tobool40 = icmp eq i8* %call39, null, !dbg !12639
  br i1 %tobool40, label %if.end, label %if.then41, !dbg !12641

if.then41:                                        ; preds = %if.then36
  call void @llvm.dbg.value(metadata i8* %call39, metadata !12610, metadata !DIExpression()), !dbg !12638
  %to = getelementptr inbounds i8, i8* %call39, i64 16, !dbg !12642
  %11 = bitcast i8* %to to %union.tree_node**, !dbg !12642
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !12642
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !12600, metadata !DIExpression()), !dbg !12611
  store %union.tree_node* %12, %union.tree_node** %tp, align 8, !dbg !12643
  br label %if.end, !dbg !12644

if.end:                                           ; preds = %if.then36, %if.then41
  %t.0 = phi %union.tree_node* [ %12, %if.then41 ], [ %2, %if.then36 ], !dbg !12611
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !12600, metadata !DIExpression()), !dbg !12611
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !12645
  br label %if.end42, !dbg !12646

if.end42:                                         ; preds = %if.then34, %if.end
  %t.1 = phi %union.tree_node* [ %t.0, %if.end ], [ %2, %if.then34 ], !dbg !12611
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !12600, metadata !DIExpression()), !dbg !12611
  %to_context43 = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 3, !dbg !12647
  %13 = bitcast %union.tree_node** %to_context43 to i64*, !dbg !12647
  %14 = load i64, i64* %13, align 8, !dbg !12647
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12648
  %15 = bitcast %union.tree_node** %context to i64*, !dbg !12649
  store i64 %14, i64* %15, align 8, !dbg !12649
  br label %if.end120, !dbg !12650

if.else45:                                        ; preds = %if.else28
  %remap_decls_p = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 7, !dbg !12651
  %16 = load i8, i8* %remap_decls_p, align 8, !dbg !12651
  %tobool46 = icmp eq i8 %16, 0, !dbg !12653
  br i1 %tobool46, label %if.end120, label %if.then47, !dbg !12654

if.then47:                                        ; preds = %if.else45
  %cmp52 = icmp eq i64 %bf.cast, 32, !dbg !12655
  br i1 %cmp52, label %land.lhs.true53, label %lor.lhs.false56, !dbg !12658

land.lhs.true53:                                  ; preds = %if.then47
  %call54 = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %2) #7, !dbg !12659
  %tobool55 = icmp eq i8 %call54, 0, !dbg !12659
  br i1 %tobool55, label %if.then62, label %land.lhs.true53.lor.lhs.false56_crit_edge, !dbg !12660

land.lhs.true53.lor.lhs.false56_crit_edge:        ; preds = %land.lhs.true53
  %bf.load58.pre = load i64, i64* %3, align 8, !dbg !12661
  %.pre = and i64 %bf.load58.pre, 65535, !dbg !12662
  br label %lor.lhs.false56, !dbg !12660

lor.lhs.false56:                                  ; preds = %land.lhs.true53.lor.lhs.false56_crit_edge, %if.then47
  %bf.cast605.pre-phi = phi i64 [ %.pre, %land.lhs.true53.lor.lhs.false56_crit_edge ], [ %bf.cast, %if.then47 ], !dbg !12662
  %bf.load58 = phi i64 [ %bf.load58.pre, %land.lhs.true53.lor.lhs.false56_crit_edge ], [ %bf.load, %if.then47 ], !dbg !12661
  %cmp61 = icmp eq i64 %bf.cast605.pre-phi, 33, !dbg !12662
  br i1 %cmp61, label %if.then62, label %if.end65, !dbg !12663

if.then62:                                        ; preds = %land.lhs.true53, %lor.lhs.false56
  %vars_map63 = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 4, !dbg !12664
  %17 = load %struct.pointer_map_t*, %struct.pointer_map_t** %vars_map63, align 8, !dbg !12664
  %to_context64 = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 3, !dbg !12665
  %18 = load %union.tree_node*, %union.tree_node** %to_context64, align 8, !dbg !12665
  tail call fastcc void @replace_by_duplicate_decl(%union.tree_node** %tp, %struct.pointer_map_t* %17, %union.tree_node* %18) #7, !dbg !12666
  %bf.load67.pre = load i64, i64* %3, align 8, !dbg !12667
  br label %if.end65, !dbg !12666

if.end65:                                         ; preds = %if.then62, %lor.lhs.false56
  %bf.load85 = phi i64 [ %bf.load67.pre, %if.then62 ], [ %bf.load58, %lor.lhs.false56 ], !dbg !12667
  %bf.cast696 = and i64 %bf.load85, 65535, !dbg !12667
  %cmp70 = icmp eq i64 %bf.cast696, 32, !dbg !12667
  br i1 %cmp70, label %land.lhs.true111, label %lor.lhs.false71, !dbg !12667

lor.lhs.false71:                                  ; preds = %if.end65
  %cmp76 = icmp eq i64 %bf.cast696, 34, !dbg !12667
  br i1 %cmp76, label %land.lhs.true111, label %lor.lhs.false77, !dbg !12667

lor.lhs.false77:                                  ; preds = %lor.lhs.false71
  %cmp82 = icmp eq i64 %bf.cast696, 36, !dbg !12667
  br i1 %cmp82, label %land.lhs.true111, label %lor.lhs.false83, !dbg !12667

lor.lhs.false83:                                  ; preds = %lor.lhs.false77
  %cmp88 = icmp eq i64 %bf.cast696, 141, !dbg !12667
  br i1 %cmp88, label %land.lhs.true89, label %if.end120, !dbg !12667

land.lhs.true89:                                  ; preds = %lor.lhs.false83
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12667
  %19 = bitcast i32* %var to i64**, !dbg !12667
  %20 = load i64*, i64** %19, align 8, !dbg !12667
  %bf.load91 = load i64, i64* %20, align 8, !dbg !12667
  %bf.cast9310 = and i64 %bf.load91, 65535, !dbg !12667
  %cmp94 = icmp eq i64 %bf.cast9310, 32, !dbg !12667
  br i1 %cmp94, label %land.lhs.true111, label %lor.lhs.false95, !dbg !12667

lor.lhs.false95:                                  ; preds = %land.lhs.true89
  %cmp102 = icmp eq i64 %bf.cast9310, 34, !dbg !12667
  br i1 %cmp102, label %land.lhs.true111, label %lor.lhs.false103, !dbg !12667

lor.lhs.false103:                                 ; preds = %lor.lhs.false95
  %cmp110 = icmp eq i64 %bf.cast9310, 36, !dbg !12667
  br i1 %cmp110, label %land.lhs.true111, label %if.end120, !dbg !12669

land.lhs.true111:                                 ; preds = %lor.lhs.false103, %lor.lhs.false95, %land.lhs.true89, %lor.lhs.false77, %lor.lhs.false71, %if.end65
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12670
  %call112 = tail call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %21) #7, !dbg !12671
  %tobool113 = icmp eq i8 %call112, 0, !dbg !12671
  br i1 %tobool113, label %if.end120, label %if.then114, !dbg !12672

if.then114:                                       ; preds = %land.lhs.true111
  %to_context115 = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %1, i64 0, i32 3, !dbg !12673
  %22 = bitcast %union.tree_node** %to_context115 to %struct.tree_function_decl**, !dbg !12673
  %23 = load %struct.tree_function_decl*, %struct.tree_function_decl** %22, align 8, !dbg !12673
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %23, i64 0, i32 1, !dbg !12673
  %24 = load %struct.function*, %struct.function** %f, align 8, !dbg !12673
  tail call void @push_cfun(%struct.function* %24) #6, !dbg !12675
  %25 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !12676
  %call116 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %25) #6, !dbg !12677
  tail call void @pop_cfun() #6, !dbg !12678
  br label %if.end120, !dbg !12679

if.end120:                                        ; preds = %land.lhs.true111, %if.else45, %if.end42, %lor.lhs.false83, %lor.lhs.false103, %if.then114, %if.then26
  store i32 0, i32* %walk_subtrees, align 4, !dbg !12680
  br label %if.end133, !dbg !12681

if.else121:                                       ; preds = %lor.lhs.false
  %cmp128 = icmp eq i32 %4, 2, !dbg !12682
  br i1 %cmp128, label %if.then130, label %if.end133, !dbg !12684

if.then130:                                       ; preds = %if.else121
  store i32 0, i32* %walk_subtrees, align 4, !dbg !12685
  br label %if.end133, !dbg !12686

if.end133:                                        ; preds = %if.then, %if.end120, %if.then130, %if.else121, %cond.true
  ret %union.tree_node* null, !dbg !12687
}

declare dso_local zeroext i8 @maybe_duplicate_eh_stmt_fn(%struct.function*, %union.gimple_statement_d*, %struct.function*, %union.gimple_statement_d*, %struct.pointer_map_t*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @remove_stmt_from_eh_lp_fn(%struct.function*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gimple_duplicate_stmt_histograms(%struct.function*, %union.gimple_statement_d*, %struct.function*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gimple_remove_stmt_histograms(%struct.function*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @free_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_by_duplicate_decl(%union.tree_node** %tp, %struct.pointer_map_t* %vars_map, %union.tree_node* %to_context) unnamed_addr #5 !dbg !12688 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !12692, metadata !DIExpression()), !dbg !12699
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %vars_map, metadata !12693, metadata !DIExpression()), !dbg !12699
  call void @llvm.dbg.value(metadata %union.tree_node* %to_context, metadata !12694, metadata !DIExpression()), !dbg !12699
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !12700
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12695, metadata !DIExpression()), !dbg !12699
  %f1 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_context, i64 0, i32 0, i32 1, !dbg !12701
  %1 = load %struct.function*, %struct.function** %f1, align 8, !dbg !12701
  call void @llvm.dbg.value(metadata %struct.function* %1, metadata !12697, metadata !DIExpression()), !dbg !12699
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12702
  %2 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !12702
  %cmp = icmp eq %union.tree_node* %2, %to_context, !dbg !12704
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !12705

if.end:                                           ; preds = %entry
  %3 = bitcast %union.tree_node* %0 to i8*, !dbg !12706
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %vars_map, i8* %3) #6, !dbg !12707
  call void @llvm.dbg.value(metadata i8** %call, metadata !12698, metadata !DIExpression()), !dbg !12699
  %tobool = icmp eq i8** %call, null, !dbg !12708
  br i1 %tobool, label %if.then2, label %if.else57, !dbg !12710

if.then2:                                         ; preds = %if.end
  %call3 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %vars_map, i8* %3) #6, !dbg !12711
  call void @llvm.dbg.value(metadata i8** %call3, metadata !12698, metadata !DIExpression()), !dbg !12699
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12713
  %bf.load = load i64, i64* %4, align 8, !dbg !12713
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12713
  %cmp4 = icmp eq i64 %bf.cast1, 32, !dbg !12713
  br i1 %cmp4, label %if.then43, label %lor.lhs.false, !dbg !12713

lor.lhs.false:                                    ; preds = %if.then2
  %cmp9 = icmp eq i64 %bf.cast1, 34, !dbg !12713
  br i1 %cmp9, label %if.then43, label %lor.lhs.false10, !dbg !12713

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %cmp15 = icmp eq i64 %bf.cast1, 36, !dbg !12713
  br i1 %cmp15, label %if.then43, label %lor.lhs.false16, !dbg !12713

lor.lhs.false16:                                  ; preds = %lor.lhs.false10
  %cmp21 = icmp eq i64 %bf.cast1, 141, !dbg !12713
  br i1 %cmp21, label %land.lhs.true, label %if.else, !dbg !12713

land.lhs.true:                                    ; preds = %lor.lhs.false16
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12713
  %5 = bitcast i32* %var to i64**, !dbg !12713
  %6 = load i64*, i64** %5, align 8, !dbg !12713
  %bf.load23 = load i64, i64* %6, align 8, !dbg !12713
  %bf.cast256 = and i64 %bf.load23, 65535, !dbg !12713
  %cmp26 = icmp eq i64 %bf.cast256, 32, !dbg !12713
  br i1 %cmp26, label %if.then43, label %lor.lhs.false27, !dbg !12713

lor.lhs.false27:                                  ; preds = %land.lhs.true
  %cmp34 = icmp eq i64 %bf.cast256, 34, !dbg !12713
  br i1 %cmp34, label %if.then43, label %lor.lhs.false35, !dbg !12713

lor.lhs.false35:                                  ; preds = %lor.lhs.false27
  %cmp42 = icmp eq i64 %bf.cast256, 36, !dbg !12713
  br i1 %cmp42, label %if.then43, label %if.else, !dbg !12715

if.then43:                                        ; preds = %lor.lhs.false35, %lor.lhs.false27, %land.lhs.true, %lor.lhs.false10, %lor.lhs.false, %if.then2
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12716
  %7 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !12716
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12718
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !12718
  %call45 = tail call %union.tree_node* @copy_var_decl(%union.tree_node* %0, %union.tree_node* %7, %union.tree_node* %8) #6, !dbg !12719
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !12696, metadata !DIExpression()), !dbg !12699
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 9, !dbg !12720
  %9 = load %union.tree_node*, %union.tree_node** %local_decls, align 8, !dbg !12720
  %call46 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call45, %union.tree_node* %9) #6, !dbg !12720
  store %union.tree_node* %call46, %union.tree_node** %local_decls, align 8, !dbg !12721
  br label %if.end54, !dbg !12722

if.else:                                          ; preds = %lor.lhs.false35, %lor.lhs.false16
  %cmp52 = icmp eq i64 %bf.cast1, 33, !dbg !12723
  br i1 %cmp52, label %cond.end, label %cond.true, !dbg !12723

cond.true:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5423, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !12723
  br label %cond.end, !dbg !12723

cond.end:                                         ; preds = %if.else, %cond.true
  %call53 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %0) #6, !dbg !12725
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !12696, metadata !DIExpression()), !dbg !12699
  br label %if.end54

if.end54:                                         ; preds = %cond.end, %if.then43
  %new_t.0 = phi %union.tree_node* [ %call45, %if.then43 ], [ %call53, %cond.end ], !dbg !12726
  call void @llvm.dbg.value(metadata %union.tree_node* %new_t.0, metadata !12696, metadata !DIExpression()), !dbg !12699
  %context56 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12727
  store %union.tree_node* %to_context, %union.tree_node** %context56, align 8, !dbg !12728
  %10 = bitcast i8** %call3 to %union.tree_node**, !dbg !12729
  store %union.tree_node* %new_t.0, %union.tree_node** %10, align 8, !dbg !12729
  br label %if.end58, !dbg !12730

if.else57:                                        ; preds = %if.end
  %11 = bitcast i8** %call to %union.tree_node**, !dbg !12731
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !12731
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !12696, metadata !DIExpression()), !dbg !12699
  br label %if.end58

if.end58:                                         ; preds = %if.else57, %if.end54
  %new_t.1 = phi %union.tree_node* [ %12, %if.else57 ], [ %new_t.0, %if.end54 ], !dbg !12732
  call void @llvm.dbg.value(metadata %union.tree_node* %new_t.1, metadata !12696, metadata !DIExpression()), !dbg !12699
  store %union.tree_node* %new_t.1, %union.tree_node** %tp, align 8, !dbg !12733
  br label %cleanup.cont, !dbg !12734

cleanup.cont:                                     ; preds = %if.end58, %entry
  ret void, !dbg !12734
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %fun) unnamed_addr #0 !dbg !12735 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !12741, metadata !DIExpression()), !dbg !12742
  %tobool = icmp eq %struct.function* %fun, null, !dbg !12743
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !12744

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !12745
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !12745
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !12746
  br i1 %tobool1, label %land.end, label %land.rhs, !dbg !12747

land.rhs:                                         ; preds = %land.lhs.true
  %in_ssa_p = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 10, !dbg !12748
  %bf.load = load i8, i8* %in_ssa_p, align 8, !dbg !12748
  %bf.clear = and i8 %bf.load, 1, !dbg !12748
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %entry, %land.rhs
  %1 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ %bf.clear, %land.rhs ]
  ret i8 %1, !dbg !12749
}

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !12750 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !12754, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !12755, metadata !DIExpression()), !dbg !12756
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12757
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !12758
  ret %union.tree_node* %call, !dbg !12759
}

declare dso_local void @set_default_def(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_var_decl(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !12760 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !12764, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !12765, metadata !DIExpression()), !dbg !12767
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !12768
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !12770

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12771
  %bf.load = load i64, i64* %0, align 8, !dbg !12771
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12772
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !12772
  br i1 %cmp, label %if.else, label %if.then, !dbg !12773

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !12774
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !12775
  br label %if.end, !dbg !12776

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12777
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !12777
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !12766, metadata !DIExpression()), !dbg !12767
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !12779
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !12780
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @move_stmt_eh_region_tree_nr(%union.tree_node* %old_t_nr, %struct.move_stmt_d* %p) unnamed_addr #5 !dbg !12781 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %old_t_nr, metadata !12785, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata %struct.move_stmt_d* %p, metadata !12786, metadata !DIExpression()), !dbg !12789
  %call = tail call i64 @tree_low_cst(%union.tree_node* %old_t_nr, i32 0) #6, !dbg !12790
  %conv = trunc i64 %call to i32, !dbg !12790
  call void @llvm.dbg.value(metadata i32 %conv, metadata !12787, metadata !DIExpression()), !dbg !12789
  %call1 = tail call fastcc i32 @move_stmt_eh_region_nr(i32 %conv, %struct.move_stmt_d* %p) #7, !dbg !12791
  call void @llvm.dbg.value(metadata i32 %call1, metadata !12788, metadata !DIExpression()), !dbg !12789
  %conv2 = sext i32 %call1 to i64, !dbg !12792
  %call3 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv2) #6, !dbg !12793
  ret %union.tree_node* %call3, !dbg !12794
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_arg(%union.gimple_statement_d* %gs, i32 %index, %union.tree_node* %arg) unnamed_addr #0 !dbg !12795 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12797, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i32 %index, metadata !12798, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !12799, metadata !DIExpression()), !dbg !12800
  %add = add i32 %index, 3, !dbg !12801
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %add, %union.tree_node* %arg) #7, !dbg !12802
  ret void, !dbg !12803
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_resx_region(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12804 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12806, metadata !DIExpression()), !dbg !12807
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !12808
  %1 = load i32, i32* %0, align 8, !dbg !12808
  ret i32 %1, !dbg !12809
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @move_stmt_eh_region_nr(i32 %old_nr, %struct.move_stmt_d* %p) unnamed_addr #5 !dbg !12810 {
entry:
  call void @llvm.dbg.value(metadata i32 %old_nr, metadata !12814, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata %struct.move_stmt_d* %p, metadata !12815, metadata !DIExpression()), !dbg !12819
  %call = tail call %struct.eh_region_d* @get_eh_region_from_number(i32 %old_nr) #6, !dbg !12820
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call, metadata !12816, metadata !DIExpression()), !dbg !12819
  %eh_map = getelementptr inbounds %struct.move_stmt_d, %struct.move_stmt_d* %p, i64 0, i32 6, !dbg !12821
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** %eh_map, align 8, !dbg !12821
  %1 = bitcast %struct.eh_region_d* %call to i8*, !dbg !12822
  %call1 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !12823
  call void @llvm.dbg.value(metadata i8** %call1, metadata !12818, metadata !DIExpression()), !dbg !12819
  %2 = bitcast i8** %call1 to %struct.eh_region_d**, !dbg !12824
  %3 = load %struct.eh_region_d*, %struct.eh_region_d** %2, align 8, !dbg !12824
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %3, metadata !12817, metadata !DIExpression()), !dbg !12819
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %3, i64 0, i32 3, !dbg !12825
  %4 = load i32, i32* %index, align 8, !dbg !12825
  ret i32 %4, !dbg !12826
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_resx_set_region(%union.gimple_statement_d* %gs, i32 %region) unnamed_addr #0 !dbg !12827 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12831, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata i32 %region, metadata !12832, metadata !DIExpression()), !dbg !12833
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !12834
  store i32 %region, i32* %0, align 8, !dbg !12835
  ret void, !dbg !12836
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12837 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12839, metadata !DIExpression()), !dbg !12840
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !12841
  %1 = load i32, i32* %0, align 8, !dbg !12841
  ret i32 %1, !dbg !12842
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_eh_dispatch_set_region(%union.gimple_statement_d* %gs, i32 %region) unnamed_addr #0 !dbg !12843 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12845, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i32 %region, metadata !12846, metadata !DIExpression()), !dbg !12847
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !12848
  store i32 %region, i32* %0, align 8, !dbg !12849
  ret void, !dbg !12850
}

declare dso_local %union.gimple_statement_d* @walk_gimple_seq(%struct.gimple_seq_d*, %union.tree_node* (%struct.gimple_stmt_iterator*, i8*, %struct.walk_stmt_info*)*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, %struct.walk_stmt_info*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_omp_body(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !12851 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !12853, metadata !DIExpression()), !dbg !12854
  %body = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !12855
  %0 = bitcast i32* %body to %struct.gimple_seq_d**, !dbg !12855
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !12855
  ret %struct.gimple_seq_d* %1, !dbg !12856
}

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.eh_region_d* @get_eh_region_from_number(i32) local_unnamed_addr #2

declare dso_local %union.tree_node** @tree_block(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_global_var(%union.tree_node* %t) unnamed_addr #0 !dbg !12857 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !12859, metadata !DIExpression()), !dbg !12860
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12861
  %bf.load = load i64, i64* %0, align 8, !dbg !12861
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !12861
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !12861
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !12862

lor.rhs:                                          ; preds = %entry
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12863
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !12863
  %bf.load1 = load i64, i64* %1, align 8, !dbg !12863
  %bf.cast42 = lshr i64 %bf.load1, 25, !dbg !12862
  %2 = trunc i64 %bf.cast42 to i8, !dbg !12862
  %3 = and i8 %2, 1, !dbg !12862
  br label %lor.end, !dbg !12862

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i8 [ 1, %entry ], [ %3, %lor.rhs ]
  ret i8 %4, !dbg !12864
}

declare dso_local void @decl_value_expr_insert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_value_expr_lookup(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @dump_double_int(%struct._IO_FILE*, i64, i64, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @verify_eh_edges(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @verify_eh_dispatch_edge(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local i32 @dom_info_state(i32) local_unnamed_addr #2

declare dso_local void @verify_dominators(i32) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @alloc_block() local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_bb_seq(%struct.basic_block_def* %bb, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !12865 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !12869, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !12870, metadata !DIExpression()), !dbg !12871
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !12872
  %0 = load i32, i32* %flags, align 8, !dbg !12872
  %and = and i32 %0, 512, !dbg !12872
  %tobool = icmp eq i32 %and, 0, !dbg !12872
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12872

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 248, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !12872
  br label %cond.end, !dbg !12872

cond.end:                                         ; preds = %entry, %cond.true
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !12873
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !12873
  %seq1 = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !12874
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !12875
  ret void, !dbg !12876
}

declare dso_local %struct.gimple_seq_d* @gimple_seq_alloc() local_unnamed_addr #2

declare dso_local void @link_block(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @redirect_eh_edge(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_try_redirect_by_replacing_jump(%struct.edge_def* %e, %struct.basic_block_def* %target) unnamed_addr #5 !dbg !12877 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !12879, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target, metadata !12880, metadata !DIExpression()), !dbg !12884
  %src1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !12885
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src1, align 8, !dbg !12885
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !12881, metadata !DIExpression()), !dbg !12884
  %1 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !12886
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !12886
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !12887
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12887
  %tobool = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !12887
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12887

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !12887
  br label %cond.end, !dbg !12887

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12887
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !12887
  %cmp = icmp eq i32 %call, 2, !dbg !12889
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !12890

lor.lhs.false:                                    ; preds = %cond.end
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12891
  %tobool4 = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !12891
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !12891

cond.true5:                                       ; preds = %lor.lhs.false
  %base7 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !12891
  br label %cond.end9, !dbg !12891

cond.end9:                                        ; preds = %lor.lhs.false, %cond.true5
  %cond10 = phi %struct.VEC_edge_base* [ %base7, %cond.true5 ], [ null, %lor.lhs.false ], !dbg !12891
  br i1 %tobool4, label %cond.end17, label %cond.true13, !dbg !12891

cond.true13:                                      ; preds = %cond.end9
  %base15 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !12891
  br label %cond.end17, !dbg !12891

cond.end17:                                       ; preds = %cond.end9, %cond.true13
  %cond18 = phi %struct.VEC_edge_base* [ %base15, %cond.true13 ], [ null, %cond.end9 ], !dbg !12891
  %call19 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond18, i32 0) #7, !dbg !12891
  %cmp20 = icmp eq %struct.edge_def* %call19, %e, !dbg !12891
  %conv = zext i1 %cmp20 to i32, !dbg !12891
  %call21 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond10, i32 %conv) #7, !dbg !12891
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call21, i64 0, i32 1, !dbg !12892
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !12892
  %cmp22 = icmp eq %struct.basic_block_def* %4, %target, !dbg !12893
  br i1 %cmp22, label %if.end, label %cleanup, !dbg !12894

if.end:                                           ; preds = %cond.end17
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !12895
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !12895
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %0) #7, !dbg !12895
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !12895
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !12895
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !12882, metadata !DIExpression(DW_OP_deref)), !dbg !12884
  %call24 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !12896
  %tobool25 = icmp eq i8 %call24, 0, !dbg !12896
  br i1 %tobool25, label %if.end27, label %cleanup, !dbg !12898

if.end27:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !12882, metadata !DIExpression(DW_OP_deref)), !dbg !12884
  %call28 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !12899
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call28, metadata !12883, metadata !DIExpression()), !dbg !12884
  %call29 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call28) #7, !dbg !12900
  %cmp30 = icmp eq i32 %call29, 1, !dbg !12902
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !12903

lor.lhs.false32:                                  ; preds = %if.end27
  %call33 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call28) #7, !dbg !12904
  %cmp34 = icmp eq i32 %call33, 5, !dbg !12905
  br i1 %cmp34, label %if.then36, label %cleanup, !dbg !12906

if.then36:                                        ; preds = %lor.lhs.false32, %if.end27
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !12882, metadata !DIExpression(DW_OP_deref)), !dbg !12884
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %i, i8 zeroext 1) #6, !dbg !12907
  %call37 = call %struct.edge_def* @ssa_redirect_edge(%struct.edge_def* %e, %struct.basic_block_def* %target) #6, !dbg !12909
  call void @llvm.dbg.value(metadata %struct.edge_def* %call37, metadata !12879, metadata !DIExpression()), !dbg !12884
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call37, i64 0, i32 7, !dbg !12910
  store i32 1, i32* %flags, align 8, !dbg !12911
  br label %cleanup, !dbg !12912

cleanup:                                          ; preds = %if.end, %cond.end17, %cond.end, %lor.lhs.false32, %if.then36
  %retval.0 = phi %struct.edge_def* [ %call37, %if.then36 ], [ null, %cond.end17 ], [ null, %cond.end ], [ null, %if.end ], [ null, %lor.lhs.false32 ], !dbg !12884
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !12913
  ret %struct.edge_def* %retval.0, !dbg !12913
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_cases_for_edge(%struct.edge_def* %e, %union.gimple_statement_d* %t) unnamed_addr #5 !dbg !12914 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !12918, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !12919, metadata !DIExpression()), !dbg !12930
  %call = tail call fastcc zeroext i8 @recording_case_labels_p() #7, !dbg !12931
  %tobool = icmp eq i8 %call, 0, !dbg !12931
  br i1 %tobool, label %cleanup, label %if.end, !dbg !12933

if.end:                                           ; preds = %entry
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !12934
  %1 = bitcast %struct.edge_def* %e to i8*, !dbg !12935
  %call1 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !12936
  call void @llvm.dbg.value(metadata i8** %call1, metadata !12920, metadata !DIExpression()), !dbg !12930
  %tobool2 = icmp eq i8** %call1, null, !dbg !12937
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !12939

if.then3:                                         ; preds = %if.end
  %2 = bitcast i8** %call1 to %union.tree_node**, !dbg !12940
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !12940
  br label %cleanup, !dbg !12941

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %t) #7, !dbg !12942
  %conv = zext i32 %call5 to i64, !dbg !12942
  call void @llvm.dbg.value(metadata i64 %conv, metadata !12922, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata i64 0, metadata !12921, metadata !DIExpression()), !dbg !12930
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !12943
  br label %for.cond, !dbg !12944

for.cond:                                         ; preds = %for.body, %if.end4
  %i.0 = phi i64 [ 0, %if.end4 ], [ %inc, %for.body ], !dbg !12945
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !12921, metadata !DIExpression()), !dbg !12930
  %exitcond = icmp eq i64 %i.0, %conv, !dbg !12946
  br i1 %exitcond, label %for.end, label %for.body, !dbg !12947

for.body:                                         ; preds = %for.cond
  %conv7 = trunc i64 %i.0 to i32, !dbg !12948
  %call8 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %t, i32 %conv7) #7, !dbg !12949
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !12923, metadata !DIExpression()), !dbg !12943
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12950
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !12950
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !12950
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !12927, metadata !DIExpression()), !dbg !12943
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !12951
  %call9 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %5, %union.tree_node* %4) #7, !dbg !12951
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call9, metadata !12928, metadata !DIExpression()), !dbg !12943
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !12952
  %call10 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %6, %struct.basic_block_def* %call9) #6, !dbg !12953
  call void @llvm.dbg.value(metadata %struct.edge_def* %call10, metadata !12929, metadata !DIExpression()), !dbg !12943
  %7 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !12954
  %8 = bitcast %struct.edge_def* %call10 to i8*, !dbg !12955
  %call11 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %7, i8* %8) #6, !dbg !12956
  call void @llvm.dbg.value(metadata i8** %call11, metadata !12920, metadata !DIExpression()), !dbg !12930
  %9 = bitcast i8** %call11 to i64*, !dbg !12957
  %10 = load i64, i64* %9, align 8, !dbg !12957
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12958
  %11 = bitcast %union.tree_node** %chain to i64*, !dbg !12959
  store i64 %10, i64* %11, align 8, !dbg !12959
  %12 = bitcast i8** %call11 to %union.tree_node**, !dbg !12960
  store %union.tree_node* %call8, %union.tree_node** %12, align 8, !dbg !12960
  %inc = add nuw nsw i64 %i.0, 1, !dbg !12961
  call void @llvm.dbg.value(metadata i64 %inc, metadata !12921, metadata !DIExpression()), !dbg !12930
  br label %for.cond, !dbg !12962, !llvm.loop !12963

for.end:                                          ; preds = %for.cond
  %13 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !12965
  %call12 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %13, i8* %1) #6, !dbg !12966
  %14 = bitcast i8** %call12 to %union.tree_node**, !dbg !12967
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !12967
  br label %cleanup, !dbg !12968

cleanup:                                          ; preds = %entry, %for.end, %if.then3
  %retval.0 = phi %union.tree_node* [ %3, %if.then3 ], [ %15, %for.end ], [ null, %entry ], !dbg !12930
  ret %union.tree_node* %retval.0, !dbg !12969
}

declare dso_local void @redirect_eh_dispatch_edge(%union.gimple_statement_d*, %struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @ssa_redirect_edge(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @recording_case_labels_p() unnamed_addr #5 !dbg !12970 {
entry:
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @edge_to_cases, align 8, !dbg !12971
  %cmp = icmp ne %struct.pointer_map_t* %0, null, !dbg !12972
  %conv1 = zext i1 %cmp to i8, !dbg !12973
  ret i8 %conv1, !dbg !12974
}

declare dso_local void @dump_bb(%struct.basic_block_def*, %struct._IO_FILE*, i32) local_unnamed_addr #2

declare dso_local void @free_numbers_of_iterations_estimates_loop(%struct.loop*) local_unnamed_addr #2

declare dso_local void @release_defs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_phi_nodes_and_edges_for_unreachable_block(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !12975 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !12977, metadata !DIExpression()), !dbg !12978
  tail call void @remove_phi_nodes(%struct.basic_block_def* %bb) #6, !dbg !12979
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !12978
  br label %while.cond, !dbg !12980

while.cond:                                       ; preds = %cond.end8, %entry
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12981
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !12981
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12981

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !12981
  br label %cond.end, !dbg !12981

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !12981
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !12981
  %cmp = icmp eq i32 %call, 0, !dbg !12982
  br i1 %cmp, label %while.end, label %while.body, !dbg !12980

while.body:                                       ; preds = %cond.end
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !12983
  %tobool3 = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !12983
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !12983

cond.true4:                                       ; preds = %while.body
  %base6 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !12983
  br label %cond.end8, !dbg !12983

cond.end8:                                        ; preds = %while.body, %cond.true4
  %cond9 = phi %struct.VEC_edge_base* [ %base6, %cond.true4 ], [ null, %while.body ], !dbg !12983
  %call10 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond9, i32 0) #7, !dbg !12983
  tail call void @remove_edge(%struct.edge_def* %call10) #6, !dbg !12984
  br label %while.cond, !dbg !12980, !llvm.loop !12985

while.end:                                        ; preds = %cond.end
  ret void, !dbg !12987
}

declare dso_local void @remove_phi_nodes(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @unlink_block(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !12988 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !12990, metadata !DIExpression()), !dbg !12991
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !12992
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !12992
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !12992
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !12992

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !12992
  br label %cond.end, !dbg !12992

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !12992
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !12992
  %cmp = icmp eq i32 %call, 1, !dbg !12993
  %conv2 = zext i1 %cmp to i8, !dbg !12992
  ret i8 %conv2, !dbg !12994
}

declare dso_local zeroext i8 @name_mappings_registered_p() local_unnamed_addr #2

declare dso_local zeroext i8 @may_propagate_copy(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @loops_state_satisfies_p(i32 %flags) unnamed_addr #0 !dbg !12995 {
entry:
  call void @llvm.dbg.value(metadata i32 32, metadata !12999, metadata !DIExpression()), !dbg !13000
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !13001
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !13001
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !13001
  %state = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 0, !dbg !13002
  %2 = load i32, i32* %state, align 8, !dbg !13002
  %and = lshr i32 %2, 5, !dbg !13003
  %3 = trunc i32 %and to i8, !dbg !13003
  %4 = and i8 %3, 1, !dbg !13003
  ret i8 %4, !dbg !13004
}

declare dso_local void @gsi_insert_seq_after(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_new_def_for(%union.tree_node*, %union.gimple_statement_d*, %union.tree_node**) local_unnamed_addr #2

declare dso_local zeroext i8 @maybe_duplicate_eh_stmt(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !13005 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !13009, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !13010, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.value(metadata i32 10, metadata !13011, metadata !DIExpression()), !dbg !13012
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 10) #7, !dbg !13013
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !13014
  store i32 3, i32* %iter_type, align 4, !dbg !13015
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !13016
  ret %union.tree_node** %call, !dbg !13017
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !13018 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !13022, metadata !DIExpression()), !dbg !13024
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !13025
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !13025
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !13027
  br i1 %tobool, label %if.end, label %if.then, !dbg !13028

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !13029
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !13029
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !13023, metadata !DIExpression()), !dbg !13024
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !13031
  %3 = load i64, i64* %2, align 8, !dbg !13031
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !13032
  store i64 %3, i64* %4, align 8, !dbg !13032
  br label %cleanup, !dbg !13033

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !13034
  store i8 1, i8* %done, align 8, !dbg !13035
  br label %cleanup, !dbg !13036

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !13024
  ret %union.tree_node** %retval.0, !dbg !13037
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reinstall_phi_args(%struct.edge_def* %new_edge, %struct.edge_def* %old_edge) unnamed_addr #5 !dbg !13038 {
entry:
  %vm = alloca %struct._edge_var_map*, align 8
  %phis = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %new_edge, metadata !13042, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata %struct.edge_def* %old_edge, metadata !13043, metadata !DIExpression()), !dbg !13074
  %0 = bitcast %struct._edge_var_map** %vm to i8*, !dbg !13075
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !13075
  %1 = bitcast %struct.gimple_stmt_iterator* %phis to i8*, !dbg !13076
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !13076
  %call = tail call %struct.VEC_edge_var_map_heap* @redirect_edge_var_map_vector(%struct.edge_def* %old_edge) #6, !dbg !13077
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_heap* %call, metadata !13044, metadata !DIExpression()), !dbg !13074
  %tobool = icmp eq %struct.VEC_edge_var_map_heap* %call, null, !dbg !13078
  br i1 %tobool, label %cleanup, label %if.end, !dbg !13080

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !13066, metadata !DIExpression()), !dbg !13074
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !13081
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !13081
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %new_edge, i64 0, i32 1, !dbg !13082
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !13082
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %3) #6, !dbg !13081
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !13081
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !13081
  %base = getelementptr inbounds %struct.VEC_edge_var_map_heap, %struct.VEC_edge_var_map_heap* %call, i64 0, i32 0, !dbg !13083
  br label %for.cond, !dbg !13084

for.cond:                                         ; preds = %cond.end12, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %cond.end12 ], !dbg !13085
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !13066, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata %struct._edge_var_map** %vm, metadata !13064, metadata !DIExpression(DW_OP_deref)), !dbg !13074
  %call2 = call fastcc i32 @VEC_edge_var_map_base_iterate(%struct.VEC_edge_var_map_base* nonnull %base, i32 %i.0, %struct._edge_var_map** nonnull %vm) #7, !dbg !13086
  %tobool3 = icmp eq i32 %call2, 0, !dbg !13086
  br i1 %tobool3, label %for.end, label %land.rhs, !dbg !13087

land.rhs:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %phis, metadata !13067, metadata !DIExpression(DW_OP_deref)), !dbg !13074
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %phis) #7, !dbg !13088
  %tobool5 = icmp eq i8 %call4, 0, !dbg !13089
  br i1 %tobool5, label %for.body, label %for.end, !dbg !13090

for.body:                                         ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %phis, metadata !13067, metadata !DIExpression(DW_OP_deref)), !dbg !13074
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %phis) #7, !dbg !13091
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !13068, metadata !DIExpression()), !dbg !13092
  %4 = load %struct._edge_var_map*, %struct._edge_var_map** %vm, align 8, !dbg !13093
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %4, metadata !13064, metadata !DIExpression()), !dbg !13074
  %call7 = call fastcc %union.tree_node* @redirect_edge_var_map_result(%struct._edge_var_map* %4) #7, !dbg !13094
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !13072, metadata !DIExpression()), !dbg !13092
  %5 = load %struct._edge_var_map*, %struct._edge_var_map** %vm, align 8, !dbg !13095
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %5, metadata !13064, metadata !DIExpression()), !dbg !13074
  %call8 = call fastcc %union.tree_node* @redirect_edge_var_map_def(%struct._edge_var_map* %5) #7, !dbg !13096
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !13073, metadata !DIExpression()), !dbg !13092
  %call9 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call6) #7, !dbg !13097
  %cmp = icmp eq %union.tree_node* %call7, %call9, !dbg !13097
  br i1 %cmp, label %cond.end12, label %cond.true10, !dbg !13097

cond.true10:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2430, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !13097
  br label %cond.end12, !dbg !13097

cond.end12:                                       ; preds = %for.body, %cond.true10
  %6 = load %struct._edge_var_map*, %struct._edge_var_map** %vm, align 8, !dbg !13098
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %6, metadata !13064, metadata !DIExpression()), !dbg !13074
  %call14 = call fastcc i32 @redirect_edge_var_map_location(%struct._edge_var_map* %6) #7, !dbg !13099
  call void @add_phi_arg(%union.gimple_statement_d* %call6, %union.tree_node* %call8, %struct.edge_def* %new_edge, i32 %call14) #6, !dbg !13100
  %inc = add nuw nsw i32 %i.0, 1, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %inc, metadata !13066, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %phis, metadata !13067, metadata !DIExpression(DW_OP_deref)), !dbg !13074
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %phis) #7, !dbg !13102
  br label %for.cond, !dbg !13103, !llvm.loop !13104

for.end:                                          ; preds = %for.cond, %land.rhs
  call void @redirect_edge_var_map_clear(%struct.edge_def* %old_edge) #6, !dbg !13106
  br label %cleanup, !dbg !13107

cleanup:                                          ; preds = %entry, %for.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !13107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !13107
  ret void, !dbg !13107
}

declare dso_local %struct.VEC_edge_var_map_heap* @redirect_edge_var_map_vector(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_var_map_base_iterate(%struct.VEC_edge_var_map_base* %vec_, i32 %ix_, %struct._edge_var_map** %ptr) unnamed_addr #0 !dbg !13108 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_var_map_base* %vec_, metadata !13114, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !13115, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata %struct._edge_var_map** %ptr, metadata !13116, metadata !DIExpression()), !dbg !13117
  %tobool = icmp eq %struct.VEC_edge_var_map_base* %vec_, null, !dbg !13118
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !13118

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 0, !dbg !13118
  %0 = load i32, i32* %num, align 8, !dbg !13118
  %cmp = icmp ugt i32 %0, %ix_, !dbg !13118
  br i1 %cmp, label %if.then, label %if.else, !dbg !13120

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !13121
  %arrayidx = getelementptr inbounds %struct.VEC_edge_var_map_base, %struct.VEC_edge_var_map_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !13121
  br label %return, !dbg !13121

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !13123

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct._edge_var_map* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !13125
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !13125
  store %struct._edge_var_map* %storemerge, %struct._edge_var_map** %ptr, align 8, !dbg !13125
  ret i32 %retval.0, !dbg !13120
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @redirect_edge_var_map_result(%struct._edge_var_map* %v) unnamed_addr #0 !dbg !13126 {
entry:
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %v, metadata !13130, metadata !DIExpression()), !dbg !13131
  %result = getelementptr inbounds %struct._edge_var_map, %struct._edge_var_map* %v, i64 0, i32 0, !dbg !13132
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !13132
  ret %union.tree_node* %0, !dbg !13133
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @redirect_edge_var_map_def(%struct._edge_var_map* %v) unnamed_addr #0 !dbg !13134 {
entry:
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %v, metadata !13136, metadata !DIExpression()), !dbg !13137
  %def = getelementptr inbounds %struct._edge_var_map, %struct._edge_var_map* %v, i64 0, i32 1, !dbg !13138
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !13138
  ret %union.tree_node* %0, !dbg !13139
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @redirect_edge_var_map_location(%struct._edge_var_map* %v) unnamed_addr #0 !dbg !13140 {
entry:
  call void @llvm.dbg.value(metadata %struct._edge_var_map* %v, metadata !13144, metadata !DIExpression()), !dbg !13145
  %locus = getelementptr inbounds %struct._edge_var_map, %struct._edge_var_map* %v, i64 0, i32 2, !dbg !13146
  %0 = load i32, i32* %locus, align 8, !dbg !13146
  ret i32 %0, !dbg !13147
}

declare dso_local void @redirect_edge_var_map_clear(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_phi_set_result(%union.gimple_statement_d* %gs, %union.tree_node* %result) unnamed_addr #0 !dbg !13148 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !13150, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !13151, metadata !DIExpression()), !dbg !13152
  %result1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !13153
  store %union.tree_node* %result, %union.tree_node** %result1, align 8, !dbg !13154
  ret void, !dbg !13155
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @need_fake_edge_p(%union.gimple_statement_d* %t) unnamed_addr #5 !dbg !13156 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !13158, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !13159, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 0, metadata !13160, metadata !DIExpression()), !dbg !13161
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %t) #7, !dbg !13162
  %tobool = icmp eq i8 %call, 0, !dbg !13162
  br i1 %tobool, label %if.end, label %if.then, !dbg !13164

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %t) #7, !dbg !13165
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !13159, metadata !DIExpression()), !dbg !13161
  %call2 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %t) #6, !dbg !13167
  call void @llvm.dbg.value(metadata i32 %call2, metadata !13160, metadata !DIExpression()), !dbg !13161
  br label %if.end, !dbg !13168

if.end:                                           ; preds = %entry, %if.then
  %call_flags.0 = phi i32 [ %call2, %if.then ], [ 0, %entry ], !dbg !13161
  %fndecl.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !13161
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.0, metadata !13159, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 %call_flags.0, metadata !13160, metadata !DIExpression()), !dbg !13161
  %call3 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %t) #7, !dbg !13169
  %tobool4 = icmp ne i8 %call3, 0, !dbg !13169
  %tobool5 = icmp ne %union.tree_node* %fndecl.0, null, !dbg !13171
  %or.cond = and i1 %tobool4, %tobool5, !dbg !13172
  br i1 %or.cond, label %land.lhs.true6, label %if.end28, !dbg !13172

land.lhs.true6:                                   ; preds = %if.end
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl.0, i64 0, i32 0, i32 5, !dbg !13173
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !13173
  %bf.clear = and i32 %bf.load, 6144, !dbg !13173
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !13173
  %0 = and i32 %call_flags.0, 192, !dbg !13174
  %1 = icmp ne i32 %0, 64, !dbg !13174
  %2 = or i1 %1, %cmp, !dbg !13174
  br i1 %2, label %if.end28, label %land.lhs.true13, !dbg !13174

land.lhs.true13:                                  ; preds = %land.lhs.true6
  %cmp19 = icmp eq i32 %bf.clear, 6144, !dbg !13175
  br i1 %cmp19, label %land.lhs.true21, label %cleanup, !dbg !13176

land.lhs.true21:                                  ; preds = %land.lhs.true13
  %bf.clear24 = and i32 %bf.load, 2047, !dbg !13177
  %cmp25 = icmp eq i32 %bf.clear24, 453, !dbg !13178
  br i1 %cmp25, label %if.end28, label %cleanup, !dbg !13179

if.end28:                                         ; preds = %land.lhs.true6, %land.lhs.true21, %if.end
  %call29 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %t) #7, !dbg !13180
  %tobool31 = icmp eq i8 %call29, 0, !dbg !13180
  %and33 = and i32 %call_flags.0, 8, !dbg !13182
  %tobool34 = icmp ne i32 %and33, 0, !dbg !13182
  %or.cond3 = or i1 %tobool31, %tobool34, !dbg !13183
  br i1 %or.cond3, label %if.end36, label %cleanup, !dbg !13183

if.end36:                                         ; preds = %if.end28
  %call37 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %t) #7, !dbg !13184
  %cmp38 = icmp eq i32 %call37, 7, !dbg !13186
  br i1 %cmp38, label %land.lhs.true40, label %if.end48, !dbg !13187

land.lhs.true40:                                  ; preds = %if.end36
  %call41 = tail call fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %t) #7, !dbg !13188
  %tobool43 = icmp eq i8 %call41, 0, !dbg !13188
  br i1 %tobool43, label %lor.lhs.false, label %cleanup, !dbg !13189

lor.lhs.false:                                    ; preds = %land.lhs.true40
  %call44 = tail call fastcc zeroext i8 @gimple_asm_input_p(%union.gimple_statement_d* %t) #7, !dbg !13190
  %tobool46 = icmp eq i8 %call44, 0, !dbg !13190
  br i1 %tobool46, label %if.end48, label %cleanup, !dbg !13191

if.end48:                                         ; preds = %lor.lhs.false, %if.end36
  br label %cleanup, !dbg !13192

cleanup:                                          ; preds = %lor.lhs.false, %land.lhs.true40, %if.end28, %land.lhs.true13, %land.lhs.true21, %if.end48
  %retval.0 = phi i8 [ 0, %if.end48 ], [ 0, %land.lhs.true21 ], [ 0, %land.lhs.true13 ], [ 1, %if.end28 ], [ 1, %lor.lhs.false ], [ 1, %land.lhs.true40 ], !dbg !13161
  ret i8 %retval.0, !dbg !13193
}

declare dso_local void @gsi_insert_on_edge(%struct.edge_def*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_nop() local_unnamed_addr #2

declare dso_local void @gsi_commit_edge_inserts() local_unnamed_addr #2

declare dso_local %struct.edge_def* @split_block(%struct.basic_block_def*, i8*) local_unnamed_addr #2

declare dso_local void @verify_flow_info() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !13194 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !13196, metadata !DIExpression()), !dbg !13197
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !13198
  %bf.load = load i32, i32* %0, align 8, !dbg !13198
  %and = lshr i32 %bf.load, 17, !dbg !13199
  %1 = trunc i32 %and to i8, !dbg !13199
  %2 = and i8 %1, 1, !dbg !13199
  ret i8 %2, !dbg !13200
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_asm_input_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !13201 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !13203, metadata !DIExpression()), !dbg !13204
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !13205
  %bf.load = load i32, i32* %0, align 8, !dbg !13205
  %and = lshr i32 %bf.load, 16, !dbg !13206
  %1 = trunc i32 %and to i8, !dbg !13206
  %2 = and i8 %1, 1, !dbg !13206
  ret i8 %2, !dbg !13207
}

declare dso_local void @reserve_phi_args_for_new_edge(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @remove_phi_args(%struct.edge_def*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_cond_from_tree(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_no_warning_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !13208 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !13210, metadata !DIExpression()), !dbg !13211
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !13212
  %bf.load = load i32, i32* %0, align 8, !dbg !13212
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !13212
  %1 = trunc i32 %bf.lshr to i8, !dbg !13213
  %conv = and i8 %1, 1, !dbg !13213
  ret i8 %conv, !dbg !13214
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_warn_unused_result(%struct.gimple_seq_d* %seq) unnamed_addr #5 !dbg !13215 {
entry:
  %i = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !13217, metadata !DIExpression()), !dbg !13229
  %0 = bitcast %struct.gimple_stmt_iterator* %i to i8*, !dbg !13230
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !13230
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !13231
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !13231
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %seq) #7, !dbg !13231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !13231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !13231
  br label %for.cond, !dbg !13232

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !13220, metadata !DIExpression(DW_OP_deref)), !dbg !13229
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !13233
  %tobool = icmp eq i8 %call, 0, !dbg !13234
  br i1 %tobool, label %for.body, label %for.end, !dbg !13235

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !13220, metadata !DIExpression(DW_OP_deref)), !dbg !13229
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !13236
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !13221, metadata !DIExpression()), !dbg !13237
  %call2 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !13238
  switch i32 %call2, label %for.inc [
    i32 10, label %sw.bb
    i32 17, label %sw.bb4
    i32 11, label %sw.bb7
    i32 12, label %sw.bb9
    i32 8, label %sw.bb11
  ], !dbg !13239

sw.bb:                                            ; preds = %for.body
  %call3 = call fastcc %struct.gimple_seq_d* @gimple_bind_body(%union.gimple_statement_d* %call1) #7, !dbg !13240
  call fastcc void @do_warn_unused_result(%struct.gimple_seq_d* %call3) #7, !dbg !13241
  br label %for.inc, !dbg !13242

sw.bb4:                                           ; preds = %for.body
  %call5 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %call1) #7, !dbg !13243
  call fastcc void @do_warn_unused_result(%struct.gimple_seq_d* %call5) #7, !dbg !13244
  %call6 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %call1) #7, !dbg !13245
  call fastcc void @do_warn_unused_result(%struct.gimple_seq_d* %call6) #7, !dbg !13246
  br label %for.inc, !dbg !13247

sw.bb7:                                           ; preds = %for.body
  %call8 = call fastcc %struct.gimple_seq_d* @gimple_catch_handler(%union.gimple_statement_d* %call1) #7, !dbg !13248
  call fastcc void @do_warn_unused_result(%struct.gimple_seq_d* %call8) #7, !dbg !13249
  br label %for.inc, !dbg !13250

sw.bb9:                                           ; preds = %for.body
  %call10 = call fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* %call1) #7, !dbg !13251
  call fastcc void @do_warn_unused_result(%struct.gimple_seq_d* %call10) #7, !dbg !13252
  br label %for.inc, !dbg !13253

sw.bb11:                                          ; preds = %for.body
  %call12 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call1) #7, !dbg !13254
  %tobool13 = icmp eq %union.tree_node* %call12, null, !dbg !13254
  br i1 %tobool13, label %if.end, label %for.inc, !dbg !13256

if.end:                                           ; preds = %sw.bb11
  %call14 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call1) #7, !dbg !13257
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !13218, metadata !DIExpression()), !dbg !13229
  %call15 = call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %call1) #7, !dbg !13258
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13258
  %2 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !13258
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !13258
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !13258
  %4 = bitcast %union.tree_node** %type17 to %struct.tree_type**, !dbg !13258
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !13258
  %attributes = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 4, !dbg !13259
  %6 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !13259
  %call19 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.182, i64 0, i64 0), %union.tree_node* %6) #6, !dbg !13260
  %tobool20 = icmp eq %union.tree_node* %call19, null, !dbg !13260
  br i1 %tobool20, label %for.inc, label %if.then21, !dbg !13261

if.then21:                                        ; preds = %if.end
  %call22 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %call1) #7, !dbg !13262
  call void @llvm.dbg.value(metadata i32 %call22, metadata !13225, metadata !DIExpression()), !dbg !13263
  %tobool23 = icmp eq %union.tree_node* %call14, null, !dbg !13264
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !13266

if.then24:                                        ; preds = %if.then21
  %call25 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %call22, i32 227, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.183, i64 0, i64 0), %union.tree_node* nonnull %call14) #6, !dbg !13267
  br label %for.inc, !dbg !13267

if.else:                                          ; preds = %if.then21
  %call26 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %call22, i32 227, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.184, i64 0, i64 0)) #6, !dbg !13268
  br label %for.inc

for.inc:                                          ; preds = %if.end, %sw.bb11, %sw.bb, %sw.bb4, %sw.bb7, %sw.bb9, %if.then24, %if.else, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !13220, metadata !DIExpression(DW_OP_deref)), !dbg !13229
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %i) #7, !dbg !13269
  br label %for.cond, !dbg !13270, !llvm.loop !13271

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !13273
  ret void, !dbg !13273
}

declare dso_local %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2514, !2515, !2516}
!llvm.ident = !{!2517}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_build_cfg", scope: !2, file: !3, line: 248, type: !2465, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !690, globals: !2270, nameTableKind: None)
!3 = !DIFile(filename: "tree-cfg.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !13, !141, !336, !345, !349, !367, !374, !381, !387, !392, !397, !404, !580, !612, !651, !677, !684}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !6, line: 30, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !14, line: 7, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140}
!16 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!23 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!24 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!25 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!26 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!27 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!28 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!29 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!30 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!31 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!32 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!33 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!34 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!35 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!36 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!37 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!38 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!39 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!40 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!41 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!42 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!43 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!44 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!45 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!47 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!48 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!50 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!51 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!52 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!53 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!54 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!55 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!56 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!57 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!58 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!59 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!60 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!61 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!62 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!63 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!64 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!65 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!66 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!67 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!68 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!69 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!70 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!71 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!72 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!73 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!74 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!75 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!76 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!77 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!78 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!79 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!80 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!86 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!87 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!88 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!89 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!90 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!91 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!92 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!93 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!94 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!95 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!96 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!97 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!98 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!99 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!100 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!101 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!102 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!103 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!104 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!108 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!109 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!110 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!113 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!114 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!115 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!116 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!117 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!118 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!119 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!120 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!121 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!122 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!123 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!124 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!125 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!126 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!127 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!128 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!129 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!130 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!139 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!140 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !142, line: 39, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335}
!144 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!173 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!174 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!175 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!176 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!177 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!178 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!179 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!180 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!181 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!182 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!183 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!184 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!185 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!186 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!187 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!188 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!189 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!190 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!191 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!192 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!193 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!194 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!195 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!196 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!197 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!198 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!199 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!200 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!201 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!202 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!203 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!204 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!205 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!206 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!207 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!208 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!209 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!210 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!211 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!212 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!213 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!214 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!215 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!216 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!217 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!218 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!219 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!220 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!221 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!222 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!223 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!224 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!225 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!226 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!227 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!228 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!229 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!230 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!231 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!232 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!233 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!235 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!236 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!237 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!238 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!239 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!240 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!241 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!242 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!243 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!244 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!245 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!246 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!247 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!248 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!249 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!250 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!251 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!252 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!253 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!254 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!255 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!256 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!257 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!259 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!260 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!261 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!262 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!263 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!264 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!265 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!266 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!267 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!268 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!269 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!270 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!271 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!272 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!273 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!274 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!275 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!276 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!277 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!278 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!279 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!280 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!281 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!282 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!283 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!284 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!285 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!286 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!287 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!288 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!289 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!290 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!291 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!292 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!293 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!294 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!295 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!296 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!306 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!307 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!308 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!309 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!310 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!311 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!312 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!313 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!328 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!329 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!330 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!331 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!332 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!333 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!334 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!335 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !337, line: 31, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!338 = !{!339, !340, !341, !342, !343, !344}
!339 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!342 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!343 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!344 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !337, line: 91, baseType: !7, size: 32, elements: !346)
!346 = !{!347, !348}
!347 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!348 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !142, line: 280, baseType: !7, size: 32, elements: !350)
!350 = !{!351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366}
!351 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !142, line: 1817, baseType: !7, size: 32, elements: !368)
!368 = !{!369, !370, !371, !372, !373}
!369 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !142, line: 1805, baseType: !7, size: 32, elements: !375)
!375 = !{!376, !377, !378, !379, !380}
!376 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!381 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !382, line: 363, baseType: !7, size: 32, elements: !383)
!382 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!383 = !{!384, !385, !386}
!384 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!385 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!386 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !382, line: 355, baseType: !7, size: 32, elements: !388)
!388 = !{!389, !390, !391}
!389 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!390 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!391 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !393, line: 474, baseType: !7, size: 32, elements: !394)
!393 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!394 = !{!395, !396}
!395 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!396 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !398, line: 104, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402, !403}
!400 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!404 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 74, baseType: !7, size: 32, elements: !406)
!405 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!406 = !{!407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579}
!407 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!579 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "br_predictor", file: !581, line: 24, baseType: !7, size: 32, elements: !582)
!581 = !DIFile(filename: "./predict.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!582 = !{!583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611}
!583 = !DIEnumerator(name: "PRED_COMBINED", value: 0, isUnsigned: true)
!584 = !DIEnumerator(name: "PRED_DS_THEORY", value: 1, isUnsigned: true)
!585 = !DIEnumerator(name: "PRED_FIRST_MATCH", value: 2, isUnsigned: true)
!586 = !DIEnumerator(name: "PRED_NO_PREDICTION", value: 3, isUnsigned: true)
!587 = !DIEnumerator(name: "PRED_UNCONDITIONAL", value: 4, isUnsigned: true)
!588 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS", value: 5, isUnsigned: true)
!589 = !DIEnumerator(name: "PRED_BUILTIN_EXPECT", value: 6, isUnsigned: true)
!590 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS_GUESSED", value: 7, isUnsigned: true)
!591 = !DIEnumerator(name: "PRED_CONTINUE", value: 8, isUnsigned: true)
!592 = !DIEnumerator(name: "PRED_NORETURN", value: 9, isUnsigned: true)
!593 = !DIEnumerator(name: "PRED_COLD_FUNCTION", value: 10, isUnsigned: true)
!594 = !DIEnumerator(name: "PRED_LOOP_BRANCH", value: 11, isUnsigned: true)
!595 = !DIEnumerator(name: "PRED_LOOP_EXIT", value: 12, isUnsigned: true)
!596 = !DIEnumerator(name: "PRED_POINTER", value: 13, isUnsigned: true)
!597 = !DIEnumerator(name: "PRED_TREE_POINTER", value: 14, isUnsigned: true)
!598 = !DIEnumerator(name: "PRED_OPCODE_POSITIVE", value: 15, isUnsigned: true)
!599 = !DIEnumerator(name: "PRED_OPCODE_NONEQUAL", value: 16, isUnsigned: true)
!600 = !DIEnumerator(name: "PRED_FPOPCODE", value: 17, isUnsigned: true)
!601 = !DIEnumerator(name: "PRED_TREE_OPCODE_POSITIVE", value: 18, isUnsigned: true)
!602 = !DIEnumerator(name: "PRED_TREE_OPCODE_NONEQUAL", value: 19, isUnsigned: true)
!603 = !DIEnumerator(name: "PRED_TREE_FPOPCODE", value: 20, isUnsigned: true)
!604 = !DIEnumerator(name: "PRED_CALL", value: 21, isUnsigned: true)
!605 = !DIEnumerator(name: "PRED_TREE_EARLY_RETURN", value: 22, isUnsigned: true)
!606 = !DIEnumerator(name: "PRED_GOTO", value: 23, isUnsigned: true)
!607 = !DIEnumerator(name: "PRED_CONST_RETURN", value: 24, isUnsigned: true)
!608 = !DIEnumerator(name: "PRED_NEGATIVE_RETURN", value: 25, isUnsigned: true)
!609 = !DIEnumerator(name: "PRED_NULL_RETURN", value: 26, isUnsigned: true)
!610 = !DIEnumerator(name: "PRED_MUDFLAP", value: 27, isUnsigned: true)
!611 = !DIEnumerator(name: "END_PREDICTORS", value: 28, isUnsigned: true)
!612 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !613, line: 51, baseType: !7, size: 32, elements: !614)
!613 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!614 = !{!615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650}
!615 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!617 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!618 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!619 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!620 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!621 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!622 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!623 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!624 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!625 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!626 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!627 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!628 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!629 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!630 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!631 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!632 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!633 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!634 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!635 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!636 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!637 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!638 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!639 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!640 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!641 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!642 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!643 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!644 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!645 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!646 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!647 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!648 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!649 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!650 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!651 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !613, line: 727, baseType: !7, size: 32, elements: !652)
!652 = !{!653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676}
!653 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!654 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!655 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!656 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!657 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!658 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!659 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!660 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!661 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!662 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!663 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!664 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!665 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!666 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!667 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!668 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!669 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!670 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!671 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!672 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!673 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!674 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!675 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!676 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !678, line: 119, baseType: !7, size: 32, elements: !679)
!678 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!679 = !{!680, !681, !682, !683}
!680 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!681 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!682 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!683 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !613, line: 80, baseType: !7, size: 32, elements: !685)
!685 = !{!686, !687, !688, !689}
!686 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!687 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!688 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!689 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!690 = !{!691, !692, !693, !694, !697, !698, !7, !700, !704, !141, !758, !831, !2187, !2188, !2189, !695, !1173, !1728, !706, !2190, !1673, !2192, !2198, !1597, !2199, !1062, !1585, !2200, !2203, !1029, !2204, !2206, !1270, !684, !2218, !2230, !2237, !2242, !1670, !1587, !2247, !2256, !1511, !1308, !1018, !1028, !2267, !992, !2268}
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!693 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "label_record", file: !3, line: 1049, size: 128, elements: !702)
!702 = !{!703, !2186}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !701, file: !3, line: 1052, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !705, line: 56, baseType: !706)
!705 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !142, line: 3371, size: 1792, elements: !708)
!708 = !{!709, !742, !748, !761, !780, !791, !796, !805, !811, !824, !836, !874, !1418, !1446, !1463, !1464, !1469, !1478, !1484, !1489, !1493, !1497, !1837, !1884, !1890, !1896, !1903, !1916, !1930, !1947, !1959, !1981, !1996, !2168}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !707, file: !142, line: 3372, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !142, line: 360, size: 64, elements: !711)
!711 = !{!712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !710, file: !142, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !710, file: !142, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !710, file: !142, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !710, file: !142, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !710, file: !142, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !710, file: !142, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !710, file: !142, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !710, file: !142, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !710, file: !142, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !710, file: !142, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !710, file: !142, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !710, file: !142, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !710, file: !142, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !710, file: !142, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !710, file: !142, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !710, file: !142, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !710, file: !142, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !710, file: !142, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !710, file: !142, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !710, file: !142, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !710, file: !142, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !710, file: !142, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !710, file: !142, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !710, file: !142, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !710, file: !142, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !710, file: !142, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !710, file: !142, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !710, file: !142, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !710, file: !142, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !710, file: !142, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !707, file: !142, line: 3373, baseType: !743, size: 192)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !142, line: 402, size: 192, elements: !744)
!744 = !{!745, !746, !747}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !743, file: !142, line: 403, baseType: !710, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !743, file: !142, line: 404, baseType: !704, size: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !743, file: !142, line: 405, baseType: !704, size: 64, offset: 128)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !707, file: !142, line: 3374, baseType: !749, size: 320)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !142, line: 1384, size: 320, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !749, file: !142, line: 1385, baseType: !743, size: 192)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !749, file: !142, line: 1386, baseType: !753, size: 128, offset: 192)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !754, line: 58, baseType: !755)
!754 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !754, line: 54, size: 128, elements: !756)
!756 = !{!757, !759}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !755, file: !754, line: 56, baseType: !758, size: 64)
!758 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !755, file: !754, line: 57, baseType: !760, size: 64, offset: 64)
!760 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !707, file: !142, line: 3375, baseType: !762, size: 256)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !142, line: 1397, size: 256, elements: !763)
!763 = !{!764, !765}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !762, file: !142, line: 1398, baseType: !743, size: 192)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !762, file: !142, line: 1399, baseType: !766, size: 64, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !768, line: 52, size: 256, elements: !769)
!768 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!769 = !{!770, !771, !772, !773, !774, !775, !776}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !767, file: !768, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !767, file: !768, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !767, file: !768, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !767, file: !768, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !767, file: !768, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !767, file: !768, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !767, file: !768, line: 62, baseType: !777, size: 192, offset: 64)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 192, elements: !778)
!778 = !{!779}
!779 = !DISubrange(count: 3)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !707, file: !142, line: 3376, baseType: !781, size: 256)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !142, line: 1408, size: 256, elements: !782)
!782 = !{!783, !784}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !781, file: !142, line: 1409, baseType: !743, size: 192)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !781, file: !142, line: 1410, baseType: !785, size: 64, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !787, line: 27, size: 192, elements: !788)
!787 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!788 = !{!789, !790}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !786, file: !787, line: 29, baseType: !753, size: 128)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !786, file: !787, line: 30, baseType: !13, size: 32, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !707, file: !142, line: 3377, baseType: !792, size: 256)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !142, line: 1437, size: 256, elements: !793)
!793 = !{!794, !795}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !792, file: !142, line: 1438, baseType: !743, size: 192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !792, file: !142, line: 1439, baseType: !704, size: 64, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !707, file: !142, line: 3378, baseType: !797, size: 256)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !142, line: 1418, size: 256, elements: !798)
!798 = !{!799, !800, !801}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !797, file: !142, line: 1419, baseType: !743, size: 192)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !797, file: !142, line: 1420, baseType: !693, size: 32, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !797, file: !142, line: 1421, baseType: !802, size: 8, offset: 224)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 8, elements: !803)
!803 = !{!804}
!804 = !DISubrange(count: 1)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !707, file: !142, line: 3379, baseType: !806, size: 320)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !142, line: 1428, size: 320, elements: !807)
!807 = !{!808, !809, !810}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !806, file: !142, line: 1429, baseType: !743, size: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !806, file: !142, line: 1430, baseType: !704, size: 64, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !806, file: !142, line: 1431, baseType: !704, size: 64, offset: 256)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !707, file: !142, line: 3380, baseType: !812, size: 320)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !142, line: 1460, size: 320, elements: !813)
!813 = !{!814, !815}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !812, file: !142, line: 1461, baseType: !743, size: 192)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !812, file: !142, line: 1462, baseType: !816, size: 128, offset: 192)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !817, line: 31, size: 128, elements: !818)
!817 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!818 = !{!819, !822, !823}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !816, file: !817, line: 32, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !816, file: !817, line: 33, baseType: !7, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !816, file: !817, line: 34, baseType: !7, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !707, file: !142, line: 3381, baseType: !825, size: 384)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !142, line: 2507, size: 384, elements: !826)
!826 = !{!827, !828, !833, !834, !835}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !825, file: !142, line: 2508, baseType: !743, size: 192)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !825, file: !142, line: 2509, baseType: !829, size: 32, offset: 192)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !830, line: 58, baseType: !831)
!830 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !832, line: 44, baseType: !7)
!832 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!833 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !825, file: !142, line: 2510, baseType: !7, size: 32, offset: 224)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !825, file: !142, line: 2511, baseType: !704, size: 64, offset: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !825, file: !142, line: 2512, baseType: !704, size: 64, offset: 320)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !707, file: !142, line: 3382, baseType: !837, size: 896)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !142, line: 2652, size: 896, elements: !838)
!838 = !{!839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !837, file: !142, line: 2653, baseType: !825, size: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !837, file: !142, line: 2654, baseType: !704, size: 64, offset: 384)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !837, file: !142, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !837, file: !142, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !837, file: !142, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !837, file: !142, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !837, file: !142, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !837, file: !142, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !837, file: !142, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !837, file: !142, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !837, file: !142, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !837, file: !142, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !837, file: !142, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !837, file: !142, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !837, file: !142, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !837, file: !142, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !837, file: !142, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !837, file: !142, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !837, file: !142, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !837, file: !142, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !837, file: !142, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !837, file: !142, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !837, file: !142, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !837, file: !142, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !837, file: !142, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !837, file: !142, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !837, file: !142, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !837, file: !142, line: 2703, baseType: !7, size: 32, offset: 512)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !837, file: !142, line: 2705, baseType: !704, size: 64, offset: 576)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !837, file: !142, line: 2706, baseType: !704, size: 64, offset: 640)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !837, file: !142, line: 2707, baseType: !704, size: 64, offset: 704)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !837, file: !142, line: 2708, baseType: !704, size: 64, offset: 768)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !837, file: !142, line: 2711, baseType: !872, size: 64, offset: 832)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !142, line: 2711, flags: DIFlagFwdDecl)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !707, file: !142, line: 3383, baseType: !875, size: 960)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !142, line: 2756, size: 960, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !875, file: !142, line: 2757, baseType: !837, size: 896)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !875, file: !142, line: 2758, baseType: !879, size: 64, offset: 896)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !705, line: 50, baseType: !880)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !882, line: 240, size: 384, elements: !883)
!882 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !881, file: !882, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !881, file: !882, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !881, file: !882, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !881, file: !882, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !881, file: !882, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !881, file: !882, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !881, file: !882, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !881, file: !882, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !881, file: !882, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !881, file: !882, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !881, file: !882, line: 321, baseType: !895, size: 320, offset: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !882, line: 315, size: 320, elements: !896)
!896 = !{!897, !1351, !1353, !1416, !1417}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !895, file: !882, line: 316, baseType: !898, size: 64)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 64, elements: !803)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !882, line: 183, baseType: !900)
!900 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !882, line: 166, size: 64, elements: !901)
!901 = !{!902, !903, !904, !905, !906, !914, !915, !927, !930, !990, !991, !1328, !1341, !1348}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !900, file: !882, line: 168, baseType: !693, size: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !900, file: !882, line: 169, baseType: !7, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !900, file: !882, line: 170, baseType: !698, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !900, file: !882, line: 171, baseType: !879, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !900, file: !882, line: 172, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !705, line: 53, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !882, line: 359, size: 128, elements: !910)
!910 = !{!911, !912}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !909, file: !882, line: 360, baseType: !693, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !909, file: !882, line: 361, baseType: !913, size: 64, offset: 64)
!913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !879, size: 64, elements: !803)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !900, file: !882, line: 173, baseType: !13, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !900, file: !882, line: 174, baseType: !916, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !882, line: 133, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !882, line: 115, size: 32, elements: !918)
!918 = !{!919, !920, !921, !922, !923, !924, !925, !926}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !917, file: !882, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !917, file: !882, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !917, file: !882, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !917, file: !882, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !917, file: !882, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !917, file: !882, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !917, file: !882, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !917, file: !882, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !900, file: !882, line: 175, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !882, line: 175, flags: DIFlagFwdDecl)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !900, file: !882, line: 176, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !933, line: 75, size: 256, elements: !934)
!933 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!934 = !{!935, !949, !950, !951}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !932, file: !933, line: 76, baseType: !936, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !933, line: 68, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !933, line: 63, size: 320, elements: !939)
!939 = !{!940, !942, !943, !944}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !938, file: !933, line: 64, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !938, file: !933, line: 65, baseType: !941, size: 64, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !938, file: !933, line: 66, baseType: !7, size: 32, offset: 128)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !938, file: !933, line: 67, baseType: !945, size: 128, offset: 192)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !946, size: 128, elements: !947)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !933, line: 29, baseType: !758)
!947 = !{!948}
!948 = !DISubrange(count: 2)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !932, file: !933, line: 77, baseType: !936, size: 64, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !932, file: !933, line: 78, baseType: !7, size: 32, offset: 128)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !932, file: !933, line: 79, baseType: !952, size: 64, offset: 192)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !933, line: 49, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !933, line: 45, size: 832, elements: !955)
!955 = !{!956, !957, !958}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !954, file: !933, line: 46, baseType: !941, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !954, file: !933, line: 47, baseType: !931, size: 64, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !954, file: !933, line: 48, baseType: !959, size: 704, offset: 128)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !960, line: 164, size: 704, elements: !961)
!960 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!961 = !{!962, !963, !973, !974, !975, !976, !977, !978, !982, !986, !987, !988, !989}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !959, file: !960, line: 166, baseType: !760, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !959, file: !960, line: 167, baseType: !964, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !960, line: 157, size: 192, elements: !966)
!966 = !{!967, !968, !969}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !965, file: !960, line: 159, baseType: !695, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !965, file: !960, line: 160, baseType: !964, size: 64, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !965, file: !960, line: 161, baseType: !970, size: 32, offset: 128)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 32, elements: !971)
!971 = !{!972}
!972 = !DISubrange(count: 4)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !959, file: !960, line: 168, baseType: !695, size: 64, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !959, file: !960, line: 169, baseType: !695, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !959, file: !960, line: 170, baseType: !695, size: 64, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !959, file: !960, line: 171, baseType: !760, size: 64, offset: 320)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !959, file: !960, line: 172, baseType: !693, size: 32, offset: 384)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !959, file: !960, line: 176, baseType: !979, size: 64, offset: 448)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!964, !697, !760}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !959, file: !960, line: 177, baseType: !983, size: 64, offset: 512)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{null, !697, !964}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !959, file: !960, line: 178, baseType: !697, size: 64, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !959, file: !960, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !959, file: !960, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !959, file: !960, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !900, file: !882, line: 177, baseType: !704, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !900, file: !882, line: 178, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !382, line: 217, size: 832, elements: !994)
!994 = !{!995, !1240, !1241, !1242, !1298, !1302, !1303, !1304, !1322, !1323, !1324, !1325, !1326, !1327}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !993, file: !382, line: 219, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !382, line: 151, baseType: !998)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !382, line: 151, size: 128, elements: !999)
!999 = !{!1000}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !998, file: !382, line: 151, baseType: !1001, size: 128)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !382, line: 150, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !382, line: 150, size: 128, elements: !1003)
!1003 = !{!1004, !1005, !1006}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1002, file: !382, line: 150, baseType: !7, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1002, file: !382, line: 150, baseType: !7, size: 32, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1002, file: !382, line: 150, baseType: !1007, size: 64, offset: 64)
!1007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 64, elements: !803)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !705, line: 108, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !382, line: 122, size: 512, elements: !1011)
!1011 = !{!1012, !1013, !1014, !1232, !1233, !1234, !1235, !1236, !1237, !1238}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1010, file: !382, line: 124, baseType: !992, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1010, file: !382, line: 125, baseType: !992, size: 64, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1010, file: !382, line: 131, baseType: !1015, size: 64, offset: 128)
!1015 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !382, line: 128, size: 64, elements: !1016)
!1016 = !{!1017, !1231}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1015, file: !382, line: 129, baseType: !1018, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !705, line: 66, baseType: !1019)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !613, line: 143, size: 192, elements: !1021)
!1021 = !{!1022, !1229, !1230}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1020, file: !613, line: 145, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !705, line: 69, baseType: !1024)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !613, line: 136, size: 192, elements: !1026)
!1026 = !{!1027, !1227, !1228}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1025, file: !613, line: 137, baseType: !1028, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !705, line: 58, baseType: !1029)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !613, line: 737, size: 768, elements: !1031)
!1031 = !{!1032, !1049, !1082, !1088, !1093, !1098, !1105, !1111, !1117, !1122, !1136, !1141, !1147, !1152, !1162, !1167, !1185, !1192, !1199, !1205, !1210, !1216, !1222}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1030, file: !613, line: 738, baseType: !1033, size: 256)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !613, line: 271, size: 256, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1033, file: !613, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1033, file: !613, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1033, file: !613, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1033, file: !613, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1033, file: !613, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1033, file: !613, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1033, file: !613, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1033, file: !613, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1033, file: !613, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1033, file: !613, line: 312, baseType: !7, size: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1033, file: !613, line: 316, baseType: !829, size: 32, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1033, file: !613, line: 319, baseType: !7, size: 32, offset: 96)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1033, file: !613, line: 323, baseType: !992, size: 64, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1033, file: !613, line: 327, baseType: !704, size: 64, offset: 192)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1030, file: !613, line: 739, baseType: !1050, size: 448)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !613, line: 350, size: 448, elements: !1051)
!1051 = !{!1052, !1080}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1050, file: !613, line: 353, baseType: !1053, size: 384)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !613, line: 333, size: 384, elements: !1054)
!1054 = !{!1055, !1056, !1063}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1053, file: !613, line: 336, baseType: !1033, size: 256)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1053, file: !613, line: 343, baseType: !1057, size: 64, offset: 256)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !678, line: 37, size: 128, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1058, file: !678, line: 39, baseType: !1057, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1058, file: !678, line: 40, baseType: !1062, size: 64, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1053, file: !613, line: 344, baseType: !1064, size: 64, offset: 320)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !678, line: 45, size: 320, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1065, file: !678, line: 47, baseType: !1064, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1065, file: !678, line: 48, baseType: !1069, size: 256, offset: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !142, line: 1883, size: 256, elements: !1070)
!1070 = !{!1071, !1073, !1074, !1079}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1069, file: !142, line: 1884, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1069, file: !142, line: 1885, baseType: !1072, size: 64, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1069, file: !142, line: 1891, baseType: !1075, size: 64, offset: 128)
!1075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1069, file: !142, line: 1891, size: 64, elements: !1076)
!1076 = !{!1077, !1078}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1075, file: !142, line: 1891, baseType: !1028, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1075, file: !142, line: 1891, baseType: !704, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1069, file: !142, line: 1892, baseType: !1062, size: 64, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1050, file: !613, line: 359, baseType: !1081, size: 64, offset: 384)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !704, size: 64, elements: !803)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1030, file: !613, line: 740, baseType: !1083, size: 512)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !613, line: 365, size: 512, elements: !1084)
!1084 = !{!1085, !1086, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1083, file: !613, line: 368, baseType: !1053, size: 384)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1083, file: !613, line: 373, baseType: !704, size: 64, offset: 384)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1083, file: !613, line: 374, baseType: !704, size: 64, offset: 448)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1030, file: !613, line: 741, baseType: !1089, size: 576)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !613, line: 380, size: 576, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1089, file: !613, line: 383, baseType: !1083, size: 512)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1089, file: !613, line: 389, baseType: !1081, size: 64, offset: 512)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1030, file: !613, line: 742, baseType: !1094, size: 320)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !613, line: 395, size: 320, elements: !1095)
!1095 = !{!1096, !1097}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1094, file: !613, line: 397, baseType: !1033, size: 256)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1094, file: !613, line: 400, baseType: !1018, size: 64, offset: 256)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1030, file: !613, line: 743, baseType: !1099, size: 448)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !613, line: 406, size: 448, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1099, file: !613, line: 408, baseType: !1033, size: 256)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1099, file: !613, line: 412, baseType: !704, size: 64, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1099, file: !613, line: 420, baseType: !704, size: 64, offset: 320)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1099, file: !613, line: 423, baseType: !1018, size: 64, offset: 384)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1030, file: !613, line: 744, baseType: !1106, size: 384)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !613, line: 429, size: 384, elements: !1107)
!1107 = !{!1108, !1109, !1110}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1106, file: !613, line: 431, baseType: !1033, size: 256)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1106, file: !613, line: 434, baseType: !704, size: 64, offset: 256)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1106, file: !613, line: 437, baseType: !1018, size: 64, offset: 320)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1030, file: !613, line: 745, baseType: !1112, size: 384)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !613, line: 443, size: 384, elements: !1113)
!1113 = !{!1114, !1115, !1116}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1112, file: !613, line: 445, baseType: !1033, size: 256)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1112, file: !613, line: 449, baseType: !704, size: 64, offset: 256)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1112, file: !613, line: 453, baseType: !1018, size: 64, offset: 320)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1030, file: !613, line: 746, baseType: !1118, size: 320)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !613, line: 459, size: 320, elements: !1119)
!1119 = !{!1120, !1121}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1118, file: !613, line: 461, baseType: !1033, size: 256)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1118, file: !613, line: 464, baseType: !704, size: 64, offset: 256)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1030, file: !613, line: 747, baseType: !1123, size: 768)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !613, line: 469, size: 768, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128, !1129}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1123, file: !613, line: 471, baseType: !1033, size: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1123, file: !613, line: 474, baseType: !7, size: 32, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1123, file: !613, line: 475, baseType: !7, size: 32, offset: 288)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1123, file: !613, line: 478, baseType: !704, size: 64, offset: 320)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1123, file: !613, line: 481, baseType: !1130, size: 384, offset: 384)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1131, size: 384, elements: !803)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !142, line: 1917, size: 384, elements: !1132)
!1132 = !{!1133, !1134, !1135}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1131, file: !142, line: 1920, baseType: !1069, size: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1131, file: !142, line: 1921, baseType: !704, size: 64, offset: 256)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1131, file: !142, line: 1922, baseType: !829, size: 32, offset: 320)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1030, file: !613, line: 748, baseType: !1137, size: 320)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !613, line: 487, size: 320, elements: !1138)
!1138 = !{!1139, !1140}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1137, file: !613, line: 490, baseType: !1033, size: 256)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1137, file: !613, line: 494, baseType: !693, size: 32, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1030, file: !613, line: 749, baseType: !1142, size: 384)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !613, line: 500, size: 384, elements: !1143)
!1143 = !{!1144, !1145, !1146}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1142, file: !613, line: 502, baseType: !1033, size: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1142, file: !613, line: 506, baseType: !1018, size: 64, offset: 256)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1142, file: !613, line: 510, baseType: !1018, size: 64, offset: 320)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1030, file: !613, line: 750, baseType: !1148, size: 320)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !613, line: 529, size: 320, elements: !1149)
!1149 = !{!1150, !1151}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1148, file: !613, line: 531, baseType: !1033, size: 256)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1148, file: !613, line: 540, baseType: !1018, size: 64, offset: 256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1030, file: !613, line: 751, baseType: !1153, size: 704)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !613, line: 546, size: 704, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1153, file: !613, line: 549, baseType: !1083, size: 512)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1153, file: !613, line: 553, baseType: !698, size: 64, offset: 512)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1153, file: !613, line: 557, baseType: !692, size: 8, offset: 576)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1153, file: !613, line: 558, baseType: !692, size: 8, offset: 584)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1153, file: !613, line: 559, baseType: !692, size: 8, offset: 592)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1153, file: !613, line: 560, baseType: !692, size: 8, offset: 600)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1153, file: !613, line: 566, baseType: !1081, size: 64, offset: 640)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1030, file: !613, line: 752, baseType: !1163, size: 384)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !613, line: 571, size: 384, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1163, file: !613, line: 573, baseType: !1094, size: 320)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1163, file: !613, line: 577, baseType: !704, size: 64, offset: 320)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1030, file: !613, line: 753, baseType: !1168, size: 576)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !613, line: 600, size: 576, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1175, !1184}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1168, file: !613, line: 602, baseType: !1094, size: 320)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1168, file: !613, line: 605, baseType: !704, size: 64, offset: 320)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1168, file: !613, line: 609, baseType: !1173, size: 64, offset: 384)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1174, line: 46, baseType: !758)
!1174 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1168, file: !613, line: 612, baseType: !1176, size: 64, offset: 448)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !613, line: 581, size: 320, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1177, file: !613, line: 583, baseType: !141, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1177, file: !613, line: 586, baseType: !704, size: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1177, file: !613, line: 589, baseType: !704, size: 64, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1177, file: !613, line: 592, baseType: !704, size: 64, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1177, file: !613, line: 595, baseType: !704, size: 64, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1168, file: !613, line: 616, baseType: !1018, size: 64, offset: 512)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1030, file: !613, line: 754, baseType: !1186, size: 512)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !613, line: 622, size: 512, elements: !1187)
!1187 = !{!1188, !1189, !1190, !1191}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1186, file: !613, line: 624, baseType: !1094, size: 320)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1186, file: !613, line: 628, baseType: !704, size: 64, offset: 320)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1186, file: !613, line: 632, baseType: !704, size: 64, offset: 384)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1186, file: !613, line: 636, baseType: !704, size: 64, offset: 448)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1030, file: !613, line: 755, baseType: !1193, size: 704)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !613, line: 642, size: 704, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1193, file: !613, line: 644, baseType: !1186, size: 512)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1193, file: !613, line: 648, baseType: !704, size: 64, offset: 512)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1193, file: !613, line: 652, baseType: !704, size: 64, offset: 576)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1193, file: !613, line: 653, baseType: !704, size: 64, offset: 640)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1030, file: !613, line: 756, baseType: !1200, size: 448)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !613, line: 663, size: 448, elements: !1201)
!1201 = !{!1202, !1203, !1204}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1200, file: !613, line: 665, baseType: !1094, size: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1200, file: !613, line: 668, baseType: !704, size: 64, offset: 320)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1200, file: !613, line: 673, baseType: !704, size: 64, offset: 384)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1030, file: !613, line: 757, baseType: !1206, size: 384)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !613, line: 694, size: 384, elements: !1207)
!1207 = !{!1208, !1209}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1206, file: !613, line: 696, baseType: !1094, size: 320)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1206, file: !613, line: 699, baseType: !704, size: 64, offset: 320)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1030, file: !613, line: 758, baseType: !1211, size: 384)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !613, line: 681, size: 384, elements: !1212)
!1212 = !{!1213, !1214, !1215}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1211, file: !613, line: 683, baseType: !1033, size: 256)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1211, file: !613, line: 686, baseType: !704, size: 64, offset: 256)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1211, file: !613, line: 689, baseType: !704, size: 64, offset: 320)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1030, file: !613, line: 759, baseType: !1217, size: 384)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !613, line: 707, size: 384, elements: !1218)
!1218 = !{!1219, !1220, !1221}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1217, file: !613, line: 709, baseType: !1033, size: 256)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1217, file: !613, line: 712, baseType: !704, size: 64, offset: 256)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1217, file: !613, line: 712, baseType: !704, size: 64, offset: 320)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1030, file: !613, line: 760, baseType: !1223, size: 320)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !613, line: 718, size: 320, elements: !1224)
!1224 = !{!1225, !1226}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1223, file: !613, line: 720, baseType: !1033, size: 256)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1223, file: !613, line: 723, baseType: !704, size: 64, offset: 256)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1025, file: !613, line: 138, baseType: !1024, size: 64, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1025, file: !613, line: 139, baseType: !1024, size: 64, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1020, file: !613, line: 146, baseType: !1023, size: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1020, file: !613, line: 152, baseType: !1018, size: 64, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1015, file: !382, line: 130, baseType: !879, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1010, file: !382, line: 134, baseType: !697, size: 64, offset: 192)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1010, file: !382, line: 137, baseType: !704, size: 64, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1010, file: !382, line: 138, baseType: !829, size: 32, offset: 320)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1010, file: !382, line: 142, baseType: !7, size: 32, offset: 352)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1010, file: !382, line: 144, baseType: !693, size: 32, offset: 384)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1010, file: !382, line: 145, baseType: !693, size: 32, offset: 416)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1010, file: !382, line: 146, baseType: !1239, size: 64, offset: 448)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !382, line: 119, baseType: !760)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !993, file: !382, line: 220, baseType: !996, size: 64, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !993, file: !382, line: 223, baseType: !697, size: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !993, file: !382, line: 226, baseType: !1243, size: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !337, line: 100, size: 1216, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1255, !1256, !1257, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1288, !1296, !1297}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1244, file: !337, line: 102, baseType: !693, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1244, file: !337, line: 105, baseType: !7, size: 32, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1244, file: !337, line: 108, baseType: !992, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1244, file: !337, line: 111, baseType: !992, size: 64, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1244, file: !337, line: 114, baseType: !1251, size: 64, offset: 192)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !337, line: 41, size: 64, elements: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1251, file: !337, line: 42, baseType: !336, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1251, file: !337, line: 43, baseType: !7, size: 32, offset: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1244, file: !337, line: 117, baseType: !7, size: 32, offset: 256)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1244, file: !337, line: 120, baseType: !7, size: 32, offset: 288)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1244, file: !337, line: 123, baseType: !1258, size: 64, offset: 320)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !337, line: 87, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !337, line: 87, size: 128, elements: !1261)
!1261 = !{!1262}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1260, file: !337, line: 87, baseType: !1263, size: 128)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !337, line: 85, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !337, line: 85, size: 128, elements: !1265)
!1265 = !{!1266, !1267, !1268}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1264, file: !337, line: 85, baseType: !7, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1264, file: !337, line: 85, baseType: !7, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1264, file: !337, line: 85, baseType: !1269, size: 64, offset: 64)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1270, size: 64, elements: !803)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !337, line: 84, baseType: !1243)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1244, file: !337, line: 126, baseType: !1243, size: 64, offset: 384)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1244, file: !337, line: 129, baseType: !1243, size: 64, offset: 448)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1244, file: !337, line: 132, baseType: !697, size: 64, offset: 512)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1244, file: !337, line: 139, baseType: !704, size: 64, offset: 576)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1244, file: !337, line: 143, baseType: !753, size: 128, offset: 640)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1244, file: !337, line: 146, baseType: !753, size: 128, offset: 768)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1244, file: !337, line: 148, baseType: !692, size: 8, offset: 896)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1244, file: !337, line: 149, baseType: !692, size: 8, offset: 904)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1244, file: !337, line: 153, baseType: !345, size: 32, offset: 928)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1244, file: !337, line: 156, baseType: !1281, size: 64, offset: 960)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !337, line: 48, size: 320, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1282, file: !337, line: 50, baseType: !1028, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1282, file: !337, line: 59, baseType: !753, size: 128, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1282, file: !337, line: 64, baseType: !692, size: 8, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1282, file: !337, line: 67, baseType: !1281, size: 64, offset: 256)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1244, file: !337, line: 159, baseType: !1289, size: 64, offset: 1024)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !337, line: 72, size: 256, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1290, file: !337, line: 74, baseType: !1009, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1290, file: !337, line: 77, baseType: !1289, size: 64, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1290, file: !337, line: 78, baseType: !1289, size: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1290, file: !337, line: 81, baseType: !1289, size: 64, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1244, file: !337, line: 162, baseType: !692, size: 8, offset: 1088)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1244, file: !337, line: 166, baseType: !704, size: 64, offset: 1152)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !993, file: !382, line: 229, baseType: !1299, size: 128, offset: 256)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 128, elements: !947)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !382, line: 229, flags: DIFlagFwdDecl)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !993, file: !382, line: 232, baseType: !992, size: 64, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !993, file: !382, line: 233, baseType: !992, size: 64, offset: 448)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !993, file: !382, line: 238, baseType: !1305, size: 64, offset: 512)
!1305 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !382, line: 235, size: 64, elements: !1306)
!1306 = !{!1307, !1313}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1305, file: !382, line: 236, baseType: !1308, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !382, line: 273, size: 128, elements: !1310)
!1310 = !{!1311, !1312}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1309, file: !382, line: 275, baseType: !1018, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1309, file: !382, line: 278, baseType: !1018, size: 64, offset: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1305, file: !382, line: 237, baseType: !1314, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !382, line: 259, size: 320, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1315, file: !382, line: 261, baseType: !879, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1315, file: !382, line: 262, baseType: !879, size: 64, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1315, file: !382, line: 266, baseType: !879, size: 64, offset: 128)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1315, file: !382, line: 267, baseType: !879, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1315, file: !382, line: 270, baseType: !693, size: 32, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !993, file: !382, line: 241, baseType: !1239, size: 64, offset: 576)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !993, file: !382, line: 244, baseType: !693, size: 32, offset: 640)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !993, file: !382, line: 247, baseType: !693, size: 32, offset: 672)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !993, file: !382, line: 250, baseType: !693, size: 32, offset: 704)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !993, file: !382, line: 253, baseType: !693, size: 32, offset: 736)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !993, file: !382, line: 256, baseType: !693, size: 32, offset: 768)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !900, file: !882, line: 179, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !882, line: 150, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !882, line: 142, size: 320, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1339, !1340}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1331, file: !882, line: 144, baseType: !704, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1331, file: !882, line: 145, baseType: !879, size: 64, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1331, file: !882, line: 146, baseType: !879, size: 64, offset: 128)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1331, file: !882, line: 147, baseType: !1337, size: 32, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1338, line: 31, baseType: !693)
!1338 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1331, file: !882, line: 148, baseType: !7, size: 32, offset: 224)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1331, file: !882, line: 149, baseType: !692, size: 8, offset: 256)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !900, file: !882, line: 180, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !882, line: 162, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !882, line: 159, size: 128, elements: !1345)
!1345 = !{!1346, !1347}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1344, file: !882, line: 160, baseType: !704, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1344, file: !882, line: 161, baseType: !760, size: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !900, file: !882, line: 181, baseType: !1349, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !882, line: 181, flags: DIFlagFwdDecl)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !895, file: !882, line: 317, baseType: !1352, size: 64)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 64, elements: !803)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !895, file: !882, line: 318, baseType: !1354, size: 320)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !882, line: 188, size: 320, elements: !1355)
!1355 = !{!1356, !1358, !1415}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1354, file: !882, line: 190, baseType: !1357, size: 192)
!1357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 192, elements: !778)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1354, file: !882, line: 193, baseType: !1359, size: 64, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !882, line: 206, size: 320, elements: !1361)
!1361 = !{!1362, !1400, !1401, !1402, !1414}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1360, file: !882, line: 208, baseType: !1363, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !705, line: 62, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1366, line: 538, size: 256, elements: !1367)
!1366 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1367 = !{!1368, !1372, !1378, !1391}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1365, file: !1366, line: 539, baseType: !1369, size: 32)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1366, line: 482, size: 32, elements: !1370)
!1370 = !{!1371}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1369, file: !1366, line: 484, baseType: !7, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1365, file: !1366, line: 540, baseType: !1373, size: 192)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1366, line: 488, size: 192, elements: !1374)
!1374 = !{!1375, !1376, !1377}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1373, file: !1366, line: 489, baseType: !1369, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1373, file: !1366, line: 492, baseType: !698, size: 64, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1373, file: !1366, line: 496, baseType: !704, size: 64, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1365, file: !1366, line: 541, baseType: !1379, size: 256)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1366, line: 504, size: 256, elements: !1380)
!1380 = !{!1381, !1382, !1389, !1390}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1379, file: !1366, line: 505, baseType: !1369, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1379, file: !1366, line: 509, baseType: !1383, size: 64, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1366, line: 501, baseType: !1384)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{null, !1387}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1379, file: !1366, line: 510, baseType: !1387, size: 64, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1379, file: !1366, line: 513, baseType: !1363, size: 64, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1365, file: !1366, line: 542, baseType: !1392, size: 128)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1366, line: 530, size: 128, elements: !1393)
!1393 = !{!1394, !1395}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1392, file: !1366, line: 531, baseType: !1369, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1392, file: !1366, line: 534, baseType: !1396, size: 64, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1366, line: 525, baseType: !1397)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!692, !704, !698, !758, !758}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1360, file: !882, line: 211, baseType: !7, size: 32, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1360, file: !882, line: 214, baseType: !760, size: 64, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1360, file: !882, line: 224, baseType: !1403, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !882, line: 202, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !882, line: 202, size: 128, elements: !1406)
!1406 = !{!1407}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1405, file: !882, line: 202, baseType: !1408, size: 128)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !882, line: 200, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !882, line: 200, size: 128, elements: !1410)
!1410 = !{!1411, !1412, !1413}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1409, file: !882, line: 200, baseType: !7, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1409, file: !882, line: 200, baseType: !7, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1409, file: !882, line: 200, baseType: !913, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1360, file: !882, line: 234, baseType: !1403, size: 64, offset: 256)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1354, file: !882, line: 197, baseType: !760, size: 64, offset: 256)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !895, file: !882, line: 319, baseType: !767, size: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !895, file: !882, line: 320, baseType: !786, size: 192)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !707, file: !142, line: 3384, baseType: !1419, size: 1472)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !142, line: 3114, size: 1472, elements: !1420)
!1420 = !{!1421, !1442, !1443, !1444, !1445}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1419, file: !142, line: 3115, baseType: !1422, size: 1216)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !142, line: 2984, size: 1216, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1422, file: !142, line: 2985, baseType: !875, size: 960)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1422, file: !142, line: 2986, baseType: !704, size: 64, offset: 960)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1422, file: !142, line: 2987, baseType: !704, size: 64, offset: 1024)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1422, file: !142, line: 2988, baseType: !704, size: 64, offset: 1088)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1422, file: !142, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1422, file: !142, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1422, file: !142, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1422, file: !142, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1422, file: !142, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1422, file: !142, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1422, file: !142, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1422, file: !142, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1422, file: !142, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1422, file: !142, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1422, file: !142, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1422, file: !142, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1422, file: !142, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1422, file: !142, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1419, file: !142, line: 3117, baseType: !704, size: 64, offset: 1216)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1419, file: !142, line: 3119, baseType: !704, size: 64, offset: 1280)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1419, file: !142, line: 3121, baseType: !704, size: 64, offset: 1344)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1419, file: !142, line: 3123, baseType: !704, size: 64, offset: 1408)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !707, file: !142, line: 3385, baseType: !1447, size: 1088)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !142, line: 2874, size: 1088, elements: !1448)
!1448 = !{!1449, !1450, !1451}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1447, file: !142, line: 2875, baseType: !875, size: 960)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1447, file: !142, line: 2876, baseType: !879, size: 64, offset: 960)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1447, file: !142, line: 2877, baseType: !1452, size: 64, offset: 1024)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1454, line: 172, size: 128, elements: !1455)
!1454 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1461, !1462}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1453, file: !1454, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1453, file: !1454, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1453, file: !1454, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1453, file: !1454, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1453, file: !1454, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1453, file: !1454, line: 195, baseType: !7, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1453, file: !1454, line: 199, baseType: !704, size: 64, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !707, file: !142, line: 3386, baseType: !1422, size: 1216)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !707, file: !142, line: 3387, baseType: !1465, size: 1280)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !142, line: 3093, size: 1280, elements: !1466)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1465, file: !142, line: 3094, baseType: !1422, size: 1216)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1465, file: !142, line: 3095, baseType: !1452, size: 64, offset: 1216)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !707, file: !142, line: 3388, baseType: !1470, size: 1216)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !142, line: 2824, size: 1216, elements: !1471)
!1471 = !{!1472, !1473, !1474, !1475, !1476, !1477}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1470, file: !142, line: 2825, baseType: !837, size: 896)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1470, file: !142, line: 2827, baseType: !704, size: 64, offset: 896)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1470, file: !142, line: 2828, baseType: !704, size: 64, offset: 960)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1470, file: !142, line: 2829, baseType: !704, size: 64, offset: 1024)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1470, file: !142, line: 2830, baseType: !704, size: 64, offset: 1088)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1470, file: !142, line: 2831, baseType: !704, size: 64, offset: 1152)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !707, file: !142, line: 3389, baseType: !1479, size: 1024)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !142, line: 2850, size: 1024, elements: !1480)
!1480 = !{!1481, !1482, !1483}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1479, file: !142, line: 2851, baseType: !875, size: 960)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1479, file: !142, line: 2852, baseType: !693, size: 32, offset: 960)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1479, file: !142, line: 2853, baseType: !693, size: 32, offset: 992)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !707, file: !142, line: 3390, baseType: !1485, size: 1024)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !142, line: 2857, size: 1024, elements: !1486)
!1486 = !{!1487, !1488}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1485, file: !142, line: 2858, baseType: !875, size: 960)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1485, file: !142, line: 2859, baseType: !1452, size: 64, offset: 960)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !707, file: !142, line: 3391, baseType: !1490, size: 960)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !142, line: 2862, size: 960, elements: !1491)
!1491 = !{!1492}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1490, file: !142, line: 2863, baseType: !875, size: 960)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !707, file: !142, line: 3392, baseType: !1494, size: 1472)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !142, line: 3304, size: 1472, elements: !1495)
!1495 = !{!1496}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1494, file: !142, line: 3305, baseType: !1419, size: 1472)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !707, file: !142, line: 3393, baseType: !1498, size: 1792)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !142, line: 3248, size: 1792, elements: !1499)
!1499 = !{!1500, !1501, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1498, file: !142, line: 3249, baseType: !1419, size: 1472)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1498, file: !142, line: 3251, baseType: !1502, size: 64, offset: 1472)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1504, line: 463, size: 1152, elements: !1505)
!1504 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1505 = !{!1506, !1665, !1696, !1697, !1752, !1760, !1761, !1762, !1763, !1764, !1765, !1789, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1503, file: !1504, line: 464, baseType: !1507, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !6, line: 194, size: 384, elements: !1509)
!1509 = !{!1510, !1559, !1572, !1586, !1634, !1646}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1508, file: !6, line: 197, baseType: !1511, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !6, line: 182, baseType: !1512)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !6, line: 116, size: 704, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1547, !1556, !1557, !1558}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1513, file: !6, line: 119, baseType: !1512, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1513, file: !6, line: 122, baseType: !1512, size: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1513, file: !6, line: 123, baseType: !1512, size: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1513, file: !6, line: 126, baseType: !693, size: 32, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1513, file: !6, line: 129, baseType: !5, size: 32, offset: 224)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1513, file: !6, line: 165, baseType: !1521, size: 192, offset: 256)
!1521 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !6, line: 132, size: 192, elements: !1522)
!1522 = !{!1523, !1536, !1542}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1521, file: !6, line: 137, baseType: !1524, size: 128)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !6, line: 133, size: 128, elements: !1525)
!1525 = !{!1526, !1535}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1524, file: !6, line: 135, baseType: !1527, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !6, line: 93, size: 320, elements: !1529)
!1529 = !{!1530, !1531, !1532, !1533, !1534}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1528, file: !6, line: 96, baseType: !1527, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1528, file: !6, line: 97, baseType: !1527, size: 64, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1528, file: !6, line: 101, baseType: !704, size: 64, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1528, file: !6, line: 106, baseType: !704, size: 64, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1528, file: !6, line: 111, baseType: !704, size: 64, offset: 256)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1524, file: !6, line: 136, baseType: !1527, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1521, file: !6, line: 151, baseType: !1537, size: 192)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !6, line: 139, size: 192, elements: !1538)
!1538 = !{!1539, !1540, !1541}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1537, file: !6, line: 141, baseType: !704, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1537, file: !6, line: 145, baseType: !704, size: 64, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1537, file: !6, line: 150, baseType: !693, size: 32, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1521, file: !6, line: 164, baseType: !1543, size: 128)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !6, line: 153, size: 128, elements: !1544)
!1544 = !{!1545, !1546}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1543, file: !6, line: 161, baseType: !704, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1543, file: !6, line: 163, baseType: !829, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1513, file: !6, line: 168, baseType: !1548, size: 64, offset: 448)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !6, line: 67, size: 320, elements: !1550)
!1550 = !{!1551, !1552, !1553, !1554, !1555}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1549, file: !6, line: 70, baseType: !1548, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1549, file: !6, line: 73, baseType: !1512, size: 64, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1549, file: !6, line: 78, baseType: !704, size: 64, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1549, file: !6, line: 85, baseType: !879, size: 64, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1549, file: !6, line: 88, baseType: !693, size: 32, offset: 256)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1513, file: !6, line: 173, baseType: !879, size: 64, offset: 512)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1513, file: !6, line: 173, baseType: !879, size: 64, offset: 576)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1513, file: !6, line: 177, baseType: !692, size: 8, offset: 640)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1508, file: !6, line: 200, baseType: !1560, size: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !6, line: 185, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !6, line: 185, size: 128, elements: !1563)
!1563 = !{!1564}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1562, file: !6, line: 185, baseType: !1565, size: 128)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !6, line: 184, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !6, line: 184, size: 128, elements: !1567)
!1567 = !{!1568, !1569, !1570}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1566, file: !6, line: 184, baseType: !7, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1566, file: !6, line: 184, baseType: !7, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1566, file: !6, line: 184, baseType: !1571, size: 64, offset: 64)
!1571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1511, size: 64, elements: !803)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1508, file: !6, line: 203, baseType: !1573, size: 64, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !6, line: 189, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !6, line: 189, size: 128, elements: !1576)
!1576 = !{!1577}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1575, file: !6, line: 189, baseType: !1578, size: 128)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !6, line: 188, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !6, line: 188, size: 128, elements: !1580)
!1580 = !{!1581, !1582, !1583}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1579, file: !6, line: 188, baseType: !7, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1579, file: !6, line: 188, baseType: !7, size: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1579, file: !6, line: 188, baseType: !1584, size: 64, offset: 64)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, size: 64, elements: !803)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !6, line: 180, baseType: !1548)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1508, file: !6, line: 207, baseType: !1587, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1588, line: 144, baseType: !1589)
!1588 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1588, line: 100, size: 896, elements: !1591)
!1591 = !{!1592, !1598, !1603, !1608, !1610, !1611, !1612, !1613, !1614, !1615, !1620, !1622, !1623, !1628, !1633}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1590, file: !1588, line: 102, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1588, line: 52, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!1597, !1387}
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1588, line: 47, baseType: !7)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1590, file: !1588, line: 105, baseType: !1599, size: 64, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1588, line: 59, baseType: !1600)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!693, !1387, !1387}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1590, file: !1588, line: 108, baseType: !1604, size: 64, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1588, line: 63, baseType: !1605)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{null, !697}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1590, file: !1588, line: 111, baseType: !1609, size: 64, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1590, file: !1588, line: 114, baseType: !1173, size: 64, offset: 256)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1590, file: !1588, line: 117, baseType: !1173, size: 64, offset: 320)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1590, file: !1588, line: 120, baseType: !1173, size: 64, offset: 384)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1590, file: !1588, line: 124, baseType: !7, size: 32, offset: 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1590, file: !1588, line: 128, baseType: !7, size: 32, offset: 480)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1590, file: !1588, line: 131, baseType: !1616, size: 64, offset: 512)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1588, line: 75, baseType: !1617)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!697, !1173, !1173}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1590, file: !1588, line: 132, baseType: !1621, size: 64, offset: 576)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1588, line: 78, baseType: !1605)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1590, file: !1588, line: 135, baseType: !697, size: 64, offset: 640)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1590, file: !1588, line: 136, baseType: !1624, size: 64, offset: 704)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1588, line: 82, baseType: !1625)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!697, !697, !1173, !1173}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1590, file: !1588, line: 137, baseType: !1629, size: 64, offset: 768)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1588, line: 83, baseType: !1630)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{null, !697, !697}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1590, file: !1588, line: 141, baseType: !7, size: 32, offset: 832)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1508, file: !6, line: 211, baseType: !1635, size: 64, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !142, line: 183, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !142, line: 183, size: 128, elements: !1638)
!1638 = !{!1639}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1637, file: !142, line: 183, baseType: !1640, size: 128)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !142, line: 182, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !142, line: 182, size: 128, elements: !1642)
!1642 = !{!1643, !1644, !1645}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1641, file: !142, line: 182, baseType: !7, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1641, file: !142, line: 182, baseType: !7, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1641, file: !142, line: 182, baseType: !1081, size: 64, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1508, file: !6, line: 220, baseType: !1647, size: 64, offset: 320)
!1647 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !6, line: 217, size: 64, elements: !1648)
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1647, file: !6, line: 218, baseType: !1635, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1647, file: !6, line: 219, baseType: !1651, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1653, line: 29, baseType: !1654)
!1653 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1653, line: 29, size: 96, elements: !1655)
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1654, file: !1653, line: 29, baseType: !1657, size: 96)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1653, line: 27, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1653, line: 27, size: 96, elements: !1659)
!1659 = !{!1660, !1661, !1662}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1658, file: !1653, line: 27, baseType: !7, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1658, file: !1653, line: 27, baseType: !7, size: 32, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1658, file: !1653, line: 27, baseType: !1663, size: 8, offset: 64)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1664, size: 8, elements: !803)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1653, line: 26, baseType: !692)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1503, file: !1504, line: 467, baseType: !1666, size: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !382, line: 374, size: 640, elements: !1668)
!1668 = !{!1669, !1671, !1672, !1685, !1686, !1687, !1688, !1689, !1690, !1692, !1694, !1695}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1667, file: !382, line: 377, baseType: !1670, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !705, line: 111, baseType: !992)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1667, file: !382, line: 378, baseType: !1670, size: 64, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1667, file: !382, line: 381, baseType: !1673, size: 64, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !382, line: 282, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !382, line: 282, size: 128, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1675, file: !382, line: 282, baseType: !1678, size: 128)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !382, line: 281, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !382, line: 281, size: 128, elements: !1680)
!1680 = !{!1681, !1682, !1683}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1679, file: !382, line: 281, baseType: !7, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1679, file: !382, line: 281, baseType: !7, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1679, file: !382, line: 281, baseType: !1684, size: 64, offset: 64)
!1684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1670, size: 64, elements: !803)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1667, file: !382, line: 384, baseType: !693, size: 32, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1667, file: !382, line: 387, baseType: !693, size: 32, offset: 224)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1667, file: !382, line: 390, baseType: !693, size: 32, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1667, file: !382, line: 394, baseType: !1673, size: 64, offset: 320)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1667, file: !382, line: 396, baseType: !381, size: 32, offset: 384)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1667, file: !382, line: 399, baseType: !1691, size: 64, offset: 416)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !387, size: 64, elements: !947)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1667, file: !382, line: 402, baseType: !1693, size: 64, offset: 480)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !947)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1667, file: !382, line: 406, baseType: !693, size: 32, offset: 544)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1667, file: !382, line: 409, baseType: !693, size: 32, offset: 576)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1503, file: !1504, line: 470, baseType: !1019, size: 64, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1503, file: !1504, line: 473, baseType: !1698, size: 64, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1454, line: 39, size: 1152, elements: !1700)
!1700 = !{!1701, !1702, !1715, !1716, !1717, !1729, !1730, !1734, !1735, !1736, !1737, !1738}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1699, file: !1454, line: 41, baseType: !1587, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1699, file: !1454, line: 48, baseType: !1703, size: 64, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !613, line: 35, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !613, line: 35, size: 128, elements: !1706)
!1706 = !{!1707}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1705, file: !613, line: 35, baseType: !1708, size: 128)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !613, line: 33, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !613, line: 33, size: 128, elements: !1710)
!1710 = !{!1711, !1712, !1713}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1709, file: !613, line: 33, baseType: !7, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1709, file: !613, line: 33, baseType: !7, size: 32, offset: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1709, file: !613, line: 33, baseType: !1714, size: 64, offset: 64)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 64, elements: !803)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1699, file: !1454, line: 51, baseType: !1635, size: 64, offset: 128)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1699, file: !1454, line: 54, baseType: !704, size: 64, offset: 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1699, file: !1454, line: 57, baseType: !1718, size: 128, offset: 256)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1719, line: 31, size: 128, elements: !1720)
!1719 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726, !1727}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1718, file: !1719, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1718, file: !1719, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1718, file: !1719, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1718, file: !1719, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1718, file: !1719, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1718, file: !1719, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1718, file: !1719, line: 56, baseType: !1728, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !705, line: 47, baseType: !931)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1699, file: !1454, line: 60, baseType: !1718, size: 128, offset: 384)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1699, file: !1454, line: 64, baseType: !1731, size: 64, offset: 512)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1733, line: 33, flags: DIFlagFwdDecl)
!1733 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1699, file: !1454, line: 67, baseType: !704, size: 64, offset: 576)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1699, file: !1454, line: 73, baseType: !1587, size: 64, offset: 640)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1699, file: !1454, line: 77, baseType: !1728, size: 64, offset: 704)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1699, file: !1454, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1699, file: !1454, line: 82, baseType: !1739, size: 320, offset: 832)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !678, line: 62, size: 320, elements: !1740)
!1740 = !{!1741, !1747, !1748, !1749, !1750, !1751}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1739, file: !678, line: 63, baseType: !1742, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !678, line: 56, size: 128, elements: !1744)
!1744 = !{!1745, !1746}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1743, file: !678, line: 57, baseType: !1742, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1743, file: !678, line: 58, baseType: !802, size: 8, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1739, file: !678, line: 64, baseType: !7, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1739, file: !678, line: 66, baseType: !7, size: 32, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1739, file: !678, line: 68, baseType: !692, size: 8, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1739, file: !678, line: 70, baseType: !1057, size: 64, offset: 192)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1739, file: !678, line: 71, baseType: !1064, size: 64, offset: 256)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1503, file: !1504, line: 476, baseType: !1753, size: 64, offset: 256)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !337, line: 187, size: 256, elements: !1755)
!1755 = !{!1756, !1757, !1758, !1759}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1754, file: !337, line: 189, baseType: !693, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1754, file: !337, line: 192, baseType: !1258, size: 64, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1754, file: !337, line: 197, baseType: !1587, size: 64, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1754, file: !337, line: 200, baseType: !1243, size: 64, offset: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1503, file: !1504, line: 479, baseType: !1587, size: 64, offset: 320)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1503, file: !1504, line: 484, baseType: !704, size: 64, offset: 384)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1503, file: !1504, line: 488, baseType: !704, size: 64, offset: 448)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1503, file: !1504, line: 493, baseType: !704, size: 64, offset: 512)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1503, file: !1504, line: 496, baseType: !704, size: 64, offset: 576)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1503, file: !1504, line: 501, baseType: !1766, size: 64, offset: 640)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !393, line: 2355, size: 576, elements: !1768)
!1768 = !{!1769, !1772, !1773, !1774, !1775, !1777, !1778, !1783, !1784, !1785, !1786, !1787, !1788}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1767, file: !393, line: 2356, baseType: !1770, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !393, line: 2356, flags: DIFlagFwdDecl)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1767, file: !393, line: 2357, baseType: !698, size: 64, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1767, file: !393, line: 2358, baseType: !693, size: 32, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1767, file: !393, line: 2359, baseType: !693, size: 32, offset: 160)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1767, file: !393, line: 2360, baseType: !1776, size: 128, offset: 192)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 128, elements: !971)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1767, file: !393, line: 2364, baseType: !693, size: 32, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1767, file: !393, line: 2367, baseType: !1779, size: 128, offset: 384)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !393, line: 2349, size: 128, elements: !1780)
!1780 = !{!1781, !1782}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1779, file: !393, line: 2351, baseType: !879, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1779, file: !393, line: 2352, baseType: !760, size: 64, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1767, file: !393, line: 2371, baseType: !392, size: 32, offset: 512)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1767, file: !393, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1767, file: !393, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1767, file: !393, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1767, file: !393, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1767, file: !393, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1503, file: !1504, line: 504, baseType: !1790, size: 64, offset: 704)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1504, line: 504, flags: DIFlagFwdDecl)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1503, file: !1504, line: 507, baseType: !1587, size: 64, offset: 768)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1503, file: !1504, line: 510, baseType: !693, size: 32, offset: 832)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1503, file: !1504, line: 513, baseType: !693, size: 32, offset: 864)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1503, file: !1504, line: 516, baseType: !829, size: 32, offset: 896)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1503, file: !1504, line: 519, baseType: !829, size: 32, offset: 928)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1503, file: !1504, line: 522, baseType: !7, size: 32, offset: 960)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1503, file: !1504, line: 523, baseType: !7, size: 32, offset: 992)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1503, file: !1504, line: 528, baseType: !698, size: 64, offset: 1024)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1503, file: !1504, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1503, file: !1504, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1503, file: !1504, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1503, file: !1504, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1503, file: !1504, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1503, file: !1504, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1503, file: !1504, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1503, file: !1504, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1503, file: !1504, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1503, file: !1504, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1503, file: !1504, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1503, file: !1504, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1503, file: !1504, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1503, file: !1504, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1503, file: !1504, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1503, file: !1504, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1498, file: !142, line: 3254, baseType: !704, size: 64, offset: 1536)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1498, file: !142, line: 3257, baseType: !704, size: 64, offset: 1600)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1498, file: !142, line: 3258, baseType: !704, size: 64, offset: 1664)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1498, file: !142, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1498, file: !142, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1498, file: !142, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1498, file: !142, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1498, file: !142, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1498, file: !142, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1498, file: !142, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1498, file: !142, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1498, file: !142, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1498, file: !142, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1498, file: !142, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1498, file: !142, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1498, file: !142, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1498, file: !142, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1498, file: !142, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1498, file: !142, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1498, file: !142, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1498, file: !142, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !707, file: !142, line: 3394, baseType: !1838, size: 1344)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !142, line: 2279, size: 1344, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1838, file: !142, line: 2280, baseType: !743, size: 192)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1838, file: !142, line: 2281, baseType: !704, size: 64, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1838, file: !142, line: 2282, baseType: !704, size: 64, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1838, file: !142, line: 2283, baseType: !704, size: 64, offset: 320)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1838, file: !142, line: 2284, baseType: !704, size: 64, offset: 384)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1838, file: !142, line: 2285, baseType: !7, size: 32, offset: 448)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1838, file: !142, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1838, file: !142, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1838, file: !142, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1838, file: !142, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1838, file: !142, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1838, file: !142, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1838, file: !142, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1838, file: !142, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1838, file: !142, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1838, file: !142, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1838, file: !142, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1838, file: !142, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1838, file: !142, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1838, file: !142, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1838, file: !142, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1838, file: !142, line: 2305, baseType: !7, size: 32, offset: 512)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1838, file: !142, line: 2306, baseType: !1337, size: 32, offset: 544)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1838, file: !142, line: 2307, baseType: !704, size: 64, offset: 576)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1838, file: !142, line: 2308, baseType: !704, size: 64, offset: 640)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1838, file: !142, line: 2314, baseType: !1866, size: 64, offset: 704)
!1866 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !142, line: 2309, size: 64, elements: !1867)
!1867 = !{!1868, !1869, !1870}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1866, file: !142, line: 2310, baseType: !693, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1866, file: !142, line: 2311, baseType: !698, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1866, file: !142, line: 2312, baseType: !1871, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !142, line: 2277, flags: DIFlagFwdDecl)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1838, file: !142, line: 2315, baseType: !704, size: 64, offset: 768)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1838, file: !142, line: 2316, baseType: !704, size: 64, offset: 832)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1838, file: !142, line: 2317, baseType: !704, size: 64, offset: 896)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1838, file: !142, line: 2318, baseType: !704, size: 64, offset: 960)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1838, file: !142, line: 2319, baseType: !704, size: 64, offset: 1024)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1838, file: !142, line: 2320, baseType: !704, size: 64, offset: 1088)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1838, file: !142, line: 2321, baseType: !704, size: 64, offset: 1152)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1838, file: !142, line: 2322, baseType: !704, size: 64, offset: 1216)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1838, file: !142, line: 2324, baseType: !1882, size: 64, offset: 1280)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !142, line: 2324, flags: DIFlagFwdDecl)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !707, file: !142, line: 3395, baseType: !1885, size: 320)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !142, line: 1469, size: 320, elements: !1886)
!1886 = !{!1887, !1888, !1889}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1885, file: !142, line: 1470, baseType: !743, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1885, file: !142, line: 1471, baseType: !704, size: 64, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1885, file: !142, line: 1472, baseType: !704, size: 64, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !707, file: !142, line: 3396, baseType: !1891, size: 320)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !142, line: 1482, size: 320, elements: !1892)
!1892 = !{!1893, !1894, !1895}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1891, file: !142, line: 1483, baseType: !743, size: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1891, file: !142, line: 1484, baseType: !693, size: 32, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1891, file: !142, line: 1485, baseType: !1081, size: 64, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !707, file: !142, line: 3397, baseType: !1897, size: 384)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !142, line: 1829, size: 384, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1897, file: !142, line: 1830, baseType: !743, size: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1897, file: !142, line: 1831, baseType: !829, size: 32, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1897, file: !142, line: 1832, baseType: !704, size: 64, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1897, file: !142, line: 1835, baseType: !1081, size: 64, offset: 320)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !707, file: !142, line: 3398, baseType: !1904, size: 704)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !142, line: 1898, size: 704, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909, !1910, !1915}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1904, file: !142, line: 1899, baseType: !743, size: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1904, file: !142, line: 1902, baseType: !704, size: 64, offset: 192)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1904, file: !142, line: 1905, baseType: !1028, size: 64, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1904, file: !142, line: 1908, baseType: !7, size: 32, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1904, file: !142, line: 1911, baseType: !1911, size: 64, offset: 384)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1454, line: 117, size: 128, elements: !1913)
!1913 = !{!1914}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1912, file: !1454, line: 120, baseType: !1718, size: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1904, file: !142, line: 1914, baseType: !1069, size: 256, offset: 448)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !707, file: !142, line: 3399, baseType: !1917, size: 704)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !142, line: 2008, size: 704, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1917, file: !142, line: 2009, baseType: !743, size: 192)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1917, file: !142, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1917, file: !142, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1917, file: !142, line: 2014, baseType: !829, size: 32, offset: 224)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1917, file: !142, line: 2016, baseType: !704, size: 64, offset: 256)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1917, file: !142, line: 2017, baseType: !1635, size: 64, offset: 320)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1917, file: !142, line: 2019, baseType: !704, size: 64, offset: 384)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1917, file: !142, line: 2020, baseType: !704, size: 64, offset: 448)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1917, file: !142, line: 2021, baseType: !704, size: 64, offset: 512)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1917, file: !142, line: 2022, baseType: !704, size: 64, offset: 576)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1917, file: !142, line: 2023, baseType: !704, size: 64, offset: 640)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !707, file: !142, line: 3400, baseType: !1931, size: 832)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !142, line: 2430, size: 832, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1931, file: !142, line: 2431, baseType: !743, size: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1931, file: !142, line: 2433, baseType: !704, size: 64, offset: 192)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1931, file: !142, line: 2434, baseType: !704, size: 64, offset: 256)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1931, file: !142, line: 2435, baseType: !704, size: 64, offset: 320)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1931, file: !142, line: 2436, baseType: !704, size: 64, offset: 384)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1931, file: !142, line: 2437, baseType: !1635, size: 64, offset: 448)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1931, file: !142, line: 2438, baseType: !704, size: 64, offset: 512)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1931, file: !142, line: 2440, baseType: !704, size: 64, offset: 576)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1931, file: !142, line: 2441, baseType: !704, size: 64, offset: 640)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1931, file: !142, line: 2443, baseType: !1943, size: 128, offset: 704)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !142, line: 182, baseType: !1944)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !142, line: 182, size: 128, elements: !1945)
!1945 = !{!1946}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1944, file: !142, line: 182, baseType: !1640, size: 128)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !707, file: !142, line: 3401, baseType: !1948, size: 320)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !142, line: 3327, size: 320, elements: !1949)
!1949 = !{!1950, !1951, !1958}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1948, file: !142, line: 3329, baseType: !743, size: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1948, file: !142, line: 3330, baseType: !1952, size: 64, offset: 192)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !142, line: 3320, size: 192, elements: !1954)
!1954 = !{!1955, !1956, !1957}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1953, file: !142, line: 3322, baseType: !1952, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1953, file: !142, line: 3323, baseType: !1952, size: 64, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1953, file: !142, line: 3324, baseType: !704, size: 64, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1948, file: !142, line: 3331, baseType: !1952, size: 64, offset: 256)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !707, file: !142, line: 3402, baseType: !1960, size: 256)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !142, line: 1540, size: 256, elements: !1961)
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1960, file: !142, line: 1541, baseType: !743, size: 192)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1960, file: !142, line: 1542, baseType: !1964, size: 64, offset: 192)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !142, line: 1538, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !142, line: 1538, size: 192, elements: !1967)
!1967 = !{!1968}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1966, file: !142, line: 1538, baseType: !1969, size: 192)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !142, line: 1537, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !142, line: 1537, size: 192, elements: !1971)
!1971 = !{!1972, !1973, !1974}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1970, file: !142, line: 1537, baseType: !7, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1970, file: !142, line: 1537, baseType: !7, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1970, file: !142, line: 1537, baseType: !1975, size: 128, offset: 64)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1976, size: 128, elements: !803)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !142, line: 1535, baseType: !1977)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !142, line: 1532, size: 128, elements: !1978)
!1978 = !{!1979, !1980}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1977, file: !142, line: 1533, baseType: !704, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1977, file: !142, line: 1534, baseType: !704, size: 64, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !707, file: !142, line: 3403, baseType: !1982, size: 512)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !142, line: 1938, size: 512, elements: !1983)
!1983 = !{!1984, !1985, !1986, !1987, !1993, !1994, !1995}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1982, file: !142, line: 1939, baseType: !743, size: 192)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1982, file: !142, line: 1940, baseType: !829, size: 32, offset: 192)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1982, file: !142, line: 1941, baseType: !349, size: 32, offset: 224)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1982, file: !142, line: 1946, baseType: !1988, size: 32, offset: 256)
!1988 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !142, line: 1942, size: 32, elements: !1989)
!1989 = !{!1990, !1991, !1992}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1988, file: !142, line: 1943, baseType: !367, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1988, file: !142, line: 1944, baseType: !374, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1988, file: !142, line: 1945, baseType: !141, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1982, file: !142, line: 1950, baseType: !1018, size: 64, offset: 320)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1982, file: !142, line: 1951, baseType: !1018, size: 64, offset: 384)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1982, file: !142, line: 1953, baseType: !1081, size: 64, offset: 448)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !707, file: !142, line: 3404, baseType: !1997, size: 1664)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !142, line: 3337, size: 1664, elements: !1998)
!1998 = !{!1999, !2000}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1997, file: !142, line: 3338, baseType: !743, size: 192)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1997, file: !142, line: 3341, baseType: !2001, size: 1472, offset: 192)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !2002, line: 410, size: 1472, elements: !2003)
!2002 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2003 = !{!2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2001, file: !2002, line: 412, baseType: !693, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2001, file: !2002, line: 413, baseType: !693, size: 32, offset: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2001, file: !2002, line: 414, baseType: !693, size: 32, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2001, file: !2002, line: 415, baseType: !693, size: 32, offset: 96)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2001, file: !2002, line: 416, baseType: !693, size: 32, offset: 128)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2001, file: !2002, line: 417, baseType: !693, size: 32, offset: 160)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2001, file: !2002, line: 418, baseType: !692, size: 8, offset: 192)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2001, file: !2002, line: 419, baseType: !692, size: 8, offset: 200)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2001, file: !2002, line: 420, baseType: !2013, size: 8, offset: 208)
!2013 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2001, file: !2002, line: 421, baseType: !2013, size: 8, offset: 216)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2001, file: !2002, line: 422, baseType: !2013, size: 8, offset: 224)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2001, file: !2002, line: 423, baseType: !2013, size: 8, offset: 232)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2001, file: !2002, line: 424, baseType: !2013, size: 8, offset: 240)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2001, file: !2002, line: 425, baseType: !2013, size: 8, offset: 248)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2001, file: !2002, line: 426, baseType: !2013, size: 8, offset: 256)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2001, file: !2002, line: 427, baseType: !2013, size: 8, offset: 264)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2001, file: !2002, line: 428, baseType: !2013, size: 8, offset: 272)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2001, file: !2002, line: 429, baseType: !2013, size: 8, offset: 280)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2001, file: !2002, line: 430, baseType: !2013, size: 8, offset: 288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2001, file: !2002, line: 431, baseType: !2013, size: 8, offset: 296)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2001, file: !2002, line: 432, baseType: !2013, size: 8, offset: 304)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2001, file: !2002, line: 433, baseType: !2013, size: 8, offset: 312)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2001, file: !2002, line: 434, baseType: !2013, size: 8, offset: 320)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2001, file: !2002, line: 435, baseType: !2013, size: 8, offset: 328)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2001, file: !2002, line: 436, baseType: !2013, size: 8, offset: 336)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2001, file: !2002, line: 437, baseType: !2013, size: 8, offset: 344)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2001, file: !2002, line: 438, baseType: !2013, size: 8, offset: 352)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2001, file: !2002, line: 439, baseType: !2013, size: 8, offset: 360)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2001, file: !2002, line: 440, baseType: !2013, size: 8, offset: 368)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2001, file: !2002, line: 441, baseType: !2013, size: 8, offset: 376)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2001, file: !2002, line: 442, baseType: !2013, size: 8, offset: 384)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2001, file: !2002, line: 443, baseType: !2013, size: 8, offset: 392)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2001, file: !2002, line: 444, baseType: !2013, size: 8, offset: 400)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2001, file: !2002, line: 445, baseType: !2013, size: 8, offset: 408)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2001, file: !2002, line: 446, baseType: !2013, size: 8, offset: 416)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2001, file: !2002, line: 447, baseType: !2013, size: 8, offset: 424)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2001, file: !2002, line: 448, baseType: !2013, size: 8, offset: 432)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2001, file: !2002, line: 449, baseType: !2013, size: 8, offset: 440)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2001, file: !2002, line: 450, baseType: !2013, size: 8, offset: 448)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2001, file: !2002, line: 451, baseType: !2013, size: 8, offset: 456)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2001, file: !2002, line: 452, baseType: !2013, size: 8, offset: 464)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2001, file: !2002, line: 453, baseType: !2013, size: 8, offset: 472)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2001, file: !2002, line: 454, baseType: !2013, size: 8, offset: 480)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2001, file: !2002, line: 455, baseType: !2013, size: 8, offset: 488)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2001, file: !2002, line: 456, baseType: !2013, size: 8, offset: 496)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2001, file: !2002, line: 457, baseType: !2013, size: 8, offset: 504)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2001, file: !2002, line: 458, baseType: !2013, size: 8, offset: 512)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2001, file: !2002, line: 459, baseType: !2013, size: 8, offset: 520)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2001, file: !2002, line: 460, baseType: !2013, size: 8, offset: 528)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2001, file: !2002, line: 461, baseType: !2013, size: 8, offset: 536)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2001, file: !2002, line: 462, baseType: !2013, size: 8, offset: 544)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2001, file: !2002, line: 463, baseType: !2013, size: 8, offset: 552)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2001, file: !2002, line: 464, baseType: !2013, size: 8, offset: 560)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2001, file: !2002, line: 465, baseType: !2013, size: 8, offset: 568)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2001, file: !2002, line: 466, baseType: !2013, size: 8, offset: 576)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2001, file: !2002, line: 467, baseType: !2013, size: 8, offset: 584)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2001, file: !2002, line: 468, baseType: !2013, size: 8, offset: 592)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2001, file: !2002, line: 469, baseType: !2013, size: 8, offset: 600)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2001, file: !2002, line: 470, baseType: !2013, size: 8, offset: 608)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2001, file: !2002, line: 471, baseType: !2013, size: 8, offset: 616)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2001, file: !2002, line: 472, baseType: !2013, size: 8, offset: 624)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2001, file: !2002, line: 473, baseType: !2013, size: 8, offset: 632)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2001, file: !2002, line: 474, baseType: !2013, size: 8, offset: 640)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2001, file: !2002, line: 475, baseType: !2013, size: 8, offset: 648)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2001, file: !2002, line: 476, baseType: !2013, size: 8, offset: 656)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2001, file: !2002, line: 477, baseType: !2013, size: 8, offset: 664)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2001, file: !2002, line: 478, baseType: !2013, size: 8, offset: 672)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2001, file: !2002, line: 479, baseType: !2013, size: 8, offset: 680)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2001, file: !2002, line: 480, baseType: !2013, size: 8, offset: 688)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2001, file: !2002, line: 481, baseType: !2013, size: 8, offset: 696)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2001, file: !2002, line: 482, baseType: !2013, size: 8, offset: 704)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2001, file: !2002, line: 483, baseType: !2013, size: 8, offset: 712)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2001, file: !2002, line: 484, baseType: !2013, size: 8, offset: 720)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2001, file: !2002, line: 485, baseType: !2013, size: 8, offset: 728)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2001, file: !2002, line: 486, baseType: !2013, size: 8, offset: 736)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2001, file: !2002, line: 487, baseType: !2013, size: 8, offset: 744)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2001, file: !2002, line: 488, baseType: !2013, size: 8, offset: 752)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2001, file: !2002, line: 489, baseType: !2013, size: 8, offset: 760)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2001, file: !2002, line: 490, baseType: !2013, size: 8, offset: 768)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2001, file: !2002, line: 491, baseType: !2013, size: 8, offset: 776)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2001, file: !2002, line: 492, baseType: !2013, size: 8, offset: 784)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2001, file: !2002, line: 493, baseType: !2013, size: 8, offset: 792)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2001, file: !2002, line: 494, baseType: !2013, size: 8, offset: 800)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2001, file: !2002, line: 495, baseType: !2013, size: 8, offset: 808)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2001, file: !2002, line: 496, baseType: !2013, size: 8, offset: 816)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2001, file: !2002, line: 497, baseType: !2013, size: 8, offset: 824)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2001, file: !2002, line: 498, baseType: !2013, size: 8, offset: 832)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2001, file: !2002, line: 499, baseType: !2013, size: 8, offset: 840)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2001, file: !2002, line: 500, baseType: !2013, size: 8, offset: 848)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2001, file: !2002, line: 501, baseType: !2013, size: 8, offset: 856)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2001, file: !2002, line: 502, baseType: !2013, size: 8, offset: 864)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2001, file: !2002, line: 503, baseType: !2013, size: 8, offset: 872)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2001, file: !2002, line: 504, baseType: !2013, size: 8, offset: 880)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2001, file: !2002, line: 505, baseType: !2013, size: 8, offset: 888)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2001, file: !2002, line: 506, baseType: !2013, size: 8, offset: 896)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2001, file: !2002, line: 507, baseType: !2013, size: 8, offset: 904)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2001, file: !2002, line: 508, baseType: !2013, size: 8, offset: 912)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2001, file: !2002, line: 509, baseType: !2013, size: 8, offset: 920)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2001, file: !2002, line: 510, baseType: !2013, size: 8, offset: 928)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2001, file: !2002, line: 511, baseType: !2013, size: 8, offset: 936)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2001, file: !2002, line: 512, baseType: !2013, size: 8, offset: 944)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2001, file: !2002, line: 513, baseType: !2013, size: 8, offset: 952)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2001, file: !2002, line: 514, baseType: !2013, size: 8, offset: 960)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2001, file: !2002, line: 515, baseType: !2013, size: 8, offset: 968)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2001, file: !2002, line: 516, baseType: !2013, size: 8, offset: 976)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2001, file: !2002, line: 517, baseType: !2013, size: 8, offset: 984)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2001, file: !2002, line: 518, baseType: !2013, size: 8, offset: 992)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2001, file: !2002, line: 519, baseType: !2013, size: 8, offset: 1000)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2001, file: !2002, line: 520, baseType: !2013, size: 8, offset: 1008)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2001, file: !2002, line: 521, baseType: !2013, size: 8, offset: 1016)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2001, file: !2002, line: 522, baseType: !2013, size: 8, offset: 1024)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2001, file: !2002, line: 523, baseType: !2013, size: 8, offset: 1032)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2001, file: !2002, line: 524, baseType: !2013, size: 8, offset: 1040)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2001, file: !2002, line: 525, baseType: !2013, size: 8, offset: 1048)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2001, file: !2002, line: 526, baseType: !2013, size: 8, offset: 1056)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2001, file: !2002, line: 527, baseType: !2013, size: 8, offset: 1064)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2001, file: !2002, line: 528, baseType: !2013, size: 8, offset: 1072)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2001, file: !2002, line: 529, baseType: !2013, size: 8, offset: 1080)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2001, file: !2002, line: 530, baseType: !2013, size: 8, offset: 1088)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2001, file: !2002, line: 531, baseType: !2013, size: 8, offset: 1096)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2001, file: !2002, line: 532, baseType: !2013, size: 8, offset: 1104)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2001, file: !2002, line: 533, baseType: !2013, size: 8, offset: 1112)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2001, file: !2002, line: 534, baseType: !2013, size: 8, offset: 1120)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2001, file: !2002, line: 535, baseType: !2013, size: 8, offset: 1128)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2001, file: !2002, line: 536, baseType: !2013, size: 8, offset: 1136)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2001, file: !2002, line: 537, baseType: !2013, size: 8, offset: 1144)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2001, file: !2002, line: 538, baseType: !2013, size: 8, offset: 1152)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2001, file: !2002, line: 539, baseType: !2013, size: 8, offset: 1160)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2001, file: !2002, line: 540, baseType: !2013, size: 8, offset: 1168)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2001, file: !2002, line: 541, baseType: !2013, size: 8, offset: 1176)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2001, file: !2002, line: 542, baseType: !2013, size: 8, offset: 1184)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2001, file: !2002, line: 543, baseType: !2013, size: 8, offset: 1192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2001, file: !2002, line: 544, baseType: !2013, size: 8, offset: 1200)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2001, file: !2002, line: 545, baseType: !2013, size: 8, offset: 1208)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2001, file: !2002, line: 546, baseType: !2013, size: 8, offset: 1216)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2001, file: !2002, line: 547, baseType: !2013, size: 8, offset: 1224)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2001, file: !2002, line: 548, baseType: !2013, size: 8, offset: 1232)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2001, file: !2002, line: 549, baseType: !2013, size: 8, offset: 1240)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2001, file: !2002, line: 550, baseType: !2013, size: 8, offset: 1248)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2001, file: !2002, line: 551, baseType: !2013, size: 8, offset: 1256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2001, file: !2002, line: 552, baseType: !2013, size: 8, offset: 1264)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2001, file: !2002, line: 553, baseType: !2013, size: 8, offset: 1272)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2001, file: !2002, line: 554, baseType: !2013, size: 8, offset: 1280)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2001, file: !2002, line: 555, baseType: !2013, size: 8, offset: 1288)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2001, file: !2002, line: 556, baseType: !2013, size: 8, offset: 1296)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2001, file: !2002, line: 557, baseType: !2013, size: 8, offset: 1304)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2001, file: !2002, line: 558, baseType: !2013, size: 8, offset: 1312)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2001, file: !2002, line: 559, baseType: !2013, size: 8, offset: 1320)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2001, file: !2002, line: 560, baseType: !2013, size: 8, offset: 1328)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2001, file: !2002, line: 561, baseType: !2013, size: 8, offset: 1336)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2001, file: !2002, line: 562, baseType: !2013, size: 8, offset: 1344)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2001, file: !2002, line: 563, baseType: !2013, size: 8, offset: 1352)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2001, file: !2002, line: 564, baseType: !2013, size: 8, offset: 1360)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2001, file: !2002, line: 565, baseType: !2013, size: 8, offset: 1368)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2001, file: !2002, line: 566, baseType: !2013, size: 8, offset: 1376)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2001, file: !2002, line: 567, baseType: !2013, size: 8, offset: 1384)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2001, file: !2002, line: 568, baseType: !2013, size: 8, offset: 1392)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2001, file: !2002, line: 569, baseType: !2013, size: 8, offset: 1400)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2001, file: !2002, line: 570, baseType: !2013, size: 8, offset: 1408)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2001, file: !2002, line: 571, baseType: !2013, size: 8, offset: 1416)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2001, file: !2002, line: 572, baseType: !2013, size: 8, offset: 1424)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2001, file: !2002, line: 573, baseType: !2013, size: 8, offset: 1432)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2001, file: !2002, line: 574, baseType: !2013, size: 8, offset: 1440)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !707, file: !142, line: 3405, baseType: !2169, size: 384)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !142, line: 3352, size: 384, elements: !2170)
!2170 = !{!2171, !2172}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2169, file: !142, line: 3353, baseType: !743, size: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2169, file: !142, line: 3356, baseType: !2173, size: 192, offset: 192)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !2002, line: 578, size: 192, elements: !2174)
!2174 = !{!2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2173, file: !2002, line: 580, baseType: !693, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2173, file: !2002, line: 581, baseType: !693, size: 32, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2173, file: !2002, line: 582, baseType: !693, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2173, file: !2002, line: 583, baseType: !693, size: 32, offset: 96)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2173, file: !2002, line: 584, baseType: !692, size: 8, offset: 128)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2173, file: !2002, line: 585, baseType: !692, size: 8, offset: 136)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2173, file: !2002, line: 586, baseType: !692, size: 8, offset: 144)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2173, file: !2002, line: 587, baseType: !692, size: 8, offset: 152)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2173, file: !2002, line: 588, baseType: !692, size: 8, offset: 160)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2173, file: !2002, line: 589, baseType: !692, size: 8, offset: 168)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2173, file: !2002, line: 590, baseType: !692, size: 8, offset: 176)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !701, file: !3, line: 1055, baseType: !692, size: 8, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2194)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "locus_discrim_map", file: !3, line: 86, size: 64, elements: !2195)
!2195 = !{!2196, !2197}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2194, file: !3, line: 88, baseType: !829, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !2194, file: !3, line: 89, baseType: !693, size: 32, offset: 32)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !678, line: 30, baseType: !2201)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !142, line: 1893, baseType: !1069)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1653, line: 32, baseType: !2208)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1653, line: 32, size: 96, elements: !2209)
!2209 = !{!2210}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2208, file: !1653, line: 32, baseType: !2211, size: 96)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1653, line: 31, baseType: !2212)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1653, line: 31, size: 96, elements: !2213)
!2213 = !{!2214, !2215, !2216}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2212, file: !1653, line: 31, baseType: !7, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2212, file: !1653, line: 31, baseType: !7, size: 32, offset: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2212, file: !1653, line: 31, baseType: !2217, size: 32, offset: 64)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 32, elements: !803)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "walk_stmt_info", file: !613, line: 4652, size: 448, elements: !2220)
!2220 = !{!2221, !2228, !2229, !2232, !2233, !2234, !2235, !2236}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "gsi", scope: !2219, file: !613, line: 4655, baseType: !2222, size: 192)
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !613, line: 265, baseType: !2223)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !613, line: 254, size: 192, elements: !2224)
!2224 = !{!2225, !2226, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2223, file: !613, line: 257, baseType: !1023, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2223, file: !613, line: 263, baseType: !1018, size: 64, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2223, file: !613, line: 264, baseType: !1670, size: 64, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2219, file: !613, line: 4659, baseType: !697, size: 64, offset: 192)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "pset", scope: !2219, file: !613, line: 4664, baseType: !2230, size: 64, offset: 256)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !142, line: 5199, flags: DIFlagFwdDecl)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "val_only", scope: !2219, file: !613, line: 4678, baseType: !692, size: 8, offset: 320)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "is_lhs", scope: !2219, file: !613, line: 4681, baseType: !692, size: 8, offset: 328)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2219, file: !613, line: 4685, baseType: !692, size: 8, offset: 336)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "want_locations", scope: !2219, file: !613, line: 4688, baseType: !692, size: 8, offset: 344)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !2219, file: !613, line: 4694, baseType: !704, size: 64, offset: 384)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "throw_stmt_node", file: !6, line: 344, size: 128, elements: !2239)
!2239 = !{!2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2238, file: !6, line: 345, baseType: !1028, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "lp_nr", scope: !2238, file: !6, line: 346, baseType: !693, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !382, line: 283, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !382, line: 283, size: 128, elements: !2245)
!2245 = !{!2246}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2244, file: !382, line: 283, baseType: !1678, size: 128)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map", file: !142, line: 5278, size: 192, elements: !2249)
!2249 = !{!2250, !2254, !2255}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2248, file: !142, line: 5279, baseType: !2251, size: 64)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map_base", file: !142, line: 5267, size: 64, elements: !2252)
!2252 = !{!2253}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2251, file: !142, line: 5268, baseType: !704, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2248, file: !142, line: 5280, baseType: !7, size: 32, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2248, file: !142, line: 5281, baseType: !704, size: 64, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "move_stmt_d", file: !3, line: 5473, size: 512, elements: !2258)
!2258 = !{!2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "orig_block", scope: !2257, file: !3, line: 5475, baseType: !704, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "new_block", scope: !2257, file: !3, line: 5476, baseType: !704, size: 64, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "from_context", scope: !2257, file: !3, line: 5477, baseType: !704, size: 64, offset: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "to_context", scope: !2257, file: !3, line: 5478, baseType: !704, size: 64, offset: 192)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "vars_map", scope: !2257, file: !3, line: 5479, baseType: !1731, size: 64, offset: 256)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "new_label_map", scope: !2257, file: !3, line: 5480, baseType: !1587, size: 64, offset: 320)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "eh_map", scope: !2257, file: !3, line: 5481, baseType: !1731, size: 64, offset: 384)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "remap_decls_p", scope: !2257, file: !3, line: 5482, baseType: !692, size: 8, offset: 448)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !678, line: 27, baseType: !1062)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!2270 = !{!2271, !0, !2274, !2342, !2463, !2491, !2493, !2495, !2497, !2499, !2504, !2506, !2508, !2510}
!2271 = !DIGlobalVariableExpression(var: !2272, expr: !DIExpression(DW_OP_constu, 20, DW_OP_stack_value))
!2272 = distinct !DIGlobalVariable(name: "initial_cfg_capacity", scope: !2, file: !3, line: 57, type: !2273, isLocal: true, isDefinition: true)
!2273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "max_num_merged_labels", scope: !2276, file: !3, line: 2038, type: !760, isLocal: true, isDefinition: true)
!2276 = distinct !DISubprogram(name: "dump_cfg_stats", scope: !3, file: !3, line: 2036, type: !2277, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2330)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !2279}
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2281, line: 7, baseType: !2282)
!2281 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2283, line: 49, size: 1728, elements: !2284)
!2283 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2284 = !{!2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2300, !2302, !2303, !2304, !2307, !2309, !2310, !2311, !2314, !2316, !2319, !2322, !2323, !2324, !2325, !2326}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2282, file: !2283, line: 51, baseType: !693, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2282, file: !2283, line: 54, baseType: !695, size: 64, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2282, file: !2283, line: 55, baseType: !695, size: 64, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2282, file: !2283, line: 56, baseType: !695, size: 64, offset: 192)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2282, file: !2283, line: 57, baseType: !695, size: 64, offset: 256)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2282, file: !2283, line: 58, baseType: !695, size: 64, offset: 320)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2282, file: !2283, line: 59, baseType: !695, size: 64, offset: 384)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2282, file: !2283, line: 60, baseType: !695, size: 64, offset: 448)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2282, file: !2283, line: 61, baseType: !695, size: 64, offset: 512)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2282, file: !2283, line: 64, baseType: !695, size: 64, offset: 576)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2282, file: !2283, line: 65, baseType: !695, size: 64, offset: 640)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2282, file: !2283, line: 66, baseType: !695, size: 64, offset: 704)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2282, file: !2283, line: 68, baseType: !2298, size: 64, offset: 768)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2283, line: 36, flags: DIFlagFwdDecl)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2282, file: !2283, line: 70, baseType: !2301, size: 64, offset: 832)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2282, file: !2283, line: 72, baseType: !693, size: 32, offset: 896)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2282, file: !2283, line: 73, baseType: !693, size: 32, offset: 928)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2282, file: !2283, line: 74, baseType: !2305, size: 64, offset: 960)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2306, line: 152, baseType: !760)
!2306 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2282, file: !2283, line: 77, baseType: !2308, size: 16, offset: 1024)
!2308 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2282, file: !2283, line: 78, baseType: !2013, size: 8, offset: 1040)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2282, file: !2283, line: 79, baseType: !802, size: 8, offset: 1048)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2282, file: !2283, line: 81, baseType: !2312, size: 64, offset: 1088)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2283, line: 43, baseType: null)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2282, file: !2283, line: 89, baseType: !2315, size: 64, offset: 1152)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2306, line: 153, baseType: !760)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2282, file: !2283, line: 91, baseType: !2317, size: 64, offset: 1216)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2283, line: 37, flags: DIFlagFwdDecl)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2282, file: !2283, line: 92, baseType: !2320, size: 64, offset: 1280)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2283, line: 38, flags: DIFlagFwdDecl)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2282, file: !2283, line: 93, baseType: !2301, size: 64, offset: 1344)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2282, file: !2283, line: 94, baseType: !697, size: 64, offset: 1408)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2282, file: !2283, line: 95, baseType: !1173, size: 64, offset: 1472)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2282, file: !2283, line: 96, baseType: !693, size: 32, offset: 1536)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2282, file: !2283, line: 98, baseType: !2327, size: 160, offset: 1568)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 160, elements: !2328)
!2328 = !{!2329}
!2329 = !DISubrange(count: 20)
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2336, !2338, !2339, !2340, !2341}
!2331 = !DILocalVariable(name: "file", arg: 1, scope: !2276, file: !3, line: 2036, type: !2279)
!2332 = !DILocalVariable(name: "size", scope: !2276, file: !3, line: 2039, type: !758)
!2333 = !DILocalVariable(name: "total", scope: !2276, file: !3, line: 2039, type: !758)
!2334 = !DILocalVariable(name: "num_edges", scope: !2276, file: !3, line: 2040, type: !760)
!2335 = !DILocalVariable(name: "bb", scope: !2276, file: !3, line: 2041, type: !1670)
!2336 = !DILocalVariable(name: "fmt_str", scope: !2276, file: !3, line: 2042, type: !2337)
!2337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!2338 = !DILocalVariable(name: "fmt_str_1", scope: !2276, file: !3, line: 2043, type: !2337)
!2339 = !DILocalVariable(name: "fmt_str_2", scope: !2276, file: !3, line: 2044, type: !2337)
!2340 = !DILocalVariable(name: "fmt_str_3", scope: !2276, file: !3, line: 2045, type: !2337)
!2341 = !DILocalVariable(name: "funcname", scope: !2276, file: !3, line: 2046, type: !698)
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "gimple_cfg_hooks", scope: !2, file: !3, line: 6944, type: !2344, isLocal: false, isDefinition: true)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg_hooks", file: !2345, line: 25, size: 1856, elements: !2346)
!2345 = !DIFile(filename: "./cfghooks.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2346 = !{!2347, !2348, !2352, !2356, !2360, !2364, !2368, !2375, !2379, !2383, !2387, !2388, !2392, !2396, !2401, !2405, !2409, !2413, !2417, !2418, !2422, !2423, !2437, !2438, !2439, !2449, !2453, !2457, !2462}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2344, file: !2345, line: 28, baseType: !698, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "verify_flow_info", scope: !2344, file: !2345, line: 31, baseType: !2349, size: 64, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{!693}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "dump_bb", scope: !2344, file: !2345, line: 32, baseType: !2353, size: 64, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{null, !1670, !2279, !693, !693}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "create_basic_block", scope: !2344, file: !2345, line: 37, baseType: !2357, size: 64, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!1670, !697, !697, !1670}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "redirect_edge_and_branch", scope: !2344, file: !2345, line: 43, baseType: !2361, size: 64, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DISubroutineType(types: !2363)
!2363 = !{!1008, !1008, !1670}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "redirect_edge_and_branch_force", scope: !2344, file: !2345, line: 48, baseType: !2365, size: 64, offset: 320)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{!1670, !1008, !1670}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "can_remove_branch_p", scope: !2344, file: !2345, line: 52, baseType: !2369, size: 64, offset: 384)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!692, !2372}
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_edge", file: !705, line: 109, baseType: !2373)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "delete_basic_block", scope: !2344, file: !2345, line: 55, baseType: !2376, size: 64, offset: 448)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{null, !1670}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "split_block", scope: !2344, file: !2345, line: 59, baseType: !2380, size: 64, offset: 512)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{!1670, !1670, !697}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "move_block_after", scope: !2344, file: !2345, line: 62, baseType: !2384, size: 64, offset: 576)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{!692, !1670, !1670}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "can_merge_blocks_p", scope: !2344, file: !2345, line: 65, baseType: !2384, size: 64, offset: 640)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "merge_blocks", scope: !2344, file: !2345, line: 68, baseType: !2389, size: 64, offset: 704)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{null, !1670, !1670}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "predict_edge", scope: !2344, file: !2345, line: 71, baseType: !2393, size: 64, offset: 768)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{null, !1008, !580, !693}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "predicted_by_p", scope: !2344, file: !2345, line: 75, baseType: !2397, size: 64, offset: 832)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DISubroutineType(types: !2399)
!2399 = !{!692, !2400, !580}
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !705, line: 112, baseType: !2268)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "can_duplicate_block_p", scope: !2344, file: !2345, line: 78, baseType: !2402, size: 64, offset: 896)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!692, !2400}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate_block", scope: !2344, file: !2345, line: 81, baseType: !2406, size: 64, offset: 960)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!1670, !1670}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "split_edge", scope: !2344, file: !2345, line: 85, baseType: !2410, size: 64, offset: 1024)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{!1670, !1008}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "make_forwarder_block", scope: !2344, file: !2345, line: 86, baseType: !2414, size: 64, offset: 1088)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !1008}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "tidy_fallthru_edge", scope: !2344, file: !2345, line: 89, baseType: !2414, size: 64, offset: 1152)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "block_ends_with_call_p", scope: !2344, file: !2345, line: 93, baseType: !2419, size: 64, offset: 1216)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DISubroutineType(types: !2421)
!2421 = !{!692, !1670}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "block_ends_with_condjump_p", scope: !2344, file: !2345, line: 97, baseType: !2402, size: 64, offset: 1280)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "flow_call_edges_add", scope: !2344, file: !2345, line: 106, baseType: !2424, size: 64, offset: 1344)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!693, !2427}
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2428, line: 45, baseType: !2429)
!2428 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2428, line: 39, size: 192, elements: !2431)
!2431 = !{!2432, !2433, !2434, !2435}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2430, file: !2428, line: 41, baseType: !691, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2430, file: !2428, line: 42, baseType: !7, size: 32, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2430, file: !2428, line: 43, baseType: !7, size: 32, offset: 96)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2430, file: !2428, line: 44, baseType: !2436, size: 64, offset: 128)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 64, elements: !803)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "execute_on_growing_pred", scope: !2344, file: !2345, line: 110, baseType: !2414, size: 64, offset: 1408)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "execute_on_shrinking_pred", scope: !2344, file: !2345, line: 114, baseType: !2414, size: 64, offset: 1472)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_hook_duplicate_loop_to_header_edge", scope: !2344, file: !2345, line: 118, baseType: !2440, size: 64, offset: 1536)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!692, !1243, !1008, !7, !2427, !1008, !2443, !693}
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !382, line: 152, baseType: !2446)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !382, line: 152, size: 128, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2446, file: !382, line: 152, baseType: !1001, size: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "lv_add_condition_to_bb", scope: !2344, file: !2345, line: 125, baseType: !2450, size: 64, offset: 1600)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !1670, !1670, !1670, !697}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "lv_adjust_loop_header_phi", scope: !2344, file: !2345, line: 128, baseType: !2454, size: 64, offset: 1664)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{null, !1670, !1670, !1670, !1008}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "extract_cond_bb_edges", scope: !2344, file: !2345, line: 133, baseType: !2458, size: 64, offset: 1728)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{null, !1670, !2461, !2461}
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "flush_pending_stmts", scope: !2344, file: !2345, line: 138, baseType: !2414, size: 64, offset: 1792)
!2463 = !DIGlobalVariableExpression(var: !2464, expr: !DIExpression())
!2464 = distinct !DIGlobalVariable(name: "pass_split_crit_edges", scope: !2, file: !3, line: 7023, type: !2465, isLocal: false, isDefinition: true)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !398, line: 156, size: 640, elements: !2466)
!2466 = !{!2467}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2465, file: !398, line: 158, baseType: !2468, size: 640)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !398, line: 114, size: 640, elements: !2469)
!2469 = !{!2470, !2471, !2472, !2476, !2480, !2482, !2483, !2484, !2486, !2487, !2488, !2489, !2490}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2468, file: !398, line: 117, baseType: !397, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2468, file: !398, line: 121, baseType: !698, size: 64, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2468, file: !398, line: 125, baseType: !2473, size: 64, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!692}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2468, file: !398, line: 130, baseType: !2477, size: 64, offset: 192)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{!7}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2468, file: !398, line: 133, baseType: !2481, size: 64, offset: 256)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2468, file: !398, line: 136, baseType: !2481, size: 64, offset: 320)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2468, file: !398, line: 139, baseType: !693, size: 32, offset: 384)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2468, file: !398, line: 143, baseType: !2485, size: 32, offset: 416)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !405, line: 80, baseType: !404)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2468, file: !398, line: 146, baseType: !7, size: 32, offset: 448)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2468, file: !398, line: 147, baseType: !7, size: 32, offset: 480)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2468, file: !398, line: 148, baseType: !7, size: 32, offset: 512)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2468, file: !398, line: 151, baseType: !7, size: 32, offset: 544)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2468, file: !398, line: 152, baseType: !7, size: 32, offset: 576)
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(name: "pass_warn_function_return", scope: !2, file: !3, line: 7172, type: !2465, isLocal: false, isDefinition: true)
!2493 = !DIGlobalVariableExpression(var: !2494, expr: !DIExpression())
!2494 = distinct !DIGlobalVariable(name: "pass_warn_function_noreturn", scope: !2, file: !3, line: 7206, type: !2465, isLocal: false, isDefinition: true)
!2495 = !DIGlobalVariableExpression(var: !2496, expr: !DIExpression())
!2496 = distinct !DIGlobalVariable(name: "pass_warn_unused_result", scope: !2, file: !3, line: 7302, type: !2465, isLocal: false, isDefinition: true)
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(name: "edge_to_cases", scope: !2, file: !3, line: 72, type: !1731, isLocal: true, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "cfg_stats", scope: !2, file: !3, line: 80, type: !2501, isLocal: true, isDefinition: true)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg_stats_d", file: !3, line: 75, size: 64, elements: !2502)
!2502 = !{!2503}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "num_merged_labels", scope: !2501, file: !3, line: 77, baseType: !760, size: 64)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "label_for_bb", scope: !2, file: !3, line: 1056, type: !700, isLocal: true, isDefinition: true)
!2506 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression())
!2507 = distinct !DIGlobalVariable(name: "eh_error_found", scope: !2, file: !3, line: 4034, type: !692, isLocal: true, isDefinition: true)
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "found_computed_goto", scope: !2, file: !3, line: 83, type: !692, isLocal: true, isDefinition: true)
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(name: "discriminator_per_locus", scope: !2, file: !3, line: 91, type: !1587, isLocal: true, isDefinition: true)
!2512 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2513 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2514 = !{i32 2, !"Dwarf Version", i32 4}
!2515 = !{i32 2, !"Debug Info Version", i32 3}
!2516 = !{i32 1, !"wchar_size", i32 4}
!2517 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2518 = distinct !DISubprogram(name: "vprintf", scope: !2519, file: !2519, line: 39, type: !2520, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2530)
!2519 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!693, !2522, !2523}
!2522 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !698)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2524, file: !3, baseType: !7, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2524, file: !3, baseType: !7, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2524, file: !3, baseType: !697, size: 64, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2524, file: !3, baseType: !697, size: 64, offset: 128)
!2530 = !{!2531, !2532}
!2531 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2518, file: !2519, line: 39, type: !2522)
!2532 = !DILocalVariable(name: "__arg", arg: 2, scope: !2518, file: !2519, line: 39, type: !2523)
!2533 = !DILocation(line: 0, scope: !2518)
!2534 = !DILocation(line: 41, column: 20, scope: !2518)
!2535 = !DILocation(line: 41, column: 10, scope: !2518)
!2536 = !DILocation(line: 41, column: 3, scope: !2518)
!2537 = distinct !DISubprogram(name: "getchar", scope: !2519, file: !2519, line: 47, type: !2350, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!2538 = !{}
!2539 = !DILocation(line: 49, column: 16, scope: !2537)
!2540 = !DILocation(line: 49, column: 10, scope: !2537)
!2541 = !DILocation(line: 49, column: 3, scope: !2537)
!2542 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2519, file: !2519, line: 56, type: !2543, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!693, !2279}
!2545 = !{!2546}
!2546 = !DILocalVariable(name: "__fp", arg: 1, scope: !2542, file: !2519, line: 56, type: !2279)
!2547 = !DILocation(line: 0, scope: !2542)
!2548 = !DILocation(line: 58, column: 10, scope: !2542)
!2549 = !DILocation(line: 58, column: 3, scope: !2542)
!2550 = distinct !DISubprogram(name: "getc_unlocked", scope: !2519, file: !2519, line: 66, type: !2543, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2551)
!2551 = !{!2552}
!2552 = !DILocalVariable(name: "__fp", arg: 1, scope: !2550, file: !2519, line: 66, type: !2279)
!2553 = !DILocation(line: 0, scope: !2550)
!2554 = !DILocation(line: 68, column: 10, scope: !2550)
!2555 = !DILocation(line: 68, column: 3, scope: !2550)
!2556 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2519, file: !2519, line: 73, type: !2350, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!2557 = !DILocation(line: 75, column: 10, scope: !2556)
!2558 = !DILocation(line: 75, column: 3, scope: !2556)
!2559 = distinct !DISubprogram(name: "putchar", scope: !2519, file: !2519, line: 82, type: !2560, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2562)
!2560 = !DISubroutineType(types: !2561)
!2561 = !{!693, !693}
!2562 = !{!2563}
!2563 = !DILocalVariable(name: "__c", arg: 1, scope: !2559, file: !2519, line: 82, type: !693)
!2564 = !DILocation(line: 0, scope: !2559)
!2565 = !DILocation(line: 84, column: 21, scope: !2559)
!2566 = !DILocation(line: 84, column: 10, scope: !2559)
!2567 = !DILocation(line: 84, column: 3, scope: !2559)
!2568 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2519, file: !2519, line: 91, type: !2569, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2571)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!693, !693, !2279}
!2571 = !{!2572, !2573}
!2572 = !DILocalVariable(name: "__c", arg: 1, scope: !2568, file: !2519, line: 91, type: !693)
!2573 = !DILocalVariable(name: "__stream", arg: 2, scope: !2568, file: !2519, line: 91, type: !2279)
!2574 = !DILocation(line: 0, scope: !2568)
!2575 = !DILocation(line: 93, column: 10, scope: !2568)
!2576 = !DILocation(line: 93, column: 3, scope: !2568)
!2577 = distinct !DISubprogram(name: "putc_unlocked", scope: !2519, file: !2519, line: 101, type: !2569, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2578)
!2578 = !{!2579, !2580}
!2579 = !DILocalVariable(name: "__c", arg: 1, scope: !2577, file: !2519, line: 101, type: !693)
!2580 = !DILocalVariable(name: "__stream", arg: 2, scope: !2577, file: !2519, line: 101, type: !2279)
!2581 = !DILocation(line: 0, scope: !2577)
!2582 = !DILocation(line: 103, column: 10, scope: !2577)
!2583 = !DILocation(line: 103, column: 3, scope: !2577)
!2584 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2519, file: !2519, line: 108, type: !2560, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2585)
!2585 = !{!2586}
!2586 = !DILocalVariable(name: "__c", arg: 1, scope: !2584, file: !2519, line: 108, type: !693)
!2587 = !DILocation(line: 0, scope: !2584)
!2588 = !DILocation(line: 110, column: 10, scope: !2584)
!2589 = !DILocation(line: 110, column: 3, scope: !2584)
!2590 = distinct !DISubprogram(name: "getline", scope: !2519, file: !2519, line: 118, type: !2591, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2595)
!2591 = !DISubroutineType(types: !2592)
!2592 = !{!2593, !694, !2594, !2279}
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2306, line: 193, baseType: !760)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!2595 = !{!2596, !2597, !2598}
!2596 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2590, file: !2519, line: 118, type: !694)
!2597 = !DILocalVariable(name: "__n", arg: 2, scope: !2590, file: !2519, line: 118, type: !2594)
!2598 = !DILocalVariable(name: "__stream", arg: 3, scope: !2590, file: !2519, line: 118, type: !2279)
!2599 = !DILocation(line: 0, scope: !2590)
!2600 = !DILocation(line: 120, column: 10, scope: !2590)
!2601 = !DILocation(line: 120, column: 3, scope: !2590)
!2602 = distinct !DISubprogram(name: "feof_unlocked", scope: !2519, file: !2519, line: 128, type: !2543, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2603)
!2603 = !{!2604}
!2604 = !DILocalVariable(name: "__stream", arg: 1, scope: !2602, file: !2519, line: 128, type: !2279)
!2605 = !DILocation(line: 0, scope: !2602)
!2606 = !DILocation(line: 130, column: 10, scope: !2602)
!2607 = !DILocation(line: 130, column: 3, scope: !2602)
!2608 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2519, file: !2519, line: 135, type: !2543, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2609)
!2609 = !{!2610}
!2610 = !DILocalVariable(name: "__stream", arg: 1, scope: !2608, file: !2519, line: 135, type: !2279)
!2611 = !DILocation(line: 0, scope: !2608)
!2612 = !DILocation(line: 137, column: 10, scope: !2608)
!2613 = !DILocation(line: 137, column: 3, scope: !2608)
!2614 = distinct !DISubprogram(name: "tolower", scope: !2615, file: !2615, line: 207, type: !2560, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2616)
!2615 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2616 = !{!2617}
!2617 = !DILocalVariable(name: "__c", arg: 1, scope: !2614, file: !2615, line: 207, type: !693)
!2618 = !DILocation(line: 0, scope: !2614)
!2619 = !DILocation(line: 209, column: 22, scope: !2614)
!2620 = !DILocation(line: 209, column: 39, scope: !2614)
!2621 = !DILocation(line: 209, column: 38, scope: !2614)
!2622 = !DILocation(line: 209, column: 37, scope: !2614)
!2623 = !DILocation(line: 209, column: 10, scope: !2614)
!2624 = !DILocation(line: 209, column: 3, scope: !2614)
!2625 = distinct !DISubprogram(name: "toupper", scope: !2615, file: !2615, line: 213, type: !2560, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2626)
!2626 = !{!2627}
!2627 = !DILocalVariable(name: "__c", arg: 1, scope: !2625, file: !2615, line: 213, type: !693)
!2628 = !DILocation(line: 0, scope: !2625)
!2629 = !DILocation(line: 215, column: 22, scope: !2625)
!2630 = !DILocation(line: 215, column: 39, scope: !2625)
!2631 = !DILocation(line: 215, column: 38, scope: !2625)
!2632 = !DILocation(line: 215, column: 37, scope: !2625)
!2633 = !DILocation(line: 215, column: 10, scope: !2625)
!2634 = !DILocation(line: 215, column: 3, scope: !2625)
!2635 = distinct !DISubprogram(name: "atoi", scope: !2636, file: !2636, line: 361, type: !2637, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2639)
!2636 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!693, !698}
!2639 = !{!2640}
!2640 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2635, file: !2636, line: 361, type: !698)
!2641 = !DILocation(line: 0, scope: !2635)
!2642 = !DILocation(line: 363, column: 16, scope: !2635)
!2643 = !DILocation(line: 363, column: 10, scope: !2635)
!2644 = !DILocation(line: 363, column: 3, scope: !2635)
!2645 = distinct !DISubprogram(name: "atol", scope: !2636, file: !2636, line: 366, type: !2646, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2648)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!760, !698}
!2648 = !{!2649}
!2649 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2645, file: !2636, line: 366, type: !698)
!2650 = !DILocation(line: 0, scope: !2645)
!2651 = !DILocation(line: 368, column: 10, scope: !2645)
!2652 = !DILocation(line: 368, column: 3, scope: !2645)
!2653 = distinct !DISubprogram(name: "atoll", scope: !2636, file: !2636, line: 373, type: !2654, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2657)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{!2656, !698}
!2656 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2657 = !{!2658}
!2658 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2653, file: !2636, line: 373, type: !698)
!2659 = !DILocation(line: 0, scope: !2653)
!2660 = !DILocation(line: 375, column: 10, scope: !2653)
!2661 = !DILocation(line: 375, column: 3, scope: !2653)
!2662 = distinct !DISubprogram(name: "bsearch", scope: !2663, file: !2663, line: 20, type: !2664, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2667)
!2663 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!697, !1387, !1387, !1173, !1173, !2666}
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2636, line: 808, baseType: !1600)
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677}
!2668 = !DILocalVariable(name: "__key", arg: 1, scope: !2662, file: !2663, line: 20, type: !1387)
!2669 = !DILocalVariable(name: "__base", arg: 2, scope: !2662, file: !2663, line: 20, type: !1387)
!2670 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2662, file: !2663, line: 20, type: !1173)
!2671 = !DILocalVariable(name: "__size", arg: 4, scope: !2662, file: !2663, line: 20, type: !1173)
!2672 = !DILocalVariable(name: "__compar", arg: 5, scope: !2662, file: !2663, line: 21, type: !2666)
!2673 = !DILocalVariable(name: "__l", scope: !2662, file: !2663, line: 23, type: !1173)
!2674 = !DILocalVariable(name: "__u", scope: !2662, file: !2663, line: 23, type: !1173)
!2675 = !DILocalVariable(name: "__idx", scope: !2662, file: !2663, line: 23, type: !1173)
!2676 = !DILocalVariable(name: "__p", scope: !2662, file: !2663, line: 24, type: !1387)
!2677 = !DILocalVariable(name: "__comparison", scope: !2662, file: !2663, line: 25, type: !693)
!2678 = !DILocation(line: 0, scope: !2662)
!2679 = !DILocation(line: 29, column: 3, scope: !2662)
!2680 = !DILocation(line: 27, column: 7, scope: !2662)
!2681 = !DILocation(line: 29, column: 14, scope: !2662)
!2682 = !DILocation(line: 31, column: 20, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2662, file: !2663, line: 30, column: 5)
!2684 = !DILocation(line: 31, column: 27, scope: !2683)
!2685 = !DILocation(line: 32, column: 56, scope: !2683)
!2686 = !DILocation(line: 32, column: 47, scope: !2683)
!2687 = !DILocation(line: 33, column: 22, scope: !2683)
!2688 = !DILocation(line: 34, column: 24, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2683, file: !2663, line: 34, column: 11)
!2690 = !DILocation(line: 34, column: 11, scope: !2683)
!2691 = !DILocation(line: 36, column: 29, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2689, file: !2663, line: 36, column: 16)
!2693 = !DILocation(line: 36, column: 16, scope: !2689)
!2694 = !DILocation(line: 37, column: 14, scope: !2692)
!2695 = distinct !{!2695, !2679, !2696}
!2696 = !DILocation(line: 40, column: 5, scope: !2662)
!2697 = !DILocation(line: 43, column: 1, scope: !2662)
!2698 = distinct !DISubprogram(name: "atof", scope: !2699, file: !2699, line: 25, type: !2700, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2703)
!2699 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2700 = !DISubroutineType(types: !2701)
!2701 = !{!2702, !698}
!2702 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2703 = !{!2704}
!2704 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2698, file: !2699, line: 25, type: !698)
!2705 = !DILocation(line: 0, scope: !2698)
!2706 = !DILocation(line: 27, column: 10, scope: !2698)
!2707 = !DILocation(line: 27, column: 3, scope: !2698)
!2708 = distinct !DISubprogram(name: "strtoimax", scope: !2709, file: !2709, line: 324, type: !2710, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2716)
!2709 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!2712, !2522, !2715, !693}
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2713, line: 101, baseType: !2714)
!2713 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2306, line: 72, baseType: !760)
!2715 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !694)
!2716 = !{!2717, !2718, !2719}
!2717 = !DILocalVariable(name: "nptr", arg: 1, scope: !2708, file: !2709, line: 324, type: !2522)
!2718 = !DILocalVariable(name: "endptr", arg: 2, scope: !2708, file: !2709, line: 324, type: !2715)
!2719 = !DILocalVariable(name: "base", arg: 3, scope: !2708, file: !2709, line: 324, type: !693)
!2720 = !DILocation(line: 0, scope: !2708)
!2721 = !DILocation(line: 327, column: 10, scope: !2708)
!2722 = !DILocation(line: 327, column: 3, scope: !2708)
!2723 = distinct !DISubprogram(name: "strtoumax", scope: !2709, file: !2709, line: 336, type: !2724, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2728)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!2726, !2522, !2715, !693}
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2713, line: 102, baseType: !2727)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2306, line: 73, baseType: !758)
!2728 = !{!2729, !2730, !2731}
!2729 = !DILocalVariable(name: "nptr", arg: 1, scope: !2723, file: !2709, line: 336, type: !2522)
!2730 = !DILocalVariable(name: "endptr", arg: 2, scope: !2723, file: !2709, line: 336, type: !2715)
!2731 = !DILocalVariable(name: "base", arg: 3, scope: !2723, file: !2709, line: 336, type: !693)
!2732 = !DILocation(line: 0, scope: !2723)
!2733 = !DILocation(line: 339, column: 10, scope: !2723)
!2734 = !DILocation(line: 339, column: 3, scope: !2723)
!2735 = distinct !DISubprogram(name: "wcstoimax", scope: !2709, file: !2709, line: 348, type: !2736, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2745)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!2712, !2738, !2742, !693}
!2738 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2739)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2741)
!2741 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2709, line: 34, baseType: !693)
!2742 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2743)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2745 = !{!2746, !2747, !2748}
!2746 = !DILocalVariable(name: "nptr", arg: 1, scope: !2735, file: !2709, line: 348, type: !2738)
!2747 = !DILocalVariable(name: "endptr", arg: 2, scope: !2735, file: !2709, line: 348, type: !2742)
!2748 = !DILocalVariable(name: "base", arg: 3, scope: !2735, file: !2709, line: 348, type: !693)
!2749 = !DILocation(line: 0, scope: !2735)
!2750 = !DILocation(line: 351, column: 10, scope: !2735)
!2751 = !DILocation(line: 351, column: 3, scope: !2735)
!2752 = distinct !DISubprogram(name: "wcstoumax", scope: !2709, file: !2709, line: 362, type: !2753, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2755)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!2726, !2738, !2742, !693}
!2755 = !{!2756, !2757, !2758}
!2756 = !DILocalVariable(name: "nptr", arg: 1, scope: !2752, file: !2709, line: 362, type: !2738)
!2757 = !DILocalVariable(name: "endptr", arg: 2, scope: !2752, file: !2709, line: 362, type: !2742)
!2758 = !DILocalVariable(name: "base", arg: 3, scope: !2752, file: !2709, line: 362, type: !693)
!2759 = !DILocation(line: 0, scope: !2752)
!2760 = !DILocation(line: 365, column: 10, scope: !2752)
!2761 = !DILocation(line: 365, column: 3, scope: !2752)
!2762 = distinct !DISubprogram(name: "stat", scope: !2763, file: !2763, line: 453, type: !2764, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2801)
!2763 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!693, !698, !2766}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2768, line: 46, size: 1152, elements: !2769)
!2768 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2769 = !{!2770, !2772, !2774, !2776, !2778, !2780, !2782, !2783, !2784, !2785, !2787, !2789, !2797, !2798, !2799}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2767, file: !2768, line: 48, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2306, line: 145, baseType: !758)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2767, file: !2768, line: 53, baseType: !2773, size: 64, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2306, line: 148, baseType: !758)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2767, file: !2768, line: 61, baseType: !2775, size: 64, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2306, line: 151, baseType: !758)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2767, file: !2768, line: 62, baseType: !2777, size: 32, offset: 192)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2306, line: 150, baseType: !7)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2767, file: !2768, line: 64, baseType: !2779, size: 32, offset: 224)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2306, line: 146, baseType: !7)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2767, file: !2768, line: 65, baseType: !2781, size: 32, offset: 256)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2306, line: 147, baseType: !7)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2767, file: !2768, line: 67, baseType: !693, size: 32, offset: 288)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2767, file: !2768, line: 69, baseType: !2771, size: 64, offset: 320)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2767, file: !2768, line: 74, baseType: !2305, size: 64, offset: 384)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2767, file: !2768, line: 78, baseType: !2786, size: 64, offset: 448)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2306, line: 174, baseType: !760)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2767, file: !2768, line: 80, baseType: !2788, size: 64, offset: 512)
!2788 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2306, line: 179, baseType: !760)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2767, file: !2768, line: 91, baseType: !2790, size: 128, offset: 576)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2791, line: 10, size: 128, elements: !2792)
!2791 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2792 = !{!2793, !2795}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2790, file: !2791, line: 12, baseType: !2794, size: 64)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2306, line: 160, baseType: !760)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2790, file: !2791, line: 16, baseType: !2796, size: 64, offset: 64)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2306, line: 196, baseType: !760)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2767, file: !2768, line: 92, baseType: !2790, size: 128, offset: 704)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2767, file: !2768, line: 93, baseType: !2790, size: 128, offset: 832)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2767, file: !2768, line: 106, baseType: !2800, size: 192, offset: 960)
!2800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2796, size: 192, elements: !778)
!2801 = !{!2802, !2803}
!2802 = !DILocalVariable(name: "__path", arg: 1, scope: !2762, file: !2763, line: 453, type: !698)
!2803 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2762, file: !2763, line: 453, type: !2766)
!2804 = !DILocation(line: 0, scope: !2762)
!2805 = !DILocation(line: 455, column: 10, scope: !2762)
!2806 = !DILocation(line: 455, column: 3, scope: !2762)
!2807 = distinct !DISubprogram(name: "lstat", scope: !2763, file: !2763, line: 460, type: !2764, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2808)
!2808 = !{!2809, !2810}
!2809 = !DILocalVariable(name: "__path", arg: 1, scope: !2807, file: !2763, line: 460, type: !698)
!2810 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2807, file: !2763, line: 460, type: !2766)
!2811 = !DILocation(line: 0, scope: !2807)
!2812 = !DILocation(line: 462, column: 10, scope: !2807)
!2813 = !DILocation(line: 462, column: 3, scope: !2807)
!2814 = distinct !DISubprogram(name: "fstat", scope: !2763, file: !2763, line: 467, type: !2815, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2817)
!2815 = !DISubroutineType(types: !2816)
!2816 = !{!693, !693, !2766}
!2817 = !{!2818, !2819}
!2818 = !DILocalVariable(name: "__fd", arg: 1, scope: !2814, file: !2763, line: 467, type: !693)
!2819 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2814, file: !2763, line: 467, type: !2766)
!2820 = !DILocation(line: 0, scope: !2814)
!2821 = !DILocation(line: 469, column: 10, scope: !2814)
!2822 = !DILocation(line: 469, column: 3, scope: !2814)
!2823 = distinct !DISubprogram(name: "fstatat", scope: !2763, file: !2763, line: 474, type: !2824, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2826)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!693, !693, !698, !2766, !693}
!2826 = !{!2827, !2828, !2829, !2830}
!2827 = !DILocalVariable(name: "__fd", arg: 1, scope: !2823, file: !2763, line: 474, type: !693)
!2828 = !DILocalVariable(name: "__filename", arg: 2, scope: !2823, file: !2763, line: 474, type: !698)
!2829 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2823, file: !2763, line: 474, type: !2766)
!2830 = !DILocalVariable(name: "__flag", arg: 4, scope: !2823, file: !2763, line: 474, type: !693)
!2831 = !DILocation(line: 0, scope: !2823)
!2832 = !DILocation(line: 477, column: 10, scope: !2823)
!2833 = !DILocation(line: 477, column: 3, scope: !2823)
!2834 = distinct !DISubprogram(name: "mknod", scope: !2763, file: !2763, line: 483, type: !2835, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2837)
!2835 = !DISubroutineType(types: !2836)
!2836 = !{!693, !698, !2777, !2771}
!2837 = !{!2838, !2839, !2840}
!2838 = !DILocalVariable(name: "__path", arg: 1, scope: !2834, file: !2763, line: 483, type: !698)
!2839 = !DILocalVariable(name: "__mode", arg: 2, scope: !2834, file: !2763, line: 483, type: !2777)
!2840 = !DILocalVariable(name: "__dev", arg: 3, scope: !2834, file: !2763, line: 483, type: !2771)
!2841 = !DILocation(line: 0, scope: !2834)
!2842 = !DILocation(line: 485, column: 10, scope: !2834)
!2843 = !DILocation(line: 485, column: 3, scope: !2834)
!2844 = distinct !DISubprogram(name: "mknodat", scope: !2763, file: !2763, line: 491, type: !2845, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2847)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!693, !693, !698, !2777, !2771}
!2847 = !{!2848, !2849, !2850, !2851}
!2848 = !DILocalVariable(name: "__fd", arg: 1, scope: !2844, file: !2763, line: 491, type: !693)
!2849 = !DILocalVariable(name: "__path", arg: 2, scope: !2844, file: !2763, line: 491, type: !698)
!2850 = !DILocalVariable(name: "__mode", arg: 3, scope: !2844, file: !2763, line: 491, type: !2777)
!2851 = !DILocalVariable(name: "__dev", arg: 4, scope: !2844, file: !2763, line: 491, type: !2771)
!2852 = !DILocation(line: 0, scope: !2844)
!2853 = !DILocation(line: 494, column: 10, scope: !2844)
!2854 = !DILocation(line: 494, column: 3, scope: !2844)
!2855 = distinct !DISubprogram(name: "stat64", scope: !2763, file: !2763, line: 502, type: !2856, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2878)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{!693, !698, !2858}
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2768, line: 119, size: 1152, elements: !2860)
!2860 = !{!2861, !2862, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2874, !2875, !2876, !2877}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2859, file: !2768, line: 121, baseType: !2771, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2859, file: !2768, line: 123, baseType: !2863, size: 64, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2306, line: 149, baseType: !758)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2859, file: !2768, line: 124, baseType: !2775, size: 64, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2859, file: !2768, line: 125, baseType: !2777, size: 32, offset: 192)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2859, file: !2768, line: 132, baseType: !2779, size: 32, offset: 224)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2859, file: !2768, line: 133, baseType: !2781, size: 32, offset: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2859, file: !2768, line: 135, baseType: !693, size: 32, offset: 288)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2859, file: !2768, line: 136, baseType: !2771, size: 64, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2859, file: !2768, line: 137, baseType: !2305, size: 64, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2859, file: !2768, line: 143, baseType: !2786, size: 64, offset: 448)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2859, file: !2768, line: 144, baseType: !2873, size: 64, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2306, line: 180, baseType: !760)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2859, file: !2768, line: 152, baseType: !2790, size: 128, offset: 576)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2859, file: !2768, line: 153, baseType: !2790, size: 128, offset: 704)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2859, file: !2768, line: 154, baseType: !2790, size: 128, offset: 832)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2859, file: !2768, line: 164, baseType: !2800, size: 192, offset: 960)
!2878 = !{!2879, !2880}
!2879 = !DILocalVariable(name: "__path", arg: 1, scope: !2855, file: !2763, line: 502, type: !698)
!2880 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2855, file: !2763, line: 502, type: !2858)
!2881 = !DILocation(line: 0, scope: !2855)
!2882 = !DILocation(line: 504, column: 10, scope: !2855)
!2883 = !DILocation(line: 504, column: 3, scope: !2855)
!2884 = distinct !DISubprogram(name: "lstat64", scope: !2763, file: !2763, line: 509, type: !2856, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2885)
!2885 = !{!2886, !2887}
!2886 = !DILocalVariable(name: "__path", arg: 1, scope: !2884, file: !2763, line: 509, type: !698)
!2887 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2884, file: !2763, line: 509, type: !2858)
!2888 = !DILocation(line: 0, scope: !2884)
!2889 = !DILocation(line: 511, column: 10, scope: !2884)
!2890 = !DILocation(line: 511, column: 3, scope: !2884)
!2891 = distinct !DISubprogram(name: "fstat64", scope: !2763, file: !2763, line: 516, type: !2892, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2894)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!693, !693, !2858}
!2894 = !{!2895, !2896}
!2895 = !DILocalVariable(name: "__fd", arg: 1, scope: !2891, file: !2763, line: 516, type: !693)
!2896 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2891, file: !2763, line: 516, type: !2858)
!2897 = !DILocation(line: 0, scope: !2891)
!2898 = !DILocation(line: 518, column: 10, scope: !2891)
!2899 = !DILocation(line: 518, column: 3, scope: !2891)
!2900 = distinct !DISubprogram(name: "fstatat64", scope: !2763, file: !2763, line: 523, type: !2901, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2903)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!693, !693, !698, !2858, !693}
!2903 = !{!2904, !2905, !2906, !2907}
!2904 = !DILocalVariable(name: "__fd", arg: 1, scope: !2900, file: !2763, line: 523, type: !693)
!2905 = !DILocalVariable(name: "__filename", arg: 2, scope: !2900, file: !2763, line: 523, type: !698)
!2906 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2900, file: !2763, line: 523, type: !2858)
!2907 = !DILocalVariable(name: "__flag", arg: 4, scope: !2900, file: !2763, line: 523, type: !693)
!2908 = !DILocation(line: 0, scope: !2900)
!2909 = !DILocation(line: 526, column: 10, scope: !2900)
!2910 = !DILocation(line: 526, column: 3, scope: !2900)
!2911 = distinct !DISubprogram(name: "init_empty_tree_cfg_for_function", scope: !3, file: !3, line: 127, type: !2912, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2914)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{null, !1502}
!2914 = !{!2915}
!2915 = !DILocalVariable(name: "fn", arg: 1, scope: !2911, file: !3, line: 127, type: !1502)
!2916 = !DILocation(line: 0, scope: !2911)
!2917 = !DILocation(line: 130, column: 3, scope: !2911)
!2918 = !DILocation(line: 131, column: 3, scope: !2911)
!2919 = !DILocation(line: 131, column: 36, scope: !2911)
!2920 = !DILocation(line: 132, column: 3, scope: !2911)
!2921 = !DILocation(line: 132, column: 36, scope: !2911)
!2922 = !DILocation(line: 133, column: 3, scope: !2911)
!2923 = !DILocation(line: 133, column: 38, scope: !2911)
!2924 = !DILocation(line: 135, column: 7, scope: !2911)
!2925 = !DILocation(line: 134, column: 3, scope: !2911)
!2926 = !DILocation(line: 135, column: 5, scope: !2911)
!2927 = !DILocation(line: 136, column: 3, scope: !2911)
!2928 = !DILocation(line: 142, column: 7, scope: !2911)
!2929 = !DILocation(line: 141, column: 3, scope: !2911)
!2930 = !DILocation(line: 142, column: 5, scope: !2911)
!2931 = !DILocation(line: 143, column: 3, scope: !2911)
!2932 = !DILocation(line: 147, column: 3, scope: !2911)
!2933 = !DILocation(line: 149, column: 3, scope: !2911)
!2934 = !DILocation(line: 153, column: 7, scope: !2911)
!2935 = !DILocation(line: 152, column: 3, scope: !2911)
!2936 = !DILocation(line: 152, column: 38, scope: !2911)
!2937 = !DILocation(line: 153, column: 5, scope: !2911)
!2938 = !DILocation(line: 155, column: 7, scope: !2911)
!2939 = !DILocation(line: 154, column: 3, scope: !2911)
!2940 = !DILocation(line: 154, column: 37, scope: !2911)
!2941 = !DILocation(line: 155, column: 5, scope: !2911)
!2942 = !DILocation(line: 156, column: 1, scope: !2911)
!2943 = distinct !DISubprogram(name: "VEC_basic_block_gc_alloc", scope: !382, file: !382, line: 282, type: !2944, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2946)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!1673, !693}
!2946 = !{!2947}
!2947 = !DILocalVariable(name: "alloc_", arg: 1, scope: !2943, file: !382, line: 282, type: !693)
!2948 = !DILocation(line: 0, scope: !2943)
!2949 = !DILocation(line: 282, column: 1, scope: !2943)
!2950 = distinct !DISubprogram(name: "VEC_basic_block_gc_safe_grow_cleared", scope: !382, file: !382, line: 282, type: !2951, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2954)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{null, !2953, !693}
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!2954 = !{!2955, !2956, !2957}
!2955 = !DILocalVariable(name: "vec_", arg: 1, scope: !2950, file: !382, line: 282, type: !2953)
!2956 = !DILocalVariable(name: "size_", arg: 2, scope: !2950, file: !382, line: 282, type: !693)
!2957 = !DILocalVariable(name: "oldsize", scope: !2950, file: !382, line: 282, type: !693)
!2958 = !DILocation(line: 0, scope: !2950)
!2959 = !DILocation(line: 282, column: 1, scope: !2950)
!2960 = distinct !DISubprogram(name: "VEC_basic_block_base_replace", scope: !382, file: !382, line: 281, type: !2961, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2964)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!1670, !2963, !7, !1670}
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!2964 = !{!2965, !2966, !2967, !2968}
!2965 = !DILocalVariable(name: "vec_", arg: 1, scope: !2960, file: !382, line: 281, type: !2963)
!2966 = !DILocalVariable(name: "ix_", arg: 2, scope: !2960, file: !382, line: 281, type: !7)
!2967 = !DILocalVariable(name: "obj_", arg: 3, scope: !2960, file: !382, line: 281, type: !1670)
!2968 = !DILocalVariable(name: "old_obj_", scope: !2960, file: !382, line: 281, type: !1670)
!2969 = !DILocation(line: 0, scope: !2960)
!2970 = !DILocation(line: 281, column: 1, scope: !2960)
!2971 = distinct !DISubprogram(name: "init_empty_tree_cfg", scope: !3, file: !3, line: 159, type: !2972, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{null}
!2974 = !DILocation(line: 161, column: 37, scope: !2971)
!2975 = !DILocation(line: 161, column: 3, scope: !2971)
!2976 = !DILocation(line: 162, column: 1, scope: !2971)
!2977 = distinct !DISubprogram(name: "execute_build_cfg", scope: !3, file: !3, line: 234, type: !2478, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2978)
!2978 = !{!2979}
!2979 = !DILocalVariable(name: "body", scope: !2977, file: !3, line: 236, type: !1018)
!2980 = !DILocation(line: 236, column: 34, scope: !2977)
!2981 = !DILocation(line: 236, column: 21, scope: !2977)
!2982 = !DILocation(line: 0, scope: !2977)
!2983 = !DILocation(line: 238, column: 3, scope: !2977)
!2984 = !DILocation(line: 239, column: 20, scope: !2977)
!2985 = !DILocation(line: 239, column: 3, scope: !2977)
!2986 = !DILocation(line: 240, column: 7, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 240, column: 7)
!2988 = !DILocation(line: 240, column: 17, scope: !2987)
!2989 = !DILocation(line: 240, column: 21, scope: !2987)
!2990 = !DILocation(line: 240, column: 32, scope: !2987)
!2991 = !DILocation(line: 240, column: 7, scope: !2977)
!2992 = !DILocation(line: 242, column: 7, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 241, column: 5)
!2994 = !DILocation(line: 243, column: 26, scope: !2993)
!2995 = !DILocation(line: 243, column: 37, scope: !2993)
!2996 = !DILocation(line: 243, column: 7, scope: !2993)
!2997 = !DILocation(line: 244, column: 5, scope: !2993)
!2998 = !DILocation(line: 245, column: 3, scope: !2977)
!2999 = distinct !DISubprogram(name: "fold_cond_expr_cond", scope: !3, file: !3, line: 470, type: !2972, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3000)
!3000 = !{!3001, !3002, !3006, !3009, !3010, !3011}
!3001 = !DILocalVariable(name: "bb", scope: !2999, file: !3, line: 472, type: !1670)
!3002 = !DILocalVariable(name: "stmt", scope: !3003, file: !3, line: 476, type: !1028)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 475, column: 5)
!3004 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 474, column: 3)
!3005 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 474, column: 3)
!3006 = !DILocalVariable(name: "loc", scope: !3007, file: !3, line: 480, type: !829)
!3007 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 479, column: 2)
!3008 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 478, column: 11)
!3009 = !DILocalVariable(name: "cond", scope: !3007, file: !3, line: 481, type: !704)
!3010 = !DILocalVariable(name: "zerop", scope: !3007, file: !3, line: 482, type: !692)
!3011 = !DILocalVariable(name: "onep", scope: !3007, file: !3, line: 482, type: !692)
!3012 = !DILocation(line: 474, column: 3, scope: !3005)
!3013 = !DILocation(line: 474, column: 3, scope: !3004)
!3014 = !DILocation(line: 0, scope: !3005)
!3015 = !DILocation(line: 0, scope: !2999)
!3016 = !DILocation(line: 476, column: 21, scope: !3003)
!3017 = !DILocation(line: 0, scope: !3003)
!3018 = !DILocation(line: 478, column: 11, scope: !3008)
!3019 = !DILocation(line: 478, column: 16, scope: !3008)
!3020 = !DILocation(line: 478, column: 19, scope: !3008)
!3021 = !DILocation(line: 478, column: 38, scope: !3008)
!3022 = !DILocation(line: 478, column: 11, scope: !3003)
!3023 = !DILocation(line: 480, column: 21, scope: !3007)
!3024 = !DILocation(line: 0, scope: !3007)
!3025 = !DILocation(line: 484, column: 4, scope: !3007)
!3026 = !DILocation(line: 485, column: 33, scope: !3007)
!3027 = !DILocation(line: 485, column: 58, scope: !3007)
!3028 = !DILocation(line: 486, column: 10, scope: !3007)
!3029 = !DILocation(line: 486, column: 34, scope: !3007)
!3030 = !DILocation(line: 485, column: 11, scope: !3007)
!3031 = !DILocation(line: 487, column: 8, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 487, column: 8)
!3033 = !DILocation(line: 487, column: 8, scope: !3007)
!3034 = !DILocation(line: 489, column: 16, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 488, column: 6)
!3036 = !DILocation(line: 490, column: 15, scope: !3035)
!3037 = !DILocation(line: 491, column: 6, scope: !3035)
!3038 = !DILocation(line: 0, scope: !3032)
!3039 = !DILocation(line: 495, column: 42, scope: !3007)
!3040 = !DILocation(line: 495, column: 36, scope: !3007)
!3041 = !DILocation(line: 495, column: 4, scope: !3007)
!3042 = !DILocation(line: 498, column: 8, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 498, column: 8)
!3044 = !DILocation(line: 498, column: 8, scope: !3007)
!3045 = !DILocation(line: 499, column: 6, scope: !3043)
!3046 = !DILocation(line: 500, column: 13, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 500, column: 13)
!3048 = !DILocation(line: 500, column: 13, scope: !3043)
!3049 = !DILocation(line: 501, column: 6, scope: !3047)
!3050 = !DILocation(line: 0, scope: !3004)
!3051 = distinct !{!3051, !3012, !3052}
!3052 = !DILocation(line: 503, column: 5, scope: !3005)
!3053 = !DILocation(line: 504, column: 1, scope: !2999)
!3054 = distinct !DISubprogram(name: "last_stmt", scope: !3, file: !3, line: 2363, type: !3055, scopeLine: 2364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3057)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{!1028, !1670}
!3057 = !{!3058, !3059, !3060}
!3058 = !DILocalVariable(name: "bb", arg: 1, scope: !3054, file: !3, line: 2363, type: !1670)
!3059 = !DILocalVariable(name: "i", scope: !3054, file: !3, line: 2365, type: !2222)
!3060 = !DILocalVariable(name: "stmt", scope: !3054, file: !3, line: 2366, type: !1028)
!3061 = !DILocation(line: 0, scope: !3054)
!3062 = !DILocation(line: 2365, column: 3, scope: !3054)
!3063 = !DILocation(line: 2365, column: 28, scope: !3054)
!3064 = !DILocation(line: 2368, column: 3, scope: !3054)
!3065 = !DILocation(line: 2368, column: 11, scope: !3054)
!3066 = !DILocation(line: 2368, column: 25, scope: !3054)
!3067 = !DILocation(line: 2368, column: 53, scope: !3054)
!3068 = !DILocation(line: 2368, column: 28, scope: !3054)
!3069 = !DILocation(line: 2370, column: 7, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 2369, column: 5)
!3071 = distinct !{!3071, !3064, !3072}
!3072 = !DILocation(line: 2372, column: 5, scope: !3054)
!3073 = !DILocation(line: 2374, column: 1, scope: !3054)
!3074 = !DILocation(line: 2373, column: 3, scope: !3054)
!3075 = distinct !DISubprogram(name: "gimple_code", scope: !613, file: !613, line: 1052, type: !3076, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3079)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!612, !3078}
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !705, line: 60, baseType: !2204)
!3079 = !{!3080}
!3080 = !DILocalVariable(name: "g", arg: 1, scope: !3075, file: !613, line: 1052, type: !3078)
!3081 = !DILocation(line: 0, scope: !3075)
!3082 = !DILocation(line: 1054, column: 20, scope: !3075)
!3083 = !DILocation(line: 1054, column: 3, scope: !3075)
!3084 = distinct !DISubprogram(name: "gimple_location", scope: !613, file: !613, line: 1139, type: !3085, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3087)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!829, !3078}
!3087 = !{!3088}
!3088 = !DILocalVariable(name: "g", arg: 1, scope: !3084, file: !613, line: 1139, type: !3078)
!3089 = !DILocation(line: 0, scope: !3084)
!3090 = !DILocation(line: 1141, column: 20, scope: !3084)
!3091 = !DILocation(line: 1141, column: 3, scope: !3084)
!3092 = distinct !DISubprogram(name: "gimple_cond_code", scope: !613, file: !613, line: 2221, type: !3093, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3095)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!141, !3078}
!3095 = !{!3096}
!3096 = !DILocalVariable(name: "gs", arg: 1, scope: !3092, file: !613, line: 2221, type: !3078)
!3097 = !DILocation(line: 0, scope: !3092)
!3098 = !DILocation(line: 2224, column: 38, scope: !3092)
!3099 = !DILocation(line: 2224, column: 3, scope: !3092)
!3100 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !613, file: !613, line: 2241, type: !3101, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3103)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{!704, !3078}
!3103 = !{!3104}
!3104 = !DILocalVariable(name: "gs", arg: 1, scope: !3100, file: !613, line: 2241, type: !3078)
!3105 = !DILocation(line: 0, scope: !3100)
!3106 = !DILocation(line: 2244, column: 10, scope: !3100)
!3107 = !DILocation(line: 2244, column: 3, scope: !3100)
!3108 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !613, file: !613, line: 2271, type: !3101, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3109)
!3109 = !{!3110}
!3110 = !DILocalVariable(name: "gs", arg: 1, scope: !3108, file: !613, line: 2271, type: !3078)
!3111 = !DILocation(line: 0, scope: !3108)
!3112 = !DILocation(line: 2274, column: 10, scope: !3108)
!3113 = !DILocation(line: 2274, column: 3, scope: !3108)
!3114 = distinct !DISubprogram(name: "gimple_cond_make_false", scope: !613, file: !613, line: 2346, type: !3115, scopeLine: 2347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3117)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{null, !1028}
!3117 = !{!3118}
!3118 = !DILocalVariable(name: "gs", arg: 1, scope: !3114, file: !613, line: 2346, type: !1028)
!3119 = !DILocation(line: 0, scope: !3114)
!3120 = !DILocation(line: 2348, column: 28, scope: !3114)
!3121 = !DILocation(line: 2348, column: 3, scope: !3114)
!3122 = !DILocation(line: 2349, column: 28, scope: !3114)
!3123 = !DILocation(line: 2349, column: 3, scope: !3114)
!3124 = !DILocation(line: 2350, column: 14, scope: !3114)
!3125 = !DILocation(line: 2350, column: 22, scope: !3114)
!3126 = !DILocation(line: 2351, column: 1, scope: !3114)
!3127 = distinct !DISubprogram(name: "gimple_cond_make_true", scope: !613, file: !613, line: 2357, type: !3115, scopeLine: 2358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3128)
!3128 = !{!3129}
!3129 = !DILocalVariable(name: "gs", arg: 1, scope: !3127, file: !613, line: 2357, type: !1028)
!3130 = !DILocation(line: 0, scope: !3127)
!3131 = !DILocation(line: 2359, column: 28, scope: !3127)
!3132 = !DILocation(line: 2359, column: 3, scope: !3127)
!3133 = !DILocation(line: 2360, column: 28, scope: !3127)
!3134 = !DILocation(line: 2360, column: 3, scope: !3127)
!3135 = !DILocation(line: 2361, column: 14, scope: !3127)
!3136 = !DILocation(line: 2361, column: 22, scope: !3127)
!3137 = !DILocation(line: 2362, column: 1, scope: !3127)
!3138 = distinct !DISubprogram(name: "start_recording_case_labels", scope: !3, file: !3, line: 847, type: !2972, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!3139 = !DILocation(line: 849, column: 3, scope: !3138)
!3140 = !DILocation(line: 850, column: 19, scope: !3138)
!3141 = !DILocation(line: 850, column: 17, scope: !3138)
!3142 = !DILocation(line: 851, column: 1, scope: !3138)
!3143 = distinct !DISubprogram(name: "end_recording_case_labels", scope: !3, file: !3, line: 864, type: !2972, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!3144 = !DILocation(line: 866, column: 25, scope: !3143)
!3145 = !DILocation(line: 866, column: 3, scope: !3143)
!3146 = !DILocation(line: 867, column: 24, scope: !3143)
!3147 = !DILocation(line: 867, column: 3, scope: !3143)
!3148 = !DILocation(line: 868, column: 17, scope: !3143)
!3149 = !DILocation(line: 869, column: 1, scope: !3143)
!3150 = distinct !DISubprogram(name: "edge_to_cases_cleanup", scope: !3, file: !3, line: 829, type: !3151, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3153)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{!692, !1387, !1609, !697}
!3153 = !{!3154, !3155, !3156, !3157, !3158}
!3154 = !DILocalVariable(name: "key", arg: 1, scope: !3150, file: !3, line: 829, type: !1387)
!3155 = !DILocalVariable(name: "value", arg: 2, scope: !3150, file: !3, line: 829, type: !1609)
!3156 = !DILocalVariable(name: "data", arg: 3, scope: !3150, file: !3, line: 830, type: !697)
!3157 = !DILocalVariable(name: "t", scope: !3150, file: !3, line: 832, type: !704)
!3158 = !DILocalVariable(name: "next", scope: !3150, file: !3, line: 832, type: !704)
!3159 = !DILocation(line: 0, scope: !3150)
!3160 = !DILocation(line: 834, column: 19, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 834, column: 3)
!3162 = !DILocation(line: 834, column: 8, scope: !3161)
!3163 = !DILocation(line: 0, scope: !3161)
!3164 = !DILocation(line: 834, column: 3, scope: !3161)
!3165 = !DILocation(line: 836, column: 14, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 835, column: 5)
!3167 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 834, column: 3)
!3168 = !DILocation(line: 837, column: 22, scope: !3166)
!3169 = !DILocation(line: 834, column: 3, scope: !3167)
!3170 = distinct !{!3170, !3164, !3171}
!3171 = !DILocation(line: 838, column: 5, scope: !3161)
!3172 = !DILocation(line: 840, column: 10, scope: !3150)
!3173 = !DILocation(line: 841, column: 3, scope: !3150)
!3174 = distinct !DISubprogram(name: "label_to_block_fn", scope: !3, file: !3, line: 939, type: !3175, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3177)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!1670, !1502, !704}
!3177 = !{!3178, !3179, !3180, !3181, !3184}
!3178 = !DILocalVariable(name: "ifun", arg: 1, scope: !3174, file: !3, line: 939, type: !1502)
!3179 = !DILocalVariable(name: "dest", arg: 2, scope: !3174, file: !3, line: 939, type: !704)
!3180 = !DILocalVariable(name: "uid", scope: !3174, file: !3, line: 941, type: !693)
!3181 = !DILocalVariable(name: "gsi", scope: !3182, file: !3, line: 948, type: !2222)
!3182 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 947, column: 5)
!3183 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 946, column: 7)
!3184 = !DILocalVariable(name: "stmt", scope: !3182, file: !3, line: 949, type: !1028)
!3185 = !DILocation(line: 0, scope: !3174)
!3186 = !DILocation(line: 941, column: 13, scope: !3174)
!3187 = !DILocation(line: 946, column: 8, scope: !3183)
!3188 = !DILocation(line: 946, column: 19, scope: !3183)
!3189 = !DILocation(line: 946, column: 22, scope: !3183)
!3190 = !DILocation(line: 946, column: 41, scope: !3183)
!3191 = !DILocation(line: 946, column: 34, scope: !3183)
!3192 = !DILocation(line: 946, column: 7, scope: !3174)
!3193 = !DILocation(line: 948, column: 7, scope: !3182)
!3194 = !DILocation(line: 948, column: 48, scope: !3182)
!3195 = !DILocation(line: 0, scope: !3182)
!3196 = !DILocation(line: 948, column: 34, scope: !3182)
!3197 = !DILocation(line: 951, column: 14, scope: !3182)
!3198 = !DILocation(line: 952, column: 7, scope: !3182)
!3199 = !DILocation(line: 953, column: 13, scope: !3182)
!3200 = !DILocation(line: 954, column: 5, scope: !3183)
!3201 = !DILocation(line: 954, column: 5, scope: !3182)
!3202 = !DILocation(line: 955, column: 7, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 955, column: 7)
!3204 = !DILocation(line: 956, column: 7, scope: !3203)
!3205 = !DILocation(line: 955, column: 7, scope: !3174)
!3206 = !DILocation(line: 958, column: 10, scope: !3174)
!3207 = !DILocation(line: 958, column: 3, scope: !3174)
!3208 = !DILocation(line: 959, column: 1, scope: !3174)
!3209 = distinct !DISubprogram(name: "gsi_start_bb", scope: !613, file: !613, line: 4418, type: !3210, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3212)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{!2222, !1670}
!3212 = !{!3213, !3214, !3215}
!3213 = !DILocalVariable(name: "bb", arg: 1, scope: !3209, file: !613, line: 4418, type: !1670)
!3214 = !DILocalVariable(name: "i", scope: !3209, file: !613, line: 4420, type: !2222)
!3215 = !DILocalVariable(name: "seq", scope: !3209, file: !613, line: 4421, type: !1018)
!3216 = !DILocation(line: 0, scope: !3209)
!3217 = !DILocation(line: 4420, column: 24, scope: !3209)
!3218 = !DILocation(line: 4423, column: 9, scope: !3209)
!3219 = !DILocation(line: 4424, column: 11, scope: !3209)
!3220 = !DILocation(line: 4424, column: 5, scope: !3209)
!3221 = !DILocation(line: 4424, column: 9, scope: !3209)
!3222 = !DILocation(line: 4425, column: 5, scope: !3209)
!3223 = !DILocation(line: 4425, column: 9, scope: !3209)
!3224 = !DILocation(line: 4426, column: 5, scope: !3209)
!3225 = !DILocation(line: 4426, column: 8, scope: !3209)
!3226 = !DILocation(line: 4429, column: 1, scope: !3209)
!3227 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !382, file: !382, line: 281, type: !3228, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3232)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{!1670, !3230, !7}
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1678)
!3232 = !{!3233, !3234}
!3233 = !DILocalVariable(name: "vec_", arg: 1, scope: !3227, file: !382, line: 281, type: !3230)
!3234 = !DILocalVariable(name: "ix_", arg: 2, scope: !3227, file: !382, line: 281, type: !7)
!3235 = !DILocation(line: 0, scope: !3227)
!3236 = !DILocation(line: 281, column: 1, scope: !3227)
!3237 = distinct !DISubprogram(name: "VEC_basic_block_base_length", scope: !382, file: !382, line: 281, type: !3238, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3240)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{!7, !3230}
!3240 = !{!3241}
!3241 = !DILocalVariable(name: "vec_", arg: 1, scope: !3237, file: !382, line: 281, type: !3230)
!3242 = !DILocation(line: 0, scope: !3237)
!3243 = !DILocation(line: 281, column: 1, scope: !3237)
!3244 = distinct !DISubprogram(name: "make_abnormal_goto_edges", scope: !3, file: !3, line: 965, type: !3245, scopeLine: 966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3247)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{null, !1670, !692}
!3247 = !{!3248, !3249, !3250, !3251, !3252, !3258}
!3248 = !DILocalVariable(name: "bb", arg: 1, scope: !3244, file: !3, line: 965, type: !1670)
!3249 = !DILocalVariable(name: "for_call", arg: 2, scope: !3244, file: !3, line: 965, type: !692)
!3250 = !DILocalVariable(name: "target_bb", scope: !3244, file: !3, line: 967, type: !1670)
!3251 = !DILocalVariable(name: "gsi", scope: !3244, file: !3, line: 968, type: !2222)
!3252 = !DILocalVariable(name: "label_stmt", scope: !3253, file: !3, line: 973, type: !1028)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 972, column: 7)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 971, column: 5)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 971, column: 5)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 970, column: 3)
!3257 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 970, column: 3)
!3258 = !DILocalVariable(name: "target", scope: !3253, file: !3, line: 974, type: !704)
!3259 = !DILocation(line: 0, scope: !3244)
!3260 = !DILocation(line: 968, column: 3, scope: !3244)
!3261 = !DILocation(line: 970, column: 3, scope: !3257)
!3262 = !DILocation(line: 0, scope: !3255)
!3263 = !DILocation(line: 0, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 983, column: 6)
!3265 = !DILocation(line: 970, column: 3, scope: !3256)
!3266 = !DILocation(line: 0, scope: !3257)
!3267 = !DILocation(line: 971, column: 16, scope: !3255)
!3268 = !DILocation(line: 971, column: 10, scope: !3255)
!3269 = !DILocation(line: 971, column: 43, scope: !3254)
!3270 = !DILocation(line: 971, column: 42, scope: !3254)
!3271 = !DILocation(line: 971, column: 5, scope: !3255)
!3272 = !DILocation(line: 973, column: 22, scope: !3253)
!3273 = !DILocation(line: 0, scope: !3253)
!3274 = !DILocation(line: 976, column: 6, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 976, column: 6)
!3276 = !DILocation(line: 976, column: 31, scope: !3275)
!3277 = !DILocation(line: 976, column: 6, scope: !3253)
!3278 = !DILocation(line: 979, column: 11, scope: !3253)
!3279 = !DILocation(line: 984, column: 10, scope: !3264)
!3280 = !DILocation(line: 984, column: 33, scope: !3264)
!3281 = !DILocation(line: 986, column: 6, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 985, column: 4)
!3283 = !DILocation(line: 987, column: 6, scope: !3282)
!3284 = !DILocation(line: 971, column: 60, scope: !3254)
!3285 = !DILocation(line: 971, column: 5, scope: !3254)
!3286 = distinct !{!3286, !3271, !3287}
!3287 = !DILocation(line: 989, column: 7, scope: !3255)
!3288 = !DILocation(line: 983, column: 7, scope: !3264)
!3289 = !DILocation(line: 983, column: 29, scope: !3264)
!3290 = !DILocation(line: 0, scope: !3256)
!3291 = distinct !{!3291, !3261, !3292}
!3292 = !DILocation(line: 989, column: 7, scope: !3257)
!3293 = !DILocation(line: 990, column: 1, scope: !3244)
!3294 = distinct !DISubprogram(name: "gsi_end_p", scope: !613, file: !613, line: 4467, type: !3295, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3297)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!692, !2222}
!3297 = !{!3298}
!3298 = !DILocalVariable(name: "i", arg: 1, scope: !3294, file: !613, line: 4467, type: !2222)
!3299 = !DILocation(line: 4467, column: 33, scope: !3294)
!3300 = !DILocation(line: 4469, column: 12, scope: !3294)
!3301 = !DILocation(line: 4469, column: 16, scope: !3294)
!3302 = !DILocation(line: 4469, column: 10, scope: !3294)
!3303 = !DILocation(line: 4469, column: 3, scope: !3294)
!3304 = distinct !DISubprogram(name: "gsi_stmt", scope: !613, file: !613, line: 4501, type: !3305, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3307)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!1028, !2222}
!3307 = !{!3308}
!3308 = !DILocalVariable(name: "i", arg: 1, scope: !3304, file: !613, line: 4501, type: !2222)
!3309 = !DILocation(line: 4501, column: 32, scope: !3304)
!3310 = !DILocation(line: 4503, column: 12, scope: !3304)
!3311 = !DILocation(line: 4503, column: 17, scope: !3304)
!3312 = !DILocation(line: 4503, column: 3, scope: !3304)
!3313 = distinct !DISubprogram(name: "gimple_label_label", scope: !613, file: !613, line: 2444, type: !3101, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3314)
!3314 = !{!3315}
!3315 = !DILocalVariable(name: "gs", arg: 1, scope: !3313, file: !613, line: 2444, type: !3078)
!3316 = !DILocation(line: 0, scope: !3313)
!3317 = !DILocation(line: 2447, column: 10, scope: !3313)
!3318 = !DILocation(line: 2447, column: 3, scope: !3313)
!3319 = distinct !DISubprogram(name: "gsi_next", scope: !613, file: !613, line: 4485, type: !3320, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3323)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{null, !3322}
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!3323 = !{!3324}
!3324 = !DILocalVariable(name: "i", arg: 1, scope: !3319, file: !613, line: 4485, type: !3322)
!3325 = !DILocation(line: 0, scope: !3319)
!3326 = !DILocation(line: 4487, column: 15, scope: !3319)
!3327 = !DILocation(line: 4487, column: 20, scope: !3319)
!3328 = !DILocation(line: 4487, column: 10, scope: !3319)
!3329 = !DILocation(line: 4488, column: 1, scope: !3319)
!3330 = distinct !DISubprogram(name: "cleanup_dead_labels", scope: !3, file: !3, line: 1135, type: !2972, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3331)
!3331 = !{!3332, !3333, !3337, !3341, !3342, !3346, !3349, !3350, !3352, !3353, !3357, !3358, !3360, !3361, !3365, !3366, !3369, !3373, !3374, !3378}
!3332 = !DILocalVariable(name: "bb", scope: !3330, file: !3, line: 1137, type: !1670)
!3333 = !DILocalVariable(name: "i", scope: !3334, file: !3, line: 1144, type: !2222)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 1143, column: 5)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1142, column: 3)
!3336 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1142, column: 3)
!3337 = !DILocalVariable(name: "label", scope: !3338, file: !3, line: 1148, type: !704)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 1147, column: 2)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 1146, column: 7)
!3340 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 1146, column: 7)
!3341 = !DILocalVariable(name: "stmt", scope: !3338, file: !3, line: 1149, type: !1028)
!3342 = !DILocalVariable(name: "stmt", scope: !3343, file: !3, line: 1180, type: !1028)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 1179, column: 5)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1178, column: 3)
!3345 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1178, column: 3)
!3346 = !DILocalVariable(name: "true_label", scope: !3347, file: !3, line: 1188, type: !704)
!3347 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 1187, column: 4)
!3348 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 1185, column: 2)
!3349 = !DILocalVariable(name: "false_label", scope: !3347, file: !3, line: 1189, type: !704)
!3350 = !DILocalVariable(name: "i", scope: !3351, file: !3, line: 1200, type: !1173)
!3351 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 1199, column: 4)
!3352 = !DILocalVariable(name: "n", scope: !3351, file: !3, line: 1200, type: !1173)
!3353 = !DILocalVariable(name: "case_label", scope: !3354, file: !3, line: 1205, type: !704)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 1204, column: 8)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 1203, column: 6)
!3356 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 1203, column: 6)
!3357 = !DILocalVariable(name: "label", scope: !3354, file: !3, line: 1206, type: !704)
!3358 = !DILocalVariable(name: "i", scope: !3359, file: !3, line: 1214, type: !693)
!3359 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 1213, column: 4)
!3360 = !DILocalVariable(name: "n", scope: !3359, file: !3, line: 1214, type: !693)
!3361 = !DILocalVariable(name: "cons", scope: !3362, file: !3, line: 1218, type: !704)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 1217, column: 8)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 1216, column: 6)
!3364 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 1216, column: 6)
!3365 = !DILocalVariable(name: "label", scope: !3362, file: !3, line: 1219, type: !704)
!3366 = !DILocalVariable(name: "new_dest", scope: !3367, file: !3, line: 1230, type: !704)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 1229, column: 6)
!3368 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 1228, column: 15)
!3369 = !DILocalVariable(name: "i", scope: !3370, file: !3, line: 1248, type: !2222)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 1247, column: 5)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 1246, column: 3)
!3372 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1246, column: 3)
!3373 = !DILocalVariable(name: "label_for_this_bb", scope: !3370, file: !3, line: 1249, type: !704)
!3374 = !DILocalVariable(name: "label", scope: !3375, file: !3, line: 1260, type: !704)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 1259, column: 2)
!3376 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1258, column: 7)
!3377 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 1258, column: 7)
!3378 = !DILocalVariable(name: "stmt", scope: !3375, file: !3, line: 1261, type: !1028)
!3379 = !DILocation(line: 1138, column: 18, scope: !3330)
!3380 = !DILocation(line: 1138, column: 16, scope: !3330)
!3381 = !DILocation(line: 1142, column: 3, scope: !3336)
!3382 = !DILocation(line: 0, scope: !3334)
!3383 = !DILocation(line: 0, scope: !3340)
!3384 = !DILocation(line: 1142, column: 3, scope: !3335)
!3385 = !DILocation(line: 0, scope: !3336)
!3386 = !DILocation(line: 0, scope: !3330)
!3387 = !DILocation(line: 1144, column: 7, scope: !3334)
!3388 = !DILocation(line: 1146, column: 16, scope: !3340)
!3389 = !DILocation(line: 0, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1158, column: 8)
!3391 = !DILocation(line: 1146, column: 12, scope: !3340)
!3392 = !DILocation(line: 1146, column: 36, scope: !3339)
!3393 = !DILocation(line: 1146, column: 35, scope: !3339)
!3394 = !DILocation(line: 1146, column: 7, scope: !3340)
!3395 = !DILocation(line: 1149, column: 18, scope: !3338)
!3396 = !DILocation(line: 0, scope: !3338)
!3397 = !DILocation(line: 1151, column: 8, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1151, column: 8)
!3399 = !DILocation(line: 1151, column: 27, scope: !3398)
!3400 = !DILocation(line: 1151, column: 8, scope: !3338)
!3401 = !DILocation(line: 1154, column: 12, scope: !3338)
!3402 = !DILocation(line: 1158, column: 9, scope: !3390)
!3403 = !DILocation(line: 1158, column: 26, scope: !3390)
!3404 = !DILocation(line: 1158, column: 33, scope: !3390)
!3405 = !DILocation(line: 1158, column: 8, scope: !3338)
!3406 = !DILocation(line: 1160, column: 38, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 1159, column: 6)
!3408 = !DILocation(line: 1161, column: 8, scope: !3407)
!3409 = !DILocation(line: 1167, column: 9, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 1167, column: 8)
!3411 = !DILocation(line: 1168, column: 8, scope: !3410)
!3412 = !DILocation(line: 1168, column: 11, scope: !3410)
!3413 = !DILocation(line: 1167, column: 8, scope: !3338)
!3414 = !DILocation(line: 1170, column: 38, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 1169, column: 6)
!3416 = !DILocation(line: 1171, column: 8, scope: !3415)
!3417 = !DILocation(line: 1146, column: 51, scope: !3339)
!3418 = !DILocation(line: 1146, column: 7, scope: !3339)
!3419 = distinct !{!3419, !3394, !3420}
!3420 = !DILocation(line: 1173, column: 2, scope: !3340)
!3421 = !DILocation(line: 1174, column: 5, scope: !3335)
!3422 = !DILocation(line: 0, scope: !3335)
!3423 = distinct !{!3423, !3381, !3424}
!3424 = !DILocation(line: 1174, column: 5, scope: !3336)
!3425 = !DILocation(line: 1178, column: 3, scope: !3345)
!3426 = !DILocation(line: 1178, column: 3, scope: !3344)
!3427 = !DILocation(line: 0, scope: !3345)
!3428 = !DILocation(line: 1180, column: 21, scope: !3343)
!3429 = !DILocation(line: 0, scope: !3343)
!3430 = !DILocation(line: 1181, column: 12, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 1181, column: 11)
!3432 = !DILocation(line: 1181, column: 11, scope: !3343)
!3433 = !DILocation(line: 1184, column: 15, scope: !3343)
!3434 = !DILocation(line: 1184, column: 7, scope: !3343)
!3435 = !DILocation(line: 1188, column: 24, scope: !3347)
!3436 = !DILocation(line: 0, scope: !3347)
!3437 = !DILocation(line: 1189, column: 25, scope: !3347)
!3438 = !DILocation(line: 1191, column: 10, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 1191, column: 10)
!3440 = !DILocation(line: 1191, column: 10, scope: !3347)
!3441 = !DILocation(line: 1192, column: 42, scope: !3439)
!3442 = !DILocation(line: 1192, column: 8, scope: !3439)
!3443 = !DILocation(line: 1193, column: 10, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 1193, column: 10)
!3445 = !DILocation(line: 1193, column: 10, scope: !3347)
!3446 = !DILocation(line: 1194, column: 43, scope: !3444)
!3447 = !DILocation(line: 1194, column: 8, scope: !3444)
!3448 = !DILocation(line: 1200, column: 20, scope: !3351)
!3449 = !DILocation(line: 0, scope: !3351)
!3450 = !DILocation(line: 1203, column: 11, scope: !3356)
!3451 = !DILocation(line: 0, scope: !3356)
!3452 = !DILocation(line: 1203, column: 20, scope: !3355)
!3453 = !DILocation(line: 1203, column: 6, scope: !3356)
!3454 = !DILocation(line: 1205, column: 48, scope: !3354)
!3455 = !DILocation(line: 1205, column: 21, scope: !3354)
!3456 = !DILocation(line: 0, scope: !3354)
!3457 = !DILocation(line: 1206, column: 34, scope: !3354)
!3458 = !DILocation(line: 1206, column: 16, scope: !3354)
!3459 = !DILocation(line: 1207, column: 27, scope: !3354)
!3460 = !DILocation(line: 1203, column: 25, scope: !3355)
!3461 = !DILocation(line: 1203, column: 6, scope: !3355)
!3462 = distinct !{!3462, !3453, !3463}
!3463 = !DILocation(line: 1208, column: 8, scope: !3356)
!3464 = !DILocation(line: 1214, column: 17, scope: !3359)
!3465 = !DILocation(line: 0, scope: !3359)
!3466 = !DILocation(line: 1216, column: 11, scope: !3364)
!3467 = !DILocation(line: 0, scope: !3364)
!3468 = !DILocation(line: 1216, column: 20, scope: !3363)
!3469 = !DILocation(line: 1216, column: 6, scope: !3364)
!3470 = !DILocation(line: 1218, column: 15, scope: !3362)
!3471 = !DILocation(line: 0, scope: !3362)
!3472 = !DILocation(line: 1219, column: 34, scope: !3362)
!3473 = !DILocation(line: 1219, column: 16, scope: !3362)
!3474 = !DILocation(line: 1220, column: 21, scope: !3362)
!3475 = !DILocation(line: 1216, column: 25, scope: !3363)
!3476 = !DILocation(line: 1216, column: 6, scope: !3363)
!3477 = distinct !{!3477, !3469, !3478}
!3478 = !DILocation(line: 1221, column: 8, scope: !3364)
!3479 = !DILocation(line: 1228, column: 16, scope: !3368)
!3480 = !DILocation(line: 1228, column: 15, scope: !3348)
!3481 = !DILocation(line: 1230, column: 42, scope: !3367)
!3482 = !DILocation(line: 1230, column: 24, scope: !3367)
!3483 = !DILocation(line: 0, scope: !3367)
!3484 = !DILocation(line: 1231, column: 8, scope: !3367)
!3485 = !DILocation(line: 1232, column: 6, scope: !3367)
!3486 = !DILocation(line: 0, scope: !3344)
!3487 = distinct !{!3487, !3425, !3488}
!3488 = !DILocation(line: 1238, column: 5, scope: !3345)
!3489 = !DILocation(line: 1241, column: 3, scope: !3330)
!3490 = !DILocation(line: 1246, column: 3, scope: !3372)
!3491 = !DILocation(line: 0, scope: !3370)
!3492 = !DILocation(line: 0, scope: !3377)
!3493 = !DILocation(line: 1246, column: 3, scope: !3371)
!3494 = !DILocation(line: 0, scope: !3372)
!3495 = !DILocation(line: 1248, column: 7, scope: !3370)
!3496 = !DILocation(line: 1249, column: 32, scope: !3370)
!3497 = !DILocation(line: 1249, column: 49, scope: !3370)
!3498 = !DILocation(line: 1249, column: 56, scope: !3370)
!3499 = !DILocation(line: 1251, column: 12, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 1251, column: 11)
!3501 = !DILocation(line: 1251, column: 11, scope: !3370)
!3502 = !DILocation(line: 1255, column: 36, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 1255, column: 11)
!3504 = !DILocation(line: 1255, column: 12, scope: !3503)
!3505 = !DILocation(line: 1255, column: 11, scope: !3370)
!3506 = !DILocation(line: 1258, column: 16, scope: !3377)
!3507 = !DILocation(line: 1258, column: 12, scope: !3377)
!3508 = !DILocation(line: 1258, column: 36, scope: !3376)
!3509 = !DILocation(line: 1258, column: 35, scope: !3376)
!3510 = !DILocation(line: 1258, column: 7, scope: !3377)
!3511 = !DILocation(line: 1261, column: 18, scope: !3375)
!3512 = !DILocation(line: 0, scope: !3375)
!3513 = !DILocation(line: 1263, column: 8, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 1263, column: 8)
!3515 = !DILocation(line: 1263, column: 27, scope: !3514)
!3516 = !DILocation(line: 1263, column: 8, scope: !3375)
!3517 = !DILocation(line: 1266, column: 12, scope: !3375)
!3518 = !DILocation(line: 1268, column: 14, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 1268, column: 8)
!3520 = !DILocation(line: 1269, column: 8, scope: !3519)
!3521 = !DILocation(line: 1269, column: 12, scope: !3519)
!3522 = !DILocation(line: 1270, column: 8, scope: !3519)
!3523 = !DILocation(line: 1270, column: 11, scope: !3519)
!3524 = !DILocation(line: 1271, column: 8, scope: !3519)
!3525 = !DILocation(line: 1271, column: 11, scope: !3519)
!3526 = !DILocation(line: 1268, column: 8, scope: !3375)
!3527 = !DILocation(line: 1272, column: 6, scope: !3519)
!3528 = !DILocation(line: 1274, column: 6, scope: !3519)
!3529 = distinct !{!3529, !3510, !3530}
!3530 = !DILocation(line: 1275, column: 2, scope: !3377)
!3531 = !DILocation(line: 1276, column: 5, scope: !3371)
!3532 = !DILocation(line: 0, scope: !3371)
!3533 = distinct !{!3533, !3490, !3534}
!3534 = !DILocation(line: 1276, column: 5, scope: !3372)
!3535 = !DILocation(line: 1278, column: 9, scope: !3330)
!3536 = !DILocation(line: 1278, column: 3, scope: !3330)
!3537 = !DILocation(line: 1279, column: 1, scope: !3330)
!3538 = distinct !DISubprogram(name: "gimple_cond_true_label", scope: !613, file: !613, line: 2303, type: !3101, scopeLine: 2304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3539)
!3539 = !{!3540}
!3540 = !DILocalVariable(name: "gs", arg: 1, scope: !3538, file: !613, line: 2303, type: !3078)
!3541 = !DILocation(line: 0, scope: !3538)
!3542 = !DILocation(line: 2306, column: 10, scope: !3538)
!3543 = !DILocation(line: 2306, column: 3, scope: !3538)
!3544 = distinct !DISubprogram(name: "gimple_cond_false_label", scope: !613, file: !613, line: 2336, type: !3101, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3545)
!3545 = !{!3546}
!3546 = !DILocalVariable(name: "gs", arg: 1, scope: !3544, file: !613, line: 2336, type: !3078)
!3547 = !DILocation(line: 0, scope: !3544)
!3548 = !DILocation(line: 2339, column: 10, scope: !3544)
!3549 = !DILocation(line: 2339, column: 3, scope: !3544)
!3550 = distinct !DISubprogram(name: "gimple_cond_set_true_label", scope: !613, file: !613, line: 2314, type: !3551, scopeLine: 2315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3553)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !1028, !704}
!3553 = !{!3554, !3555}
!3554 = !DILocalVariable(name: "gs", arg: 1, scope: !3550, file: !613, line: 2314, type: !1028)
!3555 = !DILocalVariable(name: "label", arg: 2, scope: !3550, file: !613, line: 2314, type: !704)
!3556 = !DILocation(line: 0, scope: !3550)
!3557 = !DILocation(line: 2317, column: 3, scope: !3550)
!3558 = !DILocation(line: 2318, column: 1, scope: !3550)
!3559 = distinct !DISubprogram(name: "main_block_label", scope: !3, file: !3, line: 1061, type: !3560, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3562)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!704, !704}
!3562 = !{!3563, !3564, !3565}
!3563 = !DILocalVariable(name: "label", arg: 1, scope: !3559, file: !3, line: 1061, type: !704)
!3564 = !DILocalVariable(name: "bb", scope: !3559, file: !3, line: 1063, type: !1670)
!3565 = !DILocalVariable(name: "main_label", scope: !3559, file: !3, line: 1064, type: !704)
!3566 = !DILocation(line: 0, scope: !3559)
!3567 = !DILocation(line: 1063, column: 20, scope: !3559)
!3568 = !DILocation(line: 1064, column: 21, scope: !3559)
!3569 = !DILocation(line: 1064, column: 38, scope: !3559)
!3570 = !DILocation(line: 1064, column: 45, scope: !3559)
!3571 = !DILocation(line: 1067, column: 8, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1067, column: 7)
!3573 = !DILocation(line: 1067, column: 7, scope: !3559)
!3574 = !DILocation(line: 1069, column: 37, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1068, column: 5)
!3576 = !DILocation(line: 1073, column: 3, scope: !3559)
!3577 = !DILocation(line: 1073, column: 20, scope: !3559)
!3578 = !DILocation(line: 1071, column: 5, scope: !3575)
!3579 = !DILocation(line: 1073, column: 27, scope: !3559)
!3580 = !DILocation(line: 1073, column: 32, scope: !3559)
!3581 = !DILocation(line: 1074, column: 3, scope: !3559)
!3582 = distinct !DISubprogram(name: "gimple_cond_set_false_label", scope: !613, file: !613, line: 2325, type: !3551, scopeLine: 2326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3583)
!3583 = !{!3584, !3585}
!3584 = !DILocalVariable(name: "gs", arg: 1, scope: !3582, file: !613, line: 2325, type: !1028)
!3585 = !DILocalVariable(name: "label", arg: 2, scope: !3582, file: !613, line: 2325, type: !704)
!3586 = !DILocation(line: 0, scope: !3582)
!3587 = !DILocation(line: 2328, column: 3, scope: !3582)
!3588 = !DILocation(line: 2329, column: 1, scope: !3582)
!3589 = distinct !DISubprogram(name: "gimple_switch_num_labels", scope: !613, file: !613, line: 3157, type: !3590, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3592)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!7, !3078}
!3592 = !{!3593, !3594}
!3593 = !DILocalVariable(name: "gs", arg: 1, scope: !3589, file: !613, line: 3157, type: !3078)
!3594 = !DILocalVariable(name: "num_ops", scope: !3589, file: !613, line: 3159, type: !7)
!3595 = !DILocation(line: 0, scope: !3589)
!3596 = !DILocation(line: 3161, column: 13, scope: !3589)
!3597 = !DILocation(line: 3162, column: 3, scope: !3589)
!3598 = !DILocation(line: 3163, column: 18, scope: !3589)
!3599 = !DILocation(line: 3163, column: 3, scope: !3589)
!3600 = distinct !DISubprogram(name: "gimple_switch_label", scope: !613, file: !613, line: 3212, type: !3601, scopeLine: 3213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3603)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{!704, !3078, !7}
!3603 = !{!3604, !3605}
!3604 = !DILocalVariable(name: "gs", arg: 1, scope: !3600, file: !613, line: 3212, type: !3078)
!3605 = !DILocalVariable(name: "index", arg: 2, scope: !3600, file: !613, line: 3212, type: !7)
!3606 = !DILocation(line: 0, scope: !3600)
!3607 = !DILocation(line: 3215, column: 3, scope: !3600)
!3608 = !DILocation(line: 3216, column: 10, scope: !3600)
!3609 = !DILocation(line: 3216, column: 3, scope: !3600)
!3610 = distinct !DISubprogram(name: "gimple_asm_nlabels", scope: !613, file: !613, line: 2610, type: !3590, scopeLine: 2611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3611)
!3611 = !{!3612}
!3612 = !DILocalVariable(name: "gs", arg: 1, scope: !3610, file: !613, line: 2610, type: !3078)
!3613 = !DILocation(line: 0, scope: !3610)
!3614 = !DILocation(line: 2613, column: 14, scope: !3610)
!3615 = !DILocation(line: 2613, column: 25, scope: !3610)
!3616 = !DILocation(line: 2613, column: 10, scope: !3610)
!3617 = !DILocation(line: 2613, column: 3, scope: !3610)
!3618 = distinct !DISubprogram(name: "gimple_asm_label_op", scope: !613, file: !613, line: 2707, type: !3601, scopeLine: 2708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3619)
!3619 = !{!3620, !3621}
!3620 = !DILocalVariable(name: "gs", arg: 1, scope: !3618, file: !613, line: 2707, type: !3078)
!3621 = !DILocalVariable(name: "index", arg: 2, scope: !3618, file: !613, line: 2707, type: !7)
!3622 = !DILocation(line: 0, scope: !3618)
!3623 = !DILocation(line: 2710, column: 3, scope: !3618)
!3624 = !DILocation(line: 2711, column: 48, scope: !3618)
!3625 = !DILocation(line: 2711, column: 33, scope: !3618)
!3626 = !DILocation(line: 2711, column: 31, scope: !3618)
!3627 = !DILocation(line: 2711, column: 68, scope: !3618)
!3628 = !DILocation(line: 2711, column: 53, scope: !3618)
!3629 = !DILocation(line: 2711, column: 51, scope: !3618)
!3630 = !DILocation(line: 2711, column: 10, scope: !3618)
!3631 = !DILocation(line: 2711, column: 3, scope: !3618)
!3632 = distinct !DISubprogram(name: "computed_goto_p", scope: !3, file: !3, line: 272, type: !3633, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3635)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{!692, !1028}
!3635 = !{!3636}
!3636 = !DILocalVariable(name: "t", arg: 1, scope: !3632, file: !3, line: 272, type: !1028)
!3637 = !DILocation(line: 0, scope: !3632)
!3638 = !DILocation(line: 274, column: 11, scope: !3632)
!3639 = !DILocation(line: 274, column: 27, scope: !3632)
!3640 = !DILocation(line: 275, column: 4, scope: !3632)
!3641 = !DILocation(line: 275, column: 7, scope: !3632)
!3642 = !DILocation(line: 275, column: 40, scope: !3632)
!3643 = !DILocation(line: 274, column: 3, scope: !3632)
!3644 = distinct !DISubprogram(name: "gimple_goto_dest", scope: !613, file: !613, line: 2465, type: !3101, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3645)
!3645 = !{!3646}
!3646 = !DILocalVariable(name: "gs", arg: 1, scope: !3644, file: !613, line: 2465, type: !3078)
!3647 = !DILocation(line: 0, scope: !3644)
!3648 = !DILocation(line: 2468, column: 10, scope: !3644)
!3649 = !DILocation(line: 2468, column: 3, scope: !3644)
!3650 = distinct !DISubprogram(name: "gimple_goto_set_dest", scope: !613, file: !613, line: 2475, type: !3551, scopeLine: 2476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3651)
!3651 = !{!3652, !3653}
!3652 = !DILocalVariable(name: "gs", arg: 1, scope: !3650, file: !613, line: 2475, type: !1028)
!3653 = !DILocalVariable(name: "dest", arg: 2, scope: !3650, file: !613, line: 2475, type: !704)
!3654 = !DILocation(line: 0, scope: !3650)
!3655 = !DILocation(line: 2478, column: 3, scope: !3650)
!3656 = !DILocation(line: 2479, column: 1, scope: !3650)
!3657 = distinct !DISubprogram(name: "cleanup_dead_labels_eh", scope: !3, file: !3, line: 1080, type: !2972, scopeLine: 1081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3658)
!3658 = !{!3659, !3660, !3661, !3662, !3663}
!3659 = !DILocalVariable(name: "lp", scope: !3657, file: !3, line: 1082, type: !1585)
!3660 = !DILocalVariable(name: "r", scope: !3657, file: !3, line: 1083, type: !1511)
!3661 = !DILocalVariable(name: "lab", scope: !3657, file: !3, line: 1084, type: !704)
!3662 = !DILocalVariable(name: "i", scope: !3657, file: !3, line: 1085, type: !693)
!3663 = !DILocalVariable(name: "c", scope: !3664, file: !3, line: 1110, type: !3668)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 1109, column: 2)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 1103, column: 7)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 1101, column: 3)
!3667 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 1101, column: 3)
!3668 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_catch", file: !6, line: 181, baseType: !1527)
!3669 = !DILocation(line: 1082, column: 3, scope: !3657)
!3670 = !DILocation(line: 1087, column: 7, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 1087, column: 7)
!3672 = !DILocation(line: 1087, column: 13, scope: !3671)
!3673 = !DILocation(line: 1087, column: 16, scope: !3671)
!3674 = !DILocation(line: 1087, column: 7, scope: !3657)
!3675 = !DILocation(line: 1090, column: 3, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 1090, column: 3)
!3677 = !DILocation(line: 1090, column: 15, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 1090, column: 3)
!3679 = !DILocation(line: 0, scope: !3676)
!3680 = !DILocation(line: 0, scope: !3657)
!3681 = !DILocation(line: 1091, column: 9, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 1091, column: 9)
!3683 = !DILocation(line: 1091, column: 12, scope: !3682)
!3684 = !DILocation(line: 1091, column: 19, scope: !3682)
!3685 = !DILocation(line: 1091, column: 15, scope: !3682)
!3686 = !DILocation(line: 1091, column: 9, scope: !3678)
!3687 = !DILocation(line: 1093, column: 8, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 1092, column: 7)
!3689 = !DILocation(line: 1094, column: 13, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 1094, column: 6)
!3691 = !DILocation(line: 1094, column: 17, scope: !3690)
!3692 = !DILocation(line: 1094, column: 10, scope: !3690)
!3693 = !DILocation(line: 1094, column: 6, scope: !3688)
!3694 = !DILocation(line: 1096, column: 6, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 1095, column: 4)
!3696 = !DILocation(line: 1096, column: 47, scope: !3695)
!3697 = !DILocation(line: 1097, column: 36, scope: !3695)
!3698 = !DILocation(line: 1097, column: 6, scope: !3695)
!3699 = !DILocation(line: 1097, column: 30, scope: !3695)
!3700 = !DILocation(line: 1098, column: 4, scope: !3695)
!3701 = !DILocation(line: 1090, column: 72, scope: !3678)
!3702 = !DILocation(line: 0, scope: !3678)
!3703 = !DILocation(line: 1090, column: 3, scope: !3678)
!3704 = distinct !{!3704, !3675, !3705}
!3705 = !DILocation(line: 1099, column: 7, scope: !3676)
!3706 = !DILocation(line: 1101, column: 3, scope: !3667)
!3707 = !DILocation(line: 0, scope: !3667)
!3708 = !DILocation(line: 1101, column: 3, scope: !3666)
!3709 = !DILocation(line: 1102, column: 16, scope: !3666)
!3710 = !DILocation(line: 1102, column: 5, scope: !3666)
!3711 = !DILocation(line: 1111, column: 16, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 1111, column: 4)
!3713 = !DILocation(line: 1111, column: 25, scope: !3712)
!3714 = !DILocation(line: 1111, column: 9, scope: !3712)
!3715 = !DILocation(line: 0, scope: !3712)
!3716 = !DILocation(line: 0, scope: !3664)
!3717 = !DILocation(line: 1111, column: 4, scope: !3712)
!3718 = !DILocation(line: 1113, column: 17, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 1112, column: 6)
!3720 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 1111, column: 4)
!3721 = !DILocation(line: 1114, column: 12, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 1114, column: 12)
!3723 = !DILocation(line: 1114, column: 12, scope: !3719)
!3724 = !DILocation(line: 1115, column: 14, scope: !3722)
!3725 = !DILocation(line: 1115, column: 12, scope: !3722)
!3726 = !DILocation(line: 1115, column: 3, scope: !3722)
!3727 = !DILocation(line: 1111, column: 49, scope: !3720)
!3728 = !DILocation(line: 1111, column: 4, scope: !3720)
!3729 = distinct !{!3729, !3717, !3730}
!3730 = !DILocation(line: 1116, column: 6, scope: !3712)
!3731 = !DILocation(line: 1121, column: 21, scope: !3665)
!3732 = !DILocation(line: 1122, column: 6, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 1122, column: 6)
!3734 = !DILocation(line: 1122, column: 6, scope: !3665)
!3735 = !DILocation(line: 1123, column: 25, scope: !3733)
!3736 = !DILocation(line: 1123, column: 23, scope: !3733)
!3737 = !DILocation(line: 1123, column: 4, scope: !3733)
!3738 = distinct !{!3738, !3706, !3739}
!3739 = !DILocation(line: 1125, column: 7, scope: !3667)
!3740 = !DILocation(line: 1126, column: 1, scope: !3657)
!3741 = distinct !DISubprogram(name: "group_case_labels", scope: !3, file: !3, line: 1287, type: !2972, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3742)
!3742 = !{!3743, !3744, !3748, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3759, !3760, !3761, !3763, !3764}
!3743 = !DILocalVariable(name: "bb", scope: !3741, file: !3, line: 1289, type: !1670)
!3744 = !DILocalVariable(name: "stmt", scope: !3745, file: !3, line: 1293, type: !1028)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 1292, column: 5)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 1291, column: 3)
!3747 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 1291, column: 3)
!3748 = !DILocalVariable(name: "old_size", scope: !3749, file: !3, line: 1296, type: !693)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 1295, column: 2)
!3750 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 1294, column: 11)
!3751 = !DILocalVariable(name: "i", scope: !3749, file: !3, line: 1297, type: !693)
!3752 = !DILocalVariable(name: "j", scope: !3749, file: !3, line: 1297, type: !693)
!3753 = !DILocalVariable(name: "new_size", scope: !3749, file: !3, line: 1297, type: !693)
!3754 = !DILocalVariable(name: "default_case", scope: !3749, file: !3, line: 1298, type: !704)
!3755 = !DILocalVariable(name: "default_label", scope: !3749, file: !3, line: 1299, type: !704)
!3756 = !DILocalVariable(name: "has_default", scope: !3749, file: !3, line: 1300, type: !692)
!3757 = !DILocalVariable(name: "base_case", scope: !3758, file: !3, line: 1322, type: !704)
!3758 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 1321, column: 6)
!3759 = !DILocalVariable(name: "base_label", scope: !3758, file: !3, line: 1322, type: !704)
!3760 = !DILocalVariable(name: "base_high", scope: !3758, file: !3, line: 1322, type: !704)
!3761 = !DILocalVariable(name: "merge_case", scope: !3762, file: !3, line: 1348, type: !704)
!3762 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 1347, column: 3)
!3763 = !DILocalVariable(name: "merge_label", scope: !3762, file: !3, line: 1349, type: !704)
!3764 = !DILocalVariable(name: "t", scope: !3762, file: !3, line: 1350, type: !704)
!3765 = !DILocation(line: 1291, column: 3, scope: !3747)
!3766 = !DILocation(line: 1291, column: 3, scope: !3746)
!3767 = !DILocation(line: 0, scope: !3747)
!3768 = !DILocation(line: 0, scope: !3741)
!3769 = !DILocation(line: 1293, column: 21, scope: !3745)
!3770 = !DILocation(line: 0, scope: !3745)
!3771 = !DILocation(line: 1294, column: 11, scope: !3750)
!3772 = !DILocation(line: 1294, column: 16, scope: !3750)
!3773 = !DILocation(line: 1294, column: 19, scope: !3750)
!3774 = !DILocation(line: 1294, column: 38, scope: !3750)
!3775 = !DILocation(line: 1294, column: 11, scope: !3745)
!3776 = !DILocation(line: 1296, column: 19, scope: !3749)
!3777 = !DILocation(line: 0, scope: !3749)
!3778 = !DILocation(line: 1305, column: 9, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 1305, column: 8)
!3780 = !DILocation(line: 1306, column: 8, scope: !3779)
!3781 = !DILocation(line: 1306, column: 12, scope: !3779)
!3782 = !DILocation(line: 1305, column: 8, scope: !3749)
!3783 = !DILocation(line: 1308, column: 23, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 1307, column: 6)
!3785 = !DILocation(line: 1309, column: 24, scope: !3784)
!3786 = !DILocation(line: 1311, column: 6, scope: !3784)
!3787 = !DILocation(line: 1320, column: 4, scope: !3749)
!3788 = !DILocation(line: 1320, column: 13, scope: !3749)
!3789 = !DILocation(line: 1372, column: 4, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 1372, column: 4)
!3791 = !DILocation(line: 1323, column: 20, scope: !3758)
!3792 = !DILocation(line: 0, scope: !3758)
!3793 = !DILocation(line: 1325, column: 8, scope: !3758)
!3794 = !DILocation(line: 1326, column: 21, scope: !3758)
!3795 = !DILocation(line: 1330, column: 23, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 1330, column: 12)
!3797 = !DILocation(line: 1330, column: 12, scope: !3758)
!3798 = !DILocation(line: 1332, column: 5, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 1331, column: 3)
!3800 = !DILocation(line: 1333, column: 6, scope: !3799)
!3801 = !DILocation(line: 1334, column: 13, scope: !3799)
!3802 = !DILocation(line: 1335, column: 5, scope: !3799)
!3803 = distinct !{!3803, !3787, !3804}
!3804 = !DILocation(line: 1368, column: 6, scope: !3749)
!3805 = !DILocation(line: 1338, column: 20, scope: !3758)
!3806 = !DILocation(line: 1341, column: 9, scope: !3758)
!3807 = !DILocation(line: 1346, column: 8, scope: !3758)
!3808 = !DILocation(line: 1346, column: 17, scope: !3758)
!3809 = !DILocation(line: 1348, column: 23, scope: !3762)
!3810 = !DILocation(line: 0, scope: !3762)
!3811 = !DILocation(line: 1349, column: 31, scope: !3762)
!3812 = !DILocation(line: 1351, column: 10, scope: !3762)
!3813 = !DILocation(line: 1350, column: 14, scope: !3762)
!3814 = !DILocation(line: 1355, column: 21, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1355, column: 9)
!3816 = !DILocation(line: 1356, column: 9, scope: !3815)
!3817 = !DILocation(line: 1356, column: 32, scope: !3815)
!3818 = !DILocation(line: 1356, column: 12, scope: !3815)
!3819 = !DILocation(line: 1355, column: 9, scope: !3762)
!3820 = !DILocation(line: 1358, column: 21, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 1357, column: 7)
!3822 = !DILocation(line: 1360, column: 31, scope: !3821)
!3823 = !DILocation(line: 1361, column: 9, scope: !3821)
!3824 = !DILocation(line: 1362, column: 17, scope: !3821)
!3825 = !DILocation(line: 1363, column: 10, scope: !3821)
!3826 = !DILocation(line: 1367, column: 3, scope: !3758)
!3827 = distinct !{!3827, !3807, !3826}
!3828 = !DILocation(line: 0, scope: !3790)
!3829 = !DILocation(line: 1372, column: 25, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 1372, column: 4)
!3831 = !DILocation(line: 1374, column: 8, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 1373, column: 6)
!3833 = !DILocation(line: 1374, column: 17, scope: !3832)
!3834 = !DILocation(line: 1374, column: 15, scope: !3832)
!3835 = !DILocation(line: 0, scope: !3832)
!3836 = distinct !{!3836, !3831, !3837}
!3837 = !DILocation(line: 1375, column: 4, scope: !3832)
!3838 = !DILocation(line: 1377, column: 12, scope: !3832)
!3839 = !DILocation(line: 1376, column: 8, scope: !3832)
!3840 = !DILocation(line: 1372, column: 38, scope: !3830)
!3841 = !DILocation(line: 1372, column: 4, scope: !3830)
!3842 = distinct !{!3842, !3789, !3843}
!3843 = !DILocation(line: 1378, column: 6, scope: !3790)
!3844 = !DILocation(line: 1380, column: 4, scope: !3749)
!3845 = !DILocation(line: 1381, column: 4, scope: !3749)
!3846 = !DILocation(line: 1382, column: 2, scope: !3749)
!3847 = !DILocation(line: 0, scope: !3746)
!3848 = distinct !{!3848, !3765, !3849}
!3849 = !DILocation(line: 1383, column: 5, scope: !3747)
!3850 = !DILocation(line: 1384, column: 1, scope: !3741)
!3851 = distinct !DISubprogram(name: "gimple_switch_default_label", scope: !613, file: !613, line: 3233, type: !3101, scopeLine: 3234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3852)
!3852 = !{!3853}
!3853 = !DILocalVariable(name: "gs", arg: 1, scope: !3851, file: !613, line: 3233, type: !3078)
!3854 = !DILocation(line: 0, scope: !3851)
!3855 = !DILocation(line: 3235, column: 10, scope: !3851)
!3856 = !DILocation(line: 3235, column: 3, scope: !3851)
!3857 = distinct !DISubprogram(name: "gimple_switch_set_label", scope: !613, file: !613, line: 3222, type: !3858, scopeLine: 3223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3860)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !1028, !7, !704}
!3860 = !{!3861, !3862, !3863}
!3861 = !DILocalVariable(name: "gs", arg: 1, scope: !3857, file: !613, line: 3222, type: !1028)
!3862 = !DILocalVariable(name: "index", arg: 2, scope: !3857, file: !613, line: 3222, type: !7)
!3863 = !DILocalVariable(name: "label", arg: 3, scope: !3857, file: !613, line: 3222, type: !704)
!3864 = !DILocation(line: 0, scope: !3857)
!3865 = !DILocation(line: 3225, column: 3, scope: !3857)
!3866 = !DILocation(line: 3226, column: 3, scope: !3857)
!3867 = !DILocation(line: 3227, column: 3, scope: !3857)
!3868 = !DILocation(line: 3228, column: 1, scope: !3857)
!3869 = distinct !DISubprogram(name: "gimple_switch_set_num_labels", scope: !613, file: !613, line: 3170, type: !3870, scopeLine: 3171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3872)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{null, !1028, !7}
!3872 = !{!3873, !3874}
!3873 = !DILocalVariable(name: "g", arg: 1, scope: !3869, file: !613, line: 3170, type: !1028)
!3874 = !DILocalVariable(name: "nlabels", arg: 2, scope: !3869, file: !613, line: 3170, type: !7)
!3875 = !DILocation(line: 0, scope: !3869)
!3876 = !DILocation(line: 3173, column: 34, scope: !3869)
!3877 = !DILocation(line: 3173, column: 3, scope: !3869)
!3878 = !DILocation(line: 3174, column: 1, scope: !3869)
!3879 = distinct !DISubprogram(name: "has_zero_uses_1", scope: !3, file: !3, line: 1454, type: !3880, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3884)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!692, !3882}
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2202)
!3884 = !{!3885, !3886}
!3885 = !DILocalVariable(name: "head", arg: 1, scope: !3879, file: !3, line: 1454, type: !3882)
!3886 = !DILocalVariable(name: "ptr", scope: !3879, file: !3, line: 1456, type: !3882)
!3887 = !DILocation(line: 0, scope: !3879)
!3888 = !DILocation(line: 1458, column: 8, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 1458, column: 3)
!3890 = !DILocation(line: 0, scope: !3889)
!3891 = !DILocation(line: 1458, column: 30, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 1458, column: 3)
!3893 = !DILocation(line: 1458, column: 3, scope: !3889)
!3894 = !DILocation(line: 1459, column: 27, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 1459, column: 9)
!3896 = !DILocation(line: 1459, column: 10, scope: !3895)
!3897 = !DILocation(line: 1459, column: 9, scope: !3892)
!3898 = !DILocation(line: 1458, column: 3, scope: !3892)
!3899 = distinct !{!3899, !3893, !3900}
!3900 = !DILocation(line: 1460, column: 14, scope: !3889)
!3901 = !DILocation(line: 1463, column: 1, scope: !3879)
!3902 = distinct !DISubprogram(name: "is_gimple_debug", scope: !613, file: !613, line: 3249, type: !3903, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3905)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!692, !3078}
!3905 = !{!3906}
!3906 = !DILocalVariable(name: "gs", arg: 1, scope: !3902, file: !613, line: 3249, type: !3078)
!3907 = !DILocation(line: 0, scope: !3902)
!3908 = !DILocation(line: 3251, column: 10, scope: !3902)
!3909 = !DILocation(line: 3251, column: 27, scope: !3902)
!3910 = !DILocation(line: 3251, column: 3, scope: !3902)
!3911 = distinct !DISubprogram(name: "single_imm_use_1", scope: !3, file: !3, line: 1469, type: !3912, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3916)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!692, !3882, !3914, !3915}
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!3916 = !{!3917, !3918, !3919, !3920, !3921}
!3917 = !DILocalVariable(name: "head", arg: 1, scope: !3911, file: !3, line: 1469, type: !3882)
!3918 = !DILocalVariable(name: "use_p", arg: 2, scope: !3911, file: !3, line: 1470, type: !3914)
!3919 = !DILocalVariable(name: "stmt", arg: 3, scope: !3911, file: !3, line: 1470, type: !3915)
!3920 = !DILocalVariable(name: "ptr", scope: !3911, file: !3, line: 1472, type: !2201)
!3921 = !DILocalVariable(name: "single_use", scope: !3911, file: !3, line: 1472, type: !2201)
!3922 = !DILocation(line: 0, scope: !3911)
!3923 = !DILocation(line: 1474, column: 8, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 1474, column: 3)
!3925 = !DILocation(line: 1472, column: 28, scope: !3911)
!3926 = !DILocation(line: 0, scope: !3924)
!3927 = !DILocation(line: 1474, column: 30, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 1474, column: 3)
!3929 = !DILocation(line: 1474, column: 3, scope: !3924)
!3930 = !DILocation(line: 1475, column: 27, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1475, column: 9)
!3932 = !DILocation(line: 1475, column: 10, scope: !3931)
!3933 = !DILocation(line: 1475, column: 9, scope: !3928)
!3934 = !DILocation(line: 1477, column: 6, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 1477, column: 6)
!3936 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1476, column: 7)
!3937 = !DILocation(line: 1477, column: 6, scope: !3936)
!3938 = !DILocation(line: 1474, column: 3, scope: !3928)
!3939 = distinct !{!3939, !3929, !3940}
!3940 = !DILocation(line: 1483, column: 7, scope: !3924)
!3941 = !DILocation(line: 1485, column: 7, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 1485, column: 7)
!3943 = !DILocation(line: 1485, column: 7, scope: !3911)
!3944 = !DILocation(line: 1486, column: 12, scope: !3942)
!3945 = !DILocation(line: 1486, column: 5, scope: !3942)
!3946 = !DILocation(line: 1488, column: 7, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 1488, column: 7)
!3948 = !DILocation(line: 1488, column: 7, scope: !3911)
!3949 = !DILocation(line: 1489, column: 13, scope: !3947)
!3950 = !DILocation(line: 1489, column: 42, scope: !3947)
!3951 = !DILocation(line: 1489, column: 11, scope: !3947)
!3952 = !DILocation(line: 1489, column: 5, scope: !3947)
!3953 = !DILocation(line: 1491, column: 11, scope: !3911)
!3954 = !DILocation(line: 1491, column: 10, scope: !3911)
!3955 = !DILocation(line: 1491, column: 3, scope: !3911)
!3956 = distinct !DISubprogram(name: "replace_uses_by", scope: !3, file: !3, line: 1497, type: !3957, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3959)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{null, !704, !704}
!3959 = !{!3960, !3961, !3962, !3970, !3971, !3972, !3973, !3979, !3983, !3986}
!3960 = !DILocalVariable(name: "name", arg: 1, scope: !3956, file: !3, line: 1497, type: !704)
!3961 = !DILocalVariable(name: "val", arg: 2, scope: !3956, file: !3, line: 1497, type: !704)
!3962 = !DILocalVariable(name: "imm_iter", scope: !3956, file: !3, line: 1499, type: !3963)
!3963 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1454, line: 249, baseType: !3964)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1454, line: 238, size: 448, elements: !3965)
!3965 = !{!3966, !3967, !3968, !3969}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !3964, file: !1454, line: 241, baseType: !2201, size: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !3964, file: !1454, line: 243, baseType: !2201, size: 64, offset: 64)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !3964, file: !1454, line: 245, baseType: !2202, size: 256, offset: 128)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !3964, file: !1454, line: 248, baseType: !2201, size: 64, offset: 384)
!3970 = !DILocalVariable(name: "use", scope: !3956, file: !3, line: 1500, type: !2200)
!3971 = !DILocalVariable(name: "stmt", scope: !3956, file: !3, line: 1501, type: !1028)
!3972 = !DILocalVariable(name: "e", scope: !3956, file: !3, line: 1502, type: !1008)
!3973 = !DILocalVariable(name: "i", scope: !3974, file: !3, line: 1526, type: !1173)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 1525, column: 2)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 1524, column: 11)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 1505, column: 5)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 1504, column: 3)
!3978 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1504, column: 3)
!3979 = !DILocalVariable(name: "op", scope: !3980, file: !3, line: 1535, type: !704)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 1534, column: 6)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 1533, column: 4)
!3982 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 1533, column: 4)
!3983 = !DILocalVariable(name: "loop", scope: !3984, file: !3, line: 1553, type: !1243)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1552, column: 5)
!3985 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1551, column: 7)
!3986 = !DILocalVariable(name: "li", scope: !3984, file: !3, line: 1554, type: !3987)
!3987 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !337, line: 515, baseType: !3988)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !337, line: 508, size: 128, elements: !3989)
!3989 = !{!3990, !3991}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !3988, file: !337, line: 511, baseType: !2206, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !3988, file: !337, line: 514, baseType: !7, size: 32, offset: 64)
!3992 = !DILocation(line: 0, scope: !3956)
!3993 = !DILocation(line: 1499, column: 3, scope: !3956)
!3994 = !DILocation(line: 1504, column: 3, scope: !3978)
!3995 = !DILocation(line: 0, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 1514, column: 3)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1513, column: 12)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 1511, column: 6)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 1510, column: 8)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 1507, column: 9)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 1506, column: 7)
!4002 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 1506, column: 7)
!4003 = !DILocation(line: 0, scope: !3978)
!4004 = !DILocation(line: 1504, column: 3, scope: !3977)
!4005 = !DILocation(line: 1506, column: 7, scope: !4002)
!4006 = !DILocation(line: 0, scope: !4002)
!4007 = !DILocation(line: 1506, column: 7, scope: !4001)
!4008 = !DILocation(line: 1508, column: 4, scope: !4000)
!4009 = !DILocation(line: 1510, column: 8, scope: !3999)
!4010 = !DILocation(line: 1510, column: 27, scope: !3999)
!4011 = !DILocation(line: 1510, column: 8, scope: !4000)
!4012 = !DILocation(line: 1512, column: 39, scope: !3998)
!4013 = !DILocation(line: 1512, column: 12, scope: !3998)
!4014 = !DILocation(line: 1513, column: 15, scope: !3997)
!4015 = !DILocation(line: 1513, column: 21, scope: !3997)
!4016 = !DILocation(line: 1513, column: 12, scope: !3998)
!4017 = !DILocation(line: 1518, column: 5, scope: !3996)
!4018 = !DILocation(line: 1519, column: 43, scope: !3996)
!4019 = !DILocation(line: 1520, column: 3, scope: !3996)
!4020 = distinct !{!4020, !4005, !4021}
!4021 = !DILocation(line: 1522, column: 2, scope: !4002)
!4022 = !DILocation(line: 1524, column: 11, scope: !3975)
!4023 = !DILocation(line: 1524, column: 30, scope: !3975)
!4024 = !DILocation(line: 1524, column: 11, scope: !3976)
!4025 = !DILocation(line: 1528, column: 4, scope: !3974)
!4026 = !DILocation(line: 1529, column: 8, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 1529, column: 8)
!4028 = !DILocation(line: 1529, column: 8, scope: !3974)
!4029 = !DILocation(line: 1530, column: 46, scope: !4027)
!4030 = !DILocation(line: 1530, column: 64, scope: !4027)
!4031 = !DILocation(line: 1530, column: 6, scope: !4027)
!4032 = !DILocation(line: 0, scope: !3974)
!4033 = !DILocation(line: 1533, column: 9, scope: !3982)
!4034 = !DILocation(line: 0, scope: !3982)
!4035 = !DILocation(line: 1533, column: 20, scope: !3981)
!4036 = !DILocation(line: 1533, column: 18, scope: !3981)
!4037 = !DILocation(line: 1533, column: 4, scope: !3982)
!4038 = !DILocation(line: 1535, column: 35, scope: !3980)
!4039 = !DILocation(line: 1535, column: 18, scope: !3980)
!4040 = !DILocation(line: 0, scope: !3980)
!4041 = !DILocation(line: 1539, column: 12, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1539, column: 12)
!4043 = !DILocation(line: 1539, column: 15, scope: !4042)
!4044 = !DILocation(line: 1539, column: 18, scope: !4042)
!4045 = !DILocation(line: 1539, column: 33, scope: !4042)
!4046 = !DILocation(line: 1539, column: 12, scope: !3980)
!4047 = !DILocation(line: 1540, column: 3, scope: !4042)
!4048 = !DILocation(line: 1533, column: 44, scope: !3981)
!4049 = !DILocation(line: 1533, column: 4, scope: !3981)
!4050 = distinct !{!4050, !4037, !4051}
!4051 = !DILocation(line: 1541, column: 6, scope: !3982)
!4052 = !DILocation(line: 1543, column: 4, scope: !3974)
!4053 = !DILocation(line: 1544, column: 4, scope: !3974)
!4054 = !DILocation(line: 1545, column: 2, scope: !3974)
!4055 = distinct !{!4055, !3994, !4056}
!4056 = !DILocation(line: 1546, column: 5, scope: !3978)
!4057 = !DILocation(line: 1548, column: 3, scope: !3956)
!4058 = !DILocation(line: 1551, column: 7, scope: !3985)
!4059 = !DILocation(line: 1551, column: 7, scope: !3956)
!4060 = !DILocation(line: 1553, column: 7, scope: !3984)
!4061 = !DILocation(line: 1554, column: 7, scope: !3984)
!4062 = !DILocation(line: 0, scope: !3984)
!4063 = !DILocation(line: 1556, column: 7, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 1556, column: 7)
!4065 = !DILocation(line: 1556, column: 7, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 1556, column: 7)
!4067 = !DILocation(line: 1558, column: 4, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1557, column: 2)
!4069 = distinct !{!4069, !4063, !4070}
!4070 = !DILocation(line: 1559, column: 2, scope: !4064)
!4071 = !DILocation(line: 1560, column: 5, scope: !3985)
!4072 = !DILocation(line: 1560, column: 5, scope: !3984)
!4073 = !DILocation(line: 1561, column: 1, scope: !3956)
!4074 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !4075, file: !4075, line: 1058, type: !4076, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4079)
!4075 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4076 = !DISubroutineType(types: !4077)
!4077 = !{!1028, !4078, !704}
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!4079 = !{!4080, !4081}
!4080 = !DILocalVariable(name: "imm", arg: 1, scope: !4074, file: !4075, line: 1058, type: !4078)
!4081 = !DILocalVariable(name: "var", arg: 2, scope: !4074, file: !4075, line: 1058, type: !704)
!4082 = !DILocation(line: 0, scope: !4074)
!4083 = !DILocation(line: 1060, column: 18, scope: !4074)
!4084 = !DILocation(line: 1060, column: 8, scope: !4074)
!4085 = !DILocation(line: 1060, column: 14, scope: !4074)
!4086 = !DILocation(line: 1061, column: 30, scope: !4074)
!4087 = !DILocation(line: 1061, column: 16, scope: !4074)
!4088 = !DILocation(line: 1062, column: 8, scope: !4074)
!4089 = !DILocation(line: 1062, column: 22, scope: !4074)
!4090 = !DILocation(line: 1067, column: 18, scope: !4074)
!4091 = !DILocation(line: 1067, column: 23, scope: !4074)
!4092 = !DILocation(line: 1068, column: 18, scope: !4074)
!4093 = !DILocation(line: 1068, column: 23, scope: !4074)
!4094 = !DILocation(line: 1069, column: 22, scope: !4074)
!4095 = !DILocation(line: 1069, column: 27, scope: !4074)
!4096 = !DILocation(line: 1070, column: 18, scope: !4074)
!4097 = !DILocation(line: 1070, column: 22, scope: !4074)
!4098 = !DILocation(line: 1072, column: 7, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4074, file: !4075, line: 1072, column: 7)
!4100 = !DILocation(line: 1072, column: 7, scope: !4074)
!4101 = !DILocation(line: 1075, column: 30, scope: !4074)
!4102 = !DILocation(line: 1075, column: 3, scope: !4074)
!4103 = !DILocation(line: 1077, column: 10, scope: !4074)
!4104 = !DILocation(line: 1077, column: 3, scope: !4074)
!4105 = !DILocation(line: 1078, column: 1, scope: !4074)
!4106 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !4075, file: !4075, line: 969, type: !4107, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4111)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{!692, !4109}
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3963)
!4111 = !{!4112}
!4112 = !DILocalVariable(name: "imm", arg: 1, scope: !4106, file: !4075, line: 969, type: !4109)
!4113 = !DILocation(line: 0, scope: !4106)
!4114 = !DILocation(line: 971, column: 16, scope: !4106)
!4115 = !DILocation(line: 971, column: 32, scope: !4106)
!4116 = !DILocation(line: 971, column: 24, scope: !4106)
!4117 = !DILocation(line: 971, column: 10, scope: !4106)
!4118 = !DILocation(line: 971, column: 3, scope: !4106)
!4119 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !4075, file: !4075, line: 1101, type: !4120, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4122)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!2200, !4078}
!4122 = !{!4123}
!4123 = !DILocalVariable(name: "imm", arg: 1, scope: !4119, file: !4075, line: 1101, type: !4078)
!4124 = !DILocation(line: 0, scope: !4119)
!4125 = !DILocation(line: 1103, column: 29, scope: !4119)
!4126 = !DILocation(line: 1103, column: 38, scope: !4119)
!4127 = !DILocation(line: 1103, column: 8, scope: !4119)
!4128 = !DILocation(line: 1103, column: 22, scope: !4119)
!4129 = !DILocation(line: 1104, column: 3, scope: !4119)
!4130 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !4075, file: !4075, line: 1110, type: !4107, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4131)
!4131 = !{!4132}
!4132 = !DILocalVariable(name: "imm", arg: 1, scope: !4130, file: !4075, line: 1110, type: !4109)
!4133 = !DILocation(line: 0, scope: !4130)
!4134 = !DILocation(line: 1112, column: 16, scope: !4130)
!4135 = !DILocation(line: 1112, column: 34, scope: !4130)
!4136 = !DILocation(line: 1112, column: 24, scope: !4130)
!4137 = !DILocation(line: 1112, column: 10, scope: !4130)
!4138 = !DILocation(line: 1112, column: 3, scope: !4130)
!4139 = distinct !DISubprogram(name: "gimple_phi_arg_edge", scope: !4075, file: !4075, line: 467, type: !4140, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4142)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!1008, !1028, !1173}
!4142 = !{!4143, !4144}
!4143 = !DILocalVariable(name: "gs", arg: 1, scope: !4139, file: !4075, line: 467, type: !1028)
!4144 = !DILocalVariable(name: "i", arg: 2, scope: !4139, file: !4075, line: 467, type: !1173)
!4145 = !DILocation(line: 0, scope: !4139)
!4146 = !DILocation(line: 469, column: 10, scope: !4139)
!4147 = !DILocation(line: 469, column: 3, scope: !4139)
!4148 = distinct !DISubprogram(name: "phi_arg_index_from_use", scope: !4075, file: !4075, line: 533, type: !4149, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4151)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!693, !2200}
!4151 = !{!4152, !4153, !4154, !4155, !4156}
!4152 = !DILocalVariable(name: "use", arg: 1, scope: !4148, file: !4075, line: 533, type: !2200)
!4153 = !DILocalVariable(name: "element", scope: !4148, file: !4075, line: 535, type: !2203)
!4154 = !DILocalVariable(name: "root", scope: !4148, file: !4075, line: 535, type: !2203)
!4155 = !DILocalVariable(name: "index", scope: !4148, file: !4075, line: 536, type: !1173)
!4156 = !DILocalVariable(name: "phi", scope: !4148, file: !4075, line: 537, type: !1028)
!4157 = !DILocation(line: 0, scope: !4148)
!4158 = !DILocation(line: 543, column: 9, scope: !4148)
!4159 = !DILocation(line: 544, column: 3, scope: !4148)
!4160 = !DILocation(line: 547, column: 10, scope: !4148)
!4161 = !DILocation(line: 548, column: 19, scope: !4148)
!4162 = !DILocation(line: 558, column: 9, scope: !4148)
!4163 = !DILocation(line: 558, column: 2, scope: !4148)
!4164 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !4075, file: !4075, line: 1118, type: !4120, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4165)
!4165 = !{!4166}
!4166 = !DILocalVariable(name: "imm", arg: 1, scope: !4164, file: !4075, line: 1118, type: !4078)
!4167 = !DILocation(line: 0, scope: !4164)
!4168 = !DILocation(line: 1120, column: 23, scope: !4164)
!4169 = !DILocation(line: 1120, column: 16, scope: !4164)
!4170 = !DILocation(line: 1121, column: 7, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4164, file: !4075, line: 1121, column: 7)
!4172 = !DILocation(line: 1121, column: 7, scope: !4164)
!4173 = !DILocation(line: 1125, column: 33, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4171, file: !4075, line: 1124, column: 5)
!4175 = !DILocation(line: 1125, column: 42, scope: !4174)
!4176 = !DILocation(line: 1125, column: 26, scope: !4174)
!4177 = !DILocation(line: 1126, column: 7, scope: !4174)
!4178 = !DILocation(line: 0, scope: !4171)
!4179 = !DILocation(line: 1128, column: 1, scope: !4164)
!4180 = distinct !DISubprogram(name: "gimple_bb", scope: !613, file: !613, line: 1112, type: !4181, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4183)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!992, !3078}
!4183 = !{!4184}
!4184 = !DILocalVariable(name: "g", arg: 1, scope: !4180, file: !613, line: 1112, type: !3078)
!4185 = !DILocation(line: 0, scope: !4180)
!4186 = !DILocation(line: 1114, column: 20, scope: !4180)
!4187 = !DILocation(line: 1114, column: 3, scope: !4180)
!4188 = distinct !DISubprogram(name: "gimple_num_ops", scope: !613, file: !613, line: 1596, type: !3590, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4189)
!4189 = !{!4190}
!4190 = !DILocalVariable(name: "gs", arg: 1, scope: !4188, file: !613, line: 1596, type: !3078)
!4191 = !DILocation(line: 0, scope: !4188)
!4192 = !DILocation(line: 1598, column: 21, scope: !4188)
!4193 = !DILocation(line: 1598, column: 3, scope: !4188)
!4194 = distinct !DISubprogram(name: "gimple_op", scope: !613, file: !613, line: 1631, type: !3601, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4195)
!4195 = !{!4196, !4197}
!4196 = !DILocalVariable(name: "gs", arg: 1, scope: !4194, file: !613, line: 1631, type: !3078)
!4197 = !DILocalVariable(name: "i", arg: 2, scope: !4194, file: !613, line: 1631, type: !7)
!4198 = !DILocation(line: 0, scope: !4194)
!4199 = !DILocation(line: 1633, column: 7, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4194, file: !613, line: 1633, column: 7)
!4201 = !DILocation(line: 1633, column: 7, scope: !4194)
!4202 = !DILocation(line: 1638, column: 14, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4200, file: !613, line: 1634, column: 5)
!4204 = !DILocation(line: 1638, column: 7, scope: !4203)
!4205 = !DILocation(line: 0, scope: !4200)
!4206 = !DILocation(line: 1642, column: 1, scope: !4194)
!4207 = distinct !DISubprogram(name: "update_stmt", scope: !613, file: !613, line: 1456, type: !3115, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4208)
!4208 = !{!4209}
!4209 = !DILocalVariable(name: "s", arg: 1, scope: !4207, file: !613, line: 1456, type: !1028)
!4210 = !DILocation(line: 0, scope: !4207)
!4211 = !DILocation(line: 1458, column: 7, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4207, file: !613, line: 1458, column: 7)
!4213 = !DILocation(line: 1458, column: 7, scope: !4207)
!4214 = !DILocation(line: 1460, column: 7, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4212, file: !613, line: 1459, column: 5)
!4216 = !DILocation(line: 1461, column: 7, scope: !4215)
!4217 = !DILocation(line: 1462, column: 5, scope: !4215)
!4218 = !DILocation(line: 1463, column: 1, scope: !4207)
!4219 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !4075, file: !4075, line: 1083, type: !4220, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4222)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!1028, !4078}
!4222 = !{!4223}
!4223 = !DILocalVariable(name: "imm", arg: 1, scope: !4219, file: !4075, line: 1083, type: !4078)
!4224 = !DILocation(line: 0, scope: !4219)
!4225 = !DILocation(line: 1085, column: 33, scope: !4219)
!4226 = !DILocation(line: 1085, column: 16, scope: !4219)
!4227 = !DILocation(line: 1086, column: 7, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4219, file: !4075, line: 1086, column: 7)
!4229 = !DILocation(line: 1086, column: 7, scope: !4219)
!4230 = !DILocation(line: 1088, column: 26, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !4075, line: 1088, column: 11)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !4075, line: 1087, column: 5)
!4233 = !DILocation(line: 1088, column: 31, scope: !4231)
!4234 = !DILocation(line: 1088, column: 11, scope: !4232)
!4235 = !DILocation(line: 1089, column: 24, scope: !4231)
!4236 = !DILocation(line: 1089, column: 2, scope: !4231)
!4237 = !DILocation(line: 1093, column: 30, scope: !4219)
!4238 = !DILocation(line: 1093, column: 3, scope: !4219)
!4239 = !DILocation(line: 1094, column: 10, scope: !4219)
!4240 = !DILocation(line: 1094, column: 3, scope: !4219)
!4241 = !DILocation(line: 1095, column: 1, scope: !4219)
!4242 = distinct !DISubprogram(name: "has_zero_uses", scope: !4075, file: !4075, line: 332, type: !4243, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4246)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!692, !4245}
!4245 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !705, line: 59, baseType: !2190)
!4246 = !{!4247, !4248}
!4247 = !DILocalVariable(name: "var", arg: 1, scope: !4242, file: !4075, line: 332, type: !4245)
!4248 = !DILocalVariable(name: "ptr", scope: !4242, file: !4075, line: 334, type: !4249)
!4249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3882)
!4250 = !DILocation(line: 0, scope: !4242)
!4251 = !DILocation(line: 334, column: 42, scope: !4242)
!4252 = !DILocation(line: 337, column: 19, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4242, file: !4075, line: 337, column: 7)
!4254 = !DILocation(line: 337, column: 11, scope: !4253)
!4255 = !DILocation(line: 337, column: 7, scope: !4242)
!4256 = !DILocation(line: 342, column: 8, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4242, file: !4075, line: 342, column: 7)
!4258 = !DILocation(line: 342, column: 7, scope: !4242)
!4259 = !DILocation(line: 345, column: 10, scope: !4242)
!4260 = !DILocation(line: 345, column: 3, scope: !4242)
!4261 = !DILocation(line: 346, column: 1, scope: !4242)
!4262 = distinct !DISubprogram(name: "fel_init", scope: !337, file: !337, line: 535, type: !4263, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4267)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{null, !4265, !4266, !7}
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!4267 = !{!4268, !4269, !4270, !4271, !4272, !4273}
!4268 = !DILocalVariable(name: "li", arg: 1, scope: !4262, file: !337, line: 535, type: !4265)
!4269 = !DILocalVariable(name: "loop", arg: 2, scope: !4262, file: !337, line: 535, type: !4266)
!4270 = !DILocalVariable(name: "flags", arg: 3, scope: !4262, file: !337, line: 535, type: !7)
!4271 = !DILocalVariable(name: "aloop", scope: !4262, file: !337, line: 537, type: !1243)
!4272 = !DILocalVariable(name: "i", scope: !4262, file: !337, line: 538, type: !7)
!4273 = !DILocalVariable(name: "mn", scope: !4262, file: !337, line: 539, type: !693)
!4274 = !DILocation(line: 0, scope: !4262)
!4275 = !DILocation(line: 541, column: 7, scope: !4262)
!4276 = !DILocation(line: 541, column: 11, scope: !4262)
!4277 = !DILocation(line: 542, column: 8, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4262, file: !337, line: 542, column: 7)
!4279 = !DILocation(line: 542, column: 7, scope: !4262)
!4280 = !DILocation(line: 544, column: 11, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4278, file: !337, line: 543, column: 5)
!4282 = !DILocation(line: 544, column: 20, scope: !4281)
!4283 = !DILocation(line: 545, column: 13, scope: !4281)
!4284 = !DILocation(line: 546, column: 7, scope: !4281)
!4285 = !DILocation(line: 549, column: 18, scope: !4262)
!4286 = !DILocation(line: 549, column: 7, scope: !4262)
!4287 = !DILocation(line: 549, column: 16, scope: !4262)
!4288 = !DILocation(line: 0, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !337, line: 560, column: 12)
!4290 = distinct !DILexicalBlock(scope: !4262, file: !337, line: 552, column: 7)
!4291 = !DILocation(line: 590, column: 7, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4289, file: !337, line: 587, column: 5)
!4293 = !DILocation(line: 592, column: 8, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !337, line: 592, column: 8)
!4295 = distinct !DILexicalBlock(scope: !4292, file: !337, line: 591, column: 2)
!4296 = !DILocation(line: 592, column: 15, scope: !4294)
!4297 = !DILocation(line: 592, column: 19, scope: !4294)
!4298 = !DILocation(line: 592, column: 8, scope: !4295)
!4299 = !DILocation(line: 593, column: 6, scope: !4294)
!4300 = !DILocation(line: 595, column: 15, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4295, file: !337, line: 595, column: 8)
!4302 = !DILocation(line: 595, column: 21, scope: !4301)
!4303 = !DILocation(line: 595, column: 8, scope: !4295)
!4304 = !DILocation(line: 599, column: 8, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4301, file: !337, line: 598, column: 6)
!4306 = !DILocation(line: 596, column: 21, scope: !4301)
!4307 = !DILocation(line: 596, column: 6, scope: !4301)
!4308 = !DILocation(line: 599, column: 15, scope: !4305)
!4309 = !DILocation(line: 599, column: 21, scope: !4305)
!4310 = !DILocation(line: 599, column: 29, scope: !4305)
!4311 = !DILocation(line: 599, column: 39, scope: !4305)
!4312 = !DILocation(line: 599, column: 44, scope: !4305)
!4313 = !DILocation(line: 0, scope: !4305)
!4314 = !DILocation(line: 600, column: 11, scope: !4305)
!4315 = distinct !{!4315, !4304, !4316}
!4316 = !DILocation(line: 600, column: 28, scope: !4305)
!4317 = !DILocation(line: 601, column: 18, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4305, file: !337, line: 601, column: 12)
!4319 = !DILocation(line: 601, column: 12, scope: !4305)
!4320 = !DILocation(line: 603, column: 23, scope: !4305)
!4321 = distinct !{!4321, !4291, !4322}
!4322 = !DILocation(line: 605, column: 2, scope: !4292)
!4323 = !DILocation(line: 608, column: 3, scope: !4262)
!4324 = !DILocation(line: 609, column: 1, scope: !4262)
!4325 = distinct !DISubprogram(name: "fel_next", scope: !337, file: !337, line: 518, type: !4326, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4328)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{null, !4265, !4266}
!4328 = !{!4329, !4330, !4331}
!4329 = !DILocalVariable(name: "li", arg: 1, scope: !4325, file: !337, line: 518, type: !4265)
!4330 = !DILocalVariable(name: "loop", arg: 2, scope: !4325, file: !337, line: 518, type: !4266)
!4331 = !DILocalVariable(name: "anum", scope: !4325, file: !337, line: 520, type: !693)
!4332 = !DILocation(line: 0, scope: !4325)
!4333 = !DILocation(line: 520, column: 3, scope: !4325)
!4334 = !DILocation(line: 522, column: 3, scope: !4325)
!4335 = !DILocation(line: 522, column: 10, scope: !4325)
!4336 = !DILocation(line: 524, column: 14, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4325, file: !337, line: 523, column: 5)
!4338 = !DILocation(line: 525, column: 25, scope: !4337)
!4339 = !DILocation(line: 525, column: 15, scope: !4337)
!4340 = !DILocation(line: 525, column: 13, scope: !4337)
!4341 = !DILocation(line: 526, column: 11, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4337, file: !337, line: 526, column: 11)
!4343 = !DILocation(line: 526, column: 11, scope: !4337)
!4344 = distinct !{!4344, !4334, !4345}
!4345 = !DILocation(line: 528, column: 5, scope: !4325)
!4346 = !DILocation(line: 530, column: 3, scope: !4325)
!4347 = !DILocation(line: 531, column: 9, scope: !4325)
!4348 = !DILocation(line: 532, column: 1, scope: !4325)
!4349 = distinct !DISubprogram(name: "single_noncomplex_succ", scope: !3, file: !3, line: 1690, type: !2407, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4350)
!4350 = !{!4351, !4352, !4353}
!4351 = !DILocalVariable(name: "bb", arg: 1, scope: !4349, file: !3, line: 1690, type: !1670)
!4352 = !DILocalVariable(name: "e0", scope: !4349, file: !3, line: 1692, type: !1008)
!4353 = !DILocalVariable(name: "e1", scope: !4349, file: !3, line: 1692, type: !1008)
!4354 = !DILocation(line: 0, scope: !4349)
!4355 = !DILocation(line: 1693, column: 7, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 1693, column: 7)
!4357 = !DILocation(line: 1693, column: 30, scope: !4356)
!4358 = !DILocation(line: 1693, column: 7, scope: !4349)
!4359 = !DILocation(line: 1696, column: 8, scope: !4349)
!4360 = !DILocation(line: 1697, column: 8, scope: !4349)
!4361 = !DILocation(line: 1698, column: 11, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 1698, column: 7)
!4363 = !DILocation(line: 1698, column: 17, scope: !4362)
!4364 = !DILocation(line: 1698, column: 7, scope: !4349)
!4365 = !DILocation(line: 1699, column: 16, scope: !4362)
!4366 = !DILocation(line: 1699, column: 5, scope: !4362)
!4367 = !DILocation(line: 1700, column: 11, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 1700, column: 7)
!4369 = !DILocation(line: 1700, column: 17, scope: !4368)
!4370 = !DILocation(line: 1700, column: 7, scope: !4349)
!4371 = !DILocation(line: 1701, column: 16, scope: !4368)
!4372 = !DILocation(line: 1701, column: 5, scope: !4368)
!4373 = !DILocation(line: 1704, column: 1, scope: !4349)
!4374 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !382, file: !382, line: 150, type: !4375, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4379)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!7, !4377}
!4377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 64)
!4378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!4379 = !{!4380}
!4380 = !DILocalVariable(name: "vec_", arg: 1, scope: !4374, file: !382, line: 150, type: !4377)
!4381 = !DILocation(line: 0, scope: !4374)
!4382 = !DILocation(line: 150, column: 1, scope: !4374)
!4383 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !382, file: !382, line: 150, type: !4384, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4386)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{!1008, !4377, !7}
!4386 = !{!4387, !4388}
!4387 = !DILocalVariable(name: "vec_", arg: 1, scope: !4383, file: !382, line: 150, type: !4377)
!4388 = !DILocalVariable(name: "ix_", arg: 2, scope: !4383, file: !382, line: 150, type: !7)
!4389 = !DILocation(line: 0, scope: !4383)
!4390 = !DILocation(line: 150, column: 1, scope: !4383)
!4391 = distinct !DISubprogram(name: "notice_special_calls", scope: !3, file: !3, line: 1709, type: !3115, scopeLine: 1710, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4392)
!4392 = !{!4393, !4394}
!4393 = !DILocalVariable(name: "call", arg: 1, scope: !4391, file: !3, line: 1709, type: !1028)
!4394 = !DILocalVariable(name: "flags", scope: !4391, file: !3, line: 1711, type: !693)
!4395 = !DILocation(line: 0, scope: !4391)
!4396 = !DILocation(line: 1711, column: 15, scope: !4391)
!4397 = !DILocation(line: 1713, column: 13, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1713, column: 7)
!4399 = !DILocation(line: 1713, column: 7, scope: !4391)
!4400 = !DILocation(line: 1714, column: 5, scope: !4398)
!4401 = !DILocation(line: 1714, column: 11, scope: !4398)
!4402 = !DILocation(line: 1714, column: 24, scope: !4398)
!4403 = !DILocation(line: 1715, column: 13, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1715, column: 7)
!4405 = !DILocation(line: 1715, column: 7, scope: !4391)
!4406 = !DILocation(line: 1716, column: 5, scope: !4404)
!4407 = !DILocation(line: 1716, column: 11, scope: !4404)
!4408 = !DILocation(line: 1716, column: 24, scope: !4404)
!4409 = !DILocation(line: 1717, column: 1, scope: !4391)
!4410 = distinct !DISubprogram(name: "clear_special_calls", scope: !3, file: !3, line: 1724, type: !2972, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!4411 = !DILocation(line: 1726, column: 3, scope: !4410)
!4412 = !DILocation(line: 1726, column: 9, scope: !4410)
!4413 = !DILocation(line: 1726, column: 22, scope: !4410)
!4414 = !DILocation(line: 1727, column: 22, scope: !4410)
!4415 = !DILocation(line: 1728, column: 1, scope: !4410)
!4416 = distinct !DISubprogram(name: "find_taken_edge", scope: !3, file: !3, line: 1833, type: !4417, scopeLine: 1834, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4419)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!1008, !1670, !704}
!4419 = !{!4420, !4421, !4422}
!4420 = !DILocalVariable(name: "bb", arg: 1, scope: !4416, file: !3, line: 1833, type: !1670)
!4421 = !DILocalVariable(name: "val", arg: 2, scope: !4416, file: !3, line: 1833, type: !704)
!4422 = !DILocalVariable(name: "stmt", scope: !4416, file: !3, line: 1835, type: !1028)
!4423 = !DILocation(line: 0, scope: !4416)
!4424 = !DILocation(line: 1837, column: 10, scope: !4416)
!4425 = !DILocation(line: 1839, column: 3, scope: !4416)
!4426 = !DILocation(line: 1840, column: 3, scope: !4416)
!4427 = !DILocation(line: 1842, column: 11, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1842, column: 7)
!4429 = !DILocation(line: 1842, column: 7, scope: !4416)
!4430 = !DILocation(line: 1845, column: 8, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1845, column: 7)
!4432 = !DILocation(line: 1845, column: 7, scope: !4416)
!4433 = !DILocation(line: 1848, column: 7, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1848, column: 7)
!4435 = !DILocation(line: 1848, column: 26, scope: !4434)
!4436 = !DILocation(line: 1848, column: 7, scope: !4416)
!4437 = !DILocation(line: 1849, column: 12, scope: !4434)
!4438 = !DILocation(line: 1849, column: 5, scope: !4434)
!4439 = !DILocation(line: 1851, column: 7, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1851, column: 7)
!4441 = !DILocation(line: 1851, column: 26, scope: !4440)
!4442 = !DILocation(line: 1851, column: 7, scope: !4416)
!4443 = !DILocation(line: 1852, column: 12, scope: !4440)
!4444 = !DILocation(line: 1852, column: 5, scope: !4440)
!4445 = !DILocation(line: 1854, column: 7, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1854, column: 7)
!4447 = !DILocation(line: 1854, column: 7, scope: !4416)
!4448 = !DILocation(line: 1862, column: 12, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 1862, column: 11)
!4450 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 1855, column: 5)
!4451 = !DILocation(line: 1862, column: 28, scope: !4449)
!4452 = !DILocation(line: 1862, column: 41, scope: !4449)
!4453 = !DILocation(line: 1862, column: 60, scope: !4449)
!4454 = !DILocation(line: 1863, column: 4, scope: !4449)
!4455 = !DILocation(line: 1863, column: 7, scope: !4449)
!4456 = !DILocation(line: 1863, column: 41, scope: !4449)
!4457 = !DILocation(line: 1862, column: 11, scope: !4450)
!4458 = !DILocation(line: 1864, column: 9, scope: !4449)
!4459 = !DILocation(line: 1864, column: 2, scope: !4449)
!4460 = !DILocation(line: 1868, column: 3, scope: !4416)
!4461 = !DILocation(line: 1870, column: 5, scope: !4416)
!4462 = !DILocation(line: 1872, column: 1, scope: !4416)
!4463 = distinct !DISubprogram(name: "is_ctrl_stmt", scope: !3, file: !3, line: 2188, type: !3633, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4464)
!4464 = !{!4465}
!4465 = !DILocalVariable(name: "t", arg: 1, scope: !4463, file: !3, line: 2188, type: !1028)
!4466 = !DILocation(line: 0, scope: !4463)
!4467 = !DILocation(line: 2190, column: 11, scope: !4463)
!4468 = !DILocation(line: 2190, column: 3, scope: !4463)
!4469 = !DILocation(line: 2199, column: 7, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 2191, column: 5)
!4471 = !DILocation(line: 0, scope: !4470)
!4472 = !DILocation(line: 2201, column: 1, scope: !4463)
!4473 = distinct !DISubprogram(name: "find_taken_edge_cond_expr", scope: !3, file: !3, line: 1899, type: !4417, scopeLine: 1900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4474)
!4474 = !{!4475, !4476, !4477, !4478}
!4475 = !DILocalVariable(name: "bb", arg: 1, scope: !4473, file: !3, line: 1899, type: !1670)
!4476 = !DILocalVariable(name: "val", arg: 2, scope: !4473, file: !3, line: 1899, type: !704)
!4477 = !DILocalVariable(name: "true_edge", scope: !4473, file: !3, line: 1901, type: !1008)
!4478 = !DILocalVariable(name: "false_edge", scope: !4473, file: !3, line: 1901, type: !1008)
!4479 = !DILocation(line: 0, scope: !4473)
!4480 = !DILocation(line: 1901, column: 3, scope: !4473)
!4481 = !DILocation(line: 1903, column: 3, scope: !4473)
!4482 = !DILocation(line: 1905, column: 3, scope: !4473)
!4483 = !DILocation(line: 1906, column: 11, scope: !4473)
!4484 = !DILocation(line: 1907, column: 1, scope: !4473)
!4485 = !DILocation(line: 1906, column: 3, scope: !4473)
!4486 = distinct !DISubprogram(name: "find_taken_edge_switch_expr", scope: !3, file: !3, line: 1914, type: !4417, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4487)
!4487 = !{!4488, !4489, !4490, !4491, !4492, !4493}
!4488 = !DILocalVariable(name: "bb", arg: 1, scope: !4486, file: !3, line: 1914, type: !1670)
!4489 = !DILocalVariable(name: "val", arg: 2, scope: !4486, file: !3, line: 1914, type: !704)
!4490 = !DILocalVariable(name: "dest_bb", scope: !4486, file: !3, line: 1916, type: !1670)
!4491 = !DILocalVariable(name: "e", scope: !4486, file: !3, line: 1917, type: !1008)
!4492 = !DILocalVariable(name: "switch_stmt", scope: !4486, file: !3, line: 1918, type: !1028)
!4493 = !DILocalVariable(name: "taken_case", scope: !4486, file: !3, line: 1919, type: !704)
!4494 = !DILocation(line: 0, scope: !4486)
!4495 = !DILocation(line: 1921, column: 17, scope: !4486)
!4496 = !DILocation(line: 1922, column: 16, scope: !4486)
!4497 = !DILocation(line: 1923, column: 13, scope: !4486)
!4498 = !DILocation(line: 1925, column: 7, scope: !4486)
!4499 = !DILocation(line: 1926, column: 3, scope: !4486)
!4500 = !DILocation(line: 1927, column: 3, scope: !4486)
!4501 = distinct !DISubprogram(name: "find_taken_edge_computed_goto", scope: !3, file: !3, line: 1879, type: !4417, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4502)
!4502 = !{!4503, !4504, !4505, !4506}
!4503 = !DILocalVariable(name: "bb", arg: 1, scope: !4501, file: !3, line: 1879, type: !1670)
!4504 = !DILocalVariable(name: "val", arg: 2, scope: !4501, file: !3, line: 1879, type: !704)
!4505 = !DILocalVariable(name: "dest", scope: !4501, file: !3, line: 1881, type: !1670)
!4506 = !DILocalVariable(name: "e", scope: !4501, file: !3, line: 1882, type: !1008)
!4507 = !DILocation(line: 0, scope: !4501)
!4508 = !DILocation(line: 1884, column: 10, scope: !4501)
!4509 = !DILocation(line: 1885, column: 7, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 1885, column: 7)
!4511 = !DILocation(line: 1885, column: 7, scope: !4501)
!4512 = !DILocation(line: 1887, column: 11, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 1886, column: 5)
!4514 = !DILocation(line: 1888, column: 7, scope: !4513)
!4515 = !DILocation(line: 1891, column: 3, scope: !4501)
!4516 = distinct !DISubprogram(name: "gimple_debug_bb", scope: !3, file: !3, line: 1976, type: !2377, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4517)
!4517 = !{!4518}
!4518 = !DILocalVariable(name: "bb", arg: 1, scope: !4516, file: !3, line: 1976, type: !1670)
!4519 = !DILocation(line: 0, scope: !4516)
!4520 = !DILocation(line: 1978, column: 23, scope: !4516)
!4521 = !DILocation(line: 1978, column: 3, scope: !4516)
!4522 = !DILocation(line: 1979, column: 1, scope: !4516)
!4523 = distinct !DISubprogram(name: "gimple_debug_bb_n", scope: !3, file: !3, line: 1985, type: !4524, scopeLine: 1986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4526)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!1670, !693}
!4526 = !{!4527}
!4527 = !DILocalVariable(name: "n", arg: 1, scope: !4523, file: !3, line: 1985, type: !693)
!4528 = !DILocation(line: 0, scope: !4523)
!4529 = !DILocation(line: 1987, column: 20, scope: !4523)
!4530 = !DILocation(line: 1987, column: 3, scope: !4523)
!4531 = !DILocation(line: 1988, column: 10, scope: !4523)
!4532 = !DILocation(line: 1988, column: 3, scope: !4523)
!4533 = distinct !DISubprogram(name: "gimple_debug_cfg", scope: !3, file: !3, line: 1998, type: !4534, scopeLine: 1999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4536)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{null, !693}
!4536 = !{!4537}
!4537 = !DILocalVariable(name: "flags", arg: 1, scope: !4533, file: !3, line: 1998, type: !693)
!4538 = !DILocation(line: 0, scope: !4533)
!4539 = !DILocation(line: 2000, column: 20, scope: !4533)
!4540 = !DILocation(line: 2000, column: 3, scope: !4533)
!4541 = !DILocation(line: 2001, column: 1, scope: !4533)
!4542 = distinct !DISubprogram(name: "gimple_dump_cfg", scope: !3, file: !3, line: 2010, type: !4543, scopeLine: 2011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4545)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{null, !2279, !693}
!4545 = !{!4546, !4547, !4548}
!4546 = !DILocalVariable(name: "file", arg: 1, scope: !4542, file: !3, line: 2010, type: !2279)
!4547 = !DILocalVariable(name: "flags", arg: 2, scope: !4542, file: !3, line: 2010, type: !693)
!4548 = !DILocalVariable(name: "funcname", scope: !4549, file: !3, line: 2014, type: !698)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 2013, column: 5)
!4550 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 2012, column: 7)
!4551 = !DILocation(line: 0, scope: !4542)
!4552 = !DILocation(line: 2012, column: 13, scope: !4550)
!4553 = !DILocation(line: 2012, column: 7, scope: !4542)
!4554 = !DILocation(line: 2015, column: 15, scope: !4549)
!4555 = !DILocation(line: 2015, column: 36, scope: !4549)
!4556 = !DILocation(line: 2015, column: 4, scope: !4549)
!4557 = !DILocation(line: 0, scope: !4549)
!4558 = !DILocation(line: 2017, column: 7, scope: !4549)
!4559 = !DILocation(line: 2018, column: 7, scope: !4549)
!4560 = !DILocation(line: 2020, column: 9, scope: !4549)
!4561 = !DILocation(line: 2020, column: 25, scope: !4549)
!4562 = !DILocation(line: 2020, column: 34, scope: !4549)
!4563 = !DILocation(line: 2019, column: 7, scope: !4549)
!4564 = !DILocation(line: 2022, column: 7, scope: !4549)
!4565 = !DILocation(line: 2023, column: 7, scope: !4549)
!4566 = !DILocation(line: 2024, column: 5, scope: !4549)
!4567 = !DILocation(line: 2026, column: 13, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 2026, column: 7)
!4569 = !DILocation(line: 2026, column: 7, scope: !4542)
!4570 = !DILocation(line: 2027, column: 5, scope: !4568)
!4571 = !DILocation(line: 2029, column: 26, scope: !4542)
!4572 = !DILocation(line: 2029, column: 61, scope: !4542)
!4573 = !DILocation(line: 2029, column: 3, scope: !4542)
!4574 = !DILocation(line: 2030, column: 1, scope: !4542)
!4575 = !DILocation(line: 0, scope: !2276)
!4576 = !DILocation(line: 2047, column: 18, scope: !2276)
!4577 = !DILocation(line: 2047, column: 39, scope: !2276)
!4578 = !DILocation(line: 2047, column: 7, scope: !2276)
!4579 = !DILocation(line: 2050, column: 3, scope: !2276)
!4580 = !DILocation(line: 2052, column: 3, scope: !2276)
!4581 = !DILocation(line: 2053, column: 3, scope: !2276)
!4582 = !DILocation(line: 2054, column: 3, scope: !2276)
!4583 = !DILocation(line: 2055, column: 3, scope: !2276)
!4584 = !DILocation(line: 2057, column: 10, scope: !2276)
!4585 = !DILocation(line: 2057, column: 25, scope: !2276)
!4586 = !DILocation(line: 2060, column: 5, scope: !2276)
!4587 = !DILocation(line: 2060, column: 19, scope: !2276)
!4588 = !DILocation(line: 2059, column: 3, scope: !2276)
!4589 = !DILocation(line: 2063, column: 3, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 2063, column: 3)
!4591 = !DILocation(line: 2063, column: 3, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 2063, column: 3)
!4593 = !DILocation(line: 0, scope: !4590)
!4594 = !DILocation(line: 2064, column: 18, scope: !4592)
!4595 = !DILocation(line: 2064, column: 15, scope: !4592)
!4596 = !DILocation(line: 0, scope: !4592)
!4597 = distinct !{!4597, !4589, !4598}
!4598 = !DILocation(line: 2064, column: 18, scope: !4590)
!4599 = !DILocation(line: 2065, column: 20, scope: !2276)
!4600 = !DILocation(line: 2066, column: 9, scope: !2276)
!4601 = !DILocation(line: 2067, column: 49, scope: !2276)
!4602 = !DILocation(line: 2067, column: 63, scope: !2276)
!4603 = !DILocation(line: 2067, column: 3, scope: !2276)
!4604 = !DILocation(line: 2069, column: 3, scope: !2276)
!4605 = !DILocation(line: 2070, column: 62, scope: !2276)
!4606 = !DILocation(line: 2071, column: 5, scope: !2276)
!4607 = !DILocation(line: 2070, column: 3, scope: !2276)
!4608 = !DILocation(line: 2072, column: 3, scope: !2276)
!4609 = !DILocation(line: 2073, column: 3, scope: !2276)
!4610 = !DILocation(line: 2075, column: 17, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 2075, column: 7)
!4612 = !DILocation(line: 2075, column: 37, scope: !4611)
!4613 = !DILocation(line: 2075, column: 35, scope: !4611)
!4614 = !DILocation(line: 2075, column: 7, scope: !2276)
!4615 = !DILocation(line: 2076, column: 27, scope: !4611)
!4616 = !DILocation(line: 2076, column: 5, scope: !4611)
!4617 = !DILocation(line: 2079, column: 34, scope: !2276)
!4618 = !DILocation(line: 2078, column: 3, scope: !2276)
!4619 = !DILocation(line: 2081, column: 3, scope: !2276)
!4620 = !DILocation(line: 2082, column: 1, scope: !2276)
!4621 = distinct !DISubprogram(name: "dump_function_to_file", scope: !3, file: !3, line: 6152, type: !4622, scopeLine: 6153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4624)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{null, !704, !2279, !693}
!4624 = !{!4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4640}
!4625 = !DILocalVariable(name: "fn", arg: 1, scope: !4621, file: !3, line: 6152, type: !704)
!4626 = !DILocalVariable(name: "file", arg: 2, scope: !4621, file: !3, line: 6152, type: !2279)
!4627 = !DILocalVariable(name: "flags", arg: 3, scope: !4621, file: !3, line: 6152, type: !693)
!4628 = !DILocalVariable(name: "arg", scope: !4621, file: !3, line: 6154, type: !704)
!4629 = !DILocalVariable(name: "vars", scope: !4621, file: !3, line: 6154, type: !704)
!4630 = !DILocalVariable(name: "var", scope: !4621, file: !3, line: 6154, type: !704)
!4631 = !DILocalVariable(name: "dsf", scope: !4621, file: !3, line: 6155, type: !1502)
!4632 = !DILocalVariable(name: "ignore_topmost_bind", scope: !4621, file: !3, line: 6156, type: !692)
!4633 = !DILocalVariable(name: "any_var", scope: !4621, file: !3, line: 6156, type: !692)
!4634 = !DILocalVariable(name: "bb", scope: !4621, file: !3, line: 6157, type: !1670)
!4635 = !DILocalVariable(name: "chain", scope: !4621, file: !3, line: 6158, type: !704)
!4636 = !DILocalVariable(name: "body", scope: !4637, file: !3, line: 6233, type: !1018)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 6229, column: 5)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 6228, column: 12)
!4639 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 6212, column: 7)
!4640 = !DILocalVariable(name: "indent", scope: !4641, file: !3, line: 6253, type: !693)
!4641 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 6252, column: 5)
!4642 = !DILocation(line: 0, scope: !4621)
!4643 = !DILocation(line: 6160, column: 37, scope: !4621)
!4644 = !DILocation(line: 6160, column: 26, scope: !4621)
!4645 = !DILocation(line: 6160, column: 3, scope: !4621)
!4646 = !DILocation(line: 6162, column: 9, scope: !4621)
!4647 = !DILocation(line: 0, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 6168, column: 11)
!4649 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 6164, column: 5)
!4650 = !DILocation(line: 6163, column: 3, scope: !4621)
!4651 = !DILocation(line: 6165, column: 33, scope: !4649)
!4652 = !DILocation(line: 6165, column: 50, scope: !4649)
!4653 = !DILocation(line: 6165, column: 7, scope: !4649)
!4654 = !DILocation(line: 6166, column: 7, scope: !4649)
!4655 = !DILocation(line: 6167, column: 38, scope: !4649)
!4656 = !DILocation(line: 6167, column: 7, scope: !4649)
!4657 = !DILocation(line: 6170, column: 11, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 6170, column: 11)
!4659 = !DILocation(line: 6170, column: 11, scope: !4649)
!4660 = !DILocation(line: 6171, column: 2, scope: !4658)
!4661 = distinct !{!4661, !4650, !4662}
!4662 = !DILocation(line: 6173, column: 5, scope: !4621)
!4663 = !DILocation(line: 6174, column: 3, scope: !4621)
!4664 = !DILocation(line: 6169, column: 2, scope: !4648)
!4665 = !DILocation(line: 6176, column: 7, scope: !4621)
!4666 = !DILocation(line: 6177, column: 5, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 6176, column: 7)
!4668 = !DILocation(line: 6179, column: 9, scope: !4621)
!4669 = !DILocation(line: 6180, column: 7, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 6180, column: 7)
!4671 = !DILocation(line: 6180, column: 21, scope: !4670)
!4672 = !DILocation(line: 6180, column: 11, scope: !4670)
!4673 = !DILocation(line: 6181, column: 5, scope: !4670)
!4674 = !DILocation(line: 6183, column: 13, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 6183, column: 7)
!4676 = !DILocation(line: 6183, column: 23, scope: !4675)
!4677 = !DILocation(line: 6183, column: 27, scope: !4675)
!4678 = !DILocation(line: 6183, column: 7, scope: !4621)
!4679 = !DILocation(line: 6185, column: 31, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 6184, column: 5)
!4681 = !DILocation(line: 6185, column: 7, scope: !4680)
!4682 = !DILocation(line: 6186, column: 7, scope: !4680)
!4683 = !DILocation(line: 6190, column: 14, scope: !4621)
!4684 = !DILocation(line: 6190, column: 3, scope: !4621)
!4685 = !DILocation(line: 6194, column: 7, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 6194, column: 7)
!4687 = !DILocation(line: 6194, column: 12, scope: !4686)
!4688 = !DILocation(line: 6194, column: 21, scope: !4686)
!4689 = !DILocation(line: 6194, column: 26, scope: !4686)
!4690 = !DILocation(line: 6194, column: 32, scope: !4686)
!4691 = !DILocation(line: 6194, column: 41, scope: !4686)
!4692 = !DILocation(line: 6194, column: 35, scope: !4686)
!4693 = !DILocation(line: 6194, column: 7, scope: !4621)
!4694 = !DILocation(line: 6198, column: 7, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 6195, column: 5)
!4696 = !DILocation(line: 6199, column: 19, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 6199, column: 7)
!4698 = !DILocation(line: 6199, column: 25, scope: !4697)
!4699 = !DILocation(line: 6199, column: 12, scope: !4697)
!4700 = !DILocation(line: 0, scope: !4697)
!4701 = !DILocation(line: 6199, column: 7, scope: !4697)
!4702 = !DILocation(line: 6201, column: 10, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 6200, column: 2)
!4704 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 6199, column: 7)
!4705 = !DILocation(line: 6203, column: 4, scope: !4703)
!4706 = !DILocation(line: 6206, column: 4, scope: !4703)
!4707 = !DILocation(line: 6199, column: 51, scope: !4704)
!4708 = !DILocation(line: 6199, column: 7, scope: !4704)
!4709 = distinct !{!4709, !4701, !4710}
!4710 = !DILocation(line: 6209, column: 2, scope: !4697)
!4711 = !DILocation(line: 6212, column: 7, scope: !4639)
!4712 = !DILocation(line: 6205, column: 6, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 6204, column: 8)
!4714 = !DILocation(line: 6156, column: 37, scope: !4621)
!4715 = !DILocation(line: 6212, column: 12, scope: !4639)
!4716 = !DILocation(line: 6212, column: 21, scope: !4639)
!4717 = !DILocation(line: 6212, column: 26, scope: !4639)
!4718 = !DILocation(line: 6212, column: 32, scope: !4639)
!4719 = !DILocation(line: 6212, column: 41, scope: !4639)
!4720 = !DILocation(line: 6212, column: 35, scope: !4639)
!4721 = !DILocation(line: 6212, column: 45, scope: !4639)
!4722 = !DILocation(line: 6212, column: 48, scope: !4639)
!4723 = !DILocation(line: 6212, column: 7, scope: !4621)
!4724 = !DILocation(line: 6215, column: 25, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 6213, column: 5)
!4726 = !DILocation(line: 6215, column: 7, scope: !4725)
!4727 = !DILocation(line: 6216, column: 12, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 6216, column: 11)
!4729 = !DILocation(line: 6216, column: 11, scope: !4725)
!4730 = !DILocation(line: 6217, column: 2, scope: !4728)
!4731 = !DILocation(line: 6219, column: 11, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 6219, column: 11)
!4733 = !DILocation(line: 6219, column: 19, scope: !4732)
!4734 = !DILocation(line: 6219, column: 22, scope: !4732)
!4735 = !DILocation(line: 6219, column: 11, scope: !4725)
!4736 = !DILocation(line: 6220, column: 2, scope: !4732)
!4737 = !DILocation(line: 6222, column: 7, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 6222, column: 7)
!4739 = !DILocation(line: 6222, column: 7, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 6222, column: 7)
!4741 = !DILocation(line: 0, scope: !4738)
!4742 = !DILocation(line: 6223, column: 2, scope: !4740)
!4743 = !DILocation(line: 0, scope: !4740)
!4744 = distinct !{!4744, !4737, !4745}
!4745 = !DILocation(line: 6223, column: 36, scope: !4738)
!4746 = !DILocation(line: 6225, column: 7, scope: !4725)
!4747 = !DILocation(line: 6226, column: 25, scope: !4725)
!4748 = !DILocation(line: 6226, column: 7, scope: !4725)
!4749 = !DILocation(line: 6227, column: 5, scope: !4725)
!4750 = !DILocation(line: 6228, column: 12, scope: !4638)
!4751 = !DILocation(line: 6228, column: 33, scope: !4638)
!4752 = !DILocation(line: 6228, column: 12, scope: !4639)
!4753 = !DILocation(line: 6233, column: 25, scope: !4637)
!4754 = !DILocation(line: 0, scope: !4637)
!4755 = !DILocation(line: 6235, column: 11, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 6235, column: 11)
!4757 = !DILocation(line: 6236, column: 4, scope: !4756)
!4758 = !DILocation(line: 6236, column: 7, scope: !4756)
!4759 = !DILocation(line: 6236, column: 39, scope: !4756)
!4760 = !DILocation(line: 6236, column: 36, scope: !4756)
!4761 = !DILocation(line: 6237, column: 4, scope: !4756)
!4762 = !DILocation(line: 6237, column: 20, scope: !4756)
!4763 = !DILocation(line: 6237, column: 7, scope: !4756)
!4764 = !DILocation(line: 6237, column: 50, scope: !4756)
!4765 = !DILocation(line: 6235, column: 11, scope: !4637)
!4766 = !DILocation(line: 6238, column: 2, scope: !4756)
!4767 = !DILocation(line: 6241, column: 9, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 6241, column: 8)
!4769 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 6240, column: 2)
!4770 = !DILocation(line: 6241, column: 8, scope: !4769)
!4771 = !DILocation(line: 6242, column: 6, scope: !4768)
!4772 = !DILocation(line: 6244, column: 8, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 6244, column: 8)
!4774 = !DILocation(line: 6244, column: 8, scope: !4769)
!4775 = !DILocation(line: 6245, column: 6, scope: !4773)
!4776 = !DILocation(line: 6247, column: 4, scope: !4769)
!4777 = !DILocation(line: 6248, column: 4, scope: !4769)
!4778 = !DILocation(line: 6258, column: 17, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 6258, column: 11)
!4780 = !DILocation(line: 6258, column: 20, scope: !4779)
!4781 = !DILocation(line: 6258, column: 38, scope: !4779)
!4782 = !DILocation(line: 6258, column: 11, scope: !4641)
!4783 = !DILocation(line: 6260, column: 8, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 6260, column: 8)
!4785 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 6259, column: 2)
!4786 = !DILocation(line: 6260, column: 8, scope: !4785)
!4787 = !DILocation(line: 6262, column: 16, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 6261, column: 6)
!4789 = !DILocation(line: 0, scope: !4641)
!4790 = !DILocation(line: 6264, column: 6, scope: !4788)
!4791 = !DILocation(line: 6270, column: 9, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !3, line: 6270, column: 8)
!4793 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 6269, column: 2)
!4794 = !DILocation(line: 6270, column: 8, scope: !4793)
!4795 = !DILocation(line: 6271, column: 6, scope: !4792)
!4796 = !DILocation(line: 0, scope: !4779)
!4797 = !DILocation(line: 6275, column: 11, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 6275, column: 11)
!4799 = !DILocation(line: 6275, column: 11, scope: !4641)
!4800 = !DILocation(line: 6276, column: 2, scope: !4798)
!4801 = !DILocation(line: 6278, column: 7, scope: !4641)
!4802 = !DILocation(line: 6279, column: 11, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 6279, column: 11)
!4804 = !DILocation(line: 6279, column: 11, scope: !4641)
!4805 = !DILocation(line: 6280, column: 2, scope: !4803)
!4806 = !DILocation(line: 6283, column: 3, scope: !4621)
!4807 = !DILocation(line: 6286, column: 3, scope: !4621)
!4808 = !DILocation(line: 6287, column: 1, scope: !4621)
!4809 = distinct !DISubprogram(name: "debug_cfg_stats", scope: !3, file: !3, line: 2089, type: !2972, scopeLine: 2090, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!4810 = !DILocation(line: 2091, column: 19, scope: !4809)
!4811 = !DILocation(line: 2091, column: 3, scope: !4809)
!4812 = !DILocation(line: 2092, column: 1, scope: !4809)
!4813 = distinct !DISubprogram(name: "is_ctrl_altering_stmt", scope: !3, file: !3, line: 2208, type: !3633, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4814)
!4814 = !{!4815, !4816}
!4815 = !DILocalVariable(name: "t", arg: 1, scope: !4813, file: !3, line: 2208, type: !1028)
!4816 = !DILocalVariable(name: "flags", scope: !4817, file: !3, line: 2216, type: !693)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 2215, column: 7)
!4818 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 2213, column: 5)
!4819 = !DILocation(line: 0, scope: !4813)
!4820 = !DILocation(line: 2210, column: 3, scope: !4813)
!4821 = !DILocation(line: 2212, column: 11, scope: !4813)
!4822 = !DILocation(line: 2212, column: 3, scope: !4813)
!4823 = !DILocation(line: 2216, column: 14, scope: !4817)
!4824 = !DILocation(line: 0, scope: !4817)
!4825 = !DILocation(line: 2220, column: 14, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2220, column: 6)
!4827 = !DILocation(line: 2220, column: 40, scope: !4826)
!4828 = !DILocation(line: 2220, column: 43, scope: !4826)
!4829 = !DILocation(line: 2220, column: 49, scope: !4826)
!4830 = !DILocation(line: 2220, column: 6, scope: !4817)
!4831 = !DILocation(line: 0, scope: !4818)
!4832 = !DILocation(line: 2236, column: 11, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 2236, column: 11)
!4834 = !DILocation(line: 2236, column: 34, scope: !4833)
!4835 = !DILocation(line: 2236, column: 11, scope: !4818)
!4836 = !DILocation(line: 2249, column: 10, scope: !4813)
!4837 = !DILocation(line: 2249, column: 3, scope: !4813)
!4838 = !DILocation(line: 2250, column: 1, scope: !4813)
!4839 = distinct !DISubprogram(name: "simple_goto_p", scope: !3, file: !3, line: 2256, type: !3633, scopeLine: 2257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4840)
!4840 = !{!4841}
!4841 = !DILocalVariable(name: "t", arg: 1, scope: !4839, file: !3, line: 2256, type: !1028)
!4842 = !DILocation(line: 0, scope: !4839)
!4843 = !DILocation(line: 2258, column: 11, scope: !4839)
!4844 = !DILocation(line: 2258, column: 27, scope: !4839)
!4845 = !DILocation(line: 2259, column: 4, scope: !4839)
!4846 = !DILocation(line: 2259, column: 7, scope: !4839)
!4847 = !DILocation(line: 2259, column: 40, scope: !4839)
!4848 = !DILocation(line: 2258, column: 3, scope: !4839)
!4849 = distinct !DISubprogram(name: "stmt_can_make_abnormal_goto", scope: !3, file: !3, line: 2267, type: !3633, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4850)
!4850 = !{!4851}
!4851 = !DILocalVariable(name: "t", arg: 1, scope: !4849, file: !3, line: 2267, type: !1028)
!4852 = !DILocation(line: 0, scope: !4849)
!4853 = !DILocation(line: 2269, column: 7, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 2269, column: 7)
!4855 = !DILocation(line: 2269, column: 7, scope: !4849)
!4856 = !DILocation(line: 2271, column: 7, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 2271, column: 7)
!4858 = !DILocation(line: 2271, column: 7, scope: !4849)
!4859 = !DILocation(line: 2272, column: 12, scope: !4857)
!4860 = !DILocation(line: 2272, column: 40, scope: !4857)
!4861 = !DILocation(line: 2272, column: 43, scope: !4857)
!4862 = !DILocation(line: 2272, column: 49, scope: !4857)
!4863 = !DILocation(line: 2272, column: 5, scope: !4857)
!4864 = !DILocation(line: 2274, column: 1, scope: !4849)
!4865 = distinct !DISubprogram(name: "is_gimple_call", scope: !613, file: !613, line: 1870, type: !3903, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4866)
!4866 = !{!4867}
!4867 = !DILocalVariable(name: "gs", arg: 1, scope: !4865, file: !613, line: 1870, type: !3078)
!4868 = !DILocation(line: 0, scope: !4865)
!4869 = !DILocation(line: 1872, column: 10, scope: !4865)
!4870 = !DILocation(line: 1872, column: 27, scope: !4865)
!4871 = !DILocation(line: 1872, column: 3, scope: !4865)
!4872 = distinct !DISubprogram(name: "stmt_ends_bb_p", scope: !3, file: !3, line: 2319, type: !3633, scopeLine: 2320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4873)
!4873 = !{!4874}
!4874 = !DILocalVariable(name: "t", arg: 1, scope: !4872, file: !3, line: 2319, type: !1028)
!4875 = !DILocation(line: 0, scope: !4872)
!4876 = !DILocation(line: 2321, column: 10, scope: !4872)
!4877 = !DILocation(line: 2321, column: 27, scope: !4872)
!4878 = !DILocation(line: 2321, column: 30, scope: !4872)
!4879 = !DILocation(line: 2321, column: 3, scope: !4872)
!4880 = distinct !DISubprogram(name: "delete_tree_cfg_annotations", scope: !3, file: !3, line: 2327, type: !2972, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!4881 = !DILocation(line: 2329, column: 3, scope: !4880)
!4882 = !DILocation(line: 2329, column: 22, scope: !4880)
!4883 = !DILocation(line: 2330, column: 1, scope: !4880)
!4884 = distinct !DISubprogram(name: "first_stmt", scope: !3, file: !3, line: 2336, type: !3055, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4885)
!4885 = !{!4886, !4887, !4888}
!4886 = !DILocalVariable(name: "bb", arg: 1, scope: !4884, file: !3, line: 2336, type: !1670)
!4887 = !DILocalVariable(name: "i", scope: !4884, file: !3, line: 2338, type: !2222)
!4888 = !DILocalVariable(name: "stmt", scope: !4884, file: !3, line: 2339, type: !1028)
!4889 = !DILocation(line: 0, scope: !4884)
!4890 = !DILocation(line: 2338, column: 3, scope: !4884)
!4891 = !DILocation(line: 2338, column: 28, scope: !4884)
!4892 = !DILocation(line: 2341, column: 3, scope: !4884)
!4893 = !DILocation(line: 2341, column: 11, scope: !4884)
!4894 = !DILocation(line: 2341, column: 25, scope: !4884)
!4895 = !DILocation(line: 2341, column: 53, scope: !4884)
!4896 = !DILocation(line: 2341, column: 28, scope: !4884)
!4897 = !DILocation(line: 2343, column: 7, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 2342, column: 5)
!4899 = distinct !{!4899, !4892, !4900}
!4900 = !DILocation(line: 2345, column: 5, scope: !4884)
!4901 = !DILocation(line: 2347, column: 1, scope: !4884)
!4902 = !DILocation(line: 2346, column: 3, scope: !4884)
!4903 = distinct !DISubprogram(name: "gsi_last_bb", scope: !613, file: !613, line: 4450, type: !3210, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4904)
!4904 = !{!4905, !4906, !4907}
!4905 = !DILocalVariable(name: "bb", arg: 1, scope: !4903, file: !613, line: 4450, type: !1670)
!4906 = !DILocalVariable(name: "i", scope: !4903, file: !613, line: 4452, type: !2222)
!4907 = !DILocalVariable(name: "seq", scope: !4903, file: !613, line: 4453, type: !1018)
!4908 = !DILocation(line: 0, scope: !4903)
!4909 = !DILocation(line: 4452, column: 24, scope: !4903)
!4910 = !DILocation(line: 4455, column: 9, scope: !4903)
!4911 = !DILocation(line: 4456, column: 11, scope: !4903)
!4912 = !DILocation(line: 4456, column: 5, scope: !4903)
!4913 = !DILocation(line: 4456, column: 9, scope: !4903)
!4914 = !DILocation(line: 4457, column: 5, scope: !4903)
!4915 = !DILocation(line: 4457, column: 9, scope: !4903)
!4916 = !DILocation(line: 4458, column: 5, scope: !4903)
!4917 = !DILocation(line: 4458, column: 8, scope: !4903)
!4918 = !DILocation(line: 4461, column: 1, scope: !4903)
!4919 = distinct !DISubprogram(name: "gsi_prev", scope: !613, file: !613, line: 4493, type: !3320, scopeLine: 4494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4920)
!4920 = !{!4921}
!4921 = !DILocalVariable(name: "i", arg: 1, scope: !4919, file: !613, line: 4493, type: !3322)
!4922 = !DILocation(line: 0, scope: !4919)
!4923 = !DILocation(line: 4495, column: 15, scope: !4919)
!4924 = !DILocation(line: 4495, column: 20, scope: !4919)
!4925 = !DILocation(line: 4495, column: 10, scope: !4919)
!4926 = !DILocation(line: 4496, column: 1, scope: !4919)
!4927 = distinct !DISubprogram(name: "last_and_only_stmt", scope: !3, file: !3, line: 2381, type: !3055, scopeLine: 2382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4928)
!4928 = !{!4929, !4930, !4931, !4932}
!4929 = !DILocalVariable(name: "bb", arg: 1, scope: !4927, file: !3, line: 2381, type: !1670)
!4930 = !DILocalVariable(name: "i", scope: !4927, file: !3, line: 2383, type: !2222)
!4931 = !DILocalVariable(name: "last", scope: !4927, file: !3, line: 2384, type: !1028)
!4932 = !DILocalVariable(name: "prev", scope: !4927, file: !3, line: 2384, type: !1028)
!4933 = !DILocation(line: 0, scope: !4927)
!4934 = !DILocation(line: 2383, column: 3, scope: !4927)
!4935 = !DILocation(line: 2383, column: 28, scope: !4927)
!4936 = !DILocation(line: 2386, column: 7, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2386, column: 7)
!4938 = !DILocation(line: 2386, column: 7, scope: !4927)
!4939 = !DILocation(line: 2389, column: 10, scope: !4927)
!4940 = !DILocation(line: 2390, column: 3, scope: !4927)
!4941 = !DILocation(line: 2391, column: 7, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2391, column: 7)
!4943 = !DILocation(line: 2391, column: 7, scope: !4927)
!4944 = !DILocation(line: 2401, column: 10, scope: !4927)
!4945 = !DILocation(line: 2402, column: 7, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2402, column: 7)
!4947 = !DILocation(line: 2402, column: 26, scope: !4946)
!4948 = !DILocation(line: 0, scope: !4946)
!4949 = !DILocation(line: 2406, column: 1, scope: !4927)
!4950 = distinct !DISubprogram(name: "gsi_last_nondebug_bb", scope: !613, file: !613, line: 4562, type: !3210, scopeLine: 4563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4951)
!4951 = !{!4952, !4953}
!4952 = !DILocalVariable(name: "bb", arg: 1, scope: !4950, file: !613, line: 4562, type: !1670)
!4953 = !DILocalVariable(name: "i", scope: !4950, file: !613, line: 4564, type: !2222)
!4954 = !DILocation(line: 0, scope: !4950)
!4955 = !DILocation(line: 4564, column: 24, scope: !4950)
!4956 = !DILocation(line: 4564, column: 28, scope: !4950)
!4957 = !DILocation(line: 4566, column: 8, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4950, file: !613, line: 4566, column: 7)
!4959 = !DILocation(line: 4566, column: 22, scope: !4958)
!4960 = !DILocation(line: 4566, column: 42, scope: !4958)
!4961 = !DILocation(line: 4566, column: 25, scope: !4958)
!4962 = !DILocation(line: 4566, column: 7, scope: !4950)
!4963 = !DILocation(line: 4567, column: 5, scope: !4958)
!4964 = !DILocation(line: 4569, column: 3, scope: !4950)
!4965 = distinct !DISubprogram(name: "gsi_prev_nondebug", scope: !613, file: !613, line: 4535, type: !3320, scopeLine: 4536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4966)
!4966 = !{!4967}
!4967 = !DILocalVariable(name: "i", arg: 1, scope: !4965, file: !613, line: 4535, type: !3322)
!4968 = !DILocation(line: 0, scope: !4965)
!4969 = !DILocation(line: 4537, column: 3, scope: !4965)
!4970 = !DILocation(line: 4539, column: 7, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4965, file: !613, line: 4538, column: 5)
!4972 = !DILocation(line: 4541, column: 11, scope: !4965)
!4973 = !DILocation(line: 4541, column: 26, scope: !4965)
!4974 = !DILocation(line: 4541, column: 46, scope: !4965)
!4975 = !DILocation(line: 4541, column: 29, scope: !4965)
!4976 = !DILocation(line: 4540, column: 5, scope: !4971)
!4977 = distinct !{!4977, !4969, !4978}
!4978 = !DILocation(line: 4541, column: 60, scope: !4965)
!4979 = !DILocation(line: 4542, column: 1, scope: !4965)
!4980 = distinct !DISubprogram(name: "verify_types_in_gimple_seq", scope: !3, file: !3, line: 3883, type: !4981, scopeLine: 3884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4983)
!4981 = !DISubroutineType(types: !4982)
!4982 = !{null, !1018}
!4983 = !{!4984}
!4984 = !DILocalVariable(name: "stmts", arg: 1, scope: !4980, file: !3, line: 3883, type: !1018)
!4985 = !DILocation(line: 0, scope: !4980)
!4986 = !DILocation(line: 3885, column: 7, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 3885, column: 7)
!4988 = !DILocation(line: 3885, column: 7, scope: !4980)
!4989 = !DILocation(line: 3886, column: 5, scope: !4987)
!4990 = !DILocation(line: 3887, column: 1, scope: !4980)
!4991 = distinct !DISubprogram(name: "verify_types_in_gimple_seq_2", scope: !3, file: !3, line: 3838, type: !4992, scopeLine: 3839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4994)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{!692, !1018}
!4994 = !{!4995, !4996, !4997, !4998, !5002}
!4995 = !DILocalVariable(name: "stmts", arg: 1, scope: !4991, file: !3, line: 3838, type: !1018)
!4996 = !DILocalVariable(name: "ittr", scope: !4991, file: !3, line: 3840, type: !2222)
!4997 = !DILocalVariable(name: "err", scope: !4991, file: !3, line: 3841, type: !692)
!4998 = !DILocalVariable(name: "stmt", scope: !4999, file: !3, line: 3845, type: !1028)
!4999 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 3844, column: 5)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 3843, column: 3)
!5001 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 3843, column: 3)
!5002 = !DILocalVariable(name: "err2", scope: !5003, file: !3, line: 3868, type: !692)
!5003 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 3867, column: 4)
!5004 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 3848, column: 9)
!5005 = !DILocation(line: 0, scope: !4991)
!5006 = !DILocation(line: 3840, column: 3, scope: !4991)
!5007 = !DILocation(line: 3843, column: 15, scope: !5001)
!5008 = !DILocation(line: 3843, column: 8, scope: !5001)
!5009 = !DILocation(line: 3843, column: 35, scope: !5000)
!5010 = !DILocation(line: 3843, column: 34, scope: !5000)
!5011 = !DILocation(line: 3843, column: 3, scope: !5001)
!5012 = !DILocation(line: 3845, column: 21, scope: !4999)
!5013 = !DILocation(line: 0, scope: !4999)
!5014 = !DILocation(line: 3847, column: 15, scope: !4999)
!5015 = !DILocation(line: 3847, column: 7, scope: !4999)
!5016 = !DILocation(line: 3850, column: 41, scope: !5004)
!5017 = !DILocation(line: 3850, column: 11, scope: !5004)
!5018 = !DILocation(line: 3850, column: 8, scope: !5004)
!5019 = !DILocation(line: 3851, column: 4, scope: !5004)
!5020 = !DILocation(line: 3854, column: 41, scope: !5004)
!5021 = !DILocation(line: 3854, column: 11, scope: !5004)
!5022 = !DILocation(line: 3854, column: 8, scope: !5004)
!5023 = !DILocation(line: 3855, column: 41, scope: !5004)
!5024 = !DILocation(line: 3855, column: 11, scope: !5004)
!5025 = !DILocation(line: 3855, column: 8, scope: !5004)
!5026 = !DILocation(line: 3856, column: 4, scope: !5004)
!5027 = !DILocation(line: 3859, column: 41, scope: !5004)
!5028 = !DILocation(line: 3859, column: 11, scope: !5004)
!5029 = !DILocation(line: 3859, column: 8, scope: !5004)
!5030 = !DILocation(line: 3860, column: 4, scope: !5004)
!5031 = !DILocation(line: 3863, column: 41, scope: !5004)
!5032 = !DILocation(line: 3863, column: 11, scope: !5004)
!5033 = !DILocation(line: 3863, column: 8, scope: !5004)
!5034 = !DILocation(line: 3864, column: 4, scope: !5004)
!5035 = !DILocation(line: 3868, column: 18, scope: !5003)
!5036 = !DILocation(line: 0, scope: !5003)
!5037 = !DILocation(line: 3869, column: 10, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 3869, column: 10)
!5039 = !DILocation(line: 3869, column: 10, scope: !5003)
!5040 = !DILocation(line: 3870, column: 8, scope: !5038)
!5041 = !DILocation(line: 3871, column: 10, scope: !5003)
!5042 = !DILocation(line: 3873, column: 2, scope: !5004)
!5043 = !DILocation(line: 0, scope: !5004)
!5044 = !DILocation(line: 3843, column: 53, scope: !5000)
!5045 = !DILocation(line: 3843, column: 3, scope: !5000)
!5046 = distinct !{!5046, !5011, !5047}
!5047 = !DILocation(line: 3874, column: 5, scope: !5001)
!5048 = !DILocation(line: 3877, column: 1, scope: !4991)
!5049 = !DILocation(line: 3876, column: 3, scope: !4991)
!5050 = distinct !DISubprogram(name: "tree_node_can_be_shared", scope: !3, file: !3, line: 3987, type: !5051, scopeLine: 3988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5053)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{!692, !704}
!5053 = !{!5054}
!5054 = !DILocalVariable(name: "t", arg: 1, scope: !5050, file: !3, line: 3987, type: !704)
!5055 = !DILocation(line: 0, scope: !5050)
!5056 = !DILocation(line: 3989, column: 7, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 3989, column: 7)
!5058 = !DILocation(line: 3990, column: 7, scope: !5057)
!5059 = !DILocation(line: 3990, column: 10, scope: !5057)
!5060 = !DILocation(line: 3991, column: 7, scope: !5057)
!5061 = !DILocation(line: 3991, column: 10, scope: !5057)
!5062 = !DILocation(line: 3991, column: 24, scope: !5057)
!5063 = !DILocation(line: 3992, column: 15, scope: !5057)
!5064 = !DILocation(line: 3992, column: 12, scope: !5057)
!5065 = !DILocation(line: 3992, column: 7, scope: !5057)
!5066 = !DILocation(line: 3993, column: 24, scope: !5057)
!5067 = !DILocation(line: 3989, column: 7, scope: !5050)
!5068 = !DILocation(line: 3996, column: 21, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 3996, column: 7)
!5070 = !DILocation(line: 3996, column: 7, scope: !5050)
!5071 = !DILocation(line: 3999, column: 3, scope: !5050)
!5072 = !DILocation(line: 3999, column: 12, scope: !5050)
!5073 = !DILocation(line: 3999, column: 26, scope: !5050)
!5074 = !DILocation(line: 3999, column: 39, scope: !5050)
!5075 = !DILocation(line: 3999, column: 56, scope: !5050)
!5076 = !DILocation(line: 4000, column: 5, scope: !5050)
!5077 = !DILocation(line: 4000, column: 33, scope: !5050)
!5078 = !DILocation(line: 4000, column: 8, scope: !5050)
!5079 = !DILocation(line: 4001, column: 3, scope: !5050)
!5080 = !DILocation(line: 4001, column: 6, scope: !5050)
!5081 = !DILocation(line: 4001, column: 20, scope: !5050)
!5082 = !DILocation(line: 4002, column: 3, scope: !5050)
!5083 = !DILocation(line: 4003, column: 3, scope: !5050)
!5084 = !DILocation(line: 4004, column: 9, scope: !5050)
!5085 = distinct !{!5085, !5071, !5084}
!5086 = !DILocation(line: 4006, column: 7, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 4006, column: 7)
!5088 = !DILocation(line: 4010, column: 1, scope: !5050)
!5089 = distinct !DISubprogram(name: "verify_stmts", scope: !3, file: !3, line: 4054, type: !2972, scopeLine: 4055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5090)
!5090 = !{!5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5102, !5103, !5110, !5111, !5115, !5118, !5119}
!5091 = !DILocalVariable(name: "bb", scope: !5089, file: !3, line: 4056, type: !1670)
!5092 = !DILocalVariable(name: "gsi", scope: !5089, file: !3, line: 4057, type: !2222)
!5093 = !DILocalVariable(name: "err", scope: !5089, file: !3, line: 4058, type: !692)
!5094 = !DILocalVariable(name: "visited", scope: !5089, file: !3, line: 4059, type: !2230)
!5095 = !DILocalVariable(name: "visited_stmts", scope: !5089, file: !3, line: 4059, type: !2230)
!5096 = !DILocalVariable(name: "addr", scope: !5089, file: !3, line: 4060, type: !704)
!5097 = !DILocalVariable(name: "wi", scope: !5089, file: !3, line: 4061, type: !2219)
!5098 = !DILocalVariable(name: "phi", scope: !5099, file: !3, line: 4072, type: !1028)
!5099 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 4071, column: 5)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 4070, column: 3)
!5101 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 4070, column: 3)
!5102 = !DILocalVariable(name: "i", scope: !5099, file: !3, line: 4073, type: !1173)
!5103 = !DILocalVariable(name: "t", scope: !5104, file: !3, line: 4087, type: !704)
!5104 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 4086, column: 6)
!5105 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 4085, column: 4)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 4085, column: 4)
!5107 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 4076, column: 2)
!5108 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 4075, column: 7)
!5109 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 4075, column: 7)
!5110 = !DILocalVariable(name: "addr", scope: !5104, file: !3, line: 4088, type: !704)
!5111 = !DILocalVariable(name: "stmt", scope: !5112, file: !3, line: 4130, type: !1028)
!5112 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 4129, column: 2)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 4128, column: 7)
!5114 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 4128, column: 7)
!5115 = !DILocalVariable(name: "decl", scope: !5116, file: !3, line: 4151, type: !704)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 4150, column: 6)
!5117 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 4149, column: 8)
!5118 = !DILocalVariable(name: "uid", scope: !5116, file: !3, line: 4152, type: !693)
!5119 = !DILocalVariable(name: "lp", scope: !5120, file: !3, line: 4164, type: !1585)
!5120 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 4163, column: 3)
!5121 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 4162, column: 12)
!5122 = !DILocation(line: 4057, column: 3, scope: !5089)
!5123 = !DILocation(line: 0, scope: !5089)
!5124 = !DILocation(line: 4061, column: 3, scope: !5089)
!5125 = !DILocation(line: 4063, column: 3, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 4063, column: 3)
!5127 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 4063, column: 3)
!5128 = !DILocation(line: 4063, column: 3, scope: !5127)
!5129 = !DILocation(line: 4064, column: 13, scope: !5089)
!5130 = !DILocation(line: 4065, column: 19, scope: !5089)
!5131 = !DILocation(line: 4067, column: 3, scope: !5089)
!5132 = !DILocation(line: 4068, column: 6, scope: !5089)
!5133 = !DILocation(line: 4068, column: 11, scope: !5089)
!5134 = !DILocation(line: 4070, column: 3, scope: !5101)
!5135 = !DILocation(line: 0, scope: !5109)
!5136 = !DILocation(line: 0, scope: !5104)
!5137 = !DILocation(line: 0, scope: !5114)
!5138 = !DILocation(line: 4070, column: 3, scope: !5100)
!5139 = !DILocation(line: 4058, column: 8, scope: !5089)
!5140 = !DILocation(line: 0, scope: !5101)
!5141 = !DILocation(line: 4075, column: 18, scope: !5109)
!5142 = !DILocation(line: 4075, column: 12, scope: !5109)
!5143 = !DILocation(line: 4075, column: 40, scope: !5108)
!5144 = !DILocation(line: 4075, column: 39, scope: !5108)
!5145 = !DILocation(line: 4075, column: 7, scope: !5109)
!5146 = !DILocation(line: 4077, column: 10, scope: !5107)
!5147 = !DILocation(line: 0, scope: !5099)
!5148 = !DILocation(line: 4078, column: 39, scope: !5107)
!5149 = !DILocation(line: 4078, column: 4, scope: !5107)
!5150 = !DILocation(line: 4079, column: 8, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 4079, column: 8)
!5152 = !DILocation(line: 4079, column: 24, scope: !5151)
!5153 = !DILocation(line: 4079, column: 8, scope: !5107)
!5154 = !DILocation(line: 4081, column: 8, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 4080, column: 6)
!5156 = !DILocation(line: 4082, column: 12, scope: !5155)
!5157 = !DILocation(line: 4083, column: 6, scope: !5155)
!5158 = !DILocation(line: 4085, column: 9, scope: !5106)
!5159 = !DILocation(line: 0, scope: !5106)
!5160 = !DILocation(line: 0, scope: !5107)
!5161 = !DILocation(line: 4085, column: 20, scope: !5105)
!5162 = !DILocation(line: 4085, column: 18, scope: !5105)
!5163 = !DILocation(line: 4085, column: 4, scope: !5106)
!5164 = !DILocation(line: 4087, column: 8, scope: !5104)
!5165 = !DILocation(line: 4087, column: 17, scope: !5104)
!5166 = !DILocation(line: 4087, column: 13, scope: !5104)
!5167 = !DILocation(line: 4090, column: 13, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 4090, column: 12)
!5169 = !DILocation(line: 4090, column: 12, scope: !5104)
!5170 = !DILocation(line: 4092, column: 5, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 4091, column: 3)
!5172 = !DILocation(line: 4093, column: 5, scope: !5171)
!5173 = !DILocation(line: 4094, column: 9, scope: !5171)
!5174 = !DILocation(line: 4095, column: 5, scope: !5171)
!5175 = !DILocation(line: 4099, column: 17, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 4099, column: 17)
!5177 = !DILocation(line: 4099, column: 31, scope: !5176)
!5178 = !DILocation(line: 4100, column: 10, scope: !5176)
!5179 = !DILocation(line: 4100, column: 27, scope: !5176)
!5180 = !DILocation(line: 4101, column: 10, scope: !5176)
!5181 = !DILocation(line: 4101, column: 14, scope: !5176)
!5182 = !DILocation(line: 4099, column: 17, scope: !5168)
!5183 = !DILocation(line: 4103, column: 5, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 4102, column: 3)
!5185 = !DILocation(line: 4104, column: 5, scope: !5184)
!5186 = !DILocation(line: 4105, column: 25, scope: !5184)
!5187 = !DILocation(line: 4105, column: 5, scope: !5184)
!5188 = !DILocation(line: 4106, column: 9, scope: !5184)
!5189 = !DILocation(line: 4107, column: 3, scope: !5184)
!5190 = !DILocation(line: 4109, column: 15, scope: !5104)
!5191 = !DILocation(line: 4110, column: 12, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 4110, column: 12)
!5193 = !DILocation(line: 4110, column: 12, scope: !5104)
!5194 = !DILocation(line: 4112, column: 5, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 4111, column: 3)
!5196 = !DILocation(line: 4113, column: 5, scope: !5195)
!5197 = !DILocation(line: 4114, column: 5, scope: !5195)
!5198 = !DILocation(line: 4115, column: 9, scope: !5195)
!5199 = !DILocation(line: 4116, column: 3, scope: !5195)
!5200 = !DILocation(line: 4117, column: 6, scope: !5105)
!5201 = !DILocation(line: 4085, column: 48, scope: !5105)
!5202 = !DILocation(line: 4085, column: 4, scope: !5105)
!5203 = distinct !{!5203, !5163, !5204}
!5204 = !DILocation(line: 4117, column: 6, scope: !5106)
!5205 = !DILocation(line: 4075, column: 57, scope: !5108)
!5206 = !DILocation(line: 4075, column: 7, scope: !5108)
!5207 = distinct !{!5207, !5145, !5208}
!5208 = !DILocation(line: 4126, column: 2, scope: !5109)
!5209 = !DILocation(line: 4128, column: 18, scope: !5114)
!5210 = !DILocation(line: 4128, column: 12, scope: !5114)
!5211 = !DILocation(line: 4128, column: 38, scope: !5113)
!5212 = !DILocation(line: 4128, column: 37, scope: !5113)
!5213 = !DILocation(line: 4128, column: 7, scope: !5114)
!5214 = !DILocation(line: 4130, column: 18, scope: !5112)
!5215 = !DILocation(line: 0, scope: !5112)
!5216 = !DILocation(line: 4132, column: 8, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 4132, column: 8)
!5218 = !DILocation(line: 4132, column: 27, scope: !5217)
!5219 = !DILocation(line: 4133, column: 8, scope: !5217)
!5220 = !DILocation(line: 4133, column: 11, scope: !5217)
!5221 = !DILocation(line: 4133, column: 30, scope: !5217)
!5222 = !DILocation(line: 4132, column: 8, scope: !5112)
!5223 = !DILocation(line: 4135, column: 8, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 4134, column: 6)
!5225 = !DILocation(line: 4136, column: 8, scope: !5224)
!5226 = !DILocation(line: 4137, column: 12, scope: !5224)
!5227 = !DILocation(line: 4138, column: 6, scope: !5224)
!5228 = !DILocation(line: 4140, column: 39, scope: !5112)
!5229 = !DILocation(line: 4140, column: 4, scope: !5112)
!5230 = !DILocation(line: 4142, column: 8, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 4142, column: 8)
!5232 = !DILocation(line: 4142, column: 25, scope: !5231)
!5233 = !DILocation(line: 4142, column: 8, scope: !5112)
!5234 = !DILocation(line: 4144, column: 8, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 4143, column: 6)
!5236 = !DILocation(line: 4145, column: 8, scope: !5235)
!5237 = !DILocation(line: 4146, column: 12, scope: !5235)
!5238 = !DILocation(line: 4147, column: 6, scope: !5235)
!5239 = !DILocation(line: 4149, column: 8, scope: !5117)
!5240 = !DILocation(line: 4149, column: 27, scope: !5117)
!5241 = !DILocation(line: 4149, column: 8, scope: !5112)
!5242 = !DILocation(line: 4151, column: 20, scope: !5116)
!5243 = !DILocation(line: 0, scope: !5116)
!5244 = !DILocation(line: 4152, column: 18, scope: !5116)
!5245 = !DILocation(line: 4154, column: 16, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 4154, column: 12)
!5247 = !DILocation(line: 4155, column: 5, scope: !5246)
!5248 = !DILocation(line: 4155, column: 8, scope: !5246)
!5249 = !DILocation(line: 4155, column: 57, scope: !5246)
!5250 = !DILocation(line: 4154, column: 12, scope: !5116)
!5251 = !DILocation(line: 4157, column: 5, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 4156, column: 3)
!5253 = !DILocation(line: 4158, column: 9, scope: !5252)
!5254 = !DILocation(line: 4159, column: 3, scope: !5252)
!5255 = !DILocation(line: 4161, column: 14, scope: !5116)
!5256 = !DILocation(line: 4162, column: 12, scope: !5121)
!5257 = !DILocation(line: 4162, column: 12, scope: !5116)
!5258 = !DILocation(line: 4164, column: 25, scope: !5120)
!5259 = !DILocation(line: 0, scope: !5120)
!5260 = !DILocation(line: 4165, column: 21, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 4165, column: 9)
!5262 = !DILocation(line: 4165, column: 14, scope: !5261)
!5263 = !DILocation(line: 4165, column: 9, scope: !5120)
!5264 = !DILocation(line: 4167, column: 9, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 4166, column: 7)
!5266 = !DILocation(line: 4168, column: 13, scope: !5265)
!5267 = !DILocation(line: 4169, column: 7, scope: !5265)
!5268 = !DILocation(line: 4173, column: 11, scope: !5112)
!5269 = !DILocation(line: 4173, column: 8, scope: !5112)
!5270 = !DILocation(line: 4182, column: 27, scope: !5112)
!5271 = !DILocation(line: 4182, column: 11, scope: !5112)
!5272 = !DILocation(line: 4183, column: 8, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 4183, column: 8)
!5274 = !DILocation(line: 4183, column: 8, scope: !5112)
!5275 = !DILocation(line: 4185, column: 8, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 4184, column: 6)
!5277 = !DILocation(line: 4186, column: 8, scope: !5276)
!5278 = !DILocation(line: 4187, column: 8, scope: !5276)
!5279 = !DILocation(line: 4188, column: 12, scope: !5276)
!5280 = !DILocation(line: 4189, column: 6, scope: !5276)
!5281 = !DILocation(line: 4190, column: 4, scope: !5112)
!5282 = !DILocation(line: 4128, column: 7, scope: !5113)
!5283 = distinct !{!5283, !5213, !5284}
!5284 = !DILocation(line: 4191, column: 2, scope: !5114)
!5285 = !DILocation(line: 0, scope: !5100)
!5286 = distinct !{!5286, !5134, !5287}
!5287 = !DILocation(line: 4192, column: 5, scope: !5101)
!5288 = !DILocation(line: 4194, column: 18, scope: !5089)
!5289 = !DILocation(line: 4195, column: 7, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 4195, column: 7)
!5291 = !DILocation(line: 4195, column: 7, scope: !5089)
!5292 = !DILocation(line: 4196, column: 45, scope: !5290)
!5293 = !DILocation(line: 4196, column: 20, scope: !5290)
!5294 = !DILocation(line: 4198, column: 6, scope: !5290)
!5295 = !DILocation(line: 4196, column: 5, scope: !5290)
!5296 = !DILocation(line: 4200, column: 13, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 4200, column: 7)
!5298 = !DILocation(line: 4200, column: 11, scope: !5297)
!5299 = !DILocation(line: 4200, column: 7, scope: !5089)
!5300 = !DILocation(line: 4201, column: 5, scope: !5297)
!5301 = !DILocation(line: 4203, column: 3, scope: !5089)
!5302 = !DILocation(line: 4204, column: 3, scope: !5089)
!5303 = !DILocation(line: 4205, column: 3, scope: !5089)
!5304 = !DILocation(line: 4206, column: 3, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 4206, column: 3)
!5306 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 4206, column: 3)
!5307 = !DILocation(line: 4206, column: 3, scope: !5306)
!5308 = !DILocation(line: 4207, column: 1, scope: !5089)
!5309 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !613, file: !613, line: 3061, type: !3590, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5310)
!5310 = !{!5311}
!5311 = !DILocalVariable(name: "gs", arg: 1, scope: !5309, file: !613, line: 3061, type: !3078)
!5312 = !DILocation(line: 0, scope: !5309)
!5313 = !DILocation(line: 3064, column: 25, scope: !5309)
!5314 = !DILocation(line: 3064, column: 3, scope: !5309)
!5315 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !4075, file: !4075, line: 450, type: !5316, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5318)
!5316 = !DISubroutineType(types: !5317)
!5317 = !{!704, !1028, !1173}
!5318 = !{!5319, !5320, !5321}
!5319 = !DILocalVariable(name: "gs", arg: 1, scope: !5315, file: !4075, line: 450, type: !1028)
!5320 = !DILocalVariable(name: "index", arg: 2, scope: !5315, file: !4075, line: 450, type: !1173)
!5321 = !DILocalVariable(name: "pd", scope: !5315, file: !4075, line: 452, type: !2203)
!5322 = !DILocation(line: 0, scope: !5315)
!5323 = !DILocation(line: 452, column: 46, scope: !5315)
!5324 = !DILocation(line: 452, column: 26, scope: !5315)
!5325 = !DILocation(line: 453, column: 33, scope: !5315)
!5326 = !DILocation(line: 453, column: 10, scope: !5315)
!5327 = !DILocation(line: 453, column: 3, scope: !5315)
!5328 = distinct !DISubprogram(name: "verify_node_sharing", scope: !3, file: !3, line: 4016, type: !5329, scopeLine: 4017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5331)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!704, !1062, !2188, !697}
!5331 = !{!5332, !5333, !5334, !5335, !5336}
!5332 = !DILocalVariable(name: "tp", arg: 1, scope: !5328, file: !3, line: 4016, type: !1062)
!5333 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !5328, file: !3, line: 4016, type: !2188)
!5334 = !DILocalVariable(name: "data", arg: 3, scope: !5328, file: !3, line: 4016, type: !697)
!5335 = !DILocalVariable(name: "wi", scope: !5328, file: !3, line: 4018, type: !2218)
!5336 = !DILocalVariable(name: "visited", scope: !5328, file: !3, line: 4019, type: !2230)
!5337 = !DILocation(line: 0, scope: !5328)
!5338 = !DILocation(line: 4019, column: 64, scope: !5328)
!5339 = !DILocation(line: 4021, column: 32, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 4021, column: 7)
!5341 = !DILocation(line: 4021, column: 7, scope: !5340)
!5342 = !DILocation(line: 4021, column: 7, scope: !5328)
!5343 = !DILocation(line: 4023, column: 22, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 4022, column: 5)
!5345 = !DILocation(line: 4024, column: 7, scope: !5344)
!5346 = !DILocation(line: 4027, column: 36, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 4027, column: 7)
!5348 = !DILocation(line: 4027, column: 7, scope: !5347)
!5349 = !DILocation(line: 4027, column: 7, scope: !5328)
!5350 = !DILocation(line: 4028, column: 12, scope: !5347)
!5351 = !DILocation(line: 4028, column: 5, scope: !5347)
!5352 = !DILocation(line: 4031, column: 1, scope: !5328)
!5353 = distinct !DISubprogram(name: "verify_stmt", scope: !3, file: !3, line: 3894, type: !5354, scopeLine: 3895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5356)
!5354 = !DISubroutineType(types: !5355)
!5355 = !{!692, !3322}
!5356 = !{!5357, !5358, !5359, !5360, !5361, !5362, !5363, !5366}
!5357 = !DILocalVariable(name: "gsi", arg: 1, scope: !5353, file: !3, line: 3894, type: !3322)
!5358 = !DILocalVariable(name: "addr", scope: !5353, file: !3, line: 3896, type: !704)
!5359 = !DILocalVariable(name: "wi", scope: !5353, file: !3, line: 3897, type: !2219)
!5360 = !DILocalVariable(name: "last_in_block", scope: !5353, file: !3, line: 3898, type: !692)
!5361 = !DILocalVariable(name: "stmt", scope: !5353, file: !3, line: 3899, type: !1028)
!5362 = !DILocalVariable(name: "lp_nr", scope: !5353, file: !3, line: 3900, type: !693)
!5363 = !DILocalVariable(name: "decl", scope: !5364, file: !3, line: 3917, type: !704)
!5364 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 3916, column: 5)
!5365 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 3915, column: 7)
!5366 = !DILabel(scope: !5353, name: "fail", file: !3, line: 3978)
!5367 = !DILocation(line: 0, scope: !5353)
!5368 = !DILocation(line: 3897, column: 3, scope: !5353)
!5369 = !DILocation(line: 3898, column: 24, scope: !5353)
!5370 = !DILocation(line: 3899, column: 17, scope: !5353)
!5371 = !DILocation(line: 3902, column: 7, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 3902, column: 7)
!5373 = !DILocation(line: 3902, column: 7, scope: !5353)
!5374 = !DILocation(line: 3915, column: 7, scope: !5365)
!5375 = !DILocation(line: 3915, column: 7, scope: !5353)
!5376 = !DILocation(line: 3919, column: 33, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 3919, column: 11)
!5378 = !DILocation(line: 3919, column: 12, scope: !5377)
!5379 = !DILocation(line: 3919, column: 11, scope: !5364)
!5380 = !DILocation(line: 3921, column: 4, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 3920, column: 2)
!5382 = !DILocation(line: 3922, column: 4, scope: !5381)
!5383 = !DILocation(line: 3925, column: 14, scope: !5364)
!5384 = !DILocation(line: 0, scope: !5364)
!5385 = !DILocation(line: 3926, column: 11, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 3926, column: 11)
!5387 = !DILocation(line: 3927, column: 4, scope: !5386)
!5388 = !DILocation(line: 3927, column: 7, scope: !5386)
!5389 = !DILocation(line: 3927, column: 24, scope: !5386)
!5390 = !DILocation(line: 3928, column: 4, scope: !5386)
!5391 = !DILocation(line: 3928, column: 7, scope: !5386)
!5392 = !DILocation(line: 3929, column: 4, scope: !5386)
!5393 = !DILocation(line: 3929, column: 9, scope: !5386)
!5394 = !DILocation(line: 3930, column: 4, scope: !5386)
!5395 = !DILocation(line: 3930, column: 9, scope: !5386)
!5396 = !DILocation(line: 3926, column: 11, scope: !5364)
!5397 = !DILocation(line: 3932, column: 4, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 3931, column: 2)
!5399 = !DILocation(line: 3933, column: 4, scope: !5398)
!5400 = !DILocation(line: 3937, column: 7, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 3937, column: 7)
!5402 = !DILocation(line: 3937, column: 7, scope: !5353)
!5403 = !DILocation(line: 3940, column: 3, scope: !5353)
!5404 = !DILocation(line: 3941, column: 26, scope: !5353)
!5405 = !DILocation(line: 3941, column: 10, scope: !5353)
!5406 = !DILocation(line: 3942, column: 7, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 3942, column: 7)
!5408 = !DILocation(line: 3942, column: 7, scope: !5353)
!5409 = !DILocation(line: 3944, column: 7, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 3943, column: 5)
!5411 = !DILocation(line: 3945, column: 32, scope: !5410)
!5412 = !DILocation(line: 3945, column: 15, scope: !5410)
!5413 = !DILocation(line: 3945, column: 7, scope: !5410)
!5414 = !DILocation(line: 3946, column: 7, scope: !5410)
!5415 = !DILocation(line: 3947, column: 7, scope: !5410)
!5416 = !DILocation(line: 3955, column: 11, scope: !5353)
!5417 = !DILocation(line: 3956, column: 13, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 3956, column: 7)
!5419 = !DILocation(line: 3956, column: 7, scope: !5353)
!5420 = !DILocation(line: 3958, column: 12, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 3958, column: 11)
!5422 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 3957, column: 5)
!5423 = !DILocation(line: 3958, column: 11, scope: !5422)
!5424 = !DILocation(line: 3963, column: 8, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 3963, column: 8)
!5426 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 3959, column: 2)
!5427 = !DILocation(line: 3963, column: 21, scope: !5425)
!5428 = !DILocation(line: 3963, column: 8, scope: !5426)
!5429 = !DILocation(line: 3965, column: 8, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 3964, column: 6)
!5431 = !DILocation(line: 3966, column: 8, scope: !5430)
!5432 = !DILocation(line: 3969, column: 22, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 3969, column: 16)
!5434 = !DILocation(line: 3969, column: 30, scope: !5433)
!5435 = !DILocation(line: 3969, column: 26, scope: !5433)
!5436 = !DILocation(line: 3969, column: 47, scope: !5433)
!5437 = !DILocation(line: 3969, column: 16, scope: !5421)
!5438 = !DILocation(line: 3971, column: 4, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 3970, column: 2)
!5440 = !DILocation(line: 3972, column: 4, scope: !5439)
!5441 = !DILocation(line: 3978, column: 2, scope: !5353)
!5442 = !DILocation(line: 3979, column: 3, scope: !5353)
!5443 = !DILocation(line: 3980, column: 3, scope: !5353)
!5444 = !DILocation(line: 3981, column: 1, scope: !5353)
!5445 = distinct !DISubprogram(name: "verify_eh_throw_stmt_node", scope: !3, file: !3, line: 4036, type: !5446, scopeLine: 4037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5448)
!5446 = !DISubroutineType(types: !5447)
!5447 = !{!693, !1609, !697}
!5448 = !{!5449, !5450, !5451, !5452}
!5449 = !DILocalVariable(name: "slot", arg: 1, scope: !5445, file: !3, line: 4036, type: !1609)
!5450 = !DILocalVariable(name: "data", arg: 2, scope: !5445, file: !3, line: 4036, type: !697)
!5451 = !DILocalVariable(name: "node", scope: !5445, file: !3, line: 4038, type: !2237)
!5452 = !DILocalVariable(name: "visited", scope: !5445, file: !3, line: 4039, type: !2230)
!5453 = !DILocation(line: 0, scope: !5445)
!5454 = !DILocation(line: 4038, column: 60, scope: !5445)
!5455 = !DILocation(line: 4039, column: 35, scope: !5445)
!5456 = !DILocation(line: 4041, column: 45, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 4041, column: 7)
!5458 = !DILocation(line: 4041, column: 8, scope: !5457)
!5459 = !DILocation(line: 4041, column: 7, scope: !5445)
!5460 = !DILocation(line: 4043, column: 7, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 4042, column: 5)
!5462 = !DILocation(line: 4044, column: 32, scope: !5461)
!5463 = !DILocation(line: 4044, column: 7, scope: !5461)
!5464 = !DILocation(line: 4045, column: 22, scope: !5461)
!5465 = !DILocation(line: 4046, column: 5, scope: !5461)
!5466 = !DILocation(line: 4047, column: 3, scope: !5445)
!5467 = distinct !DISubprogram(name: "gimple_block_label", scope: !3, file: !3, line: 4564, type: !5468, scopeLine: 4565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5470)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!704, !1670}
!5470 = !{!5471, !5472, !5473, !5474, !5475, !5476}
!5471 = !DILocalVariable(name: "bb", arg: 1, scope: !5467, file: !3, line: 4564, type: !1670)
!5472 = !DILocalVariable(name: "i", scope: !5467, file: !3, line: 4566, type: !2222)
!5473 = !DILocalVariable(name: "s", scope: !5467, file: !3, line: 4566, type: !2222)
!5474 = !DILocalVariable(name: "first", scope: !5467, file: !3, line: 4567, type: !692)
!5475 = !DILocalVariable(name: "label", scope: !5467, file: !3, line: 4568, type: !704)
!5476 = !DILocalVariable(name: "stmt", scope: !5467, file: !3, line: 4569, type: !1028)
!5477 = !DILocation(line: 0, scope: !5467)
!5478 = !DILocation(line: 4566, column: 3, scope: !5467)
!5479 = !DILocation(line: 4566, column: 31, scope: !5467)
!5480 = !DILocation(line: 4571, column: 12, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 4571, column: 3)
!5482 = !DILocation(line: 4571, column: 8, scope: !5481)
!5483 = !DILocation(line: 4571, column: 16, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 4571, column: 3)
!5485 = !DILocation(line: 4571, column: 15, scope: !5484)
!5486 = !DILocation(line: 4571, column: 3, scope: !5481)
!5487 = !DILocation(line: 4573, column: 14, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 4572, column: 5)
!5489 = !DILocation(line: 4574, column: 11, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 4574, column: 11)
!5491 = !DILocation(line: 4574, column: 30, scope: !5490)
!5492 = !DILocation(line: 4574, column: 11, scope: !5488)
!5493 = !DILocation(line: 4576, column: 15, scope: !5488)
!5494 = !DILocation(line: 4577, column: 12, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 4577, column: 11)
!5496 = !DILocation(line: 4577, column: 11, scope: !5488)
!5497 = !DILocation(line: 4579, column: 9, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 4579, column: 8)
!5499 = distinct !DILexicalBlock(scope: !5495, file: !3, line: 4578, column: 2)
!5500 = !DILocation(line: 4579, column: 8, scope: !5499)
!5501 = !DILocation(line: 4580, column: 6, scope: !5498)
!5502 = !DILocation(line: 4571, column: 46, scope: !5484)
!5503 = !DILocation(line: 4571, column: 3, scope: !5484)
!5504 = distinct !{!5504, !5486, !5505}
!5505 = !DILocation(line: 4583, column: 5, scope: !5481)
!5506 = !DILocation(line: 4585, column: 11, scope: !5467)
!5507 = !DILocation(line: 4586, column: 10, scope: !5467)
!5508 = !DILocation(line: 4587, column: 3, scope: !5467)
!5509 = !DILocation(line: 4588, column: 3, scope: !5467)
!5510 = !DILocation(line: 4589, column: 1, scope: !5467)
!5511 = distinct !DISubprogram(name: "add_phi_args_after_copy_bb", scope: !3, file: !3, line: 4984, type: !2377, scopeLine: 4985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5512)
!5512 = !{!5513, !5514, !5515}
!5513 = !DILocalVariable(name: "bb_copy", arg: 1, scope: !5511, file: !3, line: 4984, type: !1670)
!5514 = !DILocalVariable(name: "e_copy", scope: !5511, file: !3, line: 4986, type: !1008)
!5515 = !DILocalVariable(name: "ei", scope: !5511, file: !3, line: 4987, type: !5516)
!5516 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !382, line: 682, baseType: !5517)
!5517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !382, line: 679, size: 128, elements: !5518)
!5518 = !{!5519, !5520}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5517, file: !382, line: 680, baseType: !7, size: 32)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !5517, file: !382, line: 681, baseType: !5521, size: 64, offset: 64)
!5521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!5522 = !DILocation(line: 0, scope: !5511)
!5523 = !DILocation(line: 4986, column: 3, scope: !5511)
!5524 = !DILocation(line: 4987, column: 3, scope: !5511)
!5525 = !DILocation(line: 4989, column: 3, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 4989, column: 3)
!5527 = !DILocation(line: 0, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4989, column: 3)
!5529 = !DILocation(line: 4989, column: 3, scope: !5528)
!5530 = !DILocation(line: 4991, column: 37, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 4990, column: 5)
!5532 = !DILocation(line: 4991, column: 7, scope: !5531)
!5533 = distinct !{!5533, !5525, !5534}
!5534 = !DILocation(line: 4992, column: 5, scope: !5526)
!5535 = !DILocation(line: 4993, column: 1, scope: !5511)
!5536 = distinct !DISubprogram(name: "ei_start_1", scope: !382, file: !382, line: 696, type: !5537, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5539)
!5537 = !DISubroutineType(types: !5538)
!5538 = !{!5516, !5521}
!5539 = !{!5540, !5541}
!5540 = !DILocalVariable(name: "ev", arg: 1, scope: !5536, file: !382, line: 696, type: !5521)
!5541 = !DILocalVariable(name: "i", scope: !5536, file: !382, line: 698, type: !5516)
!5542 = !DILocation(line: 0, scope: !5536)
!5543 = !DILocation(line: 700, column: 5, scope: !5536)
!5544 = !DILocation(line: 700, column: 11, scope: !5536)
!5545 = !DILocation(line: 701, column: 5, scope: !5536)
!5546 = !DILocation(line: 701, column: 15, scope: !5536)
!5547 = !DILocation(line: 703, column: 3, scope: !5536)
!5548 = distinct !DISubprogram(name: "ei_cond", scope: !382, file: !382, line: 771, type: !5549, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5551)
!5549 = !DISubroutineType(types: !5550)
!5550 = !{!692, !5516, !2461}
!5551 = !{!5552, !5553}
!5552 = !DILocalVariable(name: "ei", arg: 1, scope: !5548, file: !382, line: 771, type: !5516)
!5553 = !DILocalVariable(name: "p", arg: 2, scope: !5548, file: !382, line: 771, type: !2461)
!5554 = !DILocation(line: 0, scope: !5548)
!5555 = !DILocation(line: 773, column: 8, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5548, file: !382, line: 773, column: 7)
!5557 = !DILocation(line: 773, column: 7, scope: !5548)
!5558 = !DILocation(line: 775, column: 12, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5556, file: !382, line: 774, column: 5)
!5560 = !DILocation(line: 776, column: 7, scope: !5559)
!5561 = !DILocation(line: 781, column: 7, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5556, file: !382, line: 779, column: 5)
!5563 = !DILocation(line: 0, scope: !5556)
!5564 = !DILocation(line: 783, column: 1, scope: !5548)
!5565 = distinct !DISubprogram(name: "add_phi_args_after_copy_edge", scope: !3, file: !3, line: 4930, type: !2415, scopeLine: 4931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5566)
!5566 = !{!5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577}
!5567 = !DILocalVariable(name: "e_copy", arg: 1, scope: !5565, file: !3, line: 4930, type: !1008)
!5568 = !DILocalVariable(name: "bb", scope: !5565, file: !3, line: 4932, type: !1670)
!5569 = !DILocalVariable(name: "bb_copy", scope: !5565, file: !3, line: 4932, type: !1670)
!5570 = !DILocalVariable(name: "dest", scope: !5565, file: !3, line: 4932, type: !1670)
!5571 = !DILocalVariable(name: "e", scope: !5565, file: !3, line: 4933, type: !1008)
!5572 = !DILocalVariable(name: "ei", scope: !5565, file: !3, line: 4934, type: !5516)
!5573 = !DILocalVariable(name: "phi", scope: !5565, file: !3, line: 4935, type: !1028)
!5574 = !DILocalVariable(name: "phi_copy", scope: !5565, file: !3, line: 4935, type: !1028)
!5575 = !DILocalVariable(name: "def", scope: !5565, file: !3, line: 4936, type: !704)
!5576 = !DILocalVariable(name: "psi", scope: !5565, file: !3, line: 4937, type: !2222)
!5577 = !DILocalVariable(name: "psi_copy", scope: !5565, file: !3, line: 4937, type: !2222)
!5578 = !DILocation(line: 0, scope: !5565)
!5579 = !DILocation(line: 4932, column: 37, scope: !5565)
!5580 = !DILocation(line: 4933, column: 3, scope: !5565)
!5581 = !DILocation(line: 4934, column: 3, scope: !5565)
!5582 = !DILocation(line: 4937, column: 3, scope: !5565)
!5583 = !DILocation(line: 4939, column: 46, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 4939, column: 7)
!5585 = !DILocation(line: 4939, column: 27, scope: !5584)
!5586 = !DILocation(line: 4939, column: 7, scope: !5584)
!5587 = !DILocation(line: 4939, column: 7, scope: !5565)
!5588 = !DILocation(line: 4942, column: 17, scope: !5565)
!5589 = !DILocation(line: 4942, column: 23, scope: !5565)
!5590 = !DILocation(line: 4942, column: 8, scope: !5565)
!5591 = !DILocation(line: 4942, column: 41, scope: !5565)
!5592 = !DILocation(line: 4944, column: 15, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 4944, column: 7)
!5594 = !DILocation(line: 4944, column: 21, scope: !5593)
!5595 = !DILocation(line: 4944, column: 27, scope: !5593)
!5596 = !DILocation(line: 4944, column: 7, scope: !5565)
!5597 = !DILocation(line: 4945, column: 12, scope: !5593)
!5598 = !DILocation(line: 4945, column: 5, scope: !5593)
!5599 = !DILocation(line: 0, scope: !5593)
!5600 = !DILocation(line: 4949, column: 7, scope: !5565)
!5601 = !DILocation(line: 4949, column: 5, scope: !5565)
!5602 = !DILocation(line: 4950, column: 8, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 4950, column: 7)
!5604 = !DILocation(line: 4950, column: 7, scope: !5565)
!5605 = !DILocation(line: 4955, column: 7, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 4955, column: 7)
!5607 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 4951, column: 5)
!5608 = !DILocation(line: 0, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 4955, column: 7)
!5610 = !DILocation(line: 4955, column: 7, scope: !5609)
!5611 = !DILocation(line: 4957, column: 9, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5613, file: !3, line: 4957, column: 8)
!5613 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 4956, column: 2)
!5614 = !DILocation(line: 4957, column: 12, scope: !5612)
!5615 = !DILocation(line: 4957, column: 18, scope: !5612)
!5616 = !DILocation(line: 4957, column: 24, scope: !5612)
!5617 = !DILocation(line: 4958, column: 8, scope: !5612)
!5618 = !DILocation(line: 4958, column: 11, scope: !5612)
!5619 = !DILocation(line: 4958, column: 37, scope: !5612)
!5620 = !DILocation(line: 4957, column: 8, scope: !5613)
!5621 = distinct !{!5621, !5605, !5622}
!5622 = !DILocation(line: 4960, column: 2, scope: !5606)
!5623 = !DILocation(line: 4962, column: 7, scope: !5607)
!5624 = !DILocation(line: 4965, column: 30, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 4965, column: 3)
!5626 = !DILocation(line: 4965, column: 14, scope: !5625)
!5627 = !DILocation(line: 4965, column: 33, scope: !5625)
!5628 = !DILocation(line: 4966, column: 19, scope: !5625)
!5629 = !DILocation(line: 4966, column: 43, scope: !5625)
!5630 = !DILocation(line: 4965, column: 8, scope: !5625)
!5631 = !DILocation(line: 4967, column: 9, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 4965, column: 3)
!5633 = !DILocation(line: 4967, column: 8, scope: !5632)
!5634 = !DILocation(line: 4965, column: 3, scope: !5625)
!5635 = !DILocation(line: 4970, column: 13, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 4969, column: 5)
!5637 = !DILocation(line: 4971, column: 18, scope: !5636)
!5638 = !DILocation(line: 4972, column: 13, scope: !5636)
!5639 = !DILocation(line: 4974, column: 46, scope: !5636)
!5640 = !DILocation(line: 4974, column: 6, scope: !5636)
!5641 = !DILocation(line: 4973, column: 7, scope: !5636)
!5642 = !DILocation(line: 4968, column: 8, scope: !5632)
!5643 = !DILocation(line: 4968, column: 25, scope: !5632)
!5644 = !DILocation(line: 4965, column: 3, scope: !5632)
!5645 = distinct !{!5645, !5634, !5646}
!5646 = !DILocation(line: 4975, column: 5, scope: !5625)
!5647 = !DILocation(line: 4976, column: 1, scope: !5565)
!5648 = distinct !DISubprogram(name: "ei_next", scope: !382, file: !382, line: 736, type: !5649, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5652)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{null, !5651}
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5516, size: 64)
!5652 = !{!5653}
!5653 = !DILocalVariable(name: "i", arg: 1, scope: !5648, file: !382, line: 736, type: !5651)
!5654 = !DILocation(line: 0, scope: !5648)
!5655 = !DILocation(line: 738, column: 3, scope: !5648)
!5656 = !DILocation(line: 739, column: 11, scope: !5648)
!5657 = !DILocation(line: 740, column: 1, scope: !5648)
!5658 = distinct !DISubprogram(name: "add_phi_args_after_copy", scope: !3, file: !3, line: 5001, type: !5659, scopeLine: 5003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5661)
!5659 = !DISubroutineType(types: !5660)
!5660 = !{null, !2187, !7, !1008}
!5661 = !{!5662, !5663, !5664, !5665}
!5662 = !DILocalVariable(name: "region_copy", arg: 1, scope: !5658, file: !3, line: 5001, type: !2187)
!5663 = !DILocalVariable(name: "n_region", arg: 2, scope: !5658, file: !3, line: 5001, type: !7)
!5664 = !DILocalVariable(name: "e_copy", arg: 3, scope: !5658, file: !3, line: 5002, type: !1008)
!5665 = !DILocalVariable(name: "i", scope: !5658, file: !3, line: 5004, type: !7)
!5666 = !DILocation(line: 0, scope: !5658)
!5667 = !DILocation(line: 5006, column: 17, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 5006, column: 3)
!5669 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 5006, column: 3)
!5670 = !DILocation(line: 5006, column: 8, scope: !5669)
!5671 = !DILocation(line: 0, scope: !5669)
!5672 = !DILocation(line: 5006, column: 3, scope: !5669)
!5673 = !DILocation(line: 5009, column: 17, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 5009, column: 3)
!5675 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 5009, column: 3)
!5676 = !DILocation(line: 5009, column: 3, scope: !5675)
!5677 = !DILocation(line: 5007, column: 5, scope: !5668)
!5678 = !DILocation(line: 5007, column: 21, scope: !5668)
!5679 = !DILocation(line: 5007, column: 27, scope: !5668)
!5680 = !DILocation(line: 5006, column: 30, scope: !5668)
!5681 = !DILocation(line: 5006, column: 3, scope: !5668)
!5682 = distinct !{!5682, !5672, !5683}
!5683 = !DILocation(line: 5007, column: 30, scope: !5669)
!5684 = !DILocation(line: 0, scope: !5675)
!5685 = !DILocation(line: 5010, column: 33, scope: !5674)
!5686 = !DILocation(line: 5010, column: 5, scope: !5674)
!5687 = !DILocation(line: 5009, column: 30, scope: !5674)
!5688 = !DILocation(line: 5009, column: 3, scope: !5674)
!5689 = distinct !{!5689, !5676, !5690}
!5690 = !DILocation(line: 5010, column: 47, scope: !5675)
!5691 = !DILocation(line: 5011, column: 7, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 5011, column: 7)
!5693 = !DILocation(line: 5011, column: 7, scope: !5658)
!5694 = !DILocation(line: 5012, column: 5, scope: !5692)
!5695 = !DILocation(line: 5014, column: 17, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 5014, column: 3)
!5697 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 5014, column: 3)
!5698 = !DILocation(line: 5014, column: 8, scope: !5697)
!5699 = !DILocation(line: 0, scope: !5697)
!5700 = !DILocation(line: 5014, column: 3, scope: !5697)
!5701 = !DILocation(line: 5015, column: 5, scope: !5696)
!5702 = !DILocation(line: 5015, column: 21, scope: !5696)
!5703 = !DILocation(line: 5015, column: 27, scope: !5696)
!5704 = !DILocation(line: 5014, column: 30, scope: !5696)
!5705 = !DILocation(line: 5014, column: 3, scope: !5696)
!5706 = distinct !{!5706, !5700, !5707}
!5707 = !DILocation(line: 5015, column: 31, scope: !5697)
!5708 = !DILocation(line: 5016, column: 1, scope: !5658)
!5709 = distinct !DISubprogram(name: "gimple_duplicate_sese_region", scope: !3, file: !3, line: 5029, type: !5710, scopeLine: 5032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5712)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{!692, !1008, !1008, !2187, !7, !2187}
!5712 = !{!5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728}
!5713 = !DILocalVariable(name: "entry", arg: 1, scope: !5709, file: !3, line: 5029, type: !1008)
!5714 = !DILocalVariable(name: "exit", arg: 2, scope: !5709, file: !3, line: 5029, type: !1008)
!5715 = !DILocalVariable(name: "region", arg: 3, scope: !5709, file: !3, line: 5030, type: !2187)
!5716 = !DILocalVariable(name: "n_region", arg: 4, scope: !5709, file: !3, line: 5030, type: !7)
!5717 = !DILocalVariable(name: "region_copy", arg: 5, scope: !5709, file: !3, line: 5031, type: !2187)
!5718 = !DILocalVariable(name: "i", scope: !5709, file: !3, line: 5033, type: !7)
!5719 = !DILocalVariable(name: "free_region_copy", scope: !5709, file: !3, line: 5034, type: !692)
!5720 = !DILocalVariable(name: "copying_header", scope: !5709, file: !3, line: 5034, type: !692)
!5721 = !DILocalVariable(name: "loop", scope: !5709, file: !3, line: 5035, type: !1243)
!5722 = !DILocalVariable(name: "exit_copy", scope: !5709, file: !3, line: 5036, type: !1008)
!5723 = !DILocalVariable(name: "doms", scope: !5709, file: !3, line: 5037, type: !2242)
!5724 = !DILocalVariable(name: "redirected", scope: !5709, file: !3, line: 5038, type: !1008)
!5725 = !DILocalVariable(name: "total_freq", scope: !5709, file: !3, line: 5039, type: !693)
!5726 = !DILocalVariable(name: "entry_freq", scope: !5709, file: !3, line: 5039, type: !693)
!5727 = !DILocalVariable(name: "total_count", scope: !5709, file: !3, line: 5040, type: !1239)
!5728 = !DILocalVariable(name: "entry_count", scope: !5709, file: !3, line: 5040, type: !1239)
!5729 = !DILocation(line: 0, scope: !5709)
!5730 = !DILocation(line: 5035, column: 30, scope: !5709)
!5731 = !DILocation(line: 5035, column: 36, scope: !5709)
!5732 = !DILocation(line: 5036, column: 3, scope: !5709)
!5733 = !DILocation(line: 5037, column: 3, scope: !5709)
!5734 = !DILocation(line: 5042, column: 8, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 5042, column: 7)
!5736 = !DILocation(line: 5042, column: 7, scope: !5709)
!5737 = !DILocation(line: 0, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 5056, column: 11)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 5050, column: 5)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 5049, column: 3)
!5741 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 5049, column: 3)
!5742 = !DILocation(line: 5049, column: 3, scope: !5741)
!5743 = !DILocation(line: 0, scope: !5741)
!5744 = !DILocation(line: 5049, column: 17, scope: !5740)
!5745 = !DILocation(line: 5053, column: 11, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 5053, column: 11)
!5747 = !DILocation(line: 5053, column: 22, scope: !5746)
!5748 = !DILocation(line: 5053, column: 34, scope: !5746)
!5749 = !DILocation(line: 5053, column: 11, scope: !5739)
!5750 = !DILocation(line: 5056, column: 31, scope: !5738)
!5751 = !DILocation(line: 5056, column: 21, scope: !5738)
!5752 = !DILocation(line: 5057, column: 4, scope: !5738)
!5753 = !DILocation(line: 5057, column: 26, scope: !5738)
!5754 = !DILocation(line: 5057, column: 17, scope: !5738)
!5755 = !DILocation(line: 5056, column: 11, scope: !5739)
!5756 = !DILocation(line: 5049, column: 30, scope: !5740)
!5757 = !DILocation(line: 5049, column: 3, scope: !5740)
!5758 = distinct !{!5758, !5742, !5759}
!5759 = !DILocation(line: 5059, column: 5, scope: !5741)
!5760 = !DILocation(line: 5061, column: 3, scope: !5709)
!5761 = !DILocation(line: 5065, column: 13, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 5065, column: 7)
!5763 = !DILocation(line: 5065, column: 30, scope: !5762)
!5764 = !DILocation(line: 5065, column: 20, scope: !5762)
!5765 = !DILocation(line: 5065, column: 7, scope: !5709)
!5766 = !DILocation(line: 5068, column: 28, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 5066, column: 5)
!5768 = !DILocation(line: 5068, column: 7, scope: !5767)
!5769 = !DILocation(line: 5070, column: 50, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 5070, column: 11)
!5771 = !DILocation(line: 5070, column: 63, scope: !5770)
!5772 = !DILocation(line: 5070, column: 12, scope: !5770)
!5773 = !DILocation(line: 5070, column: 11, scope: !5767)
!5774 = !DILocation(line: 5073, column: 21, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 5073, column: 7)
!5776 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 5073, column: 7)
!5777 = !DILocation(line: 5073, column: 7, scope: !5776)
!5778 = !DILocation(line: 5074, column: 6, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 5074, column: 6)
!5780 = !DILocation(line: 5074, column: 25, scope: !5779)
!5781 = !DILocation(line: 5074, column: 16, scope: !5779)
!5782 = !DILocation(line: 5075, column: 6, scope: !5779)
!5783 = !DILocation(line: 5075, column: 9, scope: !5779)
!5784 = !DILocation(line: 5074, column: 6, scope: !5775)
!5785 = !DILocation(line: 5073, column: 34, scope: !5775)
!5786 = !DILocation(line: 5073, column: 7, scope: !5775)
!5787 = distinct !{!5787, !5777, !5788}
!5788 = !DILocation(line: 5076, column: 11, scope: !5776)
!5789 = !DILocation(line: 5079, column: 8, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 5079, column: 7)
!5791 = !DILocation(line: 5079, column: 7, scope: !5709)
!5792 = !DILocation(line: 5081, column: 21, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 5080, column: 5)
!5794 = !DILocation(line: 5083, column: 5, scope: !5793)
!5795 = !DILocation(line: 5085, column: 3, scope: !5709)
!5796 = !DILocation(line: 5090, column: 3, scope: !5709)
!5797 = !DILocation(line: 5092, column: 10, scope: !5709)
!5798 = !DILocation(line: 5092, column: 8, scope: !5709)
!5799 = !DILocation(line: 5094, column: 14, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 5094, column: 7)
!5801 = !DILocation(line: 5094, column: 20, scope: !5800)
!5802 = !DILocation(line: 5094, column: 7, scope: !5800)
!5803 = !DILocation(line: 5094, column: 7, scope: !5709)
!5804 = !DILocation(line: 5097, column: 28, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 5095, column: 5)
!5806 = !DILocation(line: 5100, column: 23, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 5100, column: 11)
!5808 = !DILocation(line: 5100, column: 11, scope: !5805)
!5809 = !DILocation(line: 5102, column: 5, scope: !5805)
!5810 = !DILocation(line: 5105, column: 33, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 5104, column: 5)
!5812 = !DILocation(line: 5106, column: 20, scope: !5811)
!5813 = !DILocation(line: 5109, column: 22, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 5109, column: 11)
!5815 = !DILocation(line: 5109, column: 11, scope: !5811)
!5816 = !DILocation(line: 5116, column: 6, scope: !5709)
!5817 = !DILocation(line: 5115, column: 3, scope: !5709)
!5818 = !DILocation(line: 5117, column: 7, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 5117, column: 7)
!5820 = !DILocation(line: 5117, column: 7, scope: !5709)
!5821 = !DILocation(line: 5120, column: 24, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 5118, column: 5)
!5823 = !DILocation(line: 5119, column: 7, scope: !5822)
!5824 = !DILocation(line: 5122, column: 7, scope: !5822)
!5825 = !DILocation(line: 5124, column: 5, scope: !5822)
!5826 = !DILocation(line: 5127, column: 63, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 5126, column: 5)
!5828 = !DILocation(line: 5127, column: 7, scope: !5827)
!5829 = !DILocation(line: 5129, column: 7, scope: !5827)
!5830 = !DILocation(line: 5132, column: 7, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 5132, column: 7)
!5832 = !DILocation(line: 5132, column: 7, scope: !5709)
!5833 = !DILocation(line: 5134, column: 22, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 5133, column: 5)
!5835 = !DILocation(line: 5134, column: 28, scope: !5834)
!5836 = !DILocation(line: 5134, column: 20, scope: !5834)
!5837 = !DILocation(line: 5135, column: 21, scope: !5834)
!5838 = !DILocation(line: 5135, column: 27, scope: !5834)
!5839 = !DILocation(line: 5135, column: 13, scope: !5834)
!5840 = !DILocation(line: 5135, column: 19, scope: !5834)
!5841 = !DILocation(line: 5136, column: 5, scope: !5834)
!5842 = !DILocation(line: 5139, column: 69, scope: !5709)
!5843 = !DILocation(line: 5139, column: 49, scope: !5709)
!5844 = !DILocation(line: 5139, column: 16, scope: !5709)
!5845 = !DILocation(line: 5140, column: 3, scope: !5709)
!5846 = !DILocation(line: 5141, column: 3, scope: !5709)
!5847 = !DILocation(line: 5147, column: 51, scope: !5709)
!5848 = !DILocation(line: 5147, column: 64, scope: !5709)
!5849 = !DILocation(line: 5147, column: 3, scope: !5709)
!5850 = !DILocation(line: 5148, column: 3, scope: !5709)
!5851 = !DILocation(line: 5149, column: 43, scope: !5709)
!5852 = !DILocation(line: 5149, column: 3, scope: !5709)
!5853 = !DILocation(line: 5150, column: 3, scope: !5709)
!5854 = !DILocation(line: 5153, column: 3, scope: !5709)
!5855 = !DILocation(line: 5156, column: 3, scope: !5709)
!5856 = !DILocation(line: 5158, column: 7, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 5158, column: 7)
!5858 = !DILocation(line: 5158, column: 7, scope: !5709)
!5859 = !DILocation(line: 5159, column: 11, scope: !5857)
!5860 = !DILocation(line: 5159, column: 5, scope: !5857)
!5861 = !DILocation(line: 5161, column: 3, scope: !5709)
!5862 = !DILocation(line: 5162, column: 3, scope: !5709)
!5863 = !DILocation(line: 5163, column: 1, scope: !5709)
!5864 = distinct !DISubprogram(name: "loop_outer", scope: !337, file: !337, line: 434, type: !5865, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5869)
!5865 = !DISubroutineType(types: !5866)
!5866 = !{!1243, !5867}
!5867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5868, size: 64)
!5868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!5869 = !{!5870, !5871}
!5870 = !DILocalVariable(name: "loop", arg: 1, scope: !5864, file: !337, line: 434, type: !5867)
!5871 = !DILocalVariable(name: "n", scope: !5864, file: !337, line: 436, type: !7)
!5872 = !DILocation(line: 0, scope: !5864)
!5873 = !DILocation(line: 436, column: 16, scope: !5864)
!5874 = !DILocation(line: 438, column: 9, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5864, file: !337, line: 438, column: 7)
!5876 = !DILocation(line: 438, column: 7, scope: !5864)
!5877 = !DILocation(line: 441, column: 10, scope: !5864)
!5878 = !DILocation(line: 441, column: 3, scope: !5864)
!5879 = !DILocation(line: 442, column: 1, scope: !5864)
!5880 = distinct !DISubprogram(name: "split_edge_bb_loc", scope: !3, file: !3, line: 2444, type: !2411, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5881)
!5881 = !{!5882, !5883, !5884, !5885}
!5882 = !DILocalVariable(name: "edge_in", arg: 1, scope: !5880, file: !3, line: 2444, type: !1008)
!5883 = !DILocalVariable(name: "dest", scope: !5880, file: !3, line: 2446, type: !1670)
!5884 = !DILocalVariable(name: "dest_prev", scope: !5880, file: !3, line: 2447, type: !1670)
!5885 = !DILocalVariable(name: "e", scope: !5886, file: !3, line: 2451, type: !1008)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2450, column: 5)
!5887 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 2449, column: 7)
!5888 = !DILocation(line: 0, scope: !5880)
!5889 = !DILocation(line: 2446, column: 31, scope: !5880)
!5890 = !DILocation(line: 2447, column: 33, scope: !5880)
!5891 = !DILocation(line: 2449, column: 7, scope: !5887)
!5892 = !DILocation(line: 2449, column: 7, scope: !5880)
!5893 = !DILocation(line: 2451, column: 16, scope: !5886)
!5894 = !DILocation(line: 0, scope: !5886)
!5895 = !DILocation(line: 2452, column: 11, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 2452, column: 11)
!5897 = !DILocation(line: 2452, column: 13, scope: !5896)
!5898 = !DILocation(line: 2452, column: 21, scope: !5896)
!5899 = !DILocation(line: 2452, column: 27, scope: !5896)
!5900 = !DILocation(line: 2452, column: 11, scope: !5886)
!5901 = !DILocation(line: 2453, column: 18, scope: !5896)
!5902 = !DILocation(line: 2453, column: 2, scope: !5896)
!5903 = !DILocation(line: 2455, column: 3, scope: !5880)
!5904 = !DILocation(line: 2456, column: 1, scope: !5880)
!5905 = distinct !DISubprogram(name: "VEC_basic_block_heap_safe_push", scope: !382, file: !382, line: 283, type: !5906, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5909)
!5906 = !DISubroutineType(types: !5907)
!5907 = !{!2187, !5908, !1670}
!5908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!5909 = !{!5910, !5911}
!5910 = !DILocalVariable(name: "vec_", arg: 1, scope: !5905, file: !382, line: 283, type: !5908)
!5911 = !DILocalVariable(name: "obj_", arg: 2, scope: !5905, file: !382, line: 283, type: !1670)
!5912 = !DILocation(line: 0, scope: !5905)
!5913 = !DILocation(line: 283, column: 1, scope: !5905)
!5914 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !382, file: !382, line: 283, type: !5915, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5917)
!5915 = !DISubroutineType(types: !5916)
!5916 = !{null, !5908}
!5917 = !{!5918}
!5918 = !DILocalVariable(name: "vec_", arg: 1, scope: !5914, file: !382, line: 283, type: !5908)
!5919 = !DILocation(line: 0, scope: !5914)
!5920 = !DILocation(line: 283, column: 1, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5914, file: !382, line: 283, column: 1)
!5922 = !DILocation(line: 283, column: 1, scope: !5914)
!5923 = distinct !DISubprogram(name: "gimple_duplicate_sese_tail", scope: !3, file: !3, line: 5195, type: !5710, scopeLine: 5198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5924)
!5924 = !{!5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5955, !5956}
!5925 = !DILocalVariable(name: "entry", arg: 1, scope: !5923, file: !3, line: 5195, type: !1008)
!5926 = !DILocalVariable(name: "exit", arg: 2, scope: !5923, file: !3, line: 5195, type: !1008)
!5927 = !DILocalVariable(name: "region", arg: 3, scope: !5923, file: !3, line: 5196, type: !2187)
!5928 = !DILocalVariable(name: "n_region", arg: 4, scope: !5923, file: !3, line: 5196, type: !7)
!5929 = !DILocalVariable(name: "region_copy", arg: 5, scope: !5923, file: !3, line: 5197, type: !2187)
!5930 = !DILocalVariable(name: "i", scope: !5923, file: !3, line: 5199, type: !7)
!5931 = !DILocalVariable(name: "free_region_copy", scope: !5923, file: !3, line: 5200, type: !692)
!5932 = !DILocalVariable(name: "loop", scope: !5923, file: !3, line: 5201, type: !1243)
!5933 = !DILocalVariable(name: "orig_loop", scope: !5923, file: !3, line: 5202, type: !1243)
!5934 = !DILocalVariable(name: "switch_bb", scope: !5923, file: !3, line: 5203, type: !1670)
!5935 = !DILocalVariable(name: "entry_bb", scope: !5923, file: !3, line: 5203, type: !1670)
!5936 = !DILocalVariable(name: "nentry_bb", scope: !5923, file: !3, line: 5203, type: !1670)
!5937 = !DILocalVariable(name: "doms", scope: !5923, file: !3, line: 5204, type: !2242)
!5938 = !DILocalVariable(name: "total_freq", scope: !5923, file: !3, line: 5205, type: !693)
!5939 = !DILocalVariable(name: "exit_freq", scope: !5923, file: !3, line: 5205, type: !693)
!5940 = !DILocalVariable(name: "total_count", scope: !5923, file: !3, line: 5206, type: !1239)
!5941 = !DILocalVariable(name: "exit_count", scope: !5923, file: !3, line: 5206, type: !1239)
!5942 = !DILocalVariable(name: "exits", scope: !5923, file: !3, line: 5207, type: !5943)
!5943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 128, elements: !947)
!5944 = !DILocalVariable(name: "nexits", scope: !5923, file: !3, line: 5207, type: !5943)
!5945 = !DILocalVariable(name: "e", scope: !5923, file: !3, line: 5207, type: !1008)
!5946 = !DILocalVariable(name: "gsi", scope: !5923, file: !3, line: 5208, type: !2222)
!5947 = !DILocalVariable(name: "gsi1", scope: !5923, file: !3, line: 5208, type: !2222)
!5948 = !DILocalVariable(name: "cond_stmt", scope: !5923, file: !3, line: 5209, type: !1028)
!5949 = !DILocalVariable(name: "sorig", scope: !5923, file: !3, line: 5210, type: !1008)
!5950 = !DILocalVariable(name: "snew", scope: !5923, file: !3, line: 5210, type: !1008)
!5951 = !DILocalVariable(name: "exit_bb", scope: !5923, file: !3, line: 5211, type: !1670)
!5952 = !DILocalVariable(name: "iters_bb", scope: !5923, file: !3, line: 5212, type: !1670)
!5953 = !DILocalVariable(name: "new_rhs", scope: !5923, file: !3, line: 5213, type: !704)
!5954 = !DILocalVariable(name: "psi", scope: !5923, file: !3, line: 5214, type: !2222)
!5955 = !DILocalVariable(name: "phi", scope: !5923, file: !3, line: 5215, type: !1028)
!5956 = !DILocalVariable(name: "def", scope: !5923, file: !3, line: 5216, type: !704)
!5957 = !DILocation(line: 0, scope: !5923)
!5958 = !DILocation(line: 5201, column: 29, scope: !5923)
!5959 = !DILocation(line: 5201, column: 35, scope: !5923)
!5960 = !DILocation(line: 5202, column: 35, scope: !5923)
!5961 = !DILocation(line: 5202, column: 41, scope: !5923)
!5962 = !DILocation(line: 5204, column: 3, scope: !5923)
!5963 = !DILocation(line: 5207, column: 3, scope: !5923)
!5964 = !DILocation(line: 5207, column: 8, scope: !5923)
!5965 = !DILocation(line: 5207, column: 18, scope: !5923)
!5966 = !DILocation(line: 5208, column: 3, scope: !5923)
!5967 = !DILocation(line: 5214, column: 3, scope: !5923)
!5968 = !DILocation(line: 5218, column: 3, scope: !5923)
!5969 = !DILocation(line: 5219, column: 3, scope: !5923)
!5970 = !DILocation(line: 5219, column: 12, scope: !5923)
!5971 = !DILocation(line: 5220, column: 14, scope: !5923)
!5972 = !DILocation(line: 5220, column: 3, scope: !5923)
!5973 = !DILocation(line: 5220, column: 12, scope: !5923)
!5974 = !DILocation(line: 5222, column: 8, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5222, column: 7)
!5976 = !DILocation(line: 5222, column: 7, scope: !5923)
!5977 = !DILocation(line: 5225, column: 3, scope: !5923)
!5978 = !DILocation(line: 5226, column: 3, scope: !5923)
!5979 = !DILocation(line: 5227, column: 3, scope: !5923)
!5980 = !DILocation(line: 5229, column: 8, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5229, column: 7)
!5982 = !DILocation(line: 5229, column: 7, scope: !5923)
!5983 = !DILocation(line: 5231, column: 21, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 5230, column: 5)
!5985 = !DILocation(line: 5233, column: 5, scope: !5984)
!5986 = !DILocation(line: 5235, column: 3, scope: !5923)
!5987 = !DILocation(line: 5239, column: 10, scope: !5923)
!5988 = !DILocation(line: 5239, column: 8, scope: !5923)
!5989 = !DILocation(line: 5241, column: 13, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5241, column: 7)
!5991 = !DILocation(line: 5241, column: 18, scope: !5990)
!5992 = !DILocation(line: 5241, column: 7, scope: !5990)
!5993 = !DILocation(line: 5241, column: 7, scope: !5923)
!5994 = !DILocation(line: 5244, column: 26, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 5242, column: 5)
!5996 = !DILocation(line: 5247, column: 22, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 5247, column: 11)
!5998 = !DILocation(line: 5247, column: 11, scope: !5995)
!5999 = !DILocation(line: 5249, column: 5, scope: !5995)
!6000 = !DILocation(line: 5252, column: 31, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 5251, column: 5)
!6002 = !DILocation(line: 5253, column: 19, scope: !6001)
!6003 = !DILocation(line: 5256, column: 22, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 5256, column: 11)
!6005 = !DILocation(line: 5256, column: 11, scope: !6001)
!6006 = !DILocation(line: 5258, column: 21, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 5258, column: 11)
!6008 = !DILocation(line: 5258, column: 11, scope: !6001)
!6009 = !DILocation(line: 5262, column: 54, scope: !5923)
!6010 = !DILocation(line: 5263, column: 6, scope: !5923)
!6011 = !DILocation(line: 5262, column: 3, scope: !5923)
!6012 = !DILocation(line: 5264, column: 7, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5264, column: 7)
!6014 = !DILocation(line: 5264, column: 7, scope: !5923)
!6015 = !DILocation(line: 5267, column: 24, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 5265, column: 5)
!6017 = !DILocation(line: 5266, column: 7, scope: !6016)
!6018 = !DILocation(line: 5269, column: 7, scope: !6016)
!6019 = !DILocation(line: 5271, column: 5, scope: !6016)
!6020 = !DILocation(line: 5274, column: 63, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 5273, column: 5)
!6022 = !DILocation(line: 5274, column: 7, scope: !6021)
!6023 = !DILocation(line: 5276, column: 7, scope: !6021)
!6024 = !DILocation(line: 5280, column: 21, scope: !5923)
!6025 = !DILocation(line: 5281, column: 15, scope: !5923)
!6026 = !DILocation(line: 5282, column: 26, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5282, column: 7)
!6028 = !DILocation(line: 5282, column: 8, scope: !6027)
!6029 = !DILocation(line: 5283, column: 7, scope: !6027)
!6030 = !DILocation(line: 5283, column: 45, scope: !6027)
!6031 = !DILocation(line: 5283, column: 27, scope: !6027)
!6032 = !DILocation(line: 5283, column: 11, scope: !6027)
!6033 = !DILocation(line: 5282, column: 7, scope: !5923)
!6034 = !DILocation(line: 5284, column: 24, scope: !6027)
!6035 = !DILocation(line: 5284, column: 5, scope: !6027)
!6036 = !DILocation(line: 5286, column: 17, scope: !6027)
!6037 = !DILocation(line: 0, scope: !6027)
!6038 = !DILocation(line: 5287, column: 3, scope: !5923)
!6039 = !DILocation(line: 5289, column: 9, scope: !5923)
!6040 = !DILocation(line: 5290, column: 32, scope: !5923)
!6041 = !DILocation(line: 5290, column: 15, scope: !5923)
!6042 = !DILocation(line: 5291, column: 3, scope: !5923)
!6043 = !DILocation(line: 5292, column: 15, scope: !5923)
!6044 = !DILocation(line: 5302, column: 7, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5302, column: 7)
!6046 = !DILocation(line: 5302, column: 17, scope: !6045)
!6047 = !DILocation(line: 5302, column: 36, scope: !6045)
!6048 = !DILocation(line: 5302, column: 22, scope: !6045)
!6049 = !DILocation(line: 0, scope: !6045)
!6050 = !DILocation(line: 5302, column: 7, scope: !5923)
!6051 = !DILocation(line: 5306, column: 15, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 5305, column: 3)
!6053 = !DILocation(line: 5310, column: 9, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 5310, column: 9)
!6055 = !DILocation(line: 5310, column: 49, scope: !6054)
!6056 = !DILocation(line: 5310, column: 9, scope: !6052)
!6057 = !DILocation(line: 5312, column: 24, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 5311, column: 7)
!6059 = !DILocation(line: 5312, column: 13, scope: !6058)
!6060 = !DILocation(line: 5313, column: 14, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 5313, column: 2)
!6062 = !DILocation(line: 5313, column: 7, scope: !6061)
!6063 = !DILocation(line: 5313, column: 40, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 5313, column: 2)
!6065 = !DILocation(line: 5313, column: 39, scope: !6064)
!6066 = !DILocation(line: 5313, column: 2, scope: !6061)
!6067 = !DILocation(line: 5314, column: 8, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 5314, column: 8)
!6069 = !DILocation(line: 5314, column: 27, scope: !6068)
!6070 = !DILocation(line: 5314, column: 24, scope: !6068)
!6071 = !DILocation(line: 5314, column: 8, scope: !6064)
!6072 = !DILocation(line: 5313, column: 58, scope: !6064)
!6073 = !DILocation(line: 5313, column: 2, scope: !6064)
!6074 = distinct !{!6074, !6066, !6075}
!6075 = !DILocation(line: 5315, column: 6, scope: !6061)
!6076 = !DILocation(line: 5317, column: 12, scope: !6058)
!6077 = !DILocation(line: 5319, column: 7, scope: !6058)
!6078 = !DILocation(line: 5321, column: 35, scope: !5923)
!6079 = !DILocation(line: 5321, column: 3, scope: !5923)
!6080 = !DILocation(line: 5322, column: 49, scope: !5923)
!6081 = !DILocation(line: 5322, column: 35, scope: !5923)
!6082 = !DILocation(line: 5322, column: 3, scope: !5923)
!6083 = !DILocation(line: 5323, column: 3, scope: !5923)
!6084 = !DILocation(line: 5325, column: 11, scope: !5923)
!6085 = !DILocation(line: 5326, column: 18, scope: !5923)
!6086 = !DILocation(line: 5326, column: 28, scope: !5923)
!6087 = !DILocation(line: 5326, column: 10, scope: !5923)
!6088 = !DILocation(line: 5326, column: 16, scope: !5923)
!6089 = !DILocation(line: 5327, column: 43, scope: !5923)
!6090 = !DILocation(line: 5327, column: 53, scope: !5923)
!6091 = !DILocation(line: 5327, column: 10, scope: !5923)
!6092 = !DILocation(line: 5330, column: 3, scope: !5923)
!6093 = !DILocation(line: 5333, column: 3, scope: !5923)
!6094 = !DILocation(line: 5337, column: 19, scope: !5923)
!6095 = !DILocation(line: 5339, column: 33, scope: !5923)
!6096 = !DILocation(line: 5339, column: 43, scope: !5923)
!6097 = !DILocation(line: 5339, column: 53, scope: !5923)
!6098 = !DILocation(line: 5339, column: 7, scope: !5923)
!6099 = !DILocation(line: 5340, column: 3, scope: !5923)
!6100 = !DILocation(line: 5340, column: 20, scope: !5923)
!6101 = !DILocation(line: 0, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 5350, column: 2)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 5346, column: 7)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 5345, column: 9)
!6105 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 5344, column: 3)
!6106 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5344, column: 3)
!6107 = !DILocation(line: 5344, column: 17, scope: !6105)
!6108 = !DILocation(line: 5344, column: 8, scope: !6106)
!6109 = !DILocation(line: 0, scope: !6106)
!6110 = !DILocation(line: 5344, column: 3, scope: !6106)
!6111 = !DILocation(line: 5345, column: 26, scope: !6104)
!6112 = !DILocation(line: 5345, column: 9, scope: !6104)
!6113 = !DILocation(line: 5345, column: 56, scope: !6104)
!6114 = !DILocation(line: 5345, column: 42, scope: !6104)
!6115 = !DILocation(line: 5345, column: 9, scope: !6105)
!6116 = !DILocation(line: 5347, column: 2, scope: !6103)
!6117 = !DILocation(line: 5348, column: 50, scope: !6103)
!6118 = !DILocation(line: 5348, column: 32, scope: !6103)
!6119 = !DILocation(line: 5348, column: 6, scope: !6103)
!6120 = !DILocation(line: 5349, column: 2, scope: !6103)
!6121 = !DILocation(line: 5349, column: 19, scope: !6103)
!6122 = !DILocation(line: 5350, column: 13, scope: !6102)
!6123 = !DILocation(line: 5350, column: 7, scope: !6102)
!6124 = !DILocation(line: 5351, column: 8, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 5350, column: 2)
!6126 = !DILocation(line: 5351, column: 7, scope: !6125)
!6127 = !DILocation(line: 5350, column: 2, scope: !6102)
!6128 = !DILocation(line: 5354, column: 12, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 5353, column: 4)
!6130 = !DILocation(line: 5355, column: 12, scope: !6129)
!6131 = !DILocation(line: 5356, column: 32, scope: !6129)
!6132 = !DILocation(line: 5356, column: 6, scope: !6129)
!6133 = !DILocation(line: 5352, column: 7, scope: !6125)
!6134 = !DILocation(line: 5350, column: 2, scope: !6125)
!6135 = distinct !{!6135, !6127, !6136}
!6136 = !DILocation(line: 5357, column: 4, scope: !6102)
!6137 = !DILocation(line: 5344, column: 30, scope: !6105)
!6138 = !DILocation(line: 5344, column: 3, scope: !6105)
!6139 = distinct !{!6139, !6110, !6140}
!6140 = !DILocation(line: 5358, column: 7, scope: !6106)
!6141 = !DILocation(line: 5359, column: 33, scope: !5923)
!6142 = !DILocation(line: 5359, column: 44, scope: !5923)
!6143 = !DILocation(line: 5359, column: 55, scope: !5923)
!6144 = !DILocation(line: 5359, column: 7, scope: !5923)
!6145 = !DILocation(line: 5360, column: 3, scope: !5923)
!6146 = !DILocation(line: 5360, column: 20, scope: !5923)
!6147 = !DILocation(line: 5364, column: 43, scope: !5923)
!6148 = !DILocation(line: 5364, column: 3, scope: !5923)
!6149 = !DILocation(line: 5365, column: 3, scope: !5923)
!6150 = !DILocation(line: 5367, column: 3, scope: !5923)
!6151 = !DILocation(line: 5369, column: 7, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 5369, column: 7)
!6153 = !DILocation(line: 5369, column: 7, scope: !5923)
!6154 = !DILocation(line: 5370, column: 11, scope: !6152)
!6155 = !DILocation(line: 5370, column: 5, scope: !6152)
!6156 = !DILocation(line: 5372, column: 3, scope: !5923)
!6157 = !DILocation(line: 5373, column: 3, scope: !5923)
!6158 = !DILocation(line: 5374, column: 1, scope: !5923)
!6159 = distinct !DISubprogram(name: "gimple_cond_set_rhs", scope: !613, file: !613, line: 2292, type: !3551, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6160)
!6160 = !{!6161, !6162}
!6161 = !DILocalVariable(name: "gs", arg: 1, scope: !6159, file: !613, line: 2292, type: !1028)
!6162 = !DILocalVariable(name: "rhs", arg: 2, scope: !6159, file: !613, line: 2292, type: !704)
!6163 = !DILocation(line: 0, scope: !6159)
!6164 = !DILocation(line: 2295, column: 3, scope: !6159)
!6165 = !DILocation(line: 2296, column: 1, scope: !6159)
!6166 = distinct !DISubprogram(name: "gimple_cond_set_lhs", scope: !613, file: !613, line: 2261, type: !3551, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6167)
!6167 = !{!6168, !6169}
!6168 = !DILocalVariable(name: "gs", arg: 1, scope: !6166, file: !613, line: 2261, type: !1028)
!6169 = !DILocalVariable(name: "lhs", arg: 2, scope: !6166, file: !613, line: 2261, type: !704)
!6170 = !DILocation(line: 0, scope: !6166)
!6171 = !DILocation(line: 2264, column: 3, scope: !6166)
!6172 = !DILocation(line: 2265, column: 1, scope: !6166)
!6173 = distinct !DISubprogram(name: "single_succ_edge", scope: !382, file: !382, line: 643, type: !6174, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6176)
!6174 = !DISubroutineType(types: !6175)
!6175 = !{!1008, !2400}
!6176 = !{!6177}
!6177 = !DILocalVariable(name: "bb", arg: 1, scope: !6173, file: !382, line: 643, type: !2400)
!6178 = !DILocation(line: 0, scope: !6173)
!6179 = !DILocation(line: 645, column: 3, scope: !6173)
!6180 = !DILocation(line: 646, column: 10, scope: !6173)
!6181 = !DILocation(line: 646, column: 3, scope: !6173)
!6182 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !4075, file: !4075, line: 427, type: !6183, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6185)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{!704, !2200}
!6185 = !{!6186}
!6186 = !DILocalVariable(name: "use", arg: 1, scope: !6182, file: !4075, line: 427, type: !2200)
!6187 = !DILocation(line: 0, scope: !6182)
!6188 = !DILocation(line: 429, column: 17, scope: !6182)
!6189 = !DILocation(line: 429, column: 10, scope: !6182)
!6190 = !DILocation(line: 429, column: 3, scope: !6182)
!6191 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !4075, file: !4075, line: 442, type: !6192, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6194)
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!2200, !1028, !693}
!6194 = !{!6195, !6196}
!6195 = !DILocalVariable(name: "gs", arg: 1, scope: !6191, file: !4075, line: 442, type: !1028)
!6196 = !DILocalVariable(name: "i", arg: 2, scope: !6191, file: !4075, line: 442, type: !693)
!6197 = !DILocation(line: 0, scope: !6191)
!6198 = !DILocation(line: 444, column: 11, scope: !6191)
!6199 = !DILocation(line: 444, column: 35, scope: !6191)
!6200 = !DILocation(line: 444, column: 3, scope: !6191)
!6201 = distinct !DISubprogram(name: "gimple_phi_arg_location_from_edge", scope: !4075, file: !4075, line: 483, type: !6202, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6204)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!831, !1028, !1008}
!6204 = !{!6205, !6206}
!6205 = !DILocalVariable(name: "gs", arg: 1, scope: !6201, file: !4075, line: 483, type: !1028)
!6206 = !DILocalVariable(name: "e", arg: 2, scope: !6201, file: !4075, line: 483, type: !1008)
!6207 = !DILocation(line: 0, scope: !6201)
!6208 = !DILocation(line: 485, column: 33, scope: !6201)
!6209 = !DILocation(line: 485, column: 10, scope: !6201)
!6210 = !DILocation(line: 485, column: 44, scope: !6201)
!6211 = !DILocation(line: 485, column: 3, scope: !6201)
!6212 = distinct !DISubprogram(name: "gather_blocks_in_sese_region", scope: !3, file: !3, line: 5381, type: !6213, scopeLine: 5383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6215)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{null, !1670, !1670, !5908}
!6215 = !{!6216, !6217, !6218, !6219}
!6216 = !DILocalVariable(name: "entry", arg: 1, scope: !6212, file: !3, line: 5381, type: !1670)
!6217 = !DILocalVariable(name: "exit", arg: 2, scope: !6212, file: !3, line: 5381, type: !1670)
!6218 = !DILocalVariable(name: "bbs_p", arg: 3, scope: !6212, file: !3, line: 5382, type: !5908)
!6219 = !DILocalVariable(name: "son", scope: !6212, file: !3, line: 5384, type: !1670)
!6220 = !DILocation(line: 0, scope: !6212)
!6221 = !DILocation(line: 5386, column: 14, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 5386, column: 3)
!6223 = !DILocation(line: 5386, column: 8, scope: !6222)
!6224 = !DILocation(line: 0, scope: !6222)
!6225 = !DILocation(line: 5386, column: 3, scope: !6222)
!6226 = !DILocation(line: 5390, column: 7, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 5389, column: 5)
!6228 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 5386, column: 3)
!6229 = !DILocation(line: 5391, column: 15, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 5391, column: 11)
!6231 = !DILocation(line: 5391, column: 11, scope: !6227)
!6232 = !DILocation(line: 5392, column: 2, scope: !6230)
!6233 = !DILocation(line: 5388, column: 14, scope: !6228)
!6234 = !DILocation(line: 5386, column: 3, scope: !6228)
!6235 = distinct !{!6235, !6225, !6236}
!6236 = !DILocation(line: 5393, column: 5, scope: !6222)
!6237 = !DILocation(line: 5394, column: 1, scope: !6212)
!6238 = distinct !DISubprogram(name: "mark_virtual_ops_in_bb", scope: !3, file: !3, line: 5677, type: !2377, scopeLine: 5678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6239)
!6239 = !{!6240, !6241}
!6240 = !DILocalVariable(name: "bb", arg: 1, scope: !6238, file: !3, line: 5677, type: !1670)
!6241 = !DILocalVariable(name: "gsi", scope: !6238, file: !3, line: 5679, type: !2222)
!6242 = !DILocation(line: 0, scope: !6238)
!6243 = !DILocation(line: 5679, column: 3, scope: !6238)
!6244 = !DILocation(line: 5681, column: 14, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 5681, column: 3)
!6246 = !DILocation(line: 5681, column: 8, scope: !6245)
!6247 = !DILocation(line: 5681, column: 36, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 5681, column: 3)
!6249 = !DILocation(line: 5681, column: 35, scope: !6248)
!6250 = !DILocation(line: 5681, column: 3, scope: !6245)
!6251 = !DILocation(line: 5682, column: 36, scope: !6248)
!6252 = !DILocation(line: 5682, column: 5, scope: !6248)
!6253 = !DILocation(line: 5681, column: 53, scope: !6248)
!6254 = !DILocation(line: 5681, column: 3, scope: !6248)
!6255 = distinct !{!6255, !6250, !6256}
!6256 = !DILocation(line: 5682, column: 50, scope: !6245)
!6257 = !DILocation(line: 5684, column: 14, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 5684, column: 3)
!6259 = !DILocation(line: 5684, column: 8, scope: !6258)
!6260 = !DILocation(line: 5684, column: 34, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 5684, column: 3)
!6262 = !DILocation(line: 5684, column: 33, scope: !6261)
!6263 = !DILocation(line: 5684, column: 3, scope: !6258)
!6264 = !DILocation(line: 5685, column: 36, scope: !6261)
!6265 = !DILocation(line: 5685, column: 5, scope: !6261)
!6266 = !DILocation(line: 5684, column: 51, scope: !6261)
!6267 = !DILocation(line: 5684, column: 3, scope: !6261)
!6268 = distinct !{!6268, !6263, !6269}
!6269 = !DILocation(line: 5685, column: 50, scope: !6258)
!6270 = !DILocation(line: 5686, column: 1, scope: !6238)
!6271 = distinct !DISubprogram(name: "move_sese_region_to_fn", scope: !3, file: !3, line: 5946, type: !6272, scopeLine: 5948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!1670, !1502, !1670, !1670, !704}
!6274 = !{!6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302, !6305}
!6275 = !DILocalVariable(name: "dest_cfun", arg: 1, scope: !6271, file: !3, line: 5946, type: !1502)
!6276 = !DILocalVariable(name: "entry_bb", arg: 2, scope: !6271, file: !3, line: 5946, type: !1670)
!6277 = !DILocalVariable(name: "exit_bb", arg: 3, scope: !6271, file: !3, line: 5947, type: !1670)
!6278 = !DILocalVariable(name: "orig_block", arg: 4, scope: !6271, file: !3, line: 5947, type: !704)
!6279 = !DILocalVariable(name: "bbs", scope: !6271, file: !3, line: 5949, type: !2242)
!6280 = !DILocalVariable(name: "dom_bbs", scope: !6271, file: !3, line: 5949, type: !2242)
!6281 = !DILocalVariable(name: "dom_entry", scope: !6271, file: !3, line: 5950, type: !1670)
!6282 = !DILocalVariable(name: "after", scope: !6271, file: !3, line: 5951, type: !1670)
!6283 = !DILocalVariable(name: "bb", scope: !6271, file: !3, line: 5951, type: !1670)
!6284 = !DILocalVariable(name: "entry_pred", scope: !6271, file: !3, line: 5951, type: !2187)
!6285 = !DILocalVariable(name: "exit_succ", scope: !6271, file: !3, line: 5951, type: !2187)
!6286 = !DILocalVariable(name: "abb", scope: !6271, file: !3, line: 5951, type: !1670)
!6287 = !DILocalVariable(name: "saved_cfun", scope: !6271, file: !3, line: 5952, type: !1502)
!6288 = !DILocalVariable(name: "entry_flag", scope: !6271, file: !3, line: 5953, type: !2188)
!6289 = !DILocalVariable(name: "exit_flag", scope: !6271, file: !3, line: 5953, type: !2188)
!6290 = !DILocalVariable(name: "entry_prob", scope: !6271, file: !3, line: 5954, type: !2189)
!6291 = !DILocalVariable(name: "exit_prob", scope: !6271, file: !3, line: 5954, type: !2189)
!6292 = !DILocalVariable(name: "i", scope: !6271, file: !3, line: 5955, type: !7)
!6293 = !DILocalVariable(name: "num_entry_edges", scope: !6271, file: !3, line: 5955, type: !7)
!6294 = !DILocalVariable(name: "num_exit_edges", scope: !6271, file: !3, line: 5955, type: !7)
!6295 = !DILocalVariable(name: "e", scope: !6271, file: !3, line: 5956, type: !1008)
!6296 = !DILocalVariable(name: "ei", scope: !6271, file: !3, line: 5957, type: !5516)
!6297 = !DILocalVariable(name: "new_label_map", scope: !6271, file: !3, line: 5958, type: !1587)
!6298 = !DILocalVariable(name: "vars_map", scope: !6271, file: !3, line: 5959, type: !1731)
!6299 = !DILocalVariable(name: "eh_map", scope: !6271, file: !3, line: 5959, type: !1731)
!6300 = !DILocalVariable(name: "loop", scope: !6271, file: !3, line: 5960, type: !1243)
!6301 = !DILocalVariable(name: "d", scope: !6271, file: !3, line: 5961, type: !2257)
!6302 = !DILocalVariable(name: "region", scope: !6303, file: !3, line: 6033, type: !1511)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 6032, column: 5)
!6304 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6031, column: 7)
!6305 = !DILocalVariable(name: "block", scope: !6306, file: !3, line: 6076, type: !704)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 6075, column: 5)
!6307 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6074, column: 7)
!6308 = !DILocation(line: 0, scope: !6271)
!6309 = !DILocation(line: 5949, column: 3, scope: !6271)
!6310 = !DILocation(line: 5950, column: 27, scope: !6271)
!6311 = !DILocation(line: 5951, column: 3, scope: !6271)
!6312 = !DILocation(line: 5952, column: 33, scope: !6271)
!6313 = !DILocation(line: 5957, column: 3, scope: !6271)
!6314 = !DILocation(line: 5960, column: 33, scope: !6271)
!6315 = !DILocation(line: 5961, column: 3, scope: !6271)
!6316 = !DILocation(line: 5965, column: 3, scope: !6271)
!6317 = !DILocation(line: 5971, column: 7, scope: !6271)
!6318 = !DILocation(line: 5972, column: 3, scope: !6271)
!6319 = !DILocation(line: 5973, column: 3, scope: !6271)
!6320 = !DILocation(line: 5978, column: 10, scope: !6271)
!6321 = !DILocation(line: 5979, column: 10, scope: !6271)
!6322 = !DILocation(line: 5977, column: 13, scope: !6271)
!6323 = !DILocation(line: 5977, column: 11, scope: !6271)
!6324 = !DILocation(line: 5985, column: 21, scope: !6271)
!6325 = !DILocation(line: 5986, column: 41, scope: !6271)
!6326 = !DILocation(line: 5986, column: 32, scope: !6271)
!6327 = !DILocation(line: 5986, column: 16, scope: !6271)
!6328 = !DILocation(line: 5987, column: 24, scope: !6271)
!6329 = !DILocation(line: 5987, column: 16, scope: !6271)
!6330 = !DILocation(line: 5988, column: 16, scope: !6271)
!6331 = !DILocation(line: 5990, column: 13, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 5990, column: 3)
!6333 = !DILocation(line: 0, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 5990, column: 3)
!6335 = !DILocation(line: 5990, column: 8, scope: !6332)
!6336 = !DILocation(line: 5990, column: 46, scope: !6334)
!6337 = !DILocation(line: 5990, column: 65, scope: !6334)
!6338 = !DILocation(line: 5990, column: 3, scope: !6332)
!6339 = !DILocation(line: 5992, column: 26, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 5991, column: 5)
!6341 = !DILocation(line: 5992, column: 7, scope: !6340)
!6342 = !DILocation(line: 5992, column: 21, scope: !6340)
!6343 = !DILocation(line: 5993, column: 26, scope: !6340)
!6344 = !DILocation(line: 5993, column: 7, scope: !6340)
!6345 = !DILocation(line: 5993, column: 21, scope: !6340)
!6346 = !DILocation(line: 5994, column: 28, scope: !6340)
!6347 = !DILocation(line: 5994, column: 19, scope: !6340)
!6348 = !DILocation(line: 5994, column: 7, scope: !6340)
!6349 = !DILocation(line: 5994, column: 23, scope: !6340)
!6350 = !DILocation(line: 5995, column: 7, scope: !6340)
!6351 = !DILocation(line: 5990, column: 3, scope: !6334)
!6352 = distinct !{!6352, !6338, !6353}
!6353 = !DILocation(line: 5996, column: 5, scope: !6332)
!6354 = !DILocation(line: 5998, column: 7, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 5998, column: 7)
!6356 = !DILocation(line: 5998, column: 7, scope: !6271)
!6357 = !DILocation(line: 6000, column: 24, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 5999, column: 5)
!6359 = !DILocation(line: 6001, column: 44, scope: !6358)
!6360 = !DILocation(line: 6001, column: 35, scope: !6358)
!6361 = !DILocation(line: 6001, column: 19, scope: !6358)
!6362 = !DILocation(line: 6003, column: 27, scope: !6358)
!6363 = !DILocation(line: 6003, column: 19, scope: !6358)
!6364 = !DILocation(line: 6004, column: 19, scope: !6358)
!6365 = !DILocation(line: 6006, column: 17, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 6006, column: 7)
!6367 = !DILocation(line: 0, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 6006, column: 7)
!6369 = !DILocation(line: 6006, column: 12, scope: !6366)
!6370 = !DILocation(line: 0, scope: !6358)
!6371 = !DILocation(line: 6006, column: 49, scope: !6368)
!6372 = !DILocation(line: 6006, column: 68, scope: !6368)
!6373 = !DILocation(line: 6006, column: 7, scope: !6366)
!6374 = !DILocation(line: 6008, column: 22, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 6007, column: 2)
!6376 = !DILocation(line: 6008, column: 4, scope: !6375)
!6377 = !DILocation(line: 6008, column: 17, scope: !6375)
!6378 = !DILocation(line: 6009, column: 22, scope: !6375)
!6379 = !DILocation(line: 6009, column: 4, scope: !6375)
!6380 = !DILocation(line: 6009, column: 17, scope: !6375)
!6381 = !DILocation(line: 6010, column: 24, scope: !6375)
!6382 = !DILocation(line: 6010, column: 15, scope: !6375)
!6383 = !DILocation(line: 6010, column: 4, scope: !6375)
!6384 = !DILocation(line: 6010, column: 19, scope: !6375)
!6385 = !DILocation(line: 6011, column: 4, scope: !6375)
!6386 = !DILocation(line: 6006, column: 7, scope: !6368)
!6387 = distinct !{!6387, !6373, !6388}
!6388 = !DILocation(line: 6012, column: 2, scope: !6366)
!6389 = !DILocation(line: 6023, column: 3, scope: !6271)
!6390 = !DILocation(line: 0, scope: !6355)
!6391 = !DILocation(line: 6024, column: 3, scope: !6271)
!6392 = !DILocation(line: 6026, column: 3, scope: !6271)
!6393 = !DILocation(line: 6031, column: 19, scope: !6304)
!6394 = !DILocation(line: 6031, column: 7, scope: !6304)
!6395 = !DILocation(line: 6031, column: 7, scope: !6271)
!6396 = !DILocation(line: 6035, column: 7, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 6035, column: 7)
!6398 = !DILocation(line: 0, scope: !6397)
!6399 = !DILocation(line: 0, scope: !6303)
!6400 = !DILocation(line: 6035, column: 19, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 6035, column: 7)
!6402 = !DILocation(line: 6036, column: 55, scope: !6401)
!6403 = !DILocation(line: 6036, column: 11, scope: !6401)
!6404 = !DILocation(line: 6035, column: 59, scope: !6401)
!6405 = !DILocation(line: 6035, column: 7, scope: !6401)
!6406 = distinct !{!6406, !6396, !6407}
!6407 = !DILocation(line: 6036, column: 65, scope: !6397)
!6408 = !DILocation(line: 6038, column: 7, scope: !6303)
!6409 = !DILocation(line: 6039, column: 18, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 6039, column: 11)
!6411 = !DILocation(line: 6039, column: 11, scope: !6303)
!6412 = !DILocation(line: 6041, column: 20, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 6040, column: 2)
!6414 = !DILocation(line: 6043, column: 25, scope: !6413)
!6415 = !DILocation(line: 6042, column: 13, scope: !6413)
!6416 = !DILocation(line: 6044, column: 2, scope: !6413)
!6417 = !DILocation(line: 6047, column: 3, scope: !6271)
!6418 = !DILocation(line: 6050, column: 3, scope: !6271)
!6419 = !DILocation(line: 6051, column: 22, scope: !6271)
!6420 = !DILocation(line: 6051, column: 27, scope: !6271)
!6421 = !DILocation(line: 6052, column: 14, scope: !6271)
!6422 = !DILocation(line: 6054, column: 3, scope: !6271)
!6423 = !DILocation(line: 6055, column: 5, scope: !6271)
!6424 = !DILocation(line: 6055, column: 16, scope: !6271)
!6425 = !DILocation(line: 6056, column: 17, scope: !6271)
!6426 = !DILocation(line: 6056, column: 5, scope: !6271)
!6427 = !DILocation(line: 6056, column: 15, scope: !6271)
!6428 = !DILocation(line: 6057, column: 20, scope: !6271)
!6429 = !DILocation(line: 6057, column: 26, scope: !6271)
!6430 = !DILocation(line: 6057, column: 5, scope: !6271)
!6431 = !DILocation(line: 6057, column: 18, scope: !6271)
!6432 = !DILocation(line: 6058, column: 29, scope: !6271)
!6433 = !DILocation(line: 6058, column: 5, scope: !6271)
!6434 = !DILocation(line: 6058, column: 16, scope: !6271)
!6435 = !DILocation(line: 6059, column: 5, scope: !6271)
!6436 = !DILocation(line: 6059, column: 14, scope: !6271)
!6437 = !DILocation(line: 6060, column: 5, scope: !6271)
!6438 = !DILocation(line: 6060, column: 19, scope: !6271)
!6439 = !DILocation(line: 6061, column: 5, scope: !6271)
!6440 = !DILocation(line: 6061, column: 12, scope: !6271)
!6441 = !DILocation(line: 6062, column: 5, scope: !6271)
!6442 = !DILocation(line: 6062, column: 19, scope: !6271)
!6443 = !DILocation(line: 6064, column: 8, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6064, column: 3)
!6445 = !DILocation(line: 0, scope: !6444)
!6446 = !DILocation(line: 6064, column: 15, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 6064, column: 3)
!6448 = !DILocation(line: 6064, column: 3, scope: !6444)
!6449 = !DILocation(line: 6069, column: 36, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 6065, column: 5)
!6451 = !DILocation(line: 6069, column: 50, scope: !6450)
!6452 = !DILocation(line: 6069, column: 47, scope: !6450)
!6453 = !DILocation(line: 6069, column: 7, scope: !6450)
!6454 = !DILocation(line: 6070, column: 15, scope: !6450)
!6455 = !DILocation(line: 6064, column: 55, scope: !6447)
!6456 = !DILocation(line: 6064, column: 3, scope: !6447)
!6457 = distinct !{!6457, !6448, !6458}
!6458 = !DILocation(line: 6071, column: 5, scope: !6444)
!6459 = !DILocation(line: 6074, column: 7, scope: !6307)
!6460 = !DILocation(line: 6074, column: 7, scope: !6271)
!6461 = !DILocation(line: 6077, column: 7, scope: !6306)
!6462 = !DILocation(line: 6079, column: 7, scope: !6306)
!6463 = !DILocation(line: 0, scope: !6306)
!6464 = !DILocation(line: 6080, column: 4, scope: !6306)
!6465 = !DILocation(line: 6080, column: 2, scope: !6306)
!6466 = !DILocation(line: 6081, column: 12, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 6081, column: 7)
!6468 = !DILocation(line: 0, scope: !6467)
!6469 = !DILocation(line: 6081, column: 7, scope: !6467)
!6470 = !DILocation(line: 6083, column: 31, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 6081, column: 7)
!6472 = !DILocation(line: 6083, column: 2, scope: !6471)
!6473 = !DILocation(line: 6083, column: 29, scope: !6471)
!6474 = !DILocation(line: 6082, column: 20, scope: !6471)
!6475 = !DILocation(line: 6081, column: 7, scope: !6471)
!6476 = distinct !{!6476, !6469, !6477}
!6477 = !DILocation(line: 6083, column: 31, scope: !6467)
!6478 = !DILocation(line: 6084, column: 36, scope: !6306)
!6479 = !DILocation(line: 6085, column: 5, scope: !6306)
!6480 = !DILocation(line: 6087, column: 37, scope: !6271)
!6481 = !DILocation(line: 6088, column: 30, scope: !6271)
!6482 = !DILocation(line: 6087, column: 3, scope: !6271)
!6483 = !DILocation(line: 6090, column: 7, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6090, column: 7)
!6485 = !DILocation(line: 6090, column: 7, scope: !6271)
!6486 = !DILocation(line: 6091, column: 5, scope: !6484)
!6487 = !DILocation(line: 6092, column: 7, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6092, column: 7)
!6489 = !DILocation(line: 6092, column: 7, scope: !6271)
!6490 = !DILocation(line: 6093, column: 5, scope: !6488)
!6491 = !DILocation(line: 6094, column: 3, scope: !6271)
!6492 = !DILocation(line: 6105, column: 3, scope: !6271)
!6493 = !DILocation(line: 6106, column: 14, scope: !6271)
!6494 = !DILocation(line: 6106, column: 3, scope: !6271)
!6495 = !DILocation(line: 6107, column: 7, scope: !6271)
!6496 = !DILocation(line: 6108, column: 26, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6107, column: 7)
!6498 = !DILocation(line: 6108, column: 5, scope: !6497)
!6499 = !DILocation(line: 6109, column: 3, scope: !6271)
!6500 = !DILocation(line: 6113, column: 25, scope: !6271)
!6501 = !DILocation(line: 6113, column: 8, scope: !6271)
!6502 = !DILocation(line: 6113, column: 6, scope: !6271)
!6503 = !DILocation(line: 6114, column: 7, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6114, column: 7)
!6505 = !DILocation(line: 6114, column: 7, scope: !6271)
!6506 = !DILocation(line: 6115, column: 5, scope: !6504)
!6507 = !DILocation(line: 6116, column: 17, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 6116, column: 3)
!6509 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6116, column: 3)
!6510 = !DILocation(line: 6116, column: 8, scope: !6509)
!6511 = !DILocation(line: 0, scope: !6509)
!6512 = !DILocation(line: 6116, column: 3, scope: !6509)
!6513 = !DILocation(line: 6122, column: 3, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6122, column: 3)
!6515 = !DILocation(line: 6118, column: 22, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 6117, column: 5)
!6517 = !DILocation(line: 6118, column: 37, scope: !6516)
!6518 = !DILocation(line: 6118, column: 41, scope: !6516)
!6519 = !DILocation(line: 6118, column: 11, scope: !6516)
!6520 = !DILocation(line: 6119, column: 24, scope: !6516)
!6521 = !DILocation(line: 6119, column: 10, scope: !6516)
!6522 = !DILocation(line: 6119, column: 22, scope: !6516)
!6523 = !DILocation(line: 6116, column: 37, scope: !6508)
!6524 = !DILocation(line: 6116, column: 3, scope: !6508)
!6525 = distinct !{!6525, !6512, !6526}
!6526 = !DILocation(line: 6120, column: 5, scope: !6509)
!6527 = !DILocation(line: 0, scope: !6514)
!6528 = !DILocation(line: 6122, column: 17, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 6122, column: 3)
!6530 = !DILocation(line: 6124, column: 26, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 6123, column: 5)
!6532 = !DILocation(line: 6124, column: 40, scope: !6531)
!6533 = !DILocation(line: 6124, column: 11, scope: !6531)
!6534 = !DILocation(line: 6125, column: 24, scope: !6531)
!6535 = !DILocation(line: 6125, column: 10, scope: !6531)
!6536 = !DILocation(line: 6125, column: 22, scope: !6531)
!6537 = !DILocation(line: 6122, column: 36, scope: !6529)
!6538 = !DILocation(line: 6122, column: 3, scope: !6529)
!6539 = distinct !{!6539, !6513, !6540}
!6540 = !DILocation(line: 6126, column: 5, scope: !6514)
!6541 = !DILocation(line: 6128, column: 3, scope: !6271)
!6542 = !DILocation(line: 6129, column: 8, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6129, column: 3)
!6544 = !DILocation(line: 0, scope: !6543)
!6545 = !DILocation(line: 6129, column: 15, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 6129, column: 3)
!6547 = !DILocation(line: 6129, column: 3, scope: !6543)
!6548 = !DILocation(line: 6130, column: 46, scope: !6546)
!6549 = !DILocation(line: 6130, column: 51, scope: !6546)
!6550 = !DILocation(line: 6130, column: 5, scope: !6546)
!6551 = !DILocation(line: 6129, column: 60, scope: !6546)
!6552 = !DILocation(line: 6129, column: 3, scope: !6546)
!6553 = distinct !{!6553, !6547, !6554}
!6554 = !DILocation(line: 6130, column: 53, scope: !6543)
!6555 = !DILocation(line: 6131, column: 3, scope: !6271)
!6556 = !DILocation(line: 6133, column: 7, scope: !6271)
!6557 = !DILocation(line: 6135, column: 7, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 6134, column: 5)
!6559 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 6133, column: 7)
!6560 = !DILocation(line: 6136, column: 7, scope: !6558)
!6561 = !DILocation(line: 6137, column: 7, scope: !6558)
!6562 = !DILocation(line: 6138, column: 5, scope: !6558)
!6563 = !DILocation(line: 6139, column: 3, scope: !6271)
!6564 = !DILocation(line: 6140, column: 3, scope: !6271)
!6565 = !DILocation(line: 6141, column: 3, scope: !6271)
!6566 = !DILocation(line: 6142, column: 3, scope: !6271)
!6567 = !DILocation(line: 6144, column: 10, scope: !6271)
!6568 = !DILocation(line: 6145, column: 1, scope: !6271)
!6569 = !DILocation(line: 6144, column: 3, scope: !6271)
!6570 = distinct !DISubprogram(name: "VEC_basic_block_base_address", scope: !382, file: !382, line: 281, type: !6571, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6573)
!6571 = !DISubroutineType(types: !6572)
!6572 = !{!2187, !2963}
!6573 = !{!6574}
!6574 = !DILocalVariable(name: "vec_", arg: 1, scope: !6570, file: !382, line: 281, type: !2963)
!6575 = !DILocation(line: 0, scope: !6570)
!6576 = !DILocation(line: 281, column: 1, scope: !6570)
!6577 = distinct !DISubprogram(name: "ei_safe_edge", scope: !382, file: !382, line: 761, type: !6578, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6580)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!1008, !5516}
!6580 = !{!6581}
!6581 = !DILocalVariable(name: "i", arg: 1, scope: !6577, file: !382, line: 761, type: !5516)
!6582 = !DILocation(line: 763, column: 11, scope: !6577)
!6583 = !DILocation(line: 763, column: 10, scope: !6577)
!6584 = !DILocation(line: 763, column: 26, scope: !6577)
!6585 = !DILocation(line: 763, column: 3, scope: !6577)
!6586 = distinct !DISubprogram(name: "VEC_basic_block_base_iterate", scope: !382, file: !382, line: 281, type: !6587, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6589)
!6587 = !DISubroutineType(types: !6588)
!6588 = !{!693, !3230, !7, !2187}
!6589 = !{!6590, !6591, !6592}
!6590 = !DILocalVariable(name: "vec_", arg: 1, scope: !6586, file: !382, line: 281, type: !3230)
!6591 = !DILocalVariable(name: "ix_", arg: 2, scope: !6586, file: !382, line: 281, type: !7)
!6592 = !DILocalVariable(name: "ptr", arg: 3, scope: !6586, file: !382, line: 281, type: !2187)
!6593 = !DILocation(line: 0, scope: !6586)
!6594 = !DILocation(line: 281, column: 1, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6586, file: !382, line: 281, column: 1)
!6596 = !DILocation(line: 281, column: 1, scope: !6586)
!6597 = !DILocation(line: 281, column: 1, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6595, file: !382, line: 281, column: 1)
!6599 = !DILocation(line: 281, column: 1, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6595, file: !382, line: 281, column: 1)
!6601 = !DILocation(line: 0, scope: !6595)
!6602 = distinct !DISubprogram(name: "find_outermost_region_in_block", scope: !3, file: !3, line: 5843, type: !6603, scopeLine: 5845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6605)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{!1511, !1502, !1670, !1511}
!6605 = !{!6606, !6607, !6608, !6609, !6610, !6614, !6615}
!6606 = !DILocalVariable(name: "src_cfun", arg: 1, scope: !6602, file: !3, line: 5843, type: !1502)
!6607 = !DILocalVariable(name: "bb", arg: 2, scope: !6602, file: !3, line: 5844, type: !1670)
!6608 = !DILocalVariable(name: "region", arg: 3, scope: !6602, file: !3, line: 5844, type: !1511)
!6609 = !DILocalVariable(name: "si", scope: !6602, file: !3, line: 5846, type: !2222)
!6610 = !DILocalVariable(name: "stmt", scope: !6611, file: !3, line: 5850, type: !1028)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 5849, column: 5)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 5848, column: 3)
!6613 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 5848, column: 3)
!6614 = !DILocalVariable(name: "stmt_region", scope: !6611, file: !3, line: 5851, type: !1511)
!6615 = !DILocalVariable(name: "lp_nr", scope: !6611, file: !3, line: 5852, type: !693)
!6616 = !DILocation(line: 0, scope: !6602)
!6617 = !DILocation(line: 5846, column: 3, scope: !6602)
!6618 = !DILocation(line: 5848, column: 13, scope: !6613)
!6619 = !DILocation(line: 5848, column: 8, scope: !6613)
!6620 = !DILocation(line: 5848, column: 33, scope: !6612)
!6621 = !DILocation(line: 5848, column: 32, scope: !6612)
!6622 = !DILocation(line: 5848, column: 3, scope: !6613)
!6623 = !DILocation(line: 5850, column: 21, scope: !6611)
!6624 = !DILocation(line: 0, scope: !6611)
!6625 = !DILocation(line: 5854, column: 15, scope: !6611)
!6626 = !DILocation(line: 5855, column: 21, scope: !6611)
!6627 = !DILocation(line: 5856, column: 11, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 5856, column: 11)
!6629 = !DILocation(line: 5856, column: 11, scope: !6611)
!6630 = !DILocation(line: 5858, column: 15, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 5858, column: 8)
!6632 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 5857, column: 2)
!6633 = !DILocation(line: 5858, column: 8, scope: !6632)
!6634 = !DILocation(line: 5860, column: 25, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 5860, column: 13)
!6636 = !DILocation(line: 5860, column: 13, scope: !6631)
!6637 = !DILocation(line: 5862, column: 17, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 5861, column: 6)
!6639 = !DILocation(line: 5863, column: 8, scope: !6638)
!6640 = !DILocation(line: 5848, column: 49, scope: !6612)
!6641 = !DILocation(line: 5848, column: 3, scope: !6612)
!6642 = distinct !{!6642, !6622, !6643}
!6643 = !DILocation(line: 5866, column: 5, scope: !6613)
!6644 = !DILocation(line: 5869, column: 1, scope: !6602)
!6645 = !DILocation(line: 5868, column: 3, scope: !6602)
!6646 = distinct !DISubprogram(name: "new_label_mapper", scope: !3, file: !3, line: 5872, type: !6647, scopeLine: 5873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6649)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{!704, !704, !697}
!6649 = !{!6650, !6651, !6652, !6653, !6654}
!6650 = !DILocalVariable(name: "decl", arg: 1, scope: !6646, file: !3, line: 5872, type: !704)
!6651 = !DILocalVariable(name: "data", arg: 2, scope: !6646, file: !3, line: 5872, type: !697)
!6652 = !DILocalVariable(name: "hash", scope: !6646, file: !3, line: 5874, type: !1587)
!6653 = !DILocalVariable(name: "m", scope: !6646, file: !3, line: 5875, type: !2247)
!6654 = !DILocalVariable(name: "slot", scope: !6646, file: !3, line: 5876, type: !1609)
!6655 = !DILocation(line: 0, scope: !6646)
!6656 = !DILocation(line: 5874, column: 17, scope: !6646)
!6657 = !DILocation(line: 5878, column: 3, scope: !6646)
!6658 = !DILocation(line: 5880, column: 7, scope: !6646)
!6659 = !DILocation(line: 5881, column: 13, scope: !6646)
!6660 = !DILocation(line: 5881, column: 6, scope: !6646)
!6661 = !DILocation(line: 5881, column: 11, scope: !6646)
!6662 = !DILocation(line: 5882, column: 11, scope: !6646)
!6663 = !DILocation(line: 5882, column: 16, scope: !6646)
!6664 = !DILocation(line: 5883, column: 11, scope: !6646)
!6665 = !DILocation(line: 5883, column: 6, scope: !6646)
!6666 = !DILocation(line: 5883, column: 9, scope: !6646)
!6667 = !DILocation(line: 5884, column: 28, scope: !6646)
!6668 = !DILocation(line: 5884, column: 3, scope: !6646)
!6669 = !DILocation(line: 5884, column: 26, scope: !6646)
!6670 = !DILocation(line: 5885, column: 7, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 5885, column: 7)
!6672 = !DILocation(line: 5885, column: 33, scope: !6671)
!6673 = !DILocation(line: 5885, column: 39, scope: !6671)
!6674 = !DILocation(line: 5885, column: 44, scope: !6671)
!6675 = !DILocation(line: 5885, column: 30, scope: !6671)
!6676 = !DILocation(line: 5885, column: 7, scope: !6646)
!6677 = !DILocation(line: 5886, column: 56, scope: !6671)
!6678 = !DILocation(line: 5886, column: 31, scope: !6671)
!6679 = !DILocation(line: 5886, column: 5, scope: !6671)
!6680 = !DILocation(line: 5888, column: 48, scope: !6646)
!6681 = !DILocation(line: 5888, column: 10, scope: !6646)
!6682 = !DILocation(line: 5889, column: 3, scope: !6646)
!6683 = !DILocation(line: 5891, column: 9, scope: !6646)
!6684 = !DILocation(line: 5893, column: 13, scope: !6646)
!6685 = !DILocation(line: 5893, column: 3, scope: !6646)
!6686 = distinct !DISubprogram(name: "move_block_to_fn", scope: !3, file: !3, line: 5699, type: !6687, scopeLine: 5702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6689)
!6687 = !DISubroutineType(types: !6688)
!6688 = !{null, !1502, !1670, !1670, !692, !2256}
!6689 = !{!6690, !6691, !6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700, !6701, !6705, !6706, !6707, !6720, !6724, !6725, !6728, !6729}
!6690 = !DILocalVariable(name: "dest_cfun", arg: 1, scope: !6686, file: !3, line: 5699, type: !1502)
!6691 = !DILocalVariable(name: "bb", arg: 2, scope: !6686, file: !3, line: 5699, type: !1670)
!6692 = !DILocalVariable(name: "after", arg: 3, scope: !6686, file: !3, line: 5700, type: !1670)
!6693 = !DILocalVariable(name: "update_edge_count_p", arg: 4, scope: !6686, file: !3, line: 5700, type: !692)
!6694 = !DILocalVariable(name: "d", arg: 5, scope: !6686, file: !3, line: 5701, type: !2256)
!6695 = !DILocalVariable(name: "cfg", scope: !6686, file: !3, line: 5703, type: !1666)
!6696 = !DILocalVariable(name: "ei", scope: !6686, file: !3, line: 5704, type: !5516)
!6697 = !DILocalVariable(name: "e", scope: !6686, file: !3, line: 5705, type: !1008)
!6698 = !DILocalVariable(name: "si", scope: !6686, file: !3, line: 5706, type: !2222)
!6699 = !DILocalVariable(name: "old_len", scope: !6686, file: !3, line: 5707, type: !7)
!6700 = !DILocalVariable(name: "new_len", scope: !6686, file: !3, line: 5707, type: !7)
!6701 = !DILocalVariable(name: "phi", scope: !6702, file: !3, line: 5749, type: !1028)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 5748, column: 5)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 5747, column: 3)
!6704 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 5747, column: 3)
!6705 = !DILocalVariable(name: "use", scope: !6702, file: !3, line: 5750, type: !2200)
!6706 = !DILocalVariable(name: "op", scope: !6702, file: !3, line: 5751, type: !704)
!6707 = !DILocalVariable(name: "oi", scope: !6702, file: !3, line: 5752, type: !6708)
!6708 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !678, line: 140, baseType: !6709)
!6709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !678, line: 131, size: 320, elements: !6710)
!6710 = !{!6711, !6712, !6713, !6715, !6717, !6718, !6719}
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !6709, file: !678, line: 133, baseType: !692, size: 8)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !6709, file: !678, line: 134, baseType: !677, size: 32, offset: 32)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !6709, file: !678, line: 135, baseType: !6714, size: 64, offset: 64)
!6714 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !678, line: 42, baseType: !1057)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !6709, file: !678, line: 136, baseType: !6716, size: 64, offset: 128)
!6716 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !678, line: 50, baseType: !1064)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !6709, file: !678, line: 137, baseType: !693, size: 32, offset: 192)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !6709, file: !678, line: 138, baseType: !693, size: 32, offset: 224)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !6709, file: !678, line: 139, baseType: !1028, size: 64, offset: 256)
!6720 = !DILocalVariable(name: "stmt", scope: !6721, file: !3, line: 5776, type: !1028)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 5775, column: 5)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 5774, column: 3)
!6723 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 5774, column: 3)
!6724 = !DILocalVariable(name: "wi", scope: !6721, file: !3, line: 5777, type: !2219)
!6725 = !DILocalVariable(name: "label", scope: !6726, file: !3, line: 5785, type: !704)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 5784, column: 2)
!6727 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 5783, column: 11)
!6728 = !DILocalVariable(name: "uid", scope: !6726, file: !3, line: 5786, type: !693)
!6729 = !DILocalVariable(name: "block", scope: !6730, file: !3, line: 5824, type: !704)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 5823, column: 7)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 5822, column: 9)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 5821, column: 3)
!6733 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 5821, column: 3)
!6734 = !DILocation(line: 0, scope: !6686)
!6735 = !DILocation(line: 5704, column: 3, scope: !6686)
!6736 = !DILocation(line: 5705, column: 3, scope: !6686)
!6737 = !DILocation(line: 5706, column: 3, scope: !6686)
!6738 = !DILocation(line: 5710, column: 3, scope: !6686)
!6739 = !DILocation(line: 5711, column: 7, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 5711, column: 7)
!6741 = !DILocation(line: 5711, column: 7, scope: !6686)
!6742 = !DILocation(line: 5712, column: 5, scope: !6740)
!6743 = !DILocation(line: 5715, column: 3, scope: !6686)
!6744 = !DILocation(line: 5718, column: 7, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 5718, column: 7)
!6746 = !DILocation(line: 5718, column: 7, scope: !6686)
!6747 = !DILocation(line: 5719, column: 5, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 5719, column: 5)
!6749 = !DILocation(line: 0, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 5719, column: 5)
!6751 = !DILocation(line: 0, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 5720, column: 7)
!6753 = !DILocation(line: 5719, column: 5, scope: !6750)
!6754 = !DILocation(line: 5721, column: 2, scope: !6752)
!6755 = !DILocation(line: 5721, column: 8, scope: !6752)
!6756 = !DILocation(line: 5721, column: 13, scope: !6752)
!6757 = !DILocation(line: 5721, column: 22, scope: !6752)
!6758 = !DILocation(line: 5722, column: 13, scope: !6752)
!6759 = !DILocation(line: 5722, column: 18, scope: !6752)
!6760 = !DILocation(line: 5722, column: 27, scope: !6752)
!6761 = distinct !{!6761, !6747, !6762}
!6762 = !DILocation(line: 5723, column: 7, scope: !6748)
!6763 = !DILocation(line: 5726, column: 3, scope: !6686)
!6764 = !DILocation(line: 5727, column: 3, scope: !6686)
!6765 = !DILocation(line: 5727, column: 9, scope: !6686)
!6766 = !DILocation(line: 5727, column: 14, scope: !6686)
!6767 = !DILocation(line: 5727, column: 30, scope: !6686)
!6768 = !DILocation(line: 5730, column: 20, scope: !6686)
!6769 = !DILocation(line: 5731, column: 8, scope: !6686)
!6770 = !DILocation(line: 5731, column: 24, scope: !6686)
!6771 = !DILocation(line: 5732, column: 11, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 5732, column: 7)
!6773 = !DILocation(line: 5732, column: 25, scope: !6772)
!6774 = !DILocation(line: 5732, column: 17, scope: !6772)
!6775 = !DILocation(line: 5732, column: 7, scope: !6686)
!6776 = !DILocation(line: 5733, column: 41, scope: !6772)
!6777 = !DILocation(line: 5733, column: 29, scope: !6772)
!6778 = !DILocation(line: 5733, column: 5, scope: !6772)
!6779 = !DILocation(line: 5735, column: 13, scope: !6686)
!6780 = !DILocation(line: 5736, column: 23, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 5736, column: 7)
!6782 = !DILocation(line: 5736, column: 42, scope: !6781)
!6783 = !DILocation(line: 5736, column: 7, scope: !6686)
!6784 = !DILocation(line: 5738, column: 68, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 5737, column: 5)
!6786 = !DILocation(line: 5738, column: 73, scope: !6785)
!6787 = !DILocation(line: 5738, column: 41, scope: !6785)
!6788 = !DILocation(line: 5739, column: 7, scope: !6785)
!6789 = !DILocation(line: 5741, column: 5, scope: !6785)
!6790 = !DILocation(line: 5743, column: 3, scope: !6686)
!6791 = !DILocation(line: 5747, column: 13, scope: !6704)
!6792 = !DILocation(line: 0, scope: !6702)
!6793 = !DILocation(line: 5747, column: 8, scope: !6704)
!6794 = !DILocation(line: 5747, column: 35, scope: !6703)
!6795 = !DILocation(line: 5747, column: 34, scope: !6703)
!6796 = !DILocation(line: 5747, column: 3, scope: !6704)
!6797 = !DILocation(line: 5749, column: 20, scope: !6702)
!6798 = !DILocation(line: 5751, column: 17, scope: !6702)
!6799 = !DILocation(line: 5752, column: 7, scope: !6702)
!6800 = !DILocation(line: 5754, column: 12, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 5754, column: 11)
!6802 = !DILocation(line: 5754, column: 11, scope: !6702)
!6803 = !DILocation(line: 5758, column: 11, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 5755, column: 2)
!6805 = !DILocation(line: 5759, column: 4, scope: !6804)
!6806 = distinct !{!6806, !6796, !6807}
!6807 = !DILocation(line: 5772, column: 5, scope: !6704)
!6808 = !DILocation(line: 5762, column: 7, scope: !6702)
!6809 = !DILocation(line: 5764, column: 7, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 5764, column: 7)
!6811 = !DILocation(line: 0, scope: !6810)
!6812 = !DILocation(line: 5764, column: 7, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 5764, column: 7)
!6814 = !DILocation(line: 5766, column: 9, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 5765, column: 2)
!6816 = !DILocation(line: 5767, column: 8, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 5767, column: 8)
!6818 = !DILocation(line: 5767, column: 23, scope: !6817)
!6819 = !DILocation(line: 5767, column: 8, scope: !6815)
!6820 = !DILocation(line: 5768, column: 6, scope: !6817)
!6821 = distinct !{!6821, !6809, !6822}
!6822 = !DILocation(line: 5769, column: 2, scope: !6810)
!6823 = !DILocation(line: 5771, column: 7, scope: !6702)
!6824 = !DILocation(line: 5772, column: 5, scope: !6703)
!6825 = !DILocation(line: 5774, column: 13, scope: !6723)
!6826 = !DILocation(line: 0, scope: !6721)
!6827 = !DILocation(line: 0, scope: !6726)
!6828 = !DILocation(line: 5774, column: 8, scope: !6723)
!6829 = !DILocation(line: 5774, column: 33, scope: !6722)
!6830 = !DILocation(line: 5774, column: 32, scope: !6722)
!6831 = !DILocation(line: 5774, column: 3, scope: !6723)
!6832 = !DILocation(line: 5776, column: 21, scope: !6721)
!6833 = !DILocation(line: 5777, column: 7, scope: !6721)
!6834 = !DILocation(line: 5779, column: 7, scope: !6721)
!6835 = !DILocation(line: 5780, column: 15, scope: !6721)
!6836 = !DILocation(line: 5781, column: 7, scope: !6721)
!6837 = !DILocation(line: 5783, column: 11, scope: !6727)
!6838 = !DILocation(line: 5783, column: 30, scope: !6727)
!6839 = !DILocation(line: 5783, column: 11, scope: !6721)
!6840 = !DILocation(line: 5785, column: 17, scope: !6726)
!6841 = !DILocation(line: 5786, column: 14, scope: !6726)
!6842 = !DILocation(line: 5788, column: 4, scope: !6726)
!6843 = !DILocation(line: 5790, column: 14, scope: !6726)
!6844 = !DILocation(line: 5791, column: 16, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 5791, column: 8)
!6846 = !DILocation(line: 5791, column: 8, scope: !6726)
!6847 = !DILocation(line: 5793, column: 20, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 5792, column: 6)
!6849 = !DILocation(line: 5793, column: 26, scope: !6848)
!6850 = !DILocation(line: 5793, column: 30, scope: !6848)
!6851 = !DILocation(line: 5794, column: 8, scope: !6848)
!6852 = !DILocation(line: 5796, column: 6, scope: !6848)
!6853 = !DILocation(line: 5798, column: 4, scope: !6726)
!6854 = !DILocation(line: 5799, column: 4, scope: !6726)
!6855 = !DILocation(line: 5801, column: 4, scope: !6726)
!6856 = !DILocation(line: 5803, column: 26, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 5803, column: 8)
!6858 = !DILocation(line: 5803, column: 31, scope: !6857)
!6859 = !DILocation(line: 5803, column: 12, scope: !6857)
!6860 = !DILocation(line: 5803, column: 8, scope: !6726)
!6861 = !DILocation(line: 5804, column: 43, scope: !6857)
!6862 = !DILocation(line: 5804, column: 37, scope: !6857)
!6863 = !DILocation(line: 5804, column: 6, scope: !6857)
!6864 = !DILocation(line: 5807, column: 52, scope: !6721)
!6865 = !DILocation(line: 5807, column: 67, scope: !6721)
!6866 = !DILocation(line: 5807, column: 7, scope: !6721)
!6867 = !DILocation(line: 5808, column: 34, scope: !6721)
!6868 = !DILocation(line: 5808, column: 7, scope: !6721)
!6869 = !DILocation(line: 5810, column: 58, scope: !6721)
!6870 = !DILocation(line: 5810, column: 7, scope: !6721)
!6871 = !DILocation(line: 5811, column: 38, scope: !6721)
!6872 = !DILocation(line: 5811, column: 7, scope: !6721)
!6873 = !DILocation(line: 5815, column: 7, scope: !6721)
!6874 = !DILocation(line: 5816, column: 7, scope: !6721)
!6875 = !DILocation(line: 5817, column: 7, scope: !6721)
!6876 = !DILocation(line: 5818, column: 7, scope: !6721)
!6877 = !DILocation(line: 5819, column: 5, scope: !6722)
!6878 = !DILocation(line: 5774, column: 49, scope: !6722)
!6879 = !DILocation(line: 5774, column: 3, scope: !6722)
!6880 = distinct !{!6880, !6831, !6881}
!6881 = !DILocation(line: 5819, column: 5, scope: !6723)
!6882 = !DILocation(line: 5821, column: 3, scope: !6733)
!6883 = !DILocation(line: 0, scope: !6732)
!6884 = !DILocation(line: 0, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 5825, column: 6)
!6886 = !DILocation(line: 5821, column: 3, scope: !6732)
!6887 = !DILocation(line: 5822, column: 9, scope: !6731)
!6888 = !DILocation(line: 5822, column: 12, scope: !6731)
!6889 = !DILocation(line: 5822, column: 9, scope: !6732)
!6890 = !DILocation(line: 0, scope: !6730)
!6891 = !DILocation(line: 5825, column: 9, scope: !6885)
!6892 = !DILocation(line: 5825, column: 20, scope: !6885)
!6893 = !DILocation(line: 5826, column: 6, scope: !6885)
!6894 = !DILocation(line: 5824, column: 18, scope: !6730)
!6895 = !DILocation(line: 5826, column: 15, scope: !6885)
!6896 = !DILocation(line: 5825, column: 6, scope: !6730)
!6897 = !DILocation(line: 5827, column: 23, scope: !6885)
!6898 = !DILocation(line: 5827, column: 7, scope: !6885)
!6899 = !DILocation(line: 5827, column: 18, scope: !6885)
!6900 = !DILocation(line: 5827, column: 4, scope: !6885)
!6901 = distinct !{!6901, !6882, !6902}
!6902 = !DILocation(line: 5836, column: 7, scope: !6733)
!6903 = !DILocation(line: 5837, column: 1, scope: !6686)
!6904 = distinct !DISubprogram(name: "replace_block_vars_by_duplicates", scope: !3, file: !3, line: 5900, type: !6905, scopeLine: 5902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6907)
!6905 = !DISubroutineType(types: !6906)
!6906 = !{null, !704, !1731, !704}
!6907 = !{!6908, !6909, !6910, !6911, !6912}
!6908 = !DILocalVariable(name: "block", arg: 1, scope: !6904, file: !3, line: 5900, type: !704)
!6909 = !DILocalVariable(name: "vars_map", arg: 2, scope: !6904, file: !3, line: 5900, type: !1731)
!6910 = !DILocalVariable(name: "to_context", arg: 3, scope: !6904, file: !3, line: 5901, type: !704)
!6911 = !DILocalVariable(name: "tp", scope: !6904, file: !3, line: 5903, type: !1062)
!6912 = !DILocalVariable(name: "t", scope: !6904, file: !3, line: 5903, type: !704)
!6913 = !DILocation(line: 0, scope: !6904)
!6914 = !DILocation(line: 5903, column: 3, scope: !6904)
!6915 = !DILocation(line: 5905, column: 14, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 5905, column: 3)
!6917 = !DILocation(line: 0, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 5906, column: 5)
!6919 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 5905, column: 3)
!6920 = !DILocation(line: 0, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 5914, column: 6)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 5913, column: 8)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 5912, column: 2)
!6924 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 5911, column: 11)
!6925 = !DILocation(line: 5905, column: 8, scope: !6916)
!6926 = !DILocation(line: 0, scope: !6916)
!6927 = !DILocation(line: 5905, column: 34, scope: !6919)
!6928 = !DILocation(line: 5905, column: 3, scope: !6916)
!6929 = !DILocation(line: 5907, column: 11, scope: !6918)
!6930 = !DILocation(line: 5907, column: 9, scope: !6918)
!6931 = !DILocation(line: 5908, column: 11, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 5908, column: 11)
!6933 = !DILocation(line: 5908, column: 25, scope: !6932)
!6934 = !DILocation(line: 5908, column: 37, scope: !6932)
!6935 = !DILocation(line: 5908, column: 54, scope: !6932)
!6936 = !DILocation(line: 5908, column: 11, scope: !6918)
!6937 = !DILocation(line: 5910, column: 7, scope: !6918)
!6938 = !DILocation(line: 5911, column: 11, scope: !6924)
!6939 = !DILocation(line: 5911, column: 16, scope: !6924)
!6940 = !DILocation(line: 5911, column: 13, scope: !6924)
!6941 = !DILocation(line: 5911, column: 11, scope: !6918)
!6942 = !DILocation(line: 5913, column: 8, scope: !6922)
!6943 = !DILocation(line: 5913, column: 24, scope: !6922)
!6944 = !DILocation(line: 5913, column: 36, scope: !6922)
!6945 = !DILocation(line: 5913, column: 39, scope: !6922)
!6946 = !DILocation(line: 5913, column: 8, scope: !6923)
!6947 = !DILocation(line: 5915, column: 8, scope: !6921)
!6948 = !DILocation(line: 5916, column: 8, scope: !6921)
!6949 = !DILocation(line: 5916, column: 34, scope: !6921)
!6950 = !DILocation(line: 0, scope: !6923)
!6951 = !DILocation(line: 5918, column: 21, scope: !6923)
!6952 = !DILocation(line: 5917, column: 6, scope: !6921)
!6953 = !DILocation(line: 5918, column: 4, scope: !6923)
!6954 = !DILocation(line: 5918, column: 19, scope: !6923)
!6955 = !DILocation(line: 5919, column: 10, scope: !6923)
!6956 = !DILocation(line: 5919, column: 8, scope: !6923)
!6957 = !DILocation(line: 5920, column: 2, scope: !6923)
!6958 = !DILocation(line: 5905, column: 45, scope: !6919)
!6959 = !DILocation(line: 5905, column: 3, scope: !6919)
!6960 = distinct !{!6960, !6928, !6961}
!6961 = !DILocation(line: 5921, column: 5, scope: !6916)
!6962 = !DILocation(line: 5923, column: 16, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 5923, column: 3)
!6964 = !DILocation(line: 5923, column: 8, scope: !6963)
!6965 = !DILocation(line: 0, scope: !6963)
!6966 = !DILocation(line: 5923, column: 3, scope: !6963)
!6967 = !DILocation(line: 5924, column: 5, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 5923, column: 3)
!6969 = !DILocation(line: 5923, column: 56, scope: !6968)
!6970 = !DILocation(line: 5923, column: 3, scope: !6968)
!6971 = distinct !{!6971, !6966, !6972}
!6972 = !DILocation(line: 5924, column: 66, scope: !6963)
!6973 = !DILocation(line: 5925, column: 1, scope: !6904)
!6974 = distinct !DISubprogram(name: "gimple_seq_first_stmt", scope: !613, file: !613, line: 168, type: !6975, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6980)
!6975 = !DISubroutineType(types: !6976)
!6976 = !{!1028, !6977}
!6977 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !705, line: 67, baseType: !6978)
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6979, size: 64)
!6979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!6980 = !{!6981, !6982}
!6981 = !DILocalVariable(name: "s", arg: 1, scope: !6974, file: !613, line: 168, type: !6977)
!6982 = !DILocalVariable(name: "n", scope: !6974, file: !613, line: 170, type: !1023)
!6983 = !DILocation(line: 0, scope: !6974)
!6984 = !DILocation(line: 170, column: 23, scope: !6974)
!6985 = !DILocation(line: 171, column: 10, scope: !6974)
!6986 = !DILocation(line: 171, column: 19, scope: !6974)
!6987 = !DILocation(line: 171, column: 3, scope: !6974)
!6988 = distinct !DISubprogram(name: "gimple_seq_last_stmt", scope: !613, file: !613, line: 187, type: !6975, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6989)
!6989 = !{!6990, !6991}
!6990 = !DILocalVariable(name: "s", arg: 1, scope: !6988, file: !613, line: 187, type: !6977)
!6991 = !DILocalVariable(name: "n", scope: !6988, file: !613, line: 189, type: !1023)
!6992 = !DILocation(line: 0, scope: !6988)
!6993 = !DILocation(line: 189, column: 23, scope: !6988)
!6994 = !DILocation(line: 190, column: 10, scope: !6988)
!6995 = !DILocation(line: 190, column: 19, scope: !6988)
!6996 = !DILocation(line: 190, column: 3, scope: !6988)
!6997 = distinct !DISubprogram(name: "debug_function", scope: !3, file: !3, line: 6293, type: !6998, scopeLine: 6294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7000)
!6998 = !DISubroutineType(types: !6999)
!6999 = !{null, !704, !693}
!7000 = !{!7001, !7002}
!7001 = !DILocalVariable(name: "fn", arg: 1, scope: !6997, file: !3, line: 6293, type: !704)
!7002 = !DILocalVariable(name: "flags", arg: 2, scope: !6997, file: !3, line: 6293, type: !693)
!7003 = !DILocation(line: 0, scope: !6997)
!7004 = !DILocation(line: 6295, column: 30, scope: !6997)
!7005 = !DILocation(line: 6295, column: 3, scope: !6997)
!7006 = !DILocation(line: 6296, column: 1, scope: !6997)
!7007 = distinct !DISubprogram(name: "print_loops_bb", scope: !3, file: !3, line: 6327, type: !7008, scopeLine: 6328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7010)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !2279, !1670, !693, !693}
!7010 = !{!7011, !7012, !7013, !7014, !7015}
!7011 = !DILocalVariable(name: "file", arg: 1, scope: !7007, file: !3, line: 6327, type: !2279)
!7012 = !DILocalVariable(name: "bb", arg: 2, scope: !7007, file: !3, line: 6327, type: !1670)
!7013 = !DILocalVariable(name: "indent", arg: 3, scope: !7007, file: !3, line: 6327, type: !693)
!7014 = !DILocalVariable(name: "verbosity", arg: 4, scope: !7007, file: !3, line: 6327, type: !693)
!7015 = !DILocalVariable(name: "s_indent", scope: !7007, file: !3, line: 6329, type: !695)
!7016 = !DILocation(line: 0, scope: !7007)
!7017 = !DILocation(line: 6329, column: 29, scope: !7007)
!7018 = !DILocation(line: 6330, column: 3, scope: !7007)
!7019 = !DILocation(line: 6331, column: 3, scope: !7007)
!7020 = !DILocation(line: 6331, column: 20, scope: !7007)
!7021 = !DILocation(line: 6334, column: 17, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 6334, column: 7)
!7023 = !DILocation(line: 6334, column: 7, scope: !7007)
!7024 = !DILocation(line: 6336, column: 60, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 6335, column: 5)
!7026 = !DILocation(line: 6336, column: 7, scope: !7025)
!7027 = !DILocation(line: 6337, column: 7, scope: !7025)
!7028 = !DILocation(line: 6338, column: 7, scope: !7025)
!7029 = !DILocation(line: 6339, column: 7, scope: !7025)
!7030 = !DILocation(line: 6340, column: 7, scope: !7025)
!7031 = !DILocation(line: 6341, column: 5, scope: !7025)
!7032 = !DILocation(line: 6344, column: 17, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 6344, column: 7)
!7034 = !DILocation(line: 6344, column: 7, scope: !7007)
!7035 = !DILocation(line: 6346, column: 7, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 6345, column: 5)
!7037 = !DILocation(line: 6347, column: 40, scope: !7036)
!7038 = !DILocation(line: 6347, column: 7, scope: !7036)
!7039 = !DILocation(line: 6348, column: 7, scope: !7036)
!7040 = !DILocation(line: 6349, column: 5, scope: !7036)
!7041 = !DILocation(line: 6350, column: 1, scope: !7007)
!7042 = distinct !DISubprogram(name: "print_pred_bbs", scope: !3, file: !3, line: 6302, type: !7043, scopeLine: 6303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7045)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{null, !2279, !1670}
!7045 = !{!7046, !7047, !7048, !7049}
!7046 = !DILocalVariable(name: "file", arg: 1, scope: !7042, file: !3, line: 6302, type: !2279)
!7047 = !DILocalVariable(name: "bb", arg: 2, scope: !7042, file: !3, line: 6302, type: !1670)
!7048 = !DILocalVariable(name: "e", scope: !7042, file: !3, line: 6304, type: !1008)
!7049 = !DILocalVariable(name: "ei", scope: !7042, file: !3, line: 6305, type: !5516)
!7050 = !DILocation(line: 0, scope: !7042)
!7051 = !DILocation(line: 6304, column: 3, scope: !7042)
!7052 = !DILocation(line: 6305, column: 3, scope: !7042)
!7053 = !DILocation(line: 6307, column: 3, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 6307, column: 3)
!7055 = !DILocation(line: 0, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 6307, column: 3)
!7057 = !DILocation(line: 6307, column: 3, scope: !7056)
!7058 = !DILocation(line: 6308, column: 30, scope: !7056)
!7059 = !DILocation(line: 6308, column: 33, scope: !7056)
!7060 = !DILocation(line: 6308, column: 38, scope: !7056)
!7061 = !DILocation(line: 6308, column: 5, scope: !7056)
!7062 = distinct !{!7062, !7053, !7063}
!7063 = !DILocation(line: 6308, column: 43, scope: !7054)
!7064 = !DILocation(line: 6309, column: 1, scope: !7042)
!7065 = distinct !DISubprogram(name: "print_succ_bbs", scope: !3, file: !3, line: 6315, type: !7043, scopeLine: 6316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7066)
!7066 = !{!7067, !7068, !7069, !7070}
!7067 = !DILocalVariable(name: "file", arg: 1, scope: !7065, file: !3, line: 6315, type: !2279)
!7068 = !DILocalVariable(name: "bb", arg: 2, scope: !7065, file: !3, line: 6315, type: !1670)
!7069 = !DILocalVariable(name: "e", scope: !7065, file: !3, line: 6317, type: !1008)
!7070 = !DILocalVariable(name: "ei", scope: !7065, file: !3, line: 6318, type: !5516)
!7071 = !DILocation(line: 0, scope: !7065)
!7072 = !DILocation(line: 6317, column: 3, scope: !7065)
!7073 = !DILocation(line: 6318, column: 3, scope: !7065)
!7074 = !DILocation(line: 6320, column: 3, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 6320, column: 3)
!7076 = !DILocation(line: 0, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 6320, column: 3)
!7078 = !DILocation(line: 6320, column: 3, scope: !7077)
!7079 = !DILocation(line: 6321, column: 30, scope: !7077)
!7080 = !DILocation(line: 6321, column: 33, scope: !7077)
!7081 = !DILocation(line: 6321, column: 39, scope: !7077)
!7082 = !DILocation(line: 6321, column: 5, scope: !7077)
!7083 = distinct !{!7083, !7074, !7084}
!7084 = !DILocation(line: 6321, column: 44, scope: !7075)
!7085 = !DILocation(line: 6322, column: 1, scope: !7065)
!7086 = distinct !DISubprogram(name: "print_loops", scope: !3, file: !3, line: 6421, type: !4543, scopeLine: 6422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7087)
!7087 = !{!7088, !7089, !7090}
!7088 = !DILocalVariable(name: "file", arg: 1, scope: !7086, file: !3, line: 6421, type: !2279)
!7089 = !DILocalVariable(name: "verbosity", arg: 2, scope: !7086, file: !3, line: 6421, type: !693)
!7090 = !DILocalVariable(name: "bb", scope: !7086, file: !3, line: 6423, type: !1670)
!7091 = !DILocation(line: 0, scope: !7086)
!7092 = !DILocation(line: 6425, column: 8, scope: !7086)
!7093 = !DILocation(line: 6426, column: 7, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 6426, column: 7)
!7095 = !DILocation(line: 6426, column: 10, scope: !7094)
!7096 = !DILocation(line: 6426, column: 17, scope: !7094)
!7097 = !DILocation(line: 6426, column: 13, scope: !7094)
!7098 = !DILocation(line: 6426, column: 7, scope: !7086)
!7099 = !DILocation(line: 6427, column: 5, scope: !7094)
!7100 = !DILocation(line: 6428, column: 1, scope: !7086)
!7101 = distinct !DISubprogram(name: "print_loop_and_siblings", scope: !3, file: !3, line: 6408, type: !7102, scopeLine: 6409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7104)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{null, !2279, !1243, !693, !693}
!7104 = !{!7105, !7106, !7107, !7108}
!7105 = !DILocalVariable(name: "file", arg: 1, scope: !7101, file: !3, line: 6408, type: !2279)
!7106 = !DILocalVariable(name: "loop", arg: 2, scope: !7101, file: !3, line: 6408, type: !1243)
!7107 = !DILocalVariable(name: "indent", arg: 3, scope: !7101, file: !3, line: 6408, type: !693)
!7108 = !DILocalVariable(name: "verbosity", arg: 4, scope: !7101, file: !3, line: 6408, type: !693)
!7109 = !DILocation(line: 6414, column: 3, scope: !7101)
!7110 = !DILocation(line: 0, scope: !7101)
!7111 = !DILocation(line: 6410, column: 12, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 6410, column: 7)
!7113 = !DILocation(line: 6410, column: 7, scope: !7101)
!7114 = !DILocation(line: 6413, column: 3, scope: !7101)
!7115 = !DILocation(line: 6414, column: 40, scope: !7101)
!7116 = !DILocation(line: 6415, column: 1, scope: !7101)
!7117 = distinct !DISubprogram(name: "debug_loops", scope: !3, file: !3, line: 6434, type: !4534, scopeLine: 6435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7118)
!7118 = !{!7119}
!7119 = !DILocalVariable(name: "verbosity", arg: 1, scope: !7117, file: !3, line: 6434, type: !693)
!7120 = !DILocation(line: 0, scope: !7117)
!7121 = !DILocation(line: 6436, column: 16, scope: !7117)
!7122 = !DILocation(line: 6436, column: 3, scope: !7117)
!7123 = !DILocation(line: 6437, column: 1, scope: !7117)
!7124 = distinct !DISubprogram(name: "debug_loop", scope: !3, file: !3, line: 6442, type: !7125, scopeLine: 6443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7127)
!7125 = !DISubroutineType(types: !7126)
!7126 = !{null, !1243, !693}
!7127 = !{!7128, !7129}
!7128 = !DILocalVariable(name: "loop", arg: 1, scope: !7124, file: !3, line: 6442, type: !1243)
!7129 = !DILocalVariable(name: "verbosity", arg: 2, scope: !7124, file: !3, line: 6442, type: !693)
!7130 = !DILocation(line: 0, scope: !7124)
!7131 = !DILocation(line: 6444, column: 15, scope: !7124)
!7132 = !DILocation(line: 6444, column: 3, scope: !7124)
!7133 = !DILocation(line: 6445, column: 1, scope: !7124)
!7134 = distinct !DISubprogram(name: "print_loop", scope: !3, file: !3, line: 6359, type: !7102, scopeLine: 6360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7135)
!7135 = !{!7136, !7137, !7138, !7139, !7140, !7141}
!7136 = !DILocalVariable(name: "file", arg: 1, scope: !7134, file: !3, line: 6359, type: !2279)
!7137 = !DILocalVariable(name: "loop", arg: 2, scope: !7134, file: !3, line: 6359, type: !1243)
!7138 = !DILocalVariable(name: "indent", arg: 3, scope: !7134, file: !3, line: 6359, type: !693)
!7139 = !DILocalVariable(name: "verbosity", arg: 4, scope: !7134, file: !3, line: 6359, type: !693)
!7140 = !DILocalVariable(name: "s_indent", scope: !7134, file: !3, line: 6361, type: !695)
!7141 = !DILocalVariable(name: "bb", scope: !7134, file: !3, line: 6362, type: !1670)
!7142 = !DILocation(line: 0, scope: !7134)
!7143 = !DILocation(line: 6364, column: 12, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 6364, column: 7)
!7145 = !DILocation(line: 6364, column: 7, scope: !7134)
!7146 = !DILocation(line: 6367, column: 23, scope: !7134)
!7147 = !DILocation(line: 6368, column: 3, scope: !7134)
!7148 = !DILocation(line: 6369, column: 3, scope: !7134)
!7149 = !DILocation(line: 6369, column: 20, scope: !7134)
!7150 = !DILocation(line: 6373, column: 11, scope: !7134)
!7151 = !DILocation(line: 6373, column: 22, scope: !7134)
!7152 = !DILocation(line: 6373, column: 30, scope: !7134)
!7153 = !DILocation(line: 6373, column: 43, scope: !7134)
!7154 = !DILocation(line: 6373, column: 50, scope: !7134)
!7155 = !DILocation(line: 6372, column: 3, scope: !7134)
!7156 = !DILocation(line: 6374, column: 3, scope: !7134)
!7157 = !DILocation(line: 6375, column: 35, scope: !7134)
!7158 = !DILocation(line: 6375, column: 3, scope: !7134)
!7159 = !DILocation(line: 6377, column: 13, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 6377, column: 7)
!7161 = !DILocation(line: 6377, column: 7, scope: !7160)
!7162 = !DILocation(line: 6377, column: 7, scope: !7134)
!7163 = !DILocation(line: 6379, column: 7, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 6378, column: 5)
!7165 = !DILocation(line: 6380, column: 7, scope: !7164)
!7166 = !DILocation(line: 6381, column: 5, scope: !7164)
!7167 = !DILocation(line: 6383, column: 13, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 6383, column: 7)
!7169 = !DILocation(line: 6383, column: 7, scope: !7168)
!7170 = !DILocation(line: 6383, column: 7, scope: !7134)
!7171 = !DILocation(line: 6385, column: 7, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 6384, column: 5)
!7173 = !DILocation(line: 6386, column: 7, scope: !7172)
!7174 = !DILocation(line: 6387, column: 5, scope: !7172)
!7175 = !DILocation(line: 6388, column: 3, scope: !7134)
!7176 = !DILocation(line: 6391, column: 17, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 6391, column: 7)
!7178 = !DILocation(line: 6391, column: 7, scope: !7134)
!7179 = !DILocation(line: 6393, column: 7, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 6392, column: 5)
!7181 = !DILocation(line: 6394, column: 7, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 6394, column: 7)
!7183 = !DILocation(line: 6394, column: 7, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 6394, column: 7)
!7185 = !DILocation(line: 0, scope: !7182)
!7186 = !DILocation(line: 6395, column: 10, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 6395, column: 6)
!7188 = !DILocation(line: 6395, column: 22, scope: !7187)
!7189 = !DILocation(line: 6395, column: 6, scope: !7184)
!7190 = !DILocation(line: 6396, column: 4, scope: !7187)
!7191 = !DILocation(line: 0, scope: !7184)
!7192 = distinct !{!7192, !7181, !7193}
!7193 = !DILocation(line: 6396, column: 47, scope: !7182)
!7194 = !DILocation(line: 6398, column: 44, scope: !7180)
!7195 = !DILocation(line: 6398, column: 58, scope: !7180)
!7196 = !DILocation(line: 6398, column: 7, scope: !7180)
!7197 = !DILocation(line: 6399, column: 7, scope: !7180)
!7198 = !DILocation(line: 6400, column: 5, scope: !7180)
!7199 = !DILocation(line: 6401, column: 1, scope: !7134)
!7200 = distinct !DISubprogram(name: "debug_loop_num", scope: !3, file: !3, line: 6451, type: !7201, scopeLine: 6452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7203)
!7201 = !DISubroutineType(types: !7202)
!7202 = !{null, !7, !693}
!7203 = !{!7204, !7205}
!7204 = !DILocalVariable(name: "num", arg: 1, scope: !7200, file: !3, line: 6451, type: !7)
!7205 = !DILocalVariable(name: "verbosity", arg: 2, scope: !7200, file: !3, line: 6451, type: !693)
!7206 = !DILocation(line: 0, scope: !7200)
!7207 = !DILocation(line: 6453, column: 15, scope: !7200)
!7208 = !DILocation(line: 6453, column: 3, scope: !7200)
!7209 = !DILocation(line: 6454, column: 1, scope: !7200)
!7210 = distinct !DISubprogram(name: "get_loop", scope: !337, file: !337, line: 417, type: !7211, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7213)
!7211 = !DISubroutineType(types: !7212)
!7212 = !{!1243, !7}
!7213 = !{!7214}
!7214 = !DILocalVariable(name: "num", arg: 1, scope: !7210, file: !337, line: 417, type: !7)
!7215 = !DILocation(line: 0, scope: !7210)
!7216 = !DILocation(line: 419, column: 10, scope: !7210)
!7217 = !DILocation(line: 419, column: 3, scope: !7210)
!7218 = distinct !DISubprogram(name: "gimple_purge_dead_abnormal_call_edges", scope: !3, file: !3, line: 6648, type: !2420, scopeLine: 6649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7219)
!7219 = !{!7220, !7221, !7222, !7225, !7226}
!7220 = !DILocalVariable(name: "bb", arg: 1, scope: !7218, file: !3, line: 6648, type: !1670)
!7221 = !DILocalVariable(name: "changed", scope: !7218, file: !3, line: 6650, type: !692)
!7222 = !DILocalVariable(name: "stmt", scope: !7223, file: !3, line: 6654, type: !1028)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 6653, column: 5)
!7224 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 6652, column: 7)
!7225 = !DILocalVariable(name: "ei", scope: !7223, file: !3, line: 6655, type: !5516)
!7226 = !DILocalVariable(name: "e", scope: !7223, file: !3, line: 6656, type: !1008)
!7227 = !DILocation(line: 0, scope: !7218)
!7228 = !DILocation(line: 6650, column: 18, scope: !7218)
!7229 = !DILocation(line: 6652, column: 7, scope: !7224)
!7230 = !DILocation(line: 6652, column: 13, scope: !7224)
!7231 = !DILocation(line: 6652, column: 7, scope: !7218)
!7232 = !DILocation(line: 6654, column: 21, scope: !7223)
!7233 = !DILocation(line: 0, scope: !7223)
!7234 = !DILocation(line: 6655, column: 7, scope: !7223)
!7235 = !DILocation(line: 6658, column: 13, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 6658, column: 11)
!7237 = !DILocation(line: 6658, column: 18, scope: !7236)
!7238 = !DILocation(line: 6658, column: 21, scope: !7236)
!7239 = !DILocation(line: 6658, column: 11, scope: !7223)
!7240 = !DILocation(line: 6659, column: 12, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 6659, column: 2)
!7242 = !DILocation(line: 0, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 6659, column: 2)
!7244 = !DILocation(line: 6659, column: 7, scope: !7241)
!7245 = !DILocation(line: 6659, column: 39, scope: !7243)
!7246 = !DILocation(line: 6659, column: 2, scope: !7241)
!7247 = !DILocation(line: 6661, column: 13, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 6661, column: 10)
!7249 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 6660, column: 4)
!7250 = !DILocation(line: 6661, column: 19, scope: !7248)
!7251 = !DILocation(line: 6661, column: 10, scope: !7249)
!7252 = !DILocation(line: 6663, column: 3, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 6662, column: 8)
!7254 = !DILocation(line: 6665, column: 8, scope: !7253)
!7255 = !DILocation(line: 6667, column: 8, scope: !7248)
!7256 = !DILocation(line: 6659, column: 2, scope: !7243)
!7257 = distinct !{!7257, !7246, !7258}
!7258 = !DILocation(line: 6668, column: 4, scope: !7241)
!7259 = !DILocation(line: 6671, column: 11, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 6671, column: 11)
!7261 = !DILocation(line: 6650, column: 8, scope: !7218)
!7262 = !DILocation(line: 6671, column: 11, scope: !7223)
!7263 = !DILocation(line: 6672, column: 2, scope: !7260)
!7264 = !DILocation(line: 6673, column: 5, scope: !7224)
!7265 = !DILocation(line: 6673, column: 5, scope: !7223)
!7266 = !DILocation(line: 6675, column: 3, scope: !7218)
!7267 = distinct !DISubprogram(name: "gimple_purge_dead_eh_edges", scope: !3, file: !3, line: 6807, type: !2420, scopeLine: 6808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7268)
!7268 = !{!7269, !7270, !7271, !7272, !7273}
!7269 = !DILocalVariable(name: "bb", arg: 1, scope: !7267, file: !3, line: 6807, type: !1670)
!7270 = !DILocalVariable(name: "changed", scope: !7267, file: !3, line: 6809, type: !692)
!7271 = !DILocalVariable(name: "e", scope: !7267, file: !3, line: 6810, type: !1008)
!7272 = !DILocalVariable(name: "ei", scope: !7267, file: !3, line: 6811, type: !5516)
!7273 = !DILocalVariable(name: "stmt", scope: !7267, file: !3, line: 6812, type: !1028)
!7274 = !DILocation(line: 0, scope: !7267)
!7275 = !DILocation(line: 6811, column: 3, scope: !7267)
!7276 = !DILocation(line: 6812, column: 17, scope: !7267)
!7277 = !DILocation(line: 6814, column: 7, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 6814, column: 7)
!7279 = !DILocation(line: 6814, column: 12, scope: !7278)
!7280 = !DILocation(line: 6814, column: 15, scope: !7278)
!7281 = !DILocation(line: 6814, column: 7, scope: !7267)
!7282 = !DILocation(line: 6817, column: 13, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 6817, column: 3)
!7284 = !DILocation(line: 0, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 6817, column: 3)
!7286 = !DILocation(line: 6817, column: 8, scope: !7283)
!7287 = !DILocation(line: 6817, column: 40, scope: !7285)
!7288 = !DILocation(line: 6817, column: 3, scope: !7283)
!7289 = !DILocation(line: 6819, column: 14, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 6819, column: 11)
!7291 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 6818, column: 5)
!7292 = !DILocation(line: 6819, column: 20, scope: !7290)
!7293 = !DILocation(line: 6819, column: 11, scope: !7291)
!7294 = !DILocation(line: 6821, column: 4, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 6820, column: 2)
!7296 = !DILocation(line: 6823, column: 2, scope: !7295)
!7297 = !DILocation(line: 6825, column: 2, scope: !7290)
!7298 = !DILocation(line: 6817, column: 3, scope: !7285)
!7299 = distinct !{!7299, !7288, !7300}
!7300 = !DILocation(line: 6826, column: 5, scope: !7283)
!7301 = !DILocation(line: 6829, column: 1, scope: !7267)
!7302 = distinct !DISubprogram(name: "remove_edge_and_dominated_blocks", scope: !3, file: !3, line: 6683, type: !2415, scopeLine: 6684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7303)
!7303 = !{!7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315}
!7304 = !DILocalVariable(name: "e", arg: 1, scope: !7302, file: !3, line: 6683, type: !1008)
!7305 = !DILocalVariable(name: "bbs_to_remove", scope: !7302, file: !3, line: 6685, type: !2242)
!7306 = !DILocalVariable(name: "bbs_to_fix_dom", scope: !7302, file: !3, line: 6686, type: !2242)
!7307 = !DILocalVariable(name: "df", scope: !7302, file: !3, line: 6687, type: !1728)
!7308 = !DILocalVariable(name: "df_idom", scope: !7302, file: !3, line: 6687, type: !1728)
!7309 = !DILocalVariable(name: "f", scope: !7302, file: !3, line: 6688, type: !1008)
!7310 = !DILocalVariable(name: "ei", scope: !7302, file: !3, line: 6689, type: !5516)
!7311 = !DILocalVariable(name: "none_removed", scope: !7302, file: !3, line: 6690, type: !692)
!7312 = !DILocalVariable(name: "i", scope: !7302, file: !3, line: 6691, type: !7)
!7313 = !DILocalVariable(name: "bb", scope: !7302, file: !3, line: 6692, type: !1670)
!7314 = !DILocalVariable(name: "dbb", scope: !7302, file: !3, line: 6692, type: !1670)
!7315 = !DILocalVariable(name: "bi", scope: !7302, file: !3, line: 6693, type: !7316)
!7316 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !933, line: 218, baseType: !7317)
!7317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !933, line: 203, size: 256, elements: !7318)
!7318 = !{!7319, !7320, !7321, !7322}
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !7317, file: !933, line: 206, baseType: !936, size: 64)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !7317, file: !933, line: 209, baseType: !936, size: 64, offset: 64)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !7317, file: !933, line: 212, baseType: !7, size: 32, offset: 128)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !7317, file: !933, line: 217, baseType: !946, size: 64, offset: 192)
!7323 = !DILocation(line: 0, scope: !7302)
!7324 = !DILocation(line: 6685, column: 3, scope: !7302)
!7325 = !DILocation(line: 6685, column: 28, scope: !7302)
!7326 = !DILocation(line: 6686, column: 3, scope: !7302)
!7327 = !DILocation(line: 6686, column: 28, scope: !7302)
!7328 = !DILocation(line: 6688, column: 3, scope: !7302)
!7329 = !DILocation(line: 6689, column: 3, scope: !7302)
!7330 = !DILocation(line: 6691, column: 3, scope: !7302)
!7331 = !DILocation(line: 6692, column: 3, scope: !7302)
!7332 = !DILocation(line: 6693, column: 3, scope: !7302)
!7333 = !DILocation(line: 6695, column: 8, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 6695, column: 7)
!7335 = !DILocation(line: 6695, column: 7, scope: !7302)
!7336 = !DILocation(line: 6697, column: 7, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 6696, column: 5)
!7338 = !DILocation(line: 6698, column: 7, scope: !7337)
!7339 = !DILocation(line: 6702, column: 10, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 6702, column: 7)
!7341 = !DILocation(line: 6702, column: 18, scope: !7340)
!7342 = !DILocation(line: 6702, column: 15, scope: !7340)
!7343 = !DILocation(line: 6702, column: 7, scope: !7302)
!7344 = !DILocation(line: 6704, column: 11, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 6704, column: 11)
!7346 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 6703, column: 5)
!7347 = !DILocation(line: 6704, column: 11, scope: !7346)
!7348 = !DILocation(line: 6705, column: 45, scope: !7345)
!7349 = !DILocation(line: 6705, column: 50, scope: !7345)
!7350 = !DILocation(line: 6705, column: 2, scope: !7345)
!7351 = !DILocation(line: 6706, column: 7, scope: !7346)
!7352 = !DILocation(line: 6707, column: 7, scope: !7346)
!7353 = !DILocation(line: 6717, column: 3, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 6717, column: 3)
!7355 = !DILocation(line: 0, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 6717, column: 3)
!7357 = !DILocation(line: 6717, column: 3, scope: !7356)
!7358 = !DILocation(line: 6719, column: 11, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 6719, column: 11)
!7360 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 6718, column: 5)
!7361 = !DILocation(line: 6719, column: 13, scope: !7359)
!7362 = !DILocation(line: 6719, column: 11, scope: !7360)
!7363 = !DILocation(line: 6722, column: 47, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 6722, column: 11)
!7365 = !DILocation(line: 6722, column: 55, scope: !7364)
!7366 = !DILocation(line: 6722, column: 12, scope: !7364)
!7367 = !DILocation(line: 6722, column: 11, scope: !7360)
!7368 = distinct !{!7368, !7353, !7369}
!7369 = !DILocation(line: 6727, column: 5, scope: !7354)
!7370 = !DILocation(line: 6729, column: 8, scope: !7302)
!7371 = !DILocation(line: 6730, column: 13, scope: !7302)
!7372 = !DILocation(line: 0, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 6732, column: 7)
!7374 = !DILocation(line: 6732, column: 7, scope: !7302)
!7375 = !DILocation(line: 6734, column: 7, scope: !7373)
!7376 = !DILocation(line: 6734, column: 58, scope: !7373)
!7377 = !DILocation(line: 6733, column: 5, scope: !7373)
!7378 = !DILocation(line: 6737, column: 23, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 6736, column: 5)
!7380 = !DILocation(line: 6737, column: 21, scope: !7379)
!7381 = !DILocation(line: 0, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 6740, column: 4)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 6739, column: 2)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 6738, column: 7)
!7385 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 6738, column: 7)
!7386 = !DILocation(line: 6738, column: 12, scope: !7385)
!7387 = !DILocation(line: 6738, column: 19, scope: !7384)
!7388 = !DILocation(line: 0, scope: !7385)
!7389 = !DILocation(line: 6738, column: 7, scope: !7385)
!7390 = !DILocation(line: 6740, column: 4, scope: !7382)
!7391 = !DILocation(line: 6740, column: 4, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 6740, column: 4)
!7393 = !DILocation(line: 6742, column: 12, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 6742, column: 12)
!7395 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 6741, column: 6)
!7396 = !DILocation(line: 6742, column: 15, scope: !7394)
!7397 = !DILocation(line: 6742, column: 23, scope: !7394)
!7398 = !DILocation(line: 6742, column: 20, scope: !7394)
!7399 = !DILocation(line: 6742, column: 12, scope: !7395)
!7400 = !DILocation(line: 6743, column: 32, scope: !7394)
!7401 = !DILocation(line: 6743, column: 3, scope: !7394)
!7402 = distinct !{!7402, !7390, !7403}
!7403 = !DILocation(line: 6744, column: 6, scope: !7382)
!7404 = !DILocation(line: 6738, column: 69, scope: !7384)
!7405 = !DILocation(line: 6738, column: 7, scope: !7384)
!7406 = distinct !{!7406, !7389, !7407}
!7407 = !DILocation(line: 6745, column: 2, scope: !7385)
!7408 = !DILocation(line: 6746, column: 12, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 6746, column: 7)
!7410 = !DILocation(line: 0, scope: !7409)
!7411 = !DILocation(line: 6746, column: 19, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 6746, column: 7)
!7413 = !DILocation(line: 6746, column: 7, scope: !7409)
!7414 = !DILocation(line: 6747, column: 24, scope: !7412)
!7415 = !DILocation(line: 6747, column: 28, scope: !7412)
!7416 = !DILocation(line: 6747, column: 2, scope: !7412)
!7417 = !DILocation(line: 6746, column: 69, scope: !7412)
!7418 = !DILocation(line: 6746, column: 7, scope: !7412)
!7419 = distinct !{!7419, !7413, !7420}
!7420 = !DILocation(line: 6747, column: 33, scope: !7409)
!7421 = !DILocation(line: 6749, column: 7, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 6749, column: 7)
!7423 = !DILocation(line: 6749, column: 7, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 6749, column: 7)
!7425 = !DILocation(line: 6751, column: 9, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 6750, column: 2)
!7427 = !DILocation(line: 6751, column: 7, scope: !7426)
!7428 = !DILocation(line: 6753, column: 6, scope: !7426)
!7429 = !DILocation(line: 6753, column: 52, scope: !7426)
!7430 = !DILocation(line: 6752, column: 4, scope: !7426)
!7431 = distinct !{!7431, !7421, !7432}
!7432 = !DILocation(line: 6754, column: 2, scope: !7422)
!7433 = !DILocation(line: 6757, column: 7, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 6757, column: 7)
!7435 = !DILocation(line: 6757, column: 7, scope: !7302)
!7436 = !DILocation(line: 6760, column: 50, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 6758, column: 5)
!7438 = !DILocation(line: 6760, column: 55, scope: !7437)
!7439 = !DILocation(line: 6760, column: 7, scope: !7437)
!7440 = !DILocation(line: 6761, column: 24, scope: !7437)
!7441 = !DILocation(line: 6761, column: 7, scope: !7437)
!7442 = !DILocation(line: 6762, column: 5, scope: !7437)
!7443 = !DILocation(line: 6765, column: 7, scope: !7302)
!7444 = !DILocation(line: 6766, column: 5, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 6765, column: 7)
!7446 = !DILocation(line: 6773, column: 16, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 6773, column: 7)
!7448 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 6768, column: 5)
!7449 = !DILocation(line: 6773, column: 14, scope: !7447)
!7450 = !DILocation(line: 6773, column: 12, scope: !7447)
!7451 = !DILocation(line: 6773, column: 58, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 6773, column: 7)
!7453 = !DILocation(line: 6773, column: 61, scope: !7452)
!7454 = !DILocation(line: 6773, column: 7, scope: !7447)
!7455 = !DILocation(line: 6774, column: 22, scope: !7452)
!7456 = !DILocation(line: 6774, column: 2, scope: !7452)
!7457 = !DILocation(line: 6773, column: 7, scope: !7452)
!7458 = distinct !{!7458, !7454, !7459}
!7459 = !DILocation(line: 6774, column: 63, scope: !7447)
!7460 = !DILocation(line: 6787, column: 3, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 6787, column: 3)
!7462 = !DILocation(line: 6787, column: 3, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 6787, column: 3)
!7464 = !DILocation(line: 6789, column: 12, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 6788, column: 5)
!7466 = !DILocation(line: 6789, column: 10, scope: !7465)
!7467 = !DILocation(line: 6790, column: 18, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 6790, column: 7)
!7469 = !DILocation(line: 6790, column: 12, scope: !7468)
!7470 = !DILocation(line: 0, scope: !7468)
!7471 = !DILocation(line: 6790, column: 7, scope: !7468)
!7472 = !DILocation(line: 6793, column: 2, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 6790, column: 7)
!7474 = !DILocation(line: 6792, column: 11, scope: !7473)
!7475 = !DILocation(line: 6790, column: 7, scope: !7473)
!7476 = distinct !{!7476, !7471, !7477}
!7477 = !DILocation(line: 6793, column: 2, scope: !7468)
!7478 = distinct !{!7478, !7460, !7479}
!7479 = !DILocation(line: 6794, column: 5, scope: !7461)
!7480 = !DILocation(line: 6796, column: 43, scope: !7302)
!7481 = !DILocation(line: 6796, column: 3, scope: !7302)
!7482 = !DILocation(line: 6798, column: 3, scope: !7302)
!7483 = !DILocation(line: 6799, column: 3, scope: !7302)
!7484 = !DILocation(line: 6800, column: 3, scope: !7302)
!7485 = !DILocation(line: 6801, column: 3, scope: !7302)
!7486 = !DILocation(line: 6802, column: 1, scope: !7302)
!7487 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !933, file: !933, line: 224, type: !7488, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7494)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{null, !7490, !7491, !7, !2189}
!7490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7316, size: 64)
!7491 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !705, line: 48, baseType: !7492)
!7492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7493, size: 64)
!7493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!7494 = !{!7495, !7496, !7497, !7498}
!7495 = !DILocalVariable(name: "bi", arg: 1, scope: !7487, file: !933, line: 224, type: !7490)
!7496 = !DILocalVariable(name: "map", arg: 2, scope: !7487, file: !933, line: 224, type: !7491)
!7497 = !DILocalVariable(name: "start_bit", arg: 3, scope: !7487, file: !933, line: 225, type: !7)
!7498 = !DILocalVariable(name: "bit_no", arg: 4, scope: !7487, file: !933, line: 225, type: !2189)
!7499 = !DILocation(line: 0, scope: !7487)
!7500 = !DILocation(line: 227, column: 19, scope: !7487)
!7501 = !DILocation(line: 227, column: 12, scope: !7487)
!7502 = !DILocation(line: 228, column: 7, scope: !7487)
!7503 = !DILocation(line: 228, column: 12, scope: !7487)
!7504 = !DILocation(line: 0, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !933, line: 233, column: 11)
!7506 = distinct !DILexicalBlock(scope: !7487, file: !933, line: 232, column: 5)
!7507 = !DILocation(line: 231, column: 3, scope: !7487)
!7508 = !DILocation(line: 233, column: 12, scope: !7505)
!7509 = !DILocation(line: 233, column: 11, scope: !7506)
!7510 = !DILocation(line: 235, column: 13, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7505, file: !933, line: 234, column: 2)
!7512 = !DILocation(line: 236, column: 4, scope: !7511)
!7513 = !DILocation(line: 239, column: 11, scope: !7506)
!7514 = distinct !{!7514, !7507, !7515}
!7515 = !DILocation(line: 242, column: 5, scope: !7487)
!7516 = !DILocation(line: 245, column: 11, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7487, file: !933, line: 245, column: 7)
!7518 = !DILocation(line: 245, column: 17, scope: !7517)
!7519 = !DILocation(line: 245, column: 22, scope: !7517)
!7520 = !DILocation(line: 245, column: 7, scope: !7487)
!7521 = !DILocation(line: 246, column: 27, scope: !7517)
!7522 = !DILocation(line: 246, column: 32, scope: !7517)
!7523 = !DILocation(line: 246, column: 5, scope: !7517)
!7524 = !DILocation(line: 249, column: 7, scope: !7487)
!7525 = !DILocation(line: 249, column: 15, scope: !7487)
!7526 = !DILocation(line: 250, column: 14, scope: !7487)
!7527 = !DILocation(line: 251, column: 7, scope: !7487)
!7528 = !DILocation(line: 251, column: 12, scope: !7487)
!7529 = !DILocation(line: 257, column: 16, scope: !7487)
!7530 = !DILocation(line: 257, column: 13, scope: !7487)
!7531 = !DILocation(line: 259, column: 11, scope: !7487)
!7532 = !DILocation(line: 260, column: 1, scope: !7487)
!7533 = distinct !DISubprogram(name: "bmp_iter_set", scope: !933, file: !933, line: 393, type: !7534, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7536)
!7534 = !DISubroutineType(types: !7535)
!7535 = !{!692, !7490, !2189}
!7536 = !{!7537, !7538, !7539}
!7537 = !DILocalVariable(name: "bi", arg: 1, scope: !7533, file: !933, line: 393, type: !7490)
!7538 = !DILocalVariable(name: "bit_no", arg: 2, scope: !7533, file: !933, line: 393, type: !2189)
!7539 = !DILabel(scope: !7540, name: "next_bit", file: !933, line: 398)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !933, line: 397, column: 5)
!7541 = distinct !DILexicalBlock(scope: !7533, file: !933, line: 396, column: 7)
!7542 = !DILocation(line: 0, scope: !7533)
!7543 = !DILocation(line: 396, column: 11, scope: !7541)
!7544 = !DILocation(line: 396, column: 7, scope: !7541)
!7545 = !DILocation(line: 396, column: 7, scope: !7533)
!7546 = !DILocation(line: 419, column: 15, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !933, line: 418, column: 2)
!7548 = distinct !DILexicalBlock(scope: !7533, file: !933, line: 415, column: 5)
!7549 = !DILocation(line: 399, column: 7, scope: !7540)
!7550 = !DILocation(line: 398, column: 5, scope: !7540)
!7551 = !DILocation(line: 399, column: 20, scope: !7540)
!7552 = !DILocation(line: 399, column: 25, scope: !7540)
!7553 = !DILocation(line: 399, column: 14, scope: !7540)
!7554 = !DILocation(line: 401, column: 13, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7540, file: !933, line: 400, column: 2)
!7556 = !DILocation(line: 402, column: 12, scope: !7555)
!7557 = distinct !{!7557, !7549, !7558}
!7558 = !DILocation(line: 403, column: 2, scope: !7540)
!7559 = !DILocation(line: 410, column: 15, scope: !7533)
!7560 = !DILocation(line: 410, column: 42, scope: !7533)
!7561 = !DILocation(line: 411, column: 26, scope: !7533)
!7562 = !DILocation(line: 410, column: 11, scope: !7533)
!7563 = !DILocation(line: 412, column: 7, scope: !7533)
!7564 = !DILocation(line: 412, column: 14, scope: !7533)
!7565 = !DILocation(line: 0, scope: !7548)
!7566 = !DILocation(line: 414, column: 3, scope: !7533)
!7567 = !DILocation(line: 417, column: 7, scope: !7548)
!7568 = !DILocation(line: 417, column: 18, scope: !7548)
!7569 = !DILocation(line: 417, column: 26, scope: !7548)
!7570 = !DILocation(line: 419, column: 13, scope: !7547)
!7571 = !DILocation(line: 420, column: 8, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7547, file: !933, line: 420, column: 8)
!7573 = !DILocation(line: 420, column: 8, scope: !7547)
!7574 = !DILocation(line: 422, column: 12, scope: !7547)
!7575 = !DILocation(line: 423, column: 15, scope: !7547)
!7576 = distinct !{!7576, !7567, !7577}
!7577 = !DILocation(line: 424, column: 2, scope: !7548)
!7578 = !DILocation(line: 427, column: 28, scope: !7548)
!7579 = !DILocation(line: 427, column: 16, scope: !7548)
!7580 = !DILocation(line: 428, column: 12, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7548, file: !933, line: 428, column: 11)
!7582 = !DILocation(line: 428, column: 11, scope: !7548)
!7583 = !DILocation(line: 430, column: 27, scope: !7548)
!7584 = !DILocation(line: 430, column: 32, scope: !7548)
!7585 = !DILocation(line: 430, column: 15, scope: !7548)
!7586 = !DILocation(line: 431, column: 19, scope: !7548)
!7587 = distinct !{!7587, !7566, !7588}
!7588 = !DILocation(line: 432, column: 5, scope: !7533)
!7589 = !DILocation(line: 433, column: 1, scope: !7533)
!7590 = distinct !DISubprogram(name: "bmp_iter_next", scope: !933, file: !933, line: 382, type: !7591, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7593)
!7591 = !DISubroutineType(types: !7592)
!7592 = !{null, !7490, !2189}
!7593 = !{!7594, !7595}
!7594 = !DILocalVariable(name: "bi", arg: 1, scope: !7590, file: !933, line: 382, type: !7490)
!7595 = !DILocalVariable(name: "bit_no", arg: 2, scope: !7590, file: !933, line: 382, type: !2189)
!7596 = !DILocation(line: 0, scope: !7590)
!7597 = !DILocation(line: 384, column: 7, scope: !7590)
!7598 = !DILocation(line: 384, column: 12, scope: !7590)
!7599 = !DILocation(line: 385, column: 11, scope: !7590)
!7600 = !DILocation(line: 386, column: 1, scope: !7590)
!7601 = distinct !DISubprogram(name: "gimple_purge_all_dead_eh_edges", scope: !3, file: !3, line: 6832, type: !7602, scopeLine: 6833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7604)
!7602 = !DISubroutineType(types: !7603)
!7603 = !{!692, !7491}
!7604 = !{!7605, !7606, !7607, !7608, !7609}
!7605 = !DILocalVariable(name: "blocks", arg: 1, scope: !7601, file: !3, line: 6832, type: !7491)
!7606 = !DILocalVariable(name: "changed", scope: !7601, file: !3, line: 6834, type: !692)
!7607 = !DILocalVariable(name: "i", scope: !7601, file: !3, line: 6835, type: !7)
!7608 = !DILocalVariable(name: "bi", scope: !7601, file: !3, line: 6836, type: !7316)
!7609 = !DILocalVariable(name: "bb", scope: !7610, file: !3, line: 6840, type: !1670)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 6839, column: 5)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 6838, column: 3)
!7612 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 6838, column: 3)
!7613 = !DILocation(line: 0, scope: !7601)
!7614 = !DILocation(line: 6835, column: 3, scope: !7601)
!7615 = !DILocation(line: 6836, column: 3, scope: !7601)
!7616 = !DILocation(line: 6838, column: 3, scope: !7612)
!7617 = !DILocation(line: 6838, column: 3, scope: !7611)
!7618 = !DILocation(line: 6840, column: 24, scope: !7610)
!7619 = !DILocation(line: 0, scope: !7610)
!7620 = !DILocation(line: 6844, column: 7, scope: !7610)
!7621 = !DILocation(line: 6845, column: 14, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 6845, column: 11)
!7623 = !DILocation(line: 6845, column: 11, scope: !7610)
!7624 = !DILocation(line: 6846, column: 13, scope: !7622)
!7625 = !DILocation(line: 6846, column: 10, scope: !7622)
!7626 = !DILocation(line: 6846, column: 2, scope: !7622)
!7627 = distinct !{!7627, !7616, !7628}
!7628 = !DILocation(line: 6847, column: 5, scope: !7612)
!7629 = !DILocation(line: 6850, column: 1, scope: !7601)
!7630 = !DILocation(line: 6849, column: 3, scope: !7601)
!7631 = distinct !DISubprogram(name: "gimple_verify_flow_info", scope: !3, file: !3, line: 4213, type: !2350, scopeLine: 4214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7632)
!7632 = !{!7633, !7634, !7635, !7636, !7637, !7638, !7639, !7643, !7647, !7648, !7652, !7655, !7656, !7658, !7659, !7660, !7661, !7665, !7666, !7670, !7674}
!7633 = !DILocalVariable(name: "err", scope: !7631, file: !3, line: 4215, type: !693)
!7634 = !DILocalVariable(name: "bb", scope: !7631, file: !3, line: 4216, type: !1670)
!7635 = !DILocalVariable(name: "gsi", scope: !7631, file: !3, line: 4217, type: !2222)
!7636 = !DILocalVariable(name: "stmt", scope: !7631, file: !3, line: 4218, type: !1028)
!7637 = !DILocalVariable(name: "e", scope: !7631, file: !3, line: 4219, type: !1008)
!7638 = !DILocalVariable(name: "ei", scope: !7631, file: !3, line: 4220, type: !5516)
!7639 = !DILocalVariable(name: "found_ctrl_stmt", scope: !7640, file: !3, line: 4243, type: !692)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 4242, column: 5)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 4241, column: 3)
!7642 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 4241, column: 3)
!7643 = !DILocalVariable(name: "label", scope: !7644, file: !3, line: 4250, type: !704)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 4249, column: 2)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 4248, column: 7)
!7646 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 4248, column: 7)
!7647 = !DILocalVariable(name: "prev_stmt", scope: !7644, file: !3, line: 4251, type: !1028)
!7648 = !DILocalVariable(name: "stmt", scope: !7649, file: !3, line: 4299, type: !1028)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 4298, column: 2)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 4297, column: 7)
!7651 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 4297, column: 7)
!7652 = !DILocalVariable(name: "true_edge", scope: !7653, file: !3, line: 4359, type: !1008)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 4358, column: 4)
!7654 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 4356, column: 2)
!7655 = !DILocalVariable(name: "false_edge", scope: !7653, file: !3, line: 4360, type: !1008)
!7656 = !DILocalVariable(name: "prev", scope: !7657, file: !3, line: 4420, type: !704)
!7657 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 4419, column: 4)
!7658 = !DILocalVariable(name: "e", scope: !7657, file: !3, line: 4421, type: !1008)
!7659 = !DILocalVariable(name: "i", scope: !7657, file: !3, line: 4422, type: !1173)
!7660 = !DILocalVariable(name: "n", scope: !7657, file: !3, line: 4422, type: !1173)
!7661 = !DILocalVariable(name: "lab", scope: !7662, file: !3, line: 4429, type: !704)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 4428, column: 8)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 4427, column: 6)
!7664 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 4427, column: 6)
!7665 = !DILocalVariable(name: "label_bb", scope: !7662, file: !3, line: 4430, type: !1670)
!7666 = !DILocalVariable(name: "c", scope: !7667, file: !3, line: 4439, type: !704)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 4438, column: 8)
!7668 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 4437, column: 6)
!7669 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 4437, column: 6)
!7670 = !DILocalVariable(name: "lab", scope: !7671, file: !3, line: 4485, type: !704)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 4484, column: 8)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 4483, column: 6)
!7673 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 4483, column: 6)
!7674 = !DILocalVariable(name: "label_bb", scope: !7671, file: !3, line: 4486, type: !1670)
!7675 = !DILocation(line: 0, scope: !7631)
!7676 = !DILocation(line: 4217, column: 3, scope: !7631)
!7677 = !DILocation(line: 4219, column: 3, scope: !7631)
!7678 = !DILocation(line: 4220, column: 3, scope: !7631)
!7679 = !DILocation(line: 4222, column: 7, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 4222, column: 7)
!7681 = !DILocation(line: 4222, column: 27, scope: !7680)
!7682 = !DILocation(line: 4222, column: 7, scope: !7631)
!7683 = !DILocation(line: 4224, column: 7, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 4223, column: 5)
!7685 = !DILocation(line: 4228, column: 7, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 4228, column: 7)
!7687 = !DILocation(line: 0, scope: !7686)
!7688 = !DILocation(line: 4226, column: 5, scope: !7684)
!7689 = !DILocation(line: 4228, column: 26, scope: !7686)
!7690 = !DILocation(line: 4228, column: 7, scope: !7631)
!7691 = !DILocation(line: 4230, column: 7, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 4229, column: 5)
!7693 = !DILocation(line: 4234, column: 3, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 4234, column: 3)
!7695 = !DILocation(line: 0, scope: !7694)
!7696 = !DILocation(line: 4232, column: 5, scope: !7692)
!7697 = !DILocation(line: 0, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 4234, column: 3)
!7699 = !DILocation(line: 4234, column: 3, scope: !7698)
!7700 = !DILocation(line: 4235, column: 9, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 4235, column: 9)
!7702 = !DILocation(line: 4235, column: 12, scope: !7701)
!7703 = !DILocation(line: 4235, column: 18, scope: !7701)
!7704 = !DILocation(line: 4235, column: 9, scope: !7698)
!7705 = !DILocation(line: 4237, column: 43, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 4236, column: 7)
!7707 = !DILocation(line: 4237, column: 48, scope: !7706)
!7708 = !DILocation(line: 4237, column: 2, scope: !7706)
!7709 = !DILocation(line: 4239, column: 7, scope: !7706)
!7710 = distinct !{!7710, !7693, !7711}
!7711 = !DILocation(line: 4239, column: 7, scope: !7694)
!7712 = !DILocation(line: 4241, column: 3, scope: !7642)
!7713 = !DILocation(line: 0, scope: !7646)
!7714 = !DILocation(line: 0, scope: !7640)
!7715 = !DILocation(line: 0, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 4333, column: 4)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 4332, column: 2)
!7718 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 4331, column: 11)
!7719 = !DILocation(line: 0, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4346, column: 4)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4343, column: 2)
!7722 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 4342, column: 11)
!7723 = !DILocation(line: 0, scope: !7657)
!7724 = !DILocation(line: 0, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 4463, column: 6)
!7726 = !DILocation(line: 0, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 4495, column: 6)
!7728 = !DILocation(line: 0, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 4389, column: 8)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 4386, column: 6)
!7731 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 4380, column: 8)
!7732 = !DILocation(line: 0, scope: !7653)
!7733 = !DILocation(line: 4241, column: 3, scope: !7641)
!7734 = !DILocation(line: 4231, column: 11, scope: !7692)
!7735 = !DILocation(line: 0, scope: !7642)
!7736 = !DILocation(line: 4248, column: 18, scope: !7646)
!7737 = !DILocation(line: 0, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 4260, column: 6)
!7739 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 4259, column: 8)
!7740 = !DILocation(line: 4248, column: 12, scope: !7646)
!7741 = !DILocation(line: 4248, column: 38, scope: !7645)
!7742 = !DILocation(line: 4248, column: 37, scope: !7645)
!7743 = !DILocation(line: 4248, column: 7, scope: !7646)
!7744 = !DILocation(line: 0, scope: !7644)
!7745 = !DILocation(line: 4253, column: 11, scope: !7644)
!7746 = !DILocation(line: 4255, column: 8, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 4255, column: 8)
!7748 = !DILocation(line: 4255, column: 27, scope: !7747)
!7749 = !DILocation(line: 4255, column: 8, scope: !7644)
!7750 = !DILocation(line: 4258, column: 12, scope: !7644)
!7751 = !DILocation(line: 4259, column: 8, scope: !7739)
!7752 = !DILocation(line: 4259, column: 18, scope: !7739)
!7753 = !DILocation(line: 4259, column: 21, scope: !7739)
!7754 = !DILocation(line: 4259, column: 8, scope: !7644)
!7755 = !DILocation(line: 4261, column: 8, scope: !7738)
!7756 = !DILocation(line: 4262, column: 28, scope: !7738)
!7757 = !DILocation(line: 4262, column: 8, scope: !7738)
!7758 = !DILocation(line: 4263, column: 17, scope: !7738)
!7759 = !DILocation(line: 4264, column: 14, scope: !7738)
!7760 = !DILocation(line: 4263, column: 8, scope: !7738)
!7761 = !DILocation(line: 4266, column: 6, scope: !7738)
!7762 = !DILocation(line: 4268, column: 18, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 4268, column: 8)
!7764 = !DILocation(line: 4268, column: 21, scope: !7763)
!7765 = !DILocation(line: 4268, column: 47, scope: !7763)
!7766 = !DILocation(line: 4268, column: 8, scope: !7644)
!7767 = !DILocation(line: 4270, column: 8, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 4269, column: 6)
!7769 = !DILocation(line: 4271, column: 28, scope: !7768)
!7770 = !DILocation(line: 4271, column: 8, scope: !7768)
!7771 = !DILocation(line: 4272, column: 17, scope: !7768)
!7772 = !DILocation(line: 4273, column: 14, scope: !7768)
!7773 = !DILocation(line: 4272, column: 8, scope: !7768)
!7774 = !DILocation(line: 4275, column: 6, scope: !7768)
!7775 = !DILocation(line: 4277, column: 8, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 4277, column: 8)
!7777 = !DILocation(line: 4277, column: 31, scope: !7776)
!7778 = !DILocation(line: 4277, column: 8, scope: !7644)
!7779 = !DILocation(line: 4279, column: 8, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 4278, column: 6)
!7781 = !DILocation(line: 4280, column: 28, scope: !7780)
!7782 = !DILocation(line: 4280, column: 8, scope: !7780)
!7783 = !DILocation(line: 4281, column: 17, scope: !7780)
!7784 = !DILocation(line: 4282, column: 14, scope: !7780)
!7785 = !DILocation(line: 4281, column: 8, scope: !7780)
!7786 = !DILocation(line: 4284, column: 6, scope: !7780)
!7787 = !DILocation(line: 4286, column: 8, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 4286, column: 8)
!7789 = !DILocation(line: 4286, column: 41, scope: !7788)
!7790 = !DILocation(line: 4286, column: 38, scope: !7788)
!7791 = !DILocation(line: 4286, column: 8, scope: !7644)
!7792 = !DILocation(line: 4288, column: 8, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 4287, column: 6)
!7794 = !DILocation(line: 4289, column: 28, scope: !7793)
!7795 = !DILocation(line: 4289, column: 8, scope: !7793)
!7796 = !DILocation(line: 4290, column: 17, scope: !7793)
!7797 = !DILocation(line: 4291, column: 14, scope: !7793)
!7798 = !DILocation(line: 4290, column: 8, scope: !7793)
!7799 = !DILocation(line: 4293, column: 6, scope: !7793)
!7800 = !DILocation(line: 4248, column: 55, scope: !7645)
!7801 = !DILocation(line: 4248, column: 7, scope: !7645)
!7802 = distinct !{!7802, !7743, !7803}
!7803 = !DILocation(line: 4294, column: 2, scope: !7646)
!7804 = !DILocation(line: 4297, column: 7, scope: !7640)
!7805 = !DILocation(line: 4297, column: 15, scope: !7650)
!7806 = !DILocation(line: 4297, column: 14, scope: !7650)
!7807 = !DILocation(line: 4297, column: 7, scope: !7651)
!7808 = !DILocation(line: 4299, column: 18, scope: !7649)
!7809 = !DILocation(line: 0, scope: !7649)
!7810 = !DILocation(line: 4301, column: 8, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 4301, column: 8)
!7812 = !DILocation(line: 4301, column: 8, scope: !7649)
!7813 = !DILocation(line: 4304, column: 12, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 4302, column: 6)
!7815 = !DILocation(line: 4303, column: 8, scope: !7814)
!7816 = !DILocation(line: 4306, column: 6, scope: !7814)
!7817 = !DILocation(line: 4308, column: 8, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 4308, column: 8)
!7819 = !DILocation(line: 4308, column: 8, scope: !7649)
!7820 = !DILocation(line: 4311, column: 8, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 4311, column: 8)
!7822 = !DILocation(line: 4311, column: 27, scope: !7821)
!7823 = !DILocation(line: 4311, column: 8, scope: !7649)
!7824 = !DILocation(line: 4313, column: 8, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 4312, column: 6)
!7826 = !DILocation(line: 4314, column: 28, scope: !7825)
!7827 = !DILocation(line: 4314, column: 36, scope: !7825)
!7828 = !DILocation(line: 4314, column: 8, scope: !7825)
!7829 = !DILocation(line: 4315, column: 17, scope: !7825)
!7830 = !DILocation(line: 4315, column: 65, scope: !7825)
!7831 = !DILocation(line: 4315, column: 8, scope: !7825)
!7832 = !DILocation(line: 4317, column: 6, scope: !7825)
!7833 = !DILocation(line: 4297, column: 32, scope: !7650)
!7834 = !DILocation(line: 4297, column: 7, scope: !7650)
!7835 = distinct !{!7835, !7807, !7836}
!7836 = !DILocation(line: 4318, column: 2, scope: !7651)
!7837 = !DILocation(line: 4320, column: 13, scope: !7640)
!7838 = !DILocation(line: 4321, column: 11, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 4321, column: 11)
!7840 = !DILocation(line: 4321, column: 11, scope: !7640)
!7841 = !DILocation(line: 4324, column: 14, scope: !7640)
!7842 = !DILocation(line: 4326, column: 11, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 4326, column: 11)
!7844 = !DILocation(line: 4326, column: 30, scope: !7843)
!7845 = !DILocation(line: 4326, column: 11, scope: !7640)
!7846 = !DILocation(line: 4329, column: 14, scope: !7640)
!7847 = !DILocation(line: 4329, column: 11, scope: !7640)
!7848 = !DILocation(line: 4331, column: 11, scope: !7718)
!7849 = !DILocation(line: 4331, column: 11, scope: !7640)
!7850 = !DILocation(line: 4333, column: 4, scope: !7716)
!7851 = !DILocation(line: 4333, column: 4, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 4333, column: 4)
!7853 = !DILocation(line: 4334, column: 10, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 4334, column: 10)
!7855 = !DILocation(line: 4334, column: 13, scope: !7854)
!7856 = !DILocation(line: 4334, column: 19, scope: !7854)
!7857 = !DILocation(line: 4334, column: 10, scope: !7852)
!7858 = !DILocation(line: 4337, column: 14, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 4335, column: 8)
!7860 = !DILocation(line: 4336, column: 3, scope: !7859)
!7861 = !DILocation(line: 4339, column: 8, scope: !7859)
!7862 = distinct !{!7862, !7850, !7863}
!7863 = !DILocation(line: 4339, column: 8, scope: !7716)
!7864 = !DILocation(line: 4342, column: 11, scope: !7722)
!7865 = !DILocation(line: 4342, column: 30, scope: !7722)
!7866 = !DILocation(line: 4342, column: 11, scope: !7640)
!7867 = !DILocation(line: 4346, column: 4, scope: !7720)
!7868 = !DILocation(line: 4346, column: 4, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 4346, column: 4)
!7870 = !DILocation(line: 4347, column: 10, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7869, file: !3, line: 4347, column: 10)
!7872 = !DILocation(line: 4347, column: 13, scope: !7871)
!7873 = !DILocation(line: 4347, column: 19, scope: !7871)
!7874 = !DILocation(line: 4347, column: 10, scope: !7869)
!7875 = !DILocation(line: 4350, column: 14, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 4348, column: 8)
!7877 = !DILocation(line: 4349, column: 3, scope: !7876)
!7878 = !DILocation(line: 4352, column: 8, scope: !7876)
!7879 = distinct !{!7879, !7867, !7880}
!7880 = !DILocation(line: 4352, column: 8, scope: !7720)
!7881 = !DILocation(line: 4355, column: 15, scope: !7640)
!7882 = !DILocation(line: 4355, column: 7, scope: !7640)
!7883 = !DILocation(line: 4359, column: 6, scope: !7653)
!7884 = !DILocation(line: 4360, column: 6, scope: !7653)
!7885 = !DILocation(line: 4362, column: 6, scope: !7653)
!7886 = !DILocation(line: 4364, column: 11, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 4364, column: 10)
!7888 = !DILocation(line: 4365, column: 7, scope: !7887)
!7889 = !DILocation(line: 4365, column: 3, scope: !7887)
!7890 = !DILocation(line: 4366, column: 19, scope: !7887)
!7891 = !DILocation(line: 4366, column: 25, scope: !7887)
!7892 = !DILocation(line: 4367, column: 3, scope: !7887)
!7893 = !DILocation(line: 4367, column: 20, scope: !7887)
!7894 = !DILocation(line: 4367, column: 26, scope: !7887)
!7895 = !DILocation(line: 4368, column: 3, scope: !7887)
!7896 = !DILocation(line: 4368, column: 24, scope: !7887)
!7897 = !DILocation(line: 4369, column: 3, scope: !7887)
!7898 = !DILocation(line: 4369, column: 25, scope: !7887)
!7899 = !DILocation(line: 4370, column: 3, scope: !7887)
!7900 = !DILocation(line: 4370, column: 6, scope: !7887)
!7901 = !DILocation(line: 4370, column: 29, scope: !7887)
!7902 = !DILocation(line: 4364, column: 10, scope: !7653)
!7903 = !DILocation(line: 4373, column: 14, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 4371, column: 8)
!7905 = !DILocation(line: 4372, column: 3, scope: !7904)
!7906 = !DILocation(line: 4375, column: 8, scope: !7904)
!7907 = !DILocation(line: 4376, column: 4, scope: !7654)
!7908 = !DILocation(line: 4377, column: 4, scope: !7654)
!7909 = !DILocation(line: 4380, column: 8, scope: !7731)
!7910 = !DILocation(line: 4380, column: 8, scope: !7654)
!7911 = !DILocation(line: 4382, column: 52, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 4381, column: 6)
!7913 = !DILocation(line: 4382, column: 8, scope: !7912)
!7914 = !DILocation(line: 4384, column: 6, scope: !7912)
!7915 = !DILocation(line: 4389, column: 8, scope: !7729)
!7916 = !DILocation(line: 4389, column: 8, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 4389, column: 8)
!7918 = !DILocation(line: 4390, column: 8, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 4390, column: 7)
!7920 = !DILocation(line: 4390, column: 11, scope: !7919)
!7921 = !DILocation(line: 4390, column: 17, scope: !7919)
!7922 = !DILocation(line: 4392, column: 7, scope: !7919)
!7923 = !DILocation(line: 4392, column: 21, scope: !7919)
!7924 = !DILocation(line: 4390, column: 7, scope: !7917)
!7925 = !DILocation(line: 4395, column: 11, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 4393, column: 5)
!7927 = !DILocation(line: 4394, column: 7, scope: !7926)
!7928 = !DILocation(line: 4397, column: 5, scope: !7926)
!7929 = distinct !{!7929, !7915, !7930}
!7930 = !DILocation(line: 4397, column: 5, scope: !7729)
!7931 = !DILocation(line: 4402, column: 9, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 4402, column: 8)
!7933 = !DILocation(line: 4403, column: 8, scope: !7932)
!7934 = !DILocation(line: 4403, column: 12, scope: !7932)
!7935 = !DILocation(line: 4403, column: 35, scope: !7932)
!7936 = !DILocation(line: 4404, column: 5, scope: !7932)
!7937 = !DILocation(line: 4402, column: 8, scope: !7654)
!7938 = !DILocation(line: 4407, column: 64, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 4406, column: 6)
!7940 = !DILocation(line: 4407, column: 8, scope: !7939)
!7941 = !DILocation(line: 4409, column: 6, scope: !7939)
!7942 = !DILocation(line: 4410, column: 8, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 4410, column: 8)
!7944 = !DILocation(line: 4410, column: 28, scope: !7943)
!7945 = !DILocation(line: 4410, column: 25, scope: !7943)
!7946 = !DILocation(line: 4410, column: 8, scope: !7654)
!7947 = !DILocation(line: 4413, column: 12, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 4411, column: 6)
!7949 = !DILocation(line: 4412, column: 8, scope: !7948)
!7950 = !DILocation(line: 4415, column: 6, scope: !7948)
!7951 = !DILocation(line: 4421, column: 6, scope: !7657)
!7952 = !DILocation(line: 4424, column: 10, scope: !7657)
!7953 = !DILocation(line: 4427, column: 11, scope: !7664)
!7954 = !DILocation(line: 0, scope: !7664)
!7955 = !DILocation(line: 4427, column: 20, scope: !7663)
!7956 = !DILocation(line: 4427, column: 6, scope: !7664)
!7957 = !DILocation(line: 4429, column: 14, scope: !7662)
!7958 = !DILocation(line: 0, scope: !7662)
!7959 = !DILocation(line: 4430, column: 26, scope: !7662)
!7960 = !DILocation(line: 4431, column: 3, scope: !7662)
!7961 = !DILocation(line: 4432, column: 17, scope: !7662)
!7962 = !DILocation(line: 4427, column: 25, scope: !7663)
!7963 = !DILocation(line: 4427, column: 6, scope: !7663)
!7964 = distinct !{!7964, !7956, !7965}
!7965 = !DILocation(line: 4433, column: 8, scope: !7664)
!7966 = !DILocation(line: 4436, column: 13, scope: !7657)
!7967 = !DILocation(line: 4437, column: 11, scope: !7669)
!7968 = !DILocation(line: 0, scope: !7669)
!7969 = !DILocation(line: 4437, column: 20, scope: !7668)
!7970 = !DILocation(line: 4437, column: 6, scope: !7669)
!7971 = !DILocation(line: 4439, column: 39, scope: !7667)
!7972 = !DILocation(line: 4439, column: 12, scope: !7667)
!7973 = !DILocation(line: 0, scope: !7667)
!7974 = !DILocation(line: 4440, column: 8, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 4440, column: 7)
!7976 = !DILocation(line: 4440, column: 7, scope: !7667)
!7977 = !DILocation(line: 4442, column: 7, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 4441, column: 5)
!7979 = !DILocation(line: 4445, column: 7, scope: !7978)
!7980 = !DILocation(line: 4447, column: 7, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 4447, column: 7)
!7982 = !DILocation(line: 4448, column: 7, scope: !7981)
!7983 = !DILocation(line: 4448, column: 11, scope: !7981)
!7984 = !DILocation(line: 4447, column: 7, scope: !7667)
!7985 = !DILocation(line: 4450, column: 7, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 4449, column: 5)
!7987 = !DILocation(line: 4451, column: 27, scope: !7986)
!7988 = !DILocation(line: 4451, column: 7, scope: !7986)
!7989 = !DILocation(line: 4452, column: 16, scope: !7986)
!7990 = !DILocation(line: 4452, column: 7, scope: !7986)
!7991 = !DILocation(line: 4453, column: 27, scope: !7986)
!7992 = !DILocation(line: 4453, column: 7, scope: !7986)
!7993 = !DILocation(line: 4454, column: 16, scope: !7986)
!7994 = !DILocation(line: 4454, column: 7, scope: !7986)
!7995 = !DILocation(line: 4456, column: 5, scope: !7986)
!7996 = !DILocation(line: 4437, column: 25, scope: !7668)
!7997 = !DILocation(line: 4437, column: 6, scope: !7668)
!7998 = distinct !{!7998, !7970, !7999}
!7999 = !DILocation(line: 4458, column: 8, scope: !7669)
!8000 = !DILocation(line: 4463, column: 6, scope: !7725)
!8001 = !DILocation(line: 4463, column: 6, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7725, file: !3, line: 4463, column: 6)
!8003 = !DILocation(line: 4483, column: 6, scope: !7673)
!8004 = !DILocation(line: 4465, column: 8, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 4465, column: 7)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 4464, column: 8)
!8007 = !DILocation(line: 4465, column: 11, scope: !8005)
!8008 = !DILocation(line: 4465, column: 17, scope: !8005)
!8009 = !DILocation(line: 4465, column: 7, scope: !8006)
!8010 = !DILocation(line: 4468, column: 11, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 4466, column: 5)
!8012 = !DILocation(line: 4468, column: 27, scope: !8011)
!8013 = !DILocation(line: 4467, column: 7, scope: !8011)
!8014 = !DILocation(line: 4472, column: 3, scope: !8006)
!8015 = !DILocation(line: 0, scope: !8006)
!8016 = !DILocation(line: 4472, column: 6, scope: !8006)
!8017 = !DILocation(line: 4470, column: 5, scope: !8011)
!8018 = !DILocation(line: 4472, column: 12, scope: !8006)
!8019 = !DILocation(line: 4472, column: 16, scope: !8006)
!8020 = !DILocation(line: 4473, column: 11, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 4473, column: 7)
!8022 = !DILocation(line: 4473, column: 17, scope: !8021)
!8023 = !DILocation(line: 4473, column: 7, scope: !8006)
!8024 = !DILocation(line: 4477, column: 11, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 4475, column: 5)
!8026 = !DILocation(line: 4476, column: 7, scope: !8025)
!8027 = !DILocation(line: 4479, column: 5, scope: !8025)
!8028 = distinct !{!8028, !8000, !8029}
!8029 = !DILocation(line: 4480, column: 8, scope: !7725)
!8030 = !DILocation(line: 0, scope: !7673)
!8031 = !DILocation(line: 4483, column: 20, scope: !7672)
!8032 = !DILocation(line: 4485, column: 14, scope: !7671)
!8033 = !DILocation(line: 0, scope: !7671)
!8034 = !DILocation(line: 4486, column: 26, scope: !7671)
!8035 = !DILocation(line: 4488, column: 17, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 4488, column: 7)
!8037 = !DILocation(line: 4488, column: 21, scope: !8036)
!8038 = !DILocation(line: 4488, column: 7, scope: !7671)
!8039 = !DILocation(line: 4490, column: 41, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 4489, column: 5)
!8041 = !DILocation(line: 4490, column: 58, scope: !8040)
!8042 = !DILocation(line: 4490, column: 7, scope: !8040)
!8043 = !DILocation(line: 4492, column: 5, scope: !8040)
!8044 = !DILocation(line: 4483, column: 25, scope: !7672)
!8045 = !DILocation(line: 4483, column: 6, scope: !7672)
!8046 = distinct !{!8046, !8003, !8047}
!8047 = !DILocation(line: 4493, column: 8, scope: !7673)
!8048 = !DILocation(line: 4495, column: 6, scope: !7727)
!8049 = !DILocation(line: 4495, column: 6, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 4495, column: 6)
!8051 = !DILocation(line: 4496, column: 8, scope: !8050)
!8052 = !DILocation(line: 4496, column: 11, scope: !8050)
!8053 = !DILocation(line: 4496, column: 17, scope: !8050)
!8054 = !DILocation(line: 4496, column: 21, scope: !8050)
!8055 = distinct !{!8055, !8048, !8056}
!8056 = !DILocation(line: 4496, column: 31, scope: !7727)
!8057 = !DILocation(line: 4497, column: 4, scope: !7654)
!8058 = !DILocation(line: 4498, column: 4, scope: !7654)
!8059 = !DILocation(line: 4501, column: 11, scope: !7654)
!8060 = !DILocation(line: 4501, column: 8, scope: !7654)
!8061 = !DILocation(line: 4502, column: 4, scope: !7654)
!8062 = !DILocation(line: 0, scope: !7641)
!8063 = distinct !{!8063, !7712, !8064}
!8064 = !DILocation(line: 4507, column: 5, scope: !7642)
!8065 = !DILocation(line: 4509, column: 7, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 4509, column: 7)
!8067 = !DILocation(line: 4509, column: 39, scope: !8066)
!8068 = !DILocation(line: 4509, column: 7, scope: !7631)
!8069 = !DILocation(line: 4510, column: 5, scope: !8066)
!8070 = !DILocation(line: 4513, column: 1, scope: !7631)
!8071 = !DILocation(line: 4512, column: 3, scope: !7631)
!8072 = distinct !DISubprogram(name: "create_bb", scope: !3, file: !3, line: 427, type: !2358, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8073)
!8073 = !{!8074, !8075, !8076, !8077, !8078}
!8074 = !DILocalVariable(name: "h", arg: 1, scope: !8072, file: !3, line: 427, type: !697)
!8075 = !DILocalVariable(name: "e", arg: 2, scope: !8072, file: !3, line: 427, type: !697)
!8076 = !DILocalVariable(name: "after", arg: 3, scope: !8072, file: !3, line: 427, type: !1670)
!8077 = !DILocalVariable(name: "bb", scope: !8072, file: !3, line: 429, type: !1670)
!8078 = !DILocalVariable(name: "new_size", scope: !8079, file: !3, line: 449, type: !1173)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 448, column: 5)
!8080 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 447, column: 7)
!8081 = !DILocation(line: 0, scope: !8072)
!8082 = !DILocation(line: 431, column: 3, scope: !8072)
!8083 = !DILocation(line: 436, column: 8, scope: !8072)
!8084 = !DILocation(line: 438, column: 15, scope: !8072)
!8085 = !DILocation(line: 438, column: 7, scope: !8072)
!8086 = !DILocation(line: 438, column: 13, scope: !8072)
!8087 = !DILocation(line: 439, column: 7, scope: !8072)
!8088 = !DILocation(line: 439, column: 13, scope: !8072)
!8089 = !DILocation(line: 440, column: 19, scope: !8072)
!8090 = !DILocation(line: 440, column: 10, scope: !8072)
!8091 = !DILocation(line: 440, column: 17, scope: !8072)
!8092 = !DILocation(line: 441, column: 19, scope: !8072)
!8093 = !DILocation(line: 441, column: 23, scope: !8072)
!8094 = !DILocation(line: 441, column: 40, scope: !8072)
!8095 = !DILocation(line: 441, column: 3, scope: !8072)
!8096 = !DILocation(line: 444, column: 3, scope: !8072)
!8097 = !DILocation(line: 447, column: 16, scope: !8080)
!8098 = !DILocation(line: 447, column: 7, scope: !8080)
!8099 = !DILocation(line: 447, column: 36, scope: !8080)
!8100 = !DILocation(line: 447, column: 33, scope: !8080)
!8101 = !DILocation(line: 447, column: 7, scope: !8072)
!8102 = !DILocation(line: 449, column: 25, scope: !8079)
!8103 = !DILocation(line: 449, column: 62, scope: !8079)
!8104 = !DILocation(line: 449, column: 67, scope: !8079)
!8105 = !DILocation(line: 449, column: 42, scope: !8079)
!8106 = !DILocation(line: 450, column: 7, scope: !8079)
!8107 = !DILocation(line: 451, column: 5, scope: !8079)
!8108 = !DILocation(line: 454, column: 3, scope: !8072)
!8109 = !DILocation(line: 456, column: 3, scope: !8072)
!8110 = !DILocation(line: 456, column: 17, scope: !8072)
!8111 = !DILocation(line: 457, column: 3, scope: !8072)
!8112 = !DILocation(line: 457, column: 19, scope: !8072)
!8113 = !DILocation(line: 459, column: 3, scope: !8072)
!8114 = distinct !DISubprogram(name: "gimple_redirect_edge_and_branch", scope: !3, file: !3, line: 4635, type: !2362, scopeLine: 4636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8115)
!8115 = !{!8116, !8117, !8118, !8119, !8120, !8121, !8122, !8125, !8126, !8129, !8130, !8131, !8134, !8136, !8137, !8141, !8143, !8144, !8145}
!8116 = !DILocalVariable(name: "e", arg: 1, scope: !8114, file: !3, line: 4635, type: !1008)
!8117 = !DILocalVariable(name: "dest", arg: 2, scope: !8114, file: !3, line: 4635, type: !1670)
!8118 = !DILocalVariable(name: "bb", scope: !8114, file: !3, line: 4637, type: !1670)
!8119 = !DILocalVariable(name: "gsi", scope: !8114, file: !3, line: 4638, type: !2222)
!8120 = !DILocalVariable(name: "ret", scope: !8114, file: !3, line: 4639, type: !1008)
!8121 = !DILocalVariable(name: "stmt", scope: !8114, file: !3, line: 4640, type: !1028)
!8122 = !DILocalVariable(name: "label", scope: !8123, file: !3, line: 4674, type: !704)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 4673, column: 7)
!8124 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 4662, column: 5)
!8125 = !DILocalVariable(name: "cases", scope: !8123, file: !3, line: 4675, type: !704)
!8126 = !DILocalVariable(name: "e2", scope: !8127, file: !3, line: 4681, type: !1008)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 4680, column: 4)
!8128 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 4679, column: 6)
!8129 = !DILocalVariable(name: "last", scope: !8127, file: !3, line: 4682, type: !704)
!8130 = !DILocalVariable(name: "first", scope: !8127, file: !3, line: 4682, type: !704)
!8131 = !DILocalVariable(name: "cases2", scope: !8132, file: !3, line: 4696, type: !704)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4695, column: 8)
!8133 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 4694, column: 10)
!8134 = !DILocalVariable(name: "i", scope: !8135, file: !3, line: 4704, type: !1173)
!8135 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 4703, column: 4)
!8136 = !DILocalVariable(name: "n", scope: !8135, file: !3, line: 4704, type: !1173)
!8137 = !DILocalVariable(name: "elt", scope: !8138, file: !3, line: 4708, type: !704)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 4707, column: 8)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 4706, column: 6)
!8140 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 4706, column: 6)
!8141 = !DILocalVariable(name: "i", scope: !8142, file: !3, line: 4718, type: !693)
!8142 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 4717, column: 7)
!8143 = !DILocalVariable(name: "n", scope: !8142, file: !3, line: 4718, type: !693)
!8144 = !DILocalVariable(name: "label", scope: !8142, file: !3, line: 4719, type: !704)
!8145 = !DILocalVariable(name: "cons", scope: !8146, file: !3, line: 4723, type: !704)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 4722, column: 4)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 4721, column: 2)
!8148 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 4721, column: 2)
!8149 = !DILocation(line: 0, scope: !8114)
!8150 = !DILocation(line: 4637, column: 23, scope: !8114)
!8151 = !DILocation(line: 4638, column: 3, scope: !8114)
!8152 = !DILocation(line: 4642, column: 10, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 4642, column: 7)
!8154 = !DILocation(line: 4642, column: 16, scope: !8153)
!8155 = !DILocation(line: 4642, column: 7, scope: !8114)
!8156 = !DILocation(line: 4645, column: 10, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 4645, column: 7)
!8158 = !DILocation(line: 4645, column: 15, scope: !8157)
!8159 = !DILocation(line: 4645, column: 7, scope: !8114)
!8160 = !DILocation(line: 4648, column: 16, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 4648, column: 7)
!8162 = !DILocation(line: 4648, column: 7, scope: !8114)
!8163 = !DILocation(line: 4649, column: 12, scope: !8161)
!8164 = !DILocation(line: 4649, column: 5, scope: !8161)
!8165 = !DILocation(line: 4651, column: 17, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 4651, column: 7)
!8167 = !DILocation(line: 4651, column: 14, scope: !8166)
!8168 = !DILocation(line: 4651, column: 7, scope: !8114)
!8169 = !DILocation(line: 4653, column: 13, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 4652, column: 5)
!8171 = !DILocation(line: 4654, column: 11, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 4654, column: 11)
!8173 = !DILocation(line: 4654, column: 11, scope: !8170)
!8174 = !DILocation(line: 4658, column: 9, scope: !8114)
!8175 = !DILocation(line: 4659, column: 10, scope: !8114)
!8176 = !DILocation(line: 4659, column: 35, scope: !8114)
!8177 = !DILocation(line: 4661, column: 11, scope: !8114)
!8178 = !DILocation(line: 4661, column: 18, scope: !8114)
!8179 = !DILocation(line: 4661, column: 3, scope: !8114)
!8180 = !DILocation(line: 4670, column: 7, scope: !8124)
!8181 = !DILocation(line: 4674, column: 15, scope: !8123)
!8182 = !DILocation(line: 0, scope: !8123)
!8183 = !DILocation(line: 4675, column: 22, scope: !8123)
!8184 = !DILocation(line: 4679, column: 6, scope: !8128)
!8185 = !DILocation(line: 4679, column: 6, scope: !8123)
!8186 = !DILocation(line: 4681, column: 30, scope: !8127)
!8187 = !DILocation(line: 4681, column: 16, scope: !8127)
!8188 = !DILocation(line: 0, scope: !8127)
!8189 = !DILocation(line: 4685, column: 6, scope: !8127)
!8190 = !DILocation(line: 4688, column: 3, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 4686, column: 8)
!8192 = !DILocation(line: 4688, column: 22, scope: !8191)
!8193 = !DILocation(line: 4689, column: 11, scope: !8191)
!8194 = distinct !{!8194, !8189, !8195}
!8195 = !DILocation(line: 4690, column: 8, scope: !8127)
!8196 = !DILocation(line: 4694, column: 10, scope: !8133)
!8197 = !DILocation(line: 4694, column: 10, scope: !8127)
!8198 = !DILocation(line: 4696, column: 17, scope: !8132)
!8199 = !DILocation(line: 0, scope: !8132)
!8200 = !DILocation(line: 4698, column: 23, scope: !8132)
!8201 = !DILocation(line: 4698, column: 3, scope: !8132)
!8202 = !DILocation(line: 4698, column: 21, scope: !8132)
!8203 = !DILocation(line: 4699, column: 23, scope: !8132)
!8204 = !DILocation(line: 4700, column: 8, scope: !8132)
!8205 = !DILocation(line: 4704, column: 20, scope: !8135)
!8206 = !DILocation(line: 0, scope: !8135)
!8207 = !DILocation(line: 4706, column: 11, scope: !8140)
!8208 = !DILocation(line: 0, scope: !8140)
!8209 = !DILocation(line: 4706, column: 20, scope: !8139)
!8210 = !DILocation(line: 4706, column: 6, scope: !8140)
!8211 = !DILocation(line: 4708, column: 41, scope: !8138)
!8212 = !DILocation(line: 4708, column: 14, scope: !8138)
!8213 = !DILocation(line: 0, scope: !8138)
!8214 = !DILocation(line: 4709, column: 7, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 4709, column: 7)
!8216 = !DILocation(line: 4709, column: 47, scope: !8215)
!8217 = !DILocation(line: 4709, column: 41, scope: !8215)
!8218 = !DILocation(line: 4709, column: 7, scope: !8138)
!8219 = !DILocation(line: 4710, column: 22, scope: !8215)
!8220 = !DILocation(line: 4710, column: 5, scope: !8215)
!8221 = !DILocation(line: 4706, column: 26, scope: !8139)
!8222 = !DILocation(line: 4706, column: 6, scope: !8139)
!8223 = distinct !{!8223, !8210, !8224}
!8224 = !DILocation(line: 4711, column: 8, scope: !8140)
!8225 = !DILocation(line: 4718, column: 13, scope: !8142)
!8226 = !DILocation(line: 0, scope: !8142)
!8227 = !DILocation(line: 4721, column: 7, scope: !8148)
!8228 = !DILocation(line: 0, scope: !8148)
!8229 = !DILocation(line: 4719, column: 7, scope: !8142)
!8230 = !DILocation(line: 4721, column: 16, scope: !8147)
!8231 = !DILocation(line: 4721, column: 2, scope: !8148)
!8232 = !DILocation(line: 4723, column: 18, scope: !8146)
!8233 = !DILocation(line: 0, scope: !8146)
!8234 = !DILocation(line: 4724, column: 10, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 4724, column: 10)
!8236 = !DILocation(line: 4724, column: 51, scope: !8235)
!8237 = !DILocation(line: 4724, column: 45, scope: !8235)
!8238 = !DILocation(line: 4724, column: 10, scope: !8146)
!8239 = !DILocation(line: 4726, column: 8, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 4726, column: 7)
!8241 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 4725, column: 8)
!8242 = !DILocation(line: 4726, column: 7, scope: !8241)
!8243 = !DILocation(line: 4727, column: 13, scope: !8240)
!8244 = !DILocation(line: 4727, column: 5, scope: !8240)
!8245 = !DILocation(line: 4728, column: 21, scope: !8241)
!8246 = !DILocation(line: 4729, column: 8, scope: !8241)
!8247 = !DILocation(line: 4721, column: 21, scope: !8147)
!8248 = !DILocation(line: 4721, column: 2, scope: !8147)
!8249 = distinct !{!8249, !8231, !8250}
!8250 = !DILocation(line: 4730, column: 4, scope: !8148)
!8251 = !DILocation(line: 4735, column: 2, scope: !8142)
!8252 = !DILocation(line: 4740, column: 7, scope: !8124)
!8253 = !DILocation(line: 4741, column: 16, scope: !8124)
!8254 = !DILocation(line: 4742, column: 7, scope: !8124)
!8255 = !DILocation(line: 4752, column: 16, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 4752, column: 11)
!8257 = !DILocation(line: 4752, column: 22, scope: !8256)
!8258 = !DILocation(line: 4752, column: 11, scope: !8124)
!8259 = !DILocation(line: 4753, column: 2, scope: !8256)
!8260 = !DILocation(line: 4759, column: 7, scope: !8124)
!8261 = !DILocation(line: 4766, column: 7, scope: !8114)
!8262 = !DILocation(line: 4768, column: 3, scope: !8114)
!8263 = !DILocation(line: 4769, column: 1, scope: !8114)
!8264 = distinct !DISubprogram(name: "gimple_redirect_edge_and_branch_force", scope: !3, file: !3, line: 4786, type: !2366, scopeLine: 4787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8265)
!8265 = !{!8266, !8267}
!8266 = !DILocalVariable(name: "e", arg: 1, scope: !8264, file: !3, line: 4786, type: !1008)
!8267 = !DILocalVariable(name: "dest", arg: 2, scope: !8264, file: !3, line: 4786, type: !1670)
!8268 = !DILocation(line: 0, scope: !8264)
!8269 = !DILocation(line: 4788, column: 7, scope: !8264)
!8270 = !DILocation(line: 4789, column: 3, scope: !8264)
!8271 = !DILocation(line: 4791, column: 3, scope: !8264)
!8272 = distinct !DISubprogram(name: "gimple_can_remove_branch_p", scope: !3, file: !3, line: 4775, type: !2370, scopeLine: 4776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8273)
!8273 = !{!8274}
!8274 = !DILocalVariable(name: "e", arg: 1, scope: !8272, file: !3, line: 4775, type: !2372)
!8275 = !DILocation(line: 0, scope: !8272)
!8276 = !DILocation(line: 4777, column: 10, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 4777, column: 7)
!8278 = !DILocation(line: 4777, column: 16, scope: !8277)
!8279 = !DILocation(line: 4781, column: 1, scope: !8272)
!8280 = distinct !DISubprogram(name: "remove_bb", scope: !3, file: !3, line: 1748, type: !2377, scopeLine: 1749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8281)
!8281 = !{!8282, !8283, !8284, !8287, !8293, !8296}
!8282 = !DILocalVariable(name: "bb", arg: 1, scope: !8280, file: !3, line: 1748, type: !1670)
!8283 = !DILocalVariable(name: "i", scope: !8280, file: !3, line: 1750, type: !2222)
!8284 = !DILocalVariable(name: "loop", scope: !8285, file: !3, line: 1764, type: !1243)
!8285 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 1763, column: 5)
!8286 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1762, column: 7)
!8287 = !DILocalVariable(name: "stmt", scope: !8288, file: !3, line: 1782, type: !1028)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 1781, column: 2)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 1780, column: 7)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 1780, column: 7)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 1775, column: 5)
!8292 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1774, column: 7)
!8293 = !DILocalVariable(name: "new_bb", scope: !8294, file: !3, line: 1787, type: !1670)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 1786, column: 6)
!8295 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 1783, column: 8)
!8296 = !DILocalVariable(name: "new_gsi", scope: !8294, file: !3, line: 1788, type: !2222)
!8297 = !DILocation(line: 0, scope: !8280)
!8298 = !DILocation(line: 1750, column: 3, scope: !8280)
!8299 = !DILocation(line: 1752, column: 7, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1752, column: 7)
!8301 = !DILocation(line: 1752, column: 7, scope: !8280)
!8302 = !DILocation(line: 1754, column: 60, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 1753, column: 5)
!8304 = !DILocation(line: 1754, column: 7, scope: !8303)
!8305 = !DILocation(line: 1755, column: 11, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 1755, column: 11)
!8307 = !DILocation(line: 1755, column: 22, scope: !8306)
!8308 = !DILocation(line: 1755, column: 11, scope: !8303)
!8309 = !DILocation(line: 1757, column: 17, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 1756, column: 2)
!8311 = !DILocation(line: 1757, column: 4, scope: !8310)
!8312 = !DILocation(line: 1758, column: 13, scope: !8310)
!8313 = !DILocation(line: 1758, column: 4, scope: !8310)
!8314 = !DILocation(line: 1759, column: 2, scope: !8310)
!8315 = !DILocation(line: 1762, column: 7, scope: !8286)
!8316 = !DILocation(line: 1762, column: 7, scope: !8280)
!8317 = !DILocation(line: 1764, column: 31, scope: !8285)
!8318 = !DILocation(line: 0, scope: !8285)
!8319 = !DILocation(line: 1768, column: 17, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 1768, column: 11)
!8321 = !DILocation(line: 1768, column: 23, scope: !8320)
!8322 = !DILocation(line: 1769, column: 4, scope: !8320)
!8323 = !DILocation(line: 1769, column: 13, scope: !8320)
!8324 = !DILocation(line: 1769, column: 20, scope: !8320)
!8325 = !DILocation(line: 1768, column: 11, scope: !8285)
!8326 = !DILocation(line: 1770, column: 2, scope: !8320)
!8327 = !DILocation(line: 1774, column: 7, scope: !8292)
!8328 = !DILocation(line: 1774, column: 19, scope: !8292)
!8329 = !DILocation(line: 1774, column: 7, scope: !8280)
!8330 = !DILocation(line: 1780, column: 16, scope: !8290)
!8331 = !DILocation(line: 0, scope: !8294)
!8332 = !DILocation(line: 0, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 1816, column: 8)
!8334 = !DILocation(line: 1780, column: 12, scope: !8290)
!8335 = !DILocation(line: 1780, column: 35, scope: !8289)
!8336 = !DILocation(line: 1780, column: 34, scope: !8289)
!8337 = !DILocation(line: 1780, column: 7, scope: !8290)
!8338 = !DILocation(line: 1782, column: 18, scope: !8288)
!8339 = !DILocation(line: 0, scope: !8288)
!8340 = !DILocation(line: 1783, column: 8, scope: !8295)
!8341 = !DILocation(line: 1783, column: 27, scope: !8295)
!8342 = !DILocation(line: 1784, column: 8, scope: !8295)
!8343 = !DILocation(line: 1784, column: 12, scope: !8295)
!8344 = !DILocation(line: 1785, column: 5, scope: !8295)
!8345 = !DILocation(line: 1785, column: 8, scope: !8295)
!8346 = !DILocation(line: 1783, column: 8, scope: !8288)
!8347 = !DILocation(line: 1788, column: 8, scope: !8294)
!8348 = !DILocation(line: 1793, column: 12, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 1793, column: 12)
!8350 = !DILocation(line: 1793, column: 12, scope: !8294)
!8351 = !DILocation(line: 1795, column: 5, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 1794, column: 3)
!8353 = !DILocation(line: 1795, column: 47, scope: !8352)
!8354 = !DILocation(line: 1796, column: 5, scope: !8352)
!8355 = !DILocation(line: 1796, column: 46, scope: !8352)
!8356 = !DILocation(line: 1797, column: 3, scope: !8352)
!8357 = !DILocation(line: 1799, column: 21, scope: !8294)
!8358 = !DILocation(line: 1800, column: 18, scope: !8294)
!8359 = !DILocation(line: 1801, column: 8, scope: !8294)
!8360 = !DILocation(line: 1802, column: 8, scope: !8294)
!8361 = !DILocation(line: 1803, column: 6, scope: !8295)
!8362 = !DILocation(line: 1803, column: 6, scope: !8294)
!8363 = !DILocation(line: 1810, column: 29, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 1810, column: 12)
!8365 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 1805, column: 6)
!8366 = !DILocation(line: 1810, column: 12, scope: !8364)
!8367 = !DILocation(line: 1810, column: 12, scope: !8365)
!8368 = !DILocation(line: 1811, column: 3, scope: !8364)
!8369 = !DILocation(line: 1813, column: 8, scope: !8365)
!8370 = !DILocation(line: 1816, column: 8, scope: !8333)
!8371 = !DILocation(line: 1816, column: 8, scope: !8288)
!8372 = !DILocation(line: 1817, column: 10, scope: !8333)
!8373 = !DILocation(line: 1817, column: 6, scope: !8333)
!8374 = !DILocation(line: 1819, column: 6, scope: !8333)
!8375 = !DILocation(line: 1780, column: 7, scope: !8289)
!8376 = distinct !{!8376, !8337, !8377}
!8377 = !DILocation(line: 1820, column: 2, scope: !8290)
!8378 = !DILocation(line: 1823, column: 3, scope: !8280)
!8379 = !DILocation(line: 1824, column: 10, scope: !8280)
!8380 = !DILocation(line: 1824, column: 17, scope: !8280)
!8381 = !DILocation(line: 1825, column: 1, scope: !8280)
!8382 = distinct !DISubprogram(name: "gimple_split_block", scope: !3, file: !3, line: 4799, type: !2381, scopeLine: 4800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8383)
!8383 = !{!8384, !8385, !8386, !8387, !8388, !8389, !8390, !8391, !8392}
!8384 = !DILocalVariable(name: "bb", arg: 1, scope: !8382, file: !3, line: 4799, type: !1670)
!8385 = !DILocalVariable(name: "stmt", arg: 2, scope: !8382, file: !3, line: 4799, type: !697)
!8386 = !DILocalVariable(name: "gsi", scope: !8382, file: !3, line: 4801, type: !2222)
!8387 = !DILocalVariable(name: "gsi_tgt", scope: !8382, file: !3, line: 4802, type: !2222)
!8388 = !DILocalVariable(name: "act", scope: !8382, file: !3, line: 4803, type: !1028)
!8389 = !DILocalVariable(name: "list", scope: !8382, file: !3, line: 4804, type: !1018)
!8390 = !DILocalVariable(name: "new_bb", scope: !8382, file: !3, line: 4805, type: !1670)
!8391 = !DILocalVariable(name: "e", scope: !8382, file: !3, line: 4806, type: !1008)
!8392 = !DILocalVariable(name: "ei", scope: !8382, file: !3, line: 4807, type: !5516)
!8393 = !DILocation(line: 0, scope: !8382)
!8394 = !DILocation(line: 4801, column: 3, scope: !8382)
!8395 = !DILocation(line: 4802, column: 3, scope: !8382)
!8396 = !DILocation(line: 4806, column: 3, scope: !8382)
!8397 = !DILocation(line: 4807, column: 3, scope: !8382)
!8398 = !DILocation(line: 4809, column: 12, scope: !8382)
!8399 = !DILocation(line: 4812, column: 23, scope: !8382)
!8400 = !DILocation(line: 4812, column: 11, scope: !8382)
!8401 = !DILocation(line: 4812, column: 17, scope: !8382)
!8402 = !DILocation(line: 4813, column: 13, scope: !8382)
!8403 = !DILocation(line: 4814, column: 3, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 4814, column: 3)
!8405 = !DILocation(line: 0, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 4814, column: 3)
!8407 = !DILocation(line: 4814, column: 3, scope: !8406)
!8408 = !DILocation(line: 4815, column: 5, scope: !8406)
!8409 = !DILocation(line: 4815, column: 8, scope: !8406)
!8410 = !DILocation(line: 4815, column: 12, scope: !8406)
!8411 = distinct !{!8411, !8403, !8412}
!8412 = !DILocation(line: 4815, column: 14, scope: !8404)
!8413 = !DILocation(line: 4817, column: 7, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 4817, column: 7)
!8415 = !DILocation(line: 4817, column: 12, scope: !8414)
!8416 = !DILocation(line: 4817, column: 28, scope: !8414)
!8417 = !DILocation(line: 4817, column: 15, scope: !8414)
!8418 = !DILocation(line: 4817, column: 43, scope: !8414)
!8419 = !DILocation(line: 4817, column: 7, scope: !8382)
!8420 = !DILocation(line: 4821, column: 14, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 4821, column: 3)
!8422 = !DILocation(line: 0, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 4827, column: 11)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 4822, column: 5)
!8425 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4821, column: 3)
!8426 = !DILocation(line: 4821, column: 8, scope: !8421)
!8427 = !DILocation(line: 4821, column: 34, scope: !8425)
!8428 = !DILocation(line: 4821, column: 33, scope: !8425)
!8429 = !DILocation(line: 4821, column: 3, scope: !8421)
!8430 = !DILocation(line: 4823, column: 13, scope: !8424)
!8431 = !DILocation(line: 4824, column: 11, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 4824, column: 11)
!8433 = !DILocation(line: 4824, column: 29, scope: !8432)
!8434 = !DILocation(line: 4824, column: 11, scope: !8424)
!8435 = !DILocation(line: 4827, column: 11, scope: !8424)
!8436 = !DILocation(line: 4821, column: 51, scope: !8425)
!8437 = !DILocation(line: 4821, column: 3, scope: !8425)
!8438 = distinct !{!8438, !8429, !8439}
!8439 = !DILocation(line: 4835, column: 5, scope: !8421)
!8440 = !DILocation(line: 4837, column: 7, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 4837, column: 7)
!8442 = !DILocation(line: 4830, column: 19, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 4830, column: 11)
!8444 = !DILocation(line: 4830, column: 16, scope: !8443)
!8445 = !DILocation(line: 4830, column: 11, scope: !8424)
!8446 = !DILocation(line: 4832, column: 4, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 4831, column: 2)
!8448 = !DILocation(line: 4833, column: 4, scope: !8447)
!8449 = !DILocation(line: 4837, column: 7, scope: !8382)
!8450 = !DILocation(line: 4844, column: 10, scope: !8382)
!8451 = !DILocation(line: 4845, column: 3, scope: !8382)
!8452 = !DILocation(line: 4846, column: 18, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 4846, column: 3)
!8454 = !DILocation(line: 4846, column: 8, scope: !8453)
!8455 = !DILocation(line: 4847, column: 9, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 4846, column: 3)
!8457 = !DILocation(line: 4847, column: 8, scope: !8456)
!8458 = !DILocation(line: 4846, column: 3, scope: !8453)
!8459 = !DILocation(line: 4848, column: 20, scope: !8456)
!8460 = !DILocation(line: 4848, column: 5, scope: !8456)
!8461 = !DILocation(line: 4847, column: 30, scope: !8456)
!8462 = !DILocation(line: 4846, column: 3, scope: !8456)
!8463 = distinct !{!8463, !8458, !8464}
!8464 = !DILocation(line: 4848, column: 46, scope: !8453)
!8465 = !DILocation(line: 4851, column: 1, scope: !8382)
!8466 = distinct !DISubprogram(name: "gimple_move_block_after", scope: !3, file: !3, line: 4857, type: !2385, scopeLine: 4858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8467)
!8467 = !{!8468, !8469}
!8468 = !DILocalVariable(name: "bb", arg: 1, scope: !8466, file: !3, line: 4857, type: !1670)
!8469 = !DILocalVariable(name: "after", arg: 2, scope: !8466, file: !3, line: 4857, type: !1670)
!8470 = !DILocation(line: 0, scope: !8466)
!8471 = !DILocation(line: 4859, column: 11, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 4859, column: 7)
!8473 = !DILocation(line: 4859, column: 19, scope: !8472)
!8474 = !DILocation(line: 4859, column: 7, scope: !8466)
!8475 = !DILocation(line: 4862, column: 3, scope: !8466)
!8476 = !DILocation(line: 4863, column: 3, scope: !8466)
!8477 = !DILocation(line: 4865, column: 3, scope: !8466)
!8478 = !DILocation(line: 4866, column: 1, scope: !8466)
!8479 = distinct !DISubprogram(name: "gimple_can_merge_blocks_p", scope: !3, file: !3, line: 1389, type: !2385, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8480)
!8480 = !{!8481, !8482, !8483, !8484, !8485, !8486}
!8481 = !DILocalVariable(name: "a", arg: 1, scope: !8479, file: !3, line: 1389, type: !1670)
!8482 = !DILocalVariable(name: "b", arg: 2, scope: !8479, file: !3, line: 1389, type: !1670)
!8483 = !DILocalVariable(name: "stmt", scope: !8479, file: !3, line: 1391, type: !1028)
!8484 = !DILocalVariable(name: "gsi", scope: !8479, file: !3, line: 1392, type: !2222)
!8485 = !DILocalVariable(name: "phis", scope: !8479, file: !3, line: 1393, type: !1018)
!8486 = !DILocalVariable(name: "lab", scope: !8487, file: !3, line: 1425, type: !704)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 1424, column: 5)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 1423, column: 3)
!8489 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1423, column: 3)
!8490 = !DILocation(line: 0, scope: !8479)
!8491 = !DILocation(line: 1392, column: 3, scope: !8479)
!8492 = !DILocation(line: 1395, column: 8, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1395, column: 7)
!8494 = !DILocation(line: 1395, column: 7, scope: !8479)
!8495 = !DILocation(line: 1398, column: 7, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1398, column: 7)
!8497 = !DILocation(line: 1398, column: 29, scope: !8496)
!8498 = !DILocation(line: 1398, column: 35, scope: !8496)
!8499 = !DILocation(line: 1398, column: 7, scope: !8479)
!8500 = !DILocation(line: 1401, column: 7, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1401, column: 7)
!8502 = !DILocation(line: 1401, column: 23, scope: !8501)
!8503 = !DILocation(line: 1401, column: 7, scope: !8479)
!8504 = !DILocation(line: 1404, column: 8, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1404, column: 7)
!8506 = !DILocation(line: 1404, column: 7, scope: !8479)
!8507 = !DILocation(line: 1407, column: 12, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1407, column: 7)
!8509 = !DILocation(line: 1407, column: 9, scope: !8508)
!8510 = !DILocation(line: 1407, column: 7, scope: !8479)
!8511 = !DILocation(line: 1412, column: 10, scope: !8479)
!8512 = !DILocation(line: 1413, column: 12, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1413, column: 7)
!8514 = !DILocation(line: 1413, column: 15, scope: !8513)
!8515 = !DILocation(line: 1413, column: 7, scope: !8479)
!8516 = !DILocation(line: 1418, column: 10, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1417, column: 7)
!8518 = !DILocation(line: 1418, column: 29, scope: !8517)
!8519 = !DILocation(line: 1419, column: 7, scope: !8517)
!8520 = !DILocation(line: 1419, column: 10, scope: !8517)
!8521 = !DILocation(line: 1417, column: 7, scope: !8479)
!8522 = !DILocation(line: 1423, column: 14, scope: !8489)
!8523 = !DILocation(line: 1423, column: 8, scope: !8489)
!8524 = !DILocation(line: 1423, column: 33, scope: !8488)
!8525 = !DILocation(line: 1423, column: 32, scope: !8488)
!8526 = !DILocation(line: 1423, column: 3, scope: !8489)
!8527 = !DILocation(line: 1426, column: 14, scope: !8487)
!8528 = !DILocation(line: 1427, column: 11, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1427, column: 11)
!8530 = !DILocation(line: 1427, column: 30, scope: !8529)
!8531 = !DILocation(line: 1427, column: 11, scope: !8487)
!8532 = !DILocation(line: 1429, column: 13, scope: !8487)
!8533 = !DILocation(line: 0, scope: !8487)
!8534 = !DILocation(line: 1432, column: 12, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1432, column: 11)
!8536 = !DILocation(line: 0, scope: !8488)
!8537 = !DILocation(line: 1423, column: 50, scope: !8488)
!8538 = !DILocation(line: 1423, column: 3, scope: !8488)
!8539 = distinct !{!8539, !8526, !8540}
!8540 = !DILocation(line: 1434, column: 5, scope: !8489)
!8541 = !DILocation(line: 1437, column: 7, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1437, column: 7)
!8543 = !DILocation(line: 1437, column: 21, scope: !8542)
!8544 = !DILocation(line: 1437, column: 27, scope: !8542)
!8545 = !DILocation(line: 1437, column: 40, scope: !8542)
!8546 = !DILocation(line: 1437, column: 46, scope: !8542)
!8547 = !DILocation(line: 1437, column: 7, scope: !8479)
!8548 = !DILocation(line: 1443, column: 10, scope: !8479)
!8549 = !DILocation(line: 1444, column: 8, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1444, column: 7)
!8551 = !DILocation(line: 1445, column: 7, scope: !8550)
!8552 = !DILocation(line: 1445, column: 10, scope: !8550)
!8553 = !DILocation(line: 1444, column: 7, scope: !8479)
!8554 = !DILocation(line: 1448, column: 3, scope: !8479)
!8555 = !DILocation(line: 1449, column: 1, scope: !8479)
!8556 = distinct !DISubprogram(name: "gimple_merge_blocks", scope: !3, file: !3, line: 1566, type: !2390, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8557)
!8557 = !{!8558, !8559, !8560, !8561, !8562, !8563, !8564, !8568, !8569, !8570, !8571, !8572, !8577, !8578, !8579, !8583, !8586, !8587, !8590}
!8558 = !DILocalVariable(name: "a", arg: 1, scope: !8556, file: !3, line: 1566, type: !1670)
!8559 = !DILocalVariable(name: "b", arg: 2, scope: !8556, file: !3, line: 1566, type: !1670)
!8560 = !DILocalVariable(name: "last", scope: !8556, file: !3, line: 1568, type: !2222)
!8561 = !DILocalVariable(name: "gsi", scope: !8556, file: !3, line: 1568, type: !2222)
!8562 = !DILocalVariable(name: "psi", scope: !8556, file: !3, line: 1568, type: !2222)
!8563 = !DILocalVariable(name: "phis", scope: !8556, file: !3, line: 1569, type: !1018)
!8564 = !DILocalVariable(name: "phi", scope: !8565, file: !3, line: 1579, type: !1028)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 1578, column: 5)
!8566 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 1577, column: 3)
!8567 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 1577, column: 3)
!8568 = !DILocalVariable(name: "def", scope: !8565, file: !3, line: 1580, type: !704)
!8569 = !DILocalVariable(name: "use", scope: !8565, file: !3, line: 1580, type: !704)
!8570 = !DILocalVariable(name: "copy", scope: !8565, file: !3, line: 1581, type: !1028)
!8571 = !DILocalVariable(name: "may_replace_uses", scope: !8565, file: !3, line: 1582, type: !692)
!8572 = !DILocalVariable(name: "iter", scope: !8573, file: !3, line: 1613, type: !3963)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 1612, column: 6)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 1611, column: 8)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 1607, column: 9)
!8576 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 1594, column: 11)
!8577 = !DILocalVariable(name: "use_p", scope: !8573, file: !3, line: 1614, type: !2200)
!8578 = !DILocalVariable(name: "stmt", scope: !8573, file: !3, line: 1615, type: !1028)
!8579 = !DILocalVariable(name: "stmt", scope: !8580, file: !3, line: 1640, type: !1028)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 1639, column: 5)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1638, column: 3)
!8582 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 1638, column: 3)
!8583 = !DILocalVariable(name: "label", scope: !8584, file: !3, line: 1643, type: !704)
!8584 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 1642, column: 2)
!8585 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 1641, column: 11)
!8586 = !DILocalVariable(name: "lp_nr", scope: !8584, file: !3, line: 1644, type: !693)
!8587 = !DILocalVariable(name: "dest_gsi", scope: !8588, file: !3, line: 1656, type: !2222)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !3, line: 1655, column: 6)
!8589 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 1654, column: 8)
!8590 = !DILocalVariable(name: "lp", scope: !8591, file: !3, line: 1663, type: !1585)
!8591 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 1662, column: 6)
!8592 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 1661, column: 8)
!8593 = !DILocation(line: 0, scope: !8556)
!8594 = !DILocation(line: 1568, column: 3, scope: !8556)
!8595 = !DILocation(line: 1569, column: 21, scope: !8556)
!8596 = !DILocation(line: 1571, column: 7, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 1571, column: 7)
!8598 = !DILocation(line: 1571, column: 7, scope: !8556)
!8599 = !DILocation(line: 1572, column: 58, scope: !8597)
!8600 = !DILocation(line: 1572, column: 68, scope: !8597)
!8601 = !DILocation(line: 1572, column: 5, scope: !8597)
!8602 = !DILocation(line: 1576, column: 9, scope: !8556)
!8603 = !DILocation(line: 1577, column: 14, scope: !8567)
!8604 = !DILocation(line: 0, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 1587, column: 11)
!8606 = !DILocation(line: 0, scope: !8573)
!8607 = !DILocation(line: 1577, column: 8, scope: !8567)
!8608 = !DILocation(line: 1577, column: 33, scope: !8566)
!8609 = !DILocation(line: 1577, column: 32, scope: !8566)
!8610 = !DILocation(line: 1577, column: 3, scope: !8567)
!8611 = !DILocation(line: 1579, column: 20, scope: !8565)
!8612 = !DILocation(line: 0, scope: !8565)
!8613 = !DILocation(line: 1580, column: 18, scope: !8565)
!8614 = !DILocation(line: 1580, column: 49, scope: !8565)
!8615 = !DILocation(line: 1582, column: 32, scope: !8565)
!8616 = !DILocation(line: 1583, column: 10, scope: !8565)
!8617 = !DILocation(line: 1583, column: 13, scope: !8565)
!8618 = !DILocation(line: 1582, column: 31, scope: !8565)
!8619 = !DILocation(line: 1587, column: 11, scope: !8605)
!8620 = !DILocation(line: 1588, column: 4, scope: !8605)
!8621 = !DILocation(line: 1588, column: 7, scope: !8605)
!8622 = !DILocation(line: 1589, column: 4, scope: !8605)
!8623 = !DILocation(line: 1589, column: 7, scope: !8605)
!8624 = !DILocation(line: 1590, column: 4, scope: !8605)
!8625 = !DILocation(line: 1590, column: 7, scope: !8605)
!8626 = !DILocation(line: 1590, column: 23, scope: !8605)
!8627 = !DILocation(line: 1591, column: 4, scope: !8605)
!8628 = !DILocation(line: 1591, column: 10, scope: !8605)
!8629 = !DILocation(line: 1591, column: 28, scope: !8605)
!8630 = !DILocation(line: 1591, column: 22, scope: !8605)
!8631 = !DILocation(line: 1587, column: 11, scope: !8565)
!8632 = !DILocation(line: 1594, column: 12, scope: !8576)
!8633 = !DILocation(line: 0, scope: !8576)
!8634 = !DILocation(line: 1594, column: 11, scope: !8565)
!8635 = !DILocation(line: 1596, column: 4, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 1595, column: 2)
!8637 = !DILocation(line: 1602, column: 11, scope: !8636)
!8638 = !DILocation(line: 1603, column: 4, scope: !8636)
!8639 = !DILocation(line: 1604, column: 11, scope: !8636)
!8640 = !DILocation(line: 1605, column: 2, scope: !8636)
!8641 = !DILocation(line: 1611, column: 8, scope: !8575)
!8642 = !DILocation(line: 1613, column: 8, scope: !8573)
!8643 = !DILocation(line: 1617, column: 8, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 1617, column: 8)
!8645 = !DILocation(line: 1617, column: 8, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 1617, column: 8)
!8647 = !DILocation(line: 1618, column: 3, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 1618, column: 3)
!8649 = !DILocation(line: 0, scope: !8648)
!8650 = !DILocation(line: 1618, column: 3, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1618, column: 3)
!8652 = !DILocation(line: 1619, column: 5, scope: !8651)
!8653 = distinct !{!8653, !8647, !8654}
!8654 = !DILocation(line: 1619, column: 5, scope: !8648)
!8655 = distinct !{!8655, !8643, !8656}
!8656 = !DILocation(line: 1619, column: 5, scope: !8644)
!8657 = !DILocation(line: 1621, column: 12, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 1621, column: 12)
!8659 = !DILocation(line: 1621, column: 12, scope: !8573)
!8660 = !DILocation(line: 1622, column: 3, scope: !8658)
!8661 = !DILocation(line: 1622, column: 41, scope: !8658)
!8662 = !DILocation(line: 1623, column: 6, scope: !8574)
!8663 = !DILocation(line: 1623, column: 6, scope: !8573)
!8664 = !DILocation(line: 1625, column: 13, scope: !8574)
!8665 = !DILocation(line: 1627, column: 11, scope: !8575)
!8666 = !DILocation(line: 1577, column: 3, scope: !8566)
!8667 = distinct !{!8667, !8610, !8668}
!8668 = !DILocation(line: 1629, column: 5, scope: !8567)
!8669 = !DILocation(line: 1632, column: 3, scope: !8556)
!8670 = !DILocation(line: 1634, column: 3, scope: !8556)
!8671 = !DILocation(line: 1635, column: 3, scope: !8556)
!8672 = !DILocation(line: 1638, column: 14, scope: !8582)
!8673 = !DILocation(line: 0, scope: !8588)
!8674 = !DILocation(line: 1638, column: 8, scope: !8582)
!8675 = !DILocation(line: 1638, column: 33, scope: !8581)
!8676 = !DILocation(line: 1638, column: 32, scope: !8581)
!8677 = !DILocation(line: 1638, column: 3, scope: !8582)
!8678 = !DILocation(line: 1640, column: 21, scope: !8580)
!8679 = !DILocation(line: 0, scope: !8580)
!8680 = !DILocation(line: 1641, column: 11, scope: !8585)
!8681 = !DILocation(line: 1641, column: 30, scope: !8585)
!8682 = !DILocation(line: 1641, column: 11, scope: !8580)
!8683 = !DILocation(line: 1643, column: 17, scope: !8584)
!8684 = !DILocation(line: 0, scope: !8584)
!8685 = !DILocation(line: 1646, column: 4, scope: !8584)
!8686 = !DILocation(line: 1654, column: 8, scope: !8589)
!8687 = !DILocation(line: 1654, column: 8, scope: !8584)
!8688 = !DILocation(line: 1656, column: 8, scope: !8588)
!8689 = !DILocation(line: 1656, column: 40, scope: !8588)
!8690 = !DILocation(line: 1657, column: 8, scope: !8588)
!8691 = !DILocation(line: 1658, column: 6, scope: !8589)
!8692 = !DILocation(line: 1658, column: 6, scope: !8588)
!8693 = !DILocation(line: 1660, column: 12, scope: !8584)
!8694 = !DILocation(line: 1661, column: 8, scope: !8592)
!8695 = !DILocation(line: 1661, column: 8, scope: !8584)
!8696 = !DILocation(line: 1663, column: 28, scope: !8591)
!8697 = !DILocation(line: 0, scope: !8591)
!8698 = !DILocation(line: 1664, column: 12, scope: !8591)
!8699 = !DILocation(line: 1664, column: 29, scope: !8591)
!8700 = !DILocation(line: 1665, column: 6, scope: !8591)
!8701 = !DILocation(line: 1669, column: 4, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 1668, column: 2)
!8703 = !DILocation(line: 1670, column: 4, scope: !8702)
!8704 = !DILocation(line: 1638, column: 3, scope: !8581)
!8705 = distinct !{!8705, !8677, !8706}
!8706 = !DILocation(line: 1672, column: 5, scope: !8582)
!8707 = !DILocation(line: 1675, column: 10, scope: !8556)
!8708 = !DILocation(line: 1676, column: 32, scope: !8556)
!8709 = !DILocation(line: 1676, column: 3, scope: !8556)
!8710 = !DILocation(line: 1677, column: 3, scope: !8556)
!8711 = !DILocation(line: 1679, column: 7, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 1679, column: 7)
!8713 = !DILocation(line: 1679, column: 7, scope: !8556)
!8714 = !DILocation(line: 1680, column: 48, scope: !8712)
!8715 = !DILocation(line: 1680, column: 5, scope: !8712)
!8716 = !DILocation(line: 1681, column: 1, scope: !8556)
!8717 = distinct !DISubprogram(name: "gimple_can_duplicate_bb_p", scope: !3, file: !3, line: 4872, type: !2403, scopeLine: 4873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8718)
!8718 = !{!8719}
!8719 = !DILocalVariable(name: "bb", arg: 1, scope: !8717, file: !3, line: 4872, type: !2400)
!8720 = !DILocation(line: 0, scope: !8717)
!8721 = !DILocation(line: 4874, column: 3, scope: !8717)
!8722 = distinct !DISubprogram(name: "gimple_duplicate_bb", scope: !3, file: !3, line: 4881, type: !2407, scopeLine: 4882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8723)
!8723 = !{!8724, !8725, !8726, !8727, !8728, !8729, !8730, !8731, !8732, !8736}
!8724 = !DILocalVariable(name: "bb", arg: 1, scope: !8722, file: !3, line: 4881, type: !1670)
!8725 = !DILocalVariable(name: "new_bb", scope: !8722, file: !3, line: 4883, type: !1670)
!8726 = !DILocalVariable(name: "gsi", scope: !8722, file: !3, line: 4884, type: !2222)
!8727 = !DILocalVariable(name: "gsi_tgt", scope: !8722, file: !3, line: 4884, type: !2222)
!8728 = !DILocalVariable(name: "phis", scope: !8722, file: !3, line: 4885, type: !1018)
!8729 = !DILocalVariable(name: "phi", scope: !8722, file: !3, line: 4886, type: !1028)
!8730 = !DILocalVariable(name: "stmt", scope: !8722, file: !3, line: 4886, type: !1028)
!8731 = !DILocalVariable(name: "copy", scope: !8722, file: !3, line: 4886, type: !1028)
!8732 = !DILocalVariable(name: "def_p", scope: !8733, file: !3, line: 4903, type: !2267)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 4902, column: 5)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 4901, column: 3)
!8735 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 4901, column: 3)
!8736 = !DILocalVariable(name: "op_iter", scope: !8733, file: !3, line: 4904, type: !6708)
!8737 = !DILocation(line: 0, scope: !8722)
!8738 = !DILocation(line: 4884, column: 3, scope: !8722)
!8739 = !DILocation(line: 4885, column: 21, scope: !8722)
!8740 = !DILocation(line: 4888, column: 29, scope: !8722)
!8741 = !DILocation(line: 4888, column: 45, scope: !8722)
!8742 = !DILocation(line: 4888, column: 12, scope: !8722)
!8743 = !DILocation(line: 4892, column: 14, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 4892, column: 3)
!8745 = !DILocation(line: 4892, column: 8, scope: !8744)
!8746 = !DILocation(line: 4892, column: 33, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 4892, column: 3)
!8748 = !DILocation(line: 4892, column: 32, scope: !8747)
!8749 = !DILocation(line: 4892, column: 3, scope: !8744)
!8750 = !DILocation(line: 4894, column: 13, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 4893, column: 5)
!8752 = !DILocation(line: 4895, column: 31, scope: !8751)
!8753 = !DILocation(line: 4895, column: 14, scope: !8751)
!8754 = !DILocation(line: 4896, column: 27, scope: !8751)
!8755 = !DILocation(line: 4897, column: 6, scope: !8751)
!8756 = !DILocation(line: 4896, column: 7, scope: !8751)
!8757 = !DILocation(line: 4892, column: 50, scope: !8747)
!8758 = !DILocation(line: 4892, column: 3, scope: !8747)
!8759 = distinct !{!8759, !8749, !8760}
!8760 = !DILocation(line: 4898, column: 5, scope: !8744)
!8761 = !DILocation(line: 4900, column: 13, scope: !8722)
!8762 = !DILocation(line: 4901, column: 14, scope: !8735)
!8763 = !DILocation(line: 0, scope: !8733)
!8764 = !DILocation(line: 4901, column: 8, scope: !8735)
!8765 = !DILocation(line: 4901, column: 34, scope: !8734)
!8766 = !DILocation(line: 4901, column: 33, scope: !8734)
!8767 = !DILocation(line: 4901, column: 3, scope: !8735)
!8768 = !DILocation(line: 4904, column: 7, scope: !8733)
!8769 = !DILocation(line: 4906, column: 14, scope: !8733)
!8770 = !DILocation(line: 4907, column: 11, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 4907, column: 11)
!8772 = !DILocation(line: 4907, column: 30, scope: !8771)
!8773 = !DILocation(line: 4907, column: 11, scope: !8733)
!8774 = !DILocation(line: 4912, column: 14, scope: !8733)
!8775 = !DILocation(line: 4913, column: 7, scope: !8733)
!8776 = !DILocation(line: 4915, column: 7, scope: !8733)
!8777 = !DILocation(line: 4916, column: 41, scope: !8733)
!8778 = !DILocation(line: 4916, column: 7, scope: !8733)
!8779 = !DILocation(line: 4920, column: 7, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 4920, column: 7)
!8781 = !DILocation(line: 0, scope: !8780)
!8782 = !DILocation(line: 4920, column: 7, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 4920, column: 7)
!8784 = !DILocation(line: 4921, column: 22, scope: !8783)
!8785 = !DILocation(line: 4921, column: 2, scope: !8783)
!8786 = distinct !{!8786, !8779, !8787}
!8787 = !DILocation(line: 4921, column: 55, scope: !8780)
!8788 = !DILocation(line: 4922, column: 5, scope: !8734)
!8789 = !DILocation(line: 4901, column: 51, scope: !8734)
!8790 = !DILocation(line: 4901, column: 3, scope: !8734)
!8791 = distinct !{!8791, !8767, !8792}
!8792 = !DILocation(line: 4922, column: 5, scope: !8735)
!8793 = !DILocation(line: 4925, column: 1, scope: !8722)
!8794 = !DILocation(line: 4924, column: 3, scope: !8722)
!8795 = distinct !DISubprogram(name: "gimple_split_edge", scope: !3, file: !3, line: 2462, type: !2411, scopeLine: 2463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8796)
!8796 = !{!8797, !8798, !8799, !8800, !8801, !8802}
!8797 = !DILocalVariable(name: "edge_in", arg: 1, scope: !8795, file: !3, line: 2462, type: !1008)
!8798 = !DILocalVariable(name: "new_bb", scope: !8795, file: !3, line: 2464, type: !1670)
!8799 = !DILocalVariable(name: "after_bb", scope: !8795, file: !3, line: 2464, type: !1670)
!8800 = !DILocalVariable(name: "dest", scope: !8795, file: !3, line: 2464, type: !1670)
!8801 = !DILocalVariable(name: "new_edge", scope: !8795, file: !3, line: 2465, type: !1008)
!8802 = !DILocalVariable(name: "e", scope: !8795, file: !3, line: 2465, type: !1008)
!8803 = !DILocation(line: 0, scope: !8795)
!8804 = !DILocation(line: 2468, column: 3, scope: !8795)
!8805 = !DILocation(line: 2470, column: 19, scope: !8795)
!8806 = !DILocation(line: 2472, column: 14, scope: !8795)
!8807 = !DILocation(line: 2474, column: 12, scope: !8795)
!8808 = !DILocation(line: 2475, column: 23, scope: !8795)
!8809 = !DILocation(line: 2475, column: 11, scope: !8795)
!8810 = !DILocation(line: 2475, column: 21, scope: !8795)
!8811 = !DILocation(line: 2476, column: 28, scope: !8795)
!8812 = !DILocation(line: 2476, column: 11, scope: !8795)
!8813 = !DILocation(line: 2476, column: 17, scope: !8795)
!8814 = !DILocation(line: 2477, column: 14, scope: !8795)
!8815 = !DILocation(line: 2478, column: 13, scope: !8795)
!8816 = !DILocation(line: 2478, column: 25, scope: !8795)
!8817 = !DILocation(line: 2479, column: 30, scope: !8795)
!8818 = !DILocation(line: 2479, column: 13, scope: !8795)
!8819 = !DILocation(line: 2479, column: 19, scope: !8795)
!8820 = !DILocation(line: 2481, column: 7, scope: !8795)
!8821 = !DILocation(line: 2482, column: 3, scope: !8795)
!8822 = !DILocation(line: 2483, column: 3, scope: !8795)
!8823 = !DILocation(line: 2485, column: 3, scope: !8795)
!8824 = distinct !DISubprogram(name: "gimple_make_forwarder_block", scope: !3, file: !3, line: 4520, type: !2415, scopeLine: 4521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8825)
!8825 = !{!8826, !8827, !8828, !8829, !8830, !8831, !8832, !8833, !8837}
!8826 = !DILocalVariable(name: "fallthru", arg: 1, scope: !8824, file: !3, line: 4520, type: !1008)
!8827 = !DILocalVariable(name: "e", scope: !8824, file: !3, line: 4522, type: !1008)
!8828 = !DILocalVariable(name: "ei", scope: !8824, file: !3, line: 4523, type: !5516)
!8829 = !DILocalVariable(name: "dummy", scope: !8824, file: !3, line: 4524, type: !1670)
!8830 = !DILocalVariable(name: "bb", scope: !8824, file: !3, line: 4524, type: !1670)
!8831 = !DILocalVariable(name: "var", scope: !8824, file: !3, line: 4525, type: !704)
!8832 = !DILocalVariable(name: "gsi", scope: !8824, file: !3, line: 4526, type: !2222)
!8833 = !DILocalVariable(name: "phi", scope: !8834, file: !3, line: 4538, type: !1028)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 4537, column: 5)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 4536, column: 3)
!8836 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 4536, column: 3)
!8837 = !DILocalVariable(name: "new_phi", scope: !8834, file: !3, line: 4538, type: !1028)
!8838 = !DILocation(line: 0, scope: !8824)
!8839 = !DILocation(line: 4522, column: 3, scope: !8824)
!8840 = !DILocation(line: 4523, column: 3, scope: !8824)
!8841 = !DILocation(line: 4526, column: 3, scope: !8824)
!8842 = !DILocation(line: 4528, column: 21, scope: !8824)
!8843 = !DILocation(line: 4529, column: 18, scope: !8824)
!8844 = !DILocation(line: 4531, column: 7, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 4531, column: 7)
!8846 = !DILocation(line: 4531, column: 7, scope: !8824)
!8847 = !DILocation(line: 4536, column: 14, scope: !8836)
!8848 = !DILocation(line: 4536, column: 8, scope: !8836)
!8849 = !DILocation(line: 4536, column: 39, scope: !8835)
!8850 = !DILocation(line: 4536, column: 38, scope: !8835)
!8851 = !DILocation(line: 4536, column: 3, scope: !8836)
!8852 = !DILocation(line: 4540, column: 13, scope: !8834)
!8853 = !DILocation(line: 0, scope: !8834)
!8854 = !DILocation(line: 4541, column: 13, scope: !8834)
!8855 = !DILocation(line: 4542, column: 17, scope: !8834)
!8856 = !DILocation(line: 4543, column: 7, scope: !8834)
!8857 = !DILocation(line: 4543, column: 31, scope: !8834)
!8858 = !DILocation(line: 4544, column: 50, scope: !8834)
!8859 = !DILocation(line: 4544, column: 35, scope: !8834)
!8860 = !DILocation(line: 4544, column: 7, scope: !8834)
!8861 = !DILocation(line: 4545, column: 29, scope: !8834)
!8862 = !DILocation(line: 4545, column: 7, scope: !8834)
!8863 = !DILocation(line: 4536, column: 56, scope: !8835)
!8864 = !DILocation(line: 4536, column: 3, scope: !8835)
!8865 = distinct !{!8865, !8851, !8866}
!8866 = !DILocation(line: 4547, column: 5, scope: !8836)
!8867 = !DILocation(line: 4550, column: 3, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 4550, column: 3)
!8869 = !DILocation(line: 0, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 4550, column: 3)
!8871 = !DILocation(line: 4550, column: 3, scope: !8870)
!8872 = !DILocation(line: 4552, column: 11, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 4552, column: 11)
!8874 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 4551, column: 5)
!8875 = !DILocation(line: 4552, column: 13, scope: !8873)
!8876 = !DILocation(line: 4552, column: 11, scope: !8874)
!8877 = !DILocation(line: 4555, column: 7, scope: !8874)
!8878 = !DILocation(line: 4556, column: 5, scope: !8874)
!8879 = distinct !{!8879, !8867, !8880}
!8880 = !DILocation(line: 4556, column: 5, scope: !8868)
!8881 = !DILocation(line: 4557, column: 1, scope: !8824)
!8882 = distinct !DISubprogram(name: "gimple_block_ends_with_call_p", scope: !3, file: !3, line: 6461, type: !2420, scopeLine: 6462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8883)
!8883 = !{!8884, !8885}
!8884 = !DILocalVariable(name: "bb", arg: 1, scope: !8882, file: !3, line: 6461, type: !1670)
!8885 = !DILocalVariable(name: "gsi", scope: !8882, file: !3, line: 6463, type: !2222)
!8886 = !DILocation(line: 0, scope: !8882)
!8887 = !DILocation(line: 6463, column: 3, scope: !8882)
!8888 = !DILocation(line: 6463, column: 30, scope: !8882)
!8889 = !DILocation(line: 6464, column: 26, scope: !8882)
!8890 = !DILocation(line: 6464, column: 10, scope: !8882)
!8891 = !DILocation(line: 6465, column: 1, scope: !8882)
!8892 = !DILocation(line: 6464, column: 3, scope: !8882)
!8893 = distinct !DISubprogram(name: "gimple_block_ends_with_condjump_p", scope: !3, file: !3, line: 6472, type: !2403, scopeLine: 6473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8894)
!8894 = !{!8895, !8896}
!8895 = !DILocalVariable(name: "bb", arg: 1, scope: !8893, file: !3, line: 6472, type: !2400)
!8896 = !DILocalVariable(name: "stmt", scope: !8893, file: !3, line: 6474, type: !1028)
!8897 = !DILocation(line: 0, scope: !8893)
!8898 = !DILocation(line: 6474, column: 17, scope: !8893)
!8899 = !DILocation(line: 6475, column: 11, scope: !8893)
!8900 = !DILocation(line: 6475, column: 16, scope: !8893)
!8901 = !DILocation(line: 6475, column: 19, scope: !8893)
!8902 = !DILocation(line: 6475, column: 38, scope: !8893)
!8903 = !DILocation(line: 6475, column: 3, scope: !8893)
!8904 = distinct !DISubprogram(name: "gimple_flow_call_edges_add", scope: !3, file: !3, line: 6535, type: !2425, scopeLine: 6536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8905)
!8905 = !{!8906, !8907, !8908, !8909, !8910, !8911, !8914, !8915, !8916, !8919, !8923, !8924, !8925, !8926}
!8906 = !DILocalVariable(name: "blocks", arg: 1, scope: !8904, file: !3, line: 6535, type: !2427)
!8907 = !DILocalVariable(name: "i", scope: !8904, file: !3, line: 6537, type: !693)
!8908 = !DILocalVariable(name: "blocks_split", scope: !8904, file: !3, line: 6538, type: !693)
!8909 = !DILocalVariable(name: "last_bb", scope: !8904, file: !3, line: 6539, type: !693)
!8910 = !DILocalVariable(name: "check_last_block", scope: !8904, file: !3, line: 6540, type: !692)
!8911 = !DILocalVariable(name: "bb", scope: !8912, file: !3, line: 6564, type: !1670)
!8912 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 6563, column: 5)
!8913 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 6562, column: 7)
!8914 = !DILocalVariable(name: "gsi", scope: !8912, file: !3, line: 6565, type: !2222)
!8915 = !DILocalVariable(name: "t", scope: !8912, file: !3, line: 6566, type: !1028)
!8916 = !DILocalVariable(name: "e", scope: !8917, file: !3, line: 6573, type: !1008)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 6572, column: 2)
!8918 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 6571, column: 11)
!8919 = !DILocalVariable(name: "bb", scope: !8920, file: !3, line: 6589, type: !1670)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 6588, column: 5)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 6587, column: 3)
!8922 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 6587, column: 3)
!8923 = !DILocalVariable(name: "gsi", scope: !8920, file: !3, line: 6590, type: !2222)
!8924 = !DILocalVariable(name: "stmt", scope: !8920, file: !3, line: 6591, type: !1028)
!8925 = !DILocalVariable(name: "last_stmt", scope: !8920, file: !3, line: 6591, type: !1028)
!8926 = !DILocalVariable(name: "e", scope: !8927, file: !3, line: 6608, type: !1008)
!8927 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 6607, column: 3)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 6606, column: 12)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 6604, column: 6)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 6601, column: 2)
!8931 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 6600, column: 11)
!8932 = !DILocation(line: 0, scope: !8904)
!8933 = !DILocation(line: 6539, column: 17, scope: !8904)
!8934 = !DILocation(line: 6542, column: 7, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 6542, column: 7)
!8936 = !DILocation(line: 6542, column: 22, scope: !8935)
!8937 = !DILocation(line: 6542, column: 7, scope: !8904)
!8938 = !DILocation(line: 6545, column: 9, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 6545, column: 7)
!8940 = !DILocation(line: 6545, column: 7, scope: !8904)
!8941 = !DILocation(line: 6548, column: 24, scope: !8939)
!8942 = !DILocation(line: 6562, column: 7, scope: !8904)
!8943 = !DILocation(line: 6564, column: 24, scope: !8912)
!8944 = !DILocation(line: 6564, column: 40, scope: !8912)
!8945 = !DILocation(line: 0, scope: !8912)
!8946 = !DILocation(line: 6565, column: 7, scope: !8912)
!8947 = !DILocation(line: 6565, column: 34, scope: !8912)
!8948 = !DILocation(line: 6568, column: 12, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 6568, column: 11)
!8950 = !DILocation(line: 6568, column: 11, scope: !8912)
!8951 = !DILocation(line: 6569, column: 6, scope: !8949)
!8952 = !DILocation(line: 6569, column: 2, scope: !8949)
!8953 = !DILocation(line: 6571, column: 11, scope: !8918)
!8954 = !DILocation(line: 6571, column: 13, scope: !8918)
!8955 = !DILocation(line: 6571, column: 16, scope: !8918)
!8956 = !DILocation(line: 6571, column: 11, scope: !8912)
!8957 = !DILocation(line: 6575, column: 23, scope: !8917)
!8958 = !DILocation(line: 6575, column: 8, scope: !8917)
!8959 = !DILocation(line: 0, scope: !8917)
!8960 = !DILocation(line: 6576, column: 8, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 6576, column: 8)
!8962 = !DILocation(line: 6576, column: 8, scope: !8917)
!8963 = !DILocation(line: 6578, column: 31, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 6577, column: 6)
!8965 = !DILocation(line: 6578, column: 8, scope: !8964)
!8966 = !DILocation(line: 6579, column: 8, scope: !8964)
!8967 = !DILocation(line: 6580, column: 6, scope: !8964)
!8968 = !DILocation(line: 6582, column: 5, scope: !8913)
!8969 = !DILocation(line: 6582, column: 5, scope: !8912)
!8970 = !DILocation(line: 0, scope: !8920)
!8971 = !DILocation(line: 6587, column: 8, scope: !8922)
!8972 = !DILocation(line: 6538, column: 7, scope: !8904)
!8973 = !DILocation(line: 0, scope: !8922)
!8974 = !DILocation(line: 6587, column: 17, scope: !8921)
!8975 = !DILocation(line: 6587, column: 3, scope: !8922)
!8976 = !DILocation(line: 6589, column: 24, scope: !8920)
!8977 = !DILocation(line: 6590, column: 7, scope: !8920)
!8978 = !DILocation(line: 6593, column: 12, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 6593, column: 11)
!8980 = !DILocation(line: 6593, column: 11, scope: !8920)
!8981 = !DILocation(line: 6599, column: 13, scope: !8920)
!8982 = !DILocation(line: 6600, column: 12, scope: !8931)
!8983 = !DILocation(line: 6600, column: 11, scope: !8920)
!8984 = !DILocation(line: 6602, column: 16, scope: !8930)
!8985 = !DILocation(line: 6603, column: 4, scope: !8930)
!8986 = !DILocation(line: 6605, column: 15, scope: !8929)
!8987 = !DILocation(line: 6606, column: 12, scope: !8928)
!8988 = !DILocation(line: 6606, column: 12, scope: !8929)
!8989 = !DILocation(line: 6625, column: 14, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 6625, column: 9)
!8991 = !DILocation(line: 6625, column: 9, scope: !8927)
!8992 = !DILocation(line: 6627, column: 30, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 6626, column: 7)
!8994 = !DILocation(line: 6627, column: 13, scope: !8993)
!8995 = !DILocation(line: 0, scope: !8927)
!8996 = !DILocation(line: 6628, column: 13, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 6628, column: 13)
!8998 = !DILocation(line: 6628, column: 13, scope: !8993)
!8999 = !DILocation(line: 6630, column: 7, scope: !8993)
!9000 = !DILocation(line: 6631, column: 20, scope: !8927)
!9001 = !DILocation(line: 6631, column: 5, scope: !8927)
!9002 = !DILocation(line: 6632, column: 3, scope: !8927)
!9003 = !DILocation(line: 6633, column: 8, scope: !8929)
!9004 = !DILocation(line: 6635, column: 12, scope: !8930)
!9005 = !DILocation(line: 6635, column: 11, scope: !8930)
!9006 = !DILocation(line: 6634, column: 6, scope: !8929)
!9007 = distinct !{!9007, !8985, !9008}
!9008 = !DILocation(line: 6635, column: 27, scope: !8930)
!9009 = !DILocation(line: 6637, column: 5, scope: !8921)
!9010 = !DILocation(line: 6587, column: 29, scope: !8921)
!9011 = !DILocation(line: 6587, column: 3, scope: !8921)
!9012 = distinct !{!9012, !8975, !9013}
!9013 = !DILocation(line: 6637, column: 5, scope: !8922)
!9014 = !DILocation(line: 6639, column: 7, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 6639, column: 7)
!9016 = !DILocation(line: 6596, column: 22, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 6596, column: 11)
!9018 = !DILocation(line: 6596, column: 11, scope: !8920)
!9019 = !DILocation(line: 6639, column: 7, scope: !8904)
!9020 = !DILocation(line: 6640, column: 5, scope: !9015)
!9021 = !DILocation(line: 6643, column: 1, scope: !8904)
!9022 = distinct !DISubprogram(name: "gimple_execute_on_growing_pred", scope: !3, file: !3, line: 6856, type: !2415, scopeLine: 6857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9023)
!9023 = !{!9024, !9025}
!9024 = !DILocalVariable(name: "e", arg: 1, scope: !9022, file: !3, line: 6856, type: !1008)
!9025 = !DILocalVariable(name: "bb", scope: !9022, file: !3, line: 6858, type: !1670)
!9026 = !DILocation(line: 0, scope: !9022)
!9027 = !DILocation(line: 6858, column: 23, scope: !9022)
!9028 = !DILocation(line: 6860, column: 28, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 6860, column: 7)
!9030 = !DILocation(line: 6860, column: 8, scope: !9029)
!9031 = !DILocation(line: 6860, column: 7, scope: !9022)
!9032 = !DILocation(line: 6861, column: 5, scope: !9029)
!9033 = !DILocation(line: 6862, column: 1, scope: !9022)
!9034 = distinct !DISubprogram(name: "gimple_execute_on_shrinking_pred", scope: !3, file: !3, line: 6868, type: !2415, scopeLine: 6869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9035)
!9035 = !{!9036}
!9036 = !DILocalVariable(name: "e", arg: 1, scope: !9034, file: !3, line: 6868, type: !1008)
!9037 = !DILocation(line: 0, scope: !9034)
!9038 = !DILocation(line: 6870, column: 42, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 6870, column: 7)
!9040 = !DILocation(line: 6870, column: 28, scope: !9039)
!9041 = !DILocation(line: 6870, column: 8, scope: !9039)
!9042 = !DILocation(line: 6870, column: 7, scope: !9034)
!9043 = !DILocation(line: 6871, column: 5, scope: !9039)
!9044 = !DILocation(line: 6872, column: 1, scope: !9034)
!9045 = distinct !DISubprogram(name: "gimple_lv_add_condition_to_bb", scope: !3, file: !3, line: 6920, type: !2451, scopeLine: 6923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9046)
!9046 = !{!9047, !9048, !9049, !9050, !9051, !9052, !9053, !9054}
!9047 = !DILocalVariable(name: "first_head", arg: 1, scope: !9045, file: !3, line: 6920, type: !1670)
!9048 = !DILocalVariable(name: "second_head", arg: 2, scope: !9045, file: !3, line: 6921, type: !1670)
!9049 = !DILocalVariable(name: "cond_bb", arg: 3, scope: !9045, file: !3, line: 6922, type: !1670)
!9050 = !DILocalVariable(name: "cond_e", arg: 4, scope: !9045, file: !3, line: 6922, type: !697)
!9051 = !DILocalVariable(name: "gsi", scope: !9045, file: !3, line: 6924, type: !2222)
!9052 = !DILocalVariable(name: "new_cond_expr", scope: !9045, file: !3, line: 6925, type: !1028)
!9053 = !DILocalVariable(name: "cond_expr", scope: !9045, file: !3, line: 6926, type: !704)
!9054 = !DILocalVariable(name: "e0", scope: !9045, file: !3, line: 6927, type: !1008)
!9055 = !DILocation(line: 0, scope: !9045)
!9056 = !DILocation(line: 6924, column: 3, scope: !9045)
!9057 = !DILocation(line: 6926, column: 20, scope: !9045)
!9058 = !DILocation(line: 6930, column: 19, scope: !9045)
!9059 = !DILocation(line: 6934, column: 9, scope: !9045)
!9060 = !DILocation(line: 6935, column: 3, scope: !9045)
!9061 = !DILocation(line: 6939, column: 8, scope: !9045)
!9062 = !DILocation(line: 6940, column: 7, scope: !9045)
!9063 = !DILocation(line: 6940, column: 13, scope: !9045)
!9064 = !DILocation(line: 6941, column: 13, scope: !9045)
!9065 = !DILocation(line: 6942, column: 1, scope: !9045)
!9066 = distinct !DISubprogram(name: "gimple_lv_adjust_loop_header_phi", scope: !3, file: !3, line: 6887, type: !2455, scopeLine: 6889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9067)
!9067 = !{!9068, !9069, !9070, !9071, !9072, !9073, !9074, !9075, !9076, !9077}
!9068 = !DILocalVariable(name: "first", arg: 1, scope: !9066, file: !3, line: 6887, type: !1670)
!9069 = !DILocalVariable(name: "second", arg: 2, scope: !9066, file: !3, line: 6887, type: !1670)
!9070 = !DILocalVariable(name: "new_head", arg: 3, scope: !9066, file: !3, line: 6888, type: !1670)
!9071 = !DILocalVariable(name: "e", arg: 4, scope: !9066, file: !3, line: 6888, type: !1008)
!9072 = !DILocalVariable(name: "phi1", scope: !9066, file: !3, line: 6890, type: !1028)
!9073 = !DILocalVariable(name: "phi2", scope: !9066, file: !3, line: 6890, type: !1028)
!9074 = !DILocalVariable(name: "psi1", scope: !9066, file: !3, line: 6891, type: !2222)
!9075 = !DILocalVariable(name: "psi2", scope: !9066, file: !3, line: 6891, type: !2222)
!9076 = !DILocalVariable(name: "def", scope: !9066, file: !3, line: 6892, type: !704)
!9077 = !DILocalVariable(name: "e2", scope: !9066, file: !3, line: 6893, type: !1008)
!9078 = !DILocation(line: 0, scope: !9066)
!9079 = !DILocation(line: 6891, column: 3, scope: !9066)
!9080 = !DILocation(line: 6893, column: 13, scope: !9066)
!9081 = !DILocation(line: 6897, column: 3, scope: !9066)
!9082 = !DILocation(line: 6902, column: 15, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 6902, column: 3)
!9084 = !DILocation(line: 6903, column: 15, scope: !9083)
!9085 = !DILocation(line: 0, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 6906, column: 5)
!9087 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 6902, column: 3)
!9088 = !DILocation(line: 6902, column: 8, scope: !9083)
!9089 = !DILocation(line: 6904, column: 9, scope: !9087)
!9090 = !DILocation(line: 6904, column: 26, scope: !9087)
!9091 = !DILocation(line: 6904, column: 30, scope: !9087)
!9092 = !DILocation(line: 6904, column: 29, scope: !9087)
!9093 = !DILocation(line: 6902, column: 3, scope: !9083)
!9094 = !DILocation(line: 6907, column: 14, scope: !9086)
!9095 = !DILocation(line: 6908, column: 14, scope: !9086)
!9096 = !DILocation(line: 6909, column: 13, scope: !9086)
!9097 = !DILocation(line: 6910, column: 34, scope: !9086)
!9098 = !DILocation(line: 6910, column: 7, scope: !9086)
!9099 = !DILocation(line: 6905, column: 8, scope: !9087)
!9100 = !DILocation(line: 6905, column: 27, scope: !9087)
!9101 = !DILocation(line: 6902, column: 3, scope: !9087)
!9102 = distinct !{!9102, !9093, !9103}
!9103 = !DILocation(line: 6911, column: 5, scope: !9083)
!9104 = !DILocation(line: 6912, column: 1, scope: !9066)
!9105 = distinct !DISubprogram(name: "extract_true_false_edges_from_block", scope: !3, file: !3, line: 7154, type: !2459, scopeLine: 7157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9106)
!9106 = !{!9107, !9108, !9109, !9110}
!9107 = !DILocalVariable(name: "b", arg: 1, scope: !9105, file: !3, line: 7154, type: !1670)
!9108 = !DILocalVariable(name: "true_edge", arg: 2, scope: !9105, file: !3, line: 7155, type: !2461)
!9109 = !DILocalVariable(name: "false_edge", arg: 3, scope: !9105, file: !3, line: 7156, type: !2461)
!9110 = !DILocalVariable(name: "e", scope: !9105, file: !3, line: 7158, type: !1008)
!9111 = !DILocation(line: 0, scope: !9105)
!9112 = !DILocation(line: 7158, column: 12, scope: !9105)
!9113 = !DILocation(line: 7160, column: 10, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 7160, column: 7)
!9115 = !DILocation(line: 7160, column: 16, scope: !9114)
!9116 = !DILocation(line: 7160, column: 7, scope: !9105)
!9117 = !DILocation(line: 7162, column: 18, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 7161, column: 5)
!9119 = !DILocation(line: 7163, column: 21, scope: !9118)
!9120 = !DILocation(line: 7163, column: 19, scope: !9118)
!9121 = !DILocation(line: 7164, column: 5, scope: !9118)
!9122 = !DILocation(line: 7167, column: 19, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 7166, column: 5)
!9124 = !DILocation(line: 7168, column: 20, scope: !9123)
!9125 = !DILocation(line: 7168, column: 18, scope: !9123)
!9126 = !DILocation(line: 7170, column: 1, scope: !9105)
!9127 = distinct !DISubprogram(name: "split_critical_edges", scope: !3, file: !3, line: 6980, type: !2478, scopeLine: 6981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9128)
!9128 = !{!9129, !9130, !9131, !9132}
!9129 = !DILocalVariable(name: "bb", scope: !9127, file: !3, line: 6982, type: !1670)
!9130 = !DILocalVariable(name: "e", scope: !9127, file: !3, line: 6983, type: !1008)
!9131 = !DILocalVariable(name: "ei", scope: !9127, file: !3, line: 6984, type: !5516)
!9132 = !DILocalVariable(name: "gsi", scope: !9133, file: !3, line: 7009, type: !2222)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 7008, column: 6)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 7003, column: 13)
!9135 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 6994, column: 8)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 6993, column: 9)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !3, line: 6992, column: 7)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 6992, column: 7)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 6991, column: 5)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 6990, column: 3)
!9141 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 6990, column: 3)
!9142 = !DILocation(line: 6983, column: 3, scope: !9127)
!9143 = !DILocation(line: 6984, column: 3, scope: !9127)
!9144 = !DILocation(line: 6989, column: 3, scope: !9127)
!9145 = !DILocation(line: 6990, column: 3, scope: !9141)
!9146 = !DILocation(line: 0, scope: !9138)
!9147 = !DILocation(line: 0, scope: !9137)
!9148 = !DILocation(line: 0, scope: !9133)
!9149 = !DILocation(line: 0, scope: !9141)
!9150 = !DILocation(line: 0, scope: !9127)
!9151 = !DILocation(line: 6992, column: 7, scope: !9138)
!9152 = !DILocation(line: 6992, column: 7, scope: !9137)
!9153 = !DILocation(line: 6994, column: 8, scope: !9135)
!9154 = !DILocation(line: 6994, column: 28, scope: !9135)
!9155 = !DILocation(line: 6994, column: 33, scope: !9135)
!9156 = !DILocation(line: 6994, column: 36, scope: !9135)
!9157 = !DILocation(line: 6994, column: 42, scope: !9135)
!9158 = !DILocation(line: 6994, column: 8, scope: !9136)
!9159 = !DILocation(line: 6995, column: 6, scope: !9135)
!9160 = !DILocation(line: 7003, column: 30, scope: !9134)
!9161 = !DILocation(line: 7003, column: 33, scope: !9134)
!9162 = !DILocation(line: 7003, column: 15, scope: !9134)
!9163 = !DILocation(line: 7004, column: 14, scope: !9134)
!9164 = !DILocation(line: 7004, column: 49, scope: !9134)
!9165 = !DILocation(line: 7004, column: 52, scope: !9134)
!9166 = !DILocation(line: 7004, column: 38, scope: !9134)
!9167 = !DILocation(line: 7004, column: 18, scope: !9134)
!9168 = !DILocation(line: 7005, column: 14, scope: !9134)
!9169 = !DILocation(line: 7005, column: 17, scope: !9134)
!9170 = !DILocation(line: 7005, column: 20, scope: !9134)
!9171 = !DILocation(line: 7005, column: 28, scope: !9134)
!9172 = !DILocation(line: 7005, column: 25, scope: !9134)
!9173 = !DILocation(line: 7006, column: 6, scope: !9134)
!9174 = !DILocation(line: 7006, column: 9, scope: !9134)
!9175 = !DILocation(line: 7006, column: 12, scope: !9134)
!9176 = !DILocation(line: 7006, column: 19, scope: !9134)
!9177 = !DILocation(line: 7006, column: 16, scope: !9134)
!9178 = !DILocation(line: 7007, column: 13, scope: !9134)
!9179 = !DILocation(line: 7007, column: 21, scope: !9134)
!9180 = !DILocation(line: 7007, column: 27, scope: !9134)
!9181 = !DILocation(line: 7003, column: 13, scope: !9135)
!9182 = !DILocation(line: 7009, column: 8, scope: !9133)
!9183 = !DILocation(line: 7011, column: 14, scope: !9133)
!9184 = !DILocation(line: 7012, column: 13, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7012, column: 12)
!9186 = !DILocation(line: 7013, column: 5, scope: !9185)
!9187 = !DILocation(line: 7013, column: 24, scope: !9185)
!9188 = !DILocation(line: 7013, column: 8, scope: !9185)
!9189 = !DILocation(line: 7014, column: 5, scope: !9185)
!9190 = !DILocation(line: 7014, column: 21, scope: !9185)
!9191 = !DILocation(line: 7014, column: 8, scope: !9185)
!9192 = !DILocation(line: 7014, column: 37, scope: !9185)
!9193 = !DILocation(line: 7012, column: 12, scope: !9133)
!9194 = !DILocation(line: 7015, column: 15, scope: !9185)
!9195 = !DILocation(line: 7015, column: 3, scope: !9185)
!9196 = !DILocation(line: 7016, column: 6, scope: !9134)
!9197 = !DILocation(line: 7016, column: 6, scope: !9133)
!9198 = distinct !{!9198, !9151, !9199}
!9199 = !DILocation(line: 7017, column: 2, scope: !9138)
!9200 = !DILocation(line: 6990, column: 3, scope: !9140)
!9201 = distinct !{!9201, !9145, !9202}
!9202 = !DILocation(line: 7018, column: 5, scope: !9141)
!9203 = !DILocation(line: 7019, column: 3, scope: !9127)
!9204 = !DILocation(line: 7021, column: 1, scope: !9127)
!9205 = !DILocation(line: 7020, column: 3, scope: !9127)
!9206 = distinct !DISubprogram(name: "gimplify_build3", scope: !3, file: !3, line: 7047, type: !9207, scopeLine: 7049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9209)
!9207 = !DISubroutineType(types: !9208)
!9208 = !{!704, !3322, !141, !704, !704, !704, !704}
!9209 = !{!9210, !9211, !9212, !9213, !9214, !9215, !9216, !9217}
!9210 = !DILocalVariable(name: "gsi", arg: 1, scope: !9206, file: !3, line: 7047, type: !3322)
!9211 = !DILocalVariable(name: "code", arg: 2, scope: !9206, file: !3, line: 7047, type: !141)
!9212 = !DILocalVariable(name: "type", arg: 3, scope: !9206, file: !3, line: 7048, type: !704)
!9213 = !DILocalVariable(name: "a", arg: 4, scope: !9206, file: !3, line: 7048, type: !704)
!9214 = !DILocalVariable(name: "b", arg: 5, scope: !9206, file: !3, line: 7048, type: !704)
!9215 = !DILocalVariable(name: "c", arg: 6, scope: !9206, file: !3, line: 7048, type: !704)
!9216 = !DILocalVariable(name: "ret", scope: !9206, file: !3, line: 7050, type: !704)
!9217 = !DILocalVariable(name: "loc", scope: !9206, file: !3, line: 7051, type: !829)
!9218 = !DILocation(line: 0, scope: !9206)
!9219 = !DILocation(line: 7051, column: 37, scope: !9206)
!9220 = !DILocation(line: 7051, column: 20, scope: !9206)
!9221 = !DILocation(line: 7053, column: 9, scope: !9206)
!9222 = !DILocation(line: 7054, column: 3, scope: !9206)
!9223 = !DILocation(line: 7056, column: 10, scope: !9206)
!9224 = !DILocation(line: 7056, column: 3, scope: !9206)
!9225 = distinct !DISubprogram(name: "gimplify_build2", scope: !3, file: !3, line: 7064, type: !9226, scopeLine: 7066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9228)
!9226 = !DISubroutineType(types: !9227)
!9227 = !{!704, !3322, !141, !704, !704, !704}
!9228 = !{!9229, !9230, !9231, !9232, !9233, !9234}
!9229 = !DILocalVariable(name: "gsi", arg: 1, scope: !9225, file: !3, line: 7064, type: !3322)
!9230 = !DILocalVariable(name: "code", arg: 2, scope: !9225, file: !3, line: 7064, type: !141)
!9231 = !DILocalVariable(name: "type", arg: 3, scope: !9225, file: !3, line: 7065, type: !704)
!9232 = !DILocalVariable(name: "a", arg: 4, scope: !9225, file: !3, line: 7065, type: !704)
!9233 = !DILocalVariable(name: "b", arg: 5, scope: !9225, file: !3, line: 7065, type: !704)
!9234 = !DILocalVariable(name: "ret", scope: !9225, file: !3, line: 7067, type: !704)
!9235 = !DILocation(line: 0, scope: !9225)
!9236 = !DILocation(line: 7069, column: 9, scope: !9225)
!9237 = !DILocation(line: 7070, column: 3, scope: !9225)
!9238 = !DILocation(line: 7072, column: 10, scope: !9225)
!9239 = !DILocation(line: 7072, column: 3, scope: !9225)
!9240 = distinct !DISubprogram(name: "gimplify_build1", scope: !3, file: !3, line: 7080, type: !9241, scopeLine: 7082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9243)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{!704, !3322, !141, !704, !704}
!9243 = !{!9244, !9245, !9246, !9247, !9248}
!9244 = !DILocalVariable(name: "gsi", arg: 1, scope: !9240, file: !3, line: 7080, type: !3322)
!9245 = !DILocalVariable(name: "code", arg: 2, scope: !9240, file: !3, line: 7080, type: !141)
!9246 = !DILocalVariable(name: "type", arg: 3, scope: !9240, file: !3, line: 7080, type: !704)
!9247 = !DILocalVariable(name: "a", arg: 4, scope: !9240, file: !3, line: 7081, type: !704)
!9248 = !DILocalVariable(name: "ret", scope: !9240, file: !3, line: 7083, type: !704)
!9249 = !DILocation(line: 0, scope: !9240)
!9250 = !DILocation(line: 7085, column: 9, scope: !9240)
!9251 = !DILocation(line: 7086, column: 3, scope: !9240)
!9252 = !DILocation(line: 7088, column: 10, scope: !9240)
!9253 = !DILocation(line: 7088, column: 3, scope: !9240)
!9254 = distinct !DISubprogram(name: "execute_warn_function_return", scope: !3, file: !3, line: 7097, type: !2478, scopeLine: 7098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9255)
!9255 = !{!9256, !9257, !9258, !9259, !9260}
!9256 = !DILocalVariable(name: "location", scope: !9254, file: !3, line: 7099, type: !831)
!9257 = !DILocalVariable(name: "last", scope: !9254, file: !3, line: 7100, type: !1028)
!9258 = !DILocalVariable(name: "e", scope: !9254, file: !3, line: 7101, type: !1008)
!9259 = !DILocalVariable(name: "ei", scope: !9254, file: !3, line: 7102, type: !5516)
!9260 = !DILocalVariable(name: "last", scope: !9261, file: !3, line: 7130, type: !1028)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 7129, column: 2)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 7128, column: 7)
!9263 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 7128, column: 7)
!9264 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 7127, column: 5)
!9265 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 7123, column: 12)
!9266 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 7105, column: 7)
!9267 = !DILocation(line: 7101, column: 3, scope: !9254)
!9268 = !DILocation(line: 7102, column: 3, scope: !9254)
!9269 = !DILocation(line: 7105, column: 7, scope: !9266)
!9270 = !DILocation(line: 7106, column: 7, scope: !9266)
!9271 = !DILocation(line: 7106, column: 10, scope: !9266)
!9272 = !DILocation(line: 7106, column: 45, scope: !9266)
!9273 = !DILocation(line: 7105, column: 7, scope: !9254)
!9274 = !DILocation(line: 0, scope: !9254)
!9275 = !DILocation(line: 7109, column: 7, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 7109, column: 7)
!9277 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 7107, column: 5)
!9278 = !DILocation(line: 0, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 7109, column: 7)
!9280 = !DILocation(line: 7109, column: 7, scope: !9279)
!9281 = !DILocation(line: 7111, column: 22, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 7110, column: 2)
!9283 = !DILocation(line: 7111, column: 25, scope: !9282)
!9284 = !DILocation(line: 7111, column: 11, scope: !9282)
!9285 = !DILocation(line: 7112, column: 8, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 7112, column: 8)
!9287 = !DILocation(line: 7112, column: 27, scope: !9286)
!9288 = !DILocation(line: 7113, column: 8, scope: !9286)
!9289 = !DILocation(line: 7113, column: 23, scope: !9286)
!9290 = !DILocation(line: 7113, column: 47, scope: !9286)
!9291 = !DILocation(line: 7112, column: 8, scope: !9282)
!9292 = distinct !{!9292, !9275, !9293}
!9293 = !DILocation(line: 7115, column: 2, scope: !9276)
!9294 = !DILocation(line: 0, scope: !9277)
!9295 = !DILocation(line: 7116, column: 20, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 7116, column: 11)
!9297 = !DILocation(line: 7116, column: 11, scope: !9277)
!9298 = !DILocation(line: 7117, column: 13, scope: !9296)
!9299 = !DILocation(line: 7117, column: 19, scope: !9296)
!9300 = !DILocation(line: 7117, column: 2, scope: !9296)
!9301 = !DILocation(line: 7118, column: 7, scope: !9277)
!9302 = !DILocation(line: 7119, column: 5, scope: !9277)
!9303 = !DILocation(line: 7123, column: 12, scope: !9265)
!9304 = !DILocation(line: 7124, column: 5, scope: !9265)
!9305 = !DILocation(line: 7124, column: 9, scope: !9265)
!9306 = !DILocation(line: 7125, column: 5, scope: !9265)
!9307 = !DILocation(line: 7125, column: 8, scope: !9265)
!9308 = !DILocation(line: 7125, column: 43, scope: !9265)
!9309 = !DILocation(line: 7126, column: 5, scope: !9265)
!9310 = !DILocation(line: 7126, column: 9, scope: !9265)
!9311 = !DILocation(line: 7123, column: 12, scope: !9266)
!9312 = !DILocation(line: 7128, column: 7, scope: !9263)
!9313 = !DILocation(line: 0, scope: !9262)
!9314 = !DILocation(line: 7128, column: 7, scope: !9262)
!9315 = !DILocation(line: 7130, column: 29, scope: !9261)
!9316 = !DILocation(line: 7130, column: 32, scope: !9261)
!9317 = !DILocation(line: 7130, column: 18, scope: !9261)
!9318 = !DILocation(line: 0, scope: !9261)
!9319 = !DILocation(line: 7131, column: 8, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 7131, column: 8)
!9321 = !DILocation(line: 7131, column: 27, scope: !9320)
!9322 = !DILocation(line: 7132, column: 8, scope: !9320)
!9323 = !DILocation(line: 7132, column: 11, scope: !9320)
!9324 = !DILocation(line: 7132, column: 39, scope: !9320)
!9325 = !DILocation(line: 7133, column: 8, scope: !9320)
!9326 = !DILocation(line: 7133, column: 12, scope: !9320)
!9327 = !DILocation(line: 7131, column: 8, scope: !9261)
!9328 = !DILocation(line: 7135, column: 19, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 7134, column: 6)
!9330 = !DILocation(line: 7136, column: 21, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 7136, column: 12)
!9332 = !DILocation(line: 7136, column: 12, scope: !9329)
!9333 = !DILocation(line: 7137, column: 16, scope: !9331)
!9334 = !DILocation(line: 7137, column: 22, scope: !9331)
!9335 = !DILocation(line: 7137, column: 5, scope: !9331)
!9336 = !DILocation(line: 0, scope: !9329)
!9337 = !DILocation(line: 7138, column: 8, scope: !9329)
!9338 = !DILocation(line: 7139, column: 8, scope: !9329)
!9339 = !DILocation(line: 7139, column: 37, scope: !9329)
!9340 = !DILocation(line: 7140, column: 8, scope: !9329)
!9341 = distinct !{!9341, !9312, !9342}
!9342 = !DILocation(line: 7142, column: 2, scope: !9263)
!9343 = !DILocation(line: 7145, column: 1, scope: !9254)
!9344 = !DILocation(line: 7144, column: 3, scope: !9254)
!9345 = distinct !DISubprogram(name: "execute_warn_function_noreturn", scope: !3, file: !3, line: 7194, type: !2478, scopeLine: 7195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!9346 = !DILocation(line: 7196, column: 7, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 7196, column: 7)
!9348 = !DILocation(line: 7197, column: 7, scope: !9347)
!9349 = !DILocation(line: 7197, column: 11, scope: !9347)
!9350 = !DILocation(line: 7198, column: 7, scope: !9347)
!9351 = !DILocation(line: 7198, column: 10, scope: !9347)
!9352 = !DILocation(line: 7198, column: 45, scope: !9347)
!9353 = !DILocation(line: 7199, column: 7, scope: !9347)
!9354 = !DILocation(line: 7199, column: 22, scope: !9347)
!9355 = !DILocation(line: 7199, column: 45, scope: !9347)
!9356 = !DILocation(line: 7199, column: 51, scope: !9347)
!9357 = !DILocation(line: 7199, column: 11, scope: !9347)
!9358 = !DILocation(line: 7196, column: 7, scope: !9345)
!9359 = !DILocation(line: 7200, column: 17, scope: !9347)
!9360 = !DILocation(line: 7200, column: 5, scope: !9347)
!9361 = !DILocation(line: 7203, column: 3, scope: !9345)
!9362 = distinct !DISubprogram(name: "gate_warn_unused_result", scope: !3, file: !3, line: 7297, type: !2474, scopeLine: 7298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!9363 = !DILocation(line: 7299, column: 10, scope: !9362)
!9364 = !DILocation(line: 7299, column: 3, scope: !9362)
!9365 = distinct !DISubprogram(name: "run_warn_unused_result", scope: !3, file: !3, line: 7290, type: !2478, scopeLine: 7291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!9366 = !DILocation(line: 7292, column: 39, scope: !9365)
!9367 = !DILocation(line: 7292, column: 26, scope: !9365)
!9368 = !DILocation(line: 7292, column: 3, scope: !9365)
!9369 = !DILocation(line: 7293, column: 3, scope: !9365)
!9370 = distinct !DISubprogram(name: "VEC_basic_block_gc_safe_grow", scope: !382, file: !382, line: 282, type: !2951, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9371)
!9371 = !{!9372, !9373}
!9372 = !DILocalVariable(name: "vec_", arg: 1, scope: !9370, file: !382, line: 282, type: !2953)
!9373 = !DILocalVariable(name: "size_", arg: 2, scope: !9370, file: !382, line: 282, type: !693)
!9374 = !DILocation(line: 0, scope: !9370)
!9375 = !DILocation(line: 282, column: 1, scope: !9370)
!9376 = distinct !DISubprogram(name: "VEC_basic_block_gc_reserve_exact", scope: !382, file: !382, line: 282, type: !9377, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9379)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{!693, !2953, !693}
!9379 = !{!9380, !9381, !9382}
!9380 = !DILocalVariable(name: "vec_", arg: 1, scope: !9376, file: !382, line: 282, type: !2953)
!9381 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9376, file: !382, line: 282, type: !693)
!9382 = !DILocalVariable(name: "extend", scope: !9376, file: !382, line: 282, type: !693)
!9383 = !DILocation(line: 0, scope: !9376)
!9384 = !DILocation(line: 282, column: 1, scope: !9376)
!9385 = !DILocation(line: 282, column: 1, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9376, file: !382, line: 282, column: 1)
!9387 = distinct !DISubprogram(name: "VEC_basic_block_base_space", scope: !382, file: !382, line: 281, type: !9388, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9390)
!9388 = !DISubroutineType(types: !9389)
!9389 = !{!693, !2963, !693}
!9390 = !{!9391, !9392}
!9391 = !DILocalVariable(name: "vec_", arg: 1, scope: !9387, file: !382, line: 281, type: !2963)
!9392 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9387, file: !382, line: 281, type: !693)
!9393 = !DILocation(line: 0, scope: !9387)
!9394 = !DILocation(line: 281, column: 1, scope: !9387)
!9395 = distinct !DISubprogram(name: "build_gimple_cfg", scope: !3, file: !3, line: 172, type: !4981, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9396)
!9396 = !{!9397, !9398, !9400}
!9397 = !DILocalVariable(name: "seq", arg: 1, scope: !9395, file: !3, line: 172, type: !1018)
!9398 = !DILocalVariable(name: "local_dump_flags", scope: !9399, file: !3, line: 219, type: !693)
!9399 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 218, column: 3)
!9400 = !DILocalVariable(name: "vcg_file", scope: !9399, file: !3, line: 220, type: !2279)
!9401 = !DILocation(line: 0, scope: !9395)
!9402 = !DILocation(line: 175, column: 3, scope: !9395)
!9403 = !DILocation(line: 177, column: 3, scope: !9395)
!9404 = !DILocation(line: 179, column: 3, scope: !9395)
!9405 = !DILocation(line: 181, column: 23, scope: !9395)
!9406 = !DILocation(line: 182, column: 3, scope: !9395)
!9407 = !DILocation(line: 189, column: 7, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 189, column: 7)
!9409 = !DILocation(line: 189, column: 7, scope: !9395)
!9410 = !DILocation(line: 190, column: 5, scope: !9408)
!9411 = !DILocation(line: 193, column: 7, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 193, column: 7)
!9413 = !DILocation(line: 193, column: 22, scope: !9412)
!9414 = !DILocation(line: 193, column: 7, scope: !9395)
!9415 = !DILocation(line: 194, column: 22, scope: !9412)
!9416 = !DILocation(line: 194, column: 5, scope: !9412)
!9417 = !DILocation(line: 197, column: 7, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 197, column: 7)
!9419 = !DILocation(line: 0, scope: !9418)
!9420 = !DILocation(line: 197, column: 61, scope: !9418)
!9421 = !DILocation(line: 197, column: 52, scope: !9418)
!9422 = !DILocation(line: 197, column: 50, scope: !9418)
!9423 = !DILocation(line: 197, column: 7, scope: !9395)
!9424 = !DILocation(line: 198, column: 5, scope: !9418)
!9425 = !DILocation(line: 201, column: 3, scope: !9395)
!9426 = !DILocation(line: 206, column: 3, scope: !9395)
!9427 = !DILocation(line: 209, column: 29, scope: !9395)
!9428 = !DILocation(line: 209, column: 27, scope: !9395)
!9429 = !DILocation(line: 211, column: 3, scope: !9395)
!9430 = !DILocation(line: 212, column: 3, scope: !9395)
!9431 = !DILocation(line: 213, column: 16, scope: !9395)
!9432 = !DILocation(line: 213, column: 3, scope: !9395)
!9433 = !DILocation(line: 219, column: 5, scope: !9399)
!9434 = !DILocation(line: 0, scope: !9399)
!9435 = !DILocation(line: 220, column: 22, scope: !9399)
!9436 = !DILocation(line: 221, column: 9, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9399, file: !3, line: 221, column: 9)
!9438 = !DILocation(line: 221, column: 9, scope: !9399)
!9439 = !DILocation(line: 223, column: 2, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 222, column: 7)
!9441 = !DILocation(line: 224, column: 2, scope: !9440)
!9442 = !DILocation(line: 225, column: 7, scope: !9440)
!9443 = !DILocation(line: 226, column: 3, scope: !9395)
!9444 = !DILocation(line: 231, column: 1, scope: !9395)
!9445 = distinct !DISubprogram(name: "make_blocks", scope: !3, file: !3, line: 358, type: !4981, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9446)
!9446 = !{!9447, !9448, !9449, !9450, !9451, !9452, !9453, !9455, !9460, !9461}
!9447 = !DILocalVariable(name: "seq", arg: 1, scope: !9445, file: !3, line: 358, type: !1018)
!9448 = !DILocalVariable(name: "i", scope: !9445, file: !3, line: 360, type: !2222)
!9449 = !DILocalVariable(name: "stmt", scope: !9445, file: !3, line: 361, type: !1028)
!9450 = !DILocalVariable(name: "start_new_block", scope: !9445, file: !3, line: 362, type: !692)
!9451 = !DILocalVariable(name: "first_stmt_of_seq", scope: !9445, file: !3, line: 363, type: !692)
!9452 = !DILocalVariable(name: "bb", scope: !9445, file: !3, line: 364, type: !1670)
!9453 = !DILocalVariable(name: "prev_stmt", scope: !9454, file: !3, line: 368, type: !1028)
!9454 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 367, column: 5)
!9455 = !DILocalVariable(name: "lhs", scope: !9456, file: !3, line: 404, type: !704)
!9456 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 403, column: 6)
!9457 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 400, column: 8)
!9458 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 394, column: 2)
!9459 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 393, column: 11)
!9460 = !DILocalVariable(name: "tmp", scope: !9456, file: !3, line: 405, type: !704)
!9461 = !DILocalVariable(name: "s", scope: !9456, file: !3, line: 406, type: !1028)
!9462 = !DILocation(line: 0, scope: !9445)
!9463 = !DILocation(line: 360, column: 3, scope: !9445)
!9464 = !DILocation(line: 360, column: 28, scope: !9445)
!9465 = !DILocation(line: 364, column: 20, scope: !9445)
!9466 = !DILocation(line: 366, column: 3, scope: !9445)
!9467 = !DILocation(line: 366, column: 11, scope: !9445)
!9468 = !DILocation(line: 366, column: 10, scope: !9445)
!9469 = !DILocation(line: 0, scope: !9454)
!9470 = !DILocation(line: 371, column: 14, scope: !9454)
!9471 = !DILocation(line: 376, column: 11, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 376, column: 11)
!9473 = !DILocation(line: 376, column: 27, scope: !9472)
!9474 = !DILocation(line: 376, column: 30, scope: !9472)
!9475 = !DILocation(line: 376, column: 11, scope: !9454)
!9476 = !DILocation(line: 378, column: 9, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 378, column: 8)
!9478 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 377, column: 2)
!9479 = !DILocation(line: 378, column: 8, scope: !9478)
!9480 = !DILocation(line: 379, column: 12, scope: !9477)
!9481 = !DILocation(line: 379, column: 6, scope: !9477)
!9482 = !DILocation(line: 380, column: 29, scope: !9478)
!9483 = !DILocation(line: 380, column: 9, scope: !9478)
!9484 = !DILocation(line: 382, column: 2, scope: !9478)
!9485 = !DILocation(line: 386, column: 7, scope: !9454)
!9486 = !DILocation(line: 388, column: 11, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 388, column: 11)
!9488 = !DILocation(line: 388, column: 11, scope: !9454)
!9489 = !DILocation(line: 389, column: 22, scope: !9487)
!9490 = !DILocation(line: 389, column: 2, scope: !9487)
!9491 = !DILocation(line: 393, column: 11, scope: !9459)
!9492 = !DILocation(line: 393, column: 11, scope: !9454)
!9493 = !DILocation(line: 400, column: 8, scope: !9457)
!9494 = !DILocation(line: 401, column: 8, scope: !9457)
!9495 = !DILocation(line: 401, column: 11, scope: !9457)
!9496 = !DILocation(line: 402, column: 8, scope: !9457)
!9497 = !DILocation(line: 402, column: 31, scope: !9457)
!9498 = !DILocation(line: 402, column: 11, scope: !9457)
!9499 = !DILocation(line: 400, column: 8, scope: !9458)
!9500 = !DILocation(line: 404, column: 19, scope: !9456)
!9501 = !DILocation(line: 0, scope: !9456)
!9502 = !DILocation(line: 405, column: 35, scope: !9456)
!9503 = !DILocation(line: 405, column: 19, scope: !9456)
!9504 = !DILocation(line: 406, column: 19, scope: !9456)
!9505 = !DILocation(line: 407, column: 32, scope: !9456)
!9506 = !DILocation(line: 407, column: 8, scope: !9456)
!9507 = !DILocation(line: 408, column: 29, scope: !9456)
!9508 = !DILocation(line: 408, column: 8, scope: !9456)
!9509 = !DILocation(line: 409, column: 8, scope: !9456)
!9510 = !DILocation(line: 410, column: 12, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 410, column: 12)
!9512 = !DILocation(line: 410, column: 40, scope: !9511)
!9513 = !DILocation(line: 411, column: 5, scope: !9511)
!9514 = !DILocation(line: 411, column: 36, scope: !9511)
!9515 = !DILocation(line: 410, column: 12, scope: !9456)
!9516 = !DILocation(line: 412, column: 3, scope: !9511)
!9517 = !DILocation(line: 412, column: 27, scope: !9511)
!9518 = !DILocation(line: 413, column: 8, scope: !9456)
!9519 = !DILocation(line: 414, column: 6, scope: !9456)
!9520 = !DILocation(line: 418, column: 7, scope: !9454)
!9521 = distinct !{!9521, !9466, !9522}
!9522 = !DILocation(line: 420, column: 5, scope: !9445)
!9523 = !DILocation(line: 421, column: 1, scope: !9445)
!9524 = distinct !DISubprogram(name: "factor_computed_gotos", scope: !3, file: !3, line: 285, type: !2972, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9525)
!9525 = !{!9526, !9527, !9528, !9529, !9530, !9531, !9535, !9536, !9539, !9542}
!9526 = !DILocalVariable(name: "bb", scope: !9524, file: !3, line: 287, type: !1670)
!9527 = !DILocalVariable(name: "factored_label_decl", scope: !9524, file: !3, line: 288, type: !704)
!9528 = !DILocalVariable(name: "var", scope: !9524, file: !3, line: 289, type: !704)
!9529 = !DILocalVariable(name: "factored_computed_goto_label", scope: !9524, file: !3, line: 290, type: !1028)
!9530 = !DILocalVariable(name: "factored_computed_goto", scope: !9524, file: !3, line: 291, type: !1028)
!9531 = !DILocalVariable(name: "gsi", scope: !9532, file: !3, line: 299, type: !2222)
!9532 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 298, column: 5)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 297, column: 3)
!9534 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 297, column: 3)
!9535 = !DILocalVariable(name: "last", scope: !9532, file: !3, line: 300, type: !1028)
!9536 = !DILocalVariable(name: "assignment", scope: !9537, file: !3, line: 315, type: !1028)
!9537 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 314, column: 2)
!9538 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 313, column: 11)
!9539 = !DILocalVariable(name: "new_bb", scope: !9540, file: !3, line: 322, type: !1670)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 321, column: 6)
!9541 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 320, column: 8)
!9542 = !DILocalVariable(name: "new_gsi", scope: !9540, file: !3, line: 323, type: !2222)
!9543 = !DILocation(line: 0, scope: !9524)
!9544 = !DILocation(line: 297, column: 3, scope: !9534)
!9545 = !DILocation(line: 0, scope: !9532)
!9546 = !DILocation(line: 0, scope: !9540)
!9547 = !DILocation(line: 297, column: 3, scope: !9533)
!9548 = !DILocation(line: 291, column: 10, scope: !9524)
!9549 = !DILocation(line: 289, column: 8, scope: !9524)
!9550 = !DILocation(line: 288, column: 8, scope: !9524)
!9551 = !DILocation(line: 0, scope: !9534)
!9552 = !DILocation(line: 299, column: 7, scope: !9532)
!9553 = !DILocation(line: 299, column: 34, scope: !9532)
!9554 = !DILocation(line: 302, column: 11, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 302, column: 11)
!9556 = !DILocation(line: 302, column: 11, scope: !9532)
!9557 = !DILocation(line: 305, column: 14, scope: !9532)
!9558 = !DILocation(line: 309, column: 16, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 309, column: 11)
!9560 = !DILocation(line: 309, column: 11, scope: !9532)
!9561 = !DILocation(line: 313, column: 11, scope: !9538)
!9562 = !DILocation(line: 313, column: 11, scope: !9532)
!9563 = !DILocation(line: 320, column: 9, scope: !9541)
!9564 = !DILocation(line: 320, column: 8, scope: !9537)
!9565 = !DILocation(line: 322, column: 29, scope: !9540)
!9566 = !DILocation(line: 323, column: 8, scope: !9540)
!9567 = !DILocation(line: 323, column: 39, scope: !9540)
!9568 = !DILocation(line: 329, column: 30, scope: !9540)
!9569 = !DILocation(line: 329, column: 14, scope: !9540)
!9570 = !DILocation(line: 333, column: 30, scope: !9540)
!9571 = !DILocation(line: 335, column: 5, scope: !9540)
!9572 = !DILocation(line: 336, column: 8, scope: !9540)
!9573 = !DILocation(line: 340, column: 33, scope: !9540)
!9574 = !DILocation(line: 341, column: 8, scope: !9540)
!9575 = !DILocation(line: 342, column: 6, scope: !9541)
!9576 = !DILocation(line: 342, column: 6, scope: !9540)
!9577 = !DILocation(line: 345, column: 17, scope: !9537)
!9578 = !DILocation(line: 0, scope: !9537)
!9579 = !DILocation(line: 346, column: 4, scope: !9537)
!9580 = !DILocation(line: 349, column: 4, scope: !9537)
!9581 = !DILocation(line: 350, column: 2, scope: !9537)
!9582 = !DILocation(line: 351, column: 5, scope: !9533)
!9583 = !DILocation(line: 0, scope: !9533)
!9584 = distinct !{!9584, !9544, !9585}
!9585 = !DILocation(line: 351, column: 5, scope: !9534)
!9586 = !DILocation(line: 352, column: 1, scope: !9524)
!9587 = distinct !DISubprogram(name: "locus_map_hash", scope: !3, file: !3, line: 692, type: !9588, scopeLine: 693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9590)
!9588 = !DISubroutineType(types: !9589)
!9589 = !{!7, !1387}
!9590 = !{!9591}
!9591 = !DILocalVariable(name: "item", arg: 1, scope: !9587, file: !3, line: 692, type: !1387)
!9592 = !DILocation(line: 0, scope: !9587)
!9593 = !DILocation(line: 694, column: 53, scope: !9587)
!9594 = !DILocation(line: 694, column: 3, scope: !9587)
!9595 = distinct !DISubprogram(name: "locus_map_eq", scope: !3, file: !3, line: 701, type: !1601, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9596)
!9596 = !{!9597, !9598, !9599, !9600}
!9597 = !DILocalVariable(name: "va", arg: 1, scope: !9595, file: !3, line: 701, type: !1387)
!9598 = !DILocalVariable(name: "vb", arg: 2, scope: !9595, file: !3, line: 701, type: !1387)
!9599 = !DILocalVariable(name: "a", scope: !9595, file: !3, line: 703, type: !2192)
!9600 = !DILocalVariable(name: "b", scope: !9595, file: !3, line: 704, type: !2192)
!9601 = !DILocation(line: 0, scope: !9595)
!9602 = !DILocation(line: 705, column: 13, scope: !9595)
!9603 = !DILocation(line: 705, column: 25, scope: !9595)
!9604 = !DILocation(line: 705, column: 19, scope: !9595)
!9605 = !DILocation(line: 705, column: 3, scope: !9595)
!9606 = distinct !DISubprogram(name: "make_edges", scope: !3, file: !3, line: 509, type: !2972, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9607)
!9607 = !{!9608, !9609, !9623, !9627, !9628, !9631, !9635}
!9608 = !DILocalVariable(name: "bb", scope: !9606, file: !3, line: 511, type: !1670)
!9609 = !DILocalVariable(name: "cur_region", scope: !9606, file: !3, line: 512, type: !9610)
!9610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9611, size: 64)
!9611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omp_region", file: !1454, line: 375, size: 576, elements: !9612)
!9612 = !{!9613, !9614, !9615, !9616, !9617, !9618, !9619, !9620, !9621, !9622}
!9613 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !9611, file: !1454, line: 378, baseType: !9610, size: 64)
!9614 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !9611, file: !1454, line: 381, baseType: !9610, size: 64, offset: 64)
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9611, file: !1454, line: 384, baseType: !9610, size: 64, offset: 128)
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9611, file: !1454, line: 387, baseType: !1670, size: 64, offset: 192)
!9617 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !9611, file: !1454, line: 390, baseType: !1670, size: 64, offset: 256)
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !9611, file: !1454, line: 393, baseType: !1670, size: 64, offset: 320)
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "ws_args", scope: !9611, file: !1454, line: 398, baseType: !704, size: 64, offset: 384)
!9620 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9611, file: !1454, line: 401, baseType: !612, size: 32, offset: 448)
!9621 = !DIDerivedType(tag: DW_TAG_member, name: "sched_kind", scope: !9611, file: !1454, line: 404, baseType: !374, size: 32, offset: 480)
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "is_combined_parallel", scope: !9611, file: !1454, line: 407, baseType: !692, size: 8, offset: 512)
!9623 = !DILocalVariable(name: "last", scope: !9624, file: !3, line: 521, type: !1028)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 520, column: 5)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 519, column: 3)
!9626 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 519, column: 3)
!9627 = !DILocalVariable(name: "fallthru", scope: !9624, file: !3, line: 522, type: !692)
!9628 = !DILocalVariable(name: "code", scope: !9629, file: !3, line: 526, type: !612)
!9629 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 525, column: 2)
!9630 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 524, column: 11)
!9631 = !DILocalVariable(name: "switch_bb", scope: !9632, file: !3, line: 640, type: !1670)
!9632 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 639, column: 5)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 619, column: 3)
!9634 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 528, column: 6)
!9635 = !DILocalVariable(name: "i", scope: !9632, file: !3, line: 642, type: !9610)
!9636 = !DILocation(line: 0, scope: !9606)
!9637 = !DILocation(line: 516, column: 14, scope: !9606)
!9638 = !DILocation(line: 516, column: 31, scope: !9606)
!9639 = !DILocation(line: 516, column: 3, scope: !9606)
!9640 = !DILocation(line: 519, column: 3, scope: !9626)
!9641 = !DILocation(line: 519, column: 3, scope: !9625)
!9642 = !DILocation(line: 512, column: 22, scope: !9606)
!9643 = !DILocation(line: 0, scope: !9626)
!9644 = !DILocation(line: 0, scope: !9624)
!9645 = !DILocation(line: 521, column: 21, scope: !9624)
!9646 = !DILocation(line: 524, column: 11, scope: !9630)
!9647 = !DILocation(line: 524, column: 11, scope: !9624)
!9648 = !DILocation(line: 526, column: 28, scope: !9629)
!9649 = !DILocation(line: 0, scope: !9629)
!9650 = !DILocation(line: 527, column: 4, scope: !9629)
!9651 = !DILocation(line: 530, column: 8, scope: !9634)
!9652 = !DILocation(line: 532, column: 8, scope: !9634)
!9653 = !DILocation(line: 534, column: 23, scope: !9634)
!9654 = !DILocation(line: 534, column: 8, scope: !9634)
!9655 = !DILocation(line: 536, column: 8, scope: !9634)
!9656 = !DILocation(line: 538, column: 8, scope: !9634)
!9657 = !DILocation(line: 540, column: 8, scope: !9634)
!9658 = !DILocation(line: 542, column: 8, scope: !9634)
!9659 = !DILocation(line: 544, column: 8, scope: !9634)
!9660 = !DILocation(line: 546, column: 8, scope: !9634)
!9661 = !DILocation(line: 548, column: 8, scope: !9634)
!9662 = !DILocation(line: 550, column: 19, scope: !9634)
!9663 = !DILocation(line: 551, column: 8, scope: !9634)
!9664 = !DILocation(line: 557, column: 12, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 557, column: 12)
!9666 = !DILocation(line: 557, column: 12, scope: !9634)
!9667 = !DILocation(line: 558, column: 3, scope: !9665)
!9668 = !DILocation(line: 562, column: 8, scope: !9634)
!9669 = !DILocation(line: 565, column: 21, scope: !9634)
!9670 = !DILocation(line: 565, column: 19, scope: !9634)
!9671 = !DILocation(line: 566, column: 8, scope: !9634)
!9672 = !DILocation(line: 571, column: 12, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 571, column: 12)
!9674 = !DILocation(line: 571, column: 12, scope: !9634)
!9675 = !DILocation(line: 572, column: 3, scope: !9673)
!9676 = !DILocation(line: 577, column: 8, scope: !9634)
!9677 = !DILocation(line: 579, column: 8, scope: !9634)
!9678 = !DILocation(line: 589, column: 21, scope: !9634)
!9679 = !DILocation(line: 591, column: 8, scope: !9634)
!9680 = !DILocation(line: 594, column: 21, scope: !9634)
!9681 = !DILocation(line: 596, column: 8, scope: !9634)
!9682 = !DILocation(line: 605, column: 16, scope: !9634)
!9683 = !DILocation(line: 611, column: 20, scope: !9634)
!9684 = !DILocation(line: 611, column: 25, scope: !9634)
!9685 = !DILocation(line: 612, column: 31, scope: !9634)
!9686 = !DILocation(line: 612, column: 36, scope: !9634)
!9687 = !DILocation(line: 612, column: 19, scope: !9634)
!9688 = !DILocation(line: 613, column: 33, scope: !9634)
!9689 = !DILocation(line: 614, column: 8, scope: !9634)
!9690 = !DILocation(line: 617, column: 20, scope: !9634)
!9691 = !DILocation(line: 617, column: 25, scope: !9634)
!9692 = !DILocation(line: 618, column: 28, scope: !9634)
!9693 = !DILocation(line: 618, column: 8, scope: !9634)
!9694 = !DILocation(line: 624, column: 35, scope: !9633)
!9695 = !DILocation(line: 624, column: 5, scope: !9633)
!9696 = !DILocation(line: 624, column: 43, scope: !9633)
!9697 = !DILocation(line: 624, column: 49, scope: !9633)
!9698 = !DILocation(line: 626, column: 45, scope: !9633)
!9699 = !DILocation(line: 626, column: 20, scope: !9633)
!9700 = !DILocation(line: 626, column: 5, scope: !9633)
!9701 = !DILocation(line: 632, column: 28, scope: !9633)
!9702 = !DILocation(line: 632, column: 39, scope: !9633)
!9703 = !DILocation(line: 632, column: 5, scope: !9633)
!9704 = !DILocation(line: 633, column: 24, scope: !9633)
!9705 = !DILocation(line: 633, column: 5, scope: !9633)
!9706 = !DILocation(line: 635, column: 5, scope: !9633)
!9707 = !DILocation(line: 640, column: 56, scope: !9632)
!9708 = !DILocation(line: 640, column: 31, scope: !9632)
!9709 = !DILocation(line: 0, scope: !9632)
!9710 = !DILocation(line: 643, column: 28, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 643, column: 7)
!9712 = !DILocation(line: 643, column: 12, scope: !9711)
!9713 = !DILocation(line: 0, scope: !9711)
!9714 = !DILocation(line: 643, column: 7, scope: !9711)
!9715 = !DILocation(line: 645, column: 4, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 644, column: 9)
!9717 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 643, column: 7)
!9718 = !DILocation(line: 646, column: 29, scope: !9716)
!9719 = !DILocation(line: 646, column: 4, scope: !9716)
!9720 = !DILocation(line: 647, column: 18, scope: !9716)
!9721 = !DILocation(line: 647, column: 4, scope: !9716)
!9722 = !DILocation(line: 643, column: 46, scope: !9717)
!9723 = !DILocation(line: 643, column: 7, scope: !9717)
!9724 = distinct !{!9724, !9714, !9725}
!9725 = !DILocation(line: 648, column: 9, scope: !9711)
!9726 = !DILocation(line: 652, column: 7, scope: !9632)
!9727 = !DILocation(line: 655, column: 33, scope: !9632)
!9728 = !DILocation(line: 655, column: 7, scope: !9632)
!9729 = !DILocation(line: 658, column: 5, scope: !9633)
!9730 = !DILocation(line: 661, column: 5, scope: !9633)
!9731 = !DILocation(line: 662, column: 3, scope: !9633)
!9732 = !DILocation(line: 666, column: 8, scope: !9634)
!9733 = !DILocation(line: 0, scope: !9630)
!9734 = !DILocation(line: 673, column: 11, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 673, column: 11)
!9736 = !DILocation(line: 673, column: 11, scope: !9624)
!9737 = !DILocation(line: 675, column: 23, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 674, column: 9)
!9739 = !DILocation(line: 675, column: 4, scope: !9738)
!9740 = !DILocation(line: 676, column: 8, scope: !9738)
!9741 = !DILocation(line: 677, column: 35, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 676, column: 8)
!9743 = !DILocation(line: 677, column: 63, scope: !9742)
!9744 = !DILocation(line: 677, column: 13, scope: !9742)
!9745 = !DILocation(line: 0, scope: !9625)
!9746 = distinct !{!9746, !9640, !9747}
!9747 = !DILocation(line: 679, column: 5, scope: !9626)
!9748 = !DILocation(line: 681, column: 7, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 681, column: 7)
!9750 = !DILocation(line: 681, column: 7, scope: !9606)
!9751 = !DILocation(line: 682, column: 5, scope: !9749)
!9752 = !DILocation(line: 685, column: 3, scope: !9606)
!9753 = !DILocation(line: 686, column: 1, scope: !9606)
!9754 = distinct !DISubprogram(name: "gimple_cfg2vcg", scope: !3, file: !3, line: 2098, type: !2277, scopeLine: 2099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9755)
!9755 = !{!9756, !9757, !9758, !9759, !9760, !9761, !9765, !9766, !9767, !9768, !9769, !9770, !9771}
!9756 = !DILocalVariable(name: "file", arg: 1, scope: !9754, file: !3, line: 2098, type: !2279)
!9757 = !DILocalVariable(name: "e", scope: !9754, file: !3, line: 2100, type: !1008)
!9758 = !DILocalVariable(name: "ei", scope: !9754, file: !3, line: 2101, type: !5516)
!9759 = !DILocalVariable(name: "bb", scope: !9754, file: !3, line: 2102, type: !1670)
!9760 = !DILocalVariable(name: "funcname", scope: !9754, file: !3, line: 2103, type: !698)
!9761 = !DILocalVariable(name: "head_code", scope: !9762, file: !3, line: 2128, type: !612)
!9762 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 2127, column: 5)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 2126, column: 3)
!9764 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 2126, column: 3)
!9765 = !DILocalVariable(name: "end_code", scope: !9762, file: !3, line: 2128, type: !612)
!9766 = !DILocalVariable(name: "head_name", scope: !9762, file: !3, line: 2129, type: !698)
!9767 = !DILocalVariable(name: "end_name", scope: !9762, file: !3, line: 2129, type: !698)
!9768 = !DILocalVariable(name: "head_line", scope: !9762, file: !3, line: 2130, type: !693)
!9769 = !DILocalVariable(name: "end_line", scope: !9762, file: !3, line: 2131, type: !693)
!9770 = !DILocalVariable(name: "first", scope: !9762, file: !3, line: 2132, type: !1028)
!9771 = !DILocalVariable(name: "last", scope: !9762, file: !3, line: 2133, type: !1028)
!9772 = !DILocation(line: 0, scope: !9754)
!9773 = !DILocation(line: 2100, column: 3, scope: !9754)
!9774 = !DILocation(line: 2101, column: 3, scope: !9754)
!9775 = !DILocation(line: 2104, column: 18, scope: !9754)
!9776 = !DILocation(line: 2104, column: 39, scope: !9754)
!9777 = !DILocation(line: 2104, column: 7, scope: !9754)
!9778 = !DILocation(line: 2107, column: 3, scope: !9754)
!9779 = !DILocation(line: 2108, column: 3, scope: !9754)
!9780 = !DILocation(line: 2109, column: 3, scope: !9754)
!9781 = !DILocation(line: 2112, column: 3, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 2112, column: 3)
!9783 = !DILocation(line: 0, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9782, file: !3, line: 2112, column: 3)
!9785 = !DILocation(line: 2112, column: 3, scope: !9784)
!9786 = !DILocation(line: 2115, column: 9, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 2113, column: 5)
!9788 = !DILocation(line: 2115, column: 12, scope: !9787)
!9789 = !DILocation(line: 2115, column: 18, scope: !9787)
!9790 = !DILocation(line: 2114, column: 7, scope: !9787)
!9791 = !DILocation(line: 2117, column: 11, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 2117, column: 11)
!9793 = !DILocation(line: 2117, column: 14, scope: !9792)
!9794 = !DILocation(line: 2117, column: 20, scope: !9792)
!9795 = !DILocation(line: 2117, column: 11, scope: !9787)
!9796 = !DILocation(line: 2118, column: 2, scope: !9792)
!9797 = !DILocation(line: 2120, column: 2, scope: !9792)
!9798 = !DILocation(line: 2122, column: 7, scope: !9787)
!9799 = distinct !{!9799, !9781, !9800}
!9800 = !DILocation(line: 2123, column: 5, scope: !9782)
!9801 = !DILocation(line: 2124, column: 3, scope: !9754)
!9802 = !DILocation(line: 2126, column: 3, scope: !9764)
!9803 = !DILocation(line: 0, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 2157, column: 7)
!9805 = !DILocation(line: 2126, column: 3, scope: !9763)
!9806 = !DILocation(line: 0, scope: !9764)
!9807 = !DILocation(line: 0, scope: !9762)
!9808 = !DILocation(line: 2132, column: 22, scope: !9762)
!9809 = !DILocation(line: 2133, column: 21, scope: !9762)
!9810 = !DILocation(line: 2135, column: 11, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 2135, column: 11)
!9812 = !DILocation(line: 2135, column: 11, scope: !9762)
!9813 = !DILocation(line: 2137, column: 16, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 2136, column: 2)
!9815 = !DILocation(line: 2138, column: 16, scope: !9814)
!9816 = !DILocation(line: 2139, column: 16, scope: !9814)
!9817 = !DILocation(line: 2140, column: 2, scope: !9814)
!9818 = !DILocation(line: 0, scope: !9811)
!9819 = !DILocation(line: 2144, column: 11, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 2144, column: 11)
!9821 = !DILocation(line: 2144, column: 11, scope: !9762)
!9822 = !DILocation(line: 2146, column: 15, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 2145, column: 2)
!9824 = !DILocation(line: 2147, column: 15, scope: !9823)
!9825 = !DILocation(line: 2148, column: 15, scope: !9823)
!9826 = !DILocation(line: 2149, column: 2, scope: !9823)
!9827 = !DILocation(line: 0, scope: !9820)
!9828 = !DILocation(line: 2154, column: 13, scope: !9762)
!9829 = !DILocation(line: 2153, column: 7, scope: !9762)
!9830 = !DILocation(line: 2157, column: 7, scope: !9804)
!9831 = !DILocation(line: 2157, column: 7, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 2157, column: 7)
!9833 = !DILocation(line: 2159, column: 8, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 2159, column: 8)
!9835 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 2158, column: 2)
!9836 = !DILocation(line: 2159, column: 11, scope: !9834)
!9837 = !DILocation(line: 2159, column: 19, scope: !9834)
!9838 = !DILocation(line: 2159, column: 16, scope: !9834)
!9839 = !DILocation(line: 0, scope: !9834)
!9840 = !DILocation(line: 2159, column: 8, scope: !9835)
!9841 = !DILocation(line: 2160, column: 6, scope: !9834)
!9842 = !DILocation(line: 2162, column: 90, scope: !9834)
!9843 = !DILocation(line: 2162, column: 6, scope: !9834)
!9844 = !DILocation(line: 2164, column: 8, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 2164, column: 8)
!9846 = !DILocation(line: 2164, column: 11, scope: !9845)
!9847 = !DILocation(line: 2164, column: 17, scope: !9845)
!9848 = !DILocation(line: 2164, column: 8, scope: !9835)
!9849 = !DILocation(line: 2165, column: 6, scope: !9845)
!9850 = !DILocation(line: 2167, column: 6, scope: !9845)
!9851 = !DILocation(line: 2169, column: 4, scope: !9835)
!9852 = distinct !{!9852, !9830, !9853}
!9853 = !DILocation(line: 2170, column: 2, scope: !9804)
!9854 = !DILocation(line: 2172, column: 15, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 2172, column: 11)
!9856 = !DILocation(line: 2172, column: 26, scope: !9855)
!9857 = !DILocation(line: 2172, column: 23, scope: !9855)
!9858 = !DILocation(line: 2172, column: 11, scope: !9762)
!9859 = !DILocation(line: 2173, column: 2, scope: !9855)
!9860 = !DILocation(line: 0, scope: !9763)
!9861 = distinct !{!9861, !9802, !9862}
!9862 = !DILocation(line: 2174, column: 5, scope: !9764)
!9863 = !DILocation(line: 2176, column: 3, scope: !9754)
!9864 = !DILocation(line: 2177, column: 1, scope: !9754)
!9865 = distinct !DISubprogram(name: "gsi_start", scope: !613, file: !613, line: 4403, type: !9866, scopeLine: 4404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9868)
!9866 = !DISubroutineType(types: !9867)
!9867 = !{!2222, !1018}
!9868 = !{!9869, !9870}
!9869 = !DILocalVariable(name: "seq", arg: 1, scope: !9865, file: !613, line: 4403, type: !1018)
!9870 = !DILocalVariable(name: "i", scope: !9865, file: !613, line: 4405, type: !2222)
!9871 = !DILocation(line: 0, scope: !9865)
!9872 = !DILocation(line: 4405, column: 24, scope: !9865)
!9873 = !DILocation(line: 4407, column: 11, scope: !9865)
!9874 = !DILocation(line: 4407, column: 5, scope: !9865)
!9875 = !DILocation(line: 4407, column: 9, scope: !9865)
!9876 = !DILocation(line: 4408, column: 5, scope: !9865)
!9877 = !DILocation(line: 4408, column: 9, scope: !9865)
!9878 = !DILocation(line: 4409, column: 11, scope: !9865)
!9879 = !DILocation(line: 4409, column: 17, scope: !9865)
!9880 = !DILocation(line: 4409, column: 27, scope: !9865)
!9881 = !DILocation(line: 4409, column: 20, scope: !9865)
!9882 = !DILocation(line: 4409, column: 10, scope: !9865)
!9883 = !DILocation(line: 4409, column: 35, scope: !9865)
!9884 = !DILocation(line: 4409, column: 5, scope: !9865)
!9885 = !DILocation(line: 4409, column: 8, scope: !9865)
!9886 = !DILocation(line: 4411, column: 3, scope: !9865)
!9887 = distinct !DISubprogram(name: "stmt_starts_bb_p", scope: !3, file: !3, line: 2285, type: !9888, scopeLine: 2286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9890)
!9888 = !DISubroutineType(types: !9889)
!9889 = !{!692, !1028, !1028}
!9890 = !{!9891, !9892}
!9891 = !DILocalVariable(name: "stmt", arg: 1, scope: !9887, file: !3, line: 2285, type: !1028)
!9892 = !DILocalVariable(name: "prev_stmt", arg: 2, scope: !9887, file: !3, line: 2285, type: !1028)
!9893 = !DILocation(line: 0, scope: !9887)
!9894 = !DILocation(line: 2287, column: 12, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 2287, column: 7)
!9896 = !DILocation(line: 2287, column: 7, scope: !9887)
!9897 = !DILocation(line: 2293, column: 7, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 2293, column: 7)
!9899 = !DILocation(line: 2293, column: 26, scope: !9898)
!9900 = !DILocation(line: 2293, column: 7, scope: !9887)
!9901 = !DILocation(line: 2296, column: 11, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 2296, column: 11)
!9903 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 2294, column: 5)
!9904 = !DILocation(line: 2297, column: 4, scope: !9902)
!9905 = !DILocation(line: 2297, column: 7, scope: !9902)
!9906 = !DILocation(line: 2300, column: 11, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 2300, column: 11)
!9908 = !DILocation(line: 2296, column: 11, scope: !9903)
!9909 = !DILocation(line: 2300, column: 24, scope: !9907)
!9910 = !DILocation(line: 2300, column: 48, scope: !9907)
!9911 = !DILocation(line: 2300, column: 11, scope: !9903)
!9912 = !DILocation(line: 2302, column: 8, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 2302, column: 8)
!9914 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 2301, column: 2)
!9915 = !DILocation(line: 2302, column: 8, scope: !9914)
!9916 = !DILocation(line: 2305, column: 31, scope: !9914)
!9917 = !DILocation(line: 2306, column: 4, scope: !9914)
!9918 = !DILocation(line: 2313, column: 1, scope: !9887)
!9919 = distinct !DISubprogram(name: "gimple_has_lhs", scope: !613, file: !613, line: 2210, type: !3633, scopeLine: 2211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9920)
!9920 = !{!9921}
!9921 = !DILocalVariable(name: "stmt", arg: 1, scope: !9919, file: !613, line: 2210, type: !1028)
!9922 = !DILocation(line: 0, scope: !9919)
!9923 = !DILocation(line: 2212, column: 11, scope: !9919)
!9924 = !DILocation(line: 2213, column: 4, scope: !9919)
!9925 = !DILocation(line: 2213, column: 8, scope: !9919)
!9926 = !DILocation(line: 2214, column: 8, scope: !9919)
!9927 = !DILocation(line: 2214, column: 11, scope: !9919)
!9928 = !DILocation(line: 2214, column: 34, scope: !9919)
!9929 = !DILocation(line: 2212, column: 3, scope: !9919)
!9930 = distinct !DISubprogram(name: "gimple_set_location", scope: !613, file: !613, line: 1156, type: !9931, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9933)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{null, !1028, !829}
!9933 = !{!9934, !9935}
!9934 = !DILocalVariable(name: "g", arg: 1, scope: !9930, file: !613, line: 1156, type: !1028)
!9935 = !DILocalVariable(name: "location", arg: 2, scope: !9930, file: !613, line: 1156, type: !829)
!9936 = !DILocation(line: 0, scope: !9930)
!9937 = !DILocation(line: 1158, column: 13, scope: !9930)
!9938 = !DILocation(line: 1158, column: 22, scope: !9930)
!9939 = !DILocation(line: 1159, column: 1, scope: !9930)
!9940 = distinct !DISubprogram(name: "gimple_set_block", scope: !613, file: !613, line: 1130, type: !3551, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9941)
!9941 = !{!9942, !9943}
!9942 = !DILocalVariable(name: "g", arg: 1, scope: !9940, file: !613, line: 1130, type: !1028)
!9943 = !DILocalVariable(name: "block", arg: 2, scope: !9940, file: !613, line: 1130, type: !704)
!9944 = !DILocation(line: 0, scope: !9940)
!9945 = !DILocation(line: 1132, column: 13, scope: !9940)
!9946 = !DILocation(line: 1132, column: 19, scope: !9940)
!9947 = !DILocation(line: 1133, column: 1, scope: !9940)
!9948 = distinct !DISubprogram(name: "gimple_block", scope: !613, file: !613, line: 1121, type: !3101, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9949)
!9949 = !{!9950}
!9950 = !DILocalVariable(name: "g", arg: 1, scope: !9948, file: !613, line: 1121, type: !3078)
!9951 = !DILocation(line: 0, scope: !9948)
!9952 = !DILocation(line: 1123, column: 20, scope: !9948)
!9953 = !DILocation(line: 1123, column: 3, scope: !9948)
!9954 = distinct !DISubprogram(name: "gimple_seq_first", scope: !613, file: !613, line: 159, type: !9955, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9957)
!9955 = !DISubroutineType(types: !9956)
!9956 = !{!1023, !6977}
!9957 = !{!9958}
!9958 = !DILocalVariable(name: "s", arg: 1, scope: !9954, file: !613, line: 159, type: !6977)
!9959 = !DILocation(line: 0, scope: !9954)
!9960 = !DILocation(line: 161, column: 10, scope: !9954)
!9961 = !DILocation(line: 161, column: 17, scope: !9954)
!9962 = !DILocation(line: 161, column: 3, scope: !9954)
!9963 = distinct !DISubprogram(name: "is_gimple_assign", scope: !613, file: !613, line: 1677, type: !3903, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9964)
!9964 = !{!9965}
!9965 = !DILocalVariable(name: "gs", arg: 1, scope: !9963, file: !613, line: 1677, type: !3078)
!9966 = !DILocation(line: 0, scope: !9963)
!9967 = !DILocation(line: 1679, column: 10, scope: !9963)
!9968 = !DILocation(line: 1679, column: 27, scope: !9963)
!9969 = !DILocation(line: 1679, column: 3, scope: !9963)
!9970 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !613, file: !613, line: 1878, type: !3101, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9971)
!9971 = !{!9972}
!9972 = !DILocalVariable(name: "gs", arg: 1, scope: !9970, file: !613, line: 1878, type: !3078)
!9973 = !DILocation(line: 0, scope: !9970)
!9974 = !DILocation(line: 1881, column: 10, scope: !9970)
!9975 = !DILocation(line: 1881, column: 3, scope: !9970)
!9976 = distinct !DISubprogram(name: "make_goto_expr_edges", scope: !3, file: !3, line: 995, type: !2377, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9977)
!9977 = !{!9978, !9979, !9980, !9981, !9984, !9985}
!9978 = !DILocalVariable(name: "bb", arg: 1, scope: !9976, file: !3, line: 995, type: !1670)
!9979 = !DILocalVariable(name: "last", scope: !9976, file: !3, line: 997, type: !2222)
!9980 = !DILocalVariable(name: "goto_t", scope: !9976, file: !3, line: 998, type: !1028)
!9981 = !DILocalVariable(name: "dest", scope: !9982, file: !3, line: 1003, type: !704)
!9982 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 1002, column: 5)
!9983 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 1001, column: 7)
!9984 = !DILocalVariable(name: "label_bb", scope: !9982, file: !3, line: 1004, type: !1670)
!9985 = !DILocalVariable(name: "e", scope: !9982, file: !3, line: 1005, type: !1008)
!9986 = !DILocation(line: 0, scope: !9976)
!9987 = !DILocation(line: 997, column: 3, scope: !9976)
!9988 = !DILocation(line: 997, column: 31, scope: !9976)
!9989 = !DILocation(line: 998, column: 19, scope: !9976)
!9990 = !DILocation(line: 1001, column: 7, scope: !9983)
!9991 = !DILocation(line: 1001, column: 7, scope: !9976)
!9992 = !DILocation(line: 1003, column: 19, scope: !9982)
!9993 = !DILocation(line: 0, scope: !9982)
!9994 = !DILocation(line: 1004, column: 30, scope: !9982)
!9995 = !DILocation(line: 1005, column: 16, scope: !9982)
!9996 = !DILocation(line: 1006, column: 23, scope: !9982)
!9997 = !DILocation(line: 1006, column: 10, scope: !9982)
!9998 = !DILocation(line: 1006, column: 21, scope: !9982)
!9999 = !DILocation(line: 1007, column: 7, scope: !9982)
!10000 = !DILocation(line: 1008, column: 14, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 1008, column: 11)
!10002 = !DILocation(line: 1008, column: 11, scope: !10001)
!10003 = !DILocation(line: 1008, column: 11, scope: !9982)
!10004 = !DILocation(line: 1009, column: 18, scope: !10001)
!10005 = !DILocation(line: 1009, column: 5, scope: !10001)
!10006 = !DILocation(line: 1009, column: 16, scope: !10001)
!10007 = !DILocation(line: 1009, column: 2, scope: !10001)
!10008 = !DILocation(line: 1010, column: 7, scope: !9982)
!10009 = !DILocation(line: 1015, column: 3, scope: !9976)
!10010 = !DILocation(line: 1016, column: 1, scope: !9976)
!10011 = distinct !DISubprogram(name: "make_cond_expr_edges", scope: !3, file: !3, line: 779, type: !2377, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10012)
!10012 = !{!10013, !10014, !10015, !10016, !10017, !10018, !10019, !10020, !10021, !10022}
!10013 = !DILocalVariable(name: "bb", arg: 1, scope: !10011, file: !3, line: 779, type: !1670)
!10014 = !DILocalVariable(name: "entry", scope: !10011, file: !3, line: 781, type: !1028)
!10015 = !DILocalVariable(name: "then_stmt", scope: !10011, file: !3, line: 782, type: !1028)
!10016 = !DILocalVariable(name: "else_stmt", scope: !10011, file: !3, line: 782, type: !1028)
!10017 = !DILocalVariable(name: "then_bb", scope: !10011, file: !3, line: 783, type: !1670)
!10018 = !DILocalVariable(name: "else_bb", scope: !10011, file: !3, line: 783, type: !1670)
!10019 = !DILocalVariable(name: "then_label", scope: !10011, file: !3, line: 784, type: !704)
!10020 = !DILocalVariable(name: "else_label", scope: !10011, file: !3, line: 784, type: !704)
!10021 = !DILocalVariable(name: "e", scope: !10011, file: !3, line: 785, type: !1008)
!10022 = !DILocalVariable(name: "entry_locus", scope: !10011, file: !3, line: 786, type: !829)
!10023 = !DILocation(line: 0, scope: !10011)
!10024 = !DILocation(line: 781, column: 18, scope: !10011)
!10025 = !DILocation(line: 788, column: 3, scope: !10011)
!10026 = !DILocation(line: 789, column: 3, scope: !10011)
!10027 = !DILocation(line: 791, column: 17, scope: !10011)
!10028 = !DILocation(line: 794, column: 16, scope: !10011)
!10029 = !DILocation(line: 795, column: 16, scope: !10011)
!10030 = !DILocation(line: 796, column: 13, scope: !10011)
!10031 = !DILocation(line: 797, column: 13, scope: !10011)
!10032 = !DILocation(line: 798, column: 15, scope: !10011)
!10033 = !DILocation(line: 799, column: 15, scope: !10011)
!10034 = !DILocation(line: 801, column: 7, scope: !10011)
!10035 = !DILocation(line: 802, column: 3, scope: !10011)
!10036 = !DILocation(line: 803, column: 19, scope: !10011)
!10037 = !DILocation(line: 803, column: 6, scope: !10011)
!10038 = !DILocation(line: 803, column: 17, scope: !10011)
!10039 = !DILocation(line: 804, column: 7, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 804, column: 7)
!10041 = !DILocation(line: 804, column: 7, scope: !10011)
!10042 = !DILocation(line: 805, column: 21, scope: !10040)
!10043 = !DILocation(line: 805, column: 8, scope: !10040)
!10044 = !DILocation(line: 805, column: 19, scope: !10040)
!10045 = !DILocation(line: 805, column: 5, scope: !10040)
!10046 = !DILocation(line: 806, column: 7, scope: !10011)
!10047 = !DILocation(line: 807, column: 7, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 807, column: 7)
!10049 = !DILocation(line: 807, column: 7, scope: !10011)
!10050 = !DILocation(line: 809, column: 7, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 808, column: 5)
!10052 = !DILocation(line: 810, column: 23, scope: !10051)
!10053 = !DILocation(line: 810, column: 10, scope: !10051)
!10054 = !DILocation(line: 810, column: 21, scope: !10051)
!10055 = !DILocation(line: 811, column: 11, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10051, file: !3, line: 811, column: 11)
!10057 = !DILocation(line: 811, column: 11, scope: !10051)
!10058 = !DILocation(line: 812, column: 18, scope: !10056)
!10059 = !DILocation(line: 812, column: 5, scope: !10056)
!10060 = !DILocation(line: 812, column: 16, scope: !10056)
!10061 = !DILocation(line: 812, column: 2, scope: !10056)
!10062 = !DILocation(line: 816, column: 3, scope: !10011)
!10063 = !DILocation(line: 817, column: 3, scope: !10011)
!10064 = !DILocation(line: 818, column: 1, scope: !10011)
!10065 = distinct !DISubprogram(name: "make_gimple_switch_edges", scope: !3, file: !3, line: 916, type: !2377, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10066)
!10066 = !{!10067, !10068, !10069, !10070, !10071, !10072, !10076}
!10067 = !DILocalVariable(name: "bb", arg: 1, scope: !10065, file: !3, line: 916, type: !1670)
!10068 = !DILocalVariable(name: "entry", scope: !10065, file: !3, line: 918, type: !1028)
!10069 = !DILocalVariable(name: "entry_locus", scope: !10065, file: !3, line: 919, type: !829)
!10070 = !DILocalVariable(name: "i", scope: !10065, file: !3, line: 920, type: !1173)
!10071 = !DILocalVariable(name: "n", scope: !10065, file: !3, line: 920, type: !1173)
!10072 = !DILocalVariable(name: "lab", scope: !10073, file: !3, line: 928, type: !704)
!10073 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 927, column: 5)
!10074 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 926, column: 3)
!10075 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 926, column: 3)
!10076 = !DILocalVariable(name: "label_bb", scope: !10073, file: !3, line: 929, type: !1670)
!10077 = !DILocation(line: 0, scope: !10065)
!10078 = !DILocation(line: 918, column: 18, scope: !10065)
!10079 = !DILocation(line: 922, column: 17, scope: !10065)
!10080 = !DILocation(line: 924, column: 7, scope: !10065)
!10081 = !DILocation(line: 926, column: 8, scope: !10075)
!10082 = !DILocation(line: 0, scope: !10075)
!10083 = !DILocation(line: 926, column: 17, scope: !10074)
!10084 = !DILocation(line: 926, column: 3, scope: !10075)
!10085 = !DILocation(line: 928, column: 18, scope: !10073)
!10086 = !DILocation(line: 0, scope: !10073)
!10087 = !DILocation(line: 929, column: 30, scope: !10073)
!10088 = !DILocation(line: 930, column: 7, scope: !10073)
!10089 = !DILocation(line: 931, column: 7, scope: !10073)
!10090 = !DILocation(line: 926, column: 22, scope: !10074)
!10091 = !DILocation(line: 926, column: 3, scope: !10074)
!10092 = distinct !{!10092, !10084, !10093}
!10093 = !DILocation(line: 932, column: 5, scope: !10075)
!10094 = !DILocation(line: 933, column: 1, scope: !10065)
!10095 = distinct !DISubprogram(name: "make_gimple_asm_edges", scope: !3, file: !3, line: 1021, type: !2377, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10096)
!10096 = !{!10097, !10098, !10099, !10100, !10101, !10102, !10106}
!10097 = !DILocalVariable(name: "bb", arg: 1, scope: !10095, file: !3, line: 1021, type: !1670)
!10098 = !DILocalVariable(name: "stmt", scope: !10095, file: !3, line: 1023, type: !1028)
!10099 = !DILocalVariable(name: "stmt_loc", scope: !10095, file: !3, line: 1024, type: !829)
!10100 = !DILocalVariable(name: "i", scope: !10095, file: !3, line: 1025, type: !693)
!10101 = !DILocalVariable(name: "n", scope: !10095, file: !3, line: 1025, type: !693)
!10102 = !DILocalVariable(name: "label", scope: !10103, file: !3, line: 1029, type: !704)
!10103 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 1028, column: 5)
!10104 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 1027, column: 3)
!10105 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 1027, column: 3)
!10106 = !DILocalVariable(name: "label_bb", scope: !10103, file: !3, line: 1030, type: !1670)
!10107 = !DILocation(line: 0, scope: !10095)
!10108 = !DILocation(line: 1023, column: 17, scope: !10095)
!10109 = !DILocation(line: 1024, column: 25, scope: !10095)
!10110 = !DILocation(line: 1025, column: 14, scope: !10095)
!10111 = !DILocation(line: 1027, column: 8, scope: !10105)
!10112 = !DILocation(line: 0, scope: !10105)
!10113 = !DILocation(line: 1027, column: 17, scope: !10104)
!10114 = !DILocation(line: 1027, column: 3, scope: !10105)
!10115 = !DILocation(line: 1029, column: 20, scope: !10103)
!10116 = !DILocation(line: 0, scope: !10103)
!10117 = !DILocation(line: 1030, column: 30, scope: !10103)
!10118 = !DILocation(line: 1031, column: 7, scope: !10103)
!10119 = !DILocation(line: 1032, column: 7, scope: !10103)
!10120 = !DILocation(line: 1027, column: 22, scope: !10104)
!10121 = !DILocation(line: 1027, column: 3, scope: !10104)
!10122 = distinct !{!10122, !10114, !10123}
!10123 = !DILocation(line: 1033, column: 5, scope: !10105)
!10124 = !DILocation(line: 1034, column: 1, scope: !10095)
!10125 = distinct !DISubprogram(name: "single_succ", scope: !382, file: !382, line: 663, type: !10126, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10128)
!10126 = !DISubroutineType(types: !10127)
!10127 = !{!1670, !2400}
!10128 = !{!10129}
!10129 = !DILocalVariable(name: "bb", arg: 1, scope: !10125, file: !382, line: 663, type: !2400)
!10130 = !DILocation(line: 0, scope: !10125)
!10131 = !DILocation(line: 665, column: 10, scope: !10125)
!10132 = !DILocation(line: 665, column: 33, scope: !10125)
!10133 = !DILocation(line: 665, column: 3, scope: !10125)
!10134 = distinct !DISubprogram(name: "assign_discriminator", scope: !3, file: !3, line: 762, type: !10135, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10137)
!10135 = !DISubroutineType(types: !10136)
!10136 = !{null, !829, !1670}
!10137 = !{!10138, !10139, !10140, !10141}
!10138 = !DILocalVariable(name: "locus", arg: 1, scope: !10134, file: !3, line: 762, type: !829)
!10139 = !DILocalVariable(name: "bb", arg: 2, scope: !10134, file: !3, line: 762, type: !1670)
!10140 = !DILocalVariable(name: "first_in_to_bb", scope: !10134, file: !3, line: 764, type: !1028)
!10141 = !DILocalVariable(name: "last_in_to_bb", scope: !10134, file: !3, line: 764, type: !1028)
!10142 = !DILocation(line: 0, scope: !10134)
!10143 = !DILocation(line: 766, column: 13, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 766, column: 7)
!10145 = !DILocation(line: 766, column: 18, scope: !10144)
!10146 = !DILocation(line: 766, column: 25, scope: !10144)
!10147 = !DILocation(line: 766, column: 39, scope: !10144)
!10148 = !DILocation(line: 766, column: 7, scope: !10134)
!10149 = !DILocation(line: 769, column: 20, scope: !10134)
!10150 = !DILocation(line: 770, column: 19, scope: !10134)
!10151 = !DILocation(line: 771, column: 8, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 771, column: 7)
!10153 = !DILocation(line: 771, column: 23, scope: !10152)
!10154 = !DILocation(line: 771, column: 46, scope: !10152)
!10155 = !DILocation(line: 771, column: 26, scope: !10152)
!10156 = !DILocation(line: 772, column: 7, scope: !10152)
!10157 = !DILocation(line: 772, column: 11, scope: !10152)
!10158 = !DILocation(line: 772, column: 25, scope: !10152)
!10159 = !DILocation(line: 772, column: 48, scope: !10152)
!10160 = !DILocation(line: 772, column: 28, scope: !10152)
!10161 = !DILocation(line: 771, column: 7, scope: !10134)
!10162 = !DILocation(line: 773, column: 25, scope: !10152)
!10163 = !DILocation(line: 773, column: 23, scope: !10152)
!10164 = !DILocation(line: 773, column: 5, scope: !10152)
!10165 = !DILocation(line: 774, column: 1, scope: !10134)
!10166 = distinct !DISubprogram(name: "first_non_label_stmt", scope: !3, file: !3, line: 2352, type: !3055, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10167)
!10167 = !{!10168, !10169}
!10168 = !DILocalVariable(name: "bb", arg: 1, scope: !10166, file: !3, line: 2352, type: !1670)
!10169 = !DILocalVariable(name: "i", scope: !10166, file: !3, line: 2354, type: !2222)
!10170 = !DILocation(line: 0, scope: !10166)
!10171 = !DILocation(line: 2354, column: 3, scope: !10166)
!10172 = !DILocation(line: 2354, column: 28, scope: !10166)
!10173 = !DILocation(line: 2355, column: 3, scope: !10166)
!10174 = !DILocation(line: 2355, column: 11, scope: !10166)
!10175 = !DILocation(line: 2355, column: 25, scope: !10166)
!10176 = !DILocation(line: 2355, column: 41, scope: !10166)
!10177 = !DILocation(line: 2355, column: 28, scope: !10166)
!10178 = !DILocation(line: 2355, column: 55, scope: !10166)
!10179 = !DILocation(line: 2356, column: 5, scope: !10166)
!10180 = distinct !{!10180, !10173, !10181}
!10181 = !DILocation(line: 2356, column: 17, scope: !10166)
!10182 = !DILocation(line: 2357, column: 11, scope: !10166)
!10183 = !DILocation(line: 2357, column: 10, scope: !10166)
!10184 = !DILocation(line: 2357, column: 27, scope: !10166)
!10185 = !DILocation(line: 2358, column: 1, scope: !10166)
!10186 = !DILocation(line: 2357, column: 3, scope: !10166)
!10187 = distinct !DISubprogram(name: "same_line_p", scope: !3, file: !3, line: 739, type: !10188, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10190)
!10188 = !DISubroutineType(types: !10189)
!10189 = !{!692, !829, !829}
!10190 = !{!10191, !10192, !10193, !10201}
!10191 = !DILocalVariable(name: "locus1", arg: 1, scope: !10187, file: !3, line: 739, type: !829)
!10192 = !DILocalVariable(name: "locus2", arg: 2, scope: !10187, file: !3, line: 739, type: !829)
!10193 = !DILocalVariable(name: "from", scope: !10187, file: !3, line: 741, type: !10194)
!10194 = !DIDerivedType(tag: DW_TAG_typedef, name: "expanded_location", file: !830, line: 52, baseType: !10195)
!10195 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !830, line: 40, size: 192, elements: !10196)
!10196 = !{!10197, !10198, !10199, !10200}
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !10195, file: !830, line: 43, baseType: !698, size: 64)
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !10195, file: !830, line: 46, baseType: !693, size: 32, offset: 64)
!10199 = !DIDerivedType(tag: DW_TAG_member, name: "column", scope: !10195, file: !830, line: 48, baseType: !693, size: 32, offset: 96)
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "sysp", scope: !10195, file: !830, line: 51, baseType: !692, size: 8, offset: 128)
!10201 = !DILocalVariable(name: "to", scope: !10187, file: !3, line: 741, type: !10194)
!10202 = !DILocation(line: 0, scope: !10187)
!10203 = !DILocation(line: 741, column: 3, scope: !10187)
!10204 = !DILocation(line: 743, column: 14, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 743, column: 7)
!10206 = !DILocation(line: 743, column: 7, scope: !10187)
!10207 = !DILocation(line: 746, column: 10, scope: !10187)
!10208 = !DILocation(line: 747, column: 8, scope: !10187)
!10209 = !DILocation(line: 749, column: 12, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 749, column: 7)
!10211 = !DILocation(line: 749, column: 23, scope: !10210)
!10212 = !DILocation(line: 749, column: 17, scope: !10210)
!10213 = !DILocation(line: 749, column: 7, scope: !10187)
!10214 = !DILocation(line: 751, column: 12, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 751, column: 7)
!10216 = !DILocation(line: 751, column: 23, scope: !10215)
!10217 = !DILocation(line: 751, column: 17, scope: !10215)
!10218 = !DILocation(line: 751, column: 7, scope: !10187)
!10219 = !DILocation(line: 753, column: 21, scope: !10187)
!10220 = !DILocation(line: 754, column: 11, scope: !10187)
!10221 = !DILocation(line: 754, column: 22, scope: !10187)
!10222 = !DILocation(line: 755, column: 11, scope: !10187)
!10223 = !DILocation(line: 755, column: 14, scope: !10187)
!10224 = !DILocation(line: 755, column: 42, scope: !10187)
!10225 = !DILocation(line: 753, column: 3, scope: !10187)
!10226 = !DILocation(line: 756, column: 1, scope: !10187)
!10227 = distinct !DISubprogram(name: "next_discriminator_for_locus", scope: !3, file: !3, line: 714, type: !10228, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10230)
!10228 = !DISubroutineType(types: !10229)
!10229 = !{!693, !829}
!10230 = !{!10231, !10232, !10233}
!10231 = !DILocalVariable(name: "locus", arg: 1, scope: !10227, file: !3, line: 714, type: !829)
!10232 = !DILocalVariable(name: "item", scope: !10227, file: !3, line: 716, type: !2194)
!10233 = !DILocalVariable(name: "slot", scope: !10227, file: !3, line: 717, type: !2198)
!10234 = !DILocation(line: 0, scope: !10227)
!10235 = !DILocation(line: 716, column: 3, scope: !10227)
!10236 = !DILocation(line: 719, column: 8, scope: !10227)
!10237 = !DILocation(line: 719, column: 14, scope: !10227)
!10238 = !DILocation(line: 720, column: 8, scope: !10227)
!10239 = !DILocation(line: 720, column: 22, scope: !10227)
!10240 = !DILocation(line: 722, column: 33, scope: !10227)
!10241 = !DILocation(line: 722, column: 7, scope: !10227)
!10242 = !DILocation(line: 721, column: 10, scope: !10227)
!10243 = !DILocation(line: 724, column: 3, scope: !10227)
!10244 = !DILocation(line: 725, column: 7, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 725, column: 7)
!10246 = !DILocation(line: 725, column: 13, scope: !10245)
!10247 = !DILocation(line: 725, column: 7, scope: !10227)
!10248 = !DILocation(line: 727, column: 15, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10245, file: !3, line: 726, column: 5)
!10250 = !DILocation(line: 727, column: 13, scope: !10249)
!10251 = !DILocation(line: 728, column: 7, scope: !10249)
!10252 = !DILocation(line: 729, column: 8, scope: !10249)
!10253 = !DILocation(line: 729, column: 16, scope: !10249)
!10254 = !DILocation(line: 729, column: 22, scope: !10249)
!10255 = !DILocation(line: 730, column: 8, scope: !10249)
!10256 = !DILocation(line: 730, column: 16, scope: !10249)
!10257 = !DILocation(line: 730, column: 30, scope: !10249)
!10258 = !DILocation(line: 732, column: 4, scope: !10227)
!10259 = !DILocation(line: 731, column: 5, scope: !10249)
!10260 = !DILocation(line: 732, column: 12, scope: !10227)
!10261 = !DILocation(line: 732, column: 25, scope: !10227)
!10262 = !DILocation(line: 733, column: 11, scope: !10227)
!10263 = !DILocation(line: 733, column: 19, scope: !10227)
!10264 = !DILocation(line: 734, column: 1, scope: !10227)
!10265 = !DILocation(line: 733, column: 3, scope: !10227)
!10266 = distinct !DISubprogram(name: "get_lineno", scope: !4075, file: !4075, line: 172, type: !10267, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10269)
!10267 = !DISubroutineType(types: !10268)
!10268 = !{!693, !3078}
!10269 = !{!10270, !10271}
!10270 = !DILocalVariable(name: "stmt", arg: 1, scope: !10266, file: !4075, line: 172, type: !3078)
!10271 = !DILocalVariable(name: "loc", scope: !10266, file: !4075, line: 174, type: !829)
!10272 = !DILocation(line: 0, scope: !10266)
!10273 = !DILocation(line: 176, column: 8, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10266, file: !4075, line: 176, column: 7)
!10275 = !DILocation(line: 176, column: 7, scope: !10266)
!10276 = !DILocation(line: 179, column: 9, scope: !10266)
!10277 = !DILocation(line: 180, column: 11, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10266, file: !4075, line: 180, column: 7)
!10279 = !DILocation(line: 180, column: 7, scope: !10266)
!10280 = !DILocation(line: 183, column: 10, scope: !10266)
!10281 = !DILocation(line: 183, column: 3, scope: !10266)
!10282 = !DILocation(line: 184, column: 1, scope: !10266)
!10283 = distinct !DISubprogram(name: "bb_seq", scope: !613, file: !613, line: 237, type: !10284, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10286)
!10284 = !DISubroutineType(types: !10285)
!10285 = !{!1018, !2400}
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "bb", arg: 1, scope: !10283, file: !613, line: 237, type: !2400)
!10288 = !DILocation(line: 0, scope: !10283)
!10289 = !DILocation(line: 239, column: 17, scope: !10283)
!10290 = !DILocation(line: 239, column: 23, scope: !10283)
!10291 = !DILocation(line: 239, column: 33, scope: !10283)
!10292 = !DILocation(line: 239, column: 43, scope: !10283)
!10293 = !DILocation(line: 239, column: 36, scope: !10283)
!10294 = !DILocation(line: 239, column: 10, scope: !10283)
!10295 = !DILocation(line: 239, column: 68, scope: !10283)
!10296 = !DILocation(line: 239, column: 3, scope: !10283)
!10297 = distinct !DISubprogram(name: "gimple_set_op", scope: !613, file: !613, line: 1663, type: !3858, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10298)
!10298 = !{!10299, !10300, !10301}
!10299 = !DILocalVariable(name: "gs", arg: 1, scope: !10297, file: !613, line: 1663, type: !1028)
!10300 = !DILocalVariable(name: "i", arg: 2, scope: !10297, file: !613, line: 1663, type: !7)
!10301 = !DILocalVariable(name: "op", arg: 3, scope: !10297, file: !613, line: 1663, type: !704)
!10302 = !DILocation(line: 0, scope: !10297)
!10303 = !DILocation(line: 1665, column: 3, scope: !10297)
!10304 = !DILocation(line: 1671, column: 3, scope: !10297)
!10305 = !DILocation(line: 1671, column: 22, scope: !10297)
!10306 = !DILocation(line: 1672, column: 1, scope: !10297)
!10307 = distinct !DISubprogram(name: "gimple_has_ops", scope: !613, file: !613, line: 1274, type: !3903, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10308)
!10308 = !{!10309}
!10309 = !DILocalVariable(name: "g", arg: 1, scope: !10307, file: !613, line: 1274, type: !3078)
!10310 = !DILocation(line: 0, scope: !10307)
!10311 = !DILocation(line: 1276, column: 10, scope: !10307)
!10312 = !DILocation(line: 1276, column: 26, scope: !10307)
!10313 = !DILocation(line: 1276, column: 41, scope: !10307)
!10314 = !DILocation(line: 1276, column: 44, scope: !10307)
!10315 = !DILocation(line: 1276, column: 60, scope: !10307)
!10316 = !DILocation(line: 1276, column: 3, scope: !10307)
!10317 = distinct !DISubprogram(name: "gimple_ops", scope: !613, file: !613, line: 1614, type: !10318, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10320)
!10318 = !DISubroutineType(types: !10319)
!10319 = !{!1062, !1028}
!10320 = !{!10321, !10322}
!10321 = !DILocalVariable(name: "gs", arg: 1, scope: !10317, file: !613, line: 1614, type: !1028)
!10322 = !DILocalVariable(name: "off", scope: !10317, file: !613, line: 1616, type: !1173)
!10323 = !DILocation(line: 0, scope: !10317)
!10324 = !DILocation(line: 1621, column: 28, scope: !10317)
!10325 = !DILocation(line: 1621, column: 9, scope: !10317)
!10326 = !DILocation(line: 1622, column: 3, scope: !10317)
!10327 = !DILocation(line: 1624, column: 20, scope: !10317)
!10328 = !DILocation(line: 1624, column: 32, scope: !10317)
!10329 = !DILocation(line: 1624, column: 10, scope: !10317)
!10330 = !DILocation(line: 1624, column: 3, scope: !10317)
!10331 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !613, file: !613, line: 1073, type: !10332, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10334)
!10332 = !DISubroutineType(types: !10333)
!10333 = !{!651, !1028}
!10334 = !{!10335}
!10335 = !DILocalVariable(name: "gs", arg: 1, scope: !10331, file: !613, line: 1073, type: !1028)
!10336 = !DILocation(line: 0, scope: !10331)
!10337 = !DILocation(line: 1075, column: 24, scope: !10331)
!10338 = !DILocation(line: 1075, column: 10, scope: !10331)
!10339 = !DILocation(line: 1075, column: 3, scope: !10331)
!10340 = distinct !DISubprogram(name: "gss_for_code", scope: !613, file: !613, line: 1061, type: !10341, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10343)
!10341 = !DISubroutineType(types: !10342)
!10342 = !{!651, !612}
!10343 = !{!10344}
!10344 = !DILocalVariable(name: "code", arg: 1, scope: !10340, file: !613, line: 1061, type: !612)
!10345 = !DILocation(line: 0, scope: !10340)
!10346 = !DILocation(line: 1066, column: 10, scope: !10340)
!10347 = !DILocation(line: 1066, column: 3, scope: !10340)
!10348 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_iterate", scope: !6, file: !6, line: 188, type: !10349, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10354)
!10349 = !DISubroutineType(types: !10350)
!10350 = !{!693, !10351, !7, !10353}
!10351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10352, size: 64)
!10352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1578)
!10353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!10354 = !{!10355, !10356, !10357}
!10355 = !DILocalVariable(name: "vec_", arg: 1, scope: !10348, file: !6, line: 188, type: !10351)
!10356 = !DILocalVariable(name: "ix_", arg: 2, scope: !10348, file: !6, line: 188, type: !7)
!10357 = !DILocalVariable(name: "ptr", arg: 3, scope: !10348, file: !6, line: 188, type: !10353)
!10358 = !DILocation(line: 0, scope: !10348)
!10359 = !DILocation(line: 188, column: 1, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10348, file: !6, line: 188, column: 1)
!10361 = !DILocation(line: 188, column: 1, scope: !10348)
!10362 = !DILocation(line: 188, column: 1, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10360, file: !6, line: 188, column: 1)
!10364 = !DILocation(line: 188, column: 1, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10360, file: !6, line: 188, column: 1)
!10366 = !DILocation(line: 0, scope: !10360)
!10367 = distinct !DISubprogram(name: "ehr_next", scope: !6, file: !6, line: 364, type: !10368, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10370)
!10368 = !DISubroutineType(types: !10369)
!10369 = !{!1511, !1511, !1511}
!10370 = !{!10371, !10372}
!10371 = !DILocalVariable(name: "r", arg: 1, scope: !10367, file: !6, line: 364, type: !1511)
!10372 = !DILocalVariable(name: "start", arg: 2, scope: !10367, file: !6, line: 364, type: !1511)
!10373 = !DILocation(line: 0, scope: !10367)
!10374 = !DILocation(line: 366, column: 10, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10367, file: !6, line: 366, column: 7)
!10376 = !DILocation(line: 366, column: 7, scope: !10375)
!10377 = !DILocation(line: 366, column: 7, scope: !10367)
!10378 = !DILocation(line: 367, column: 5, scope: !10375)
!10379 = !DILocation(line: 368, column: 15, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10375, file: !6, line: 368, column: 12)
!10381 = !DILocation(line: 368, column: 12, scope: !10380)
!10382 = !DILocation(line: 368, column: 30, scope: !10380)
!10383 = !DILocation(line: 368, column: 25, scope: !10380)
!10384 = !DILocation(line: 372, column: 7, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10380, file: !6, line: 371, column: 5)
!10386 = !DILocation(line: 369, column: 5, scope: !10380)
!10387 = !DILocation(line: 374, column: 11, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10385, file: !6, line: 373, column: 2)
!10389 = !DILocation(line: 375, column: 10, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10388, file: !6, line: 375, column: 8)
!10391 = !DILocation(line: 375, column: 8, scope: !10388)
!10392 = !DILocation(line: 378, column: 17, scope: !10385)
!10393 = !DILocation(line: 378, column: 27, scope: !10385)
!10394 = !DILocation(line: 377, column: 2, scope: !10388)
!10395 = distinct !{!10395, !10384, !10396}
!10396 = !DILocation(line: 378, column: 34, scope: !10385)
!10397 = !DILocation(line: 382, column: 1, scope: !10367)
!10398 = distinct !DISubprogram(name: "gimple_set_num_ops", scope: !613, file: !613, line: 1605, type: !3870, scopeLine: 1606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10399)
!10399 = !{!10400, !10401}
!10400 = !DILocalVariable(name: "gs", arg: 1, scope: !10398, file: !613, line: 1605, type: !1028)
!10401 = !DILocalVariable(name: "num_ops", arg: 2, scope: !10398, file: !613, line: 1605, type: !7)
!10402 = !DILocation(line: 0, scope: !10398)
!10403 = !DILocation(line: 1607, column: 14, scope: !10398)
!10404 = !DILocation(line: 1607, column: 22, scope: !10398)
!10405 = !DILocation(line: 1608, column: 1, scope: !10398)
!10406 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !4075, file: !4075, line: 1018, type: !10407, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10409)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{null, !2200, !4078}
!10409 = !{!10410, !10411, !10412, !10413, !10414, !10415, !10416, !10417}
!10410 = !DILocalVariable(name: "head", arg: 1, scope: !10406, file: !4075, line: 1018, type: !2200)
!10411 = !DILocalVariable(name: "imm", arg: 2, scope: !10406, file: !4075, line: 1018, type: !4078)
!10412 = !DILocalVariable(name: "use_p", scope: !10406, file: !4075, line: 1020, type: !2200)
!10413 = !DILocalVariable(name: "last_p", scope: !10406, file: !4075, line: 1021, type: !2200)
!10414 = !DILocalVariable(name: "head_stmt", scope: !10406, file: !4075, line: 1022, type: !1028)
!10415 = !DILocalVariable(name: "use", scope: !10406, file: !4075, line: 1023, type: !704)
!10416 = !DILocalVariable(name: "op_iter", scope: !10406, file: !4075, line: 1024, type: !6708)
!10417 = !DILocalVariable(name: "flag", scope: !10406, file: !4075, line: 1025, type: !693)
!10418 = !DILocation(line: 0, scope: !10406)
!10419 = !DILocation(line: 1022, column: 22, scope: !10406)
!10420 = !DILocation(line: 1023, column: 14, scope: !10406)
!10421 = !DILocation(line: 1024, column: 3, scope: !10406)
!10422 = !DILocation(line: 1028, column: 11, scope: !10406)
!10423 = !DILocation(line: 1030, column: 7, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10406, file: !4075, line: 1030, column: 7)
!10425 = !DILocation(line: 1030, column: 31, scope: !10424)
!10426 = !DILocation(line: 1030, column: 7, scope: !10406)
!10427 = !DILocation(line: 1032, column: 7, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10429, file: !4075, line: 1032, column: 7)
!10429 = distinct !DILexicalBlock(scope: !10424, file: !4075, line: 1031, column: 5)
!10430 = !DILocation(line: 0, scope: !10428)
!10431 = !DILocation(line: 1032, column: 7, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10428, file: !4075, line: 1032, column: 7)
!10433 = !DILocation(line: 1033, column: 6, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10432, file: !4075, line: 1033, column: 6)
!10435 = !DILocation(line: 1033, column: 27, scope: !10434)
!10436 = !DILocation(line: 1033, column: 6, scope: !10432)
!10437 = !DILocation(line: 1034, column: 13, scope: !10434)
!10438 = !DILocation(line: 1034, column: 4, scope: !10434)
!10439 = distinct !{!10439, !10427, !10440}
!10440 = !DILocation(line: 1034, column: 53, scope: !10428)
!10441 = !DILocation(line: 1038, column: 11, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10424, file: !4075, line: 1037, column: 5)
!10443 = !DILocation(line: 1040, column: 4, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !4075, line: 1040, column: 4)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !4075, line: 1039, column: 2)
!10446 = distinct !DILexicalBlock(scope: !10442, file: !4075, line: 1038, column: 11)
!10447 = !DILocation(line: 0, scope: !10444)
!10448 = !DILocation(line: 1040, column: 4, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10444, file: !4075, line: 1040, column: 4)
!10450 = !DILocation(line: 1041, column: 10, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10449, file: !4075, line: 1041, column: 10)
!10452 = !DILocation(line: 1041, column: 31, scope: !10451)
!10453 = !DILocation(line: 1041, column: 10, scope: !10449)
!10454 = !DILocation(line: 1042, column: 17, scope: !10451)
!10455 = !DILocation(line: 1042, column: 8, scope: !10451)
!10456 = distinct !{!10456, !10443, !10457}
!10457 = !DILocation(line: 1042, column: 57, scope: !10444)
!10458 = !DILocation(line: 1044, column: 25, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10446, file: !4075, line: 1044, column: 16)
!10460 = !DILocation(line: 1044, column: 53, scope: !10459)
!10461 = !DILocation(line: 1044, column: 16, scope: !10446)
!10462 = !DILocation(line: 1046, column: 8, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !4075, line: 1046, column: 8)
!10464 = distinct !DILexicalBlock(scope: !10459, file: !4075, line: 1045, column: 2)
!10465 = !DILocation(line: 1046, column: 29, scope: !10463)
!10466 = !DILocation(line: 1046, column: 8, scope: !10464)
!10467 = !DILocation(line: 1047, column: 15, scope: !10463)
!10468 = !DILocation(line: 1047, column: 6, scope: !10463)
!10469 = !DILocation(line: 1051, column: 22, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10406, file: !4075, line: 1051, column: 7)
!10471 = !DILocation(line: 1021, column: 17, scope: !10406)
!10472 = !DILocation(line: 1051, column: 27, scope: !10470)
!10473 = !DILocation(line: 1051, column: 7, scope: !10406)
!10474 = !DILocation(line: 1052, column: 27, scope: !10470)
!10475 = !DILocation(line: 1052, column: 5, scope: !10470)
!10476 = !DILocation(line: 1053, column: 32, scope: !10406)
!10477 = !DILocation(line: 1053, column: 3, scope: !10406)
!10478 = !DILocation(line: 1054, column: 1, scope: !10406)
!10479 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !4075, file: !4075, line: 910, type: !10480, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10483)
!10480 = !DISubroutineType(types: !10481)
!10481 = !{!2200, !10482, !1028, !693}
!10482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6708, size: 64)
!10483 = !{!10484, !10485, !10486, !10487, !10488}
!10484 = !DILocalVariable(name: "ptr", arg: 1, scope: !10479, file: !4075, line: 910, type: !10482)
!10485 = !DILocalVariable(name: "phi", arg: 2, scope: !10479, file: !4075, line: 910, type: !1028)
!10486 = !DILocalVariable(name: "flags", arg: 3, scope: !10479, file: !4075, line: 910, type: !693)
!10487 = !DILocalVariable(name: "phi_def", scope: !10479, file: !4075, line: 912, type: !704)
!10488 = !DILocalVariable(name: "comp", scope: !10479, file: !4075, line: 913, type: !693)
!10489 = !DILocation(line: 0, scope: !10479)
!10490 = !DILocation(line: 912, column: 18, scope: !10479)
!10491 = !DILocation(line: 915, column: 3, scope: !10479)
!10492 = !DILocation(line: 916, column: 8, scope: !10479)
!10493 = !DILocation(line: 916, column: 13, scope: !10479)
!10494 = !DILocation(line: 918, column: 3, scope: !10479)
!10495 = !DILocation(line: 920, column: 11, scope: !10479)
!10496 = !DILocation(line: 923, column: 14, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10479, file: !4075, line: 923, column: 7)
!10498 = !DILocation(line: 923, column: 22, scope: !10497)
!10499 = !DILocation(line: 923, column: 7, scope: !10479)
!10500 = !DILocation(line: 925, column: 17, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10497, file: !4075, line: 924, column: 5)
!10502 = !DILocation(line: 926, column: 7, scope: !10501)
!10503 = !DILocation(line: 929, column: 8, scope: !10479)
!10504 = !DILocation(line: 929, column: 17, scope: !10479)
!10505 = !DILocation(line: 930, column: 18, scope: !10479)
!10506 = !DILocation(line: 930, column: 8, scope: !10479)
!10507 = !DILocation(line: 930, column: 16, scope: !10479)
!10508 = !DILocation(line: 931, column: 8, scope: !10479)
!10509 = !DILocation(line: 931, column: 18, scope: !10479)
!10510 = !DILocation(line: 932, column: 10, scope: !10479)
!10511 = !DILocation(line: 932, column: 3, scope: !10479)
!10512 = !DILocation(line: 933, column: 1, scope: !10479)
!10513 = distinct !DISubprogram(name: "op_iter_done", scope: !4075, file: !4075, line: 652, type: !10514, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10518)
!10514 = !DISubroutineType(types: !10515)
!10515 = !{!692, !10516}
!10516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10517, size: 64)
!10517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6708)
!10518 = !{!10519}
!10519 = !DILocalVariable(name: "ptr", arg: 1, scope: !10513, file: !4075, line: 652, type: !10516)
!10520 = !DILocation(line: 0, scope: !10513)
!10521 = !DILocation(line: 654, column: 15, scope: !10513)
!10522 = !DILocation(line: 654, column: 3, scope: !10513)
!10523 = distinct !DISubprogram(name: "move_use_after_head", scope: !4075, file: !4075, line: 990, type: !10524, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10526)
!10524 = !DISubroutineType(types: !10525)
!10525 = !{!2200, !2200, !2200, !2200}
!10526 = !{!10527, !10528, !10529}
!10527 = !DILocalVariable(name: "use_p", arg: 1, scope: !10523, file: !4075, line: 990, type: !2200)
!10528 = !DILocalVariable(name: "head", arg: 2, scope: !10523, file: !4075, line: 990, type: !2200)
!10529 = !DILocalVariable(name: "last_p", arg: 3, scope: !10523, file: !4075, line: 991, type: !2200)
!10530 = !DILocation(line: 0, scope: !10523)
!10531 = !DILocation(line: 997, column: 13, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10523, file: !4075, line: 997, column: 7)
!10533 = !DILocation(line: 997, column: 7, scope: !10523)
!10534 = !DILocation(line: 1000, column: 19, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10536, file: !4075, line: 1000, column: 11)
!10536 = distinct !DILexicalBlock(scope: !10532, file: !4075, line: 998, column: 5)
!10537 = !DILocation(line: 1000, column: 24, scope: !10535)
!10538 = !DILocation(line: 1000, column: 11, scope: !10536)
!10539 = !DILocation(line: 1005, column: 4, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10535, file: !4075, line: 1003, column: 2)
!10541 = !DILocation(line: 1006, column: 4, scope: !10540)
!10542 = !DILocation(line: 1010, column: 3, scope: !10523)
!10543 = distinct !DISubprogram(name: "op_iter_next_use", scope: !4075, file: !4075, line: 659, type: !10544, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10546)
!10544 = !DISubroutineType(types: !10545)
!10545 = !{!2200, !10482}
!10546 = !{!10547, !10548}
!10547 = !DILocalVariable(name: "ptr", arg: 1, scope: !10543, file: !4075, line: 659, type: !10482)
!10548 = !DILocalVariable(name: "use_p", scope: !10543, file: !4075, line: 661, type: !2200)
!10549 = !DILocation(line: 0, scope: !10543)
!10550 = !DILocation(line: 665, column: 12, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10543, file: !4075, line: 665, column: 7)
!10552 = !DILocation(line: 665, column: 7, scope: !10551)
!10553 = !DILocation(line: 665, column: 7, scope: !10543)
!10554 = !DILocation(line: 667, column: 15, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10551, file: !4075, line: 666, column: 5)
!10556 = !DILocation(line: 668, column: 30, scope: !10555)
!10557 = !DILocation(line: 668, column: 17, scope: !10555)
!10558 = !DILocation(line: 669, column: 7, scope: !10555)
!10559 = !DILocation(line: 671, column: 12, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10543, file: !4075, line: 671, column: 7)
!10561 = !DILocation(line: 671, column: 25, scope: !10560)
!10562 = !DILocation(line: 671, column: 18, scope: !10560)
!10563 = !DILocation(line: 671, column: 7, scope: !10543)
!10564 = !DILocation(line: 673, column: 14, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10560, file: !4075, line: 672, column: 5)
!10566 = !DILocation(line: 673, column: 7, scope: !10565)
!10567 = !DILocation(line: 675, column: 8, scope: !10543)
!10568 = !DILocation(line: 675, column: 13, scope: !10543)
!10569 = !DILocation(line: 676, column: 3, scope: !10543)
!10570 = !DILocation(line: 677, column: 1, scope: !10543)
!10571 = distinct !DISubprogram(name: "op_iter_init_use", scope: !4075, file: !4075, line: 768, type: !10480, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10572)
!10572 = !{!10573, !10574, !10575}
!10573 = !DILocalVariable(name: "ptr", arg: 1, scope: !10571, file: !4075, line: 768, type: !10482)
!10574 = !DILocalVariable(name: "stmt", arg: 2, scope: !10571, file: !4075, line: 768, type: !1028)
!10575 = !DILocalVariable(name: "flags", arg: 3, scope: !10571, file: !4075, line: 768, type: !693)
!10576 = !DILocation(line: 0, scope: !10571)
!10577 = !DILocation(line: 770, column: 3, scope: !10571)
!10578 = !DILocation(line: 772, column: 3, scope: !10571)
!10579 = !DILocation(line: 773, column: 8, scope: !10571)
!10580 = !DILocation(line: 773, column: 18, scope: !10571)
!10581 = !DILocation(line: 774, column: 10, scope: !10571)
!10582 = !DILocation(line: 774, column: 3, scope: !10571)
!10583 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !613, file: !613, line: 1334, type: !10584, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10586)
!10584 = !DISubroutineType(types: !10585)
!10585 = !{!2200, !3078}
!10586 = !{!10587, !10588}
!10587 = !DILocalVariable(name: "g", arg: 1, scope: !10583, file: !613, line: 1334, type: !3078)
!10588 = !DILocalVariable(name: "ops", scope: !10583, file: !613, line: 1336, type: !1064)
!10589 = !DILocation(line: 0, scope: !10583)
!10590 = !DILocation(line: 1337, column: 8, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10583, file: !613, line: 1337, column: 7)
!10592 = !DILocation(line: 1337, column: 7, scope: !10583)
!10593 = !DILocation(line: 1339, column: 25, scope: !10583)
!10594 = !DILocation(line: 1340, column: 7, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10583, file: !613, line: 1340, column: 7)
!10596 = !DILocation(line: 1341, column: 7, scope: !10595)
!10597 = !DILocation(line: 1341, column: 28, scope: !10595)
!10598 = !DILocation(line: 1341, column: 49, scope: !10595)
!10599 = !DILocation(line: 1341, column: 32, scope: !10595)
!10600 = !DILocation(line: 1342, column: 12, scope: !10595)
!10601 = !DILocation(line: 1340, column: 7, scope: !10583)
!10602 = !DILocation(line: 1344, column: 1, scope: !10583)
!10603 = distinct !DISubprogram(name: "delink_imm_use", scope: !4075, file: !4075, line: 188, type: !10604, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10606)
!10604 = !DISubroutineType(types: !10605)
!10605 = !{null, !2201}
!10606 = !{!10607}
!10607 = !DILocalVariable(name: "linknode", arg: 1, scope: !10603, file: !4075, line: 188, type: !2201)
!10608 = !DILocation(line: 0, scope: !10603)
!10609 = !DILocation(line: 191, column: 17, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10603, file: !4075, line: 191, column: 7)
!10611 = !DILocation(line: 191, column: 22, scope: !10610)
!10612 = !DILocation(line: 191, column: 7, scope: !10603)
!10613 = !DILocation(line: 194, column: 36, scope: !10603)
!10614 = !DILocation(line: 194, column: 19, scope: !10603)
!10615 = !DILocation(line: 194, column: 24, scope: !10603)
!10616 = !DILocation(line: 195, column: 36, scope: !10603)
!10617 = !DILocation(line: 195, column: 13, scope: !10603)
!10618 = !DILocation(line: 195, column: 24, scope: !10603)
!10619 = !DILocation(line: 196, column: 18, scope: !10603)
!10620 = !DILocation(line: 197, column: 18, scope: !10603)
!10621 = !DILocation(line: 198, column: 1, scope: !10603)
!10622 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !4075, file: !4075, line: 202, type: !10623, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10625)
!10623 = !DISubroutineType(types: !10624)
!10624 = !{null, !2201, !2201}
!10625 = !{!10626, !10627}
!10626 = !DILocalVariable(name: "linknode", arg: 1, scope: !10622, file: !4075, line: 202, type: !2201)
!10627 = !DILocalVariable(name: "list", arg: 2, scope: !10622, file: !4075, line: 202, type: !2201)
!10628 = !DILocation(line: 0, scope: !10622)
!10629 = !DILocation(line: 206, column: 13, scope: !10622)
!10630 = !DILocation(line: 206, column: 18, scope: !10622)
!10631 = !DILocation(line: 207, column: 26, scope: !10622)
!10632 = !DILocation(line: 207, column: 13, scope: !10622)
!10633 = !DILocation(line: 207, column: 18, scope: !10622)
!10634 = !DILocation(line: 208, column: 9, scope: !10622)
!10635 = !DILocation(line: 208, column: 15, scope: !10622)
!10636 = !DILocation(line: 208, column: 20, scope: !10622)
!10637 = !DILocation(line: 209, column: 14, scope: !10622)
!10638 = !DILocation(line: 210, column: 1, scope: !10622)
!10639 = distinct !DISubprogram(name: "gimple_phi_result", scope: !613, file: !613, line: 3071, type: !3101, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10640)
!10640 = !{!10641}
!10641 = !DILocalVariable(name: "gs", arg: 1, scope: !10639, file: !613, line: 3071, type: !3078)
!10642 = !DILocation(line: 0, scope: !10639)
!10643 = !DILocation(line: 3074, column: 25, scope: !10639)
!10644 = !DILocation(line: 3074, column: 3, scope: !10639)
!10645 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !4075, file: !4075, line: 729, type: !10646, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10648)
!10646 = !DISubroutineType(types: !10647)
!10647 = !{null, !10482}
!10648 = !{!10649}
!10649 = !DILocalVariable(name: "ptr", arg: 1, scope: !10645, file: !4075, line: 729, type: !10482)
!10650 = !DILocation(line: 0, scope: !10645)
!10651 = !DILocation(line: 731, column: 8, scope: !10645)
!10652 = !DILocation(line: 731, column: 13, scope: !10645)
!10653 = !DILocation(line: 732, column: 8, scope: !10645)
!10654 = !DILocation(line: 732, column: 13, scope: !10645)
!10655 = !DILocation(line: 733, column: 8, scope: !10645)
!10656 = !DILocation(line: 733, column: 18, scope: !10645)
!10657 = !DILocation(line: 734, column: 8, scope: !10645)
!10658 = !DILocation(line: 734, column: 14, scope: !10645)
!10659 = !DILocation(line: 735, column: 8, scope: !10645)
!10660 = !DILocation(line: 735, column: 16, scope: !10645)
!10661 = !DILocation(line: 736, column: 8, scope: !10645)
!10662 = !DILocation(line: 736, column: 17, scope: !10645)
!10663 = !DILocation(line: 737, column: 8, scope: !10645)
!10664 = !DILocation(line: 737, column: 13, scope: !10645)
!10665 = !DILocation(line: 738, column: 1, scope: !10645)
!10666 = distinct !DISubprogram(name: "op_iter_init", scope: !4075, file: !4075, line: 742, type: !10667, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10669)
!10667 = !DISubroutineType(types: !10668)
!10668 = !{null, !10482, !1028, !693}
!10669 = !{!10670, !10671, !10672}
!10670 = !DILocalVariable(name: "ptr", arg: 1, scope: !10666, file: !4075, line: 742, type: !10482)
!10671 = !DILocalVariable(name: "stmt", arg: 2, scope: !10666, file: !4075, line: 742, type: !1028)
!10672 = !DILocalVariable(name: "flags", arg: 3, scope: !10666, file: !4075, line: 742, type: !693)
!10673 = !DILocation(line: 0, scope: !10666)
!10674 = !DILocation(line: 746, column: 3, scope: !10666)
!10675 = !DILocation(line: 748, column: 22, scope: !10666)
!10676 = !DILocation(line: 748, column: 15, scope: !10666)
!10677 = !DILocation(line: 748, column: 52, scope: !10666)
!10678 = !DILocation(line: 748, column: 8, scope: !10666)
!10679 = !DILocation(line: 748, column: 13, scope: !10666)
!10680 = !DILocation(line: 749, column: 15, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10666, file: !4075, line: 749, column: 7)
!10682 = !DILocation(line: 750, column: 7, scope: !10681)
!10683 = !DILocation(line: 750, column: 10, scope: !10681)
!10684 = !DILocation(line: 751, column: 7, scope: !10681)
!10685 = !DILocation(line: 751, column: 10, scope: !10681)
!10686 = !DILocation(line: 751, column: 29, scope: !10681)
!10687 = !DILocation(line: 749, column: 7, scope: !10666)
!10688 = !DILocation(line: 752, column: 22, scope: !10681)
!10689 = !DILocation(line: 752, column: 28, scope: !10681)
!10690 = !DILocation(line: 752, column: 15, scope: !10681)
!10691 = !DILocation(line: 752, column: 5, scope: !10681)
!10692 = !DILocation(line: 753, column: 22, scope: !10666)
!10693 = !DILocation(line: 753, column: 15, scope: !10666)
!10694 = !DILocation(line: 753, column: 52, scope: !10666)
!10695 = !DILocation(line: 753, column: 8, scope: !10666)
!10696 = !DILocation(line: 753, column: 13, scope: !10666)
!10697 = !DILocation(line: 754, column: 15, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10666, file: !4075, line: 754, column: 7)
!10699 = !DILocation(line: 755, column: 7, scope: !10698)
!10700 = !DILocation(line: 755, column: 10, scope: !10698)
!10701 = !DILocation(line: 756, column: 7, scope: !10698)
!10702 = !DILocation(line: 756, column: 10, scope: !10698)
!10703 = !DILocation(line: 756, column: 29, scope: !10698)
!10704 = !DILocation(line: 754, column: 7, scope: !10666)
!10705 = !DILocation(line: 757, column: 22, scope: !10698)
!10706 = !DILocation(line: 757, column: 28, scope: !10698)
!10707 = !DILocation(line: 757, column: 15, scope: !10698)
!10708 = !DILocation(line: 757, column: 5, scope: !10698)
!10709 = !DILocation(line: 758, column: 8, scope: !10666)
!10710 = !DILocation(line: 758, column: 13, scope: !10666)
!10711 = !DILocation(line: 760, column: 8, scope: !10666)
!10712 = !DILocation(line: 760, column: 14, scope: !10666)
!10713 = !DILocation(line: 761, column: 8, scope: !10666)
!10714 = !DILocation(line: 761, column: 16, scope: !10666)
!10715 = !DILocation(line: 762, column: 8, scope: !10666)
!10716 = !DILocation(line: 762, column: 17, scope: !10666)
!10717 = !DILocation(line: 763, column: 1, scope: !10666)
!10718 = distinct !DISubprogram(name: "gimple_def_ops", scope: !613, file: !613, line: 1292, type: !10719, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10721)
!10719 = !DISubroutineType(types: !10720)
!10720 = !{!1057, !3078}
!10721 = !{!10722}
!10722 = !DILocalVariable(name: "g", arg: 1, scope: !10718, file: !613, line: 1292, type: !3078)
!10723 = !DILocation(line: 0, scope: !10718)
!10724 = !DILocation(line: 1294, column: 8, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10718, file: !613, line: 1294, column: 7)
!10726 = !DILocation(line: 1294, column: 7, scope: !10718)
!10727 = !DILocation(line: 1296, column: 26, scope: !10718)
!10728 = !DILocation(line: 1296, column: 3, scope: !10718)
!10729 = !DILocation(line: 1297, column: 1, scope: !10718)
!10730 = distinct !DISubprogram(name: "gimple_vdef", scope: !613, file: !613, line: 1375, type: !3101, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10731)
!10731 = !{!10732}
!10732 = !DILocalVariable(name: "g", arg: 1, scope: !10730, file: !613, line: 1375, type: !3078)
!10733 = !DILocation(line: 0, scope: !10730)
!10734 = !DILocation(line: 1377, column: 8, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10730, file: !613, line: 1377, column: 7)
!10736 = !DILocation(line: 1377, column: 7, scope: !10730)
!10737 = !DILocation(line: 1379, column: 23, scope: !10730)
!10738 = !DILocation(line: 1379, column: 3, scope: !10730)
!10739 = !DILocation(line: 1380, column: 1, scope: !10730)
!10740 = distinct !DISubprogram(name: "gimple_use_ops", scope: !613, file: !613, line: 1313, type: !10741, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10743)
!10741 = !DISubroutineType(types: !10742)
!10742 = !{!1064, !3078}
!10743 = !{!10744}
!10744 = !DILocalVariable(name: "g", arg: 1, scope: !10740, file: !613, line: 1313, type: !3078)
!10745 = !DILocation(line: 0, scope: !10740)
!10746 = !DILocation(line: 1315, column: 8, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10740, file: !613, line: 1315, column: 7)
!10748 = !DILocation(line: 1315, column: 7, scope: !10740)
!10749 = !DILocation(line: 1317, column: 26, scope: !10740)
!10750 = !DILocation(line: 1317, column: 3, scope: !10740)
!10751 = !DILocation(line: 1318, column: 1, scope: !10740)
!10752 = distinct !DISubprogram(name: "gimple_vuse", scope: !613, file: !613, line: 1365, type: !3101, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10753)
!10753 = !{!10754}
!10754 = !DILocalVariable(name: "g", arg: 1, scope: !10752, file: !613, line: 1365, type: !3078)
!10755 = !DILocation(line: 0, scope: !10752)
!10756 = !DILocation(line: 1367, column: 8, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10752, file: !613, line: 1367, column: 7)
!10758 = !DILocation(line: 1367, column: 7, scope: !10752)
!10759 = !DILocation(line: 1369, column: 23, scope: !10752)
!10760 = !DILocation(line: 1369, column: 3, scope: !10752)
!10761 = !DILocation(line: 1370, column: 1, scope: !10752)
!10762 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !613, file: !613, line: 1283, type: !3903, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10763)
!10763 = !{!10764}
!10764 = !DILocalVariable(name: "g", arg: 1, scope: !10762, file: !613, line: 1283, type: !3078)
!10765 = !DILocation(line: 0, scope: !10762)
!10766 = !DILocation(line: 1285, column: 10, scope: !10762)
!10767 = !DILocation(line: 1285, column: 26, scope: !10762)
!10768 = !DILocation(line: 1285, column: 43, scope: !10762)
!10769 = !DILocation(line: 1285, column: 46, scope: !10762)
!10770 = !DILocation(line: 1285, column: 62, scope: !10762)
!10771 = !DILocation(line: 1285, column: 3, scope: !10762)
!10772 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !613, file: !613, line: 3100, type: !10773, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10775)
!10773 = !DISubroutineType(types: !10774)
!10774 = !{!2203, !1028, !7}
!10775 = !{!10776, !10777}
!10776 = !DILocalVariable(name: "gs", arg: 1, scope: !10772, file: !613, line: 3100, type: !1028)
!10777 = !DILocalVariable(name: "index", arg: 2, scope: !10772, file: !613, line: 3100, type: !7)
!10778 = !DILocation(line: 0, scope: !10772)
!10779 = !DILocation(line: 3103, column: 3, scope: !10772)
!10780 = !DILocation(line: 3104, column: 12, scope: !10772)
!10781 = !DILocation(line: 3104, column: 3, scope: !10772)
!10782 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1653, file: !1653, line: 32, type: !10783, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10785)
!10783 = !DISubroutineType(types: !10784)
!10784 = !{!2206, !693}
!10785 = !{!10786}
!10786 = !DILocalVariable(name: "alloc_", arg: 1, scope: !10782, file: !1653, line: 32, type: !693)
!10787 = !DILocation(line: 0, scope: !10782)
!10788 = !DILocation(line: 32, column: 1, scope: !10782)
!10789 = distinct !DISubprogram(name: "number_of_loops", scope: !337, file: !337, line: 459, type: !2478, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!10790 = !DILocation(line: 461, column: 8, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10789, file: !337, line: 461, column: 7)
!10792 = !DILocation(line: 461, column: 7, scope: !10789)
!10793 = !DILocation(line: 464, column: 10, scope: !10789)
!10794 = !DILocation(line: 464, column: 3, scope: !10789)
!10795 = !DILocation(line: 0, scope: !10789)
!10796 = !DILocation(line: 465, column: 1, scope: !10789)
!10797 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !337, file: !337, line: 85, type: !10798, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10802)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{!693, !10800, !7, !4266}
!10800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10801, size: 64)
!10801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1263)
!10802 = !{!10803, !10804, !10805}
!10803 = !DILocalVariable(name: "vec_", arg: 1, scope: !10797, file: !337, line: 85, type: !10800)
!10804 = !DILocalVariable(name: "ix_", arg: 2, scope: !10797, file: !337, line: 85, type: !7)
!10805 = !DILocalVariable(name: "ptr", arg: 3, scope: !10797, file: !337, line: 85, type: !4266)
!10806 = !DILocation(line: 0, scope: !10797)
!10807 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1653, file: !1653, line: 31, type: !10808, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10811)
!10808 = !DISubroutineType(types: !10809)
!10809 = !{!2188, !10810, !693}
!10810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!10811 = !{!10812, !10813, !10814}
!10812 = !DILocalVariable(name: "vec_", arg: 1, scope: !10807, file: !1653, line: 31, type: !10810)
!10813 = !DILocalVariable(name: "obj_", arg: 2, scope: !10807, file: !1653, line: 31, type: !693)
!10814 = !DILocalVariable(name: "slot_", scope: !10807, file: !1653, line: 31, type: !2188)
!10815 = !DILocation(line: 0, scope: !10807)
!10816 = !DILocation(line: 31, column: 1, scope: !10807)
!10817 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !337, file: !337, line: 85, type: !10818, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{!7, !10800}
!10820 = !{!10821}
!10821 = !DILocalVariable(name: "vec_", arg: 1, scope: !10817, file: !337, line: 85, type: !10800)
!10822 = !DILocation(line: 0, scope: !10817)
!10823 = !DILocation(line: 85, column: 1, scope: !10817)
!10824 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1653, file: !1653, line: 31, type: !10825, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10829)
!10825 = !DISubroutineType(types: !10826)
!10826 = !{!693, !10827, !7, !2188}
!10827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10828, size: 64)
!10828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2211)
!10829 = !{!10830, !10831, !10832}
!10830 = !DILocalVariable(name: "vec_", arg: 1, scope: !10824, file: !1653, line: 31, type: !10827)
!10831 = !DILocalVariable(name: "ix_", arg: 2, scope: !10824, file: !1653, line: 31, type: !7)
!10832 = !DILocalVariable(name: "ptr", arg: 3, scope: !10824, file: !1653, line: 31, type: !2188)
!10833 = !DILocation(line: 0, scope: !10824)
!10834 = !DILocation(line: 31, column: 1, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10824, file: !1653, line: 31, column: 1)
!10836 = !DILocation(line: 31, column: 1, scope: !10824)
!10837 = !DILocation(line: 31, column: 1, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10835, file: !1653, line: 31, column: 1)
!10839 = !DILocation(line: 31, column: 1, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10835, file: !1653, line: 31, column: 1)
!10841 = !DILocation(line: 0, scope: !10835)
!10842 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1653, file: !1653, line: 32, type: !10843, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10846)
!10843 = !DISubroutineType(types: !10844)
!10844 = !{null, !10845}
!10845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!10846 = !{!10847}
!10847 = !DILocalVariable(name: "vec_", arg: 1, scope: !10842, file: !1653, line: 32, type: !10845)
!10848 = !DILocation(line: 0, scope: !10842)
!10849 = !DILocation(line: 32, column: 1, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10842, file: !1653, line: 32, column: 1)
!10851 = !DILocation(line: 32, column: 1, scope: !10842)
!10852 = distinct !DISubprogram(name: "find_case_label_for_value", scope: !3, file: !3, line: 1936, type: !10853, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10855)
!10853 = !DISubroutineType(types: !10854)
!10854 = !{!704, !1028, !704}
!10855 = !{!10856, !10857, !10858, !10859, !10860, !10861, !10862, !10866, !10867}
!10856 = !DILocalVariable(name: "switch_stmt", arg: 1, scope: !10852, file: !3, line: 1936, type: !1028)
!10857 = !DILocalVariable(name: "val", arg: 2, scope: !10852, file: !3, line: 1936, type: !704)
!10858 = !DILocalVariable(name: "low", scope: !10852, file: !3, line: 1938, type: !1173)
!10859 = !DILocalVariable(name: "high", scope: !10852, file: !3, line: 1938, type: !1173)
!10860 = !DILocalVariable(name: "n", scope: !10852, file: !3, line: 1938, type: !1173)
!10861 = !DILocalVariable(name: "default_case", scope: !10852, file: !3, line: 1939, type: !704)
!10862 = !DILocalVariable(name: "i", scope: !10863, file: !3, line: 1943, type: !1173)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 1942, column: 5)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 1941, column: 3)
!10865 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1941, column: 3)
!10866 = !DILocalVariable(name: "t", scope: !10863, file: !3, line: 1944, type: !704)
!10867 = !DILocalVariable(name: "cmp", scope: !10863, file: !3, line: 1945, type: !693)
!10868 = !DILocation(line: 0, scope: !10852)
!10869 = !DILocation(line: 1938, column: 25, scope: !10852)
!10870 = !DILocation(line: 1939, column: 23, scope: !10852)
!10871 = !DILocation(line: 1941, column: 8, scope: !10865)
!10872 = !DILocation(line: 1941, column: 12, scope: !10865)
!10873 = !DILocation(line: 0, scope: !10865)
!10874 = !DILocation(line: 1941, column: 32, scope: !10864)
!10875 = !DILocation(line: 1941, column: 38, scope: !10864)
!10876 = !DILocation(line: 1941, column: 3, scope: !10865)
!10877 = !DILocation(line: 1943, column: 24, scope: !10863)
!10878 = !DILocation(line: 1943, column: 31, scope: !10863)
!10879 = !DILocation(line: 0, scope: !10863)
!10880 = !DILocation(line: 1944, column: 50, scope: !10863)
!10881 = !DILocation(line: 1944, column: 16, scope: !10863)
!10882 = !DILocation(line: 1948, column: 35, scope: !10863)
!10883 = !DILocation(line: 1948, column: 13, scope: !10863)
!10884 = !DILocation(line: 1950, column: 15, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 1950, column: 11)
!10886 = !DILocation(line: 1955, column: 11, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 1955, column: 11)
!10888 = !DILocation(line: 1955, column: 25, scope: !10887)
!10889 = !DILocation(line: 1955, column: 11, scope: !10863)
!10890 = !DILocation(line: 1958, column: 12, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 1958, column: 8)
!10892 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 1956, column: 2)
!10893 = !DILocation(line: 1958, column: 8, scope: !10892)
!10894 = !DILocation(line: 1964, column: 12, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 1964, column: 8)
!10896 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 1962, column: 2)
!10897 = !DILocation(line: 1964, column: 17, scope: !10895)
!10898 = !DILocation(line: 1964, column: 20, scope: !10895)
!10899 = !DILocation(line: 1964, column: 62, scope: !10895)
!10900 = !DILocation(line: 1964, column: 8, scope: !10896)
!10901 = !DILocation(line: 1967, column: 5, scope: !10864)
!10902 = distinct !{!10902, !10876, !10903}
!10903 = !DILocation(line: 1967, column: 5, scope: !10865)
!10904 = !DILocation(line: 1970, column: 1, scope: !10852)
!10905 = distinct !DISubprogram(name: "gimple_seq_last", scope: !613, file: !613, line: 178, type: !9955, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10906)
!10906 = !{!10907}
!10907 = !DILocalVariable(name: "s", arg: 1, scope: !10905, file: !613, line: 178, type: !6977)
!10908 = !DILocation(line: 0, scope: !10905)
!10909 = !DILocation(line: 180, column: 10, scope: !10905)
!10910 = !DILocation(line: 180, column: 17, scope: !10905)
!10911 = !DILocation(line: 180, column: 3, scope: !10905)
!10912 = distinct !DISubprogram(name: "gimple_bind_body", scope: !613, file: !613, line: 2517, type: !10913, scopeLine: 2518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10915)
!10913 = !DISubroutineType(types: !10914)
!10914 = !{!1018, !1028}
!10915 = !{!10916}
!10916 = !DILocalVariable(name: "gs", arg: 1, scope: !10912, file: !613, line: 2517, type: !1028)
!10917 = !DILocation(line: 0, scope: !10912)
!10918 = !DILocation(line: 2520, column: 26, scope: !10912)
!10919 = !DILocation(line: 2520, column: 3, scope: !10912)
!10920 = distinct !DISubprogram(name: "gimple_try_eval", scope: !613, file: !613, line: 2953, type: !10913, scopeLine: 2954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10921)
!10921 = !{!10922}
!10922 = !DILocalVariable(name: "gs", arg: 1, scope: !10920, file: !613, line: 2953, type: !1028)
!10923 = !DILocation(line: 0, scope: !10920)
!10924 = !DILocation(line: 2956, column: 25, scope: !10920)
!10925 = !DILocation(line: 2956, column: 3, scope: !10920)
!10926 = distinct !DISubprogram(name: "gimple_try_cleanup", scope: !613, file: !613, line: 2964, type: !10913, scopeLine: 2965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10927)
!10927 = !{!10928}
!10928 = !DILocalVariable(name: "gs", arg: 1, scope: !10926, file: !613, line: 2964, type: !1028)
!10929 = !DILocation(line: 0, scope: !10926)
!10930 = !DILocation(line: 2967, column: 25, scope: !10926)
!10931 = !DILocation(line: 2967, column: 3, scope: !10926)
!10932 = distinct !DISubprogram(name: "gimple_eh_filter_failure", scope: !613, file: !613, line: 2869, type: !10913, scopeLine: 2870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10933)
!10933 = !{!10934}
!10934 = !DILocalVariable(name: "gs", arg: 1, scope: !10932, file: !613, line: 2869, type: !1028)
!10935 = !DILocation(line: 0, scope: !10932)
!10936 = !DILocation(line: 2872, column: 31, scope: !10932)
!10937 = !DILocation(line: 2872, column: 3, scope: !10932)
!10938 = distinct !DISubprogram(name: "gimple_catch_handler", scope: !613, file: !613, line: 2806, type: !10913, scopeLine: 2807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10939)
!10939 = !{!10940}
!10940 = !DILocalVariable(name: "gs", arg: 1, scope: !10938, file: !613, line: 2806, type: !1028)
!10941 = !DILocation(line: 0, scope: !10938)
!10942 = !DILocation(line: 2809, column: 27, scope: !10938)
!10943 = !DILocation(line: 2809, column: 3, scope: !10938)
!10944 = distinct !DISubprogram(name: "verify_types_in_gimple_stmt", scope: !3, file: !3, line: 3760, type: !3633, scopeLine: 3761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10945)
!10945 = !{!10946}
!10946 = !DILocalVariable(name: "stmt", arg: 1, scope: !10944, file: !3, line: 3760, type: !1028)
!10947 = !DILocation(line: 0, scope: !10944)
!10948 = !DILocation(line: 3762, column: 11, scope: !10944)
!10949 = !DILocation(line: 3762, column: 3, scope: !10944)
!10950 = !DILocation(line: 3765, column: 14, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 3763, column: 5)
!10952 = !DILocation(line: 3765, column: 7, scope: !10951)
!10953 = !DILocation(line: 3768, column: 14, scope: !10951)
!10954 = !DILocation(line: 3768, column: 52, scope: !10951)
!10955 = !DILocation(line: 3768, column: 7, scope: !10951)
!10956 = !DILocation(line: 3771, column: 14, scope: !10951)
!10957 = !DILocation(line: 3771, column: 7, scope: !10951)
!10958 = !DILocation(line: 3774, column: 11, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 3774, column: 11)
!10960 = !DILocation(line: 3774, column: 53, scope: !10959)
!10961 = !DILocation(line: 3774, column: 11, scope: !10951)
!10962 = !DILocation(line: 3776, column: 4, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3775, column: 2)
!10964 = !DILocation(line: 3777, column: 4, scope: !10963)
!10965 = !DILocation(line: 3779, column: 14, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 3779, column: 11)
!10967 = !DILocation(line: 3780, column: 6, scope: !10966)
!10968 = !DILocation(line: 3780, column: 9, scope: !10966)
!10969 = !DILocation(line: 3780, column: 51, scope: !10966)
!10970 = !DILocation(line: 3781, column: 4, scope: !10966)
!10971 = !DILocation(line: 3781, column: 10, scope: !10966)
!10972 = !DILocation(line: 3782, column: 9, scope: !10966)
!10973 = !DILocation(line: 3782, column: 12, scope: !10966)
!10974 = !DILocation(line: 3782, column: 55, scope: !10966)
!10975 = !DILocation(line: 3779, column: 11, scope: !10951)
!10976 = !DILocation(line: 3784, column: 4, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3783, column: 2)
!10978 = !DILocation(line: 3785, column: 4, scope: !10977)
!10979 = !DILocation(line: 3788, column: 40, scope: !10951)
!10980 = !DILocation(line: 3789, column: 12, scope: !10951)
!10981 = !DILocation(line: 3790, column: 12, scope: !10951)
!10982 = !DILocation(line: 3788, column: 14, scope: !10951)
!10983 = !DILocation(line: 3788, column: 7, scope: !10951)
!10984 = !DILocation(line: 3793, column: 14, scope: !10951)
!10985 = !DILocation(line: 3793, column: 7, scope: !10951)
!10986 = !DILocation(line: 3796, column: 14, scope: !10951)
!10987 = !DILocation(line: 3796, column: 7, scope: !10951)
!10988 = !DILocation(line: 3799, column: 14, scope: !10951)
!10989 = !DILocation(line: 3799, column: 7, scope: !10951)
!10990 = !DILocation(line: 3805, column: 14, scope: !10951)
!10991 = !DILocation(line: 3805, column: 7, scope: !10951)
!10992 = !DILocation(line: 3825, column: 14, scope: !10951)
!10993 = !DILocation(line: 3825, column: 7, scope: !10951)
!10994 = !DILocation(line: 3828, column: 7, scope: !10951)
!10995 = !DILocation(line: 3831, column: 5, scope: !10944)
!10996 = !DILocation(line: 3833, column: 1, scope: !10944)
!10997 = distinct !DISubprogram(name: "verify_gimple_assign", scope: !3, file: !3, line: 3602, type: !3633, scopeLine: 3603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10998)
!10998 = !{!10999}
!10999 = !DILocalVariable(name: "stmt", arg: 1, scope: !10997, file: !3, line: 3602, type: !1028)
!11000 = !DILocation(line: 0, scope: !10997)
!11001 = !DILocation(line: 3604, column: 11, scope: !10997)
!11002 = !DILocation(line: 3604, column: 3, scope: !10997)
!11003 = !DILocation(line: 3607, column: 14, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 3605, column: 5)
!11005 = !DILocation(line: 3607, column: 7, scope: !11004)
!11006 = !DILocation(line: 3610, column: 14, scope: !11004)
!11007 = !DILocation(line: 3610, column: 7, scope: !11004)
!11008 = !DILocation(line: 3613, column: 14, scope: !11004)
!11009 = !DILocation(line: 3613, column: 7, scope: !11004)
!11010 = !DILocation(line: 3616, column: 7, scope: !11004)
!11011 = !DILocation(line: 3619, column: 5, scope: !10997)
!11012 = !DILocation(line: 3621, column: 1, scope: !10997)
!11013 = distinct !DISubprogram(name: "verify_gimple_call", scope: !3, file: !3, line: 2927, type: !3633, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11014)
!11014 = !{!11015, !11016, !11017, !11018, !11019}
!11015 = !DILocalVariable(name: "stmt", arg: 1, scope: !11013, file: !3, line: 2927, type: !1028)
!11016 = !DILocalVariable(name: "fn", scope: !11013, file: !3, line: 2929, type: !704)
!11017 = !DILocalVariable(name: "fntype", scope: !11013, file: !3, line: 2930, type: !704)
!11018 = !DILocalVariable(name: "i", scope: !11013, file: !3, line: 2931, type: !7)
!11019 = !DILocalVariable(name: "arg", scope: !11020, file: !3, line: 3015, type: !704)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !3, line: 3014, column: 5)
!11021 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 3013, column: 3)
!11022 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 3013, column: 3)
!11023 = !DILocation(line: 0, scope: !11013)
!11024 = !DILocation(line: 2929, column: 13, scope: !11013)
!11025 = !DILocation(line: 2933, column: 7, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2933, column: 7)
!11027 = !DILocation(line: 2933, column: 22, scope: !11026)
!11028 = !DILocation(line: 2934, column: 7, scope: !11026)
!11029 = !DILocation(line: 2934, column: 11, scope: !11026)
!11030 = !DILocation(line: 2933, column: 7, scope: !11013)
!11031 = !DILocation(line: 2936, column: 7, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 2935, column: 5)
!11033 = !DILocation(line: 2937, column: 7, scope: !11032)
!11034 = !DILocation(line: 2938, column: 7, scope: !11032)
!11035 = !DILocation(line: 2941, column: 8, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2941, column: 7)
!11037 = !DILocation(line: 2942, column: 7, scope: !11036)
!11038 = !DILocation(line: 2942, column: 11, scope: !11036)
!11039 = !DILocation(line: 2942, column: 50, scope: !11036)
!11040 = !DILocation(line: 2943, column: 4, scope: !11036)
!11041 = !DILocation(line: 2943, column: 46, scope: !11036)
!11042 = !DILocation(line: 2941, column: 7, scope: !11013)
!11043 = !DILocation(line: 2945, column: 7, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 2944, column: 5)
!11045 = !DILocation(line: 2946, column: 7, scope: !11044)
!11046 = !DILocation(line: 2949, column: 7, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2949, column: 7)
!11048 = !DILocation(line: 2950, column: 7, scope: !11047)
!11049 = !DILocation(line: 2950, column: 30, scope: !11047)
!11050 = !DILocation(line: 2950, column: 12, scope: !11047)
!11051 = !DILocation(line: 2951, column: 4, scope: !11047)
!11052 = !DILocation(line: 2951, column: 41, scope: !11047)
!11053 = !DILocation(line: 2951, column: 7, scope: !11047)
!11054 = !DILocation(line: 2949, column: 7, scope: !11013)
!11055 = !DILocation(line: 2953, column: 7, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11047, file: !3, line: 2952, column: 5)
!11057 = !DILocation(line: 2954, column: 7, scope: !11056)
!11058 = !DILocation(line: 2957, column: 7, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2957, column: 7)
!11060 = !DILocation(line: 2957, column: 30, scope: !11059)
!11061 = !DILocation(line: 2957, column: 33, scope: !11059)
!11062 = !DILocation(line: 2957, column: 7, scope: !11013)
!11063 = !DILocation(line: 2959, column: 7, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11059, file: !3, line: 2958, column: 5)
!11065 = !DILocation(line: 2960, column: 7, scope: !11064)
!11066 = !DILocation(line: 2963, column: 12, scope: !11013)
!11067 = !DILocation(line: 2964, column: 7, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2964, column: 7)
!11069 = !DILocation(line: 2965, column: 7, scope: !11068)
!11070 = !DILocation(line: 2965, column: 38, scope: !11068)
!11071 = !DILocation(line: 2966, column: 10, scope: !11068)
!11072 = !DILocation(line: 2965, column: 11, scope: !11068)
!11073 = !DILocation(line: 2972, column: 7, scope: !11068)
!11074 = !DILocation(line: 2972, column: 12, scope: !11068)
!11075 = !DILocation(line: 2973, column: 5, scope: !11068)
!11076 = !DILocation(line: 2973, column: 8, scope: !11068)
!11077 = !DILocation(line: 2964, column: 7, scope: !11013)
!11078 = !DILocation(line: 2975, column: 7, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11068, file: !3, line: 2974, column: 5)
!11080 = !DILocation(line: 2976, column: 27, scope: !11079)
!11081 = !DILocation(line: 2976, column: 7, scope: !11079)
!11082 = !DILocation(line: 2977, column: 27, scope: !11079)
!11083 = !DILocation(line: 2977, column: 7, scope: !11079)
!11084 = !DILocation(line: 2978, column: 7, scope: !11079)
!11085 = !DILocation(line: 2981, column: 7, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2981, column: 7)
!11087 = !DILocation(line: 2982, column: 7, scope: !11086)
!11088 = !DILocation(line: 2982, column: 26, scope: !11086)
!11089 = !DILocation(line: 2982, column: 11, scope: !11086)
!11090 = !DILocation(line: 2981, column: 7, scope: !11013)
!11091 = !DILocation(line: 2984, column: 7, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 2983, column: 5)
!11093 = !DILocation(line: 2985, column: 27, scope: !11092)
!11094 = !DILocation(line: 2985, column: 7, scope: !11092)
!11095 = !DILocation(line: 2986, column: 7, scope: !11092)
!11096 = !DILocation(line: 2991, column: 7, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 2991, column: 7)
!11098 = !DILocation(line: 2991, column: 7, scope: !11013)
!11099 = !DILocation(line: 2993, column: 11, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 2993, column: 11)
!11101 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 2992, column: 5)
!11102 = !DILocation(line: 2993, column: 26, scope: !11100)
!11103 = !DILocation(line: 2994, column: 4, scope: !11100)
!11104 = !DILocation(line: 2994, column: 7, scope: !11100)
!11105 = !DILocation(line: 2994, column: 40, scope: !11100)
!11106 = !DILocation(line: 2993, column: 11, scope: !11101)
!11107 = !DILocation(line: 2996, column: 4, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 2995, column: 2)
!11109 = !DILocation(line: 2997, column: 4, scope: !11108)
!11110 = !DILocation(line: 3001, column: 12, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 3001, column: 11)
!11112 = !DILocation(line: 3001, column: 11, scope: !11101)
!11113 = !DILocation(line: 3003, column: 4, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 3002, column: 2)
!11115 = !DILocation(line: 3004, column: 4, scope: !11114)
!11116 = !DILocation(line: 3013, column: 8, scope: !11022)
!11117 = !DILocation(line: 0, scope: !11022)
!11118 = !DILocation(line: 3013, column: 19, scope: !11021)
!11119 = !DILocation(line: 3013, column: 17, scope: !11021)
!11120 = !DILocation(line: 3013, column: 3, scope: !11022)
!11121 = !DILocation(line: 3015, column: 18, scope: !11020)
!11122 = !DILocation(line: 0, scope: !11020)
!11123 = !DILocation(line: 3016, column: 12, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 3016, column: 11)
!11125 = !DILocation(line: 3016, column: 11, scope: !11020)
!11126 = !DILocation(line: 3018, column: 4, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 3017, column: 2)
!11128 = !DILocation(line: 3019, column: 4, scope: !11127)
!11129 = !DILocation(line: 3020, column: 2, scope: !11127)
!11130 = !DILocation(line: 3013, column: 48, scope: !11021)
!11131 = !DILocation(line: 3013, column: 3, scope: !11021)
!11132 = distinct !{!11132, !11120, !11133}
!11133 = !DILocation(line: 3021, column: 5, scope: !11022)
!11134 = !DILocation(line: 3024, column: 1, scope: !11013)
!11135 = distinct !DISubprogram(name: "verify_gimple_comparison", scope: !3, file: !3, line: 3030, type: !11136, scopeLine: 3031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11138)
!11136 = !DISubroutineType(types: !11137)
!11137 = !{!692, !704, !704, !704}
!11138 = !{!11139, !11140, !11141, !11142, !11143}
!11139 = !DILocalVariable(name: "type", arg: 1, scope: !11135, file: !3, line: 3030, type: !704)
!11140 = !DILocalVariable(name: "op0", arg: 2, scope: !11135, file: !3, line: 3030, type: !704)
!11141 = !DILocalVariable(name: "op1", arg: 3, scope: !11135, file: !3, line: 3030, type: !704)
!11142 = !DILocalVariable(name: "op0_type", scope: !11135, file: !3, line: 3032, type: !704)
!11143 = !DILocalVariable(name: "op1_type", scope: !11135, file: !3, line: 3033, type: !704)
!11144 = !DILocation(line: 0, scope: !11135)
!11145 = !DILocation(line: 3032, column: 19, scope: !11135)
!11146 = !DILocation(line: 3033, column: 19, scope: !11135)
!11147 = !DILocation(line: 3035, column: 8, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11135, file: !3, line: 3035, column: 7)
!11149 = !DILocation(line: 3035, column: 28, scope: !11148)
!11150 = !DILocation(line: 3035, column: 32, scope: !11148)
!11151 = !DILocation(line: 3035, column: 7, scope: !11135)
!11152 = !DILocation(line: 3037, column: 7, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11148, file: !3, line: 3036, column: 5)
!11154 = !DILocation(line: 3038, column: 7, scope: !11153)
!11155 = !DILocation(line: 3048, column: 9, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11135, file: !3, line: 3048, column: 7)
!11157 = !DILocation(line: 3049, column: 8, scope: !11156)
!11158 = !DILocation(line: 3049, column: 12, scope: !11156)
!11159 = !DILocation(line: 3050, column: 8, scope: !11156)
!11160 = !DILocation(line: 3050, column: 13, scope: !11156)
!11161 = !DILocation(line: 3051, column: 5, scope: !11156)
!11162 = !DILocation(line: 3051, column: 9, scope: !11156)
!11163 = !DILocation(line: 3052, column: 5, scope: !11156)
!11164 = !DILocation(line: 3052, column: 8, scope: !11156)
!11165 = !DILocation(line: 3052, column: 32, scope: !11156)
!11166 = !DILocation(line: 3052, column: 29, scope: !11156)
!11167 = !DILocation(line: 3053, column: 7, scope: !11156)
!11168 = !DILocation(line: 3053, column: 11, scope: !11156)
!11169 = !DILocation(line: 3048, column: 7, scope: !11135)
!11170 = !DILocation(line: 3055, column: 7, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 3054, column: 5)
!11172 = !DILocation(line: 3056, column: 7, scope: !11171)
!11173 = !DILocation(line: 3057, column: 7, scope: !11171)
!11174 = !DILocation(line: 3058, column: 7, scope: !11171)
!11175 = !DILocation(line: 3059, column: 7, scope: !11171)
!11176 = !DILocation(line: 3063, column: 1, scope: !11135)
!11177 = distinct !DISubprogram(name: "verify_gimple_goto", scope: !3, file: !3, line: 3666, type: !3633, scopeLine: 3667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11178)
!11178 = !{!11179, !11180}
!11179 = !DILocalVariable(name: "stmt", arg: 1, scope: !11177, file: !3, line: 3666, type: !1028)
!11180 = !DILocalVariable(name: "dest", scope: !11177, file: !3, line: 3668, type: !704)
!11181 = !DILocation(line: 0, scope: !11177)
!11182 = !DILocation(line: 3668, column: 15, scope: !11177)
!11183 = !DILocation(line: 3672, column: 7, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 3672, column: 7)
!11185 = !DILocation(line: 3672, column: 24, scope: !11184)
!11186 = !DILocation(line: 3673, column: 7, scope: !11184)
!11187 = !DILocation(line: 3673, column: 12, scope: !11184)
!11188 = !DILocation(line: 3674, column: 4, scope: !11184)
!11189 = !DILocation(line: 3674, column: 8, scope: !11184)
!11190 = !DILocation(line: 3672, column: 7, scope: !11177)
!11191 = !DILocation(line: 3676, column: 7, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11184, file: !3, line: 3675, column: 5)
!11193 = !DILocation(line: 3677, column: 7, scope: !11192)
!11194 = !DILocation(line: 3681, column: 1, scope: !11177)
!11195 = distinct !DISubprogram(name: "verify_gimple_switch", scope: !3, file: !3, line: 3687, type: !3633, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11196)
!11196 = !{!11197}
!11197 = !DILocalVariable(name: "stmt", arg: 1, scope: !11195, file: !3, line: 3687, type: !1028)
!11198 = !DILocation(line: 0, scope: !11195)
!11199 = !DILocation(line: 3689, column: 23, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 3689, column: 7)
!11201 = !DILocation(line: 3689, column: 8, scope: !11200)
!11202 = !DILocation(line: 3689, column: 7, scope: !11195)
!11203 = !DILocation(line: 3691, column: 7, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11200, file: !3, line: 3690, column: 5)
!11205 = !DILocation(line: 3692, column: 27, scope: !11204)
!11206 = !DILocation(line: 3692, column: 7, scope: !11204)
!11207 = !DILocation(line: 3693, column: 7, scope: !11204)
!11208 = !DILocation(line: 3697, column: 1, scope: !11195)
!11209 = distinct !DISubprogram(name: "verify_gimple_return", scope: !3, file: !3, line: 3627, type: !3633, scopeLine: 3628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11210)
!11210 = !{!11211, !11212, !11213}
!11211 = !DILocalVariable(name: "stmt", arg: 1, scope: !11209, file: !3, line: 3627, type: !1028)
!11212 = !DILocalVariable(name: "op", scope: !11209, file: !3, line: 3629, type: !704)
!11213 = !DILocalVariable(name: "restype", scope: !11209, file: !3, line: 3630, type: !704)
!11214 = !DILocation(line: 0, scope: !11209)
!11215 = !DILocation(line: 3629, column: 13, scope: !11209)
!11216 = !DILocation(line: 3630, column: 18, scope: !11209)
!11217 = !DILocation(line: 3634, column: 10, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 3634, column: 7)
!11219 = !DILocation(line: 3634, column: 7, scope: !11209)
!11220 = !DILocation(line: 3637, column: 8, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 3637, column: 7)
!11222 = !DILocation(line: 3638, column: 7, scope: !11221)
!11223 = !DILocation(line: 3638, column: 10, scope: !11221)
!11224 = !DILocation(line: 3638, column: 25, scope: !11221)
!11225 = !DILocation(line: 3637, column: 7, scope: !11209)
!11226 = !DILocation(line: 3640, column: 7, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 3639, column: 5)
!11228 = !DILocation(line: 3641, column: 7, scope: !11227)
!11229 = !DILocation(line: 3642, column: 7, scope: !11227)
!11230 = !DILocation(line: 3645, column: 44, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 3645, column: 7)
!11232 = !DILocation(line: 3645, column: 8, scope: !11231)
!11233 = !DILocation(line: 3648, column: 7, scope: !11231)
!11234 = !DILocation(line: 3648, column: 12, scope: !11231)
!11235 = !DILocation(line: 3648, column: 27, scope: !11231)
!11236 = !DILocation(line: 3649, column: 5, scope: !11231)
!11237 = !DILocation(line: 3649, column: 8, scope: !11231)
!11238 = !DILocation(line: 3649, column: 35, scope: !11231)
!11239 = !DILocation(line: 3650, column: 5, scope: !11231)
!11240 = !DILocation(line: 3650, column: 44, scope: !11231)
!11241 = !DILocation(line: 3650, column: 8, scope: !11231)
!11242 = !DILocation(line: 3645, column: 7, scope: !11209)
!11243 = !DILocation(line: 3652, column: 7, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 3651, column: 5)
!11245 = !DILocation(line: 3653, column: 7, scope: !11244)
!11246 = !DILocation(line: 3654, column: 27, scope: !11244)
!11247 = !DILocation(line: 3654, column: 7, scope: !11244)
!11248 = !DILocation(line: 3655, column: 7, scope: !11244)
!11249 = !DILocation(line: 3659, column: 1, scope: !11209)
!11250 = distinct !DISubprogram(name: "verify_gimple_phi", scope: !3, file: !3, line: 3704, type: !3633, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11251)
!11251 = !{!11252, !11253, !11254, !11255}
!11252 = !DILocalVariable(name: "stmt", arg: 1, scope: !11250, file: !3, line: 3704, type: !1028)
!11253 = !DILocalVariable(name: "type", scope: !11250, file: !3, line: 3706, type: !704)
!11254 = !DILocalVariable(name: "i", scope: !11250, file: !3, line: 3707, type: !7)
!11255 = !DILocalVariable(name: "arg", scope: !11256, file: !3, line: 3717, type: !704)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 3716, column: 5)
!11257 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 3715, column: 3)
!11258 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 3715, column: 3)
!11259 = !DILocation(line: 0, scope: !11250)
!11260 = !DILocation(line: 3706, column: 15, scope: !11250)
!11261 = !DILocation(line: 3709, column: 7, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 3709, column: 7)
!11263 = !DILocation(line: 3709, column: 44, scope: !11262)
!11264 = !DILocation(line: 3709, column: 7, scope: !11250)
!11265 = !DILocation(line: 3715, column: 3, scope: !11258)
!11266 = !DILocation(line: 3711, column: 7, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 3710, column: 5)
!11268 = !DILocation(line: 3712, column: 7, scope: !11267)
!11269 = !DILocation(line: 0, scope: !11258)
!11270 = !DILocation(line: 3715, column: 19, scope: !11257)
!11271 = !DILocation(line: 3715, column: 17, scope: !11257)
!11272 = !DILocation(line: 3717, column: 18, scope: !11256)
!11273 = !DILocation(line: 0, scope: !11256)
!11274 = !DILocation(line: 3718, column: 27, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 3718, column: 11)
!11276 = !DILocation(line: 3718, column: 12, scope: !11275)
!11277 = !DILocation(line: 3719, column: 5, scope: !11275)
!11278 = !DILocation(line: 3719, column: 9, scope: !11275)
!11279 = !DILocation(line: 3720, column: 4, scope: !11275)
!11280 = !DILocation(line: 3720, column: 24, scope: !11275)
!11281 = !DILocation(line: 3720, column: 9, scope: !11275)
!11282 = !DILocation(line: 3721, column: 8, scope: !11275)
!11283 = !DILocation(line: 3721, column: 12, scope: !11275)
!11284 = !DILocation(line: 3718, column: 11, scope: !11256)
!11285 = !DILocation(line: 3723, column: 4, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11275, file: !3, line: 3722, column: 2)
!11287 = !DILocation(line: 3724, column: 4, scope: !11286)
!11288 = !DILocation(line: 3725, column: 4, scope: !11286)
!11289 = !DILocation(line: 3727, column: 45, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 3727, column: 11)
!11291 = !DILocation(line: 3727, column: 12, scope: !11290)
!11292 = !DILocation(line: 3727, column: 11, scope: !11256)
!11293 = !DILocation(line: 3729, column: 4, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 3728, column: 2)
!11295 = !DILocation(line: 3730, column: 4, scope: !11294)
!11296 = !DILocation(line: 3731, column: 24, scope: !11294)
!11297 = !DILocation(line: 3731, column: 4, scope: !11294)
!11298 = !DILocation(line: 3732, column: 4, scope: !11294)
!11299 = !DILocation(line: 3715, column: 48, scope: !11257)
!11300 = !DILocation(line: 3715, column: 3, scope: !11257)
!11301 = distinct !{!11301, !11265, !11302}
!11302 = !DILocation(line: 3734, column: 5, scope: !11258)
!11303 = !DILocation(line: 3737, column: 1, scope: !11250)
!11304 = distinct !DISubprogram(name: "verify_gimple_debug", scope: !3, file: !3, line: 3744, type: !3633, scopeLine: 3745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11305)
!11305 = !{!11306}
!11306 = !DILocalVariable(name: "stmt", arg: 1, scope: !11304, file: !3, line: 3744, type: !1028)
!11307 = !DILocation(line: 0, scope: !11304)
!11308 = !DILocation(line: 3752, column: 3, scope: !11304)
!11309 = distinct !DISubprogram(name: "gimple_assign_rhs_class", scope: !613, file: !613, line: 1844, type: !11310, scopeLine: 1845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11312)
!11310 = !DISubroutineType(types: !11311)
!11311 = !{!684, !3078}
!11312 = !{!11313}
!11313 = !DILocalVariable(name: "gs", arg: 1, scope: !11309, file: !613, line: 1844, type: !3078)
!11314 = !DILocation(line: 0, scope: !11309)
!11315 = !DILocation(line: 1846, column: 32, scope: !11309)
!11316 = !DILocation(line: 1846, column: 10, scope: !11309)
!11317 = !DILocation(line: 1846, column: 3, scope: !11309)
!11318 = distinct !DISubprogram(name: "verify_gimple_assign_single", scope: !3, file: !3, line: 3487, type: !3633, scopeLine: 3488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11319)
!11319 = !{!11320, !11321, !11322, !11323, !11324, !11325, !11326, !11327}
!11320 = !DILocalVariable(name: "stmt", arg: 1, scope: !11318, file: !3, line: 3487, type: !1028)
!11321 = !DILocalVariable(name: "rhs_code", scope: !11318, file: !3, line: 3489, type: !141)
!11322 = !DILocalVariable(name: "lhs", scope: !11318, file: !3, line: 3490, type: !704)
!11323 = !DILocalVariable(name: "lhs_type", scope: !11318, file: !3, line: 3491, type: !704)
!11324 = !DILocalVariable(name: "rhs1", scope: !11318, file: !3, line: 3492, type: !704)
!11325 = !DILocalVariable(name: "rhs1_type", scope: !11318, file: !3, line: 3493, type: !704)
!11326 = !DILocalVariable(name: "res", scope: !11318, file: !3, line: 3494, type: !692)
!11327 = !DILocalVariable(name: "op", scope: !11328, file: !3, line: 3512, type: !704)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 3511, column: 7)
!11329 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 3509, column: 5)
!11330 = !DILocation(line: 0, scope: !11318)
!11331 = !DILocation(line: 3489, column: 29, scope: !11318)
!11332 = !DILocation(line: 3490, column: 14, scope: !11318)
!11333 = !DILocation(line: 3491, column: 19, scope: !11318)
!11334 = !DILocation(line: 3492, column: 15, scope: !11318)
!11335 = !DILocation(line: 3493, column: 20, scope: !11318)
!11336 = !DILocation(line: 3496, column: 8, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 3496, column: 7)
!11338 = !DILocation(line: 3496, column: 7, scope: !11318)
!11339 = !DILocation(line: 3498, column: 7, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 3497, column: 5)
!11341 = !DILocation(line: 3499, column: 7, scope: !11340)
!11342 = !DILocation(line: 3500, column: 7, scope: !11340)
!11343 = !DILocation(line: 3501, column: 7, scope: !11340)
!11344 = !DILocation(line: 3504, column: 7, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 3504, column: 7)
!11346 = !DILocation(line: 3504, column: 7, scope: !11318)
!11347 = !DILocation(line: 3505, column: 12, scope: !11345)
!11348 = !DILocation(line: 3505, column: 5, scope: !11345)
!11349 = !DILocation(line: 3508, column: 3, scope: !11318)
!11350 = !DILocation(line: 3512, column: 12, scope: !11328)
!11351 = !DILocation(line: 0, scope: !11328)
!11352 = !DILocation(line: 3513, column: 7, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 3513, column: 6)
!11354 = !DILocation(line: 3513, column: 6, scope: !11328)
!11355 = !DILocation(line: 3515, column: 6, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11353, file: !3, line: 3514, column: 4)
!11357 = !DILocation(line: 3516, column: 6, scope: !11356)
!11358 = !DILocation(line: 3519, column: 27, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 3519, column: 6)
!11360 = !DILocation(line: 3519, column: 43, scope: !11359)
!11361 = !DILocation(line: 3519, column: 7, scope: !11359)
!11362 = !DILocation(line: 3520, column: 6, scope: !11359)
!11363 = !DILocation(line: 3520, column: 52, scope: !11359)
!11364 = !DILocation(line: 3521, column: 10, scope: !11359)
!11365 = !DILocation(line: 3520, column: 10, scope: !11359)
!11366 = !DILocation(line: 3519, column: 6, scope: !11328)
!11367 = !DILocation(line: 3523, column: 6, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 3522, column: 4)
!11369 = !DILocation(line: 3524, column: 26, scope: !11368)
!11370 = !DILocation(line: 3524, column: 6, scope: !11368)
!11371 = !DILocation(line: 3525, column: 26, scope: !11368)
!11372 = !DILocation(line: 3525, column: 6, scope: !11368)
!11373 = !DILocation(line: 3526, column: 6, scope: !11368)
!11374 = !DILocation(line: 3529, column: 9, scope: !11328)
!11375 = !DILocation(line: 3529, column: 2, scope: !11328)
!11376 = !DILocation(line: 3544, column: 12, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 3544, column: 11)
!11378 = !DILocation(line: 3545, column: 4, scope: !11377)
!11379 = !DILocation(line: 3545, column: 27, scope: !11377)
!11380 = !DILocation(line: 3545, column: 7, scope: !11377)
!11381 = !DILocation(line: 3544, column: 11, scope: !11329)
!11382 = !DILocation(line: 3547, column: 4, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 3546, column: 2)
!11384 = !DILocation(line: 3548, column: 4, scope: !11383)
!11385 = !DILocation(line: 3549, column: 4, scope: !11383)
!11386 = !DILocation(line: 3550, column: 4, scope: !11383)
!11387 = !DILocation(line: 3552, column: 14, scope: !11329)
!11388 = !DILocation(line: 3552, column: 18, scope: !11329)
!11389 = !DILocation(line: 3552, column: 21, scope: !11329)
!11390 = !DILocation(line: 3552, column: 7, scope: !11329)
!11391 = !DILocation(line: 3569, column: 12, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 3569, column: 11)
!11393 = !DILocation(line: 3570, column: 4, scope: !11392)
!11394 = !DILocation(line: 3570, column: 8, scope: !11392)
!11395 = !DILocation(line: 3571, column: 4, scope: !11392)
!11396 = !DILocation(line: 3571, column: 27, scope: !11392)
!11397 = !DILocation(line: 3571, column: 7, scope: !11392)
!11398 = !DILocation(line: 3569, column: 11, scope: !11329)
!11399 = !DILocation(line: 3573, column: 4, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11392, file: !3, line: 3572, column: 2)
!11401 = !DILocation(line: 3574, column: 4, scope: !11400)
!11402 = !DILocation(line: 3575, column: 4, scope: !11400)
!11403 = !DILocation(line: 3576, column: 4, scope: !11400)
!11404 = !DILocation(line: 3596, column: 1, scope: !11318)
!11405 = distinct !DISubprogram(name: "verify_gimple_assign_unary", scope: !3, file: !3, line: 3069, type: !3633, scopeLine: 3070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11406)
!11406 = !{!11407, !11408, !11409, !11410, !11411, !11412}
!11407 = !DILocalVariable(name: "stmt", arg: 1, scope: !11405, file: !3, line: 3069, type: !1028)
!11408 = !DILocalVariable(name: "rhs_code", scope: !11405, file: !3, line: 3071, type: !141)
!11409 = !DILocalVariable(name: "lhs", scope: !11405, file: !3, line: 3072, type: !704)
!11410 = !DILocalVariable(name: "lhs_type", scope: !11405, file: !3, line: 3073, type: !704)
!11411 = !DILocalVariable(name: "rhs1", scope: !11405, file: !3, line: 3074, type: !704)
!11412 = !DILocalVariable(name: "rhs1_type", scope: !11405, file: !3, line: 3075, type: !704)
!11413 = !DILocation(line: 0, scope: !11405)
!11414 = !DILocation(line: 3071, column: 29, scope: !11405)
!11415 = !DILocation(line: 3072, column: 14, scope: !11405)
!11416 = !DILocation(line: 3073, column: 19, scope: !11405)
!11417 = !DILocation(line: 3074, column: 15, scope: !11405)
!11418 = !DILocation(line: 3075, column: 20, scope: !11405)
!11419 = !DILocation(line: 3077, column: 8, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 3077, column: 7)
!11421 = !DILocation(line: 3078, column: 7, scope: !11420)
!11422 = !DILocation(line: 3078, column: 12, scope: !11420)
!11423 = !DILocation(line: 3078, column: 21, scope: !11420)
!11424 = !DILocation(line: 3079, column: 5, scope: !11420)
!11425 = !DILocation(line: 3079, column: 8, scope: !11420)
!11426 = !DILocation(line: 3079, column: 29, scope: !11420)
!11427 = !DILocation(line: 3077, column: 7, scope: !11405)
!11428 = !DILocation(line: 3081, column: 7, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 3080, column: 5)
!11430 = !DILocation(line: 3082, column: 7, scope: !11429)
!11431 = !DILocation(line: 3085, column: 8, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 3085, column: 7)
!11433 = !DILocation(line: 3085, column: 7, scope: !11405)
!11434 = !DILocation(line: 3087, column: 7, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 3086, column: 5)
!11436 = !DILocation(line: 3088, column: 7, scope: !11435)
!11437 = !DILocation(line: 3092, column: 3, scope: !11405)
!11438 = !DILocation(line: 3101, column: 7, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 3101, column: 6)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 3095, column: 7)
!11441 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 3093, column: 5)
!11442 = !DILocation(line: 3102, column: 7, scope: !11439)
!11443 = !DILocation(line: 0, scope: !11439)
!11444 = !DILocation(line: 3105, column: 10, scope: !11439)
!11445 = !DILocation(line: 3102, column: 10, scope: !11439)
!11446 = !DILocation(line: 3103, column: 7, scope: !11439)
!11447 = !DILocation(line: 3103, column: 11, scope: !11439)
!11448 = !DILocation(line: 3103, column: 40, scope: !11439)
!11449 = !DILocation(line: 3103, column: 37, scope: !11439)
!11450 = !DILocation(line: 3104, column: 20, scope: !11439)
!11451 = !DILocation(line: 3104, column: 17, scope: !11439)
!11452 = !DILocation(line: 3104, column: 4, scope: !11439)
!11453 = !DILocation(line: 3106, column: 3, scope: !11439)
!11454 = !DILocation(line: 3106, column: 6, scope: !11439)
!11455 = !DILocation(line: 3107, column: 3, scope: !11439)
!11456 = !DILocation(line: 3107, column: 7, scope: !11439)
!11457 = !DILocation(line: 3107, column: 37, scope: !11439)
!11458 = !DILocation(line: 3107, column: 34, scope: !11439)
!11459 = !DILocation(line: 3108, column: 22, scope: !11439)
!11460 = !DILocation(line: 3108, column: 19, scope: !11439)
!11461 = !DILocation(line: 3108, column: 7, scope: !11439)
!11462 = !DILocation(line: 3112, column: 28, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 3112, column: 6)
!11464 = !DILocation(line: 3113, column: 7, scope: !11463)
!11465 = !DILocation(line: 3113, column: 32, scope: !11463)
!11466 = !DILocation(line: 3114, column: 6, scope: !11463)
!11467 = !DILocation(line: 3114, column: 31, scope: !11463)
!11468 = !DILocation(line: 3115, column: 3, scope: !11463)
!11469 = !DILocation(line: 3115, column: 28, scope: !11463)
!11470 = !DILocation(line: 3112, column: 6, scope: !11440)
!11471 = !DILocation(line: 3120, column: 6, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 3120, column: 6)
!11473 = !DILocation(line: 3120, column: 36, scope: !11472)
!11474 = !DILocation(line: 3120, column: 33, scope: !11472)
!11475 = !DILocation(line: 3120, column: 6, scope: !11440)
!11476 = !DILocation(line: 3122, column: 6, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 3121, column: 4)
!11478 = !DILocation(line: 3123, column: 6, scope: !11477)
!11479 = !DILocation(line: 3124, column: 6, scope: !11477)
!11480 = !DILocation(line: 3125, column: 6, scope: !11477)
!11481 = !DILocation(line: 3133, column: 7, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 3133, column: 6)
!11483 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 3132, column: 7)
!11484 = !DILocation(line: 3133, column: 34, scope: !11482)
!11485 = !DILocation(line: 3133, column: 38, scope: !11482)
!11486 = !DILocation(line: 3134, column: 6, scope: !11482)
!11487 = !DILocation(line: 3134, column: 10, scope: !11482)
!11488 = !DILocation(line: 3135, column: 6, scope: !11482)
!11489 = !DILocation(line: 3135, column: 3, scope: !11482)
!11490 = !DILocation(line: 3133, column: 6, scope: !11483)
!11491 = !DILocation(line: 3137, column: 6, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 3136, column: 4)
!11493 = !DILocation(line: 3138, column: 6, scope: !11492)
!11494 = !DILocation(line: 3139, column: 6, scope: !11492)
!11495 = !DILocation(line: 3140, column: 6, scope: !11492)
!11496 = !DILocation(line: 3148, column: 7, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 3148, column: 6)
!11498 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 3147, column: 7)
!11499 = !DILocation(line: 3149, column: 6, scope: !11497)
!11500 = !DILocation(line: 3149, column: 10, scope: !11497)
!11501 = !DILocation(line: 3148, column: 6, scope: !11498)
!11502 = !DILocation(line: 3151, column: 6, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11497, file: !3, line: 3150, column: 4)
!11504 = !DILocation(line: 3152, column: 6, scope: !11503)
!11505 = !DILocation(line: 3153, column: 6, scope: !11503)
!11506 = !DILocation(line: 3154, column: 6, scope: !11503)
!11507 = !DILocation(line: 3162, column: 7, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 3162, column: 6)
!11509 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 3161, column: 7)
!11510 = !DILocation(line: 3162, column: 35, scope: !11508)
!11511 = !DILocation(line: 3162, column: 39, scope: !11508)
!11512 = !DILocation(line: 3162, column: 6, scope: !11509)
!11513 = !DILocation(line: 3164, column: 6, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 3163, column: 4)
!11515 = !DILocation(line: 3165, column: 6, scope: !11514)
!11516 = !DILocation(line: 3166, column: 6, scope: !11514)
!11517 = !DILocation(line: 3167, column: 6, scope: !11514)
!11518 = !DILocation(line: 3175, column: 7, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 3175, column: 6)
!11520 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 3174, column: 7)
!11521 = !DILocation(line: 3175, column: 34, scope: !11519)
!11522 = !DILocation(line: 3175, column: 38, scope: !11519)
!11523 = !DILocation(line: 3175, column: 6, scope: !11520)
!11524 = !DILocation(line: 3177, column: 6, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 3176, column: 4)
!11526 = !DILocation(line: 3178, column: 6, scope: !11525)
!11527 = !DILocation(line: 3179, column: 6, scope: !11525)
!11528 = !DILocation(line: 3180, column: 6, scope: !11525)
!11529 = !DILocation(line: 3206, column: 7, scope: !11441)
!11530 = !DILocation(line: 3207, column: 5, scope: !11441)
!11531 = !DILocation(line: 3210, column: 8, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 3210, column: 7)
!11533 = !DILocation(line: 3210, column: 7, scope: !11405)
!11534 = !DILocation(line: 3212, column: 7, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11532, file: !3, line: 3211, column: 5)
!11536 = !DILocation(line: 3213, column: 7, scope: !11535)
!11537 = !DILocation(line: 3214, column: 7, scope: !11535)
!11538 = !DILocation(line: 3215, column: 7, scope: !11535)
!11539 = !DILocation(line: 3219, column: 1, scope: !11405)
!11540 = distinct !DISubprogram(name: "verify_gimple_assign_binary", scope: !3, file: !3, line: 3225, type: !3633, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11541)
!11541 = !{!11542, !11543, !11544, !11545, !11546, !11547, !11548, !11549, !11550, !11557}
!11542 = !DILocalVariable(name: "stmt", arg: 1, scope: !11540, file: !3, line: 3225, type: !1028)
!11543 = !DILocalVariable(name: "rhs_code", scope: !11540, file: !3, line: 3227, type: !141)
!11544 = !DILocalVariable(name: "lhs", scope: !11540, file: !3, line: 3228, type: !704)
!11545 = !DILocalVariable(name: "lhs_type", scope: !11540, file: !3, line: 3229, type: !704)
!11546 = !DILocalVariable(name: "rhs1", scope: !11540, file: !3, line: 3230, type: !704)
!11547 = !DILocalVariable(name: "rhs1_type", scope: !11540, file: !3, line: 3231, type: !704)
!11548 = !DILocalVariable(name: "rhs2", scope: !11540, file: !3, line: 3232, type: !704)
!11549 = !DILocalVariable(name: "rhs2_type", scope: !11540, file: !3, line: 3233, type: !704)
!11550 = !DILocalVariable(name: "tem", scope: !11551, file: !3, line: 3353, type: !704)
!11551 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 3352, column: 8)
!11552 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 3351, column: 10)
!11553 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 3339, column: 4)
!11554 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 3337, column: 6)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3333, column: 7)
!11556 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 3252, column: 5)
!11557 = !DILabel(scope: !11558, name: "do_pointer_plus_expr_check", file: !3, line: 3377)
!11558 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3376, column: 7)
!11559 = !DILocation(line: 0, scope: !11540)
!11560 = !DILocation(line: 3227, column: 29, scope: !11540)
!11561 = !DILocation(line: 3228, column: 14, scope: !11540)
!11562 = !DILocation(line: 3229, column: 19, scope: !11540)
!11563 = !DILocation(line: 3230, column: 15, scope: !11540)
!11564 = !DILocation(line: 3231, column: 20, scope: !11540)
!11565 = !DILocation(line: 3232, column: 15, scope: !11540)
!11566 = !DILocation(line: 3233, column: 20, scope: !11540)
!11567 = !DILocation(line: 3235, column: 8, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 3235, column: 7)
!11569 = !DILocation(line: 3236, column: 7, scope: !11568)
!11570 = !DILocation(line: 3236, column: 12, scope: !11568)
!11571 = !DILocation(line: 3236, column: 21, scope: !11568)
!11572 = !DILocation(line: 3237, column: 5, scope: !11568)
!11573 = !DILocation(line: 3237, column: 8, scope: !11568)
!11574 = !DILocation(line: 3237, column: 29, scope: !11568)
!11575 = !DILocation(line: 3235, column: 7, scope: !11540)
!11576 = !DILocation(line: 3239, column: 7, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 3238, column: 5)
!11578 = !DILocation(line: 3240, column: 7, scope: !11577)
!11579 = !DILocation(line: 3243, column: 8, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 3243, column: 7)
!11581 = !DILocation(line: 3244, column: 7, scope: !11580)
!11582 = !DILocation(line: 3244, column: 11, scope: !11580)
!11583 = !DILocation(line: 3243, column: 7, scope: !11540)
!11584 = !DILocation(line: 3246, column: 7, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 3245, column: 5)
!11586 = !DILocation(line: 3247, column: 7, scope: !11585)
!11587 = !DILocation(line: 3251, column: 3, scope: !11540)
!11588 = !DILocation(line: 0, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 3363, column: 6)
!11590 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3362, column: 7)
!11591 = !DILocation(line: 3363, column: 6, scope: !11589)
!11592 = !DILocation(line: 3255, column: 6, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11594, file: !3, line: 3255, column: 6)
!11594 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3254, column: 7)
!11595 = !DILocation(line: 3255, column: 27, scope: !11593)
!11596 = !DILocation(line: 3256, column: 6, scope: !11593)
!11597 = !DILocation(line: 3256, column: 11, scope: !11593)
!11598 = !DILocation(line: 3257, column: 11, scope: !11593)
!11599 = !DILocation(line: 3257, column: 14, scope: !11593)
!11600 = !DILocation(line: 3258, column: 6, scope: !11593)
!11601 = !DILocation(line: 3258, column: 11, scope: !11593)
!11602 = !DILocation(line: 3259, column: 11, scope: !11593)
!11603 = !DILocation(line: 3259, column: 14, scope: !11593)
!11604 = !DILocation(line: 3255, column: 6, scope: !11594)
!11605 = !DILocation(line: 3261, column: 6, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11593, file: !3, line: 3260, column: 4)
!11607 = !DILocation(line: 3262, column: 6, scope: !11606)
!11608 = !DILocation(line: 3263, column: 6, scope: !11606)
!11609 = !DILocation(line: 3264, column: 6, scope: !11606)
!11610 = !DILocation(line: 3265, column: 6, scope: !11606)
!11611 = !DILocation(line: 3278, column: 8, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 3278, column: 6)
!11613 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3275, column: 7)
!11614 = !DILocation(line: 3279, column: 7, scope: !11612)
!11615 = !DILocation(line: 3279, column: 11, scope: !11612)
!11616 = !DILocation(line: 3280, column: 7, scope: !11612)
!11617 = !DILocation(line: 3280, column: 34, scope: !11612)
!11618 = !DILocation(line: 3281, column: 5, scope: !11612)
!11619 = !DILocation(line: 3281, column: 8, scope: !11612)
!11620 = !DILocation(line: 3282, column: 6, scope: !11612)
!11621 = !DILocation(line: 3282, column: 11, scope: !11612)
!11622 = !DILocation(line: 3284, column: 3, scope: !11612)
!11623 = !DILocation(line: 3284, column: 30, scope: !11612)
!11624 = !DILocation(line: 3285, column: 8, scope: !11612)
!11625 = !DILocation(line: 3285, column: 11, scope: !11612)
!11626 = !DILocation(line: 3286, column: 8, scope: !11612)
!11627 = !DILocation(line: 3286, column: 33, scope: !11612)
!11628 = !DILocation(line: 3287, column: 8, scope: !11612)
!11629 = !DILocation(line: 3287, column: 11, scope: !11612)
!11630 = !DILocation(line: 3288, column: 6, scope: !11612)
!11631 = !DILocation(line: 3288, column: 10, scope: !11612)
!11632 = !DILocation(line: 3278, column: 6, scope: !11613)
!11633 = !DILocation(line: 3290, column: 6, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11612, file: !3, line: 3289, column: 4)
!11635 = !DILocation(line: 3291, column: 6, scope: !11634)
!11636 = !DILocation(line: 3292, column: 6, scope: !11634)
!11637 = !DILocation(line: 3293, column: 6, scope: !11634)
!11638 = !DILocation(line: 3294, column: 6, scope: !11634)
!11639 = !DILocation(line: 3303, column: 6, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 3303, column: 6)
!11641 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3302, column: 7)
!11642 = !DILocation(line: 3303, column: 28, scope: !11640)
!11643 = !DILocation(line: 3304, column: 6, scope: !11640)
!11644 = !DILocation(line: 3304, column: 11, scope: !11640)
!11645 = !DILocation(line: 3305, column: 4, scope: !11640)
!11646 = !DILocation(line: 3305, column: 7, scope: !11640)
!11647 = !DILocation(line: 3306, column: 4, scope: !11640)
!11648 = !DILocation(line: 3306, column: 7, scope: !11640)
!11649 = !DILocation(line: 3307, column: 6, scope: !11640)
!11650 = !DILocation(line: 3307, column: 11, scope: !11640)
!11651 = !DILocation(line: 3308, column: 3, scope: !11640)
!11652 = !DILocation(line: 3308, column: 29, scope: !11640)
!11653 = !DILocation(line: 3309, column: 7, scope: !11640)
!11654 = !DILocation(line: 3309, column: 11, scope: !11640)
!11655 = !DILocation(line: 3310, column: 6, scope: !11640)
!11656 = !DILocation(line: 3310, column: 10, scope: !11640)
!11657 = !DILocation(line: 3303, column: 6, scope: !11641)
!11658 = !DILocation(line: 3312, column: 6, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11640, file: !3, line: 3311, column: 4)
!11660 = !DILocation(line: 3313, column: 6, scope: !11659)
!11661 = !DILocation(line: 3314, column: 6, scope: !11659)
!11662 = !DILocation(line: 3315, column: 6, scope: !11659)
!11663 = !DILocation(line: 3316, column: 6, scope: !11659)
!11664 = !DILocation(line: 3320, column: 6, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 3320, column: 6)
!11666 = !DILocation(line: 3321, column: 6, scope: !11665)
!11667 = !DILocation(line: 3321, column: 10, scope: !11665)
!11668 = !DILocation(line: 3321, column: 27, scope: !11665)
!11669 = !DILocation(line: 3322, column: 3, scope: !11665)
!11670 = !DILocation(line: 3323, column: 9, scope: !11665)
!11671 = !DILocation(line: 3322, column: 7, scope: !11665)
!11672 = !DILocation(line: 3320, column: 6, scope: !11641)
!11673 = !DILocation(line: 3325, column: 6, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 3324, column: 4)
!11675 = !DILocation(line: 3326, column: 6, scope: !11674)
!11676 = !DILocation(line: 3337, column: 6, scope: !11554)
!11677 = !DILocation(line: 3337, column: 27, scope: !11554)
!11678 = !DILocation(line: 3338, column: 6, scope: !11554)
!11679 = !DILocation(line: 3338, column: 9, scope: !11554)
!11680 = !DILocation(line: 3337, column: 6, scope: !11555)
!11681 = !DILocation(line: 3340, column: 10, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 3340, column: 10)
!11683 = !DILocation(line: 3340, column: 32, scope: !11682)
!11684 = !DILocation(line: 3341, column: 3, scope: !11682)
!11685 = !DILocation(line: 3341, column: 6, scope: !11682)
!11686 = !DILocation(line: 3341, column: 28, scope: !11682)
!11687 = !DILocation(line: 3340, column: 10, scope: !11553)
!11688 = !DILocation(line: 3343, column: 3, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 3342, column: 8)
!11690 = !DILocation(line: 3344, column: 3, scope: !11689)
!11691 = !DILocation(line: 3347, column: 18, scope: !11553)
!11692 = !DILocation(line: 3348, column: 18, scope: !11553)
!11693 = !DILocation(line: 3351, column: 10, scope: !11552)
!11694 = !DILocation(line: 3351, column: 10, scope: !11553)
!11695 = !DILocation(line: 0, scope: !11551)
!11696 = !DILocation(line: 3356, column: 8, scope: !11551)
!11697 = !DILocation(line: 3364, column: 6, scope: !11589)
!11698 = !DILocation(line: 3364, column: 9, scope: !11589)
!11699 = !DILocation(line: 3365, column: 6, scope: !11589)
!11700 = !DILocation(line: 3365, column: 9, scope: !11589)
!11701 = !DILocation(line: 3363, column: 6, scope: !11590)
!11702 = !DILocation(line: 3367, column: 6, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 3366, column: 4)
!11704 = !DILocation(line: 3368, column: 6, scope: !11703)
!11705 = !DILocation(line: 3377, column: 1, scope: !11558)
!11706 = !DILocation(line: 3378, column: 7, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 3378, column: 6)
!11708 = !DILocation(line: 3379, column: 6, scope: !11707)
!11709 = !DILocation(line: 3379, column: 10, scope: !11707)
!11710 = !DILocation(line: 3380, column: 6, scope: !11707)
!11711 = !DILocation(line: 3380, column: 37, scope: !11707)
!11712 = !DILocation(line: 3380, column: 10, scope: !11707)
!11713 = !DILocation(line: 3378, column: 6, scope: !11558)
!11714 = !DILocation(line: 3382, column: 6, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 3381, column: 4)
!11716 = !DILocation(line: 3383, column: 6, scope: !11715)
!11717 = !DILocation(line: 3384, column: 6, scope: !11715)
!11718 = !DILocation(line: 3385, column: 6, scope: !11715)
!11719 = !DILocation(line: 3386, column: 6, scope: !11715)
!11720 = !DILocation(line: 3394, column: 7, scope: !11556)
!11721 = !DILocation(line: 3401, column: 7, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11723, file: !3, line: 3401, column: 6)
!11723 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3399, column: 7)
!11724 = !DILocation(line: 3402, column: 6, scope: !11722)
!11725 = !DILocation(line: 3402, column: 10, scope: !11722)
!11726 = !DILocation(line: 3403, column: 6, scope: !11722)
!11727 = !DILocation(line: 3403, column: 10, scope: !11722)
!11728 = !DILocation(line: 3401, column: 6, scope: !11723)
!11729 = !DILocation(line: 3405, column: 6, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11722, file: !3, line: 3404, column: 4)
!11731 = !DILocation(line: 3406, column: 6, scope: !11730)
!11732 = !DILocation(line: 3407, column: 6, scope: !11730)
!11733 = !DILocation(line: 3408, column: 6, scope: !11730)
!11734 = !DILocation(line: 3409, column: 6, scope: !11730)
!11735 = !DILocation(line: 3431, column: 14, scope: !11556)
!11736 = !DILocation(line: 3431, column: 7, scope: !11556)
!11737 = !DILocation(line: 3467, column: 7, scope: !11556)
!11738 = !DILocation(line: 3468, column: 5, scope: !11556)
!11739 = !DILocation(line: 3470, column: 8, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 3470, column: 7)
!11741 = !DILocation(line: 3471, column: 7, scope: !11740)
!11742 = !DILocation(line: 3471, column: 11, scope: !11740)
!11743 = !DILocation(line: 3470, column: 7, scope: !11540)
!11744 = !DILocation(line: 3473, column: 7, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 3472, column: 5)
!11746 = !DILocation(line: 3474, column: 7, scope: !11745)
!11747 = !DILocation(line: 3475, column: 7, scope: !11745)
!11748 = !DILocation(line: 3476, column: 7, scope: !11745)
!11749 = !DILocation(line: 3477, column: 7, scope: !11745)
!11750 = !DILocation(line: 3481, column: 1, scope: !11540)
!11751 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !613, file: !613, line: 1686, type: !11752, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11754)
!11752 = !DISubroutineType(types: !11753)
!11753 = !{!684, !141}
!11754 = !{!11755}
!11755 = !DILocalVariable(name: "code", arg: 1, scope: !11751, file: !613, line: 1686, type: !141)
!11756 = !DILocation(line: 0, scope: !11751)
!11757 = !DILocation(line: 1688, column: 34, scope: !11751)
!11758 = !DILocation(line: 1688, column: 10, scope: !11751)
!11759 = !DILocation(line: 1688, column: 3, scope: !11751)
!11760 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !613, file: !613, line: 1815, type: !3093, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11761)
!11761 = !{!11762, !11763}
!11762 = !DILocalVariable(name: "gs", arg: 1, scope: !11760, file: !613, line: 1815, type: !3078)
!11763 = !DILocalVariable(name: "code", scope: !11760, file: !613, line: 1817, type: !141)
!11764 = !DILocation(line: 0, scope: !11760)
!11765 = !DILocation(line: 1820, column: 10, scope: !11760)
!11766 = !DILocation(line: 1821, column: 7, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11760, file: !613, line: 1821, column: 7)
!11768 = !DILocation(line: 1821, column: 35, scope: !11767)
!11769 = !DILocation(line: 1821, column: 7, scope: !11760)
!11770 = !DILocation(line: 1822, column: 12, scope: !11767)
!11771 = !DILocation(line: 1822, column: 5, scope: !11767)
!11772 = !DILocation(line: 1824, column: 3, scope: !11760)
!11773 = distinct !DISubprogram(name: "gimple_expr_code", scope: !613, file: !613, line: 1438, type: !3093, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11774)
!11774 = !{!11775, !11776}
!11775 = !DILocalVariable(name: "stmt", arg: 1, scope: !11773, file: !613, line: 1438, type: !3078)
!11776 = !DILocalVariable(name: "code", scope: !11773, file: !613, line: 1440, type: !612)
!11777 = !DILocation(line: 0, scope: !11773)
!11778 = !DILocation(line: 1440, column: 27, scope: !11773)
!11779 = !DILocation(line: 1441, column: 29, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11773, file: !613, line: 1441, column: 7)
!11781 = !DILocation(line: 1442, column: 42, scope: !11780)
!11782 = !DILocation(line: 1442, column: 5, scope: !11780)
!11783 = !DILocation(line: 1446, column: 5, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11780, file: !613, line: 1443, column: 12)
!11785 = !DILocation(line: 1448, column: 5, scope: !11773)
!11786 = !DILocation(line: 1450, column: 1, scope: !11773)
!11787 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !613, file: !613, line: 1727, type: !3101, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11788)
!11788 = !{!11789}
!11789 = !DILocalVariable(name: "gs", arg: 1, scope: !11787, file: !613, line: 1727, type: !3078)
!11790 = !DILocation(line: 0, scope: !11787)
!11791 = !DILocation(line: 1730, column: 10, scope: !11787)
!11792 = !DILocation(line: 1730, column: 3, scope: !11787)
!11793 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !613, file: !613, line: 1694, type: !3101, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11794)
!11794 = !{!11795}
!11795 = !DILocalVariable(name: "gs", arg: 1, scope: !11793, file: !613, line: 1694, type: !3078)
!11796 = !DILocation(line: 0, scope: !11793)
!11797 = !DILocation(line: 1697, column: 10, scope: !11793)
!11798 = !DILocation(line: 1697, column: 3, scope: !11793)
!11799 = distinct !DISubprogram(name: "handled_component_p", scope: !142, file: !142, line: 4551, type: !4243, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11800)
!11800 = !{!11801}
!11801 = !DILocalVariable(name: "t", arg: 1, scope: !11799, file: !142, line: 4551, type: !4245)
!11802 = !DILocation(line: 0, scope: !11799)
!11803 = !DILocation(line: 4553, column: 11, scope: !11799)
!11804 = !DILocation(line: 4553, column: 3, scope: !11799)
!11805 = !DILocation(line: 4565, column: 7, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11799, file: !142, line: 4554, column: 5)
!11807 = !DILocation(line: 0, scope: !11806)
!11808 = !DILocation(line: 4567, column: 1, scope: !11799)
!11809 = distinct !DISubprogram(name: "verify_types_in_gimple_reference", scope: !3, file: !3, line: 2805, type: !11810, scopeLine: 2806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11812)
!11810 = !DISubroutineType(types: !11811)
!11811 = !{!692, !704, !692}
!11812 = !{!11813, !11814, !11815}
!11813 = !DILocalVariable(name: "expr", arg: 1, scope: !11809, file: !3, line: 2805, type: !704)
!11814 = !DILocalVariable(name: "require_lvalue", arg: 2, scope: !11809, file: !3, line: 2805, type: !692)
!11815 = !DILocalVariable(name: "op", scope: !11816, file: !3, line: 2809, type: !704)
!11816 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 2808, column: 5)
!11817 = !DILocation(line: 0, scope: !11809)
!11818 = !DILocation(line: 0, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 2874, column: 8)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 2868, column: 2)
!11821 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2867, column: 11)
!11822 = !DILocation(line: 2807, column: 3, scope: !11809)
!11823 = !DILocation(line: 2807, column: 10, scope: !11809)
!11824 = !DILocation(line: 2809, column: 17, scope: !11816)
!11825 = !DILocation(line: 0, scope: !11816)
!11826 = !DILocation(line: 2811, column: 11, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2811, column: 11)
!11828 = !DILocation(line: 2811, column: 28, scope: !11827)
!11829 = !DILocation(line: 2812, column: 4, scope: !11827)
!11830 = !DILocation(line: 2812, column: 24, scope: !11827)
!11831 = !DILocation(line: 2811, column: 11, scope: !11816)
!11832 = !DILocation(line: 2814, column: 24, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11834, file: !3, line: 2814, column: 8)
!11834 = distinct !DILexicalBlock(scope: !11827, file: !3, line: 2813, column: 2)
!11835 = !DILocation(line: 2814, column: 9, scope: !11833)
!11836 = !DILocation(line: 2815, column: 8, scope: !11833)
!11837 = !DILocation(line: 2815, column: 12, scope: !11833)
!11838 = !DILocation(line: 2816, column: 5, scope: !11833)
!11839 = !DILocation(line: 2816, column: 9, scope: !11833)
!11840 = !DILocation(line: 2817, column: 8, scope: !11833)
!11841 = !DILocation(line: 2817, column: 12, scope: !11833)
!11842 = !DILocation(line: 2818, column: 5, scope: !11833)
!11843 = !DILocation(line: 2818, column: 9, scope: !11833)
!11844 = !DILocation(line: 2814, column: 8, scope: !11834)
!11845 = !DILocation(line: 2820, column: 8, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 2819, column: 6)
!11847 = !DILocation(line: 2821, column: 8, scope: !11846)
!11848 = !DILocation(line: 2822, column: 8, scope: !11846)
!11849 = !DILocation(line: 2827, column: 11, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2827, column: 11)
!11851 = !DILocation(line: 2827, column: 28, scope: !11850)
!11852 = !DILocation(line: 2828, column: 4, scope: !11850)
!11853 = !DILocation(line: 2828, column: 35, scope: !11850)
!11854 = !DILocation(line: 2829, column: 7, scope: !11850)
!11855 = !DILocation(line: 2828, column: 8, scope: !11850)
!11856 = !DILocation(line: 2827, column: 11, scope: !11816)
!11857 = !DILocation(line: 2836, column: 11, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2836, column: 11)
!11859 = !DILocation(line: 2831, column: 4, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11850, file: !3, line: 2830, column: 2)
!11861 = !DILocation(line: 2832, column: 24, scope: !11860)
!11862 = !DILocation(line: 2832, column: 4, scope: !11860)
!11863 = !DILocation(line: 2833, column: 24, scope: !11860)
!11864 = !DILocation(line: 2833, column: 4, scope: !11860)
!11865 = !DILocation(line: 2834, column: 4, scope: !11860)
!11866 = !DILocation(line: 2836, column: 28, scope: !11858)
!11867 = !DILocation(line: 2837, column: 4, scope: !11858)
!11868 = !DILocation(line: 2837, column: 35, scope: !11858)
!11869 = !DILocation(line: 2838, column: 7, scope: !11858)
!11870 = !DILocation(line: 2837, column: 8, scope: !11858)
!11871 = !DILocation(line: 2836, column: 11, scope: !11816)
!11872 = !DILocation(line: 2846, column: 12, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2846, column: 11)
!11874 = !DILocation(line: 2846, column: 29, scope: !11873)
!11875 = !DILocation(line: 2840, column: 4, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11858, file: !3, line: 2839, column: 2)
!11877 = !DILocation(line: 2841, column: 24, scope: !11876)
!11878 = !DILocation(line: 2841, column: 4, scope: !11876)
!11879 = !DILocation(line: 2842, column: 24, scope: !11876)
!11880 = !DILocation(line: 2842, column: 4, scope: !11876)
!11881 = !DILocation(line: 2843, column: 4, scope: !11876)
!11882 = !DILocation(line: 2847, column: 5, scope: !11873)
!11883 = !DILocation(line: 2847, column: 25, scope: !11873)
!11884 = !DILocation(line: 2848, column: 4, scope: !11873)
!11885 = !DILocation(line: 2848, column: 35, scope: !11873)
!11886 = !DILocation(line: 2849, column: 7, scope: !11873)
!11887 = !DILocation(line: 2848, column: 8, scope: !11873)
!11888 = !DILocation(line: 2846, column: 11, scope: !11816)
!11889 = !DILocation(line: 2857, column: 11, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2857, column: 11)
!11891 = !DILocation(line: 2851, column: 4, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11873, file: !3, line: 2850, column: 2)
!11893 = !DILocation(line: 2852, column: 24, scope: !11892)
!11894 = !DILocation(line: 2852, column: 4, scope: !11892)
!11895 = !DILocation(line: 2853, column: 24, scope: !11892)
!11896 = !DILocation(line: 2853, column: 4, scope: !11892)
!11897 = !DILocation(line: 2854, column: 4, scope: !11892)
!11898 = !DILocation(line: 2857, column: 28, scope: !11890)
!11899 = !DILocation(line: 2858, column: 4, scope: !11890)
!11900 = !DILocation(line: 2858, column: 35, scope: !11890)
!11901 = !DILocation(line: 2859, column: 7, scope: !11890)
!11902 = !DILocation(line: 2858, column: 8, scope: !11890)
!11903 = !DILocation(line: 2857, column: 11, scope: !11816)
!11904 = !DILocation(line: 2867, column: 11, scope: !11821)
!11905 = !DILocation(line: 2861, column: 4, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 2860, column: 2)
!11907 = !DILocation(line: 2862, column: 24, scope: !11906)
!11908 = !DILocation(line: 2862, column: 4, scope: !11906)
!11909 = !DILocation(line: 2863, column: 24, scope: !11906)
!11910 = !DILocation(line: 2863, column: 4, scope: !11906)
!11911 = !DILocation(line: 2864, column: 4, scope: !11906)
!11912 = !DILocation(line: 2867, column: 28, scope: !11821)
!11913 = !DILocation(line: 2867, column: 11, scope: !11816)
!11914 = !DILocation(line: 2875, column: 8, scope: !11819)
!11915 = !DILocation(line: 2875, column: 12, scope: !11819)
!11916 = !DILocation(line: 2875, column: 27, scope: !11819)
!11917 = !DILocation(line: 2876, column: 5, scope: !11819)
!11918 = !DILocation(line: 2876, column: 8, scope: !11819)
!11919 = !DILocation(line: 2874, column: 8, scope: !11820)
!11920 = !DILocation(line: 2878, column: 8, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 2877, column: 6)
!11922 = !DILocation(line: 2879, column: 8, scope: !11921)
!11923 = !DILocation(line: 2880, column: 8, scope: !11921)
!11924 = !DILocation(line: 2882, column: 14, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 2882, column: 13)
!11926 = !DILocation(line: 2882, column: 13, scope: !11819)
!11927 = !DILocation(line: 2887, column: 5, scope: !11809)
!11928 = distinct !{!11928, !11822, !11927}
!11929 = !DILocation(line: 2889, column: 27, scope: !11809)
!11930 = !DILocation(line: 2889, column: 31, scope: !11809)
!11931 = !DILocation(line: 2890, column: 4, scope: !11809)
!11932 = !DILocation(line: 2890, column: 7, scope: !11809)
!11933 = !DILocation(line: 2889, column: 3, scope: !11809)
!11934 = !DILocation(line: 2891, column: 1, scope: !11809)
!11935 = distinct !DISubprogram(name: "one_pointer_to_useless_type_conversion_p", scope: !3, file: !3, line: 2897, type: !11936, scopeLine: 2898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11938)
!11936 = !DISubroutineType(types: !11937)
!11937 = !{!692, !704, !704}
!11938 = !{!11939, !11940, !11941}
!11939 = !DILocalVariable(name: "dest", arg: 1, scope: !11935, file: !3, line: 2897, type: !704)
!11940 = !DILocalVariable(name: "src_obj", arg: 2, scope: !11935, file: !3, line: 2897, type: !704)
!11941 = !DILocalVariable(name: "src", scope: !11935, file: !3, line: 2899, type: !704)
!11942 = !DILocation(line: 0, scope: !11935)
!11943 = !DILocation(line: 2901, column: 8, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11935, file: !3, line: 2901, column: 7)
!11945 = !DILocation(line: 2901, column: 7, scope: !11935)
!11946 = !DILocation(line: 2904, column: 8, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11935, file: !3, line: 2904, column: 3)
!11948 = !DILocation(line: 0, scope: !11947)
!11949 = !DILocation(line: 2904, column: 3, scope: !11947)
!11950 = !DILocation(line: 2905, column: 9, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !3, line: 2905, column: 9)
!11952 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 2904, column: 3)
!11953 = !DILocation(line: 2905, column: 9, scope: !11952)
!11954 = !DILocation(line: 2904, column: 52, scope: !11952)
!11955 = !DILocation(line: 2904, column: 3, scope: !11952)
!11956 = distinct !{!11956, !11949, !11957}
!11957 = !DILocation(line: 2906, column: 14, scope: !11947)
!11958 = !DILocation(line: 2909, column: 1, scope: !11935)
!11959 = distinct !DISubprogram(name: "verify_types_in_gimple_min_lval", scope: !3, file: !3, line: 2763, type: !5051, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11960)
!11960 = !{!11961, !11962}
!11961 = !DILocalVariable(name: "expr", arg: 1, scope: !11959, file: !3, line: 2763, type: !704)
!11962 = !DILocalVariable(name: "op", scope: !11959, file: !3, line: 2765, type: !704)
!11963 = !DILocation(line: 0, scope: !11959)
!11964 = !DILocation(line: 2767, column: 7, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2767, column: 7)
!11966 = !DILocation(line: 2767, column: 7, scope: !11959)
!11967 = !DILocation(line: 2770, column: 8, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2770, column: 7)
!11969 = !DILocation(line: 2771, column: 7, scope: !11968)
!11970 = !DILocation(line: 2771, column: 27, scope: !11968)
!11971 = !DILocation(line: 2770, column: 7, scope: !11959)
!11972 = !DILocation(line: 2773, column: 7, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11968, file: !3, line: 2772, column: 5)
!11974 = !DILocation(line: 2774, column: 7, scope: !11973)
!11975 = !DILocation(line: 2778, column: 24, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2778, column: 7)
!11977 = !DILocation(line: 2778, column: 7, scope: !11959)
!11978 = !DILocation(line: 2781, column: 8, scope: !11959)
!11979 = !DILocation(line: 2782, column: 8, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2782, column: 7)
!11981 = !DILocation(line: 2782, column: 7, scope: !11959)
!11982 = !DILocation(line: 2784, column: 7, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11980, file: !3, line: 2783, column: 5)
!11984 = !DILocation(line: 2785, column: 7, scope: !11983)
!11985 = !DILocation(line: 2786, column: 7, scope: !11983)
!11986 = !DILocation(line: 2788, column: 35, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2788, column: 7)
!11988 = !DILocation(line: 2789, column: 7, scope: !11987)
!11989 = !DILocation(line: 2788, column: 8, scope: !11987)
!11990 = !DILocation(line: 2788, column: 7, scope: !11959)
!11991 = !DILocation(line: 2791, column: 7, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 2790, column: 5)
!11993 = !DILocation(line: 2792, column: 27, scope: !11992)
!11994 = !DILocation(line: 2792, column: 7, scope: !11992)
!11995 = !DILocation(line: 2793, column: 27, scope: !11992)
!11996 = !DILocation(line: 2793, column: 7, scope: !11992)
!11997 = !DILocation(line: 2794, column: 7, scope: !11992)
!11998 = !DILocation(line: 2798, column: 1, scope: !11959)
!11999 = distinct !DISubprogram(name: "valid_fixed_convert_types_p", scope: !3, file: !3, line: 2915, type: !11936, scopeLine: 2916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12000)
!12000 = !{!12001, !12002}
!12001 = !DILocalVariable(name: "type1", arg: 1, scope: !11999, file: !3, line: 2915, type: !704)
!12002 = !DILocalVariable(name: "type2", arg: 2, scope: !11999, file: !3, line: 2915, type: !704)
!12003 = !DILocation(line: 0, scope: !11999)
!12004 = !DILocation(line: 2917, column: 11, scope: !11999)
!12005 = !DILocation(line: 2918, column: 4, scope: !11999)
!12006 = !DILocation(line: 2918, column: 8, scope: !11999)
!12007 = !DILocation(line: 2919, column: 8, scope: !11999)
!12008 = !DILocation(line: 2919, column: 11, scope: !11999)
!12009 = !DILocation(line: 2920, column: 8, scope: !11999)
!12010 = !DILocation(line: 2920, column: 11, scope: !11999)
!12011 = !DILocation(line: 2917, column: 3, scope: !11999)
!12012 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !613, file: !613, line: 1759, type: !3101, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12013)
!12013 = !{!12014}
!12014 = !DILocalVariable(name: "gs", arg: 1, scope: !12012, file: !613, line: 1759, type: !3078)
!12015 = !DILocation(line: 0, scope: !12012)
!12016 = !DILocation(line: 1763, column: 7, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12012, file: !613, line: 1763, column: 7)
!12018 = !DILocation(line: 1763, column: 27, scope: !12017)
!12019 = !DILocation(line: 1763, column: 7, scope: !12012)
!12020 = !DILocation(line: 1764, column: 12, scope: !12017)
!12021 = !DILocation(line: 1764, column: 5, scope: !12017)
!12022 = !DILocation(line: 0, scope: !12017)
!12023 = !DILocation(line: 1767, column: 1, scope: !12012)
!12024 = distinct !DISubprogram(name: "gimple_call_fn", scope: !613, file: !613, line: 1911, type: !3101, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12025)
!12025 = !{!12026}
!12026 = !DILocalVariable(name: "gs", arg: 1, scope: !12024, file: !613, line: 1911, type: !3078)
!12027 = !DILocation(line: 0, scope: !12024)
!12028 = !DILocation(line: 1914, column: 10, scope: !12024)
!12029 = !DILocation(line: 1914, column: 3, scope: !12024)
!12030 = distinct !DISubprogram(name: "gimple_call_noreturn_p", scope: !613, file: !613, line: 2178, type: !3633, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12031)
!12031 = !{!12032}
!12032 = !DILocalVariable(name: "s", arg: 1, scope: !12030, file: !613, line: 2178, type: !1028)
!12033 = !DILocation(line: 0, scope: !12030)
!12034 = !DILocation(line: 2181, column: 11, scope: !12030)
!12035 = !DILocation(line: 2181, column: 10, scope: !12030)
!12036 = !DILocation(line: 2181, column: 3, scope: !12030)
!12037 = distinct !DISubprogram(name: "gimple_call_chain", scope: !613, file: !613, line: 1983, type: !3101, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12038)
!12038 = !{!12039}
!12039 = !DILocalVariable(name: "gs", arg: 1, scope: !12037, file: !613, line: 1983, type: !3078)
!12040 = !DILocation(line: 0, scope: !12037)
!12041 = !DILocation(line: 1986, column: 10, scope: !12037)
!12042 = !DILocation(line: 1986, column: 3, scope: !12037)
!12043 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !613, file: !613, line: 2013, type: !3590, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12044)
!12044 = !{!12045, !12046}
!12045 = !DILocalVariable(name: "gs", arg: 1, scope: !12043, file: !613, line: 2013, type: !3078)
!12046 = !DILocalVariable(name: "num_ops", scope: !12043, file: !613, line: 2015, type: !7)
!12047 = !DILocation(line: 0, scope: !12043)
!12048 = !DILocation(line: 2017, column: 13, scope: !12043)
!12049 = !DILocation(line: 2018, column: 18, scope: !12043)
!12050 = !DILocation(line: 2018, column: 3, scope: !12043)
!12051 = distinct !DISubprogram(name: "gimple_call_arg", scope: !613, file: !613, line: 2025, type: !3601, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12052)
!12052 = !{!12053, !12054}
!12053 = !DILocalVariable(name: "gs", arg: 1, scope: !12051, file: !613, line: 2025, type: !3078)
!12054 = !DILocalVariable(name: "index", arg: 2, scope: !12051, file: !613, line: 2025, type: !7)
!12055 = !DILocation(line: 0, scope: !12051)
!12056 = !DILocation(line: 2028, column: 31, scope: !12051)
!12057 = !DILocation(line: 2028, column: 10, scope: !12051)
!12058 = !DILocation(line: 2028, column: 3, scope: !12051)
!12059 = distinct !DISubprogram(name: "gimple_switch_index", scope: !613, file: !613, line: 3180, type: !3101, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12060)
!12060 = !{!12061}
!12061 = !DILocalVariable(name: "gs", arg: 1, scope: !12059, file: !613, line: 3180, type: !3078)
!12062 = !DILocation(line: 0, scope: !12059)
!12063 = !DILocation(line: 3183, column: 10, scope: !12059)
!12064 = !DILocation(line: 3183, column: 3, scope: !12059)
!12065 = distinct !DISubprogram(name: "gimple_return_retval", scope: !613, file: !613, line: 4253, type: !3101, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12066)
!12066 = !{!12067}
!12067 = !DILocalVariable(name: "gs", arg: 1, scope: !12065, file: !613, line: 4253, type: !3078)
!12068 = !DILocation(line: 0, scope: !12065)
!12069 = !DILocation(line: 4256, column: 10, scope: !12065)
!12070 = !DILocation(line: 4256, column: 3, scope: !12065)
!12071 = distinct !DISubprogram(name: "gsi_one_before_end_p", scope: !613, file: !613, line: 4476, type: !3295, scopeLine: 4477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12072)
!12072 = !{!12073}
!12073 = !DILocalVariable(name: "i", arg: 1, scope: !12071, file: !613, line: 4476, type: !2222)
!12074 = !DILocation(line: 4476, column: 44, scope: !12071)
!12075 = !DILocation(line: 4478, column: 12, scope: !12071)
!12076 = !DILocation(line: 4478, column: 16, scope: !12071)
!12077 = !DILocation(line: 4478, column: 24, scope: !12071)
!12078 = !DILocation(line: 4478, column: 34, scope: !12071)
!12079 = !DILocation(line: 4478, column: 39, scope: !12071)
!12080 = !DILocation(line: 4478, column: 3, scope: !12071)
!12081 = distinct !DISubprogram(name: "is_gimple_omp", scope: !613, file: !613, line: 4289, type: !3903, scopeLine: 4290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12082)
!12082 = !{!12083}
!12083 = !DILocalVariable(name: "stmt", arg: 1, scope: !12081, file: !613, line: 4289, type: !3078)
!12084 = !DILocation(line: 0, scope: !12081)
!12085 = !DILocation(line: 4291, column: 11, scope: !12081)
!12086 = !DILocation(line: 4291, column: 3, scope: !12081)
!12087 = !DILocation(line: 0, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12081, file: !613, line: 4292, column: 5)
!12089 = !DILocation(line: 4298, column: 1, scope: !12081)
!12090 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !613, file: !613, line: 1954, type: !3101, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12091)
!12091 = !{!12092, !12093}
!12092 = !DILocalVariable(name: "gs", arg: 1, scope: !12090, file: !613, line: 1954, type: !3078)
!12093 = !DILocalVariable(name: "addr", scope: !12090, file: !613, line: 1956, type: !704)
!12094 = !DILocation(line: 0, scope: !12090)
!12095 = !DILocation(line: 1956, column: 15, scope: !12090)
!12096 = !DILocation(line: 1957, column: 7, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12090, file: !613, line: 1957, column: 7)
!12098 = !DILocation(line: 1957, column: 24, scope: !12097)
!12099 = !DILocation(line: 1957, column: 7, scope: !12090)
!12100 = !DILocation(line: 1958, column: 12, scope: !12097)
!12101 = !DILocation(line: 1958, column: 5, scope: !12097)
!12102 = !DILocation(line: 1960, column: 1, scope: !12090)
!12103 = distinct !DISubprogram(name: "verify_expr", scope: !3, file: !3, line: 2493, type: !5329, scopeLine: 2494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12104)
!12104 = !{!12105, !12106, !12107, !12108, !12109, !12110, !12113, !12114, !12115}
!12105 = !DILocalVariable(name: "tp", arg: 1, scope: !12103, file: !3, line: 2493, type: !1062)
!12106 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !12103, file: !3, line: 2493, type: !2188)
!12107 = !DILocalVariable(name: "data", arg: 3, scope: !12103, file: !3, line: 2493, type: !697)
!12108 = !DILocalVariable(name: "t", scope: !12103, file: !3, line: 2495, type: !704)
!12109 = !DILocalVariable(name: "x", scope: !12103, file: !3, line: 2495, type: !704)
!12110 = !DILocalVariable(name: "old_constant", scope: !12111, file: !3, line: 2539, type: !692)
!12111 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2538, column: 7)
!12112 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 2506, column: 5)
!12113 = !DILocalVariable(name: "old_side_effects", scope: !12111, file: !3, line: 2540, type: !692)
!12114 = !DILocalVariable(name: "new_constant", scope: !12111, file: !3, line: 2541, type: !692)
!12115 = !DILocalVariable(name: "new_side_effects", scope: !12111, file: !3, line: 2542, type: !692)
!12116 = !DILocation(line: 0, scope: !12103)
!12117 = !DILocation(line: 2495, column: 12, scope: !12103)
!12118 = !DILocation(line: 2497, column: 7, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 2497, column: 7)
!12120 = !DILocation(line: 2497, column: 7, scope: !12103)
!12121 = !DILocation(line: 2498, column: 20, scope: !12119)
!12122 = !DILocation(line: 2505, column: 11, scope: !12103)
!12123 = !DILocation(line: 2498, column: 5, scope: !12119)
!12124 = !DILocation(line: 2505, column: 3, scope: !12103)
!12125 = !DILocation(line: 2508, column: 11, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2508, column: 11)
!12127 = !DILocation(line: 2508, column: 11, scope: !12112)
!12128 = !DILocation(line: 2510, column: 4, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12126, file: !3, line: 2509, column: 2)
!12130 = !DILocation(line: 2511, column: 11, scope: !12129)
!12131 = !DILocation(line: 2511, column: 4, scope: !12129)
!12132 = !DILocation(line: 2516, column: 11, scope: !12112)
!12133 = !DILocation(line: 2517, column: 12, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2517, column: 11)
!12135 = !DILocation(line: 2517, column: 30, scope: !12134)
!12136 = !DILocation(line: 2517, column: 34, scope: !12134)
!12137 = !DILocation(line: 2517, column: 11, scope: !12112)
!12138 = !DILocation(line: 2519, column: 4, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 2518, column: 2)
!12140 = !DILocation(line: 2520, column: 4, scope: !12139)
!12141 = !DILocation(line: 2525, column: 17, scope: !12112)
!12142 = !DILocation(line: 2525, column: 11, scope: !12112)
!12143 = !DILocation(line: 2526, column: 16, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2526, column: 11)
!12145 = !DILocation(line: 2526, column: 13, scope: !12144)
!12146 = !DILocation(line: 2526, column: 11, scope: !12112)
!12147 = !DILocation(line: 2528, column: 4, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12144, file: !3, line: 2527, column: 2)
!12149 = !DILocation(line: 2529, column: 11, scope: !12148)
!12150 = !DILocation(line: 2529, column: 4, scope: !12148)
!12151 = !DILocation(line: 2534, column: 7, scope: !12112)
!12152 = !DILocation(line: 2535, column: 14, scope: !12112)
!12153 = !DILocation(line: 2535, column: 7, scope: !12112)
!12154 = !DILocation(line: 2544, column: 2, scope: !12111)
!12155 = !DILocation(line: 2546, column: 17, scope: !12111)
!12156 = !DILocation(line: 0, scope: !12111)
!12157 = !DILocation(line: 2549, column: 2, scope: !12111)
!12158 = !DILocation(line: 2551, column: 17, scope: !12111)
!12159 = !DILocation(line: 2553, column: 26, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2553, column: 13)
!12161 = !DILocation(line: 2553, column: 13, scope: !12111)
!12162 = !DILocation(line: 2555, column: 6, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 2554, column: 4)
!12164 = !DILocation(line: 2556, column: 6, scope: !12163)
!12165 = !DILocation(line: 2558, column: 23, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2558, column: 6)
!12167 = !DILocation(line: 2558, column: 6, scope: !12111)
!12168 = !DILocation(line: 2560, column: 6, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12166, file: !3, line: 2559, column: 4)
!12170 = !DILocation(line: 2561, column: 6, scope: !12169)
!12171 = !DILocation(line: 2567, column: 7, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2567, column: 2)
!12173 = !DILocation(line: 0, scope: !12172)
!12174 = !DILocation(line: 2568, column: 7, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12172, file: !3, line: 2567, column: 2)
!12176 = !DILocation(line: 2567, column: 2, scope: !12172)
!12177 = !DILocation(line: 2567, column: 2, scope: !12175)
!12178 = distinct !{!12178, !12176, !12179}
!12179 = !DILocation(line: 2570, column: 4, scope: !12172)
!12180 = !DILocation(line: 2572, column: 8, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2572, column: 6)
!12182 = !DILocation(line: 2572, column: 22, scope: !12181)
!12183 = !DILocation(line: 2573, column: 8, scope: !12181)
!12184 = !DILocation(line: 2573, column: 25, scope: !12181)
!12185 = !DILocation(line: 2574, column: 8, scope: !12181)
!12186 = !DILocation(line: 2574, column: 25, scope: !12181)
!12187 = !DILocation(line: 2572, column: 6, scope: !12111)
!12188 = !DILocation(line: 2576, column: 7, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2576, column: 6)
!12190 = !DILocation(line: 2576, column: 6, scope: !12111)
!12191 = !DILocation(line: 2578, column: 6, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 2577, column: 4)
!12193 = !DILocation(line: 2579, column: 6, scope: !12192)
!12194 = !DILocation(line: 2581, column: 6, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2581, column: 6)
!12196 = !DILocation(line: 2581, column: 6, scope: !12111)
!12197 = !DILocation(line: 2583, column: 6, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12195, file: !3, line: 2582, column: 4)
!12199 = !DILocation(line: 2584, column: 6, scope: !12198)
!12200 = !DILocation(line: 2591, column: 11, scope: !12112)
!12201 = !DILocation(line: 2592, column: 12, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2592, column: 11)
!12203 = !DILocation(line: 2592, column: 11, scope: !12112)
!12204 = !DILocation(line: 2594, column: 4, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 2593, column: 2)
!12206 = !DILocation(line: 2595, column: 4, scope: !12205)
!12207 = !DILocation(line: 2597, column: 12, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2597, column: 11)
!12209 = !DILocation(line: 2597, column: 11, scope: !12112)
!12210 = !DILocation(line: 2599, column: 4, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 2598, column: 9)
!12212 = !DILocation(line: 2600, column: 4, scope: !12211)
!12213 = !DILocation(line: 2605, column: 2, scope: !12112)
!12214 = !DILocation(line: 2614, column: 7, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 2614, column: 7)
!12216 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2614, column: 7)
!12217 = !DILocation(line: 2614, column: 7, scope: !12216)
!12218 = !DILocation(line: 2614, column: 7, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12215, file: !3, line: 2614, column: 7)
!12220 = !DILocation(line: 2628, column: 7, scope: !12112)
!12221 = !DILocation(line: 2628, column: 14, scope: !12112)
!12222 = !DILocation(line: 2630, column: 8, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12224, file: !3, line: 2630, column: 8)
!12224 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2629, column: 2)
!12225 = !DILocation(line: 2630, column: 22, scope: !12223)
!12226 = !DILocation(line: 2630, column: 39, scope: !12223)
!12227 = !DILocation(line: 2630, column: 42, scope: !12223)
!12228 = !DILocation(line: 2630, column: 8, scope: !12224)
!12229 = !DILocation(line: 2631, column: 6, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12231, file: !3, line: 2631, column: 6)
!12231 = distinct !DILexicalBlock(scope: !12223, file: !3, line: 2631, column: 6)
!12232 = !DILocation(line: 2631, column: 6, scope: !12231)
!12233 = !DILocation(line: 2631, column: 6, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 2631, column: 6)
!12235 = !DILocation(line: 2632, column: 27, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12223, file: !3, line: 2632, column: 13)
!12237 = !DILocation(line: 2633, column: 6, scope: !12236)
!12238 = !DILocation(line: 2633, column: 23, scope: !12236)
!12239 = !DILocation(line: 2632, column: 13, scope: !12223)
!12240 = !DILocation(line: 2635, column: 8, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 2635, column: 8)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 2635, column: 8)
!12243 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 2634, column: 6)
!12244 = !DILocation(line: 2635, column: 8, scope: !12242)
!12245 = !DILocation(line: 2635, column: 8, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 2635, column: 8)
!12247 = !DILocation(line: 2636, column: 12, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 2636, column: 12)
!12249 = !DILocation(line: 2636, column: 12, scope: !12243)
!12250 = !DILocation(line: 2637, column: 3, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12252, file: !3, line: 2637, column: 3)
!12252 = distinct !DILexicalBlock(scope: !12248, file: !3, line: 2637, column: 3)
!12253 = !DILocation(line: 2637, column: 3, scope: !12252)
!12254 = !DILocation(line: 2637, column: 3, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12251, file: !3, line: 2637, column: 3)
!12256 = !DILocation(line: 2638, column: 12, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 2638, column: 12)
!12258 = !DILocation(line: 2638, column: 12, scope: !12243)
!12259 = !DILocation(line: 2639, column: 3, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12261, file: !3, line: 2639, column: 3)
!12261 = distinct !DILexicalBlock(scope: !12257, file: !3, line: 2639, column: 3)
!12262 = !DILocation(line: 2639, column: 3, scope: !12261)
!12263 = !DILocation(line: 2639, column: 3, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 2639, column: 3)
!12265 = !DILocation(line: 2641, column: 27, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 2641, column: 13)
!12267 = !DILocation(line: 2641, column: 13, scope: !12236)
!12268 = !DILocation(line: 2643, column: 28, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !3, line: 2643, column: 12)
!12270 = distinct !DILexicalBlock(scope: !12266, file: !3, line: 2642, column: 6)
!12271 = !DILocation(line: 2643, column: 13, scope: !12269)
!12272 = !DILocation(line: 2644, column: 5, scope: !12269)
!12273 = !DILocation(line: 2644, column: 24, scope: !12269)
!12274 = !DILocation(line: 2644, column: 9, scope: !12269)
!12275 = !DILocation(line: 2643, column: 12, scope: !12270)
!12276 = !DILocation(line: 2646, column: 5, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 2645, column: 3)
!12278 = !DILocation(line: 2647, column: 5, scope: !12277)
!12279 = !DILocation(line: 2649, column: 17, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 2649, column: 17)
!12281 = !DILocation(line: 2650, column: 10, scope: !12280)
!12282 = !DILocation(line: 2650, column: 14, scope: !12280)
!12283 = !DILocation(line: 2651, column: 10, scope: !12280)
!12284 = !DILocation(line: 2651, column: 7, scope: !12280)
!12285 = !DILocation(line: 2649, column: 17, scope: !12269)
!12286 = !DILocation(line: 2653, column: 5, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12280, file: !3, line: 2652, column: 3)
!12288 = !DILocation(line: 2655, column: 5, scope: !12287)
!12289 = !DILocation(line: 2657, column: 13, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12270, file: !3, line: 2657, column: 12)
!12291 = !DILocation(line: 2658, column: 5, scope: !12290)
!12292 = !DILocation(line: 2658, column: 9, scope: !12290)
!12293 = !DILocation(line: 2659, column: 12, scope: !12290)
!12294 = !DILocation(line: 2659, column: 9, scope: !12290)
!12295 = !DILocation(line: 2657, column: 12, scope: !12270)
!12296 = !DILocation(line: 2661, column: 5, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 2660, column: 3)
!12298 = !DILocation(line: 2663, column: 5, scope: !12297)
!12299 = !DILocation(line: 2667, column: 8, scope: !12224)
!12300 = distinct !{!12300, !12220, !12301}
!12301 = !DILocation(line: 2668, column: 2, scope: !12112)
!12302 = !DILocation(line: 2670, column: 12, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2670, column: 11)
!12304 = !DILocation(line: 2670, column: 40, scope: !12303)
!12305 = !DILocation(line: 2670, column: 44, scope: !12303)
!12306 = !DILocation(line: 2670, column: 11, scope: !12112)
!12307 = !DILocation(line: 2672, column: 4, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12303, file: !3, line: 2671, column: 2)
!12309 = !DILocation(line: 2673, column: 4, scope: !12308)
!12310 = !DILocation(line: 2675, column: 22, scope: !12112)
!12311 = !DILocation(line: 2676, column: 7, scope: !12112)
!12312 = !DILocation(line: 2681, column: 11, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2681, column: 11)
!12314 = !DILocation(line: 2681, column: 11, scope: !12112)
!12315 = !DILocation(line: 2683, column: 4, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12313, file: !3, line: 2682, column: 2)
!12317 = !DILocation(line: 2684, column: 4, scope: !12316)
!12318 = !DILocation(line: 2686, column: 7, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !3, line: 2686, column: 7)
!12320 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2686, column: 7)
!12321 = !DILocation(line: 2686, column: 7, scope: !12320)
!12322 = !DILocation(line: 2686, column: 7, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 2686, column: 7)
!12324 = !DILocation(line: 2687, column: 7, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2687, column: 7)
!12326 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2687, column: 7)
!12327 = !DILocation(line: 2687, column: 7, scope: !12326)
!12328 = !DILocation(line: 2687, column: 7, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2687, column: 7)
!12330 = !DILocation(line: 2692, column: 12, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2692, column: 11)
!12332 = !DILocation(line: 2692, column: 11, scope: !12112)
!12333 = !DILocation(line: 2694, column: 4, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 2693, column: 2)
!12335 = !DILocation(line: 2695, column: 4, scope: !12334)
!12336 = !DILocation(line: 2699, column: 39, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2699, column: 11)
!12338 = !DILocation(line: 2700, column: 10, scope: !12337)
!12339 = !DILocation(line: 2699, column: 12, scope: !12337)
!12340 = !DILocation(line: 2699, column: 11, scope: !12112)
!12341 = !DILocation(line: 2702, column: 4, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12337, file: !3, line: 2701, column: 2)
!12343 = !DILocation(line: 2704, column: 4, scope: !12342)
!12344 = !DILocation(line: 2741, column: 7, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 2741, column: 7)
!12346 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2741, column: 7)
!12347 = !DILocation(line: 2741, column: 7, scope: !12346)
!12348 = !DILocation(line: 2741, column: 7, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12345, file: !3, line: 2741, column: 7)
!12350 = !DILocation(line: 2742, column: 7, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 2742, column: 7)
!12352 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2742, column: 7)
!12353 = !DILocation(line: 2742, column: 7, scope: !12352)
!12354 = !DILocation(line: 2742, column: 7, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 2742, column: 7)
!12356 = !DILocation(line: 2746, column: 11, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12112, file: !3, line: 2746, column: 11)
!12358 = !DILocation(line: 2746, column: 29, scope: !12357)
!12359 = !DILocation(line: 2746, column: 32, scope: !12357)
!12360 = !DILocation(line: 2746, column: 58, scope: !12357)
!12361 = !DILocation(line: 2746, column: 11, scope: !12112)
!12362 = !DILocation(line: 2747, column: 17, scope: !12357)
!12363 = !DILocation(line: 2747, column: 2, scope: !12357)
!12364 = !DILocation(line: 2753, column: 3, scope: !12103)
!12365 = !DILocation(line: 2756, column: 1, scope: !12103)
!12366 = distinct !DISubprogram(name: "ei_end_p", scope: !382, file: !382, line: 721, type: !12367, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12369)
!12367 = !DISubroutineType(types: !12368)
!12368 = !{!692, !5516}
!12369 = !{!12370}
!12370 = !DILocalVariable(name: "i", arg: 1, scope: !12366, file: !382, line: 721, type: !5516)
!12371 = !DILocation(line: 723, column: 22, scope: !12366)
!12372 = !DILocation(line: 723, column: 19, scope: !12366)
!12373 = !DILocation(line: 723, column: 10, scope: !12366)
!12374 = !DILocation(line: 723, column: 3, scope: !12366)
!12375 = distinct !DISubprogram(name: "ei_edge", scope: !382, file: !382, line: 752, type: !6578, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12376)
!12376 = !{!12377}
!12377 = !DILocalVariable(name: "i", arg: 1, scope: !12375, file: !382, line: 752, type: !5516)
!12378 = !DILocation(line: 754, column: 10, scope: !12375)
!12379 = !DILocation(line: 754, column: 3, scope: !12375)
!12380 = distinct !DISubprogram(name: "ei_container", scope: !382, file: !382, line: 685, type: !12381, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12383)
!12381 = !DISubroutineType(types: !12382)
!12382 = !{!996, !5516}
!12383 = !{!12384}
!12384 = !DILocalVariable(name: "i", arg: 1, scope: !12380, file: !382, line: 685, type: !5516)
!12385 = !DILocation(line: 687, column: 3, scope: !12380)
!12386 = !DILocation(line: 688, column: 10, scope: !12380)
!12387 = !DILocation(line: 688, column: 3, scope: !12380)
!12388 = distinct !DISubprogram(name: "gimple_seq_empty_p", scope: !613, file: !613, line: 215, type: !12389, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12391)
!12389 = !DISubroutineType(types: !12390)
!12390 = !{!692, !6977}
!12391 = !{!12392}
!12392 = !DILocalVariable(name: "s", arg: 1, scope: !12388, file: !613, line: 215, type: !6977)
!12393 = !DILocation(line: 0, scope: !12388)
!12394 = !DILocation(line: 217, column: 12, scope: !12388)
!12395 = !DILocation(line: 217, column: 20, scope: !12388)
!12396 = !DILocation(line: 217, column: 26, scope: !12388)
!12397 = !DILocation(line: 217, column: 32, scope: !12388)
!12398 = !DILocation(line: 217, column: 3, scope: !12388)
!12399 = distinct !DISubprogram(name: "phi_nodes", scope: !4075, file: !4075, line: 508, type: !10284, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12400)
!12400 = !{!12401}
!12401 = !DILocalVariable(name: "bb", arg: 1, scope: !12399, file: !4075, line: 508, type: !2400)
!12402 = !DILocation(line: 0, scope: !12399)
!12403 = !DILocation(line: 510, column: 3, scope: !12399)
!12404 = !DILocation(line: 511, column: 15, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12399, file: !4075, line: 511, column: 7)
!12406 = !DILocation(line: 511, column: 8, scope: !12405)
!12407 = !DILocation(line: 511, column: 7, scope: !12399)
!12408 = !DILocation(line: 513, column: 25, scope: !12399)
!12409 = !DILocation(line: 513, column: 3, scope: !12399)
!12410 = !DILocation(line: 514, column: 1, scope: !12399)
!12411 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !337, file: !337, line: 85, type: !12412, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12414)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!1270, !10800, !7}
!12414 = !{!12415, !12416}
!12415 = !DILocalVariable(name: "vec_", arg: 1, scope: !12411, file: !337, line: 85, type: !10800)
!12416 = !DILocalVariable(name: "ix_", arg: 2, scope: !12411, file: !337, line: 85, type: !7)
!12417 = !DILocation(line: 0, scope: !12411)
!12418 = !DILocation(line: 85, column: 1, scope: !12411)
!12419 = distinct !DISubprogram(name: "VEC_basic_block_heap_reserve", scope: !382, file: !382, line: 283, type: !12420, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12422)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{!693, !5908, !693}
!12422 = !{!12423, !12424, !12425}
!12423 = !DILocalVariable(name: "vec_", arg: 1, scope: !12419, file: !382, line: 283, type: !5908)
!12424 = !DILocalVariable(name: "alloc_", arg: 2, scope: !12419, file: !382, line: 283, type: !693)
!12425 = !DILocalVariable(name: "extend", scope: !12419, file: !382, line: 283, type: !693)
!12426 = !DILocation(line: 0, scope: !12419)
!12427 = !DILocation(line: 283, column: 1, scope: !12419)
!12428 = !DILocation(line: 283, column: 1, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12419, file: !382, line: 283, column: 1)
!12430 = distinct !DISubprogram(name: "VEC_basic_block_base_quick_push", scope: !382, file: !382, line: 281, type: !12431, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12433)
!12431 = !DISubroutineType(types: !12432)
!12432 = !{!2187, !2963, !1670}
!12433 = !{!12434, !12435, !12436}
!12434 = !DILocalVariable(name: "vec_", arg: 1, scope: !12430, file: !382, line: 281, type: !2963)
!12435 = !DILocalVariable(name: "obj_", arg: 2, scope: !12430, file: !382, line: 281, type: !1670)
!12436 = !DILocalVariable(name: "slot_", scope: !12430, file: !382, line: 281, type: !2187)
!12437 = !DILocation(line: 0, scope: !12430)
!12438 = !DILocation(line: 281, column: 1, scope: !12430)
!12439 = distinct !DISubprogram(name: "single_succ_p", scope: !382, file: !382, line: 626, type: !2403, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12440)
!12440 = !{!12441}
!12441 = !DILocalVariable(name: "bb", arg: 1, scope: !12439, file: !382, line: 626, type: !2400)
!12442 = !DILocation(line: 0, scope: !12439)
!12443 = !DILocation(line: 628, column: 10, scope: !12439)
!12444 = !DILocation(line: 628, column: 33, scope: !12439)
!12445 = !DILocation(line: 628, column: 3, scope: !12439)
!12446 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !4075, file: !4075, line: 434, type: !12447, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12449)
!12447 = !DISubroutineType(types: !12448)
!12448 = !{!704, !2267}
!12449 = !{!12450}
!12450 = !DILocalVariable(name: "def", arg: 1, scope: !12446, file: !4075, line: 434, type: !2267)
!12451 = !DILocation(line: 0, scope: !12446)
!12452 = !DILocation(line: 436, column: 10, scope: !12446)
!12453 = !DILocation(line: 436, column: 3, scope: !12446)
!12454 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !613, file: !613, line: 3080, type: !10318, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12455)
!12455 = !{!12456}
!12456 = !DILocalVariable(name: "gs", arg: 1, scope: !12454, file: !613, line: 3080, type: !1028)
!12457 = !DILocation(line: 0, scope: !12454)
!12458 = !DILocation(line: 3083, column: 26, scope: !12454)
!12459 = !DILocation(line: 3083, column: 3, scope: !12454)
!12460 = distinct !DISubprogram(name: "replace_ssa_name", scope: !3, file: !3, line: 5441, type: !12461, scopeLine: 5443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12463)
!12461 = !DISubroutineType(types: !12462)
!12462 = !{!704, !704, !1731, !704}
!12463 = !{!12464, !12465, !12466, !12467, !12468, !12469}
!12464 = !DILocalVariable(name: "name", arg: 1, scope: !12460, file: !3, line: 5441, type: !704)
!12465 = !DILocalVariable(name: "vars_map", arg: 2, scope: !12460, file: !3, line: 5441, type: !1731)
!12466 = !DILocalVariable(name: "to_context", arg: 3, scope: !12460, file: !3, line: 5442, type: !704)
!12467 = !DILocalVariable(name: "loc", scope: !12460, file: !3, line: 5444, type: !1609)
!12468 = !DILocalVariable(name: "new_name", scope: !12460, file: !3, line: 5445, type: !704)
!12469 = !DILocalVariable(name: "decl", scope: !12460, file: !3, line: 5445, type: !704)
!12470 = !DILocation(line: 0, scope: !12460)
!12471 = !DILocation(line: 5445, column: 3, scope: !12460)
!12472 = !DILocation(line: 5445, column: 25, scope: !12460)
!12473 = !DILocation(line: 5445, column: 18, scope: !12460)
!12474 = !DILocation(line: 5447, column: 3, scope: !12460)
!12475 = !DILocation(line: 5449, column: 41, scope: !12460)
!12476 = !DILocation(line: 5449, column: 9, scope: !12460)
!12477 = !DILocation(line: 5451, column: 8, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 5451, column: 7)
!12479 = !DILocation(line: 5451, column: 7, scope: !12460)
!12480 = !DILocation(line: 5453, column: 7, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12478, file: !3, line: 5452, column: 5)
!12482 = !DILocation(line: 5455, column: 18, scope: !12481)
!12483 = !DILocation(line: 5455, column: 7, scope: !12481)
!12484 = !DILocation(line: 5456, column: 28, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 5456, column: 11)
!12486 = !DILocation(line: 5456, column: 11, scope: !12485)
!12487 = !DILocation(line: 5456, column: 11, scope: !12481)
!12488 = !DILocation(line: 5457, column: 22, scope: !12485)
!12489 = !DILocation(line: 5457, column: 2, scope: !12485)
!12490 = !DILocation(line: 5459, column: 33, scope: !12481)
!12491 = !DILocation(line: 5459, column: 39, scope: !12481)
!12492 = !DILocation(line: 5459, column: 18, scope: !12481)
!12493 = !DILocation(line: 5460, column: 11, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 5460, column: 11)
!12495 = !DILocation(line: 5460, column: 11, scope: !12481)
!12496 = !DILocation(line: 5461, column: 19, scope: !12494)
!12497 = !DILocation(line: 5461, column: 2, scope: !12494)
!12498 = !DILocation(line: 5462, column: 7, scope: !12481)
!12499 = !DILocation(line: 5464, column: 13, scope: !12481)
!12500 = !DILocation(line: 5465, column: 12, scope: !12481)
!12501 = !DILocation(line: 5466, column: 5, scope: !12481)
!12502 = !DILocation(line: 5468, column: 23, scope: !12478)
!12503 = !DILocation(line: 0, scope: !12478)
!12504 = !DILocation(line: 5471, column: 1, scope: !12460)
!12505 = !DILocation(line: 5470, column: 3, scope: !12460)
!12506 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !4075, file: !4075, line: 233, type: !12507, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12509)
!12507 = !DISubroutineType(types: !12508)
!12508 = !{null, !2200, !704}
!12509 = !{!12510, !12511}
!12510 = !DILocalVariable(name: "use", arg: 1, scope: !12506, file: !4075, line: 233, type: !2200)
!12511 = !DILocalVariable(name: "val", arg: 2, scope: !12506, file: !4075, line: 233, type: !704)
!12512 = !DILocation(line: 0, scope: !12506)
!12513 = !DILocation(line: 235, column: 3, scope: !12506)
!12514 = !DILocation(line: 236, column: 10, scope: !12506)
!12515 = !DILocation(line: 236, column: 15, scope: !12506)
!12516 = !DILocation(line: 237, column: 3, scope: !12506)
!12517 = !DILocation(line: 238, column: 1, scope: !12506)
!12518 = distinct !DISubprogram(name: "move_stmt_r", scope: !3, file: !3, line: 5584, type: !12519, scopeLine: 5586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12521)
!12519 = !DISubroutineType(types: !12520)
!12520 = !{!704, !3322, !691, !2218}
!12521 = !{!12522, !12523, !12524, !12525, !12526, !12527, !12528, !12531, !12532, !12534, !12536}
!12522 = !DILocalVariable(name: "gsi_p", arg: 1, scope: !12518, file: !3, line: 5584, type: !3322)
!12523 = !DILocalVariable(name: "handled_ops_p", arg: 2, scope: !12518, file: !3, line: 5584, type: !691)
!12524 = !DILocalVariable(name: "wi", arg: 3, scope: !12518, file: !3, line: 5585, type: !2218)
!12525 = !DILocalVariable(name: "p", scope: !12518, file: !3, line: 5587, type: !2256)
!12526 = !DILocalVariable(name: "stmt", scope: !12518, file: !3, line: 5588, type: !1028)
!12527 = !DILocalVariable(name: "block", scope: !12518, file: !3, line: 5589, type: !704)
!12528 = !DILocalVariable(name: "r", scope: !12529, file: !3, line: 5609, type: !704)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 5608, column: 7)
!12530 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 5605, column: 5)
!12531 = !DILocalVariable(name: "fndecl", scope: !12529, file: !3, line: 5609, type: !704)
!12532 = !DILocalVariable(name: "r", scope: !12533, file: !3, line: 5634, type: !693)
!12533 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 5633, column: 7)
!12534 = !DILocalVariable(name: "r", scope: !12535, file: !3, line: 5642, type: !693)
!12535 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 5641, column: 7)
!12536 = !DILocalVariable(name: "save_remap_decls_p", scope: !12537, file: !3, line: 5658, type: !692)
!12537 = distinct !DILexicalBlock(scope: !12538, file: !3, line: 5653, column: 2)
!12538 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 5652, column: 11)
!12539 = !DILocation(line: 0, scope: !12518)
!12540 = !DILocation(line: 5587, column: 54, scope: !12518)
!12541 = !DILocation(line: 5588, column: 17, scope: !12518)
!12542 = !DILocation(line: 5589, column: 16, scope: !12518)
!12543 = !DILocation(line: 5591, column: 10, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 5591, column: 7)
!12545 = !DILocation(line: 5591, column: 21, scope: !12544)
!12546 = !DILocation(line: 5592, column: 7, scope: !12544)
!12547 = !DILocation(line: 5592, column: 16, scope: !12544)
!12548 = !DILocation(line: 5593, column: 16, scope: !12544)
!12549 = !DILocation(line: 5593, column: 7, scope: !12544)
!12550 = !DILocation(line: 5594, column: 32, scope: !12544)
!12551 = !DILocation(line: 5594, column: 5, scope: !12544)
!12552 = !DILocation(line: 5604, column: 11, scope: !12518)
!12553 = !DILocation(line: 5604, column: 3, scope: !12518)
!12554 = !DILocation(line: 5609, column: 19, scope: !12529)
!12555 = !DILocation(line: 0, scope: !12529)
!12556 = !DILocation(line: 5610, column: 6, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12529, file: !3, line: 5610, column: 6)
!12558 = !DILocation(line: 5610, column: 13, scope: !12557)
!12559 = !DILocation(line: 5610, column: 16, scope: !12557)
!12560 = !DILocation(line: 5610, column: 45, scope: !12557)
!12561 = !DILocation(line: 5610, column: 6, scope: !12529)
!12562 = !DILocation(line: 5611, column: 12, scope: !12557)
!12563 = !DILocation(line: 5611, column: 4, scope: !12557)
!12564 = !DILocation(line: 5614, column: 12, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 5612, column: 6)
!12566 = !DILocation(line: 5615, column: 12, scope: !12565)
!12567 = !DILocation(line: 5616, column: 8, scope: !12565)
!12568 = !DILocation(line: 5621, column: 12, scope: !12565)
!12569 = !DILocation(line: 5622, column: 12, scope: !12565)
!12570 = !DILocation(line: 5623, column: 8, scope: !12565)
!12571 = !DILocation(line: 5624, column: 8, scope: !12565)
!12572 = !DILocation(line: 5634, column: 10, scope: !12533)
!12573 = !DILocation(line: 0, scope: !12533)
!12574 = !DILocation(line: 5635, column: 6, scope: !12533)
!12575 = !DILocation(line: 5636, column: 2, scope: !12533)
!12576 = !DILocation(line: 5638, column: 7, scope: !12530)
!12577 = !DILocation(line: 5642, column: 10, scope: !12535)
!12578 = !DILocation(line: 0, scope: !12535)
!12579 = !DILocation(line: 5643, column: 6, scope: !12535)
!12580 = !DILocation(line: 5644, column: 2, scope: !12535)
!12581 = !DILocation(line: 5646, column: 7, scope: !12530)
!12582 = !DILocation(line: 5652, column: 11, scope: !12538)
!12583 = !DILocation(line: 5652, column: 11, scope: !12530)
!12584 = !DILocation(line: 5658, column: 33, scope: !12537)
!12585 = !DILocation(line: 0, scope: !12537)
!12586 = !DILocation(line: 5659, column: 21, scope: !12537)
!12587 = !DILocation(line: 5660, column: 19, scope: !12537)
!12588 = !DILocation(line: 5662, column: 21, scope: !12537)
!12589 = !DILocation(line: 5662, column: 4, scope: !12537)
!12590 = !DILocation(line: 5665, column: 21, scope: !12537)
!12591 = !DILocation(line: 5666, column: 2, scope: !12537)
!12592 = !DILocation(line: 5670, column: 3, scope: !12518)
!12593 = distinct !DISubprogram(name: "move_stmt_op", scope: !3, file: !3, line: 5490, type: !5329, scopeLine: 5491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12594)
!12594 = !{!12595, !12596, !12597, !12598, !12599, !12600, !12601, !12610}
!12595 = !DILocalVariable(name: "tp", arg: 1, scope: !12593, file: !3, line: 5490, type: !1062)
!12596 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !12593, file: !3, line: 5490, type: !2188)
!12597 = !DILocalVariable(name: "data", arg: 3, scope: !12593, file: !3, line: 5490, type: !697)
!12598 = !DILocalVariable(name: "wi", scope: !12593, file: !3, line: 5492, type: !2218)
!12599 = !DILocalVariable(name: "p", scope: !12593, file: !3, line: 5493, type: !2256)
!12600 = !DILocalVariable(name: "t", scope: !12593, file: !3, line: 5494, type: !704)
!12601 = !DILocalVariable(name: "in", scope: !12602, file: !3, line: 5508, type: !2248)
!12602 = distinct !DILexicalBlock(scope: !12603, file: !3, line: 5507, column: 6)
!12603 = distinct !DILexicalBlock(scope: !12604, file: !3, line: 5506, column: 8)
!12604 = distinct !DILexicalBlock(scope: !12605, file: !3, line: 5505, column: 2)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 5504, column: 16)
!12606 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 5502, column: 11)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !3, line: 5501, column: 5)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 5500, column: 12)
!12609 = distinct !DILexicalBlock(scope: !12593, file: !3, line: 5496, column: 7)
!12610 = !DILocalVariable(name: "out", scope: !12602, file: !3, line: 5508, type: !2247)
!12611 = !DILocation(line: 0, scope: !12593)
!12612 = !DILocation(line: 5493, column: 54, scope: !12593)
!12613 = !DILocation(line: 5494, column: 12, scope: !12593)
!12614 = !DILocation(line: 5496, column: 7, scope: !12609)
!12615 = !DILocation(line: 5496, column: 7, scope: !12593)
!12616 = !DILocation(line: 5498, column: 5, scope: !12609)
!12617 = !DILocation(line: 5500, column: 12, scope: !12608)
!12618 = !DILocation(line: 5500, column: 23, scope: !12608)
!12619 = !DILocation(line: 5500, column: 40, scope: !12608)
!12620 = !DILocation(line: 5500, column: 12, scope: !12609)
!12621 = !DILocation(line: 5502, column: 25, scope: !12606)
!12622 = !DILocation(line: 5502, column: 11, scope: !12607)
!12623 = !DILocation(line: 5503, column: 32, scope: !12606)
!12624 = !DILocation(line: 5503, column: 45, scope: !12606)
!12625 = !DILocation(line: 5503, column: 8, scope: !12606)
!12626 = !DILocation(line: 5503, column: 6, scope: !12606)
!12627 = !DILocation(line: 5503, column: 2, scope: !12606)
!12628 = !DILocation(line: 5504, column: 30, scope: !12605)
!12629 = !DILocation(line: 5504, column: 16, scope: !12606)
!12630 = !DILocation(line: 5506, column: 11, scope: !12603)
!12631 = !DILocation(line: 5506, column: 8, scope: !12603)
!12632 = !DILocation(line: 5506, column: 8, scope: !12604)
!12633 = !DILocation(line: 5508, column: 8, scope: !12602)
!12634 = !DILocation(line: 5509, column: 16, scope: !12602)
!12635 = !DILocation(line: 5509, column: 21, scope: !12602)
!12636 = !DILocation(line: 5511, column: 47, scope: !12602)
!12637 = !DILocation(line: 5511, column: 3, scope: !12602)
!12638 = !DILocation(line: 0, scope: !12602)
!12639 = !DILocation(line: 5512, column: 12, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 5512, column: 12)
!12641 = !DILocation(line: 5512, column: 12, scope: !12602)
!12642 = !DILocation(line: 5513, column: 18, scope: !12640)
!12643 = !DILocation(line: 5513, column: 7, scope: !12640)
!12644 = !DILocation(line: 5513, column: 3, scope: !12640)
!12645 = !DILocation(line: 5514, column: 6, scope: !12603)
!12646 = !DILocation(line: 5514, column: 6, scope: !12602)
!12647 = !DILocation(line: 5516, column: 26, scope: !12604)
!12648 = !DILocation(line: 5516, column: 4, scope: !12604)
!12649 = !DILocation(line: 5516, column: 21, scope: !12604)
!12650 = !DILocation(line: 5517, column: 2, scope: !12604)
!12651 = !DILocation(line: 5518, column: 19, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12605, file: !3, line: 5518, column: 16)
!12653 = !DILocation(line: 5518, column: 16, scope: !12652)
!12654 = !DILocation(line: 5518, column: 16, scope: !12605)
!12655 = !DILocation(line: 5526, column: 23, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12657, file: !3, line: 5526, column: 8)
!12657 = distinct !DILexicalBlock(scope: !12652, file: !3, line: 5519, column: 2)
!12658 = !DILocation(line: 5527, column: 9, scope: !12656)
!12659 = !DILocation(line: 5527, column: 13, scope: !12656)
!12660 = !DILocation(line: 5528, column: 8, scope: !12656)
!12661 = !DILocation(line: 5528, column: 11, scope: !12656)
!12662 = !DILocation(line: 5528, column: 25, scope: !12656)
!12663 = !DILocation(line: 5526, column: 8, scope: !12657)
!12664 = !DILocation(line: 5529, column: 40, scope: !12656)
!12665 = !DILocation(line: 5529, column: 53, scope: !12656)
!12666 = !DILocation(line: 5529, column: 6, scope: !12656)
!12667 = !DILocation(line: 5531, column: 8, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12657, file: !3, line: 5531, column: 8)
!12669 = !DILocation(line: 5532, column: 8, scope: !12668)
!12670 = !DILocation(line: 5532, column: 28, scope: !12668)
!12671 = !DILocation(line: 5532, column: 11, scope: !12668)
!12672 = !DILocation(line: 5531, column: 8, scope: !12657)
!12673 = !DILocation(line: 5534, column: 19, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 5533, column: 6)
!12675 = !DILocation(line: 5534, column: 8, scope: !12674)
!12676 = !DILocation(line: 5535, column: 28, scope: !12674)
!12677 = !DILocation(line: 5535, column: 8, scope: !12674)
!12678 = !DILocation(line: 5536, column: 8, scope: !12674)
!12679 = !DILocation(line: 5537, column: 6, scope: !12674)
!12680 = !DILocation(line: 5539, column: 22, scope: !12607)
!12681 = !DILocation(line: 5540, column: 5, scope: !12607)
!12682 = !DILocation(line: 5541, column: 12, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12608, file: !3, line: 5541, column: 12)
!12684 = !DILocation(line: 5541, column: 12, scope: !12608)
!12685 = !DILocation(line: 5542, column: 20, scope: !12683)
!12686 = !DILocation(line: 5542, column: 5, scope: !12683)
!12687 = !DILocation(line: 5544, column: 3, scope: !12593)
!12688 = distinct !DISubprogram(name: "replace_by_duplicate_decl", scope: !3, file: !3, line: 5400, type: !12689, scopeLine: 5402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12691)
!12689 = !DISubroutineType(types: !12690)
!12690 = !{null, !1062, !1731, !704}
!12691 = !{!12692, !12693, !12694, !12695, !12696, !12697, !12698}
!12692 = !DILocalVariable(name: "tp", arg: 1, scope: !12688, file: !3, line: 5400, type: !1062)
!12693 = !DILocalVariable(name: "vars_map", arg: 2, scope: !12688, file: !3, line: 5400, type: !1731)
!12694 = !DILocalVariable(name: "to_context", arg: 3, scope: !12688, file: !3, line: 5401, type: !704)
!12695 = !DILocalVariable(name: "t", scope: !12688, file: !3, line: 5403, type: !704)
!12696 = !DILocalVariable(name: "new_t", scope: !12688, file: !3, line: 5403, type: !704)
!12697 = !DILocalVariable(name: "f", scope: !12688, file: !3, line: 5404, type: !1502)
!12698 = !DILocalVariable(name: "loc", scope: !12688, file: !3, line: 5405, type: !1609)
!12699 = !DILocation(line: 0, scope: !12688)
!12700 = !DILocation(line: 5403, column: 12, scope: !12688)
!12701 = !DILocation(line: 5404, column: 24, scope: !12688)
!12702 = !DILocation(line: 5407, column: 7, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12688, file: !3, line: 5407, column: 7)
!12704 = !DILocation(line: 5407, column: 24, scope: !12703)
!12705 = !DILocation(line: 5407, column: 7, scope: !12688)
!12706 = !DILocation(line: 5410, column: 41, scope: !12688)
!12707 = !DILocation(line: 5410, column: 9, scope: !12688)
!12708 = !DILocation(line: 5412, column: 8, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12688, file: !3, line: 5412, column: 7)
!12710 = !DILocation(line: 5412, column: 7, scope: !12688)
!12711 = !DILocation(line: 5414, column: 13, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12709, file: !3, line: 5413, column: 5)
!12713 = !DILocation(line: 5416, column: 11, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12712, file: !3, line: 5416, column: 11)
!12715 = !DILocation(line: 5416, column: 11, scope: !12712)
!12716 = !DILocation(line: 5418, column: 30, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12714, file: !3, line: 5417, column: 2)
!12718 = !DILocation(line: 5418, column: 45, scope: !12717)
!12719 = !DILocation(line: 5418, column: 12, scope: !12717)
!12720 = !DILocation(line: 5419, column: 21, scope: !12717)
!12721 = !DILocation(line: 5419, column: 19, scope: !12717)
!12722 = !DILocation(line: 5420, column: 2, scope: !12717)
!12723 = !DILocation(line: 5423, column: 4, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12714, file: !3, line: 5422, column: 2)
!12725 = !DILocation(line: 5424, column: 12, scope: !12724)
!12726 = !DILocation(line: 0, scope: !12714)
!12727 = !DILocation(line: 5426, column: 7, scope: !12712)
!12728 = !DILocation(line: 5426, column: 28, scope: !12712)
!12729 = !DILocation(line: 5428, column: 12, scope: !12712)
!12730 = !DILocation(line: 5429, column: 5, scope: !12712)
!12731 = !DILocation(line: 5431, column: 20, scope: !12709)
!12732 = !DILocation(line: 0, scope: !12709)
!12733 = !DILocation(line: 5433, column: 7, scope: !12688)
!12734 = !DILocation(line: 5434, column: 1, scope: !12688)
!12735 = distinct !DISubprogram(name: "gimple_in_ssa_p", scope: !4075, file: !4075, line: 33, type: !12736, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12740)
!12736 = !DISubroutineType(types: !12737)
!12737 = !{!692, !12738}
!12738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12739, size: 64)
!12739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1503)
!12740 = !{!12741}
!12741 = !DILocalVariable(name: "fun", arg: 1, scope: !12735, file: !4075, line: 33, type: !12738)
!12742 = !DILocation(line: 0, scope: !12735)
!12743 = !DILocation(line: 35, column: 10, scope: !12735)
!12744 = !DILocation(line: 35, column: 14, scope: !12735)
!12745 = !DILocation(line: 35, column: 22, scope: !12735)
!12746 = !DILocation(line: 35, column: 17, scope: !12735)
!12747 = !DILocation(line: 35, column: 32, scope: !12735)
!12748 = !DILocation(line: 35, column: 51, scope: !12735)
!12749 = !DILocation(line: 35, column: 3, scope: !12735)
!12750 = distinct !DISubprogram(name: "make_ssa_name", scope: !4075, file: !4075, line: 1245, type: !12751, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12753)
!12751 = !DISubroutineType(types: !12752)
!12752 = !{!704, !704, !1028}
!12753 = !{!12754, !12755}
!12754 = !DILocalVariable(name: "var", arg: 1, scope: !12750, file: !4075, line: 1245, type: !704)
!12755 = !DILocalVariable(name: "stmt", arg: 2, scope: !12750, file: !4075, line: 1245, type: !1028)
!12756 = !DILocation(line: 0, scope: !12750)
!12757 = !DILocation(line: 1247, column: 28, scope: !12750)
!12758 = !DILocation(line: 1247, column: 10, scope: !12750)
!12759 = !DILocation(line: 1247, column: 3, scope: !12750)
!12760 = distinct !DISubprogram(name: "link_imm_use", scope: !4075, file: !4075, line: 214, type: !12761, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12763)
!12761 = !DISubroutineType(types: !12762)
!12762 = !{null, !2201, !704}
!12763 = !{!12764, !12765, !12766}
!12764 = !DILocalVariable(name: "linknode", arg: 1, scope: !12760, file: !4075, line: 214, type: !2201)
!12765 = !DILocalVariable(name: "def", arg: 2, scope: !12760, file: !4075, line: 214, type: !704)
!12766 = !DILocalVariable(name: "root", scope: !12760, file: !4075, line: 216, type: !2201)
!12767 = !DILocation(line: 0, scope: !12760)
!12768 = !DILocation(line: 218, column: 8, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12760, file: !4075, line: 218, column: 7)
!12770 = !DILocation(line: 218, column: 12, scope: !12769)
!12771 = !DILocation(line: 218, column: 15, scope: !12769)
!12772 = !DILocation(line: 218, column: 31, scope: !12769)
!12773 = !DILocation(line: 218, column: 7, scope: !12760)
!12774 = !DILocation(line: 219, column: 15, scope: !12769)
!12775 = !DILocation(line: 219, column: 20, scope: !12769)
!12776 = !DILocation(line: 219, column: 5, scope: !12769)
!12777 = !DILocation(line: 222, column: 16, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12769, file: !4075, line: 221, column: 5)
!12779 = !DILocation(line: 227, column: 7, scope: !12778)
!12780 = !DILocation(line: 229, column: 1, scope: !12760)
!12781 = distinct !DISubprogram(name: "move_stmt_eh_region_tree_nr", scope: !3, file: !3, line: 5566, type: !12782, scopeLine: 5567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12784)
!12782 = !DISubroutineType(types: !12783)
!12783 = !{!704, !704, !2256}
!12784 = !{!12785, !12786, !12787, !12788}
!12785 = !DILocalVariable(name: "old_t_nr", arg: 1, scope: !12781, file: !3, line: 5566, type: !704)
!12786 = !DILocalVariable(name: "p", arg: 2, scope: !12781, file: !3, line: 5566, type: !2256)
!12787 = !DILocalVariable(name: "old_nr", scope: !12781, file: !3, line: 5568, type: !693)
!12788 = !DILocalVariable(name: "new_nr", scope: !12781, file: !3, line: 5568, type: !693)
!12789 = !DILocation(line: 0, scope: !12781)
!12790 = !DILocation(line: 5570, column: 12, scope: !12781)
!12791 = !DILocation(line: 5571, column: 12, scope: !12781)
!12792 = !DILocation(line: 5573, column: 31, scope: !12781)
!12793 = !DILocation(line: 5573, column: 10, scope: !12781)
!12794 = !DILocation(line: 5573, column: 3, scope: !12781)
!12795 = distinct !DISubprogram(name: "gimple_call_set_arg", scope: !613, file: !613, line: 2046, type: !3858, scopeLine: 2047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12796)
!12796 = !{!12797, !12798, !12799}
!12797 = !DILocalVariable(name: "gs", arg: 1, scope: !12795, file: !613, line: 2046, type: !1028)
!12798 = !DILocalVariable(name: "index", arg: 2, scope: !12795, file: !613, line: 2046, type: !7)
!12799 = !DILocalVariable(name: "arg", arg: 3, scope: !12795, file: !613, line: 2046, type: !704)
!12800 = !DILocation(line: 0, scope: !12795)
!12801 = !DILocation(line: 2049, column: 28, scope: !12795)
!12802 = !DILocation(line: 2049, column: 3, scope: !12795)
!12803 = !DILocation(line: 2050, column: 1, scope: !12795)
!12804 = distinct !DISubprogram(name: "gimple_resx_region", scope: !613, file: !613, line: 3121, type: !10267, scopeLine: 3122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12805)
!12805 = !{!12806}
!12806 = !DILocalVariable(name: "gs", arg: 1, scope: !12804, file: !613, line: 3121, type: !3078)
!12807 = !DILocation(line: 0, scope: !12804)
!12808 = !DILocation(line: 3124, column: 29, scope: !12804)
!12809 = !DILocation(line: 3124, column: 3, scope: !12804)
!12810 = distinct !DISubprogram(name: "move_stmt_eh_region_nr", scope: !3, file: !3, line: 5551, type: !12811, scopeLine: 5552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12813)
!12811 = !DISubroutineType(types: !12812)
!12812 = !{!693, !693, !2256}
!12813 = !{!12814, !12815, !12816, !12817, !12818}
!12814 = !DILocalVariable(name: "old_nr", arg: 1, scope: !12810, file: !3, line: 5551, type: !693)
!12815 = !DILocalVariable(name: "p", arg: 2, scope: !12810, file: !3, line: 5551, type: !2256)
!12816 = !DILocalVariable(name: "old_r", scope: !12810, file: !3, line: 5553, type: !1511)
!12817 = !DILocalVariable(name: "new_r", scope: !12810, file: !3, line: 5553, type: !1511)
!12818 = !DILocalVariable(name: "slot", scope: !12810, file: !3, line: 5554, type: !1609)
!12819 = !DILocation(line: 0, scope: !12810)
!12820 = !DILocation(line: 5556, column: 11, scope: !12810)
!12821 = !DILocation(line: 5557, column: 35, scope: !12810)
!12822 = !DILocation(line: 5557, column: 43, scope: !12810)
!12823 = !DILocation(line: 5557, column: 10, scope: !12810)
!12824 = !DILocation(line: 5558, column: 23, scope: !12810)
!12825 = !DILocation(line: 5560, column: 17, scope: !12810)
!12826 = !DILocation(line: 5560, column: 3, scope: !12810)
!12827 = distinct !DISubprogram(name: "gimple_resx_set_region", scope: !613, file: !613, line: 3130, type: !12828, scopeLine: 3131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12830)
!12828 = !DISubroutineType(types: !12829)
!12829 = !{null, !1028, !693}
!12830 = !{!12831, !12832}
!12831 = !DILocalVariable(name: "gs", arg: 1, scope: !12827, file: !613, line: 3130, type: !1028)
!12832 = !DILocalVariable(name: "region", arg: 2, scope: !12827, file: !613, line: 3130, type: !693)
!12833 = !DILocation(line: 0, scope: !12827)
!12834 = !DILocation(line: 3133, column: 22, scope: !12827)
!12835 = !DILocation(line: 3133, column: 29, scope: !12827)
!12836 = !DILocation(line: 3134, column: 1, scope: !12827)
!12837 = distinct !DISubprogram(name: "gimple_eh_dispatch_region", scope: !613, file: !613, line: 3139, type: !10267, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12838)
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "gs", arg: 1, scope: !12837, file: !613, line: 3139, type: !3078)
!12840 = !DILocation(line: 0, scope: !12837)
!12841 = !DILocation(line: 3142, column: 29, scope: !12837)
!12842 = !DILocation(line: 3142, column: 3, scope: !12837)
!12843 = distinct !DISubprogram(name: "gimple_eh_dispatch_set_region", scope: !613, file: !613, line: 3148, type: !12828, scopeLine: 3149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12844)
!12844 = !{!12845, !12846}
!12845 = !DILocalVariable(name: "gs", arg: 1, scope: !12843, file: !613, line: 3148, type: !1028)
!12846 = !DILocalVariable(name: "region", arg: 2, scope: !12843, file: !613, line: 3148, type: !693)
!12847 = !DILocation(line: 0, scope: !12843)
!12848 = !DILocation(line: 3151, column: 22, scope: !12843)
!12849 = !DILocation(line: 3151, column: 29, scope: !12843)
!12850 = !DILocation(line: 3152, column: 1, scope: !12843)
!12851 = distinct !DISubprogram(name: "gimple_omp_body", scope: !613, file: !613, line: 3363, type: !10913, scopeLine: 3364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12852)
!12852 = !{!12853}
!12853 = !DILocalVariable(name: "gs", arg: 1, scope: !12851, file: !613, line: 3363, type: !1028)
!12854 = !DILocation(line: 0, scope: !12851)
!12855 = !DILocation(line: 3365, column: 18, scope: !12851)
!12856 = !DILocation(line: 3365, column: 3, scope: !12851)
!12857 = distinct !DISubprogram(name: "is_global_var", scope: !4075, file: !4075, line: 575, type: !4243, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12858)
!12858 = !{!12859}
!12859 = !DILocalVariable(name: "t", arg: 1, scope: !12857, file: !4075, line: 575, type: !4245)
!12860 = !DILocation(line: 0, scope: !12857)
!12861 = !DILocation(line: 577, column: 11, scope: !12857)
!12862 = !DILocation(line: 577, column: 27, scope: !12857)
!12863 = !DILocation(line: 577, column: 30, scope: !12857)
!12864 = !DILocation(line: 577, column: 3, scope: !12857)
!12865 = distinct !DISubprogram(name: "set_bb_seq", scope: !613, file: !613, line: 246, type: !12866, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12868)
!12866 = !DISubroutineType(types: !12867)
!12867 = !{null, !1670, !1018}
!12868 = !{!12869, !12870}
!12869 = !DILocalVariable(name: "bb", arg: 1, scope: !12865, file: !613, line: 246, type: !1670)
!12870 = !DILocalVariable(name: "seq", arg: 2, scope: !12865, file: !613, line: 246, type: !1018)
!12871 = !DILocation(line: 0, scope: !12865)
!12872 = !DILocation(line: 248, column: 3, scope: !12865)
!12873 = !DILocation(line: 249, column: 10, scope: !12865)
!12874 = !DILocation(line: 249, column: 18, scope: !12865)
!12875 = !DILocation(line: 249, column: 22, scope: !12865)
!12876 = !DILocation(line: 250, column: 1, scope: !12865)
!12877 = distinct !DISubprogram(name: "gimple_try_redirect_by_replacing_jump", scope: !3, file: !3, line: 4599, type: !2362, scopeLine: 4600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12878)
!12878 = !{!12879, !12880, !12881, !12882, !12883}
!12879 = !DILocalVariable(name: "e", arg: 1, scope: !12877, file: !3, line: 4599, type: !1008)
!12880 = !DILocalVariable(name: "target", arg: 2, scope: !12877, file: !3, line: 4599, type: !1670)
!12881 = !DILocalVariable(name: "src", scope: !12877, file: !3, line: 4601, type: !1670)
!12882 = !DILocalVariable(name: "i", scope: !12877, file: !3, line: 4602, type: !2222)
!12883 = !DILocalVariable(name: "stmt", scope: !12877, file: !3, line: 4603, type: !1028)
!12884 = !DILocation(line: 0, scope: !12877)
!12885 = !DILocation(line: 4601, column: 24, scope: !12877)
!12886 = !DILocation(line: 4602, column: 3, scope: !12877)
!12887 = !DILocation(line: 4607, column: 7, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12877, file: !3, line: 4607, column: 7)
!12889 = !DILocation(line: 4607, column: 31, scope: !12888)
!12890 = !DILocation(line: 4610, column: 7, scope: !12888)
!12891 = !DILocation(line: 4610, column: 10, scope: !12888)
!12892 = !DILocation(line: 4610, column: 52, scope: !12888)
!12893 = !DILocation(line: 4610, column: 57, scope: !12888)
!12894 = !DILocation(line: 4607, column: 7, scope: !12877)
!12895 = !DILocation(line: 4613, column: 7, scope: !12877)
!12896 = !DILocation(line: 4614, column: 7, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12877, file: !3, line: 4614, column: 7)
!12898 = !DILocation(line: 4614, column: 7, scope: !12877)
!12899 = !DILocation(line: 4617, column: 10, scope: !12877)
!12900 = !DILocation(line: 4619, column: 7, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12877, file: !3, line: 4619, column: 7)
!12902 = !DILocation(line: 4619, column: 26, scope: !12901)
!12903 = !DILocation(line: 4619, column: 41, scope: !12901)
!12904 = !DILocation(line: 4619, column: 44, scope: !12901)
!12905 = !DILocation(line: 4619, column: 63, scope: !12901)
!12906 = !DILocation(line: 4619, column: 7, scope: !12877)
!12907 = !DILocation(line: 4621, column: 7, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12901, file: !3, line: 4620, column: 5)
!12909 = !DILocation(line: 4622, column: 11, scope: !12908)
!12910 = !DILocation(line: 4623, column: 10, scope: !12908)
!12911 = !DILocation(line: 4623, column: 16, scope: !12908)
!12912 = !DILocation(line: 4624, column: 7, scope: !12908)
!12913 = !DILocation(line: 4628, column: 1, scope: !12877)
!12914 = distinct !DISubprogram(name: "get_cases_for_edge", scope: !3, file: !3, line: 877, type: !12915, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12917)
!12915 = !DISubroutineType(types: !12916)
!12916 = !{!704, !1008, !1028}
!12917 = !{!12918, !12919, !12920, !12921, !12922, !12923, !12927, !12928, !12929}
!12918 = !DILocalVariable(name: "e", arg: 1, scope: !12914, file: !3, line: 877, type: !1008)
!12919 = !DILocalVariable(name: "t", arg: 2, scope: !12914, file: !3, line: 877, type: !1028)
!12920 = !DILocalVariable(name: "slot", scope: !12914, file: !3, line: 879, type: !1609)
!12921 = !DILocalVariable(name: "i", scope: !12914, file: !3, line: 880, type: !1173)
!12922 = !DILocalVariable(name: "n", scope: !12914, file: !3, line: 880, type: !1173)
!12923 = !DILocalVariable(name: "elt", scope: !12924, file: !3, line: 898, type: !704)
!12924 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 897, column: 5)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 896, column: 3)
!12926 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 896, column: 3)
!12927 = !DILocalVariable(name: "lab", scope: !12924, file: !3, line: 899, type: !704)
!12928 = !DILocalVariable(name: "label_bb", scope: !12924, file: !3, line: 900, type: !1670)
!12929 = !DILocalVariable(name: "this_edge", scope: !12924, file: !3, line: 901, type: !1008)
!12930 = !DILocation(line: 0, scope: !12914)
!12931 = !DILocation(line: 884, column: 8, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 884, column: 7)
!12933 = !DILocation(line: 884, column: 7, scope: !12914)
!12934 = !DILocation(line: 887, column: 32, scope: !12914)
!12935 = !DILocation(line: 887, column: 47, scope: !12914)
!12936 = !DILocation(line: 887, column: 10, scope: !12914)
!12937 = !DILocation(line: 888, column: 7, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 888, column: 7)
!12939 = !DILocation(line: 888, column: 7, scope: !12914)
!12940 = !DILocation(line: 889, column: 19, scope: !12938)
!12941 = !DILocation(line: 889, column: 5, scope: !12938)
!12942 = !DILocation(line: 895, column: 7, scope: !12914)
!12943 = !DILocation(line: 0, scope: !12924)
!12944 = !DILocation(line: 896, column: 8, scope: !12926)
!12945 = !DILocation(line: 0, scope: !12926)
!12946 = !DILocation(line: 896, column: 17, scope: !12925)
!12947 = !DILocation(line: 896, column: 3, scope: !12926)
!12948 = !DILocation(line: 898, column: 42, scope: !12924)
!12949 = !DILocation(line: 898, column: 18, scope: !12924)
!12950 = !DILocation(line: 899, column: 18, scope: !12924)
!12951 = !DILocation(line: 900, column: 30, scope: !12924)
!12952 = !DILocation(line: 901, column: 38, scope: !12924)
!12953 = !DILocation(line: 901, column: 24, scope: !12924)
!12954 = !DILocation(line: 905, column: 34, scope: !12924)
!12955 = !DILocation(line: 905, column: 49, scope: !12924)
!12956 = !DILocation(line: 905, column: 14, scope: !12924)
!12957 = !DILocation(line: 906, column: 33, scope: !12924)
!12958 = !DILocation(line: 906, column: 7, scope: !12924)
!12959 = !DILocation(line: 906, column: 24, scope: !12924)
!12960 = !DILocation(line: 907, column: 13, scope: !12924)
!12961 = !DILocation(line: 896, column: 23, scope: !12925)
!12962 = !DILocation(line: 896, column: 3, scope: !12925)
!12963 = distinct !{!12963, !12947, !12964}
!12964 = !DILocation(line: 908, column: 5, scope: !12926)
!12965 = !DILocation(line: 910, column: 40, scope: !12914)
!12966 = !DILocation(line: 910, column: 18, scope: !12914)
!12967 = !DILocation(line: 910, column: 17, scope: !12914)
!12968 = !DILocation(line: 910, column: 3, scope: !12914)
!12969 = !DILocation(line: 911, column: 1, scope: !12914)
!12970 = distinct !DISubprogram(name: "recording_case_labels_p", scope: !3, file: !3, line: 856, type: !2474, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!12971 = !DILocation(line: 858, column: 11, scope: !12970)
!12972 = !DILocation(line: 858, column: 25, scope: !12970)
!12973 = !DILocation(line: 858, column: 10, scope: !12970)
!12974 = !DILocation(line: 858, column: 3, scope: !12970)
!12975 = distinct !DISubprogram(name: "remove_phi_nodes_and_edges_for_unreachable_block", scope: !3, file: !3, line: 1733, type: !2377, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12976)
!12976 = !{!12977}
!12977 = !DILocalVariable(name: "bb", arg: 1, scope: !12975, file: !3, line: 1733, type: !1670)
!12978 = !DILocation(line: 0, scope: !12975)
!12979 = !DILocation(line: 1737, column: 3, scope: !12975)
!12980 = !DILocation(line: 1740, column: 3, scope: !12975)
!12981 = !DILocation(line: 1740, column: 10, scope: !12975)
!12982 = !DILocation(line: 1740, column: 33, scope: !12975)
!12983 = !DILocation(line: 1741, column: 18, scope: !12975)
!12984 = !DILocation(line: 1741, column: 5, scope: !12975)
!12985 = distinct !{!12985, !12980, !12986}
!12986 = !DILocation(line: 1741, column: 35, scope: !12975)
!12987 = !DILocation(line: 1742, column: 1, scope: !12975)
!12988 = distinct !DISubprogram(name: "single_pred_p", scope: !382, file: !382, line: 634, type: !2403, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12989)
!12989 = !{!12990}
!12990 = !DILocalVariable(name: "bb", arg: 1, scope: !12988, file: !382, line: 634, type: !2400)
!12991 = !DILocation(line: 0, scope: !12988)
!12992 = !DILocation(line: 636, column: 10, scope: !12988)
!12993 = !DILocation(line: 636, column: 33, scope: !12988)
!12994 = !DILocation(line: 636, column: 3, scope: !12988)
!12995 = distinct !DISubprogram(name: "loops_state_satisfies_p", scope: !337, file: !337, line: 471, type: !12996, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12998)
!12996 = !DISubroutineType(types: !12997)
!12997 = !{!692, !7}
!12998 = !{!12999}
!12999 = !DILocalVariable(name: "flags", arg: 1, scope: !12995, file: !337, line: 471, type: !7)
!13000 = !DILocation(line: 0, scope: !12995)
!13001 = !DILocation(line: 473, column: 11, scope: !12995)
!13002 = !DILocation(line: 473, column: 26, scope: !12995)
!13003 = !DILocation(line: 473, column: 10, scope: !12995)
!13004 = !DILocation(line: 473, column: 3, scope: !12995)
!13005 = distinct !DISubprogram(name: "op_iter_init_def", scope: !4075, file: !4075, line: 780, type: !13006, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13008)
!13006 = !DISubroutineType(types: !13007)
!13007 = !{!2267, !10482, !1028, !693}
!13008 = !{!13009, !13010, !13011}
!13009 = !DILocalVariable(name: "ptr", arg: 1, scope: !13005, file: !4075, line: 780, type: !10482)
!13010 = !DILocalVariable(name: "stmt", arg: 2, scope: !13005, file: !4075, line: 780, type: !1028)
!13011 = !DILocalVariable(name: "flags", arg: 3, scope: !13005, file: !4075, line: 780, type: !693)
!13012 = !DILocation(line: 0, scope: !13005)
!13013 = !DILocation(line: 784, column: 3, scope: !13005)
!13014 = !DILocation(line: 785, column: 8, scope: !13005)
!13015 = !DILocation(line: 785, column: 18, scope: !13005)
!13016 = !DILocation(line: 786, column: 10, scope: !13005)
!13017 = !DILocation(line: 786, column: 3, scope: !13005)
!13018 = distinct !DISubprogram(name: "op_iter_next_def", scope: !4075, file: !4075, line: 681, type: !13019, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13021)
!13019 = !DISubroutineType(types: !13020)
!13020 = !{!2267, !10482}
!13021 = !{!13022, !13023}
!13022 = !DILocalVariable(name: "ptr", arg: 1, scope: !13018, file: !4075, line: 681, type: !10482)
!13023 = !DILocalVariable(name: "def_p", scope: !13018, file: !4075, line: 683, type: !2267)
!13024 = !DILocation(line: 0, scope: !13018)
!13025 = !DILocation(line: 687, column: 12, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13018, file: !4075, line: 687, column: 7)
!13027 = !DILocation(line: 687, column: 7, scope: !13026)
!13028 = !DILocation(line: 687, column: 7, scope: !13018)
!13029 = !DILocation(line: 689, column: 15, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13026, file: !4075, line: 688, column: 5)
!13031 = !DILocation(line: 690, column: 30, scope: !13030)
!13032 = !DILocation(line: 690, column: 17, scope: !13030)
!13033 = !DILocation(line: 691, column: 7, scope: !13030)
!13034 = !DILocation(line: 693, column: 8, scope: !13018)
!13035 = !DILocation(line: 693, column: 13, scope: !13018)
!13036 = !DILocation(line: 694, column: 3, scope: !13018)
!13037 = !DILocation(line: 695, column: 1, scope: !13018)
!13038 = distinct !DISubprogram(name: "reinstall_phi_args", scope: !3, file: !3, line: 2411, type: !13039, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13041)
!13039 = !DISubroutineType(types: !13040)
!13040 = !{null, !1008, !1008}
!13041 = !{!13042, !13043, !13044, !13064, !13066, !13067, !13068, !13072, !13073}
!13042 = !DILocalVariable(name: "new_edge", arg: 1, scope: !13038, file: !3, line: 2411, type: !1008)
!13043 = !DILocalVariable(name: "old_edge", arg: 2, scope: !13038, file: !3, line: 2411, type: !1008)
!13044 = !DILocalVariable(name: "v", scope: !13038, file: !3, line: 2413, type: !13045)
!13045 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_var_map_vector", file: !1454, line: 563, baseType: !13046)
!13046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13047, size: 64)
!13047 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_var_map_heap", file: !1454, line: 560, baseType: !13048)
!13048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_var_map_heap", file: !1454, line: 560, size: 256, elements: !13049)
!13049 = !{!13050}
!13050 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13048, file: !1454, line: 560, baseType: !13051, size: 256)
!13051 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_var_map_base", file: !1454, line: 559, baseType: !13052)
!13052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_var_map_base", file: !1454, line: 559, size: 256, elements: !13053)
!13053 = !{!13054, !13055, !13056}
!13054 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !13052, file: !1454, line: 559, baseType: !7, size: 32)
!13055 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !13052, file: !1454, line: 559, baseType: !7, size: 32, offset: 32)
!13056 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !13052, file: !1454, line: 559, baseType: !13057, size: 192, offset: 64)
!13057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13058, size: 192, elements: !803)
!13058 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_var_map", file: !1454, line: 557, baseType: !13059)
!13059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_edge_var_map", file: !1454, line: 552, size: 192, elements: !13060)
!13060 = !{!13061, !13062, !13063}
!13061 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !13059, file: !1454, line: 553, baseType: !704, size: 64)
!13062 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !13059, file: !1454, line: 554, baseType: !704, size: 64, offset: 64)
!13063 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !13059, file: !1454, line: 555, baseType: !831, size: 32, offset: 128)
!13064 = !DILocalVariable(name: "vm", scope: !13038, file: !3, line: 2414, type: !13065)
!13065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13058, size: 64)
!13066 = !DILocalVariable(name: "i", scope: !13038, file: !3, line: 2415, type: !693)
!13067 = !DILocalVariable(name: "phis", scope: !13038, file: !3, line: 2416, type: !2222)
!13068 = !DILocalVariable(name: "phi", scope: !13069, file: !3, line: 2426, type: !1028)
!13069 = distinct !DILexicalBlock(scope: !13070, file: !3, line: 2425, column: 5)
!13070 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 2422, column: 3)
!13071 = distinct !DILexicalBlock(scope: !13038, file: !3, line: 2422, column: 3)
!13072 = !DILocalVariable(name: "result", scope: !13069, file: !3, line: 2427, type: !704)
!13073 = !DILocalVariable(name: "arg", scope: !13069, file: !3, line: 2428, type: !704)
!13074 = !DILocation(line: 0, scope: !13038)
!13075 = !DILocation(line: 2414, column: 3, scope: !13038)
!13076 = !DILocation(line: 2416, column: 3, scope: !13038)
!13077 = !DILocation(line: 2418, column: 7, scope: !13038)
!13078 = !DILocation(line: 2419, column: 8, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13038, file: !3, line: 2419, column: 7)
!13080 = !DILocation(line: 2419, column: 7, scope: !13038)
!13081 = !DILocation(line: 2422, column: 22, scope: !13071)
!13082 = !DILocation(line: 2422, column: 48, scope: !13071)
!13083 = !DILocation(line: 0, scope: !13070)
!13084 = !DILocation(line: 2422, column: 8, scope: !13071)
!13085 = !DILocation(line: 0, scope: !13071)
!13086 = !DILocation(line: 2423, column: 8, scope: !13070)
!13087 = !DILocation(line: 2423, column: 45, scope: !13070)
!13088 = !DILocation(line: 2423, column: 49, scope: !13070)
!13089 = !DILocation(line: 2423, column: 48, scope: !13070)
!13090 = !DILocation(line: 2422, column: 3, scope: !13071)
!13091 = !DILocation(line: 2426, column: 20, scope: !13069)
!13092 = !DILocation(line: 0, scope: !13069)
!13093 = !DILocation(line: 2427, column: 51, scope: !13069)
!13094 = !DILocation(line: 2427, column: 21, scope: !13069)
!13095 = !DILocation(line: 2428, column: 45, scope: !13069)
!13096 = !DILocation(line: 2428, column: 18, scope: !13069)
!13097 = !DILocation(line: 2430, column: 7, scope: !13069)
!13098 = !DILocation(line: 2432, column: 72, scope: !13069)
!13099 = !DILocation(line: 2432, column: 40, scope: !13069)
!13100 = !DILocation(line: 2432, column: 7, scope: !13069)
!13101 = !DILocation(line: 2424, column: 9, scope: !13070)
!13102 = !DILocation(line: 2424, column: 13, scope: !13070)
!13103 = !DILocation(line: 2422, column: 3, scope: !13070)
!13104 = distinct !{!13104, !13090, !13105}
!13105 = !DILocation(line: 2433, column: 5, scope: !13071)
!13106 = !DILocation(line: 2435, column: 3, scope: !13038)
!13107 = !DILocation(line: 2436, column: 1, scope: !13038)
!13108 = distinct !DISubprogram(name: "VEC_edge_var_map_base_iterate", scope: !1454, file: !1454, line: 559, type: !13109, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13113)
!13109 = !DISubroutineType(types: !13110)
!13110 = !{!693, !13111, !7, !13112}
!13111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13051, size: 64)
!13112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13065, size: 64)
!13113 = !{!13114, !13115, !13116}
!13114 = !DILocalVariable(name: "vec_", arg: 1, scope: !13108, file: !1454, line: 559, type: !13111)
!13115 = !DILocalVariable(name: "ix_", arg: 2, scope: !13108, file: !1454, line: 559, type: !7)
!13116 = !DILocalVariable(name: "ptr", arg: 3, scope: !13108, file: !1454, line: 559, type: !13112)
!13117 = !DILocation(line: 0, scope: !13108)
!13118 = !DILocation(line: 559, column: 1, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13108, file: !1454, line: 559, column: 1)
!13120 = !DILocation(line: 559, column: 1, scope: !13108)
!13121 = !DILocation(line: 559, column: 1, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13119, file: !1454, line: 559, column: 1)
!13123 = !DILocation(line: 559, column: 1, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13119, file: !1454, line: 559, column: 1)
!13125 = !DILocation(line: 0, scope: !13119)
!13126 = distinct !DISubprogram(name: "redirect_edge_var_map_result", scope: !4075, file: !4075, line: 1227, type: !13127, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13129)
!13127 = !DISubroutineType(types: !13128)
!13128 = !{!704, !13065}
!13129 = !{!13130}
!13130 = !DILocalVariable(name: "v", arg: 1, scope: !13126, file: !4075, line: 1227, type: !13065)
!13131 = !DILocation(line: 0, scope: !13126)
!13132 = !DILocation(line: 1229, column: 13, scope: !13126)
!13133 = !DILocation(line: 1229, column: 3, scope: !13126)
!13134 = distinct !DISubprogram(name: "redirect_edge_var_map_def", scope: !4075, file: !4075, line: 1219, type: !13127, scopeLine: 1220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13135)
!13135 = !{!13136}
!13136 = !DILocalVariable(name: "v", arg: 1, scope: !13134, file: !4075, line: 1219, type: !13065)
!13137 = !DILocation(line: 0, scope: !13134)
!13138 = !DILocation(line: 1221, column: 13, scope: !13134)
!13139 = !DILocation(line: 1221, column: 3, scope: !13134)
!13140 = distinct !DISubprogram(name: "redirect_edge_var_map_location", scope: !4075, file: !4075, line: 1235, type: !13141, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13143)
!13141 = !DISubroutineType(types: !13142)
!13142 = !{!831, !13065}
!13143 = !{!13144}
!13144 = !DILocalVariable(name: "v", arg: 1, scope: !13140, file: !4075, line: 1235, type: !13065)
!13145 = !DILocation(line: 0, scope: !13140)
!13146 = !DILocation(line: 1237, column: 13, scope: !13140)
!13147 = !DILocation(line: 1237, column: 3, scope: !13140)
!13148 = distinct !DISubprogram(name: "gimple_phi_set_result", scope: !613, file: !613, line: 3089, type: !3551, scopeLine: 3090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13149)
!13149 = !{!13150, !13151}
!13150 = !DILocalVariable(name: "gs", arg: 1, scope: !13148, file: !613, line: 3089, type: !1028)
!13151 = !DILocalVariable(name: "result", arg: 2, scope: !13148, file: !613, line: 3089, type: !704)
!13152 = !DILocation(line: 0, scope: !13148)
!13153 = !DILocation(line: 3092, column: 18, scope: !13148)
!13154 = !DILocation(line: 3092, column: 25, scope: !13148)
!13155 = !DILocation(line: 3093, column: 1, scope: !13148)
!13156 = distinct !DISubprogram(name: "need_fake_edge_p", scope: !3, file: !3, line: 6483, type: !3633, scopeLine: 6484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13157)
!13157 = !{!13158, !13159, !13160}
!13158 = !DILocalVariable(name: "t", arg: 1, scope: !13156, file: !3, line: 6483, type: !1028)
!13159 = !DILocalVariable(name: "fndecl", scope: !13156, file: !3, line: 6485, type: !704)
!13160 = !DILocalVariable(name: "call_flags", scope: !13156, file: !3, line: 6486, type: !693)
!13161 = !DILocation(line: 0, scope: !13156)
!13162 = !DILocation(line: 6495, column: 7, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 6495, column: 7)
!13164 = !DILocation(line: 6495, column: 7, scope: !13156)
!13165 = !DILocation(line: 6497, column: 16, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 6496, column: 5)
!13167 = !DILocation(line: 6498, column: 20, scope: !13166)
!13168 = !DILocation(line: 6499, column: 5, scope: !13166)
!13169 = !DILocation(line: 6501, column: 7, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 6501, column: 7)
!13171 = !DILocation(line: 6502, column: 10, scope: !13170)
!13172 = !DILocation(line: 6502, column: 7, scope: !13170)
!13173 = !DILocation(line: 6503, column: 10, scope: !13170)
!13174 = !DILocation(line: 6504, column: 7, scope: !13170)
!13175 = !DILocation(line: 6510, column: 41, scope: !13170)
!13176 = !DILocation(line: 6511, column: 5, scope: !13170)
!13177 = !DILocation(line: 6511, column: 8, scope: !13170)
!13178 = !DILocation(line: 6511, column: 36, scope: !13170)
!13179 = !DILocation(line: 6501, column: 7, scope: !13156)
!13180 = !DILocation(line: 6514, column: 7, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 6514, column: 7)
!13182 = !DILocation(line: 6515, column: 23, scope: !13181)
!13183 = !DILocation(line: 6515, column: 7, scope: !13181)
!13184 = !DILocation(line: 6518, column: 7, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 6518, column: 7)
!13186 = !DILocation(line: 6518, column: 23, scope: !13185)
!13187 = !DILocation(line: 6519, column: 8, scope: !13185)
!13188 = !DILocation(line: 6519, column: 12, scope: !13185)
!13189 = !DILocation(line: 6519, column: 38, scope: !13185)
!13190 = !DILocation(line: 6519, column: 41, scope: !13185)
!13191 = !DILocation(line: 6518, column: 7, scope: !13156)
!13192 = !DILocation(line: 6522, column: 3, scope: !13156)
!13193 = !DILocation(line: 6523, column: 1, scope: !13156)
!13194 = distinct !DISubprogram(name: "gimple_asm_volatile_p", scope: !613, file: !613, line: 2739, type: !3903, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13195)
!13195 = !{!13196}
!13196 = !DILocalVariable(name: "gs", arg: 1, scope: !13194, file: !613, line: 2739, type: !3078)
!13197 = !DILocation(line: 0, scope: !13194)
!13198 = !DILocation(line: 2742, column: 22, scope: !13194)
!13199 = !DILocation(line: 2742, column: 10, scope: !13194)
!13200 = !DILocation(line: 2742, column: 3, scope: !13194)
!13201 = distinct !DISubprogram(name: "gimple_asm_input_p", scope: !613, file: !613, line: 2775, type: !3903, scopeLine: 2776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13202)
!13202 = !{!13203}
!13203 = !DILocalVariable(name: "gs", arg: 1, scope: !13201, file: !613, line: 2775, type: !3078)
!13204 = !DILocation(line: 0, scope: !13201)
!13205 = !DILocation(line: 2778, column: 22, scope: !13201)
!13206 = !DILocation(line: 2778, column: 10, scope: !13201)
!13207 = !DILocation(line: 2778, column: 3, scope: !13201)
!13208 = distinct !DISubprogram(name: "gimple_no_warning_p", scope: !613, file: !613, line: 1201, type: !3903, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13209)
!13209 = !{!13210}
!13210 = !DILocalVariable(name: "stmt", arg: 1, scope: !13208, file: !613, line: 1201, type: !3078)
!13211 = !DILocation(line: 0, scope: !13208)
!13212 = !DILocation(line: 1203, column: 23, scope: !13208)
!13213 = !DILocation(line: 1203, column: 10, scope: !13208)
!13214 = !DILocation(line: 1203, column: 3, scope: !13208)
!13215 = distinct !DISubprogram(name: "do_warn_unused_result", scope: !3, file: !3, line: 7231, type: !4981, scopeLine: 7232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13216)
!13216 = !{!13217, !13218, !13219, !13220, !13221, !13225}
!13217 = !DILocalVariable(name: "seq", arg: 1, scope: !13215, file: !3, line: 7231, type: !1018)
!13218 = !DILocalVariable(name: "fdecl", scope: !13215, file: !3, line: 7233, type: !704)
!13219 = !DILocalVariable(name: "ftype", scope: !13215, file: !3, line: 7233, type: !704)
!13220 = !DILocalVariable(name: "i", scope: !13215, file: !3, line: 7234, type: !2222)
!13221 = !DILocalVariable(name: "g", scope: !13222, file: !3, line: 7238, type: !1028)
!13222 = distinct !DILexicalBlock(scope: !13223, file: !3, line: 7237, column: 5)
!13223 = distinct !DILexicalBlock(scope: !13224, file: !3, line: 7236, column: 3)
!13224 = distinct !DILexicalBlock(scope: !13215, file: !3, line: 7236, column: 3)
!13225 = !DILocalVariable(name: "loc", scope: !13226, file: !3, line: 7268, type: !829)
!13226 = distinct !DILexicalBlock(scope: !13227, file: !3, line: 7267, column: 6)
!13227 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 7266, column: 8)
!13228 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 7241, column: 2)
!13229 = !DILocation(line: 0, scope: !13215)
!13230 = !DILocation(line: 7234, column: 3, scope: !13215)
!13231 = !DILocation(line: 7236, column: 12, scope: !13224)
!13232 = !DILocation(line: 7236, column: 8, scope: !13224)
!13233 = !DILocation(line: 7236, column: 30, scope: !13223)
!13234 = !DILocation(line: 7236, column: 29, scope: !13223)
!13235 = !DILocation(line: 7236, column: 3, scope: !13224)
!13236 = !DILocation(line: 7238, column: 18, scope: !13222)
!13237 = !DILocation(line: 0, scope: !13222)
!13238 = !DILocation(line: 7240, column: 15, scope: !13222)
!13239 = !DILocation(line: 7240, column: 7, scope: !13222)
!13240 = !DILocation(line: 7243, column: 27, scope: !13228)
!13241 = !DILocation(line: 7243, column: 4, scope: !13228)
!13242 = !DILocation(line: 7244, column: 4, scope: !13228)
!13243 = !DILocation(line: 7246, column: 27, scope: !13228)
!13244 = !DILocation(line: 7246, column: 4, scope: !13228)
!13245 = !DILocation(line: 7247, column: 27, scope: !13228)
!13246 = !DILocation(line: 7247, column: 4, scope: !13228)
!13247 = !DILocation(line: 7248, column: 4, scope: !13228)
!13248 = !DILocation(line: 7250, column: 27, scope: !13228)
!13249 = !DILocation(line: 7250, column: 4, scope: !13228)
!13250 = !DILocation(line: 7251, column: 4, scope: !13228)
!13251 = !DILocation(line: 7253, column: 27, scope: !13228)
!13252 = !DILocation(line: 7253, column: 4, scope: !13228)
!13253 = !DILocation(line: 7254, column: 4, scope: !13228)
!13254 = !DILocation(line: 7257, column: 8, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 7257, column: 8)
!13256 = !DILocation(line: 7257, column: 8, scope: !13228)
!13257 = !DILocation(line: 7263, column: 12, scope: !13228)
!13258 = !DILocation(line: 7264, column: 12, scope: !13228)
!13259 = !DILocation(line: 7266, column: 48, scope: !13227)
!13260 = !DILocation(line: 7266, column: 8, scope: !13227)
!13261 = !DILocation(line: 7266, column: 8, scope: !13228)
!13262 = !DILocation(line: 7268, column: 25, scope: !13226)
!13263 = !DILocation(line: 0, scope: !13226)
!13264 = !DILocation(line: 7270, column: 12, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 7270, column: 12)
!13266 = !DILocation(line: 7270, column: 12, scope: !13226)
!13267 = !DILocation(line: 7271, column: 3, scope: !13265)
!13268 = !DILocation(line: 7276, column: 3, scope: !13265)
!13269 = !DILocation(line: 7236, column: 45, scope: !13223)
!13270 = !DILocation(line: 7236, column: 3, scope: !13223)
!13271 = distinct !{!13271, !13235, !13272}
!13272 = !DILocation(line: 7286, column: 5, scope: !13224)
!13273 = !DILocation(line: 7287, column: 1, scope: !13215)
