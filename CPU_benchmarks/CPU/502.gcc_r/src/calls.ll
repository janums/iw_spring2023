; ModuleID = 'calls.bc'
source_filename = "calls.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.optab_handlers = type { i32 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type opaque
%struct.diagnostic_info = type opaque
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void ()*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i8 (%union.tree_node*)*, void (i32, i8*, i32, i8)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)*, void (i32)*, void (%struct.rtx_def*)*, void ()*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void (i32)*, void (%union.tree_node*, %union.tree_node*)*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.args_size = type { i64, %union.tree_node* }
%struct.call_expr_arg_iterator_d = type { %union.tree_node*, i32, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.cgraph_rtl_info = type { i32 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.arg_data = type { %union.tree_node*, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.locate_and_pad_arg_data, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def**, i32 }
%struct.locate_and_pad_arg_data = type { %struct.args_size, %struct.args_size, %struct.args_size, %struct.args_size, i32, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.arg = type { %struct.rtx_def*, i32, %struct.rtx_def*, i32, %struct.locate_and_pad_arg_data, %struct.rtx_def* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [8 x i8] c"calls.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@optab_table = external dso_local global [159 x %struct.optab_d], align 16
@expand_call.currently_expanding_call = internal unnamed_addr global i32 0, align 4, !dbg !0
@target_flags = external dso_local local_unnamed_addr global i32, align 4
@highest_outgoing_arg_in_use = internal unnamed_addr global i32 0, align 4, !dbg !2261
@stack_usage_map = internal unnamed_addr global i8* null, align 8, !dbg !2259
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@.str.2 = private unnamed_addr constant [34 x i8] c"function call has aggregate value\00", align 1
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@ix86_preferred_stack_boundary = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@stack_arg_under_construction = internal unnamed_addr global i32 0, align 4, !dbg !2275
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@flag_optimize_sibling_calls = external dso_local local_unnamed_addr global i32, align 4
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@flag_exceptions = external dso_local local_unnamed_addr global i32, align 4
@stored_args_map = internal unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2263
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.3 = private unnamed_addr constant [7 x i8] c"alloca\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"__builtin_alloca\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"uiltin_\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"setjmp\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"setjmp_syscall\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"sigsetjmp\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"savectx\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"siglongjmp\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"qsetjmp\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"vfork\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"getcontext\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"longjmp\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.15 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@flag_stack_check = external dso_local local_unnamed_addr global i32, align 4
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@optimize = external dso_local local_unnamed_addr global i32, align 4
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@word_mode = external dso_local local_unnamed_addr global i32, align 4
@flag_enable_icf_debug = external dso_local local_unnamed_addr global i32, align 4
@debug_hooks = external dso_local local_unnamed_addr global %struct.gcc_debug_hooks*, align 8
@flag_defer_pop = external dso_local local_unnamed_addr global i32, align 4
@regclass_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@generating_concat_p = external dso_local local_unnamed_addr global i32, align 4
@virtuals_instantiated = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2456 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2462, metadata !DIExpression()), !dbg !2464
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2463, metadata !DIExpression()), !dbg !2464
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2465
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #7, !dbg !2466
  ret i32 %call, !dbg !2467
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2468 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2472
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #7, !dbg !2473
  ret i32 %call, !dbg !2474
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2475 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2529, metadata !DIExpression()), !dbg !2530
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2531
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2531
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2531
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2531
  %cmp = icmp uge i8* %0, %1, !dbg !2531
  %conv1 = zext i1 %cmp to i64, !dbg !2531
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2531
  %tobool = icmp eq i64 %expval, 0, !dbg !2531
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2531

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !2531
  br label %cond.end, !dbg !2531

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2531
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2531
  %2 = load i8, i8* %0, align 1, !dbg !2531
  %conv3 = zext i8 %2 to i32, !dbg !2531
  br label %cond.end, !dbg !2531

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2531
  ret i32 %cond, !dbg !2532
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2533 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2535, metadata !DIExpression()), !dbg !2536
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2537
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2537
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2537
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2537
  %cmp = icmp uge i8* %0, %1, !dbg !2537
  %conv1 = zext i1 %cmp to i64, !dbg !2537
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2537
  %tobool = icmp eq i64 %expval, 0, !dbg !2537
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2537

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !2537
  br label %cond.end, !dbg !2537

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2537
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2537
  %2 = load i8, i8* %0, align 1, !dbg !2537
  %conv3 = zext i8 %2 to i32, !dbg !2537
  br label %cond.end, !dbg !2537

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2537
  ret i32 %cond, !dbg !2538
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2539 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2540
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2540
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2540
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2540
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2540
  %cmp = icmp uge i8* %1, %2, !dbg !2540
  %conv1 = zext i1 %cmp to i64, !dbg !2540
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2540
  %tobool = icmp eq i64 %expval, 0, !dbg !2540
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2540

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #7, !dbg !2540
  br label %cond.end, !dbg !2540

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2540
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2540
  %3 = load i8, i8* %1, align 1, !dbg !2540
  %conv3 = zext i8 %3 to i32, !dbg !2540
  br label %cond.end, !dbg !2540

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2540
  ret i32 %cond, !dbg !2541
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2546, metadata !DIExpression()), !dbg !2547
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2548
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #7, !dbg !2549
  ret i32 %call, !dbg !2550
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2551 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2555, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2556, metadata !DIExpression()), !dbg !2557
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2558
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2558
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2558
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2558
  %cmp = icmp uge i8* %0, %1, !dbg !2558
  %conv1 = zext i1 %cmp to i64, !dbg !2558
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2558
  %tobool = icmp eq i64 %expval, 0, !dbg !2558
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2558

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2558
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !2558
  br label %cond.end, !dbg !2558

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2558
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2558
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2558
  store i8 %conv2, i8* %0, align 1, !dbg !2558
  %conv6 = and i32 %__c, 255, !dbg !2558
  br label %cond.end, !dbg !2558

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2558
  ret i32 %cond, !dbg !2559
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2560 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2562, metadata !DIExpression()), !dbg !2564
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2563, metadata !DIExpression()), !dbg !2564
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2565
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2565
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2565
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2565
  %cmp = icmp uge i8* %0, %1, !dbg !2565
  %conv1 = zext i1 %cmp to i64, !dbg !2565
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2565
  %tobool = icmp eq i64 %expval, 0, !dbg !2565
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2565

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2565
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !2565
  br label %cond.end, !dbg !2565

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2565
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2565
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2565
  store i8 %conv2, i8* %0, align 1, !dbg !2565
  %conv6 = and i32 %__c, 255, !dbg !2565
  br label %cond.end, !dbg !2565

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2565
  ret i32 %cond, !dbg !2566
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2567 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2569, metadata !DIExpression()), !dbg !2570
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2571
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2571
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2571
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2571
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2571
  %cmp = icmp uge i8* %1, %2, !dbg !2571
  %conv1 = zext i1 %cmp to i64, !dbg !2571
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2571
  %tobool = icmp eq i64 %expval, 0, !dbg !2571
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2571

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2571
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #7, !dbg !2571
  br label %cond.end, !dbg !2571

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2571
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2571
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2571
  store i8 %conv4, i8* %1, align 1, !dbg !2571
  %conv6 = and i32 %__c, 255, !dbg !2571
  br label %cond.end, !dbg !2571

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2571
  ret i32 %cond, !dbg !2572
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2573 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2579, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2580, metadata !DIExpression()), !dbg !2582
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2581, metadata !DIExpression()), !dbg !2582
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #7, !dbg !2583
  ret i64 %call, !dbg !2584
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2585 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2587, metadata !DIExpression()), !dbg !2588
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2589
  %0 = load i32, i32* %_flags, align 8, !dbg !2589
  %and = lshr i32 %0, 4, !dbg !2589
  %and.lobit = and i32 %and, 1, !dbg !2589
  ret i32 %and.lobit, !dbg !2590
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2591 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2593, metadata !DIExpression()), !dbg !2594
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2595
  %0 = load i32, i32* %_flags, align 8, !dbg !2595
  %and = lshr i32 %0, 5, !dbg !2595
  %and.lobit = and i32 %and, 1, !dbg !2595
  ret i32 %and.lobit, !dbg !2596
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2597 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2600, metadata !DIExpression()), !dbg !2601
  %__c.off = add i32 %__c, 128, !dbg !2602
  %0 = icmp ult i32 %__c.off, 384, !dbg !2602
  br i1 %0, label %cond.true, label %cond.end, !dbg !2602

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #7, !dbg !2603
  %1 = load i32*, i32** %call, align 8, !dbg !2604
  %idxprom = sext i32 %__c to i64, !dbg !2605
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2605
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2605
  br label %cond.end, !dbg !2606

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2606
  ret i32 %cond, !dbg !2607
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2608 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2610, metadata !DIExpression()), !dbg !2611
  %__c.off = add i32 %__c, 128, !dbg !2612
  %0 = icmp ult i32 %__c.off, 384, !dbg !2612
  br i1 %0, label %cond.true, label %cond.end, !dbg !2612

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #7, !dbg !2613
  %1 = load i32*, i32** %call, align 8, !dbg !2614
  %idxprom = sext i32 %__c to i64, !dbg !2615
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2615
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2615
  br label %cond.end, !dbg !2616

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2616
  ret i32 %cond, !dbg !2617
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2618 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2623, metadata !DIExpression()), !dbg !2624
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !2625
  %conv = trunc i64 %call to i32, !dbg !2626
  ret i32 %conv, !dbg !2627
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2628 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2632, metadata !DIExpression()), !dbg !2633
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !2634
  ret i64 %call, !dbg !2635
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2636 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2641, metadata !DIExpression()), !dbg !2642
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #7, !dbg !2643
  ret i64 %call, !dbg !2644
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2645 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2651, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2652, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2653, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2654, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2655, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata i64 0, metadata !2656, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2657, metadata !DIExpression()), !dbg !2661
  br label %while.cond, !dbg !2662

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2663
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2661
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2657, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2656, metadata !DIExpression()), !dbg !2661
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2664
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2662

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2665
  %div = lshr i64 %add, 1, !dbg !2667
  call void @llvm.dbg.value(metadata i64 %div, metadata !2658, metadata !DIExpression()), !dbg !2661
  %mul = mul i64 %div, %__size, !dbg !2668
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2669
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2659, metadata !DIExpression()), !dbg !2661
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #7, !dbg !2670
  call void @llvm.dbg.value(metadata i32 %call, metadata !2660, metadata !DIExpression()), !dbg !2661
  %cmp1 = icmp slt i32 %call, 0, !dbg !2671
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2673

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2674
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2676

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2677
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2656, metadata !DIExpression()), !dbg !2661
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2661
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2661
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2657, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2656, metadata !DIExpression()), !dbg !2661
  br label %while.cond, !dbg !2662, !llvm.loop !2678

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2661
  ret i8* %retval.0, !dbg !2680
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2681 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2687, metadata !DIExpression()), !dbg !2688
  %call = tail call double @strtod(i8* %__nptr, i8** null) #7, !dbg !2689
  ret double %call, !dbg !2690
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2691 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2700, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2701, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %base, metadata !2702, metadata !DIExpression()), !dbg !2703
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !2704
  ret i64 %call, !dbg !2705
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2706 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2712, metadata !DIExpression()), !dbg !2715
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2713, metadata !DIExpression()), !dbg !2715
  call void @llvm.dbg.value(metadata i32 %base, metadata !2714, metadata !DIExpression()), !dbg !2715
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !2716
  ret i64 %call, !dbg !2717
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2718 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2729, metadata !DIExpression()), !dbg !2732
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2730, metadata !DIExpression()), !dbg !2732
  call void @llvm.dbg.value(metadata i32 %base, metadata !2731, metadata !DIExpression()), !dbg !2732
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !2733
  ret i64 %call, !dbg !2734
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2735 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2739, metadata !DIExpression()), !dbg !2742
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2740, metadata !DIExpression()), !dbg !2742
  call void @llvm.dbg.value(metadata i32 %base, metadata !2741, metadata !DIExpression()), !dbg !2742
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !2743
  ret i64 %call, !dbg !2744
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2745 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2785, metadata !DIExpression()), !dbg !2787
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2786, metadata !DIExpression()), !dbg !2787
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !2788
  ret i32 %call, !dbg !2789
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2790 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2792, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2793, metadata !DIExpression()), !dbg !2794
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !2795
  ret i32 %call, !dbg !2796
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2797 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2801, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2802, metadata !DIExpression()), !dbg !2803
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #7, !dbg !2804
  ret i32 %call, !dbg !2805
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2806 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2810, metadata !DIExpression()), !dbg !2814
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2811, metadata !DIExpression()), !dbg !2814
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2812, metadata !DIExpression()), !dbg !2814
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2813, metadata !DIExpression()), !dbg !2814
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #7, !dbg !2815
  ret i32 %call, !dbg !2816
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2817 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2821, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2822, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2823, metadata !DIExpression()), !dbg !2824
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2823, metadata !DIExpression(DW_OP_deref)), !dbg !2824
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !2825
  ret i32 %call, !dbg !2826
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2827 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2831, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2832, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2833, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2834, metadata !DIExpression()), !dbg !2835
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2834, metadata !DIExpression(DW_OP_deref)), !dbg !2835
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !2836
  ret i32 %call, !dbg !2837
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2838 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2862, metadata !DIExpression()), !dbg !2864
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2863, metadata !DIExpression()), !dbg !2864
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !2865
  ret i32 %call, !dbg !2866
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2867 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2869, metadata !DIExpression()), !dbg !2871
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2870, metadata !DIExpression()), !dbg !2871
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !2872
  ret i32 %call, !dbg !2873
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2874 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2878, metadata !DIExpression()), !dbg !2880
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2879, metadata !DIExpression()), !dbg !2880
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #7, !dbg !2881
  ret i32 %call, !dbg !2882
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2883 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2887, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2888, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2889, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2890, metadata !DIExpression()), !dbg !2891
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #7, !dbg !2892
  ret i32 %call, !dbg !2893
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @prepare_call_address(%union.tree_node* %fndecl, %struct.rtx_def* %funexp, %struct.rtx_def* %static_chain_value, %struct.rtx_def** %call_fusage, i32 %reg_parm_seen, i32 %sibcallp) local_unnamed_addr #5 !dbg !2894 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !2898, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %funexp, metadata !2899, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata %struct.rtx_def* %static_chain_value, metadata !2900, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2901, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata i32 %reg_parm_seen, metadata !2902, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata i32 %sibcallp, metadata !2903, metadata !DIExpression()), !dbg !2907
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %funexp, i64 0, i32 0, !dbg !2908
  %bf.load = load i32, i32* %0, align 8, !dbg !2908
  %bf.clear = and i32 %bf.load, 65535, !dbg !2908
  %cmp = icmp eq i32 %bf.clear, 45, !dbg !2910
  br i1 %cmp, label %if.else, label %if.then, !dbg !2911

if.then:                                          ; preds = %entry
  %tobool = icmp eq i32 %reg_parm_seen, 0, !dbg !2912
  %call = tail call %struct.rtx_def* @memory_address_addr_space(i32 14, %struct.rtx_def* %funexp, i8 zeroext 0) #7, !dbg !2913
  br i1 %tobool, label %if.end5, label %cond.true, !dbg !2914

cond.true:                                        ; preds = %if.then
  %call1 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call) #7, !dbg !2915
  br label %if.end5, !dbg !2914

if.else:                                          ; preds = %entry
  br label %if.end5

if.end5:                                          ; preds = %if.then, %cond.true, %if.else
  %funexp.addr.0 = phi %struct.rtx_def* [ %funexp, %if.else ], [ %call1, %cond.true ], [ %call, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %funexp.addr.0, metadata !2899, metadata !DIExpression()), !dbg !2907
  %cmp6 = icmp eq %struct.rtx_def* %static_chain_value, null, !dbg !2916
  br i1 %cmp6, label %if.end21, label %if.then7, !dbg !2917

if.then7:                                         ; preds = %if.end5
  %tobool8 = icmp eq %union.tree_node* %fndecl, null, !dbg !2918
  br i1 %tobool8, label %cond.true9, label %cond.end11, !dbg !2918

cond.true9:                                       ; preds = %if.then7
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !2918
  br label %cond.end11, !dbg !2918

cond.end11:                                       ; preds = %if.then7, %cond.true9
  %1 = load %struct.rtx_def* (%union.tree_node*, i8)*, %struct.rtx_def* (%union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 21), align 8, !dbg !2919
  %call13 = tail call %struct.rtx_def* %1(%union.tree_node* %fndecl, i8 zeroext 0) #7, !dbg !2920
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !2904, metadata !DIExpression()), !dbg !2921
  %call14 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* nonnull %static_chain_value, i8 zeroext 0) #7, !dbg !2922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !2900, metadata !DIExpression()), !dbg !2907
  %call15 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call13, %struct.rtx_def* %call14) #7, !dbg !2923
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call13, i64 0, i32 0, !dbg !2924
  %bf.load16 = load i32, i32* %2, align 8, !dbg !2924
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !2924
  %cmp18 = icmp eq i32 %bf.clear17, 37, !dbg !2924
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !2926

if.then19:                                        ; preds = %cond.end11
  tail call void @use_reg(%struct.rtx_def** %call_fusage, %struct.rtx_def* %call13) #7, !dbg !2927
  br label %if.end21, !dbg !2927

if.end21:                                         ; preds = %if.end5, %cond.end11, %if.then19
  ret %struct.rtx_def* %funexp.addr.0, !dbg !2928
}

declare dso_local %struct.rtx_def* @force_not_mem(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @convert_memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @use_reg(%struct.rtx_def**, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @setjmp_call_p(%union.tree_node* %fndecl) local_unnamed_addr #5 !dbg !2929 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !2936, metadata !DIExpression()), !dbg !2937
  %call = tail call fastcc i32 @special_function_p(%union.tree_node* %fndecl, i32 0) #8, !dbg !2938
  %and = and i32 %call, 128, !dbg !2939
  ret i32 %and, !dbg !2940
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @special_function_p(%union.tree_node* %fndecl, i32 %flags) unnamed_addr #5 !dbg !2941 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !2945, metadata !DIExpression()), !dbg !2951
  call void @llvm.dbg.value(metadata i32 %flags, metadata !2946, metadata !DIExpression()), !dbg !2951
  %tobool = icmp eq %union.tree_node* %fndecl, null, !dbg !2952
  br i1 %tobool, label %if.end196, label %land.lhs.true, !dbg !2953

land.lhs.true:                                    ; preds = %entry
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2954
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !2954
  %tobool1 = icmp eq %union.tree_node* %0, null, !dbg !2954
  br i1 %tobool1, label %if.end196, label %land.lhs.true2, !dbg !2955

land.lhs.true2:                                   ; preds = %land.lhs.true
  %1 = bitcast %union.tree_node** %name to %struct.tree_identifier**, !dbg !2956
  %len = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2956
  %2 = bitcast %union.tree_node** %len to i32*, !dbg !2956
  %3 = load i32, i32* %2, align 8, !dbg !2956
  %cmp = icmp ult i32 %3, 18, !dbg !2957
  br i1 %cmp, label %land.lhs.true5, label %if.end196, !dbg !2958

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2959
  %4 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !2959
  %cmp7 = icmp eq %union.tree_node* %4, null, !dbg !2960
  br i1 %cmp7, label %land.lhs.true11, label %lor.lhs.false, !dbg !2961

lor.lhs.false:                                    ; preds = %land.lhs.true5
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2961
  %bf.load = load i64, i64* %5, align 8, !dbg !2962
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !2963
  %cmp10 = icmp eq i64 %bf.cast2, 40, !dbg !2963
  br i1 %cmp10, label %land.lhs.true11, label %if.end196, !dbg !2964

land.lhs.true11:                                  ; preds = %lor.lhs.false, %land.lhs.true5
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2965
  %bf.load13 = load i64, i64* %6, align 8, !dbg !2965
  %bf.cast153 = and i64 %bf.load13, 134217728, !dbg !2965
  %tobool16 = icmp eq i64 %bf.cast153, 0, !dbg !2965
  br i1 %tobool16, label %if.end196, label %if.then, !dbg !2966

if.then:                                          ; preds = %land.lhs.true11
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2967
  %7 = bitcast i32* %str to i8**, !dbg !2967
  %8 = load i8*, i8** %7, align 8, !dbg !2967
  call void @llvm.dbg.value(metadata i8* %8, metadata !2947, metadata !DIExpression()), !dbg !2968
  call void @llvm.dbg.value(metadata i8* %8, metadata !2950, metadata !DIExpression()), !dbg !2968
  %cmp27 = icmp eq i32 %3, 6, !dbg !2969
  br i1 %cmp27, label %land.lhs.true28, label %lor.lhs.false33, !dbg !2971

land.lhs.true28:                                  ; preds = %if.then
  %9 = load i8, i8* %8, align 1, !dbg !2972
  %cmp29 = icmp eq i8 %9, 97, !dbg !2973
  br i1 %cmp29, label %land.lhs.true31, label %lor.lhs.false33, !dbg !2974

land.lhs.true31:                                  ; preds = %land.lhs.true28
  %call = tail call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #7, !dbg !2975
  %tobool32 = icmp eq i32 %call, 0, !dbg !2975
  br i1 %tobool32, label %if.then49, label %land.lhs.true31.lor.lhs.false33_crit_edge, !dbg !2976

land.lhs.true31.lor.lhs.false33_crit_edge:        ; preds = %land.lhs.true31
  %.pre = load %struct.tree_identifier*, %struct.tree_identifier** %1, align 8, !dbg !2977
  %len38.phi.trans.insert = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %.pre, i64 0, i32 1, i32 1, !dbg !2978
  %.pre10 = load i32, i32* %len38.phi.trans.insert, align 8, !dbg !2977
  br label %lor.lhs.false33, !dbg !2976

lor.lhs.false33:                                  ; preds = %land.lhs.true31.lor.lhs.false33_crit_edge, %land.lhs.true28, %if.then
  %10 = phi i32 [ %.pre10, %land.lhs.true31.lor.lhs.false33_crit_edge ], [ 6, %land.lhs.true28 ], [ %3, %if.then ], !dbg !2977
  %cmp39 = icmp eq i32 %10, 16, !dbg !2979
  br i1 %cmp39, label %land.lhs.true41, label %if.end, !dbg !2980

land.lhs.true41:                                  ; preds = %lor.lhs.false33
  %11 = load i8, i8* %8, align 1, !dbg !2981
  %cmp44 = icmp eq i8 %11, 95, !dbg !2982
  br i1 %cmp44, label %land.lhs.true46, label %if.end, !dbg !2983

land.lhs.true46:                                  ; preds = %land.lhs.true41
  %call47 = tail call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !2984
  %tobool48 = icmp eq i32 %call47, 0, !dbg !2984
  br i1 %tobool48, label %if.then49, label %if.end, !dbg !2985

if.then49:                                        ; preds = %land.lhs.true31, %land.lhs.true46
  %or = or i32 %flags, 32, !dbg !2986
  call void @llvm.dbg.value(metadata i32 %or, metadata !2946, metadata !DIExpression()), !dbg !2951
  br label %if.end, !dbg !2987

if.end:                                           ; preds = %land.lhs.true46, %if.then49, %land.lhs.true41, %lor.lhs.false33
  %flags.addr.0 = phi i32 [ %flags, %land.lhs.true46 ], [ %or, %if.then49 ], [ %flags, %land.lhs.true41 ], [ %flags, %lor.lhs.false33 ]
  call void @llvm.dbg.value(metadata i32 %flags.addr.0, metadata !2946, metadata !DIExpression()), !dbg !2951
  %12 = load i8, i8* %8, align 1, !dbg !2988
  %cmp52 = icmp eq i8 %12, 95, !dbg !2990
  br i1 %cmp52, label %if.then54, label %if.end92, !dbg !2991

if.then54:                                        ; preds = %if.end
  %arrayidx55 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !2992
  %13 = load i8, i8* %arrayidx55, align 1, !dbg !2992
  %cmp57 = icmp eq i8 %13, 95, !dbg !2995
  br i1 %cmp57, label %land.lhs.true59, label %if.else, !dbg !2996

land.lhs.true59:                                  ; preds = %if.then54
  %arrayidx60 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !2997
  %14 = load i8, i8* %arrayidx60, align 1, !dbg !2997
  %cmp62 = icmp eq i8 %14, 98, !dbg !2998
  br i1 %cmp62, label %land.lhs.true64, label %if.else, !dbg !2999

land.lhs.true64:                                  ; preds = %land.lhs.true59
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 3, !dbg !3000
  %call65 = tail call i32 @strncmp(i8* nonnull %add.ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #7, !dbg !3001
  %tobool66 = icmp eq i32 %call65, 0, !dbg !3001
  br i1 %tobool66, label %if.then67, label %land.lhs.true64.if.else_crit_edge, !dbg !3002

land.lhs.true64.if.else_crit_edge:                ; preds = %land.lhs.true64
  %.pre4 = load i8, i8* %arrayidx55, align 1, !dbg !3003
  br label %if.else, !dbg !3002

if.then67:                                        ; preds = %land.lhs.true64
  %add.ptr68 = getelementptr inbounds i8, i8* %8, i64 10, !dbg !3005
  call void @llvm.dbg.value(metadata i8* %add.ptr68, metadata !2950, metadata !DIExpression()), !dbg !2968
  br label %if.end92, !dbg !3006

if.else:                                          ; preds = %land.lhs.true64.if.else_crit_edge, %land.lhs.true59, %if.then54
  %15 = phi i8 [ %.pre4, %land.lhs.true64.if.else_crit_edge ], [ 95, %land.lhs.true59 ], [ %13, %if.then54 ], !dbg !3003
  %cmp71 = icmp eq i8 %15, 95, !dbg !3007
  br i1 %cmp71, label %land.lhs.true73, label %if.else80, !dbg !3008

land.lhs.true73:                                  ; preds = %if.else
  %arrayidx74 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !3009
  %16 = load i8, i8* %arrayidx74, align 1, !dbg !3009
  %cmp76 = icmp eq i8 %16, 120, !dbg !3010
  br i1 %cmp76, label %if.then78, label %if.else80, !dbg !3011

if.then78:                                        ; preds = %land.lhs.true73
  %add.ptr79 = getelementptr inbounds i8, i8* %8, i64 3, !dbg !3012
  call void @llvm.dbg.value(metadata i8* %add.ptr79, metadata !2950, metadata !DIExpression()), !dbg !2968
  br label %if.end92, !dbg !3013

if.else80:                                        ; preds = %land.lhs.true73, %if.else
  %tname.0.v = select i1 %cmp71, i64 2, i64 1, !dbg !3014
  %tname.0 = getelementptr inbounds i8, i8* %8, i64 %tname.0.v, !dbg !3014
  br label %if.end92, !dbg !3014

if.end92:                                         ; preds = %if.then67, %if.else80, %if.then78, %if.end
  %tname.3 = phi i8* [ %8, %if.end ], [ %add.ptr68, %if.then67 ], [ %add.ptr79, %if.then78 ], [ %tname.0, %if.else80 ], !dbg !2968
  call void @llvm.dbg.value(metadata i8* %tname.3, metadata !2950, metadata !DIExpression()), !dbg !2968
  %17 = load i8, i8* %tname.3, align 1, !dbg !3015
  %cmp95 = icmp eq i8 %17, 115, !dbg !3017
  br i1 %cmp95, label %if.then97, label %if.else137, !dbg !3018

if.then97:                                        ; preds = %if.end92
  %arrayidx98 = getelementptr inbounds i8, i8* %tname.3, i64 1, !dbg !3019
  %18 = load i8, i8* %arrayidx98, align 1, !dbg !3019
  %cmp100 = icmp eq i8 %18, 101, !dbg !3022
  br i1 %cmp100, label %land.lhs.true102, label %lor.lhs.false108, !dbg !3023

land.lhs.true102:                                 ; preds = %if.then97
  %call103 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #7, !dbg !3024
  %tobool104 = icmp eq i32 %call103, 0, !dbg !3024
  br i1 %tobool104, label %if.then124, label %lor.lhs.false105, !dbg !3025

lor.lhs.false105:                                 ; preds = %land.lhs.true102
  %call106 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !3026
  %tobool107 = icmp eq i32 %call106, 0, !dbg !3026
  br i1 %tobool107, label %if.then124, label %lor.lhs.false105.lor.lhs.false108_crit_edge, !dbg !3027

lor.lhs.false105.lor.lhs.false108_crit_edge:      ; preds = %lor.lhs.false105
  %.pre8 = load i8, i8* %arrayidx98, align 1, !dbg !3028
  br label %lor.lhs.false108, !dbg !3027

lor.lhs.false108:                                 ; preds = %lor.lhs.false105.lor.lhs.false108_crit_edge, %if.then97
  %19 = phi i8 [ %.pre8, %lor.lhs.false105.lor.lhs.false108_crit_edge ], [ %18, %if.then97 ], !dbg !3028
  %cmp111 = icmp eq i8 %19, 105, !dbg !3029
  br i1 %cmp111, label %land.lhs.true113, label %lor.lhs.false116, !dbg !3030

land.lhs.true113:                                 ; preds = %lor.lhs.false108
  %call114 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !3031
  %tobool115 = icmp eq i32 %call114, 0, !dbg !3031
  br i1 %tobool115, label %if.then124, label %land.lhs.true113.lor.lhs.false116_crit_edge, !dbg !3032

land.lhs.true113.lor.lhs.false116_crit_edge:      ; preds = %land.lhs.true113
  %.pre9 = load i8, i8* %arrayidx98, align 1, !dbg !3033
  br label %lor.lhs.false116, !dbg !3032

lor.lhs.false116:                                 ; preds = %land.lhs.true113.lor.lhs.false116_crit_edge, %lor.lhs.false108
  %20 = phi i8 [ %.pre9, %land.lhs.true113.lor.lhs.false116_crit_edge ], [ %19, %lor.lhs.false108 ], !dbg !3033
  %cmp119 = icmp eq i8 %20, 97, !dbg !3034
  br i1 %cmp119, label %land.lhs.true121, label %if.end126, !dbg !3035

land.lhs.true121:                                 ; preds = %lor.lhs.false116
  %call122 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !3036
  %tobool123 = icmp eq i32 %call122, 0, !dbg !3036
  br i1 %tobool123, label %if.then124, label %if.end126, !dbg !3037

if.then124:                                       ; preds = %lor.lhs.false105, %land.lhs.true102, %land.lhs.true113, %land.lhs.true121
  %or125 = or i32 %flags.addr.0, 128, !dbg !3038
  call void @llvm.dbg.value(metadata i32 %or125, metadata !2946, metadata !DIExpression()), !dbg !2951
  br label %if.end126, !dbg !3039

if.end126:                                        ; preds = %land.lhs.true121, %if.then124, %lor.lhs.false116
  %flags.addr.1 = phi i32 [ %flags.addr.0, %land.lhs.true121 ], [ %or125, %if.then124 ], [ %flags.addr.0, %lor.lhs.false116 ]
  call void @llvm.dbg.value(metadata i32 %flags.addr.1, metadata !2946, metadata !DIExpression()), !dbg !2951
  %21 = load i8, i8* %arrayidx98, align 1, !dbg !3040
  %cmp129 = icmp eq i8 %21, 105, !dbg !3042
  br i1 %cmp129, label %land.lhs.true131, label %if.end196, !dbg !3043

land.lhs.true131:                                 ; preds = %if.end126
  %call132 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)) #7, !dbg !3044
  %tobool133 = icmp eq i32 %call132, 0, !dbg !3044
  %or135 = or i32 %flags.addr.1, 8, !dbg !3045
  %spec.select = select i1 %tobool133, i32 %or135, i32 %flags.addr.1, !dbg !3046
  br label %if.end196, !dbg !3046

if.else137:                                       ; preds = %if.end92
  %cmp140 = icmp eq i8 %17, 113, !dbg !3047
  br i1 %cmp140, label %land.lhs.true142, label %lor.lhs.false150, !dbg !3049

land.lhs.true142:                                 ; preds = %if.else137
  %arrayidx143 = getelementptr inbounds i8, i8* %tname.3, i64 1, !dbg !3050
  %22 = load i8, i8* %arrayidx143, align 1, !dbg !3050
  %cmp145 = icmp eq i8 %22, 115, !dbg !3051
  br i1 %cmp145, label %land.lhs.true147, label %lor.lhs.false150, !dbg !3052

land.lhs.true147:                                 ; preds = %land.lhs.true142
  %call148 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0)) #7, !dbg !3053
  %tobool149 = icmp eq i32 %call148, 0, !dbg !3053
  br i1 %tobool149, label %if.then176, label %land.lhs.true147.lor.lhs.false150_crit_edge, !dbg !3054

land.lhs.true147.lor.lhs.false150_crit_edge:      ; preds = %land.lhs.true147
  %.pre5 = load i8, i8* %tname.3, align 1, !dbg !3055
  br label %lor.lhs.false150, !dbg !3054

lor.lhs.false150:                                 ; preds = %land.lhs.true147.lor.lhs.false150_crit_edge, %land.lhs.true142, %if.else137
  %23 = phi i8 [ %.pre5, %land.lhs.true147.lor.lhs.false150_crit_edge ], [ 113, %land.lhs.true142 ], [ %17, %if.else137 ], !dbg !3055
  %cmp153 = icmp eq i8 %23, 118, !dbg !3056
  br i1 %cmp153, label %land.lhs.true155, label %lor.lhs.false163, !dbg !3057

land.lhs.true155:                                 ; preds = %lor.lhs.false150
  %arrayidx156 = getelementptr inbounds i8, i8* %tname.3, i64 1, !dbg !3058
  %24 = load i8, i8* %arrayidx156, align 1, !dbg !3058
  %cmp158 = icmp eq i8 %24, 102, !dbg !3059
  br i1 %cmp158, label %land.lhs.true160, label %lor.lhs.false163, !dbg !3060

land.lhs.true160:                                 ; preds = %land.lhs.true155
  %call161 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3061
  %tobool162 = icmp eq i32 %call161, 0, !dbg !3061
  br i1 %tobool162, label %if.then176, label %land.lhs.true160.lor.lhs.false163_crit_edge, !dbg !3062

land.lhs.true160.lor.lhs.false163_crit_edge:      ; preds = %land.lhs.true160
  %.pre6 = load i8, i8* %tname.3, align 1, !dbg !3063
  br label %lor.lhs.false163, !dbg !3062

lor.lhs.false163:                                 ; preds = %land.lhs.true160.lor.lhs.false163_crit_edge, %land.lhs.true155, %lor.lhs.false150
  %25 = phi i8 [ %.pre6, %land.lhs.true160.lor.lhs.false163_crit_edge ], [ 118, %land.lhs.true155 ], [ %23, %lor.lhs.false150 ], !dbg !3063
  %cmp166 = icmp eq i8 %25, 103, !dbg !3064
  br i1 %cmp166, label %land.lhs.true168, label %if.else178, !dbg !3065

land.lhs.true168:                                 ; preds = %lor.lhs.false163
  %arrayidx169 = getelementptr inbounds i8, i8* %tname.3, i64 1, !dbg !3066
  %26 = load i8, i8* %arrayidx169, align 1, !dbg !3066
  %cmp171 = icmp eq i8 %26, 101, !dbg !3067
  br i1 %cmp171, label %land.lhs.true173, label %if.else178, !dbg !3068

land.lhs.true173:                                 ; preds = %land.lhs.true168
  %call174 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #7, !dbg !3069
  %tobool175 = icmp eq i32 %call174, 0, !dbg !3069
  br i1 %tobool175, label %if.then176, label %land.lhs.true173.if.else178_crit_edge, !dbg !3070

land.lhs.true173.if.else178_crit_edge:            ; preds = %land.lhs.true173
  %.pre7 = load i8, i8* %tname.3, align 1, !dbg !3071
  br label %if.else178, !dbg !3070

if.then176:                                       ; preds = %land.lhs.true147, %land.lhs.true160, %land.lhs.true173
  %or177 = or i32 %flags.addr.0, 128, !dbg !3073
  call void @llvm.dbg.value(metadata i32 %or177, metadata !2946, metadata !DIExpression()), !dbg !2951
  br label %if.end196, !dbg !3074

if.else178:                                       ; preds = %land.lhs.true173.if.else178_crit_edge, %land.lhs.true168, %lor.lhs.false163
  %27 = phi i8 [ %.pre7, %land.lhs.true173.if.else178_crit_edge ], [ 103, %land.lhs.true168 ], [ %25, %lor.lhs.false163 ], !dbg !3071
  %cmp181 = icmp eq i8 %27, 108, !dbg !3075
  br i1 %cmp181, label %land.lhs.true183, label %if.end196, !dbg !3076

land.lhs.true183:                                 ; preds = %if.else178
  %arrayidx184 = getelementptr inbounds i8, i8* %tname.3, i64 1, !dbg !3077
  %28 = load i8, i8* %arrayidx184, align 1, !dbg !3077
  %cmp186 = icmp eq i8 %28, 111, !dbg !3078
  br i1 %cmp186, label %land.lhs.true188, label %if.end196, !dbg !3079

land.lhs.true188:                                 ; preds = %land.lhs.true183
  %call189 = tail call i32 @strcmp(i8* %tname.3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)) #7, !dbg !3080
  %tobool190 = icmp eq i32 %call189, 0, !dbg !3080
  %or192 = or i32 %flags.addr.0, 8, !dbg !3081
  %spec.select1 = select i1 %tobool190, i32 %or192, i32 %flags.addr.0, !dbg !3082
  ret i32 %spec.select1, !dbg !3082

if.end196:                                        ; preds = %land.lhs.true11, %land.lhs.true, %entry, %land.lhs.true131, %if.end126, %if.else178, %land.lhs.true183, %if.then176, %lor.lhs.false, %land.lhs.true2
  %flags.addr.6 = phi i32 [ %flags, %land.lhs.true11 ], [ %flags, %lor.lhs.false ], [ %flags, %land.lhs.true2 ], [ %flags, %land.lhs.true ], [ %flags, %entry ], [ %flags.addr.1, %if.end126 ], [ %spec.select, %land.lhs.true131 ], [ %or177, %if.then176 ], [ %flags.addr.0, %land.lhs.true183 ], [ %flags.addr.0, %if.else178 ]
  call void @llvm.dbg.value(metadata i32 %flags.addr.6, metadata !2946, metadata !DIExpression()), !dbg !2951
  ret i32 %flags.addr.6, !dbg !3083
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @gimple_alloca_call_p(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3084 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3089, metadata !DIExpression()), !dbg !3091
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #8, !dbg !3092
  %tobool = icmp eq i8 %call, 0, !dbg !3092
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3094

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #8, !dbg !3095
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3090, metadata !DIExpression()), !dbg !3091
  %tobool2 = icmp eq %union.tree_node* %call1, null, !dbg !3096
  br i1 %tobool2, label %if.end6, label %land.lhs.true, !dbg !3098

land.lhs.true:                                    ; preds = %if.end
  %call3 = tail call fastcc i32 @special_function_p(%union.tree_node* nonnull %call1, i32 0) #8, !dbg !3099
  %and = and i32 %call3, 32, !dbg !3100
  %tobool4 = icmp eq i32 %and, 0, !dbg !3100
  br i1 %tobool4, label %if.end6, label %cleanup, !dbg !3101

if.end6:                                          ; preds = %land.lhs.true, %if.end
  br label %cleanup, !dbg !3102

cleanup:                                          ; preds = %land.lhs.true, %entry, %if.end6
  %retval.0 = phi i8 [ 0, %if.end6 ], [ 0, %entry ], [ 1, %land.lhs.true ], !dbg !3091
  ret i8 %retval.0, !dbg !3103
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3104 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3106, metadata !DIExpression()), !dbg !3107
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !3108
  %cmp = icmp eq i32 %call, 8, !dbg !3109
  %conv1 = zext i1 %cmp to i8, !dbg !3108
  ret i8 %conv1, !dbg !3110
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3111 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3115, metadata !DIExpression()), !dbg !3117
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #8, !dbg !3118
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3116, metadata !DIExpression()), !dbg !3117
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3119
  %bf.load = load i64, i64* %0, align 8, !dbg !3119
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3121
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !3121
  br i1 %cmp, label %if.then, label %cleanup, !dbg !3122

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3123
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3123
  br label %cleanup, !dbg !3124

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !3117
  ret %union.tree_node* %retval.0, !dbg !3125
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @alloca_call_p(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !3126 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3130, metadata !DIExpression()), !dbg !3131
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3132
  %bf.load = load i64, i64* %0, align 8, !dbg !3132
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3134
  %cmp = icmp eq i64 %bf.cast1, 59, !dbg !3134
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3135

land.lhs.true:                                    ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3136
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3136
  %1 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !3136
  %2 = load i64*, i64** %1, align 8, !dbg !3136
  %bf.load3 = load i64, i64* %2, align 8, !dbg !3136
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !3137
  %cmp6 = icmp eq i64 %bf.cast52, 121, !dbg !3137
  br i1 %cmp6, label %land.lhs.true7, label %if.end, !dbg !3138

land.lhs.true7:                                   ; preds = %land.lhs.true
  %arrayidx13 = getelementptr inbounds i64, i64* %2, i64 5, !dbg !3139
  %3 = bitcast i64* %arrayidx13 to i64**, !dbg !3139
  %4 = load i64*, i64** %3, align 8, !dbg !3139
  %bf.load15 = load i64, i64* %4, align 8, !dbg !3139
  %bf.cast173 = and i64 %bf.load15, 65535, !dbg !3140
  %cmp18 = icmp eq i64 %bf.cast173, 29, !dbg !3140
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !3141

land.lhs.true19:                                  ; preds = %land.lhs.true7
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !3141
  %call = tail call fastcc i32 @special_function_p(%union.tree_node* %5, i32 0) #8, !dbg !3142
  %and = and i32 %call, 32, !dbg !3143
  %tobool = icmp eq i32 %and, 0, !dbg !3143
  br i1 %tobool, label %if.end, label %return, !dbg !3144

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true7, %land.lhs.true, %entry
  br label %return, !dbg !3145

return:                                           ; preds = %land.lhs.true19, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %land.lhs.true19 ], !dbg !3131
  ret i8 %retval.0, !dbg !3146
}

; Function Attrs: nounwind uwtable
define dso_local i32 @flags_from_decl_or_type(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !3147 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3149, metadata !DIExpression()), !dbg !3151
  call void @llvm.dbg.value(metadata i32 0, metadata !3150, metadata !DIExpression()), !dbg !3151
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3152
  %bf.load = load i64, i64* %0, align 8, !dbg !3152
  %bf.cast = and i64 %bf.load, 65535, !dbg !3152
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3152
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3152
  %cmp = icmp eq i32 %1, 3, !dbg !3152
  br i1 %cmp, label %if.then, label %if.else, !dbg !3154

if.then:                                          ; preds = %entry
  %malloc_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 5, !dbg !3155
  %bf.load1 = load i32, i32* %malloc_flag, align 8, !dbg !3155
  %bf.clear2 = lshr i32 %bf.load1, 15, !dbg !3158
  %2 = and i32 %bf.clear2, 16, !dbg !3158
  call void @llvm.dbg.value(metadata i32 %2, metadata !3150, metadata !DIExpression()), !dbg !3151
  %bf.clear7 = lshr i32 %bf.load1, 11, !dbg !3159
  %3 = and i32 %bf.clear7, 128, !dbg !3159
  %4 = or i32 %3, %2, !dbg !3159
  call void @llvm.dbg.value(metadata i32 %4, metadata !3150, metadata !DIExpression()), !dbg !3151
  %bf.cast169 = and i64 %bf.load, 1048576, !dbg !3160
  %tobool17 = icmp eq i64 %bf.cast169, 0, !dbg !3160
  br i1 %tobool17, label %if.then.if.end26_crit_edge, label %land.lhs.true, !dbg !3162

if.then.if.end26_crit_edge:                       ; preds = %if.then
  %.pre = lshr i64 %bf.load, 19, !dbg !3163
  %.pre13 = trunc i64 %.pre to i32, !dbg !3163
  br label %if.end26, !dbg !3162

land.lhs.true:                                    ; preds = %if.then
  %bf.cast2211 = lshr i64 %bf.load, 19, !dbg !3164
  %5 = trunc i64 %bf.cast2211 to i32, !dbg !3164
  %6 = and i32 %5, 1, !dbg !3164
  %7 = or i32 %4, %6, !dbg !3164
  %spec.select1 = xor i32 %7, 1, !dbg !3164
  br label %if.end26, !dbg !3164

if.end26:                                         ; preds = %if.then.if.end26_crit_edge, %land.lhs.true
  %.pre-phi = phi i32 [ %.pre13, %if.then.if.end26_crit_edge ], [ %5, %land.lhs.true ], !dbg !3163
  %flags.2 = phi i32 [ %4, %if.then.if.end26_crit_edge ], [ %spec.select1, %land.lhs.true ], !dbg !3165
  call void @llvm.dbg.value(metadata i32 %flags.2, metadata !3150, metadata !DIExpression()), !dbg !3151
  %bf.clear30 = lshr i32 %bf.load1, 26, !dbg !3166
  %8 = and i32 %bf.clear30, 2, !dbg !3166
  %9 = or i32 %8, %flags.2, !dbg !3166
  call void @llvm.dbg.value(metadata i32 %9, metadata !3150, metadata !DIExpression()), !dbg !3151
  %10 = and i32 %bf.clear30, 4, !dbg !3167
  %11 = or i32 %10, %9, !dbg !3167
  call void @llvm.dbg.value(metadata i32 %11, metadata !3150, metadata !DIExpression()), !dbg !3151
  %bf.clear46 = lshr i32 %bf.load1, 8, !dbg !3168
  %12 = and i32 %bf.clear46, 512, !dbg !3168
  %13 = or i32 %12, %11, !dbg !3168
  call void @llvm.dbg.value(metadata i32 %13, metadata !3150, metadata !DIExpression()), !dbg !3151
  %14 = and i32 %.pre-phi, 64, !dbg !3163
  %15 = or i32 %13, %14, !dbg !3163
  call void @llvm.dbg.value(metadata i32 %15, metadata !3150, metadata !DIExpression()), !dbg !3151
  %call = tail call fastcc i32 @special_function_p(%union.tree_node* %exp, i32 %15) #8, !dbg !3169
  call void @llvm.dbg.value(metadata i32 %call, metadata !3150, metadata !DIExpression()), !dbg !3151
  %bf.load86.pre = load i64, i64* %0, align 8, !dbg !3170
  br label %if.end84, !dbg !3172

if.else:                                          ; preds = %entry
  %cmp66 = icmp eq i32 %1, 2, !dbg !3173
  br i1 %cmp66, label %land.lhs.true67, label %if.end84, !dbg !3175

land.lhs.true67:                                  ; preds = %if.else
  %bf.cast727 = and i64 %bf.load, 1048576, !dbg !3176
  %tobool73 = icmp eq i64 %bf.cast727, 0, !dbg !3176
  br i1 %tobool73, label %if.end84, label %land.lhs.true74, !dbg !3177

land.lhs.true74:                                  ; preds = %land.lhs.true67
  %bf.cast798 = lshr i64 %bf.load, 19, !dbg !3178
  %16 = trunc i64 %bf.cast798 to i32, !dbg !3178
  %17 = and i32 %16, 1, !dbg !3178
  %18 = xor i32 %17, 1, !dbg !3178
  br label %if.end84, !dbg !3178

if.end84:                                         ; preds = %land.lhs.true67, %land.lhs.true74, %if.else, %if.end26
  %bf.load86 = phi i64 [ %bf.load86.pre, %if.end26 ], [ %bf.load, %land.lhs.true67 ], [ %bf.load, %if.else ], [ %bf.load, %land.lhs.true74 ], !dbg !3170
  %flags.8 = phi i32 [ %call, %if.end26 ], [ 0, %land.lhs.true67 ], [ 0, %if.else ], [ %18, %land.lhs.true74 ], !dbg !3151
  call void @llvm.dbg.value(metadata i32 %flags.8, metadata !3150, metadata !DIExpression()), !dbg !3151
  %bf.cast896 = lshr i64 %bf.load86, 16, !dbg !3179
  %19 = trunc i64 %bf.cast896 to i32, !dbg !3179
  %20 = and i32 %19, 8, !dbg !3179
  %21 = or i32 %flags.8, %20, !dbg !3179
  call void @llvm.dbg.value(metadata i32 %21, metadata !3150, metadata !DIExpression()), !dbg !3151
  ret i32 %21, !dbg !3180
}

; Function Attrs: nounwind uwtable
define dso_local i32 @call_expr_flags(%union.tree_node* %t) local_unnamed_addr #5 !dbg !3181 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3183, metadata !DIExpression()), !dbg !3186
  %call = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %t) #7, !dbg !3187
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3185, metadata !DIExpression()), !dbg !3186
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !3188
  br i1 %tobool, label %if.else, label %if.then, !dbg !3190

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @flags_from_decl_or_type(%union.tree_node* nonnull %call) #8, !dbg !3191
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3184, metadata !DIExpression()), !dbg !3186
  br label %if.end8, !dbg !3192

if.else:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3193
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3193
  %0 = bitcast %union.tree_node** %arrayidx to %struct.tree_common**, !dbg !3193
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !3193
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !3193
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3193
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3183, metadata !DIExpression()), !dbg !3186
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !3195
  br i1 %tobool2, label %if.end8, label %land.lhs.true, !dbg !3197

land.lhs.true:                                    ; preds = %if.else
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3198
  %bf.load = load i64, i64* %3, align 8, !dbg !3198
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3199
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !3199
  br i1 %cmp, label %if.then3, label %if.end8, !dbg !3200

if.then3:                                         ; preds = %land.lhs.true
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3201
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !3201
  %call6 = tail call i32 @flags_from_decl_or_type(%union.tree_node* %4) #8, !dbg !3202
  call void @llvm.dbg.value(metadata i32 %call6, metadata !3184, metadata !DIExpression()), !dbg !3186
  br label %if.end8, !dbg !3203

if.end8:                                          ; preds = %if.else, %if.then3, %land.lhs.true, %if.then
  %flags.1 = phi i32 [ %call1, %if.then ], [ %call6, %if.then3 ], [ 0, %land.lhs.true ], [ 0, %if.else ], !dbg !3204
  call void @llvm.dbg.value(metadata i32 %flags.1, metadata !3184, metadata !DIExpression()), !dbg !3186
  ret i32 %flags.1, !dbg !3205
}

declare dso_local %union.tree_node* @get_callee_fndecl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @shift_return_value(i32 %mode, i8 zeroext %left_p, %struct.rtx_def* %value) local_unnamed_addr #5 !dbg !3206 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3210, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata i8 %left_p, metadata !3211, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value, metadata !3212, metadata !DIExpression()), !dbg !3214
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value, i64 0, i32 0, !dbg !3215
  %bf.load = load i32, i32* %0, align 8, !dbg !3215
  %bf.clear = and i32 %bf.load, 65535, !dbg !3215
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !3215
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !3215

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %value) #8, !dbg !3215
  %cmp1 = icmp ult i32 %call, 53, !dbg !3215
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !3215

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1863, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3215
  br label %cond.end, !dbg !3215

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %bf.load2 = load i32, i32* %0, align 8, !dbg !3216
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !3216
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !3216
  %idxprom = zext i32 %bf.clear3 to i64, !dbg !3216
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3216
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3216
  %conv4 = zext i8 %1 to i32, !dbg !3216
  %idxprom7 = zext i32 %mode to i64, !dbg !3217
  %arrayidx8 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom7, !dbg !3217
  %2 = load i8, i8* %arrayidx8, align 1, !dbg !3217
  %conv10 = zext i8 %2 to i32, !dbg !3217
  %mul1 = sub nsw i32 %conv4, %conv10, !dbg !3218
  call void @llvm.dbg.value(metadata i64 undef, metadata !3213, metadata !DIExpression()), !dbg !3214
  %cmp15 = icmp eq i32 %mul1, 0, !dbg !3219
  br i1 %cmp15, label %cleanup, label %if.end, !dbg !3221

if.end:                                           ; preds = %cond.end
  %sub = shl nsw i32 %mul1, 3, !dbg !3218
  %conv14 = sext i32 %sub to i64, !dbg !3216
  call void @llvm.dbg.value(metadata i64 %conv14, metadata !3213, metadata !DIExpression()), !dbg !3214
  %tobool = icmp eq i8 %left_p, 0, !dbg !3222
  %cond21 = select i1 %tobool, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 46), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), !dbg !3222
  %call22 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv14) #7, !dbg !3224
  %call23 = tail call zeroext i8 @force_expand_binop(i32 %bf.clear3, %struct.optab_d* %cond21, %struct.rtx_def* %value, %struct.rtx_def* %call22, %struct.rtx_def* %value, i32 1, i32 2) #7, !dbg !3225
  %tobool24 = icmp eq i8 %call23, 0, !dbg !3225
  br i1 %tobool24, label %if.then25, label %cleanup, !dbg !3226

if.then25:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1873, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3227
  br label %cleanup, !dbg !3227

cleanup:                                          ; preds = %if.end, %if.then25, %cond.end
  %retval.0 = phi i8 [ 0, %cond.end ], [ 1, %if.then25 ], [ 1, %if.end ], !dbg !3214
  ret i8 %retval.0, !dbg !3228
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !3229 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3236, metadata !DIExpression()), !dbg !3237
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3238
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3238
  %0 = load i32, i32* %rt_uint, align 8, !dbg !3238
  ret i32 %0, !dbg !3239
}

declare dso_local zeroext i8 @force_expand_binop(i32, %struct.optab_d*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_call(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %ignore) local_unnamed_addr #5 !dbg !2 {
entry:
  %try_tail_call = alloca i8, align 1
  %args_size = alloca %struct.args_size, align 8
  %adjusted_args_size = alloca %struct.args_size, align 8
  %args_so_far = alloca %struct.ix86_args, align 4
  %reg_parm_seen = alloca i32, align 4
  %must_preallocate = alloca i32, align 4
  %flags = alloca i32, align 4
  %low_to_save = alloca i32, align 4
  %high_to_save = alloca i32, align 4
  %old_stack_level = alloca %struct.rtx_def*, align 8
  %old_pending_adj = alloca i32, align 4
  %call_fusage = alloca %struct.rtx_def*, align 8
  %iter = alloca %struct.call_expr_arg_iterator_d, align 8
  %iter214 = alloca %struct.call_expr_arg_iterator_d, align 8
  %caller_unsignedp = alloca i32, align 4
  %callee_unsignedp = alloca i32, align 4
  %sibcall_failure = alloca i32, align 4
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !2278, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !2279, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %ignore, metadata !2280, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2282, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2283, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2287, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i8* %try_tail_call, metadata !2289, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %try_tail_call) #6, !dbg !3241
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3242
  %bf.load = load i64, i64* %0, align 8, !dbg !3242
  %bf.lshr = lshr i64 %bf.load, 18, !dbg !3242
  %1 = trunc i64 %bf.lshr to i8, !dbg !3242
  %bf.cast = and i8 %1, 1, !dbg !3242
  call void @llvm.dbg.value(metadata i8 %bf.cast, metadata !2289, metadata !DIExpression()), !dbg !3240
  store i8 %bf.cast, i8* %try_tail_call, align 1, !dbg !3243
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2292, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 0, metadata !2293, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2294, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i64 0, metadata !2295, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 0, metadata !2296, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2297, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 0, metadata !2300, metadata !DIExpression()), !dbg !3240
  %2 = bitcast %struct.args_size* %args_size to i8*, !dbg !3244
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #6, !dbg !3244
  %3 = bitcast %struct.args_size* %adjusted_args_size to i8*, !dbg !3245
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #6, !dbg !3245
  %4 = bitcast %struct.ix86_args* %args_so_far to i8*, !dbg !3246
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #6, !dbg !3246
  %5 = bitcast i32* %reg_parm_seen to i8*, !dbg !3247
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6, !dbg !3247
  %6 = bitcast i32* %must_preallocate to i8*, !dbg !3248
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !3248
  %7 = load i32, i32* @target_flags, align 4, !dbg !3249
  %and = and i32 %7, 8192, !dbg !3249
  %cmp = icmp eq i32 %and, 0, !dbg !3249
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3249

land.rhs:                                         ; preds = %entry
  %and2 = and i32 %7, 4, !dbg !3249
  %cmp3 = icmp eq i32 %and2, 0, !dbg !3249
  br i1 %cmp3, label %lor.rhs, label %lor.end, !dbg !3249

lor.rhs:                                          ; preds = %land.rhs
  %call = tail call i32 @ix86_cfun_abi() #7, !dbg !3249
  %cmp5 = icmp eq i32 %call, 1, !dbg !3249
  %bf.load10.pre.pre = load i64, i64* %0, align 8, !dbg !3250
  br label %lor.end, !dbg !3249

lor.end:                                          ; preds = %land.rhs, %lor.rhs
  %bf.load10.pre = phi i64 [ %bf.load, %land.rhs ], [ %bf.load10.pre.pre, %lor.rhs ], !dbg !3250
  %8 = phi i1 [ true, %land.rhs ], [ %cmp5, %lor.rhs ]
  %lnot = xor i1 %8, true, !dbg !3249
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %bf.load10 = phi i64 [ %bf.load, %entry ], [ %bf.load10.pre, %lor.end ], !dbg !3250
  %9 = phi i1 [ false, %entry ], [ %lnot, %lor.end ], !dbg !3240
  %lnot7 = xor i1 %9, true, !dbg !3252
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !3252
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !2307, metadata !DIExpression()), !dbg !3240
  store i32 %lnot.ext, i32* %must_preallocate, align 4, !dbg !3253
  call void @llvm.dbg.value(metadata i32 0, metadata !2308, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2309, metadata !DIExpression()), !dbg !3240
  %10 = bitcast i32* %flags to i8*, !dbg !3254
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #6, !dbg !3254
  call void @llvm.dbg.value(metadata i32 0, metadata !2310, metadata !DIExpression()), !dbg !3240
  store i32 0, i32* %flags, align 4, !dbg !3255
  %11 = bitcast i32* %low_to_save to i8*, !dbg !3256
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #6, !dbg !3256
  %12 = bitcast i32* %high_to_save to i8*, !dbg !3256
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6, !dbg !3256
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2313, metadata !DIExpression()), !dbg !3240
  %13 = load i32, i32* @highest_outgoing_arg_in_use, align 4, !dbg !3257
  call void @llvm.dbg.value(metadata i32 %13, metadata !2314, metadata !DIExpression()), !dbg !3240
  %14 = load i8*, i8** @stack_usage_map, align 8, !dbg !3258
  call void @llvm.dbg.value(metadata i8* %14, metadata !2315, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i8* null, metadata !2316, metadata !DIExpression()), !dbg !3240
  %15 = bitcast %struct.rtx_def** %old_stack_level to i8*, !dbg !3259
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !dbg !3259
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2318, metadata !DIExpression()), !dbg !3240
  store %struct.rtx_def* null, %struct.rtx_def** %old_stack_level, align 8, !dbg !3260
  call void @llvm.dbg.value(metadata i32 0, metadata !2319, metadata !DIExpression()), !dbg !3240
  %16 = bitcast i32* %old_pending_adj to i8*, !dbg !3261
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #6, !dbg !3261
  call void @llvm.dbg.value(metadata i32 0, metadata !2320, metadata !DIExpression()), !dbg !3240
  store i32 0, i32* %old_pending_adj, align 4, !dbg !3262
  %17 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !3263
  call void @llvm.dbg.value(metadata i32 %17, metadata !2321, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 0, metadata !2322, metadata !DIExpression()), !dbg !3240
  %18 = bitcast %struct.rtx_def** %call_fusage to i8*, !dbg !3264
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6, !dbg !3264
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3265
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3265
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3265
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !2324, metadata !DIExpression()), !dbg !3240
  %bf.cast1330 = and i64 %bf.load10, 33554432, !dbg !3250
  %tobool = icmp eq i64 %bf.cast1330, 0, !dbg !3250
  br i1 %tobool, label %if.end, label %if.then, !dbg !3266

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.value(metadata i32 0, metadata !2310, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 64, metadata !2310, metadata !DIExpression()), !dbg !3240
  store i32 64, i32* %flags, align 4, !dbg !3267
  br label %if.end, !dbg !3268

if.end:                                           ; preds = %land.end, %if.then
  %20 = phi i32 [ 0, %land.end ], [ 64, %if.then ]
  %call14 = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %exp) #7, !dbg !3269
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !2287, metadata !DIExpression()), !dbg !3240
  %tobool15 = icmp eq %union.tree_node* %call14, null, !dbg !3270
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !3272

if.then16:                                        ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3273
  %21 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3273
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !2288, metadata !DIExpression()), !dbg !3240
  %call17 = tail call i32 @flags_from_decl_or_type(%union.tree_node* nonnull %call14) #8, !dbg !3275
  call void @llvm.dbg.value(metadata i32 %20, metadata !2310, metadata !DIExpression()), !dbg !3240
  br label %if.end25, !dbg !3276

if.else:                                          ; preds = %if.end
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3277
  %22 = bitcast %union.tree_node** %type20 to %struct.tree_common**, !dbg !3277
  %23 = load %struct.tree_common*, %struct.tree_common** %22, align 8, !dbg !3277
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !3277
  %24 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !3277
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !2288, metadata !DIExpression()), !dbg !3240
  %call23 = tail call i32 @flags_from_decl_or_type(%union.tree_node* %24) #8, !dbg !3279
  call void @llvm.dbg.value(metadata i32 %20, metadata !2310, metadata !DIExpression()), !dbg !3240
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then16
  %call23.pn = phi i32 [ %call23, %if.else ], [ %call17, %if.then16 ]
  %fntype.0 = phi %union.tree_node* [ %24, %if.else ], [ %21, %if.then16 ], !dbg !3280
  %25 = or i32 %20, %call23.pn, !dbg !3280
  store i32 %25, i32* %flags, align 4, !dbg !3280
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype.0, metadata !2288, metadata !DIExpression()), !dbg !3240
  %type27 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3281
  %26 = load %union.tree_node*, %union.tree_node** %type27, align 8, !dbg !3281
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !2286, metadata !DIExpression()), !dbg !3240
  %27 = load %struct.rtx_def* (%union.tree_node*, i32)*, %struct.rtx_def* (%union.tree_node*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 2), align 8, !dbg !3282
  %call28 = tail call %struct.rtx_def* %27(%union.tree_node* %fntype.0, i32 0) #7, !dbg !3283
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !2297, metadata !DIExpression()), !dbg !3240
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3284
  %bf.load30 = load i64, i64* %28, align 8, !dbg !3284
  %bf.cast3231 = and i64 %bf.load30, 65535, !dbg !3284
  %cmp33 = icmp eq i64 %bf.cast3231, 15, !dbg !3284
  br i1 %cmp33, label %if.then55, label %lor.lhs.false, !dbg !3284

lor.lhs.false:                                    ; preds = %if.end25
  %cmp39 = icmp eq i64 %bf.cast3231, 16, !dbg !3284
  br i1 %cmp39, label %if.then55, label %lor.lhs.false41, !dbg !3284

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %cmp46 = icmp eq i64 %bf.cast3231, 17, !dbg !3284
  br i1 %cmp46, label %if.then55, label %lor.lhs.false48, !dbg !3284

lor.lhs.false48:                                  ; preds = %lor.lhs.false41
  %cmp53 = icmp eq i64 %bf.cast3231, 18, !dbg !3284
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !3286

if.then55:                                        ; preds = %lor.lhs.false48, %lor.lhs.false41, %lor.lhs.false, %if.end25
  %call56 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 34, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0)) #7, !dbg !3287
  br label %if.end57, !dbg !3287

if.end57:                                         ; preds = %if.then55, %lor.lhs.false48
  call void @llvm.dbg.value(metadata i32 %25, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and58 = and i32 %call23.pn, 3, !dbg !3288
  %tobool59 = icmp eq i32 %and58, 0, !dbg !3288
  br i1 %tobool59, label %if.end106, label %land.lhs.true, !dbg !3289

land.lhs.true:                                    ; preds = %if.end57
  call void @llvm.dbg.value(metadata i32 %25, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and60 = and i32 %call23.pn, 4, !dbg !3290
  %tobool61 = icmp eq i32 %and60, 0, !dbg !3290
  br i1 %tobool61, label %land.lhs.true62, label %if.end106, !dbg !3291

land.lhs.true62:                                  ; preds = %land.lhs.true
  %tobool63 = icmp ne i32 %ignore, 0, !dbg !3292
  %29 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3293
  %cmp65 = icmp eq %struct.rtx_def* %29, %target, !dbg !3294
  %or.cond = or i1 %tobool63, %cmp65, !dbg !3295
  br i1 %or.cond, label %if.then81, label %lor.lhs.false67, !dbg !3295

lor.lhs.false67:                                  ; preds = %land.lhs.true62
  %bf.load69 = load i64, i64* %28, align 8, !dbg !3296
  %bf.cast7160 = and i64 %bf.load69, 65535, !dbg !3296
  %cmp72 = icmp eq i64 %bf.cast7160, 14, !dbg !3296
  br i1 %cmp72, label %cond.true, label %cond.false, !dbg !3296

cond.true:                                        ; preds = %lor.lhs.false67
  %call74 = tail call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !3296
  br label %cond.end, !dbg !3296

cond.false:                                       ; preds = %lor.lhs.false67
  %type75 = bitcast %union.tree_node* %26 to %struct.tree_type*, !dbg !3296
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i64 0, i32 6, !dbg !3296
  %bf.load76 = load i32, i32* %mode, align 4, !dbg !3296
  %bf.lshr77 = lshr i32 %bf.load76, 16, !dbg !3296
  %bf.clear78 = and i32 %bf.lshr77, 255, !dbg !3296
  br label %cond.end, !dbg !3296

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call74, %cond.true ], [ %bf.clear78, %cond.false ], !dbg !3296
  %cmp79 = icmp eq i32 %cond, 0, !dbg !3297
  br i1 %cmp79, label %if.then81, label %if.end106, !dbg !3298

if.then81:                                        ; preds = %cond.end, %land.lhs.true62
  call void @llvm.dbg.value(metadata i8 0, metadata !2329, metadata !DIExpression()), !dbg !3299
  %30 = bitcast %struct.call_expr_arg_iterator_d* %iter to i8*, !dbg !3300
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6, !dbg !3300
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !2333, metadata !DIExpression(DW_OP_deref)), !dbg !3299
  %call82 = call fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !3301
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !2332, metadata !DIExpression()), !dbg !3299
  br label %for.cond, !dbg !3301

for.cond:                                         ; preds = %for.inc, %if.then81
  %arg.0 = phi %union.tree_node* [ %call82, %if.then81 ], [ %call92, %for.inc ], !dbg !3303
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !2332, metadata !DIExpression()), !dbg !3299
  %tobool83 = icmp eq %union.tree_node* %arg.0, null, !dbg !3301
  br i1 %tobool83, label %for.end, label %for.body, !dbg !3301

for.body:                                         ; preds = %for.cond
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3304
  %bf.load85 = load i64, i64* %31, align 8, !dbg !3304
  %bf.cast8861 = and i64 %bf.load85, 524288, !dbg !3304
  %tobool89 = icmp eq i64 %bf.cast8861, 0, !dbg !3304
  br i1 %tobool89, label %for.inc, label %for.end, !dbg !3307

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !2333, metadata !DIExpression(DW_OP_deref)), !dbg !3299
  %call92 = call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !3308
  call void @llvm.dbg.value(metadata %union.tree_node* %call92, metadata !2332, metadata !DIExpression()), !dbg !3299
  br label %for.cond, !dbg !3308, !llvm.loop !3309

for.end:                                          ; preds = %for.body, %for.cond
  %volatilep.0 = phi i1 [ false, %for.cond ], [ true, %for.body ]
  br i1 %volatilep.0, label %cleanup, label %if.then94, !dbg !3311

if.then94:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !2333, metadata !DIExpression(DW_OP_deref)), !dbg !3299
  %call95 = call fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !3312
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !2332, metadata !DIExpression()), !dbg !3299
  br label %for.cond96, !dbg !3312

for.cond96:                                       ; preds = %for.body98, %if.then94
  %arg.1 = phi %union.tree_node* [ %call95, %if.then94 ], [ %call101, %for.body98 ], !dbg !3316
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.1, metadata !2332, metadata !DIExpression()), !dbg !3299
  %tobool97 = icmp eq %union.tree_node* %arg.1, null, !dbg !3312
  %32 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3317
  br i1 %tobool97, label %cleanup.loopexit, label %for.body98, !dbg !3312

for.body98:                                       ; preds = %for.cond96
  %call99 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* nonnull %arg.1, %struct.rtx_def* %32, i32 0, i32 0) #8, !dbg !3318
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !2333, metadata !DIExpression(DW_OP_deref)), !dbg !3299
  %call101 = call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !3320
  call void @llvm.dbg.value(metadata %union.tree_node* %call101, metadata !2332, metadata !DIExpression()), !dbg !3299
  br label %for.cond96, !dbg !3320, !llvm.loop !3321

cleanup.loopexit:                                 ; preds = %for.cond96
  %.lcssa = phi %struct.rtx_def* [ %32, %for.cond96 ], !dbg !3317
  br label %cleanup, !dbg !3323

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %cleanup.dest.slot.0 = phi i1 [ true, %for.end ], [ false, %cleanup.loopexit ]
  %retval.0 = phi %struct.rtx_def* [ undef, %for.end ], [ %.lcssa, %cleanup.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6, !dbg !3323
  br i1 %cleanup.dest.slot.0, label %if.end106, label %cleanup1682

if.end106:                                        ; preds = %land.lhs.true, %if.end57, %cleanup, %cond.end
  %call14.fntype.0 = select i1 %tobool15, %union.tree_node* %fntype.0, %union.tree_node* %call14, !dbg !3324
  %call112 = call i32 @ix86_reg_parm_stack_space(%union.tree_node* %call14.fntype.0) #7, !dbg !3324
  call void @llvm.dbg.value(metadata i32 %call112, metadata !2308, metadata !DIExpression()), !dbg !3240
  br i1 %tobool15, label %cond.end118, label %cond.false115, !dbg !3325

cond.false115:                                    ; preds = %if.end106
  %type117 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3325
  %33 = load %union.tree_node*, %union.tree_node** %type117, align 8, !dbg !3325
  br label %cond.end118, !dbg !3325

cond.end118:                                      ; preds = %if.end106, %cond.false115
  %cond119 = phi %union.tree_node* [ %33, %cond.false115 ], [ %fntype.0, %if.end106 ], !dbg !3325
  %call120 = call i32 @ix86_function_type_abi(%union.tree_node* %cond119) #7, !dbg !3325
  %cmp121 = icmp ne i32 %call120, 1, !dbg !3325
  %cmp124 = icmp sgt i32 %call112, 0, !dbg !3327
  %or.cond2 = and i1 %cmp121, %cmp124, !dbg !3328
  br i1 %or.cond2, label %land.lhs.true126, label %if.end139, !dbg !3328

land.lhs.true126:                                 ; preds = %cond.end118
  %34 = load i32, i32* @target_flags, align 4, !dbg !3329
  %and127 = and i32 %34, 8192, !dbg !3329
  %cmp128 = icmp eq i32 %and127, 0, !dbg !3329
  br i1 %cmp128, label %land.lhs.true130, label %if.end139, !dbg !3329

land.lhs.true130:                                 ; preds = %land.lhs.true126
  %and131 = and i32 %34, 4, !dbg !3329
  %cmp132 = icmp eq i32 %and131, 0, !dbg !3329
  br i1 %cmp132, label %lor.lhs.false134, label %if.end139, !dbg !3329

lor.lhs.false134:                                 ; preds = %land.lhs.true130
  %call135 = call i32 @ix86_cfun_abi() #7, !dbg !3329
  %cmp136 = icmp eq i32 %call135, 1, !dbg !3329
  br i1 %cmp136, label %if.end139, label %if.then138, !dbg !3330

if.then138:                                       ; preds = %lor.lhs.false134
  call void @llvm.dbg.value(metadata i32 1, metadata !2307, metadata !DIExpression()), !dbg !3240
  store i32 1, i32* %must_preallocate, align 4, !dbg !3331
  br label %if.end139, !dbg !3332

if.end139:                                        ; preds = %land.lhs.true130, %cond.end118, %if.then138, %lor.lhs.false134, %land.lhs.true126
  %call145 = call i32 @aggregate_value_p(%union.tree_node* %exp, %union.tree_node* %call14.fntype.0) #7, !dbg !3333
  %tobool146 = icmp eq i32 %call145, 0, !dbg !3333
  br i1 %tobool146, label %if.end172, label %if.then147, !dbg !3334

if.then147:                                       ; preds = %if.end139
  %35 = load i32, i32* %flags, align 4, !dbg !3335
  call void @llvm.dbg.value(metadata i32 %35, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and148 = and i32 %35, -8, !dbg !3335
  call void @llvm.dbg.value(metadata i32 %and148, metadata !2310, metadata !DIExpression()), !dbg !3240
  store i32 %and148, i32* %flags, align 4, !dbg !3335
  %call149 = call i64 @int_size_in_bytes(%union.tree_node* %26) #7, !dbg !3336
  call void @llvm.dbg.value(metadata i64 %call149, metadata !2295, metadata !DIExpression()), !dbg !3240
  %tobool150 = icmp eq %struct.rtx_def* %target, null, !dbg !3337
  br i1 %tobool150, label %if.else165, label %land.lhs.true151, !dbg !3338

land.lhs.true151:                                 ; preds = %if.then147
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !3339
  %bf.load152 = load i32, i32* %36, align 8, !dbg !3339
  %bf.clear153 = and i32 %bf.load152, 65535, !dbg !3339
  %cmp154 = icmp eq i32 %bf.clear153, 43, !dbg !3339
  br i1 %cmp154, label %land.lhs.true156, label %if.else165, !dbg !3340

land.lhs.true156:                                 ; preds = %land.lhs.true151
  %bf.load158 = load i64, i64* %0, align 8, !dbg !3341
  %bf.cast16159 = and i64 %bf.load158, 268435456, !dbg !3341
  %tobool162 = icmp eq i64 %bf.cast16159, 0, !dbg !3341
  br i1 %tobool162, label %if.else165, label %if.then163, !dbg !3342

if.then163:                                       ; preds = %land.lhs.true156
  %arrayidx164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3343
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**, !dbg !3343
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %37, metadata !2292, metadata !DIExpression()), !dbg !3240
  br label %if.end172, !dbg !3344

if.else165:                                       ; preds = %land.lhs.true156, %if.then147, %land.lhs.true151
  %call166 = call %struct.rtx_def* @assign_temp(%union.tree_node* %26, i32 0, i32 1, i32 1) #7, !dbg !3345
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call166, metadata !2340, metadata !DIExpression()), !dbg !3346
  call void @mark_temp_addr_taken(%struct.rtx_def* %call166) #7, !dbg !3347
  %arrayidx169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call166, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3348
  %rt_rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**, !dbg !3348
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx170, align 8, !dbg !3348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %38, metadata !2292, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2279, metadata !DIExpression()), !dbg !3240
  br label %if.end172

if.end172:                                        ; preds = %if.end139, %if.then163, %if.else165
  %struct_value_size.0 = phi i64 [ 0, %if.end139 ], [ %call149, %if.else165 ], [ %call149, %if.then163 ], !dbg !3240
  %structure_value_addr.1 = phi %struct.rtx_def* [ null, %if.end139 ], [ %38, %if.else165 ], [ %37, %if.then163 ], !dbg !3240
  %target.addr.1 = phi %struct.rtx_def* [ %target, %if.end139 ], [ null, %if.else165 ], [ %target, %if.then163 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1, metadata !2279, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %structure_value_addr.1, metadata !2292, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i64 %struct_value_size.0, metadata !2295, metadata !DIExpression()), !dbg !3240
  %39 = load i32, i32* @ix86_preferred_stack_boundary, align 4, !dbg !3349
  %conv173 = zext i32 %39 to i64, !dbg !3349
  call void @llvm.dbg.value(metadata i64 %conv173, metadata !2326, metadata !DIExpression()), !dbg !3240
  br i1 %tobool15, label %if.end190, label %if.then175, !dbg !3350

if.then175:                                       ; preds = %if.end172
  %call177 = call %struct.cgraph_rtl_info* @cgraph_rtl_info(%union.tree_node* nonnull %call14) #7, !dbg !3351
  call void @llvm.dbg.value(metadata %struct.cgraph_rtl_info* %call177, metadata !2346, metadata !DIExpression()), !dbg !3352
  %tobool178 = icmp eq %struct.cgraph_rtl_info* %call177, null, !dbg !3353
  br i1 %tobool178, label %if.end190, label %land.lhs.true179, !dbg !3355

land.lhs.true179:                                 ; preds = %if.then175
  %preferred_incoming_stack_boundary = getelementptr inbounds %struct.cgraph_rtl_info, %struct.cgraph_rtl_info* %call177, i64 0, i32 0, !dbg !3356
  %40 = load i32, i32* %preferred_incoming_stack_boundary, align 4, !dbg !3356
  %tobool180 = icmp eq i32 %40, 0, !dbg !3357
  br i1 %tobool180, label %if.end190, label %land.lhs.true181, !dbg !3358

land.lhs.true181:                                 ; preds = %land.lhs.true179
  %cmp184 = icmp ult i32 %40, %39, !dbg !3359
  br i1 %cmp184, label %if.then186, label %if.end190, !dbg !3360

if.then186:                                       ; preds = %land.lhs.true181
  %conv188 = zext i32 %40 to i64, !dbg !3361
  call void @llvm.dbg.value(metadata i64 %conv188, metadata !2326, metadata !DIExpression()), !dbg !3240
  br label %if.end190, !dbg !3362

if.end190:                                        ; preds = %land.lhs.true179, %if.then175, %if.end172, %land.lhs.true181, %if.then186
  %preferred_stack_boundary.1 = phi i64 [ %conv173, %if.end172 ], [ %conv188, %if.then186 ], [ %conv173, %land.lhs.true181 ], [ %conv173, %land.lhs.true179 ], [ %conv173, %if.then175 ], !dbg !3240
  call void @llvm.dbg.value(metadata i64 %preferred_stack_boundary.1, metadata !2326, metadata !DIExpression()), !dbg !3240
  %type192 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3363
  %41 = load %union.tree_node*, %union.tree_node** %type192, align 8, !dbg !3363
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !2284, metadata !DIExpression()), !dbg !3240
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3364
  %bf.load194 = load i64, i64* %42, align 8, !dbg !3364
  %bf.cast19635 = and i64 %bf.load194, 65535, !dbg !3364
  %cmp197 = icmp eq i64 %bf.cast19635, 10, !dbg !3364
  br i1 %cmp197, label %cond.end208, label %lor.lhs.false199, !dbg !3364

lor.lhs.false199:                                 ; preds = %if.end190
  %cmp204 = icmp eq i64 %bf.cast19635, 12, !dbg !3364
  br i1 %cmp204, label %cond.end208, label %cond.true206, !dbg !3364

cond.true206:                                     ; preds = %lor.lhs.false199
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2140, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3364
  br label %cond.end208, !dbg !3364

cond.end208:                                      ; preds = %if.end190, %lor.lhs.false199, %cond.true206
  %type211 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3365
  %43 = load %union.tree_node*, %union.tree_node** %type211, align 8, !dbg !3365
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !2284, metadata !DIExpression()), !dbg !3240
  %44 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !3366
  %tobool212 = icmp eq i8 (%union.tree_node*)* %44, null, !dbg !3367
  br i1 %tobool212, label %if.else242, label %if.then213, !dbg !3368

if.then213:                                       ; preds = %cond.end208
  %45 = bitcast %struct.call_expr_arg_iterator_d* %iter214 to i8*, !dbg !3369
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #6, !dbg !3369
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter214, metadata !2354, metadata !DIExpression(DW_OP_deref)), !dbg !3370
  %call216 = call fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* nonnull %iter214) #8, !dbg !3371
  call void @llvm.dbg.value(metadata %union.tree_node* %call216, metadata !2357, metadata !DIExpression()), !dbg !3370
  br label %for.cond217, !dbg !3371

for.cond217:                                      ; preds = %for.inc237, %if.then213
  %arg215.0 = phi %union.tree_node* [ %call216, %if.then213 ], [ %call238, %for.inc237 ], !dbg !3372
  %num_complex_actuals.0 = phi i32 [ 0, %if.then213 ], [ %num_complex_actuals.1, %for.inc237 ], !dbg !3240
  call void @llvm.dbg.value(metadata i32 %num_complex_actuals.0, metadata !2300, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %union.tree_node* %arg215.0, metadata !2357, metadata !DIExpression()), !dbg !3370
  %tobool218 = icmp eq %union.tree_node* %arg215.0, null, !dbg !3371
  br i1 %tobool218, label %for.end239, label %for.body219, !dbg !3371

for.body219:                                      ; preds = %for.cond217
  %type222 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg215.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3373
  %46 = load %union.tree_node*, %union.tree_node** %type222, align 8, !dbg !3373
  call void @llvm.dbg.value(metadata %union.tree_node* %46, metadata !2358, metadata !DIExpression()), !dbg !3374
  %tobool223 = icmp eq %union.tree_node* %46, null, !dbg !3375
  br i1 %tobool223, label %for.inc237, label %land.lhs.true224, !dbg !3377

land.lhs.true224:                                 ; preds = %for.body219
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3378
  %bf.load226 = load i64, i64* %47, align 8, !dbg !3378
  %bf.cast22858 = and i64 %bf.load226, 65535, !dbg !3379
  %cmp229 = icmp eq i64 %bf.cast22858, 13, !dbg !3379
  br i1 %cmp229, label %land.lhs.true231, label %for.inc237, !dbg !3380

land.lhs.true231:                                 ; preds = %land.lhs.true224
  %48 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !3381
  %call232 = call zeroext i8 %48(%union.tree_node* nonnull %46) #7, !dbg !3382
  %tobool234 = icmp ne i8 %call232, 0, !dbg !3382
  %inc = zext i1 %tobool234 to i32, !dbg !3383
  %spec.select = add nsw i32 %num_complex_actuals.0, %inc, !dbg !3383
  br label %for.inc237, !dbg !3383

for.inc237:                                       ; preds = %for.body219, %land.lhs.true231, %land.lhs.true224
  %num_complex_actuals.1 = phi i32 [ %num_complex_actuals.0, %land.lhs.true224 ], [ %num_complex_actuals.0, %for.body219 ], [ %spec.select, %land.lhs.true231 ], !dbg !3240
  call void @llvm.dbg.value(metadata i32 %num_complex_actuals.1, metadata !2300, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter214, metadata !2354, metadata !DIExpression(DW_OP_deref)), !dbg !3370
  %call238 = call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* nonnull %iter214) #8, !dbg !3384
  call void @llvm.dbg.value(metadata %union.tree_node* %call238, metadata !2357, metadata !DIExpression()), !dbg !3370
  br label %for.cond217, !dbg !3384, !llvm.loop !3385

for.end239:                                       ; preds = %for.cond217
  %num_complex_actuals.0.lcssa = phi i32 [ %num_complex_actuals.0, %for.cond217 ], !dbg !3240
  call void @llvm.dbg.value(metadata i32 %num_complex_actuals.0.lcssa, metadata !2300, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %num_complex_actuals.0.lcssa, metadata !2300, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %num_complex_actuals.0.lcssa, metadata !2300, metadata !DIExpression()), !dbg !3240
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3387
  %49 = bitcast i32* %values to %union.tree_node**, !dbg !3387
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8, !dbg !3387
  %call241 = call fastcc %union.tree_node* @split_complex_types(%union.tree_node* %50) #8, !dbg !3388
  call void @llvm.dbg.value(metadata %union.tree_node* %call241, metadata !2285, metadata !DIExpression()), !dbg !3240
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #6, !dbg !3389
  br label %if.end245, !dbg !3390

if.else242:                                       ; preds = %cond.end208
  %values244 = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3391
  %51 = bitcast i32* %values244 to %union.tree_node**, !dbg !3391
  %52 = load %union.tree_node*, %union.tree_node** %51, align 8, !dbg !3391
  call void @llvm.dbg.value(metadata %union.tree_node* %52, metadata !2285, metadata !DIExpression()), !dbg !3240
  br label %if.end245

if.end245:                                        ; preds = %if.else242, %for.end239
  %num_complex_actuals.2 = phi i32 [ %num_complex_actuals.0.lcssa, %for.end239 ], [ 0, %if.else242 ], !dbg !3392
  %type_arg_types.0 = phi %union.tree_node* [ %call241, %for.end239 ], [ %52, %if.else242 ], !dbg !3393
  call void @llvm.dbg.value(metadata %union.tree_node* %type_arg_types.0, metadata !2285, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %num_complex_actuals.2, metadata !2300, metadata !DIExpression()), !dbg !3240
  %53 = load i32, i32* %flags, align 4, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %53, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and246 = and i32 %53, 32, !dbg !3396
  %tobool247 = icmp eq i32 %and246, 0, !dbg !3396
  br i1 %tobool247, label %if.end251, label %if.then248, !dbg !3397

if.then248:                                       ; preds = %if.end245
  %54 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3398
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %54, i64 0, i32 20, !dbg !3399
  %bf.load249 = load i32, i32* %calls_alloca, align 8, !dbg !3400
  %bf.set = or i32 %bf.load249, 524288, !dbg !3400
  store i32 %bf.set, i32* %calls_alloca, align 8, !dbg !3400
  br label %if.end251, !dbg !3398

if.end251:                                        ; preds = %if.end245, %if.then248
  %tobool252 = icmp ne %struct.rtx_def* %structure_value_addr.1, null, !dbg !3401
  %cmp254 = icmp eq %struct.rtx_def* %call28, null, !dbg !3402
  %or.cond4 = and i1 %tobool252, %cmp254, !dbg !3403
  br i1 %or.cond4, label %if.then256, label %if.end284, !dbg !3403

if.then256:                                       ; preds = %if.end251
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %structure_value_addr.1, i64 0, i32 0, !dbg !3404
  %bf.load257 = load i32, i32* %55, align 8, !dbg !3404
  %bf.clear258 = and i32 %bf.load257, 65535, !dbg !3404
  %cmp259 = icmp eq i32 %bf.clear258, 37, !dbg !3404
  br i1 %cmp259, label %lor.lhs.false261, label %cond.true274, !dbg !3405

lor.lhs.false261:                                 ; preds = %if.then256
  %56 = load i32, i32* @target_flags, align 4, !dbg !3406
  %and262 = and i32 %56, 4, !dbg !3406
  %cmp263 = icmp eq i32 %and262, 0, !dbg !3406
  br i1 %cmp263, label %lor.lhs.false265, label %land.lhs.true269, !dbg !3406

lor.lhs.false265:                                 ; preds = %lor.lhs.false261
  %call266 = call i32 @ix86_cfun_abi() #7, !dbg !3406
  %cmp267 = icmp eq i32 %call266, 1, !dbg !3406
  br i1 %cmp267, label %land.lhs.true269, label %cond.end278, !dbg !3407

land.lhs.true269:                                 ; preds = %lor.lhs.false261, %lor.lhs.false265
  %57 = load i32, i32* @stack_arg_under_construction, align 4, !dbg !3408
  %tobool270 = icmp ne i32 %57, 0, !dbg !3408
  %58 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !3409
  %cmp272 = icmp eq %struct.rtx_def* %structure_value_addr.1, %58, !dbg !3410
  %or.cond5 = and i1 %tobool270, %cmp272, !dbg !3411
  br i1 %or.cond5, label %cond.true274, label %cond.end278, !dbg !3411

cond.true274:                                     ; preds = %land.lhs.true269, %if.then256
  %call275 = call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* nonnull %structure_value_addr.1, i8 zeroext 0) #7, !dbg !3412
  %call276 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %call275) #7, !dbg !3413
  br label %cond.end278, !dbg !3414

cond.end278:                                      ; preds = %lor.lhs.false265, %land.lhs.true269, %cond.true274
  %cond279 = phi %struct.rtx_def* [ %call276, %cond.true274 ], [ %structure_value_addr.1, %land.lhs.true269 ], [ %structure_value_addr.1, %lor.lhs.false265 ], !dbg !3414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond279, metadata !2362, metadata !DIExpression()), !dbg !3415
  %type281 = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3416
  %59 = load %union.tree_node*, %union.tree_node** %type281, align 8, !dbg !3416
  %call282 = call %union.tree_node* @build_pointer_type(%union.tree_node* %59) #7, !dbg !3417
  %call283 = call %union.tree_node* @make_tree(%union.tree_node* %call282, %struct.rtx_def* %cond279) #7, !dbg !3418
  call void @llvm.dbg.value(metadata %union.tree_node* %call283, metadata !2294, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 1, metadata !2293, metadata !DIExpression()), !dbg !3240
  br label %if.end284, !dbg !3419

if.end284:                                        ; preds = %cond.end278, %if.end251
  %structure_value_addr_value.0 = phi %union.tree_node* [ %call283, %cond.end278 ], [ null, %if.end251 ], !dbg !3240
  %structure_value_addr_parm.0 = phi i32 [ 1, %cond.end278 ], [ 0, %if.end251 ], !dbg !3240
  call void @llvm.dbg.value(metadata i32 %structure_value_addr_parm.0, metadata !2293, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %union.tree_node* %structure_value_addr_value.0, metadata !2294, metadata !DIExpression()), !dbg !3240
  %60 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !3420
  %61 = load %struct.tree_int_cst*, %struct.tree_int_cst** %60, align 8, !dbg !3420
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %61, i64 0, i32 1, i32 0, !dbg !3420
  %62 = load i64, i64* %low, align 8, !dbg !3420
  %conv289 = trunc i64 %62 to i32, !dbg !3420
  %sub = add nsw i32 %conv289, -3, !dbg !3420
  %add = add nsw i32 %sub, %num_complex_actuals.2, !dbg !3421
  %add290 = add nsw i32 %add, %structure_value_addr_parm.0, !dbg !3422
  call void @llvm.dbg.value(metadata i32 %add290, metadata !2298, metadata !DIExpression()), !dbg !3240
  %cmp291 = icmp eq %union.tree_node* %type_arg_types.0, null, !dbg !3423
  br i1 %cmp291, label %if.end297, label %if.then293, !dbg !3425

if.then293:                                       ; preds = %if.end284
  %call294 = call i32 @list_length(%union.tree_node* nonnull %type_arg_types.0) #7, !dbg !3426
  %add295 = add nsw i32 %call294, %structure_value_addr_parm.0, !dbg !3427
  call void @llvm.dbg.value(metadata i32 %add295, metadata !2299, metadata !DIExpression()), !dbg !3240
  br label %if.end297, !dbg !3428

if.end297:                                        ; preds = %if.end284, %if.then293
  %n_named_args.0 = phi i32 [ %add295, %if.then293 ], [ %add290, %if.end284 ], !dbg !3429
  call void @llvm.dbg.value(metadata i32 %n_named_args.0, metadata !2299, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2305, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @init_cumulative_args(%struct.ix86_args* nonnull %args_so_far, %union.tree_node* %43, %struct.rtx_def* null, %union.tree_node* %call14) #7, !dbg !3430
  br i1 %cmp291, label %if.end314, label %land.lhs.true300, !dbg !3431

land.lhs.true300:                                 ; preds = %if.end297
  %63 = load i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 8), align 8, !dbg !3433
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2305, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call301 = call zeroext i8 %63(%struct.ix86_args* nonnull %args_so_far) #7, !dbg !3434
  %tobool303 = icmp eq i8 %call301, 0, !dbg !3434
  br i1 %tobool303, label %if.else305, label %if.end314, !dbg !3435

if.else305:                                       ; preds = %land.lhs.true300
  %64 = load i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 9), align 8, !dbg !3436
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2305, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call309 = call zeroext i8 %64(%struct.ix86_args* nonnull %args_so_far) #7, !dbg !3438
  %tobool310 = icmp eq i8 %call309, 0, !dbg !3438
  %dec = add nsw i32 %n_named_args.0, -1, !dbg !3439
  %spec.select26 = select i1 %tobool310, i32 %dec, i32 %add290, !dbg !3440
  br label %if.end314, !dbg !3440

if.end314:                                        ; preds = %land.lhs.true300, %if.else305, %if.end297
  %n_named_args.2 = phi i32 [ %n_named_args.0, %land.lhs.true300 ], [ %add290, %if.end297 ], [ %spec.select26, %if.else305 ], !dbg !3240
  call void @llvm.dbg.value(metadata i32 %n_named_args.2, metadata !2299, metadata !DIExpression()), !dbg !3240
  %conv315 = sext i32 %add290 to i64, !dbg !3441
  %65 = alloca %struct.arg_data, i64 %conv315, align 16, !dbg !3441
  call void @llvm.dbg.value(metadata %struct.arg_data* %65, metadata !2301, metadata !DIExpression()), !dbg !3240
  %66 = bitcast %struct.arg_data* %65 to i8*, !dbg !3442
  %mul317 = mul nsw i64 %conv315, 184, !dbg !3443
  %call318 = call i8* @memset(i8* nonnull %66, i32 0, i64 %mul317) #7, !dbg !3444
  %bf.load320 = load i64, i64* %0, align 8, !dbg !3445
  %bf.lshr321 = lshr i64 %bf.load320, 29, !dbg !3445
  %67 = trunc i64 %bf.lshr321 to i8, !dbg !3445
  %bf.cast323 = and i8 %67, 1, !dbg !3445
  call void @llvm.dbg.value(metadata i8* %try_tail_call, metadata !2289, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.args_size* %args_size, metadata !2302, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2305, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.dbg.value(metadata i32* %must_preallocate, metadata !2307, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.dbg.value(metadata i32* %flags, metadata !2310, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_stack_level, metadata !2318, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.dbg.value(metadata i32* %old_pending_adj, metadata !2320, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call fastcc void @initialize_argument_information(i32 %add290, %struct.arg_data* nonnull %65, %struct.args_size* nonnull %args_size, i32 %n_named_args.2, %union.tree_node* %exp, %union.tree_node* %structure_value_addr_value.0, %union.tree_node* %call14, %union.tree_node* %fntype.0, %struct.ix86_args* nonnull %args_so_far, i32 %call112, %struct.rtx_def** nonnull %old_stack_level, i32* nonnull %old_pending_adj, i32* nonnull %must_preallocate, i32* nonnull %flags, i8* nonnull %try_tail_call, i8 zeroext %bf.cast323) #8, !dbg !3446
  %var = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 1, !dbg !3447
  %68 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !3447
  %tobool325 = icmp eq %union.tree_node* %68, null, !dbg !3449
  br i1 %tobool325, label %if.end314.if.end327_crit_edge, label %if.then326, !dbg !3450

if.end314.if.end327_crit_edge:                    ; preds = %if.end314
  %.pre = load i32, i32* %must_preallocate, align 4, !dbg !3451
  br label %if.end327, !dbg !3450

if.then326:                                       ; preds = %if.end314
  call void @llvm.dbg.value(metadata i32 1, metadata !2307, metadata !DIExpression()), !dbg !3240
  store i32 1, i32* %must_preallocate, align 4, !dbg !3452
  br label %if.end327, !dbg !3453

if.end327:                                        ; preds = %if.end314.if.end327_crit_edge, %if.then326
  %69 = phi i32 [ %.pre, %if.end314.if.end327_crit_edge ], [ 1, %if.then326 ], !dbg !3451
  call void @llvm.dbg.value(metadata i32 %69, metadata !2307, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.args_size* %args_size, metadata !2302, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call328 = call fastcc i32 @finalize_must_preallocate(i32 %69, i32 %add290, %struct.arg_data* nonnull %65, %struct.args_size* nonnull %args_size) #8, !dbg !3454
  call void @llvm.dbg.value(metadata i32 %call328, metadata !2307, metadata !DIExpression()), !dbg !3240
  store i32 %call328, i32* %must_preallocate, align 4, !dbg !3455
  %tobool329 = icmp eq %struct.rtx_def* %structure_value_addr.1, null, !dbg !3456
  br i1 %tobool329, label %if.end351, label %land.lhs.true330, !dbg !3458

land.lhs.true330:                                 ; preds = %if.end327
  %70 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 16, !dbg !3459
  %call331 = call i32 @reg_mentioned_p(%struct.rtx_def* %70, %struct.rtx_def* nonnull %structure_value_addr.1) #7, !dbg !3460
  %tobool332 = icmp eq i32 %call331, 0, !dbg !3460
  br i1 %tobool332, label %lor.lhs.false333, label %land.lhs.true336, !dbg !3461

lor.lhs.false333:                                 ; preds = %land.lhs.true330
  %71 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !3462
  %call334 = call i32 @reg_mentioned_p(%struct.rtx_def* %71, %struct.rtx_def* nonnull %structure_value_addr.1) #7, !dbg !3463
  %tobool335 = icmp eq i32 %call334, 0, !dbg !3463
  br i1 %tobool335, label %if.end351, label %land.lhs.true336, !dbg !3464

land.lhs.true336:                                 ; preds = %lor.lhs.false333, %land.lhs.true330
  %72 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !3465
  %tobool338 = icmp eq %union.tree_node* %72, null, !dbg !3466
  br i1 %tobool338, label %lor.lhs.false339, label %if.then349, !dbg !3467

lor.lhs.false339:                                 ; preds = %land.lhs.true336
  %73 = load i32, i32* @target_flags, align 4, !dbg !3468
  %and340 = and i32 %73, 4, !dbg !3468
  %cmp341 = icmp eq i32 %and340, 0, !dbg !3468
  br i1 %cmp341, label %lor.lhs.false343, label %if.end351, !dbg !3468

lor.lhs.false343:                                 ; preds = %lor.lhs.false339
  %call344 = call i32 @ix86_cfun_abi() #7, !dbg !3468
  %cmp345 = icmp eq i32 %call344, 1, !dbg !3468
  br i1 %cmp345, label %if.end351, label %land.lhs.true347, !dbg !3469

land.lhs.true347:                                 ; preds = %lor.lhs.false343
  %constant = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 0, !dbg !3470
  %74 = load i64, i64* %constant, align 8, !dbg !3470
  %tobool348 = icmp eq i64 %74, 0, !dbg !3471
  br i1 %tobool348, label %if.end351, label %if.then349, !dbg !3472

if.then349:                                       ; preds = %land.lhs.true347, %land.lhs.true336
  %call350 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* nonnull %structure_value_addr.1) #7, !dbg !3473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call350, metadata !2292, metadata !DIExpression()), !dbg !3240
  br label %if.end351, !dbg !3474

if.end351:                                        ; preds = %land.lhs.true347, %lor.lhs.false339, %lor.lhs.false333, %if.end327, %if.then349, %lor.lhs.false343
  %structure_value_addr.2 = phi %struct.rtx_def* [ %call350, %if.then349 ], [ %structure_value_addr.1, %lor.lhs.false339 ], [ %structure_value_addr.1, %lor.lhs.false343 ], [ %structure_value_addr.1, %land.lhs.true347 ], [ %structure_value_addr.1, %lor.lhs.false333 ], [ null, %if.end327 ], !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %structure_value_addr.2, metadata !2292, metadata !DIExpression()), !dbg !3240
  %75 = load i32, i32* @expand_call.currently_expanding_call, align 4, !dbg !3475
  %inc352 = add nsw i32 %75, 1, !dbg !3475
  store i32 %inc352, i32* @expand_call.currently_expanding_call, align 4, !dbg !3475
  %cmp353 = icmp eq i32 %75, 0, !dbg !3477
  %76 = load i32, i32* @flag_optimize_sibling_calls, align 4, !dbg !3478
  %tobool356 = icmp ne i32 %76, 0, !dbg !3478
  %or.cond6 = and i1 %cmp353, %tobool356, !dbg !3479
  br i1 %or.cond6, label %lor.lhs.false357, label %if.then365, !dbg !3479

lor.lhs.false357:                                 ; preds = %if.end351
  %77 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !3480
  %tobool359 = icmp eq %union.tree_node* %77, null, !dbg !3481
  br i1 %tobool359, label %lor.lhs.false360, label %if.then365, !dbg !3482

lor.lhs.false360:                                 ; preds = %lor.lhs.false357
  %call361 = call zeroext i8 @dbg_cnt(i32 37) #7, !dbg !3483
  %cmp363 = icmp eq i8 %call361, 0, !dbg !3484
  br i1 %cmp363, label %if.then365, label %lor.lhs.false360.if.end366_crit_edge, !dbg !3485

lor.lhs.false360.if.end366_crit_edge:             ; preds = %lor.lhs.false360
  %.pre66 = load i8, i8* %try_tail_call, align 1, !dbg !3486
  br label %if.end366, !dbg !3485

if.then365:                                       ; preds = %lor.lhs.false357, %if.end351, %lor.lhs.false360
  call void @llvm.dbg.value(metadata i8 0, metadata !2289, metadata !DIExpression()), !dbg !3240
  store i8 0, i8* %try_tail_call, align 1, !dbg !3488
  br label %if.end366, !dbg !3489

if.end366:                                        ; preds = %lor.lhs.false360.if.end366_crit_edge, %if.then365
  %78 = phi i8 [ %.pre66, %lor.lhs.false360.if.end366_crit_edge ], [ 0, %if.then365 ], !dbg !3486
  call void @llvm.dbg.value(metadata i8 %78, metadata !2289, metadata !DIExpression()), !dbg !3240
  %tobool367 = icmp eq i8 %78, 0, !dbg !3486
  %cmp369 = icmp ne %struct.rtx_def* %structure_value_addr.2, null, !dbg !3490
  %or.cond7 = or i1 %tobool367, %cmp369, !dbg !3491
  br i1 %or.cond7, label %if.then427, label %lor.lhs.false371, !dbg !3491

lor.lhs.false371:                                 ; preds = %if.end366
  %call372 = call i32 @ix86_function_type_abi(%union.tree_node* %43) #7, !dbg !3492
  %cmp373 = icmp eq i32 %call372, 1, !dbg !3492
  %79 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !3493
  %type376 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %79, i64 0, i32 2, !dbg !3493
  %80 = load %union.tree_node*, %union.tree_node** %type376, align 8, !dbg !3493
  %call377 = call i32 @ix86_function_type_abi(%union.tree_node* %80) #7, !dbg !3493
  %cmp378 = icmp eq i32 %call377, 1, !dbg !3493
  %cmp380 = xor i1 %cmp373, %cmp378, !dbg !3494
  br i1 %cmp380, label %if.then427, label %lor.lhs.false382, !dbg !3495

lor.lhs.false382:                                 ; preds = %lor.lhs.false371
  %call383 = call i32 @ix86_reg_parm_stack_space(%union.tree_node* %call14) #7, !dbg !3496
  %cmp384 = icmp eq i32 %call112, %call383, !dbg !3497
  br i1 %cmp384, label %lor.lhs.false386, label %if.then427, !dbg !3498

lor.lhs.false386:                                 ; preds = %lor.lhs.false382
  %81 = load i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 46), align 8, !dbg !3499
  %call387 = call zeroext i8 %81(%union.tree_node* %call14, %union.tree_node* %exp) #7, !dbg !3500
  %tobool388 = icmp eq i8 %call387, 0, !dbg !3500
  br i1 %tobool388, label %if.then427, label %lor.lhs.false389, !dbg !3501

lor.lhs.false389:                                 ; preds = %lor.lhs.false386
  %82 = load i32, i32* %flags, align 4, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %82, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and390 = and i32 %82, 136, !dbg !3503
  %tobool391 = icmp eq i32 %and390, 0, !dbg !3503
  br i1 %tobool391, label %lor.lhs.false392, label %if.then427, !dbg !3504

lor.lhs.false392:                                 ; preds = %lor.lhs.false389
  %83 = bitcast %union.tree_node** %type192 to %struct.tree_common**, !dbg !3505
  %84 = load %struct.tree_common*, %struct.tree_common** %83, align 8, !dbg !3505
  %type396 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %84, i64 0, i32 2, !dbg !3505
  %85 = bitcast %union.tree_node** %type396 to i64**, !dbg !3505
  %86 = load i64*, i64** %85, align 8, !dbg !3505
  %bf.load398 = load i64, i64* %86, align 8, !dbg !3505
  %bf.cast40156 = and i64 %bf.load398, 524288, !dbg !3505
  %tobool402 = icmp eq i64 %bf.cast40156, 0, !dbg !3505
  br i1 %tobool402, label %lor.lhs.false403, label %if.then427, !dbg !3506

lor.lhs.false403:                                 ; preds = %lor.lhs.false392
  br i1 %tobool15, label %lor.lhs.false409, label %land.lhs.true405, !dbg !3507

land.lhs.true405:                                 ; preds = %lor.lhs.false403
  %call406 = call %union.tree_node* @decl_function_context(%union.tree_node* nonnull %call14) #7, !dbg !3508
  %87 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3509
  %cmp407 = icmp eq %union.tree_node* %call406, %87, !dbg !3510
  br i1 %cmp407, label %if.then427, label %lor.lhs.false409, !dbg !3511

lor.lhs.false409:                                 ; preds = %lor.lhs.false403, %land.lhs.true405
  %constant410 = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 0, !dbg !3512
  %88 = load i64, i64* %constant410, align 8, !dbg !3512
  %89 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 1), align 4, !dbg !3513
  %90 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 2), align 8, !dbg !3514
  %sub411 = sub nsw i32 %89, %90, !dbg !3515
  %conv412 = sext i32 %sub411 to i64, !dbg !3516
  %cmp413 = icmp sgt i64 %88, %conv412, !dbg !3517
  br i1 %cmp413, label %if.then427, label %lor.lhs.false415, !dbg !3518

lor.lhs.false415:                                 ; preds = %lor.lhs.false409
  %conv417 = trunc i64 %88 to i32, !dbg !3519
  %call418 = call i32 @ix86_return_pops_args(%union.tree_node* %call14, %union.tree_node* %43, i32 %conv417) #7, !dbg !3519
  %91 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3520
  %type420 = getelementptr inbounds %union.tree_node, %union.tree_node* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3520
  %92 = load %union.tree_node*, %union.tree_node** %type420, align 8, !dbg !3520
  %93 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 1), align 4, !dbg !3520
  %call421 = call i32 @ix86_return_pops_args(%union.tree_node* %91, %union.tree_node* %92, i32 %93) #7, !dbg !3520
  %cmp422 = icmp eq i32 %call418, %call421, !dbg !3521
  br i1 %cmp422, label %lor.lhs.false424, label %if.then427, !dbg !3522

lor.lhs.false424:                                 ; preds = %lor.lhs.false415
  %94 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 9), align 8, !dbg !3523
  %call425 = call zeroext i8 %94(%union.tree_node* %call14) #7, !dbg !3524
  %tobool426 = icmp eq i8 %call425, 0, !dbg !3524
  br i1 %tobool426, label %if.then427, label %lor.lhs.false424.if.end428_crit_edge, !dbg !3525

lor.lhs.false424.if.end428_crit_edge:             ; preds = %lor.lhs.false424
  %.pre67 = load i8, i8* %try_tail_call, align 1, !dbg !3526
  %phitmp = icmp eq i8 %.pre67, 0, !dbg !3525
  br label %if.end428, !dbg !3525

if.then427:                                       ; preds = %lor.lhs.false424, %lor.lhs.false415, %lor.lhs.false392, %lor.lhs.false389, %lor.lhs.false386, %lor.lhs.false382, %if.end366, %lor.lhs.false409, %land.lhs.true405, %lor.lhs.false371
  call void @llvm.dbg.value(metadata i8 0, metadata !2289, metadata !DIExpression()), !dbg !3240
  store i8 0, i8* %try_tail_call, align 1, !dbg !3527
  br label %if.end428, !dbg !3528

if.end428:                                        ; preds = %lor.lhs.false424.if.end428_crit_edge, %if.then427
  %95 = phi i1 [ %phitmp, %lor.lhs.false424.if.end428_crit_edge ], [ true, %if.then427 ]
  br i1 %95, label %if.end511, label %if.then430, !dbg !3529

if.then430:                                       ; preds = %if.end428
  %96 = bitcast i32* %caller_unsignedp to i8*, !dbg !3530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #6, !dbg !3530
  %97 = bitcast i32* %callee_unsignedp to i8*, !dbg !3530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #6, !dbg !3530
  %98 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !3531
  %result = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %98, i64 0, i32 3, !dbg !3531
  %99 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !3531
  call void @llvm.dbg.value(metadata %union.tree_node* %99, metadata !2373, metadata !DIExpression()), !dbg !3532
  %type432 = getelementptr inbounds %union.tree_node, %union.tree_node* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3533
  %100 = bitcast %union.tree_node** %type432 to i64**, !dbg !3533
  %101 = load i64*, i64** %100, align 8, !dbg !3533
  %bf.load434 = load i64, i64* %101, align 8, !dbg !3533
  %bf.lshr435 = lshr i64 %bf.load434, 21, !dbg !3533
  %102 = trunc i64 %bf.lshr435 to i32, !dbg !3533
  %bf.cast437 = and i32 %102, 1, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %bf.cast437, metadata !2371, metadata !DIExpression()), !dbg !3532
  store i32 %bf.cast437, i32* %caller_unsignedp, align 4, !dbg !3534
  %mode438 = getelementptr inbounds %union.tree_node, %union.tree_node* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3535
  %103 = bitcast i40* %mode438 to i64*, !dbg !3535
  %bf.load439 = load i64, i64* %103, align 8, !dbg !3535
  %104 = trunc i64 %bf.load439 to i32, !dbg !3535
  %bf.cast441 = and i32 %104, 255, !dbg !3535
  call void @llvm.dbg.value(metadata i32 %bf.cast441, metadata !2365, metadata !DIExpression()), !dbg !3532
  %type443 = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3536
  %105 = bitcast %union.tree_node** %type443 to i64**, !dbg !3536
  %106 = load i64*, i64** %105, align 8, !dbg !3536
  %bf.load445 = load i64, i64* %106, align 8, !dbg !3536
  %bf.lshr446 = lshr i64 %bf.load445, 21, !dbg !3536
  %107 = trunc i64 %bf.lshr446 to i32, !dbg !3536
  %bf.cast448 = and i32 %107, 1, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %bf.cast448, metadata !2372, metadata !DIExpression()), !dbg !3532
  store i32 %bf.cast448, i32* %callee_unsignedp, align 4, !dbg !3537
  %bf.cast45455 = and i64 %bf.load445, 65535, !dbg !3538
  %cmp455 = icmp eq i64 %bf.cast45455, 14, !dbg !3538
  br i1 %cmp455, label %cond.true457, label %cond.false461, !dbg !3538

cond.true457:                                     ; preds = %if.then430
  %.cast = bitcast i64* %106 to %union.tree_node*, !dbg !3538
  %call460 = call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !3538
  %.pre68 = load %union.tree_node*, %union.tree_node** %type432, align 8, !dbg !3539
  %.pre69 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !3540
  br label %cond.end469, !dbg !3538

cond.false461:                                    ; preds = %if.then430
  %108 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3538
  %109 = bitcast i64* %101 to %union.tree_node*, !dbg !3538
  %type464 = bitcast i64* %106 to %struct.tree_type*, !dbg !3538
  %mode465 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type464, i64 0, i32 6, !dbg !3538
  %bf.load466 = load i32, i32* %mode465, align 4, !dbg !3538
  %bf.lshr467 = lshr i32 %bf.load466, 16, !dbg !3538
  %bf.clear468 = and i32 %bf.lshr467, 255, !dbg !3538
  br label %cond.end469, !dbg !3538

cond.end469:                                      ; preds = %cond.false461, %cond.true457
  %110 = phi %struct.tree_common* [ %.pre69, %cond.true457 ], [ %108, %cond.false461 ], !dbg !3540
  %111 = phi %union.tree_node* [ %.pre68, %cond.true457 ], [ %109, %cond.false461 ], !dbg !3539
  %cond470 = phi i32 [ %call460, %cond.true457 ], [ %bf.clear468, %cond.false461 ], !dbg !3538
  call void @llvm.dbg.value(metadata i32 %cond470, metadata !2369, metadata !DIExpression()), !dbg !3532
  %type474 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %110, i64 0, i32 2, !dbg !3540
  %112 = load %union.tree_node*, %union.tree_node** %type474, align 8, !dbg !3540
  call void @llvm.dbg.value(metadata i32* %caller_unsignedp, metadata !2371, metadata !DIExpression(DW_OP_deref)), !dbg !3532
  %call475 = call i32 @promote_function_mode(%union.tree_node* %111, i32 %bf.cast441, i32* nonnull %caller_unsignedp, %union.tree_node* %112, i32 1) #7, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %call475, metadata !2368, metadata !DIExpression()), !dbg !3532
  %113 = load %union.tree_node*, %union.tree_node** %type443, align 8, !dbg !3542
  call void @llvm.dbg.value(metadata i32* %callee_unsignedp, metadata !2372, metadata !DIExpression(DW_OP_deref)), !dbg !3532
  %call478 = call i32 @promote_function_mode(%union.tree_node* %113, i32 %cond470, i32* nonnull %callee_unsignedp, %union.tree_node* %43, i32 1) #7, !dbg !3543
  call void @llvm.dbg.value(metadata i32 %call478, metadata !2370, metadata !DIExpression()), !dbg !3532
  %cmp479 = icmp eq i32 %bf.cast441, 0, !dbg !3544
  br i1 %cmp479, label %if.end510, label %land.lhs.true481, !dbg !3546

land.lhs.true481:                                 ; preds = %cond.end469
  %cmp482 = icmp eq i32 %call475, %call478, !dbg !3547
  br i1 %cmp482, label %lor.lhs.false484, label %if.then509, !dbg !3548

lor.lhs.false484:                                 ; preds = %land.lhs.true481
  %cmp485 = icmp ne i32 %bf.cast441, %call475, !dbg !3549
  %cmp488 = icmp ne i32 %cond470, %call475, !dbg !3550
  %or.cond8 = or i1 %cmp485, %cmp488, !dbg !3551
  br i1 %or.cond8, label %land.lhs.true490, label %if.end510, !dbg !3551

land.lhs.true490:                                 ; preds = %lor.lhs.false484
  %114 = load i32, i32* %caller_unsignedp, align 4, !dbg !3552
  call void @llvm.dbg.value(metadata i32 %114, metadata !2371, metadata !DIExpression()), !dbg !3532
  %115 = load i32, i32* %callee_unsignedp, align 4, !dbg !3553
  call void @llvm.dbg.value(metadata i32 %115, metadata !2372, metadata !DIExpression()), !dbg !3532
  %cmp491 = icmp eq i32 %114, %115, !dbg !3554
  br i1 %cmp491, label %lor.lhs.false493, label %if.then509, !dbg !3555

lor.lhs.false493:                                 ; preds = %land.lhs.true490
  %idxprom = zext i32 %bf.cast441 to i64, !dbg !3556
  %arrayidx494 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3556
  %116 = load i8, i8* %arrayidx494, align 1, !dbg !3556
  %idxprom500 = zext i32 %cond470 to i64, !dbg !3557
  %arrayidx501 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom500, !dbg !3557
  %117 = load i8, i8* %arrayidx501, align 1, !dbg !3557
  %cmp507 = icmp ult i8 %116, %117, !dbg !3558
  br i1 %cmp507, label %if.then509, label %if.end510, !dbg !3559

if.then509:                                       ; preds = %land.lhs.true490, %land.lhs.true481, %lor.lhs.false493
  call void @llvm.dbg.value(metadata i8 0, metadata !2289, metadata !DIExpression()), !dbg !3240
  store i8 0, i8* %try_tail_call, align 1, !dbg !3560
  br label %if.end510, !dbg !3561

if.end510:                                        ; preds = %cond.end469, %lor.lhs.false484, %if.then509, %lor.lhs.false493
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #6, !dbg !3562
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #6, !dbg !3562
  br label %if.end511, !dbg !3563

if.end511:                                        ; preds = %if.end428, %if.end510
  %118 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), align 8, !dbg !3564
  %conv512 = zext i32 %118 to i64, !dbg !3566
  %cmp513 = icmp ugt i64 %preferred_stack_boundary.1, %conv512, !dbg !3567
  br i1 %cmp513, label %if.then515, label %if.else517, !dbg !3568

if.then515:                                       ; preds = %if.end511
  %conv516 = trunc i64 %preferred_stack_boundary.1 to i32, !dbg !3569
  store i32 %conv516, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), align 8, !dbg !3570
  br label %if.end519, !dbg !3571

if.else517:                                       ; preds = %if.end511
  call void @llvm.dbg.value(metadata i64 %conv512, metadata !2326, metadata !DIExpression()), !dbg !3240
  br label %if.end519

if.end519:                                        ; preds = %if.else517, %if.then515
  %.pre-phi = phi i32 [ %118, %if.else517 ], [ %conv516, %if.then515 ], !dbg !3572
  %preferred_stack_boundary.2 = phi i64 [ %conv512, %if.else517 ], [ %preferred_stack_boundary.1, %if.then515 ], !dbg !3240
  call void @llvm.dbg.value(metadata i64 %preferred_stack_boundary.2, metadata !2326, metadata !DIExpression()), !dbg !3240
  %div = lshr i64 %preferred_stack_boundary.2, 3, !dbg !3573
  call void @llvm.dbg.value(metadata i64 %div, metadata !2327, metadata !DIExpression()), !dbg !3240
  %119 = load i8, i8* %try_tail_call, align 1, !dbg !3574
  call void @llvm.dbg.value(metadata i8 %119, metadata !2289, metadata !DIExpression()), !dbg !3240
  %tobool521 = icmp eq i8 %119, 0, !dbg !3574
  %cond522 = zext i1 %tobool521 to i32, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %cond522, metadata !2290, metadata !DIExpression()), !dbg !3240
  %120 = bitcast i32* %sibcall_failure to i8*, !dbg !3572
  %var591 = getelementptr inbounds %struct.args_size, %struct.args_size* %adjusted_args_size, i64 0, i32 1, !dbg !3575
  %constant615 = getelementptr inbounds %struct.args_size, %struct.args_size* %adjusted_args_size, i64 0, i32 0, !dbg !3576
  %conv684 = trunc i64 %div to i32, !dbg !3578
  %type645 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3585
  %tobool666 = icmp eq i32 %13, 0, !dbg !3588
  %conv668 = sext i32 %13 to i64, !dbg !3588
  %constant587 = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 0, !dbg !3590
  %type796 = bitcast %union.tree_node* %26 to %struct.tree_type*, !dbg !3592
  %mode797 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type796, i64 0, i32 6, !dbg !3592
  %arrayidx854 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !3593
  %conv1000 = sext i32 %call112 to i64, !dbg !3595
  %tobool1008 = icmp ne i32 %structure_value_addr_parm.0, 0, !dbg !3597
  %121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 0, !dbg !3599
  %tobool1189 = icmp ne i32 %ignore, 0, !dbg !3602
  %122 = bitcast i32* %unsignedp to i8*, !dbg !3603
  %123 = sext i32 %add290 to i64, !dbg !3604
  %124 = sext i32 %add290 to i64, !dbg !3604
  %125 = sext i32 %add290 to i64, !dbg !3604
  %126 = sext i32 %add290 to i64, !dbg !3604
  %127 = sext i32 %add290 to i64, !dbg !3604
  %128 = sext i32 %add290 to i64, !dbg !3604
  %129 = sext i32 %add290 to i64, !dbg !3604
  %130 = sext i32 %add290 to i64, !dbg !3604
  %131 = sext i32 %add290 to i64, !dbg !3604
  br label %for.cond523, !dbg !3604

for.cond523:                                      ; preds = %for.inc1669, %if.end519
  %old_stack_pointer_delta.0 = phi i32 [ 0, %if.end519 ], [ %old_stack_pointer_delta.6, %for.inc1669 ], !dbg !3240
  %old_stack_arg_under_construction.0 = phi i32 [ 0, %if.end519 ], [ %old_stack_arg_under_construction.6, %for.inc1669 ], !dbg !3240
  %stack_usage_map_buf.0 = phi i8* [ null, %if.end519 ], [ %stack_usage_map_buf.7, %for.inc1669 ], !dbg !3240
  %save_area.0 = phi %struct.rtx_def* [ null, %if.end519 ], [ %save_area.1, %for.inc1669 ], !dbg !3240
  %structure_value_addr.3 = phi %struct.rtx_def* [ %structure_value_addr.2, %if.end519 ], [ %structure_value_addr.4, %for.inc1669 ], !dbg !3605
  %pass.0 = phi i32 [ %cond522, %if.end519 ], [ %inc1670, %for.inc1669 ], !dbg !3606
  %tail_call_insns.0 = phi %struct.rtx_def* [ null, %if.end519 ], [ %tail_call_insns.2, %for.inc1669 ], !dbg !3240
  %normal_call_insns.0 = phi %struct.rtx_def* [ null, %if.end519 ], [ %normal_call_insns.1, %for.inc1669 ], !dbg !3607
  %target.addr.2 = phi %struct.rtx_def* [ %target.addr.1, %if.end519 ], [ %target.addr.12, %for.inc1669 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2, metadata !2279, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %normal_call_insns.0, metadata !2282, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail_call_insns.0, metadata !2283, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %pass.0, metadata !2290, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %structure_value_addr.3, metadata !2292, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %save_area.0, metadata !2313, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i8* %stack_usage_map_buf.0, metadata !2316, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_arg_under_construction.0, metadata !2319, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_pointer_delta.0, metadata !2322, metadata !DIExpression()), !dbg !3240
  %exitcond = icmp eq i32 %pass.0, 2, !dbg !3608
  br i1 %exitcond, label %for.end1671, label %for.body526, !dbg !3609

for.body526:                                      ; preds = %for.cond523
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120) #6, !dbg !3610
  call void @llvm.dbg.value(metadata i32 0, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 0, i32* %sibcall_failure, align 4, !dbg !3611
  call void @llvm.dbg.value(metadata i32 0, metadata !2378, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.value(metadata i32 0, metadata !2379, metadata !DIExpression()), !dbg !3572
  %cmp527 = icmp eq i32 %pass.0, 0, !dbg !3612
  %132 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3614
  %133 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !3614
  %save_pending_stack_adjust.0 = select i1 %cmp527, i32 %132, i32 0, !dbg !3614
  %save_stack_pointer_delta.0 = select i1 %cmp527, i32 %133, i32 0, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %save_stack_pointer_delta.0, metadata !2379, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.value(metadata i32 %save_pending_stack_adjust.0, metadata !2378, metadata !DIExpression()), !dbg !3572
  %134 = load i32, i32* %flags, align 4, !dbg !3615
  call void @llvm.dbg.value(metadata i32 %134, metadata !2310, metadata !DIExpression()), !dbg !3240
  br i1 %cmp527, label %if.else534, label %if.then532, !dbg !3617

if.then532:                                       ; preds = %for.body526
  %and533 = and i32 %134, -257, !dbg !3618
  call void @llvm.dbg.value(metadata i32 %and533, metadata !2310, metadata !DIExpression()), !dbg !3240
  br label %if.end536, !dbg !3619

if.else534:                                       ; preds = %for.body526
  %or535 = or i32 %134, 256, !dbg !3620
  call void @llvm.dbg.value(metadata i32 %or535, metadata !2310, metadata !DIExpression()), !dbg !3240
  br label %if.end536

if.end536:                                        ; preds = %if.else534, %if.then532
  %storemerge37 = phi i32 [ %or535, %if.else534 ], [ %and533, %if.then532 ], !dbg !3615
  store i32 %storemerge37, i32* %flags, align 4, !dbg !3615
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2309, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2323, metadata !DIExpression()), !dbg !3240
  store %struct.rtx_def* null, %struct.rtx_def** %call_fusage, align 8, !dbg !3621
  call void @start_sequence() #7, !dbg !3622
  %135 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3623
  %cmp537 = icmp sgt i32 %135, 31, !dbg !3625
  br i1 %cmp537, label %if.then556, label %lor.lhs.false539, !dbg !3626

lor.lhs.false539:                                 ; preds = %if.end536
  %cmp540 = icmp sgt i32 %135, 0, !dbg !3627
  br i1 %cmp540, label %land.lhs.true542, label %lor.lhs.false545, !dbg !3628

land.lhs.true542:                                 ; preds = %lor.lhs.false539
  %136 = load i32, i32* %flags, align 4, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %136, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and543 = and i32 %136, 32, !dbg !3630
  %tobool544 = icmp eq i32 %and543, 0, !dbg !3630
  br i1 %tobool544, label %lor.lhs.false545, label %if.then556, !dbg !3631

lor.lhs.false545:                                 ; preds = %land.lhs.true542, %lor.lhs.false539
  %137 = load i32, i32* @flag_exceptions, align 4, !dbg !3632
  %tobool549 = icmp ne i32 %137, 0, !dbg !3632
  %or.cond9 = and i1 %cmp540, %tobool549, !dbg !3633
  br i1 %or.cond9, label %land.lhs.true550, label %lor.lhs.false553, !dbg !3633

land.lhs.true550:                                 ; preds = %lor.lhs.false545
  %138 = load i32, i32* %flags, align 4, !dbg !3634
  call void @llvm.dbg.value(metadata i32 %138, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and551 = and i32 %138, 64, !dbg !3635
  %tobool552 = icmp eq i32 %and551, 0, !dbg !3635
  %or.cond10 = or i1 %tobool552, %cmp527, !dbg !3636
  br i1 %or.cond10, label %if.then556, label %if.end557, !dbg !3636

lor.lhs.false553:                                 ; preds = %lor.lhs.false545
  br i1 %cmp527, label %if.then556, label %if.then559, !dbg !3637

if.then556:                                       ; preds = %land.lhs.true542, %lor.lhs.false553, %land.lhs.true550, %if.end536
  call void @do_pending_stack_adjust() #7, !dbg !3638
  br label %if.end557, !dbg !3638

if.end557:                                        ; preds = %land.lhs.true550, %if.then556
  br i1 %cmp527, label %land.lhs.true569, label %if.then559, !dbg !3639

if.then559:                                       ; preds = %if.end557, %lor.lhs.false553
  call fastcc void @precompute_arguments(i32 %add290, %struct.arg_data* nonnull %65) #8, !dbg !3640
  br i1 %cmp527, label %land.lhs.true569, label %land.lhs.true562, !dbg !3642

land.lhs.true562:                                 ; preds = %if.then559
  %139 = load i32, i32* %flags, align 4, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %139, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and563 = and i32 %139, 16, !dbg !3645
  %tobool564 = icmp eq i32 %and563, 0, !dbg !3645
  br i1 %tobool564, label %if.end566, label %if.then565, !dbg !3646

if.then565:                                       ; preds = %land.lhs.true562
  call void @start_sequence() #7, !dbg !3647
  br label %if.end566, !dbg !3647

if.end566:                                        ; preds = %land.lhs.true562, %if.then565
  br i1 false, label %if.end566.land.lhs.true569_crit_edge, label %if.end572, !dbg !3648

if.end566.land.lhs.true569_crit_edge:             ; preds = %if.end566
  br label %land.lhs.true569, !dbg !3648

land.lhs.true569:                                 ; preds = %if.end566.land.lhs.true569_crit_edge, %if.then559, %if.end557
  %140 = load %union.tree_node*, %union.tree_node** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 9), align 8, !dbg !3650
  %tobool570 = icmp eq %union.tree_node* %140, null, !dbg !3651
  br i1 %tobool570, label %if.end572, label %if.then571, !dbg !3652

if.then571:                                       ; preds = %land.lhs.true569
  call void @stack_protect_epilogue() #7, !dbg !3653
  br label %if.end572, !dbg !3653

if.end572:                                        ; preds = %land.lhs.true569, %if.then571, %if.end566
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !3654
  %conv579 = select i1 %cmp527, i32 0, i32 %.pre-phi, !dbg !3655
  call void @llvm.dbg.value(metadata %struct.args_size* %adjusted_args_size, metadata !2303, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call580 = call fastcc i32 @compute_argument_block_size(i32 %call112, %struct.args_size* nonnull %adjusted_args_size, %union.tree_node* %call14, %union.tree_node* %fntype.0, i32 %conv579) #8, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %call580, metadata !2304, metadata !DIExpression()), !dbg !3240
  %141 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !3657
  %142 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3658
  %sub581 = sub nsw i32 %141, %142, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %sub581, metadata !2317, metadata !DIExpression()), !dbg !3240
  br i1 %cmp527, label %if.then584, label %if.else590, !dbg !3660

if.then584:                                       ; preds = %if.end572
  %143 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !3661
  call void @llvm.dbg.value(metadata %struct.rtx_def* %143, metadata !2309, metadata !DIExpression()), !dbg !3240
  %144 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 2), align 8, !dbg !3662
  %conv585 = sext i32 %144 to i64, !dbg !3663
  %call586 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %143, i64 %conv585) #7, !dbg !3664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call586, metadata !2309, metadata !DIExpression()), !dbg !3240
  %145 = load i64, i64* %constant587, align 8, !dbg !3665
  %conv588 = trunc i64 %145 to i32, !dbg !3666
  %call589 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %conv588) #7, !dbg !3667
  store %struct.simple_bitmap_def* %call589, %struct.simple_bitmap_def** @stored_args_map, align 8, !dbg !3668
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call589) #7, !dbg !3669
  br label %if.end706, !dbg !3670

if.else590:                                       ; preds = %if.end572
  %146 = load %union.tree_node*, %union.tree_node** %var591, align 8, !dbg !3671
  %cmp592 = icmp eq %union.tree_node* %146, null, !dbg !3672
  br i1 %cmp592, label %if.else624, label %if.then594, !dbg !3673

if.then594:                                       ; preds = %if.else590
  %147 = load %struct.rtx_def*, %struct.rtx_def** %old_stack_level, align 8, !dbg !3674
  call void @llvm.dbg.value(metadata %struct.rtx_def* %147, metadata !2318, metadata !DIExpression()), !dbg !3240
  %cmp595 = icmp eq %struct.rtx_def* %147, null, !dbg !3676
  br i1 %cmp595, label %if.then597, label %if.end598, !dbg !3677

if.then597:                                       ; preds = %if.then594
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_stack_level, metadata !2318, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @emit_stack_save(i32 0, %struct.rtx_def** nonnull %old_stack_level, %struct.rtx_def* null) #7, !dbg !3678
  %148 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %148, metadata !2322, metadata !DIExpression()), !dbg !3240
  %149 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3681
  call void @llvm.dbg.value(metadata i32 %149, metadata !2320, metadata !DIExpression()), !dbg !3240
  store i32 %149, i32* %old_pending_adj, align 4, !dbg !3682
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3683
  %150 = load i32, i32* @stack_arg_under_construction, align 4, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %150, metadata !2319, metadata !DIExpression()), !dbg !3240
  store i32 0, i32* @stack_arg_under_construction, align 4, !dbg !3685
  %.pre70 = load %union.tree_node*, %union.tree_node** %var591, align 8, !dbg !3686
  br label %if.end598, !dbg !3687

if.end598:                                        ; preds = %if.then597, %if.then594
  %151 = phi %union.tree_node* [ %.pre70, %if.then597 ], [ %146, %if.then594 ], !dbg !3686
  %old_stack_pointer_delta.1 = phi i32 [ %148, %if.then597 ], [ %old_stack_pointer_delta.0, %if.then594 ], !dbg !3240
  %old_stack_arg_under_construction.1 = phi i32 [ %150, %if.then597 ], [ %old_stack_arg_under_construction.0, %if.then594 ], !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_arg_under_construction.1, metadata !2319, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_pointer_delta.1, metadata !2322, metadata !DIExpression()), !dbg !3240
  %cmp600 = icmp eq %union.tree_node* %151, null, !dbg !3686
  br i1 %cmp600, label %cond.true602, label %cond.false605, !dbg !3686

cond.true602:                                     ; preds = %if.end598
  %152 = load i64, i64* %constant615, align 8, !dbg !3686
  %call604 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %152) #7, !dbg !3686
  br label %cond.end621, !dbg !3686

cond.false605:                                    ; preds = %if.end598
  br i1 false, label %cond.true609, label %cond.false612, !dbg !3686

cond.true609:                                     ; preds = %cond.false605
  br label %cond.end618, !dbg !3686

cond.false612:                                    ; preds = %cond.false605
  %153 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !3686
  %call614 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %153, %union.tree_node* nonnull %151) #7, !dbg !3686
  %154 = load i64, i64* %constant615, align 8, !dbg !3686
  %call616 = call %union.tree_node* @size_int_kind(i64 %154, i32 1) #7, !dbg !3686
  %call617 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call614, %union.tree_node* %call616) #7, !dbg !3686
  br label %cond.end618, !dbg !3686

cond.end618:                                      ; preds = %cond.false612, %cond.true609
  %cond619 = phi %union.tree_node* [ undef, %cond.true609 ], [ %call617, %cond.false612 ], !dbg !3686
  %call620 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond619) #8, !dbg !3686
  br label %cond.end621, !dbg !3686

cond.end621:                                      ; preds = %cond.end618, %cond.true602
  %cond622 = phi %struct.rtx_def* [ %call604, %cond.true602 ], [ %call620, %cond.end618 ], !dbg !3686
  %call623 = call %struct.rtx_def* @push_block(%struct.rtx_def* %cond622, i32 0, i32 0) #7, !dbg !3688
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call623, metadata !2309, metadata !DIExpression()), !dbg !3240
  br label %if.end706, !dbg !3689

if.else624:                                       ; preds = %if.else590
  %155 = load i64, i64* %constant615, align 8, !dbg !3690
  %conv626 = trunc i64 %155 to i32, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %conv626, metadata !2384, metadata !DIExpression()), !dbg !3692
  %156 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 6), align 8, !dbg !3693
  %cmp627 = icmp slt i32 %156, %conv626, !dbg !3695
  br i1 %cmp627, label %if.then629, label %if.end630, !dbg !3696

if.then629:                                       ; preds = %if.else624
  store i32 %conv626, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 6), align 8, !dbg !3697
  br label %if.end630, !dbg !3698

if.end630:                                        ; preds = %if.then629, %if.else624
  %157 = load i32, i32* %must_preallocate, align 4, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %157, metadata !2307, metadata !DIExpression()), !dbg !3240
  %tobool631 = icmp eq i32 %157, 0, !dbg !3699
  br i1 %tobool631, label %if.end706, label %if.then632, !dbg !3700

if.then632:                                       ; preds = %if.end630
  %158 = load i32, i32* @target_flags, align 4, !dbg !3701
  %and633 = and i32 %158, 4, !dbg !3701
  %cmp634 = icmp eq i32 %and633, 0, !dbg !3701
  br i1 %cmp634, label %lor.lhs.false636, label %if.then640, !dbg !3701

lor.lhs.false636:                                 ; preds = %if.then632
  %call637 = call i32 @ix86_cfun_abi() #7, !dbg !3701
  %cmp638 = icmp eq i32 %call637, 1, !dbg !3701
  br i1 %cmp638, label %if.then640, label %if.else680, !dbg !3702

if.then640:                                       ; preds = %if.then632, %lor.lhs.false636
  br i1 %tobool15, label %cond.end646, label %cond.false643, !dbg !3703

cond.false643:                                    ; preds = %if.then640
  %159 = load %union.tree_node*, %union.tree_node** %type645, align 8, !dbg !3703
  br label %cond.end646, !dbg !3703

cond.end646:                                      ; preds = %if.then640, %cond.false643
  %cond647 = phi %union.tree_node* [ %159, %cond.false643 ], [ %fntype.0, %if.then640 ], !dbg !3703
  %call648 = call i32 @ix86_function_type_abi(%union.tree_node* %cond647) #7, !dbg !3703
  %cmp649 = icmp eq i32 %call648, 1, !dbg !3703
  %add652 = select i1 %cmp649, i32 0, i32 %call112, !dbg !3704
  %spec.select11 = add nsw i32 %add652, %conv626, !dbg !3704
  call void @llvm.dbg.value(metadata i32 %spec.select11, metadata !2384, metadata !DIExpression()), !dbg !3692
  %cmp654 = icmp sgt i32 %13, %spec.select11, !dbg !3705
  %cond659 = select i1 %cmp654, i32 %13, i32 %spec.select11, !dbg !3705
  store i32 %cond659, i32* @highest_outgoing_arg_in_use, align 4, !dbg !3706
  %tobool660 = icmp eq i8* %stack_usage_map_buf.0, null, !dbg !3707
  br i1 %tobool660, label %if.end662, label %if.then661, !dbg !3709

if.then661:                                       ; preds = %cond.end646
  call void @free(i8* nonnull %stack_usage_map_buf.0) #7, !dbg !3710
  %.pre71 = load i32, i32* @highest_outgoing_arg_in_use, align 4, !dbg !3711
  br label %if.end662, !dbg !3710

if.end662:                                        ; preds = %cond.end646, %if.then661
  %160 = phi i32 [ %cond659, %cond.end646 ], [ %.pre71, %if.then661 ], !dbg !3711
  %conv663 = sext i32 %160 to i64, !dbg !3711
  %call665 = call i8* @xmalloc(i64 %conv663) #7, !dbg !3711
  call void @llvm.dbg.value(metadata i8* %call665, metadata !2316, metadata !DIExpression()), !dbg !3240
  store i8* %call665, i8** @stack_usage_map, align 8, !dbg !3712
  br i1 %tobool666, label %if.end670, label %if.then667, !dbg !3713

if.then667:                                       ; preds = %if.end662
  %call669 = call i8* @memcpy(i8* %call665, i8* %14, i64 %conv668) #7, !dbg !3714
  br label %if.end670, !dbg !3714

if.end670:                                        ; preds = %if.end662, %if.then667
  %161 = load i32, i32* @highest_outgoing_arg_in_use, align 4, !dbg !3715
  %cmp671 = icmp eq i32 %161, %13, !dbg !3717
  br i1 %cmp671, label %if.end679, label %if.then673, !dbg !3718

if.then673:                                       ; preds = %if.end670
  %162 = load i8*, i8** @stack_usage_map, align 8, !dbg !3719
  %arrayidx675 = getelementptr inbounds i8, i8* %162, i64 %conv668, !dbg !3719
  %sub676 = sub nsw i32 %161, %13, !dbg !3720
  %conv677 = sext i32 %sub676 to i64, !dbg !3721
  %call678 = call i8* @memset(i8* %arrayidx675, i32 0, i64 %conv677) #7, !dbg !3722
  br label %if.end679, !dbg !3722

if.end679:                                        ; preds = %if.end670, %if.then673
  call void @llvm.dbg.value(metadata i32 0, metadata !2384, metadata !DIExpression()), !dbg !3692
  %163 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !3723
  call void @llvm.dbg.value(metadata %struct.rtx_def* %163, metadata !2309, metadata !DIExpression()), !dbg !3240
  br label %if.end706, !dbg !3724

if.else680:                                       ; preds = %lor.lhs.false636
  %164 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !3725
  %cmp681 = icmp eq i32 %164, 0, !dbg !3726
  br i1 %cmp681, label %if.then683, label %if.end693, !dbg !3727

if.then683:                                       ; preds = %if.else680
  call void @llvm.dbg.value(metadata %struct.args_size* %adjusted_args_size, metadata !2303, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call685 = call fastcc i32 @combine_pending_stack_adjustment_and_call(i32 %call580, %struct.args_size* nonnull %adjusted_args_size, i32 %conv684) #8, !dbg !3728
  call void @llvm.dbg.value(metadata i32 %call685, metadata !2384, metadata !DIExpression()), !dbg !3692
  %sub686 = sub nsw i32 %call580, %call685, !dbg !3729
  call void @llvm.dbg.value(metadata i32 %sub686, metadata !2384, metadata !DIExpression()), !dbg !3692
  %cmp687 = icmp slt i32 %sub686, 0, !dbg !3730
  br i1 %cmp687, label %if.then689, label %if.else691, !dbg !3732

if.then689:                                       ; preds = %if.then683
  %sub690 = sub nsw i32 0, %sub686, !dbg !3733
  store i32 %sub690, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3735
  call void @do_pending_stack_adjust() #7, !dbg !3736
  call void @llvm.dbg.value(metadata i32 0, metadata !2384, metadata !DIExpression()), !dbg !3692
  br label %if.end693, !dbg !3737

if.else691:                                       ; preds = %if.then683
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3738
  br label %if.end693

if.end693:                                        ; preds = %if.then689, %if.else691, %if.else680
  %needed.2 = phi i32 [ %conv626, %if.else680 ], [ 0, %if.then689 ], [ %sub686, %if.else691 ], !dbg !3692
  call void @llvm.dbg.value(metadata i32 %needed.2, metadata !2384, metadata !DIExpression()), !dbg !3692
  %cmp694 = icmp eq i32 %needed.2, 0, !dbg !3739
  br i1 %cmp694, label %if.then696, label %if.else697, !dbg !3741

if.then696:                                       ; preds = %if.end693
  %165 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !3742
  call void @llvm.dbg.value(metadata %struct.rtx_def* %165, metadata !2309, metadata !DIExpression()), !dbg !3240
  br label %if.end701, !dbg !3743

if.else697:                                       ; preds = %if.end693
  %conv698 = sext i32 %needed.2 to i64, !dbg !3744
  %call699 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv698) #7, !dbg !3744
  %call700 = call %struct.rtx_def* @push_block(%struct.rtx_def* %call699, i32 0, i32 0) #7, !dbg !3746
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call700, metadata !2309, metadata !DIExpression()), !dbg !3240
  br label %if.end701

if.end701:                                        ; preds = %if.else697, %if.then696
  %argblock.0 = phi %struct.rtx_def* [ %165, %if.then696 ], [ %call700, %if.else697 ], !dbg !3747
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock.0, metadata !2309, metadata !DIExpression()), !dbg !3240
  %call702 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %argblock.0) #7, !dbg !3748
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call702, metadata !2309, metadata !DIExpression()), !dbg !3240
  br label %if.end706

if.end706:                                        ; preds = %if.end630, %cond.end621, %if.end679, %if.end701, %if.then584
  %old_stack_pointer_delta.3 = phi i32 [ %old_stack_pointer_delta.0, %if.then584 ], [ %old_stack_pointer_delta.1, %cond.end621 ], [ %old_stack_pointer_delta.0, %if.end679 ], [ %old_stack_pointer_delta.0, %if.end701 ], [ %old_stack_pointer_delta.0, %if.end630 ], !dbg !3240
  %old_stack_arg_under_construction.3 = phi i32 [ %old_stack_arg_under_construction.0, %if.then584 ], [ %old_stack_arg_under_construction.1, %cond.end621 ], [ %old_stack_arg_under_construction.0, %if.end679 ], [ %old_stack_arg_under_construction.0, %if.end701 ], [ %old_stack_arg_under_construction.0, %if.end630 ], !dbg !3240
  %stack_usage_map_buf.4 = phi i8* [ %stack_usage_map_buf.0, %if.then584 ], [ %stack_usage_map_buf.0, %cond.end621 ], [ %call665, %if.end679 ], [ %stack_usage_map_buf.0, %if.end701 ], [ %stack_usage_map_buf.0, %if.end630 ], !dbg !3749
  %argblock.4 = phi %struct.rtx_def* [ %call586, %if.then584 ], [ %call623, %cond.end621 ], [ %163, %if.end679 ], [ %call702, %if.end701 ], [ null, %if.end630 ], !dbg !3750
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock.4, metadata !2309, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i8* %stack_usage_map_buf.4, metadata !2316, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_arg_under_construction.3, metadata !2319, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_pointer_delta.3, metadata !2322, metadata !DIExpression()), !dbg !3240
  %166 = load i32, i32* @target_flags, align 4, !dbg !3751
  %and707 = and i32 %166, 4, !dbg !3751
  %cmp708 = icmp eq i32 %and707, 0, !dbg !3751
  br i1 %cmp708, label %lor.lhs.false710, label %if.then714, !dbg !3751

lor.lhs.false710:                                 ; preds = %if.end706
  %call711 = call i32 @ix86_cfun_abi() #7, !dbg !3751
  %cmp712 = icmp eq i32 %call711, 1, !dbg !3751
  br i1 %cmp712, label %if.then714, label %if.end759, !dbg !3752

if.then714:                                       ; preds = %if.end706, %lor.lhs.false710
  %167 = load i32, i32* @stack_arg_under_construction, align 4, !dbg !3753
  %tobool715 = icmp eq i32 %167, 0, !dbg !3753
  br i1 %tobool715, label %if.end745, label %if.then716, !dbg !3754

if.then716:                                       ; preds = %if.then714
  %168 = load i64, i64* %constant615, align 8, !dbg !3755
  br i1 %tobool15, label %cond.end723, label %cond.false720, !dbg !3755

cond.false720:                                    ; preds = %if.then716
  %169 = load %union.tree_node*, %union.tree_node** %type645, align 8, !dbg !3755
  br label %cond.end723, !dbg !3755

cond.end723:                                      ; preds = %if.then716, %cond.false720
  %cond724 = phi %union.tree_node* [ %169, %cond.false720 ], [ %fntype.0, %if.then716 ], !dbg !3755
  %call725 = call i32 @ix86_function_type_abi(%union.tree_node* %cond724) #7, !dbg !3755
  %cmp726 = icmp eq i32 %call725, 1, !dbg !3755
  %.call112 = select i1 %cmp726, i32 0, i32 %call112, !dbg !3755
  %conv732 = sext i32 %.call112 to i64, !dbg !3755
  %add733 = add nsw i64 %168, %conv732, !dbg !3755
  %call734 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add733) #7, !dbg !3755
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call734, metadata !2388, metadata !DIExpression()), !dbg !3756
  %170 = load %struct.rtx_def*, %struct.rtx_def** %old_stack_level, align 8, !dbg !3757
  call void @llvm.dbg.value(metadata %struct.rtx_def* %170, metadata !2318, metadata !DIExpression()), !dbg !3240
  %cmp735 = icmp eq %struct.rtx_def* %170, null, !dbg !3759
  br i1 %cmp735, label %if.then737, label %if.end743, !dbg !3760

if.then737:                                       ; preds = %cond.end723
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_stack_level, metadata !2318, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @emit_stack_save(i32 0, %struct.rtx_def** nonnull %old_stack_level, %struct.rtx_def* null) #7, !dbg !3761
  %171 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !3763
  call void @llvm.dbg.value(metadata i32 %171, metadata !2322, metadata !DIExpression()), !dbg !3240
  %172 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3764
  call void @llvm.dbg.value(metadata i32 %172, metadata !2320, metadata !DIExpression()), !dbg !3240
  store i32 %172, i32* %old_pending_adj, align 4, !dbg !3765
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3766
  %173 = load i32, i32* @stack_arg_under_construction, align 4, !dbg !3767
  call void @llvm.dbg.value(metadata i32 %173, metadata !2319, metadata !DIExpression()), !dbg !3240
  store i32 0, i32* @stack_arg_under_construction, align 4, !dbg !3768
  %tobool738 = icmp eq i8* %stack_usage_map_buf.4, null, !dbg !3769
  br i1 %tobool738, label %if.end740, label %if.then739, !dbg !3771

if.then739:                                       ; preds = %if.then737
  call void @free(i8* nonnull %stack_usage_map_buf.4) #7, !dbg !3772
  br label %if.end740, !dbg !3772

if.end740:                                        ; preds = %if.then737, %if.then739
  %174 = load i32, i32* @highest_outgoing_arg_in_use, align 4, !dbg !3773
  %conv741 = sext i32 %174 to i64, !dbg !3773
  %call742 = call i8* @xcalloc(i64 %conv741, i64 1) #7, !dbg !3773
  call void @llvm.dbg.value(metadata i8* %call742, metadata !2316, metadata !DIExpression()), !dbg !3240
  store i8* %call742, i8** @stack_usage_map, align 8, !dbg !3774
  store i32 0, i32* @highest_outgoing_arg_in_use, align 4, !dbg !3775
  br label %if.end743, !dbg !3776

if.end743:                                        ; preds = %if.end740, %cond.end723
  %old_stack_pointer_delta.4 = phi i32 [ %171, %if.end740 ], [ %old_stack_pointer_delta.3, %cond.end723 ], !dbg !3240
  %old_stack_arg_under_construction.4 = phi i32 [ %173, %if.end740 ], [ %old_stack_arg_under_construction.3, %cond.end723 ], !dbg !3240
  %stack_usage_map_buf.5 = phi i8* [ %call742, %if.end740 ], [ %stack_usage_map_buf.4, %cond.end723 ], !dbg !3240
  call void @llvm.dbg.value(metadata i8* %stack_usage_map_buf.5, metadata !2316, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_arg_under_construction.4, metadata !2319, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_pointer_delta.4, metadata !2322, metadata !DIExpression()), !dbg !3240
  %call744 = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call734, %struct.rtx_def* null, i32 8) #7, !dbg !3777
  br label %if.end745, !dbg !3778

if.end745:                                        ; preds = %if.then714, %if.end743
  %old_stack_pointer_delta.5 = phi i32 [ %old_stack_pointer_delta.4, %if.end743 ], [ %old_stack_pointer_delta.3, %if.then714 ], !dbg !3240
  %old_stack_arg_under_construction.5 = phi i32 [ %old_stack_arg_under_construction.4, %if.end743 ], [ %old_stack_arg_under_construction.3, %if.then714 ], !dbg !3240
  %stack_usage_map_buf.6 = phi i8* [ %stack_usage_map_buf.5, %if.end743 ], [ %stack_usage_map_buf.4, %if.then714 ], !dbg !3240
  call void @llvm.dbg.value(metadata i8* %stack_usage_map_buf.6, metadata !2316, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_arg_under_construction.5, metadata !2319, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_pointer_delta.5, metadata !2322, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 0, metadata !2325, metadata !DIExpression()), !dbg !3240
  br label %for.cond746, !dbg !3779

for.cond746:                                      ; preds = %for.inc756, %if.end745
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc756 ], [ 0, %if.end745 ], !dbg !3781
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp747 = icmp slt i64 %indvars.iv, %123, !dbg !3782
  br i1 %cmp747, label %for.body749, label %if.end759.loopexit, !dbg !3784

for.body749:                                      ; preds = %for.cond746
  %pass_on_stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv, i32 9, !dbg !3785
  %175 = load i32, i32* %pass_on_stack, align 8, !dbg !3785
  %tobool752 = icmp eq i32 %175, 0, !dbg !3787
  br i1 %tobool752, label %for.inc756, label %if.then753, !dbg !3788

if.then753:                                       ; preds = %for.body749
  %call754 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %argblock.4) #7, !dbg !3789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call754, metadata !2309, metadata !DIExpression()), !dbg !3240
  br label %if.end759, !dbg !3791

for.inc756:                                       ; preds = %for.body749
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3792
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond746, !dbg !3793, !llvm.loop !3794

if.end759.loopexit:                               ; preds = %for.cond746
  br label %if.end759, !dbg !3796

if.end759:                                        ; preds = %if.end759.loopexit, %if.then753, %lor.lhs.false710
  %old_stack_pointer_delta.6 = phi i32 [ %old_stack_pointer_delta.3, %lor.lhs.false710 ], [ %old_stack_pointer_delta.5, %if.then753 ], [ %old_stack_pointer_delta.5, %if.end759.loopexit ], !dbg !3240
  %old_stack_arg_under_construction.6 = phi i32 [ %old_stack_arg_under_construction.3, %lor.lhs.false710 ], [ %old_stack_arg_under_construction.5, %if.then753 ], [ %old_stack_arg_under_construction.5, %if.end759.loopexit ], !dbg !3240
  %stack_usage_map_buf.7 = phi i8* [ %stack_usage_map_buf.4, %lor.lhs.false710 ], [ %stack_usage_map_buf.6, %if.then753 ], [ %stack_usage_map_buf.6, %if.end759.loopexit ], !dbg !3240
  %argblock.6 = phi %struct.rtx_def* [ %argblock.4, %lor.lhs.false710 ], [ %call754, %if.then753 ], [ %argblock.4, %if.end759.loopexit ], !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock.6, metadata !2309, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i8* %stack_usage_map_buf.7, metadata !2316, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_arg_under_construction.6, metadata !2319, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %old_stack_pointer_delta.6, metadata !2322, metadata !DIExpression()), !dbg !3240
  call fastcc void @compute_argument_addresses(%struct.arg_data* nonnull %65, %struct.rtx_def* %argblock.6, i32 %add290) #8, !dbg !3796
  %cmp760 = icmp eq %struct.rtx_def* %argblock.6, null, !dbg !3797
  br i1 %cmp760, label %land.lhs.true762, label %if.end784, !dbg !3799

land.lhs.true762:                                 ; preds = %if.end759
  %176 = load i64, i64* %constant615, align 8, !dbg !3800
  %conv764 = sext i32 %call580 to i64, !dbg !3801
  %cmp765 = icmp eq i64 %176, %conv764, !dbg !3802
  br i1 %cmp765, label %if.end784, label %if.then767, !dbg !3803

if.then767:                                       ; preds = %land.lhs.true762
  %177 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3804
  %tobool768 = icmp eq i32 %177, 0, !dbg !3804
  %178 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !3807
  %tobool770 = icmp ne i32 %178, 0, !dbg !3807
  %or.cond12 = or i1 %tobool768, %tobool770, !dbg !3808
  br i1 %or.cond12, label %if.else774, label %if.then771, !dbg !3808

if.then771:                                       ; preds = %if.then767
  call void @llvm.dbg.value(metadata %struct.args_size* %adjusted_args_size, metadata !2303, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call773 = call fastcc i32 @combine_pending_stack_adjustment_and_call(i32 %call580, %struct.args_size* nonnull %adjusted_args_size, i32 %conv684) #8, !dbg !3809
  store i32 %call773, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !3811
  call void @do_pending_stack_adjust() #7, !dbg !3812
  br label %if.end784, !dbg !3813

if.else774:                                       ; preds = %if.then767
  br i1 true, label %if.then777, label %if.else774.if.end784_crit_edge, !dbg !3814

if.else774.if.end784_crit_edge:                   ; preds = %if.else774
  br label %if.end784, !dbg !3814

if.then777:                                       ; preds = %if.else774
  %sub780 = sub nsw i64 %176, %conv764, !dbg !3815
  %call781 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub780) #7, !dbg !3815
  call void @anti_adjust_stack(%struct.rtx_def* %call781) #7, !dbg !3817
  br label %if.end784, !dbg !3817

if.end784:                                        ; preds = %if.else774.if.end784_crit_edge, %land.lhs.true762, %if.then771, %if.then777, %if.end759
  %179 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !3818
  %add785 = add nsw i32 %179, 1, !dbg !3818
  store i32 %add785, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !3818
  %call786 = call fastcc %struct.rtx_def* @rtx_for_function_call(%union.tree_node* %call14, %union.tree_node* %19) #8, !dbg !3819
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call786, metadata !2281, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2291, metadata !DIExpression()), !dbg !3240
  %bf.load788 = load i64, i64* %28, align 8, !dbg !3820
  %bf.cast79038 = and i64 %bf.load788, 65535, !dbg !3820
  %cmp791 = icmp eq i64 %bf.cast79038, 14, !dbg !3820
  br i1 %cmp791, label %cond.true793, label %cond.false795, !dbg !3820

cond.true793:                                     ; preds = %if.end784
  %call794 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !3820
  br label %cond.end801, !dbg !3820

cond.false795:                                    ; preds = %if.end784
  %bf.load798 = load i32, i32* %mode797, align 4, !dbg !3820
  %bf.lshr799 = lshr i32 %bf.load798, 16, !dbg !3820
  %bf.clear800 = and i32 %bf.lshr799, 255, !dbg !3820
  br label %cond.end801, !dbg !3820

cond.end801:                                      ; preds = %cond.false795, %cond.true793
  %cond802 = phi i32 [ %call794, %cond.true793 ], [ %bf.clear800, %cond.false795 ], !dbg !3820
  %cmp803 = icmp eq i32 %cond802, 0, !dbg !3821
  %tobool806 = icmp ne %struct.rtx_def* %structure_value_addr.3, null, !dbg !3822
  %or.cond13 = or i1 %cmp803, %tobool806, !dbg !3823
  br i1 %or.cond13, label %if.end851, label %if.then807, !dbg !3823

if.then807:                                       ; preds = %cond.end801
  %conv816 = zext i1 %cmp527 to i32, !dbg !3824
  %call817 = call %struct.rtx_def* @hard_function_value(%union.tree_node* %26, %union.tree_node* %call14, %union.tree_node* %fntype.0, i32 %conv816) #7, !dbg !3826
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call817, metadata !2291, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call817, metadata !2291, metadata !DIExpression()), !dbg !3240
  %180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call817, i64 0, i32 0, !dbg !3827
  %bf.load819 = load i32, i32* %180, align 8, !dbg !3827
  %bf.clear820 = and i32 %bf.load819, 65535, !dbg !3827
  %cmp821 = icmp eq i32 %bf.clear820, 15, !dbg !3828
  br i1 %cmp821, label %if.then823, label %if.end851, !dbg !3829

if.then823:                                       ; preds = %if.then807
  %arrayidx826 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call817, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3830
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx826 to %struct.rtvec_def**, !dbg !3830
  %181 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3830
  %arrayidx828 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %181, i64 0, i32 1, i64 0, !dbg !3830
  %182 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx828, align 8, !dbg !3830
  call void @llvm.dbg.value(metadata %struct.rtx_def* %182, metadata !2393, metadata !DIExpression()), !dbg !3831
  %arrayidx831 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3832
  %rt_rtx832 = bitcast %union.rtunion_def* %arrayidx831 to %struct.rtx_def**, !dbg !3832
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx832, align 8, !dbg !3832
  call void @llvm.dbg.value(metadata %struct.rtx_def* %183, metadata !2398, metadata !DIExpression()), !dbg !3831
  %184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3833
  %rt_rtx836 = bitcast %union.rtunion_def* %184 to %struct.rtx_def**, !dbg !3833
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx836, align 8, !dbg !3833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %185, metadata !2399, metadata !DIExpression()), !dbg !3831
  %186 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3834
  %cmp837 = icmp eq %struct.rtx_def* %185, %186, !dbg !3836
  br i1 %cmp837, label %land.lhs.true839, label %if.end851, !dbg !3837

land.lhs.true839:                                 ; preds = %if.then823
  %187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i64 0, i32 0, !dbg !3838
  %bf.load840 = load i32, i32* %187, align 8, !dbg !3838
  %bf.lshr84163 = xor i32 %bf.load840, %bf.load819, !dbg !3839
  %188 = and i32 %bf.lshr84163, 16711680, !dbg !3839
  %cmp846 = icmp eq i32 %188, 0, !dbg !3839
  %spec.select14 = select i1 %cmp846, %struct.rtx_def* %183, %struct.rtx_def* %call817, !dbg !3840
  br label %if.end851, !dbg !3840

if.end851:                                        ; preds = %land.lhs.true839, %if.then807, %if.then823, %cond.end801
  %valreg.3 = phi %struct.rtx_def* [ null, %cond.end801 ], [ %call817, %if.then807 ], [ %call817, %if.then823 ], [ %spec.select14, %land.lhs.true839 ], !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %valreg.3, metadata !2291, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32* %reg_parm_seen, metadata !2306, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call fastcc void @precompute_register_parameters(i32 %add290, %struct.arg_data* nonnull %65, i32* nonnull %reg_parm_seen) #8, !dbg !3841
  %189 = load %union.tree_node*, %union.tree_node** %arrayidx854, align 8, !dbg !3842
  %tobool855 = icmp eq %union.tree_node* %189, null, !dbg !3842
  br i1 %tobool855, label %if.end862, label %if.then856, !dbg !3843

if.then856:                                       ; preds = %if.end851
  %call860 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* nonnull %189) #8, !dbg !3844
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call860, metadata !2328, metadata !DIExpression()), !dbg !3240
  br label %if.end862, !dbg !3845

if.end862:                                        ; preds = %if.end851, %if.then856
  %static_chain_value.0 = phi %struct.rtx_def* [ %call860, %if.then856 ], [ null, %if.end851 ], !dbg !3593
  call void @llvm.dbg.value(metadata %struct.rtx_def* %static_chain_value.0, metadata !2328, metadata !DIExpression()), !dbg !3240
  %190 = load i32, i32* @target_flags, align 4, !dbg !3846
  %and863 = and i32 %190, 4, !dbg !3846
  %cmp864 = icmp eq i32 %and863, 0, !dbg !3846
  br i1 %cmp864, label %lor.lhs.false866, label %land.lhs.true870, !dbg !3846

lor.lhs.false866:                                 ; preds = %if.end862
  %call867 = call i32 @ix86_cfun_abi() #7, !dbg !3846
  %cmp868 = icmp eq i32 %call867, 1, !dbg !3846
  %tobool871 = icmp ne i32 %pass.0, 0, !dbg !3848
  %or.cond15 = and i1 %cmp868, %tobool871, !dbg !3849
  br i1 %or.cond15, label %if.then872, label %if.end874, !dbg !3849

land.lhs.true870:                                 ; preds = %if.end862
  br i1 %cmp527, label %if.end874, label %if.then872, !dbg !3850

if.then872:                                       ; preds = %land.lhs.true870, %lor.lhs.false866
  call void @llvm.dbg.value(metadata i32* %low_to_save, metadata !2311, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.dbg.value(metadata i32* %high_to_save, metadata !2312, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call873 = call fastcc %struct.rtx_def* @save_fixed_argument_area(i32 %call112, %struct.rtx_def* %argblock.6, i32* nonnull %low_to_save, i32* nonnull %high_to_save) #8, !dbg !3851
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call873, metadata !2313, metadata !DIExpression()), !dbg !3240
  br label %if.end874, !dbg !3852

if.end874:                                        ; preds = %land.lhs.true870, %if.then872, %lor.lhs.false866
  %save_area.1 = phi %struct.rtx_def* [ %call873, %if.then872 ], [ %save_area.0, %land.lhs.true870 ], [ %save_area.0, %lor.lhs.false866 ], !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %save_area.1, metadata !2313, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 0, metadata !2325, metadata !DIExpression()), !dbg !3240
  br i1 %cmp527, label %if.end874.split.us, label %if.end874.if.end874.split_crit_edge, !dbg !3853

if.end874.if.end874.split_crit_edge:              ; preds = %if.end874
  br label %for.cond875, !dbg !3853

if.end874.split.us:                               ; preds = %if.end874
  br label %for.cond875.us, !dbg !3853

for.cond875.us:                                   ; preds = %for.inc932.us, %if.end874.split.us
  %indvars.iv77 = phi i64 [ %indvars.iv.next78, %for.inc932.us ], [ 0, %if.end874.split.us ], !dbg !3854
  call void @llvm.dbg.value(metadata i64 %indvars.iv77, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp876.us = icmp slt i64 %indvars.iv77, %125, !dbg !3855
  br i1 %cmp876.us, label %for.body878.us, label %for.end934.us-lcssa.us, !dbg !3856

for.body878.us:                                   ; preds = %for.cond875.us
  %reg.us = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv77, i32 4, !dbg !3857
  %191 = load %struct.rtx_def*, %struct.rtx_def** %reg.us, align 8, !dbg !3857
  %cmp881.us = icmp eq %struct.rtx_def* %191, null, !dbg !3858
  br i1 %cmp881.us, label %if.then888.us, label %lor.lhs.false883.us, !dbg !3859

lor.lhs.false883.us:                              ; preds = %for.body878.us
  %pass_on_stack886.us = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv77, i32 9, !dbg !3860
  %192 = load i32, i32* %pass_on_stack886.us, align 8, !dbg !3860
  %tobool887.us = icmp eq i32 %192, 0, !dbg !3861
  br i1 %tobool887.us, label %if.end907.us, label %if.then888.us, !dbg !3862

if.then888.us:                                    ; preds = %lor.lhs.false883.us, %for.body878.us
  %call889.us = call %struct.rtx_def* @get_last_insn() #7, !dbg !3863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call889.us, metadata !2400, metadata !DIExpression()), !dbg !3864
  %arrayidx891.us = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv77, !dbg !3865
  %193 = load i32, i32* %flags, align 4, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %193, metadata !2310, metadata !DIExpression()), !dbg !3240
  %194 = load %union.tree_node*, %union.tree_node** %var591, align 8, !dbg !3868
  %cmp893.us = icmp ne %union.tree_node* %194, null, !dbg !3869
  %conv894.us = zext i1 %cmp893.us to i32, !dbg !3869
  %call895.us = call fastcc i32 @store_one_arg(%struct.arg_data* nonnull %arrayidx891.us, %struct.rtx_def* %argblock.6, i32 %193, i32 %conv894.us, i32 %call112) #8, !dbg !3870
  %tobool896.us = icmp eq i32 %call895.us, 0, !dbg !3870
  br i1 %tobool896.us, label %lor.lhs.false897.us, label %if.then905.us, !dbg !3871

lor.lhs.false897.us:                              ; preds = %if.then888.us
  %call903.us = call fastcc i32 @check_sibcall_argument_overlap(%struct.rtx_def* %call889.us, %struct.arg_data* nonnull %arrayidx891.us, i32 1) #8, !dbg !3872
  %tobool904.us = icmp eq i32 %call903.us, 0, !dbg !3872
  br i1 %tobool904.us, label %if.end907.us, label %if.then905.us, !dbg !3873

if.then905.us:                                    ; preds = %lor.lhs.false897.us, %if.then888.us
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !3874
  br label %if.end907.us, !dbg !3875

if.end907.us:                                     ; preds = %if.then905.us, %lor.lhs.false897.us, %lor.lhs.false883.us
  %195 = load i32, i32* %flags, align 4, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %195, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and908.us = and i32 %195, 1, !dbg !3878
  %tobool909.us = icmp eq i32 %and908.us, 0, !dbg !3878
  br i1 %tobool909.us, label %lor.lhs.false910.us, label %land.lhs.true921.us, !dbg !3879

lor.lhs.false910.us:                              ; preds = %if.end907.us
  call void @llvm.dbg.value(metadata i32 %195, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and911.us = and i32 %195, 2, !dbg !3880
  %tobool912.us = icmp eq i32 %and911.us, 0, !dbg !3880
  br i1 %tobool912.us, label %for.inc932.us, label %land.lhs.true913.us, !dbg !3881

land.lhs.true913.us:                              ; preds = %lor.lhs.false910.us
  %196 = load i32, i32* @target_flags, align 4, !dbg !3882
  %and914.us = and i32 %196, 4, !dbg !3882
  %cmp915.us = icmp eq i32 %and914.us, 0, !dbg !3882
  br i1 %cmp915.us, label %lor.lhs.false917.us, label %land.lhs.true921.us, !dbg !3882

lor.lhs.false917.us:                              ; preds = %land.lhs.true913.us
  %call918.us = call i32 @ix86_cfun_abi() #7, !dbg !3882
  %cmp919.us = icmp eq i32 %call918.us, 1, !dbg !3882
  br i1 %cmp919.us, label %land.lhs.true921.us, label %for.inc932.us, !dbg !3883

land.lhs.true921.us:                              ; preds = %lor.lhs.false917.us, %land.lhs.true913.us, %if.end907.us
  %stack.us = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv77, i32 11, !dbg !3884
  %197 = load %struct.rtx_def*, %struct.rtx_def** %stack.us, align 8, !dbg !3884
  %tobool924.us = icmp eq %struct.rtx_def* %197, null, !dbg !3885
  br i1 %tobool924.us, label %for.inc932.us, label %if.then925.us, !dbg !3886

if.then925.us:                                    ; preds = %land.lhs.true921.us
  %call929.us = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 0, %struct.rtx_def* nonnull %197) #7, !dbg !3887
  %198 = load %struct.rtx_def*, %struct.rtx_def** %call_fusage, align 8, !dbg !3887
  call void @llvm.dbg.value(metadata %struct.rtx_def* %198, metadata !2323, metadata !DIExpression()), !dbg !3240
  %call930.us = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call929.us, %struct.rtx_def* %198) #7, !dbg !3887
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call930.us, metadata !2323, metadata !DIExpression()), !dbg !3240
  store %struct.rtx_def* %call930.us, %struct.rtx_def** %call_fusage, align 8, !dbg !3888
  br label %for.inc932.us, !dbg !3889

for.inc932.us:                                    ; preds = %if.then925.us, %land.lhs.true921.us, %lor.lhs.false917.us, %lor.lhs.false910.us
  %indvars.iv.next78 = add nuw nsw i64 %indvars.iv77, 1, !dbg !3890
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond875.us, !dbg !3891, !llvm.loop !3892

for.end934.us-lcssa.us:                           ; preds = %for.cond875.us
  br label %for.end934, !dbg !3894

for.cond875:                                      ; preds = %for.inc932, %if.end874.if.end874.split_crit_edge
  %indvars.iv75 = phi i64 [ %indvars.iv.next76, %for.inc932 ], [ 0, %if.end874.if.end874.split_crit_edge ], !dbg !3854
  call void @llvm.dbg.value(metadata i64 %indvars.iv75, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp876 = icmp slt i64 %indvars.iv75, %124, !dbg !3855
  br i1 %cmp876, label %for.body878, label %for.end934.us-lcssa, !dbg !3856

for.body878:                                      ; preds = %for.cond875
  %reg = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv75, i32 4, !dbg !3857
  %199 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !3857
  %cmp881 = icmp eq %struct.rtx_def* %199, null, !dbg !3858
  br i1 %cmp881, label %if.then888, label %lor.lhs.false883, !dbg !3859

lor.lhs.false883:                                 ; preds = %for.body878
  %pass_on_stack886 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv75, i32 9, !dbg !3860
  %200 = load i32, i32* %pass_on_stack886, align 8, !dbg !3860
  %tobool887 = icmp eq i32 %200, 0, !dbg !3861
  br i1 %tobool887, label %if.end907, label %if.then888, !dbg !3862

if.then888:                                       ; preds = %lor.lhs.false883, %for.body878
  %call889 = call %struct.rtx_def* @get_last_insn() #7, !dbg !3863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call889, metadata !2400, metadata !DIExpression()), !dbg !3864
  %arrayidx891 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv75, !dbg !3865
  %201 = load i32, i32* %flags, align 4, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %201, metadata !2310, metadata !DIExpression()), !dbg !3240
  %202 = load %union.tree_node*, %union.tree_node** %var591, align 8, !dbg !3868
  %cmp893 = icmp ne %union.tree_node* %202, null, !dbg !3869
  %conv894 = zext i1 %cmp893 to i32, !dbg !3869
  %call895 = call fastcc i32 @store_one_arg(%struct.arg_data* nonnull %arrayidx891, %struct.rtx_def* %argblock.6, i32 %201, i32 %conv894, i32 %call112) #8, !dbg !3870
  %tobool896 = icmp eq i32 %call895, 0, !dbg !3870
  br i1 %tobool896, label %lor.lhs.false897, label %if.then905, !dbg !3871

lor.lhs.false897:                                 ; preds = %if.then888
  br label %if.end907, !dbg !3895

if.then905:                                       ; preds = %if.then888
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !3874
  br label %if.end907, !dbg !3875

if.end907:                                        ; preds = %lor.lhs.false897, %lor.lhs.false883, %if.then905
  %203 = load i32, i32* %flags, align 4, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %203, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and908 = and i32 %203, 1, !dbg !3878
  %tobool909 = icmp eq i32 %and908, 0, !dbg !3878
  br i1 %tobool909, label %lor.lhs.false910, label %land.lhs.true921, !dbg !3879

lor.lhs.false910:                                 ; preds = %if.end907
  call void @llvm.dbg.value(metadata i32 %203, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and911 = and i32 %203, 2, !dbg !3880
  %tobool912 = icmp eq i32 %and911, 0, !dbg !3880
  br i1 %tobool912, label %for.inc932, label %land.lhs.true913, !dbg !3881

land.lhs.true913:                                 ; preds = %lor.lhs.false910
  %204 = load i32, i32* @target_flags, align 4, !dbg !3882
  %and914 = and i32 %204, 4, !dbg !3882
  %cmp915 = icmp eq i32 %and914, 0, !dbg !3882
  br i1 %cmp915, label %lor.lhs.false917, label %land.lhs.true921, !dbg !3882

lor.lhs.false917:                                 ; preds = %land.lhs.true913
  %call918 = call i32 @ix86_cfun_abi() #7, !dbg !3882
  %cmp919 = icmp eq i32 %call918, 1, !dbg !3882
  br i1 %cmp919, label %land.lhs.true921, label %for.inc932, !dbg !3883

land.lhs.true921:                                 ; preds = %land.lhs.true913, %if.end907, %lor.lhs.false917
  %stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv75, i32 11, !dbg !3884
  %205 = load %struct.rtx_def*, %struct.rtx_def** %stack, align 8, !dbg !3884
  %tobool924 = icmp eq %struct.rtx_def* %205, null, !dbg !3885
  br i1 %tobool924, label %for.inc932, label %if.then925, !dbg !3886

if.then925:                                       ; preds = %land.lhs.true921
  %call929 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 0, %struct.rtx_def* nonnull %205) #7, !dbg !3887
  %206 = load %struct.rtx_def*, %struct.rtx_def** %call_fusage, align 8, !dbg !3887
  call void @llvm.dbg.value(metadata %struct.rtx_def* %206, metadata !2323, metadata !DIExpression()), !dbg !3240
  %call930 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call929, %struct.rtx_def* %206) #7, !dbg !3887
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call930, metadata !2323, metadata !DIExpression()), !dbg !3240
  store %struct.rtx_def* %call930, %struct.rtx_def** %call_fusage, align 8, !dbg !3888
  br label %for.inc932, !dbg !3889

for.inc932:                                       ; preds = %land.lhs.true921, %lor.lhs.false910, %lor.lhs.false917, %if.then925
  %indvars.iv.next76 = add nuw nsw i64 %indvars.iv75, 1, !dbg !3890
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond875, !dbg !3891, !llvm.loop !3892

for.end934.us-lcssa:                              ; preds = %for.cond875
  br label %for.end934, !dbg !3894

for.end934:                                       ; preds = %for.end934.us-lcssa.us, %for.end934.us-lcssa
  %207 = load i32, i32* %reg_parm_seen, align 4, !dbg !3894
  call void @llvm.dbg.value(metadata i32 %207, metadata !2306, metadata !DIExpression()), !dbg !3240
  %tobool935 = icmp eq i32 %207, 0, !dbg !3894
  br i1 %tobool935, label %if.end974, label %for.cond937.preheader, !dbg !3896

for.cond937.preheader:                            ; preds = %for.end934
  br i1 %cmp527, label %for.cond937.preheader.split.us, label %for.cond937.preheader.for.cond937.preheader.split_crit_edge, !dbg !3897

for.cond937.preheader.for.cond937.preheader.split_crit_edge: ; preds = %for.cond937.preheader
  br label %for.cond937, !dbg !3897

for.cond937.preheader.split.us:                   ; preds = %for.cond937.preheader
  br label %for.cond937.us, !dbg !3897

for.cond937.us:                                   ; preds = %for.inc971.us, %for.cond937.preheader.split.us
  %indvars.iv81 = phi i64 [ %indvars.iv.next82, %for.inc971.us ], [ 0, %for.cond937.preheader.split.us ], !dbg !3898
  call void @llvm.dbg.value(metadata i64 %indvars.iv81, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp938.us = icmp slt i64 %indvars.iv81, %127, !dbg !3899
  br i1 %cmp938.us, label %for.body940.us, label %if.end974.loopexit.us-lcssa.us, !dbg !3897

for.body940.us:                                   ; preds = %for.cond937.us
  %partial.us = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv81, i32 8, !dbg !3900
  %208 = load i32, i32* %partial.us, align 4, !dbg !3900
  %cmp943.us = icmp eq i32 %208, 0, !dbg !3901
  br i1 %cmp943.us, label %for.inc971.us, label %land.lhs.true945.us, !dbg !3902

land.lhs.true945.us:                              ; preds = %for.body940.us
  %pass_on_stack948.us = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv81, i32 9, !dbg !3903
  %209 = load i32, i32* %pass_on_stack948.us, align 8, !dbg !3903
  %tobool949.us = icmp eq i32 %209, 0, !dbg !3904
  br i1 %tobool949.us, label %if.then950.us, label %for.inc971.us, !dbg !3905

if.then950.us:                                    ; preds = %land.lhs.true945.us
  %call952.us = call %struct.rtx_def* @get_last_insn() #7, !dbg !3906
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call952.us, metadata !2406, metadata !DIExpression()), !dbg !3907
  %arrayidx954.us = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv81, !dbg !3908
  %210 = load i32, i32* %flags, align 4, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %210, metadata !2310, metadata !DIExpression()), !dbg !3240
  %211 = load %union.tree_node*, %union.tree_node** %var591, align 8, !dbg !3911
  %cmp956.us = icmp ne %union.tree_node* %211, null, !dbg !3912
  %conv957.us = zext i1 %cmp956.us to i32, !dbg !3912
  %call958.us = call fastcc i32 @store_one_arg(%struct.arg_data* nonnull %arrayidx954.us, %struct.rtx_def* %argblock.6, i32 %210, i32 %conv957.us, i32 %call112) #8, !dbg !3913
  %tobool959.us = icmp eq i32 %call958.us, 0, !dbg !3913
  br i1 %tobool959.us, label %lor.lhs.false960.us, label %if.then968.us, !dbg !3914

lor.lhs.false960.us:                              ; preds = %if.then950.us
  %call966.us = call fastcc i32 @check_sibcall_argument_overlap(%struct.rtx_def* %call952.us, %struct.arg_data* nonnull %arrayidx954.us, i32 1) #8, !dbg !3915
  %tobool967.us = icmp eq i32 %call966.us, 0, !dbg !3915
  br i1 %tobool967.us, label %for.inc971.us, label %if.then968.us, !dbg !3916

if.then968.us:                                    ; preds = %lor.lhs.false960.us, %if.then950.us
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !3917
  br label %for.inc971.us, !dbg !3918

for.inc971.us:                                    ; preds = %if.then968.us, %lor.lhs.false960.us, %land.lhs.true945.us, %for.body940.us
  %indvars.iv.next82 = add nuw nsw i64 %indvars.iv81, 1, !dbg !3919
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond937.us, !dbg !3920, !llvm.loop !3921

if.end974.loopexit.us-lcssa.us:                   ; preds = %for.cond937.us
  br label %if.end974.loopexit, !dbg !3923

for.cond937:                                      ; preds = %for.cond937.preheader.for.cond937.preheader.split_crit_edge, %for.inc971
  %indvars.iv79 = phi i64 [ 0, %for.cond937.preheader.for.cond937.preheader.split_crit_edge ], [ %indvars.iv.next80, %for.inc971 ], !dbg !3898
  call void @llvm.dbg.value(metadata i64 %indvars.iv79, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp938 = icmp slt i64 %indvars.iv79, %126, !dbg !3899
  br i1 %cmp938, label %for.body940, label %if.end974.loopexit.us-lcssa, !dbg !3897

for.body940:                                      ; preds = %for.cond937
  %partial = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv79, i32 8, !dbg !3900
  %212 = load i32, i32* %partial, align 4, !dbg !3900
  %cmp943 = icmp eq i32 %212, 0, !dbg !3901
  br i1 %cmp943, label %for.inc971, label %land.lhs.true945, !dbg !3902

land.lhs.true945:                                 ; preds = %for.body940
  %pass_on_stack948 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv79, i32 9, !dbg !3903
  %213 = load i32, i32* %pass_on_stack948, align 8, !dbg !3903
  %tobool949 = icmp eq i32 %213, 0, !dbg !3904
  br i1 %tobool949, label %if.then950, label %for.inc971, !dbg !3905

if.then950:                                       ; preds = %land.lhs.true945
  %call952 = call %struct.rtx_def* @get_last_insn() #7, !dbg !3906
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call952, metadata !2406, metadata !DIExpression()), !dbg !3907
  %arrayidx954 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv79, !dbg !3908
  %214 = load i32, i32* %flags, align 4, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %214, metadata !2310, metadata !DIExpression()), !dbg !3240
  %215 = load %union.tree_node*, %union.tree_node** %var591, align 8, !dbg !3911
  %cmp956 = icmp ne %union.tree_node* %215, null, !dbg !3912
  %conv957 = zext i1 %cmp956 to i32, !dbg !3912
  %call958 = call fastcc i32 @store_one_arg(%struct.arg_data* nonnull %arrayidx954, %struct.rtx_def* %argblock.6, i32 %214, i32 %conv957, i32 %call112) #8, !dbg !3913
  %tobool959 = icmp eq i32 %call958, 0, !dbg !3913
  br i1 %tobool959, label %lor.lhs.false960, label %if.then968, !dbg !3914

lor.lhs.false960:                                 ; preds = %if.then950
  br label %for.inc971, !dbg !3924

if.then968:                                       ; preds = %if.then950
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !3917
  br label %for.inc971, !dbg !3918

for.inc971:                                       ; preds = %lor.lhs.false960, %land.lhs.true945, %for.body940, %if.then968
  %indvars.iv.next80 = add nuw nsw i64 %indvars.iv79, 1, !dbg !3919
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond937, !dbg !3920, !llvm.loop !3921

if.end974.loopexit.us-lcssa:                      ; preds = %for.cond937
  br label %if.end974.loopexit, !dbg !3923

if.end974.loopexit:                               ; preds = %if.end974.loopexit.us-lcssa.us, %if.end974.loopexit.us-lcssa
  br label %if.end974, !dbg !3923

if.end974:                                        ; preds = %if.end974.loopexit, %for.end934
  br i1 %tobool15, label %cond.end980, label %cond.false977, !dbg !3923

cond.false977:                                    ; preds = %if.end974
  %216 = load %union.tree_node*, %union.tree_node** %type645, align 8, !dbg !3923
  br label %cond.end980, !dbg !3923

cond.end980:                                      ; preds = %if.end974, %cond.false977
  %cond981 = phi %union.tree_node* [ %216, %cond.false977 ], [ %fntype.0, %if.end974 ], !dbg !3923
  %call982 = call i32 @ix86_function_type_abi(%union.tree_node* %cond981) #7, !dbg !3923
  %cmp983 = icmp eq i32 %call982, 1, !dbg !3923
  br i1 %cmp983, label %land.lhs.true985, label %if.end1002, !dbg !3925

land.lhs.true985:                                 ; preds = %cond.end980
  %217 = load i32, i32* @target_flags, align 4, !dbg !3926
  %and986 = and i32 %217, 4, !dbg !3926
  %cmp987 = icmp eq i32 %and986, 0, !dbg !3926
  br i1 %cmp987, label %lor.lhs.false989, label %if.end1002, !dbg !3926

lor.lhs.false989:                                 ; preds = %land.lhs.true985
  %call990 = call i32 @ix86_cfun_abi() #7, !dbg !3926
  %cmp991 = icmp ne i32 %call990, 1, !dbg !3926
  %218 = load i32, i32* %must_preallocate, align 4, !dbg !3927
  call void @llvm.dbg.value(metadata i32 %218, metadata !2307, metadata !DIExpression()), !dbg !3240
  %cmp994 = icmp eq i32 %218, 0, !dbg !3928
  %or.cond16 = and i1 %cmp991, %cmp994, !dbg !3929
  %or.cond17 = and i1 %or.cond16, %cmp124, !dbg !3929
  br i1 %or.cond17, label %if.then999, label %if.end1002, !dbg !3929

if.then999:                                       ; preds = %lor.lhs.false989
  %call1001 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv1000) #7, !dbg !3930
  call void @anti_adjust_stack(%struct.rtx_def* %call1001) #7, !dbg !3931
  br label %if.end1002, !dbg !3931

if.end1002:                                       ; preds = %land.lhs.true985, %lor.lhs.false989, %if.then999, %cond.end980
  %tobool1006 = icmp eq %struct.rtx_def* %structure_value_addr.3, null, !dbg !3932
  %or.cond18.not = or i1 %tobool1006, %cmp527, !dbg !3933
  %or.cond19 = or i1 %or.cond18.not, %tobool1008, !dbg !3933
  br i1 %or.cond19, label %if.end1020, label %if.then1009, !dbg !3933

if.then1009:                                      ; preds = %if.end1002
  %call1010 = call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %structure_value_addr.3, i8 zeroext 0) #7, !dbg !3934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1010, metadata !2292, metadata !DIExpression()), !dbg !3240
  %call1011 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call1010, %struct.rtx_def* null) #7, !dbg !3935
  %call1012 = call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %call1011) #7, !dbg !3936
  %call1013 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call28, %struct.rtx_def* %call1012) #7, !dbg !3937
  %bf.load1014 = load i32, i32* %121, align 8, !dbg !3938
  %bf.clear1015 = and i32 %bf.load1014, 65535, !dbg !3938
  %cmp1016 = icmp eq i32 %bf.clear1015, 37, !dbg !3938
  br i1 %cmp1016, label %if.then1018, label %if.end1020, !dbg !3939

if.then1018:                                      ; preds = %if.then1009
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2323, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @use_reg(%struct.rtx_def** nonnull %call_fusage, %struct.rtx_def* %call28) #7, !dbg !3940
  br label %if.end1020, !dbg !3940

if.end1020:                                       ; preds = %if.then1009, %if.then1018, %if.end1002
  %structure_value_addr.4 = phi %struct.rtx_def* [ %structure_value_addr.3, %if.end1002 ], [ %call1010, %if.then1018 ], [ %call1010, %if.then1009 ], !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %structure_value_addr.4, metadata !2292, metadata !DIExpression()), !dbg !3240
  %call1021 = call %struct.rtx_def* @get_last_insn() #7, !dbg !3941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1021, metadata !2383, metadata !DIExpression()), !dbg !3572
  %219 = load i32, i32* %reg_parm_seen, align 4, !dbg !3942
  call void @llvm.dbg.value(metadata i32 %219, metadata !2306, metadata !DIExpression()), !dbg !3240
  %conv1023 = zext i1 %cmp527 to i32, !dbg !3943
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2323, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call1024 = call %struct.rtx_def* @prepare_call_address(%union.tree_node* %call14, %struct.rtx_def* %call786, %struct.rtx_def* %static_chain_value.0, %struct.rtx_def** nonnull %call_fusage, i32 %219, i32 %conv1023) #8, !dbg !3944
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1024, metadata !2281, metadata !DIExpression()), !dbg !3240
  %220 = load i32, i32* %flags, align 4, !dbg !3945
  call void @llvm.dbg.value(metadata i32 %220, metadata !2310, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2323, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.dbg.value(metadata i32* %sibcall_failure, metadata !2374, metadata !DIExpression(DW_OP_deref)), !dbg !3572
  call fastcc void @load_register_parameters(%struct.arg_data* nonnull %65, i32 %add290, %struct.rtx_def** nonnull %call_fusage, i32 %220, i32 %conv1023, i32* nonnull %sibcall_failure) #8, !dbg !3946
  %call1027 = call %struct.rtx_def* @get_last_insn() #7, !dbg !3947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1027, metadata !2381, metadata !DIExpression()), !dbg !3572
  %221 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !3948
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2305, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  %call1028 = call %struct.rtx_def* @function_arg(%struct.ix86_args* nonnull %args_so_far, i32 0, %union.tree_node* %221, i32 1) #7, !dbg !3948
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1028, metadata !2382, metadata !DIExpression()), !dbg !3572
  br i1 %cmp527, label %cond.end1035, label %lor.lhs.false1030, !dbg !3949

lor.lhs.false1030:                                ; preds = %if.end1020
  %222 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !3949
  %conv1031 = sext i32 %222 to i64, !dbg !3949
  %rem = urem i64 %conv1031, %div, !dbg !3949
  %tobool1032 = icmp eq i64 %rem, 0, !dbg !3949
  br i1 %tobool1032, label %cond.end1035, label %cond.true1033, !dbg !3949

cond.true1033:                                    ; preds = %lor.lhs.false1030
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2840, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3949
  br label %cond.end1035, !dbg !3949

cond.end1035:                                     ; preds = %lor.lhs.false1030, %if.end1020, %cond.true1033
  %conv1037 = sext i32 %call580 to i64, !dbg !3950
  %223 = load i64, i64* %constant615, align 8, !dbg !3951
  %224 = load %struct.rtx_def*, %struct.rtx_def** %call_fusage, align 8, !dbg !3952
  call void @llvm.dbg.value(metadata %struct.rtx_def* %224, metadata !2323, metadata !DIExpression()), !dbg !3240
  %225 = load i32, i32* %flags, align 4, !dbg !3953
  call void @llvm.dbg.value(metadata i32 %225, metadata !2310, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2305, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call fastcc void @emit_call_1(%struct.rtx_def* %call1024, %union.tree_node* %exp, %union.tree_node* %call14, %union.tree_node* %43, i64 %conv1037, i64 %223, i64 %struct_value_size.0, %struct.rtx_def* %call1028, %struct.rtx_def* %valreg.3, i32 %17, %struct.rtx_def* %224, i32 %225, %struct.ix86_args* nonnull %args_so_far) #8, !dbg !3954
  br i1 %cmp527, label %land.lhs.true1041, label %if.end1045, !dbg !3955

land.lhs.true1041:                                ; preds = %cond.end1035
  %call1042 = call fastcc i32 @check_sibcall_argument_overlap(%struct.rtx_def* %call1021, %struct.arg_data* null, i32 0) #8, !dbg !3957
  %tobool1043 = icmp eq i32 %call1042, 0, !dbg !3957
  br i1 %tobool1043, label %if.end1045, label %if.then1044, !dbg !3958

if.then1044:                                      ; preds = %land.lhs.true1041
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !3959
  br label %if.end1045, !dbg !3960

if.end1045:                                       ; preds = %land.lhs.true1041, %if.then1044, %cond.end1035
  %tobool1046 = icmp eq %struct.rtx_def* %structure_value_addr.4, null, !dbg !3961
  br i1 %tobool1046, label %land.lhs.true1049, label %if.end1111, !dbg !3963

land.lhs.true1049:                                ; preds = %if.end1045
  %bf.load1051 = load i64, i64* %28, align 8, !dbg !3964
  %bf.cast105339 = and i64 %bf.load1051, 65535, !dbg !3964
  %cmp1054 = icmp eq i64 %bf.cast105339, 14, !dbg !3964
  br i1 %cmp1054, label %cond.true1056, label %cond.false1058, !dbg !3964

cond.true1056:                                    ; preds = %land.lhs.true1049
  %call1057 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !3964
  br label %cond.end1064, !dbg !3964

cond.false1058:                                   ; preds = %land.lhs.true1049
  %bf.load1061 = load i32, i32* %mode797, align 4, !dbg !3964
  %bf.lshr1062 = lshr i32 %bf.load1061, 16, !dbg !3964
  %bf.clear1063 = and i32 %bf.lshr1062, 255, !dbg !3964
  br label %cond.end1064, !dbg !3964

cond.end1064:                                     ; preds = %cond.false1058, %cond.true1056
  %cond1065 = phi i32 [ %call1057, %cond.true1056 ], [ %bf.clear1063, %cond.false1058 ], !dbg !3964
  %cmp1066 = icmp eq i32 %cond1065, 1, !dbg !3965
  br i1 %cmp1066, label %if.end1111, label %land.lhs.true1068, !dbg !3966

land.lhs.true1068:                                ; preds = %cond.end1064
  %226 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 4), align 8, !dbg !3967
  %call1069 = call zeroext i8 %226(%union.tree_node* %26) #7, !dbg !3968
  %tobool1071 = icmp eq i8 %call1069, 0, !dbg !3968
  br i1 %tobool1071, label %if.end1111, label %if.then1072, !dbg !3969

if.then1072:                                      ; preds = %land.lhs.true1068
  %bf.load1074 = load i64, i64* %28, align 8, !dbg !3970
  %bf.cast107653 = and i64 %bf.load1074, 65535, !dbg !3970
  %cmp1077 = icmp eq i64 %bf.cast107653, 14, !dbg !3970
  br i1 %cmp1077, label %cond.true1079, label %cond.false1081, !dbg !3970

cond.true1079:                                    ; preds = %if.then1072
  %call1080 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !3970
  br label %cond.end1087, !dbg !3970

cond.false1081:                                   ; preds = %if.then1072
  %bf.load1084 = load i32, i32* %mode797, align 4, !dbg !3970
  %bf.lshr1085 = lshr i32 %bf.load1084, 16, !dbg !3970
  %bf.clear1086 = and i32 %bf.lshr1085, 255, !dbg !3970
  br label %cond.end1087, !dbg !3970

cond.end1087:                                     ; preds = %cond.false1081, %cond.true1079
  %cond1088 = phi i32 [ %call1080, %cond.true1079 ], [ %bf.clear1086, %cond.false1081 ], !dbg !3970
  %call1089 = call zeroext i8 @shift_return_value(i32 %cond1088, i8 zeroext 0, %struct.rtx_def* %valreg.3) #8, !dbg !3973
  %tobool1090 = icmp eq i8 %call1089, 0, !dbg !3973
  br i1 %tobool1090, label %if.end1092, label %if.then1091, !dbg !3974

if.then1091:                                      ; preds = %cond.end1087
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !3975
  br label %if.end1092, !dbg !3976

if.end1092:                                       ; preds = %cond.end1087, %if.then1091
  %bf.load1094 = load i64, i64* %28, align 8, !dbg !3977
  %bf.cast109654 = and i64 %bf.load1094, 65535, !dbg !3977
  %cmp1097 = icmp eq i64 %bf.cast109654, 14, !dbg !3977
  br i1 %cmp1097, label %cond.true1099, label %cond.false1101, !dbg !3977

cond.true1099:                                    ; preds = %if.end1092
  %call1100 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !3977
  br label %cond.end1107, !dbg !3977

cond.false1101:                                   ; preds = %if.end1092
  %bf.load1104 = load i32, i32* %mode797, align 4, !dbg !3977
  %bf.lshr1105 = lshr i32 %bf.load1104, 16, !dbg !3977
  %bf.clear1106 = and i32 %bf.lshr1105, 255, !dbg !3977
  br label %cond.end1107, !dbg !3977

cond.end1107:                                     ; preds = %cond.false1101, %cond.true1099
  %cond1108 = phi i32 [ %call1100, %cond.true1099 ], [ %bf.clear1106, %cond.false1101 ], !dbg !3977
  %call1109 = call fastcc i32 @rhs_regno(%struct.rtx_def* %valreg.3) #8, !dbg !3978
  %call1110 = call %struct.rtx_def* @gen_rtx_REG(i32 %cond1108, i32 %call1109) #7, !dbg !3979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1110, metadata !2291, metadata !DIExpression()), !dbg !3240
  br label %if.end1111, !dbg !3980

if.end1111:                                       ; preds = %land.lhs.true1068, %cond.end1064, %if.end1045, %cond.end1107
  %valreg.4 = phi %struct.rtx_def* [ %valreg.3, %if.end1045 ], [ %call1110, %cond.end1107 ], [ %valreg.3, %land.lhs.true1068 ], [ %valreg.3, %cond.end1064 ], !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %valreg.4, metadata !2291, metadata !DIExpression()), !dbg !3240
  br i1 %cmp527, label %if.end1139, label %land.lhs.true1113, !dbg !3981

land.lhs.true1113:                                ; preds = %if.end1111
  %227 = load i32, i32* %flags, align 4, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %227, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and1114 = and i32 %227, 16, !dbg !3983
  %tobool1115 = icmp eq i32 %and1114, 0, !dbg !3983
  br i1 %tobool1115, label %if.end1139, label %if.then1116, !dbg !3984

if.then1116:                                      ; preds = %land.lhs.true1113
  %228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %valreg.4, i64 0, i32 0, !dbg !3985
  %bf.load1118 = load i32, i32* %228, align 8, !dbg !3985
  %bf.lshr1119 = lshr i32 %bf.load1118, 16, !dbg !3985
  %bf.clear1120 = and i32 %bf.lshr1119, 255, !dbg !3985
  %call1121 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear1120) #7, !dbg !3986
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1121, metadata !2412, metadata !DIExpression()), !dbg !3987
  %bf.load1124 = load i64, i64* %28, align 8, !dbg !3988
  %bf.cast112652 = and i64 %bf.load1124, 65535, !dbg !3990
  %cmp1127 = icmp eq i64 %bf.cast112652, 10, !dbg !3990
  br i1 %cmp1127, label %if.then1129, label %if.end1134, !dbg !3991

if.then1129:                                      ; preds = %if.then1116
  %229 = load i32, i32* @ix86_isa_flags, align 4, !dbg !3992
  %and1130 = and i32 %229, 32, !dbg !3992
  %cmp1131 = icmp eq i32 %and1130, 0, !dbg !3992
  %cond1133 = select i1 %cmp1131, i32 128, i32 256, !dbg !3992
  call void @mark_reg_pointer(%struct.rtx_def* %call1121, i32 %cond1133) #7, !dbg !3993
  br label %if.end1134, !dbg !3993

if.end1134:                                       ; preds = %if.then1129, %if.then1116
  %call1135 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1121, %struct.rtx_def* %valreg.4) #7, !dbg !3994
  %call1136 = call %struct.rtx_def* @get_last_insn() #7, !dbg !3995
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1136, metadata !2415, metadata !DIExpression()), !dbg !3987
  call void @add_reg_note(%struct.rtx_def* %call1136, i32 15, %struct.rtx_def* %call1121) #7, !dbg !3996
  %call1137 = call %struct.rtx_def* @get_insns() #7, !dbg !3997
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1137, metadata !2416, metadata !DIExpression()), !dbg !3987
  call void @end_sequence() #7, !dbg !3998
  %call1138 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1137) #7, !dbg !3999
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1121, metadata !2291, metadata !DIExpression()), !dbg !3240
  br label %if.end1139, !dbg !4000

if.end1139:                                       ; preds = %land.lhs.true1113, %if.end1111, %if.end1134
  %valreg.5 = phi %struct.rtx_def* [ %call1121, %if.end1134 ], [ %valreg.4, %land.lhs.true1113 ], [ %valreg.4, %if.end1111 ], !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %valreg.5, metadata !2291, metadata !DIExpression()), !dbg !3240
  %230 = load i32, i32* %flags, align 4, !dbg !4001
  call void @llvm.dbg.value(metadata i32 %230, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and1140 = and i32 %230, 8, !dbg !4002
  %tobool1141 = icmp ne i32 %and1140, 0, !dbg !4002
  %or.cond21 = or i1 %tobool1141, %cmp527, !dbg !4003
  br i1 %or.cond21, label %if.then1145, label %if.end1169, !dbg !4003

if.then1145:                                      ; preds = %if.end1139
  %call1147 = call %struct.rtx_def* @get_last_insn() #7, !dbg !4004
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1147, metadata !2417, metadata !DIExpression()), !dbg !4005
  br label %while.cond, !dbg !4006

while.cond:                                       ; preds = %cond.end1162, %if.then1145
  %last1146.0 = phi %struct.rtx_def* [ %call1147, %if.then1145 ], [ %233, %cond.end1162 ], !dbg !4005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1146.0, metadata !2417, metadata !DIExpression()), !dbg !4005
  %231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last1146.0, i64 0, i32 0, !dbg !4007
  %bf.load1148 = load i32, i32* %231, align 8, !dbg !4007
  %bf.clear1149 = and i32 %bf.load1148, 65535, !dbg !4007
  %cmp1150 = icmp eq i32 %bf.clear1149, 10, !dbg !4007
  br i1 %cmp1150, label %while.end, label %while.body, !dbg !4006

while.body:                                       ; preds = %while.cond
  %232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last1146.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4008
  %rt_rtx1157 = bitcast %union.rtunion_def* %232 to %struct.rtx_def**, !dbg !4008
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1157, align 8, !dbg !4008
  call void @llvm.dbg.value(metadata %struct.rtx_def* %233, metadata !2417, metadata !DIExpression()), !dbg !4005
  %cmp1158 = icmp eq %struct.rtx_def* %233, %call1027, !dbg !4010
  br i1 %cmp1158, label %cond.true1160, label %cond.end1162, !dbg !4010

cond.true1160:                                    ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2908, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4010
  br label %cond.end1162, !dbg !4010

cond.end1162:                                     ; preds = %while.body, %cond.true1160
  br label %while.cond, !dbg !4006, !llvm.loop !4011

while.end:                                        ; preds = %while.cond
  %last1146.0.lcssa = phi %struct.rtx_def* [ %last1146.0, %while.cond ], !dbg !4005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1146.0.lcssa, metadata !2417, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1146.0.lcssa, metadata !2417, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1146.0.lcssa, metadata !2417, metadata !DIExpression()), !dbg !4005
  %call1164 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %last1146.0.lcssa) #7, !dbg !4013
  %234 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !4014
  %cmp1165 = icmp eq i32 %234, 0, !dbg !4016
  br i1 %cmp1165, label %if.then1167, label %if.end1169, !dbg !4017

if.then1167:                                      ; preds = %while.end
  store i32 %sub581, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !4018
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !4020
  br label %if.end1169, !dbg !4021

if.end1169:                                       ; preds = %while.end, %if.then1167, %if.end1139
  %bf.load1171 = load i64, i64* %28, align 8, !dbg !4022
  %bf.cast117340 = and i64 %bf.load1171, 65535, !dbg !4022
  %cmp1174 = icmp eq i64 %bf.cast117340, 14, !dbg !4022
  br i1 %cmp1174, label %cond.true1176, label %cond.false1178, !dbg !4022

cond.true1176:                                    ; preds = %if.end1169
  %call1177 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4022
  br label %cond.end1184, !dbg !4022

cond.false1178:                                   ; preds = %if.end1169
  %bf.load1181 = load i32, i32* %mode797, align 4, !dbg !4022
  %bf.lshr1182 = lshr i32 %bf.load1181, 16, !dbg !4022
  %bf.clear1183 = and i32 %bf.lshr1182, 255, !dbg !4022
  br label %cond.end1184, !dbg !4022

cond.end1184:                                     ; preds = %cond.false1178, %cond.true1176
  %cond1185 = phi i32 [ %call1177, %cond.true1176 ], [ %bf.clear1183, %cond.false1178 ], !dbg !4022
  %cmp1186 = icmp eq i32 %cond1185, 0, !dbg !4023
  %or.cond22 = or i1 %cmp1186, %tobool1189, !dbg !4024
  br i1 %or.cond22, label %if.then1190, label %if.else1191, !dbg !4024

if.then1190:                                      ; preds = %cond.end1184
  %235 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4025
  call void @llvm.dbg.value(metadata %struct.rtx_def* %235, metadata !2279, metadata !DIExpression()), !dbg !3240
  br label %if.end1425, !dbg !4026

if.else1191:                                      ; preds = %cond.end1184
  br i1 %tobool1046, label %if.else1237, label %if.then1193, !dbg !4027

if.then1193:                                      ; preds = %if.else1191
  %cmp1194 = icmp eq %struct.rtx_def* %target.addr.2, null, !dbg !4028
  br i1 %cmp1194, label %if.then1201, label %lor.lhs.false1196, !dbg !4031

lor.lhs.false1196:                                ; preds = %if.then1193
  %236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.2, i64 0, i32 0, !dbg !4032
  %bf.load1197 = load i32, i32* %236, align 8, !dbg !4032
  %bf.clear1198 = and i32 %bf.load1197, 65535, !dbg !4032
  %cmp1199 = icmp eq i32 %bf.clear1198, 43, !dbg !4032
  br i1 %cmp1199, label %if.end1425, label %if.then1201, !dbg !4033

if.then1201:                                      ; preds = %lor.lhs.false1196, %if.then1193
  %bf.load1203 = load i64, i64* %28, align 8, !dbg !4034
  %bf.cast120550 = and i64 %bf.load1203, 65535, !dbg !4034
  %cmp1206 = icmp eq i64 %bf.cast120550, 14, !dbg !4034
  br i1 %cmp1206, label %cond.true1208, label %cond.false1210, !dbg !4034

cond.true1208:                                    ; preds = %if.then1201
  %call1209 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4034
  %bf.load1219.pre = load i64, i64* %28, align 8, !dbg !4036
  br label %cond.end1216, !dbg !4034

cond.false1210:                                   ; preds = %if.then1201
  %bf.load1213 = load i32, i32* %mode797, align 4, !dbg !4034
  %bf.lshr1214 = lshr i32 %bf.load1213, 16, !dbg !4034
  %bf.clear1215 = and i32 %bf.lshr1214, 255, !dbg !4034
  br label %cond.end1216, !dbg !4034

cond.end1216:                                     ; preds = %cond.false1210, %cond.true1208
  %bf.load1219 = phi i64 [ %bf.load1219.pre, %cond.true1208 ], [ %bf.load1203, %cond.false1210 ], !dbg !4036
  %cond1217 = phi i32 [ %call1209, %cond.true1208 ], [ %bf.clear1215, %cond.false1210 ], !dbg !4034
  %bf.cast122151 = and i64 %bf.load1219, 65535, !dbg !4036
  %cmp1222 = icmp eq i64 %bf.cast122151, 14, !dbg !4036
  br i1 %cmp1222, label %cond.true1224, label %cond.false1226, !dbg !4036

cond.true1224:                                    ; preds = %cond.end1216
  %call1225 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4036
  br label %cond.end1232, !dbg !4036

cond.false1226:                                   ; preds = %cond.end1216
  %bf.load1229 = load i32, i32* %mode797, align 4, !dbg !4036
  %bf.lshr1230 = lshr i32 %bf.load1229, 16, !dbg !4036
  %bf.clear1231 = and i32 %bf.lshr1230, 255, !dbg !4036
  br label %cond.end1232, !dbg !4036

cond.end1232:                                     ; preds = %cond.false1226, %cond.true1224
  %cond1233 = phi i32 [ %call1225, %cond.true1224 ], [ %bf.clear1231, %cond.false1226 ], !dbg !4036
  %call1234 = call %struct.rtx_def* @memory_address_addr_space(i32 %cond1233, %struct.rtx_def* nonnull %structure_value_addr.4, i8 zeroext 0) #7, !dbg !4036
  %call1235 = call %struct.rtx_def* @gen_rtx_MEM(i32 %cond1217, %struct.rtx_def* %call1234) #7, !dbg !4037
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1235, metadata !2279, metadata !DIExpression()), !dbg !3240
  call void @set_mem_attributes(%struct.rtx_def* %call1235, %union.tree_node* %26, i32 1) #7, !dbg !4038
  br label %if.end1425, !dbg !4039

if.else1237:                                      ; preds = %if.else1191
  %237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %valreg.5, i64 0, i32 0, !dbg !4040
  %bf.load1259 = load i32, i32* %237, align 8, !dbg !4040
  %bf.clear1260 = and i32 %bf.load1259, 65535, !dbg !4040
  %cmp1261 = icmp eq i32 %bf.clear1260, 15, !dbg !4041
  br i1 %cmp1261, label %if.then1263, label %if.else1302, !dbg !4042

if.then1263:                                      ; preds = %if.else1237
  %cmp1264 = icmp eq %struct.rtx_def* %target.addr.2, null, !dbg !4043
  br i1 %cmp1264, label %if.then1266, label %if.end1295, !dbg !4044

if.then1266:                                      ; preds = %if.then1263
  %bf.load1268 = load i64, i64* %28, align 8, !dbg !4045
  %238 = lshr i64 %bf.load1268, 18, !dbg !4045
  %239 = trunc i64 %238 to i32, !dbg !4045
  %mul1278 = and i32 %239, 2, !dbg !4045
  %bf.load1281 = load i32, i32* %mode797, align 4, !dbg !4045
  %240 = lshr i32 %bf.load1281, 11, !dbg !4045
  %mul1284 = and i32 %240, 4, !dbg !4045
  %or1285 = or i32 %mul1278, %mul1284, !dbg !4045
  %241 = lshr i64 %bf.load1268, 48, !dbg !4045
  %242 = trunc i64 %241 to i32, !dbg !4045
  %shl = and i32 %242, 65280, !dbg !4045
  %or1291 = or i32 %or1285, %shl, !dbg !4045
  %or1292 = or i32 %or1291, 1, !dbg !4046
  %call1293 = call %union.tree_node* @build_qualified_type(%union.tree_node* %26, i32 %or1292) #7, !dbg !4047
  call void @llvm.dbg.value(metadata %union.tree_node* %call1293, metadata !2420, metadata !DIExpression()), !dbg !4048
  %call1294 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call1293, i32 0, i32 1, i32 1) #7, !dbg !4049
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1294, metadata !2279, metadata !DIExpression()), !dbg !3240
  br label %if.end1295, !dbg !4050

if.end1295:                                       ; preds = %if.then1266, %if.then1263
  %target.addr.4 = phi %struct.rtx_def* [ %call1294, %if.then1266 ], [ %target.addr.2, %if.then1263 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.4, metadata !2279, metadata !DIExpression()), !dbg !3240
  %call1296 = call i32 @rtx_equal_p(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %valreg.5) #7, !dbg !4051
  %tobool1297 = icmp eq i32 %call1296, 0, !dbg !4051
  br i1 %tobool1297, label %if.then1298, label %if.end1301, !dbg !4053

if.then1298:                                      ; preds = %if.end1295
  %call1299 = call i64 @int_size_in_bytes(%union.tree_node* %26) #7, !dbg !4054
  %conv1300 = trunc i64 %call1299 to i32, !dbg !4054
  call void @emit_group_store(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %valreg.5, %union.tree_node* %26, i32 %conv1300) #7, !dbg !4055
  br label %if.end1301, !dbg !4055

if.end1301:                                       ; preds = %if.end1295, %if.then1298
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !4056
  br label %if.end1425, !dbg !4057

if.else1302:                                      ; preds = %if.else1237
  %tobool1303 = icmp eq %struct.rtx_def* %target.addr.2, null, !dbg !4058
  br i1 %tobool1303, label %if.else1388, label %land.lhs.true1304, !dbg !4059

land.lhs.true1304:                                ; preds = %if.else1302
  %243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.2, i64 0, i32 0, !dbg !4060
  %bf.load1305 = load i32, i32* %243, align 8, !dbg !4060
  %bf.lshr1306 = lshr i32 %bf.load1305, 16, !dbg !4060
  %bf.clear1307 = and i32 %bf.lshr1306, 255, !dbg !4060
  %bf.load1309 = load i64, i64* %28, align 8, !dbg !4061
  %bf.cast131146 = and i64 %bf.load1309, 65535, !dbg !4061
  %cmp1312 = icmp eq i64 %bf.cast131146, 14, !dbg !4061
  br i1 %cmp1312, label %cond.true1314, label %cond.false1316, !dbg !4061

cond.true1314:                                    ; preds = %land.lhs.true1304
  %call1315 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4061
  br label %cond.end1322, !dbg !4061

cond.false1316:                                   ; preds = %land.lhs.true1304
  %bf.load1319 = load i32, i32* %mode797, align 4, !dbg !4061
  %bf.lshr1320 = lshr i32 %bf.load1319, 16, !dbg !4061
  %bf.clear1321 = and i32 %bf.lshr1320, 255, !dbg !4061
  br label %cond.end1322, !dbg !4061

cond.end1322:                                     ; preds = %cond.false1316, %cond.true1314
  %cond1323 = phi i32 [ %call1315, %cond.true1314 ], [ %bf.clear1321, %cond.false1316 ], !dbg !4061
  %cmp1324 = icmp eq i32 %bf.clear1307, %cond1323, !dbg !4062
  br i1 %cmp1324, label %land.lhs.true1326, label %if.else1388, !dbg !4063

land.lhs.true1326:                                ; preds = %cond.end1322
  %bf.load1327 = load i32, i32* %243, align 8, !dbg !4064
  %bf.load1330 = load i32, i32* %237, align 8, !dbg !4065
  %bf.lshr132862 = xor i32 %bf.load1327, %bf.load1330, !dbg !4066
  %244 = and i32 %bf.lshr132862, 16711680, !dbg !4066
  %cmp1333 = icmp eq i32 %244, 0, !dbg !4066
  br i1 %cmp1333, label %if.then1335, label %if.else1388, !dbg !4067

if.then1335:                                      ; preds = %land.lhs.true1326
  call void @llvm.dbg.value(metadata i8 0, metadata !2428, metadata !DIExpression()), !dbg !4068
  %bf.clear1337 = and i32 %bf.load1327, 65535, !dbg !4069
  %cmp1338 = icmp eq i32 %bf.clear1337, 37, !dbg !4069
  br i1 %cmp1338, label %lor.lhs.false1340, label %if.then1344, !dbg !4071

lor.lhs.false1340:                                ; preds = %if.then1335
  %call1341 = call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %target.addr.2) #8, !dbg !4072
  %cmp1342 = icmp ult i32 %call1341, 53, !dbg !4072
  br i1 %cmp1342, label %if.then1344, label %if.end1346, !dbg !4073

if.then1344:                                      ; preds = %lor.lhs.false1340, %if.then1335
  %call1345 = call fastcc %struct.rtx_def* @avoid_likely_spilled_reg(%struct.rtx_def* %valreg.5) #8, !dbg !4074
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1345, metadata !2291, metadata !DIExpression()), !dbg !3240
  br label %if.end1346, !dbg !4075

if.end1346:                                       ; preds = %if.then1344, %lor.lhs.false1340
  %valreg.6 = phi %struct.rtx_def* [ %call1345, %if.then1344 ], [ %valreg.5, %lor.lhs.false1340 ], !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %valreg.6, metadata !2291, metadata !DIExpression()), !dbg !3240
  %245 = load i32, i32* @target_flags, align 4, !dbg !4076
  %and1347 = and i32 %245, 4, !dbg !4076
  %cmp1348 = icmp eq i32 %and1347, 0, !dbg !4076
  br i1 %cmp1348, label %lor.lhs.false1350, label %land.lhs.true1354, !dbg !4076

lor.lhs.false1350:                                ; preds = %if.end1346
  %call1351 = call i32 @ix86_cfun_abi() #7, !dbg !4076
  %cmp1352 = icmp eq i32 %call1351, 1, !dbg !4076
  %tobool1355 = icmp ne i32 %pass.0, 0, !dbg !4078
  %or.cond23 = and i1 %cmp1352, %tobool1355, !dbg !4079
  br i1 %or.cond23, label %land.lhs.true1356, label %if.end1375, !dbg !4079

land.lhs.true1354:                                ; preds = %if.end1346
  br i1 %cmp527, label %if.end1375, label %land.lhs.true1356, !dbg !4080

land.lhs.true1356:                                ; preds = %land.lhs.true1354, %lor.lhs.false1350
  %bf.load1357 = load i32, i32* %243, align 8, !dbg !4081
  %bf.clear1358 = and i32 %bf.load1357, 65535, !dbg !4081
  %cmp1359 = icmp eq i32 %bf.clear1358, 43, !dbg !4081
  br i1 %cmp1359, label %for.cond1362.preheader, label %if.end1375, !dbg !4082

for.cond1362.preheader:                           ; preds = %land.lhs.true1356
  br label %for.cond1362, !dbg !4083

for.cond1362:                                     ; preds = %for.cond1362.preheader, %for.inc1372
  %indvars.iv83 = phi i64 [ 0, %for.cond1362.preheader ], [ %indvars.iv.next84, %for.inc1372 ], !dbg !4085
  call void @llvm.dbg.value(metadata i64 %indvars.iv83, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp1363 = icmp slt i64 %indvars.iv83, %128, !dbg !4086
  br i1 %cmp1363, label %for.body1365, label %if.end1375.loopexit, !dbg !4083

for.body1365:                                     ; preds = %for.cond1362
  %save_area1368 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv83, i32 13, !dbg !4088
  %246 = load %struct.rtx_def*, %struct.rtx_def** %save_area1368, align 8, !dbg !4088
  %tobool1369 = icmp eq %struct.rtx_def* %246, null, !dbg !4090
  br i1 %tobool1369, label %for.inc1372, label %if.end1375.loopexit, !dbg !4091

for.inc1372:                                      ; preds = %for.body1365
  %indvars.iv.next84 = add nuw nsw i64 %indvars.iv83, 1, !dbg !4092
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond1362, !dbg !4093, !llvm.loop !4094

if.end1375.loopexit:                              ; preds = %for.cond1362, %for.body1365
  %may_overlap.1.ph = phi i1 [ true, %for.body1365 ], [ false, %for.cond1362 ]
  br label %if.end1375, !dbg !4096

if.end1375:                                       ; preds = %if.end1375.loopexit, %land.lhs.true1354, %land.lhs.true1356, %lor.lhs.false1350
  %may_overlap.1 = phi i1 [ false, %land.lhs.true1356 ], [ false, %land.lhs.true1354 ], [ false, %lor.lhs.false1350 ], [ %may_overlap.1.ph, %if.end1375.loopexit ]
  br i1 %may_overlap.1, label %if.then1377, label %if.else1379, !dbg !4096

if.then1377:                                      ; preds = %if.end1375
  %call1378 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %valreg.6) #7, !dbg !4097
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1378, metadata !2279, metadata !DIExpression()), !dbg !3240
  br label %if.end1425, !dbg !4099

if.else1379:                                      ; preds = %if.end1375
  %call1380 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %target.addr.2, %struct.rtx_def* %valreg.6) #7, !dbg !4100
  %bf.load1381 = load i32, i32* %243, align 8, !dbg !4102
  %bf.clear1382 = and i32 %bf.load1381, 65535, !dbg !4102
  %cmp1383 = icmp eq i32 %bf.clear1382, 43, !dbg !4102
  br i1 %cmp1383, label %if.then1385, label %if.end1425, !dbg !4104

if.then1385:                                      ; preds = %if.else1379
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !4105
  br label %if.end1425, !dbg !4106

if.else1388:                                      ; preds = %if.else1302, %land.lhs.true1326, %cond.end1322
  %bf.load1390 = load i64, i64* %28, align 8, !dbg !4107
  %bf.cast139241 = and i64 %bf.load1390, 65535, !dbg !4107
  %cmp1393 = icmp eq i64 %bf.cast139241, 14, !dbg !4107
  br i1 %cmp1393, label %cond.true1395, label %cond.false1397, !dbg !4107

cond.true1395:                                    ; preds = %if.else1388
  %call1396 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4107
  br label %cond.end1403, !dbg !4107

cond.false1397:                                   ; preds = %if.else1388
  %bf.load1400 = load i32, i32* %mode797, align 4, !dbg !4107
  %bf.lshr1401 = lshr i32 %bf.load1400, 16, !dbg !4107
  %bf.clear1402 = and i32 %bf.lshr1401, 255, !dbg !4107
  br label %cond.end1403, !dbg !4107

cond.end1403:                                     ; preds = %cond.false1397, %cond.true1395
  %cond1404 = phi i32 [ %call1396, %cond.true1395 ], [ %bf.clear1402, %cond.false1397 ], !dbg !4107
  %cmp1405 = icmp eq i32 %cond1404, 1, !dbg !4108
  br i1 %cmp1405, label %if.then1407, label %if.else1417, !dbg !4109

if.then1407:                                      ; preds = %cond.end1403
  call void @llvm.dbg.value(metadata %struct.rtx_def* %valreg.5, metadata !2431, metadata !DIExpression()), !dbg !4110
  %bf.load1408 = load i32, i32* %237, align 8, !dbg !4111
  %bf.clear1410 = and i32 %bf.load1408, 16711680, !dbg !4111
  %cmp1411 = icmp eq i32 %bf.clear1410, 65536, !dbg !4113
  br i1 %cmp1411, label %if.end1415, label %if.then1413, !dbg !4114

if.then1413:                                      ; preds = %if.then1407
  %call1414 = call fastcc %struct.rtx_def* @avoid_likely_spilled_reg(%struct.rtx_def* %valreg.5) #8, !dbg !4115
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1414, metadata !2431, metadata !DIExpression()), !dbg !4110
  br label %if.end1415, !dbg !4116

if.end1415:                                       ; preds = %if.then1407, %if.then1413
  %val.0 = phi %struct.rtx_def* [ %call1414, %if.then1413 ], [ %valreg.5, %if.then1407 ], !dbg !4110
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.0, metadata !2431, metadata !DIExpression()), !dbg !4110
  %call1416 = call %struct.rtx_def* @copy_blkmode_from_reg(%struct.rtx_def* %target.addr.2, %struct.rtx_def* %val.0, %union.tree_node* %26) #7, !dbg !4117
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1416, metadata !2279, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !4118
  br label %if.end1425, !dbg !4119

if.else1417:                                      ; preds = %cond.end1403
  %call1418 = call fastcc %struct.rtx_def* @avoid_likely_spilled_reg(%struct.rtx_def* %valreg.5) #8, !dbg !4120
  %call1419 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call1418) #7, !dbg !4121
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1419, metadata !2279, metadata !DIExpression()), !dbg !3240
  br label %if.end1425

if.end1425:                                       ; preds = %cond.end1232, %lor.lhs.false1196, %if.end1301, %if.end1415, %if.else1417, %if.then1377, %if.then1385, %if.else1379, %if.then1190
  %target.addr.11 = phi %struct.rtx_def* [ %235, %if.then1190 ], [ %call1235, %cond.end1232 ], [ %target.addr.2, %lor.lhs.false1196 ], [ %target.addr.4, %if.end1301 ], [ %call1378, %if.then1377 ], [ %target.addr.2, %if.then1385 ], [ %target.addr.2, %if.else1379 ], [ %call1416, %if.end1415 ], [ %call1419, %if.else1417 ], !dbg !3602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.11, metadata !2279, metadata !DIExpression()), !dbg !3240
  %247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.11, i64 0, i32 0, !dbg !4122
  %bf.load1426 = load i32, i32* %247, align 8, !dbg !4122
  %bf.clear1427 = and i32 %bf.load1426, 65535, !dbg !4122
  %cmp1428 = icmp eq i32 %bf.clear1427, 37, !dbg !4122
  br i1 %cmp1428, label %land.lhs.true1430, label %if.end1538, !dbg !4123

land.lhs.true1430:                                ; preds = %if.end1425
  %bf.load1432 = load i64, i64* %28, align 8, !dbg !4124
  %bf.cast143442 = and i64 %bf.load1432, 65535, !dbg !4124
  %cmp1435 = icmp eq i64 %bf.cast143442, 14, !dbg !4124
  br i1 %cmp1435, label %cond.true1437, label %cond.false1439, !dbg !4124

cond.true1437:                                    ; preds = %land.lhs.true1430
  %call1438 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4124
  br label %cond.end1445, !dbg !4124

cond.false1439:                                   ; preds = %land.lhs.true1430
  %bf.load1442 = load i32, i32* %mode797, align 4, !dbg !4124
  %bf.lshr1443 = lshr i32 %bf.load1442, 16, !dbg !4124
  %bf.clear1444 = and i32 %bf.lshr1443, 255, !dbg !4124
  br label %cond.end1445, !dbg !4124

cond.end1445:                                     ; preds = %cond.false1439, %cond.true1437
  %cond1446 = phi i32 [ %call1438, %cond.true1437 ], [ %bf.clear1444, %cond.false1439 ], !dbg !4124
  %cmp1447 = icmp eq i32 %cond1446, 1, !dbg !4125
  br i1 %cmp1447, label %if.end1538, label %land.lhs.true1449, !dbg !4126

land.lhs.true1449:                                ; preds = %cond.end1445
  %bf.load1450 = load i32, i32* %247, align 8, !dbg !4127
  %bf.lshr1451 = lshr i32 %bf.load1450, 16, !dbg !4127
  %bf.clear1452 = and i32 %bf.lshr1451, 255, !dbg !4127
  %bf.load1454 = load i64, i64* %28, align 8, !dbg !4128
  %bf.cast145643 = and i64 %bf.load1454, 65535, !dbg !4128
  %cmp1457 = icmp eq i64 %bf.cast145643, 14, !dbg !4128
  br i1 %cmp1457, label %cond.true1459, label %cond.false1461, !dbg !4128

cond.true1459:                                    ; preds = %land.lhs.true1449
  %call1460 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4128
  br label %cond.end1467, !dbg !4128

cond.false1461:                                   ; preds = %land.lhs.true1449
  %bf.load1464 = load i32, i32* %mode797, align 4, !dbg !4128
  %bf.lshr1465 = lshr i32 %bf.load1464, 16, !dbg !4128
  %bf.clear1466 = and i32 %bf.lshr1465, 255, !dbg !4128
  br label %cond.end1467, !dbg !4128

cond.end1467:                                     ; preds = %cond.false1461, %cond.true1459
  %cond1468 = phi i32 [ %call1460, %cond.true1459 ], [ %bf.clear1466, %cond.false1461 ], !dbg !4128
  %cmp1469 = icmp eq i32 %bf.clear1452, %cond1468, !dbg !4129
  br i1 %cmp1469, label %if.end1538, label %if.then1471, !dbg !4130

if.then1471:                                      ; preds = %cond.end1467
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !2434, metadata !DIExpression()), !dbg !3603
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #6, !dbg !4131
  %bf.load1474 = load i64, i64* %28, align 8, !dbg !4132
  %bf.lshr1475 = lshr i64 %bf.load1474, 21, !dbg !4132
  %248 = trunc i64 %bf.lshr1475 to i32, !dbg !4132
  %bf.cast1477 = and i32 %248, 1, !dbg !4132
  call void @llvm.dbg.value(metadata i32 %bf.cast1477, metadata !2437, metadata !DIExpression()), !dbg !3603
  store i32 %bf.cast1477, i32* %unsignedp, align 4, !dbg !4133
  call void @llvm.dbg.value(metadata i32 0, metadata !2438, metadata !DIExpression()), !dbg !3603
  %bf.cast148244 = and i64 %bf.load1474, 65535, !dbg !4134
  %cmp1483 = icmp eq i64 %bf.cast148244, 14, !dbg !4134
  br i1 %cmp1483, label %cond.true1485, label %cond.false1487, !dbg !4134

cond.true1485:                                    ; preds = %if.then1471
  %call1486 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4134
  br label %cond.end1493, !dbg !4134

cond.false1487:                                   ; preds = %if.then1471
  %bf.load1490 = load i32, i32* %mode797, align 4, !dbg !4134
  %bf.lshr1491 = lshr i32 %bf.load1490, 16, !dbg !4134
  %bf.clear1492 = and i32 %bf.lshr1491, 255, !dbg !4134
  br label %cond.end1493, !dbg !4134

cond.end1493:                                     ; preds = %cond.false1487, %cond.true1485
  %cond1494 = phi i32 [ %call1486, %cond.true1485 ], [ %bf.clear1492, %cond.false1487 ], !dbg !4134
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !2437, metadata !DIExpression(DW_OP_deref)), !dbg !3603
  %call1495 = call i32 @promote_function_mode(%union.tree_node* %26, i32 %cond1494, i32* nonnull %unsignedp, %union.tree_node* %43, i32 1) #7, !dbg !4135
  call void @llvm.dbg.value(metadata i32 %call1495, metadata !2439, metadata !DIExpression()), !dbg !3603
  %bf.load1496 = load i32, i32* %247, align 8, !dbg !4136
  %bf.lshr1497 = lshr i32 %bf.load1496, 16, !dbg !4136
  %bf.clear1498 = and i32 %bf.lshr1497, 255, !dbg !4136
  %cmp1499 = icmp eq i32 %bf.clear1498, %call1495, !dbg !4136
  br i1 %cmp1499, label %cond.end1503, label %cond.true1501, !dbg !4136

cond.true1501:                                    ; preds = %cond.end1493
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3042, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4136
  br label %cond.end1503, !dbg !4136

cond.end1503:                                     ; preds = %cond.end1493, %cond.true1501
  %bf.load1506 = load i64, i64* %28, align 8, !dbg !4137
  %bf.cast150845 = and i64 %bf.load1506, 65535, !dbg !4137
  %cmp1509 = icmp eq i64 %bf.cast150845, 14, !dbg !4137
  br i1 %cmp1509, label %cond.true1511, label %cond.false1513, !dbg !4137

cond.true1511:                                    ; preds = %cond.end1503
  %call1512 = call i32 @vector_type_mode(%union.tree_node* %26) #7, !dbg !4137
  br label %cond.end1519, !dbg !4137

cond.false1513:                                   ; preds = %cond.end1503
  %bf.load1516 = load i32, i32* %mode797, align 4, !dbg !4137
  %bf.lshr1517 = lshr i32 %bf.load1516, 16, !dbg !4137
  %bf.clear1518 = and i32 %bf.lshr1517, 255, !dbg !4137
  br label %cond.end1519, !dbg !4137

cond.end1519:                                     ; preds = %cond.false1513, %cond.true1511
  %cond1520 = phi i32 [ %call1512, %cond.true1511 ], [ %bf.clear1518, %cond.false1513 ], !dbg !4137
  %call1521 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %cond1520, %struct.rtx_def* %target.addr.11, i32 0) #7, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1521, metadata !2279, metadata !DIExpression()), !dbg !3240
  %249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1521, i64 0, i32 0, !dbg !4139
  %bf.load1522 = load i32, i32* %249, align 8, !dbg !4140
  %bf.set1524 = or i32 %bf.load1522, 268435456, !dbg !4140
  store i32 %bf.set1524, i32* %249, align 8, !dbg !4140
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1521, metadata !2440, metadata !DIExpression()), !dbg !4141
  %250 = load i32, i32* %unsignedp, align 4, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %250, metadata !2437, metadata !DIExpression()), !dbg !3603
  %cmp1525 = icmp slt i32 %250, 0, !dbg !4142
  br i1 %cmp1525, label %if.then1527, label %if.else1531, !dbg !4144

if.then1527:                                      ; preds = %cond.end1519
  %bf.set1530 = or i32 %bf.load1522, 402653184, !dbg !4142
  br label %do.end, !dbg !4142

if.else1531:                                      ; preds = %cond.end1519
  %bf.clear1529 = and i32 %bf.set1524, -134217729, !dbg !4145
  store i32 %bf.clear1529, i32* %249, align 8, !dbg !4146
  %251 = load i32, i32* %unsignedp, align 4, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %251, metadata !2437, metadata !DIExpression()), !dbg !3603
  %bf.value = shl i32 %251, 26, !dbg !4146
  %bf.shl = and i32 %bf.value, 67108864, !dbg !4146
  %bf.clear1535 = and i32 %bf.set1524, -201326593, !dbg !4146
  %bf.set1536 = or i32 %bf.clear1535, %bf.shl, !dbg !4146
  br label %do.end

do.end:                                           ; preds = %if.else1531, %if.then1527
  %storemerge = phi i32 [ %bf.set1536, %if.else1531 ], [ %bf.set1530, %if.then1527 ], !dbg !4145
  store i32 %storemerge, i32* %249, align 8, !dbg !4145
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #6, !dbg !4148
  br label %if.end1538, !dbg !4149

if.end1538:                                       ; preds = %cond.end1467, %cond.end1445, %do.end, %if.end1425
  %target.addr.12 = phi %struct.rtx_def* [ %call1521, %do.end ], [ %target.addr.11, %cond.end1467 ], [ %target.addr.11, %cond.end1445 ], [ %target.addr.11, %if.end1425 ], !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.12, metadata !2279, metadata !DIExpression()), !dbg !3240
  %252 = load %struct.rtx_def*, %struct.rtx_def** %old_stack_level, align 8, !dbg !4150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %252, metadata !2318, metadata !DIExpression()), !dbg !3240
  %tobool1539 = icmp eq %struct.rtx_def* %252, null, !dbg !4150
  br i1 %tobool1539, label %if.else1542, label %if.then1540, !dbg !4151

if.then1540:                                      ; preds = %if.end1538
  call void @llvm.dbg.value(metadata %struct.rtx_def* %252, metadata !2318, metadata !DIExpression()), !dbg !3240
  call void @emit_stack_restore(i32 0, %struct.rtx_def* nonnull %252, %struct.rtx_def* null) #7, !dbg !4152
  store i32 %old_stack_pointer_delta.6, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !4154
  %253 = load i32, i32* %old_pending_adj, align 4, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %253, metadata !2320, metadata !DIExpression()), !dbg !3240
  store i32 %253, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !4156
  %sub1541 = sub nsw i32 %old_stack_pointer_delta.6, %253, !dbg !4157
  call void @llvm.dbg.value(metadata i32 %sub1541, metadata !2317, metadata !DIExpression()), !dbg !3240
  store i32 %old_stack_arg_under_construction.6, i32* @stack_arg_under_construction, align 4, !dbg !4158
  store i32 %13, i32* @highest_outgoing_arg_in_use, align 4, !dbg !4159
  store i8* %14, i8** @stack_usage_map, align 8, !dbg !4160
  call void @llvm.dbg.value(metadata i32 1, metadata !2374, metadata !DIExpression()), !dbg !3572
  store i32 1, i32* %sibcall_failure, align 4, !dbg !4161
  br label %if.end1601, !dbg !4162

if.else1542:                                      ; preds = %if.end1538
  %254 = load i32, i32* @target_flags, align 4, !dbg !4163
  %and1543 = and i32 %254, 4, !dbg !4163
  %cmp1544 = icmp eq i32 %and1543, 0, !dbg !4163
  br i1 %cmp1544, label %lor.lhs.false1546, label %land.lhs.true1550, !dbg !4163

lor.lhs.false1546:                                ; preds = %if.else1542
  %call1547 = call i32 @ix86_cfun_abi() #7, !dbg !4163
  %cmp1548 = icmp eq i32 %call1547, 1, !dbg !4163
  %tobool1551 = icmp ne i32 %pass.0, 0, !dbg !4164
  %or.cond24 = and i1 %cmp1548, %tobool1551, !dbg !4165
  br i1 %or.cond24, label %if.then1552, label %if.end1601, !dbg !4165

land.lhs.true1550:                                ; preds = %if.else1542
  br i1 %cmp527, label %if.end1601, label %if.then1552, !dbg !4166

if.then1552:                                      ; preds = %land.lhs.true1550, %lor.lhs.false1546
  %tobool1553 = icmp eq %struct.rtx_def* %save_area.1, null, !dbg !4167
  br i1 %tobool1553, label %if.end1555, label %if.then1554, !dbg !4169

if.then1554:                                      ; preds = %if.then1552
  %255 = load i32, i32* %high_to_save, align 4, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %255, metadata !2312, metadata !DIExpression()), !dbg !3240
  %256 = load i32, i32* %low_to_save, align 4, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %256, metadata !2311, metadata !DIExpression()), !dbg !3240
  call fastcc void @restore_fixed_argument_area(%struct.rtx_def* nonnull %save_area.1, %struct.rtx_def* %argblock.6, i32 %255, i32 %256) #8, !dbg !4172
  br label %if.end1555, !dbg !4172

if.end1555:                                       ; preds = %if.then1552, %if.then1554
  call void @llvm.dbg.value(metadata i32 0, metadata !2325, metadata !DIExpression()), !dbg !3240
  br label %for.cond1556, !dbg !4173

for.cond1556:                                     ; preds = %for.inc1597, %if.end1555
  %indvars.iv85 = phi i64 [ %indvars.iv.next86, %for.inc1597 ], [ 0, %if.end1555 ], !dbg !4174
  call void @llvm.dbg.value(metadata i64 %indvars.iv85, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp1557 = icmp slt i64 %indvars.iv85, %129, !dbg !4175
  br i1 %cmp1557, label %for.body1559, label %for.end1599, !dbg !4176

for.body1559:                                     ; preds = %for.cond1556
  %save_area1562 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv85, i32 13, !dbg !4177
  %257 = load %struct.rtx_def*, %struct.rtx_def** %save_area1562, align 8, !dbg !4177
  %tobool1563 = icmp eq %struct.rtx_def* %257, null, !dbg !4178
  br i1 %tobool1563, label %for.inc1597, label %if.then1564, !dbg !4179

if.then1564:                                      ; preds = %for.body1559
  %258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %257, i64 0, i32 0, !dbg !4179
  %bf.load1568 = load i32, i32* %258, align 8, !dbg !4180
  %bf.lshr1569 = lshr i32 %bf.load1568, 16, !dbg !4180
  %bf.clear1570 = and i32 %bf.lshr1569, 255, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %bf.clear1570, metadata !2443, metadata !DIExpression()), !dbg !4181
  %stack_slot = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv85, i32 12, !dbg !4182
  %259 = load %struct.rtx_def*, %struct.rtx_def** %stack_slot, align 8, !dbg !4182
  %arrayidx1575 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4182
  %rt_rtx1576 = bitcast %union.rtunion_def* %arrayidx1575 to %struct.rtx_def**, !dbg !4182
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1576, align 8, !dbg !4182
  %call1577 = call %struct.rtx_def* @memory_address_addr_space(i32 %bf.clear1570, %struct.rtx_def* %260, i8 zeroext 0) #7, !dbg !4182
  %call1578 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear1570, %struct.rtx_def* %call1577) #7, !dbg !4183
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1578, metadata !2451, metadata !DIExpression()), !dbg !4181
  %cmp1579 = icmp eq i32 %bf.clear1570, 1, !dbg !4184
  %261 = load %struct.rtx_def*, %struct.rtx_def** %save_area1562, align 8, !dbg !4186
  br i1 %cmp1579, label %if.else1586, label %if.then1581, !dbg !4187

if.then1581:                                      ; preds = %if.then1564
  %call1585 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1578, %struct.rtx_def* %261) #7, !dbg !4188
  br label %for.inc1597, !dbg !4188

if.else1586:                                      ; preds = %if.then1564
  %constant1592 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv85, i32 10, i32 0, i32 0, !dbg !4189
  %262 = load i64, i64* %constant1592, align 8, !dbg !4189
  %call1593 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %262) #7, !dbg !4189
  %call1594 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call1578, %struct.rtx_def* %261, %struct.rtx_def* %call1593, i32 2) #7, !dbg !4190
  br label %for.inc1597

for.inc1597:                                      ; preds = %for.body1559, %if.else1586, %if.then1581
  %indvars.iv.next86 = add nuw nsw i64 %indvars.iv85, 1, !dbg !4191
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond1556, !dbg !4192, !llvm.loop !4193

for.end1599:                                      ; preds = %for.cond1556
  store i32 %13, i32* @highest_outgoing_arg_in_use, align 4, !dbg !4195
  store i8* %14, i8** @stack_usage_map, align 8, !dbg !4196
  br label %if.end1601, !dbg !4197

if.end1601:                                       ; preds = %land.lhs.true1550, %lor.lhs.false1546, %for.end1599, %if.then1540
  %old_stack_allocated.0 = phi i32 [ %sub1541, %if.then1540 ], [ %sub581, %for.end1599 ], [ %sub581, %land.lhs.true1550 ], [ %sub581, %lor.lhs.false1546 ], !dbg !3572
  call void @llvm.dbg.value(metadata i32 %old_stack_allocated.0, metadata !2317, metadata !DIExpression()), !dbg !3240
  %263 = load i32, i32* %flags, align 4, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %263, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and1602 = and i32 %263, 32, !dbg !4200
  %tobool1603 = icmp eq i32 %and1602, 0, !dbg !4200
  br i1 %tobool1603, label %if.end1609, label %land.lhs.true1604, !dbg !4201

land.lhs.true1604:                                ; preds = %if.end1601
  %264 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4202
  %nonlocal_goto_save_area = getelementptr inbounds %struct.function, %struct.function* %264, i64 0, i32 8, !dbg !4203
  %265 = load %union.tree_node*, %union.tree_node** %nonlocal_goto_save_area, align 8, !dbg !4203
  %cmp1606 = icmp eq %union.tree_node* %265, null, !dbg !4204
  br i1 %cmp1606, label %if.end1609, label %if.then1608, !dbg !4205

if.then1608:                                      ; preds = %land.lhs.true1604
  call void @update_nonlocal_goto_save_area() #7, !dbg !4206
  br label %if.end1609, !dbg !4206

if.end1609:                                       ; preds = %land.lhs.true1604, %if.end1601, %if.then1608
  call void @llvm.dbg.value(metadata i32 0, metadata !2325, metadata !DIExpression()), !dbg !3240
  br label %for.cond1610, !dbg !4207

for.cond1610:                                     ; preds = %for.inc1622, %if.end1609
  %indvars.iv87 = phi i64 [ %indvars.iv.next88, %for.inc1622 ], [ 0, %if.end1609 ], !dbg !4209
  call void @llvm.dbg.value(metadata i64 %indvars.iv87, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp1611 = icmp slt i64 %indvars.iv87, %130, !dbg !4210
  br i1 %cmp1611, label %for.body1613, label %for.end1624, !dbg !4212

for.body1613:                                     ; preds = %for.cond1610
  %aligned_regs = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv87, i32 14, !dbg !4213
  %266 = load %struct.rtx_def**, %struct.rtx_def*** %aligned_regs, align 8, !dbg !4213
  %tobool1616 = icmp eq %struct.rtx_def** %266, null, !dbg !4215
  br i1 %tobool1616, label %for.inc1622, label %if.then1617, !dbg !4216

if.then1617:                                      ; preds = %for.body1613
  %267 = bitcast %struct.rtx_def** %266 to i8*, !dbg !4216
  call void @free(i8* nonnull %267) #7, !dbg !4217
  br label %for.inc1622, !dbg !4217

for.inc1622:                                      ; preds = %for.body1613, %if.then1617
  %indvars.iv.next88 = add nuw nsw i64 %indvars.iv87, 1, !dbg !4218
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond1610, !dbg !4219, !llvm.loop !4220

for.end1624:                                      ; preds = %for.cond1610
  %call1625 = call %struct.rtx_def* @get_insns() #7, !dbg !4222
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1625, metadata !2380, metadata !DIExpression()), !dbg !3572
  call void @end_sequence() #7, !dbg !4223
  br i1 %cmp527, label %if.then1628, label %if.else1644, !dbg !4224

if.then1628:                                      ; preds = %for.end1624
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1625, metadata !2283, metadata !DIExpression()), !dbg !3240
  store i32 %save_pending_stack_adjust.0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !4225
  store i32 %save_stack_pointer_delta.0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !4228
  call void @llvm.dbg.value(metadata i32 0, metadata !2325, metadata !DIExpression()), !dbg !3240
  br label %for.cond1629, !dbg !4229

for.cond1629:                                     ; preds = %for.body1632, %if.then1628
  %indvars.iv89 = phi i64 [ %indvars.iv.next90, %for.body1632 ], [ 0, %if.then1628 ], !dbg !4231
  call void @llvm.dbg.value(metadata i64 %indvars.iv89, metadata !2325, metadata !DIExpression()), !dbg !3240
  %cmp1630 = icmp slt i64 %indvars.iv89, %131, !dbg !4232
  br i1 %cmp1630, label %for.body1632, label %for.end1643, !dbg !4234

for.body1632:                                     ; preds = %for.cond1629
  %value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv89, i32 2, !dbg !4235
  store %struct.rtx_def* null, %struct.rtx_def** %value, align 8, !dbg !4237
  %aligned_regs1637 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv89, i32 14, !dbg !4238
  store %struct.rtx_def** null, %struct.rtx_def*** %aligned_regs1637, align 8, !dbg !4239
  %stack1640 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %65, i64 %indvars.iv89, i32 11, !dbg !4240
  store %struct.rtx_def* null, %struct.rtx_def** %stack1640, align 8, !dbg !4241
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1, !dbg !4242
  call void @llvm.dbg.value(metadata i32 undef, metadata !2325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3240
  br label %for.cond1629, !dbg !4243, !llvm.loop !4244

for.end1643:                                      ; preds = %for.cond1629
  %268 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @stored_args_map, align 8, !dbg !4246
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %268, i64 0, i32 0, !dbg !4246
  %269 = load i8*, i8** %popcount, align 8, !dbg !4246
  call void @free(i8* %269) #7, !dbg !4246
  %270 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @stored_args_map to i8**), align 8, !dbg !4246
  call void @free(i8* %270) #7, !dbg !4246
  br label %if.end1655, !dbg !4247

if.else1644:                                      ; preds = %for.end1624
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1625, metadata !2282, metadata !DIExpression()), !dbg !3240
  %271 = load i32, i32* %flags, align 4, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %271, metadata !2310, metadata !DIExpression()), !dbg !3240
  %and1645 = and i32 %271, 8, !dbg !4248
  %tobool1646 = icmp eq i32 %and1645, 0, !dbg !4248
  br i1 %tobool1646, label %lor.lhs.false1647, label %if.end1655, !dbg !4248

lor.lhs.false1647:                                ; preds = %if.else1644
  %272 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !4248
  %273 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !4248
  %sub1648 = sub nsw i32 %272, %273, !dbg !4248
  %cmp1649 = icmp eq i32 %old_stack_allocated.0, %sub1648, !dbg !4248
  br i1 %cmp1649, label %if.end1655, label %cond.true1651, !dbg !4248

cond.true1651:                                    ; preds = %lor.lhs.false1647
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4248
  br label %if.end1655, !dbg !4248

if.end1655:                                       ; preds = %if.else1644, %cond.true1651, %lor.lhs.false1647, %for.end1643
  %tail_call_insns.1 = phi %struct.rtx_def* [ %call1625, %for.end1643 ], [ %tail_call_insns.0, %if.else1644 ], [ %tail_call_insns.0, %lor.lhs.false1647 ], [ %tail_call_insns.0, %cond.true1651 ], !dbg !3240
  %normal_call_insns.1 = phi %struct.rtx_def* [ %normal_call_insns.0, %for.end1643 ], [ %call1625, %if.else1644 ], [ %call1625, %lor.lhs.false1647 ], [ %call1625, %cond.true1651 ], !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %normal_call_insns.1, metadata !2282, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail_call_insns.1, metadata !2283, metadata !DIExpression()), !dbg !3240
  %274 = load i32, i32* %sibcall_failure, align 4, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %274, metadata !2374, metadata !DIExpression()), !dbg !3572
  %tobool1656 = icmp ne i32 %274, 0, !dbg !4250
  %tail_call_insns.2 = select i1 %tobool1656, %struct.rtx_def* null, %struct.rtx_def* %tail_call_insns.1, !dbg !4252
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail_call_insns.2, metadata !2283, metadata !DIExpression()), !dbg !3240
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120) #6, !dbg !4253
  br i1 %tobool1656, label %for.inc1669, label %for.end1671

for.inc1669:                                      ; preds = %if.end1655
  %inc1670 = add nuw nsw i32 %pass.0, 1, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %inc1670, metadata !2290, metadata !DIExpression()), !dbg !3240
  br label %for.cond523, !dbg !4255, !llvm.loop !4256

for.end1671:                                      ; preds = %for.cond523, %if.end1655
  %stack_usage_map_buf.8 = phi i8* [ %stack_usage_map_buf.7, %if.end1655 ], [ %stack_usage_map_buf.0, %for.cond523 ], !dbg !3240
  %tail_call_insns.3 = phi %struct.rtx_def* [ %tail_call_insns.2, %if.end1655 ], [ %tail_call_insns.0, %for.cond523 ], !dbg !3240
  %normal_call_insns.2 = phi %struct.rtx_def* [ %normal_call_insns.1, %if.end1655 ], [ %normal_call_insns.0, %for.cond523 ], !dbg !3607
  %target.addr.13 = phi %struct.rtx_def* [ %target.addr.12, %if.end1655 ], [ %target.addr.2, %for.cond523 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.13, metadata !2279, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %normal_call_insns.2, metadata !2282, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail_call_insns.3, metadata !2283, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i8* %stack_usage_map_buf.8, metadata !2316, metadata !DIExpression()), !dbg !3240
  %tobool1672 = icmp eq %struct.rtx_def* %tail_call_insns.3, null, !dbg !4258
  br i1 %tobool1672, label %if.else1675, label %if.then1673, !dbg !4260

if.then1673:                                      ; preds = %for.end1671
  %call1674 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %tail_call_insns.3) #7, !dbg !4261
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 39), align 1, !dbg !4263
  br label %if.end1677, !dbg !4264

if.else1675:                                      ; preds = %for.end1671
  %call1676 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %normal_call_insns.2) #7, !dbg !4265
  br label %if.end1677

if.end1677:                                       ; preds = %if.else1675, %if.then1673
  %275 = load i32, i32* @expand_call.currently_expanding_call, align 4, !dbg !4266
  %dec1678 = add nsw i32 %275, -1, !dbg !4266
  store i32 %dec1678, i32* @expand_call.currently_expanding_call, align 4, !dbg !4266
  %tobool1679 = icmp eq i8* %stack_usage_map_buf.8, null, !dbg !4267
  br i1 %tobool1679, label %cleanup1682, label %if.then1680, !dbg !4269

if.then1680:                                      ; preds = %if.end1677
  call void @free(i8* nonnull %stack_usage_map_buf.8) #7, !dbg !4270
  br label %cleanup1682, !dbg !4270

cleanup1682:                                      ; preds = %if.end1677, %if.then1680, %cleanup
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ %target.addr.13, %if.then1680 ], [ %target.addr.13, %if.end1677 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #6, !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #6, !dbg !4271
  call void @llvm.dbg.value(metadata i8* %try_tail_call, metadata !2289, metadata !DIExpression(DW_OP_deref)), !dbg !3240
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %try_tail_call) #6, !dbg !4271
  ret %struct.rtx_def* %retval.1, !dbg !4271
}

declare dso_local i32 @ix86_cfun_abi() local_unnamed_addr #2

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !4272 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4277, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !4278, metadata !DIExpression()), !dbg !4279
  tail call fastcc void @init_call_expr_arg_iterator(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) #8, !dbg !4280
  %call = tail call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* %iter) #8, !dbg !4281
  ret %union.tree_node* %call, !dbg !4282
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !4283 {
entry:
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !4287, metadata !DIExpression()), !dbg !4289
  %i = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !4290
  %0 = load i32, i32* %i, align 4, !dbg !4290
  %n = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !4292
  %1 = load i32, i32* %n, align 8, !dbg !4292
  %cmp = icmp slt i32 %0, %1, !dbg !4293
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4294

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.call_expr_arg_iterator_d* %iter to %struct.tree_exp**, !dbg !4295
  %3 = load %struct.tree_exp*, %struct.tree_exp** %2, align 8, !dbg !4295
  %add = add nsw i32 %0, 3, !dbg !4295
  %idxprom = sext i32 %add to i64, !dbg !4295
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %3, i64 0, i32 3, i64 %idxprom, !dbg !4295
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4295
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4288, metadata !DIExpression()), !dbg !4289
  %inc = add nsw i32 %0, 1, !dbg !4296
  store i32 %inc, i32* %i, align 4, !dbg !4296
  br label %cleanup, !dbg !4297

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %4, %if.end ], [ null, %entry ], !dbg !4289
  ret %union.tree_node* %retval.0, !dbg !4298
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !4299 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4303, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4304, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4305, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !4306, metadata !DIExpression()), !dbg !4307
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier, %struct.rtx_def** null) #7, !dbg !4308
  ret %struct.rtx_def* %call, !dbg !4309
}

declare dso_local i32 @ix86_reg_parm_stack_space(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @ix86_function_type_abi(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @aggregate_value_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @assign_temp(%union.tree_node*, i32, i32, i32) local_unnamed_addr #2

declare dso_local void @mark_temp_addr_taken(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.cgraph_rtl_info* @cgraph_rtl_info(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @split_complex_types(%union.tree_node* %types) unnamed_addr #5 !dbg !4310 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %types, metadata !4314, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.value(metadata %union.tree_node* %types, metadata !4315, metadata !DIExpression()), !dbg !4329
  br label %for.cond, !dbg !4330

for.cond:                                         ; preds = %for.inc, %entry
  %p.0 = phi %union.tree_node* [ %types, %entry ], [ %4, %for.inc ], !dbg !4331
  call void @llvm.dbg.value(metadata %union.tree_node* %p.0, metadata !4315, metadata !DIExpression()), !dbg !4329
  %tobool = icmp eq %union.tree_node* %p.0, null, !dbg !4332
  br i1 %tobool, label %cleanup39.loopexit3, label %for.body, !dbg !4332

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %p.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4333
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4333
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4316, metadata !DIExpression()), !dbg !4334
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4335
  %bf.load = load i64, i64* %2, align 8, !dbg !4335
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4337
  %cmp = icmp eq i64 %bf.cast1, 13, !dbg !4337
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4338

land.lhs.true:                                    ; preds = %for.body
  %3 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !4339
  %call = tail call zeroext i8 %3(%union.tree_node* %1) #7, !dbg !4340
  %tobool1 = icmp eq i8 %call, 0, !dbg !4340
  br i1 %tobool1, label %if.end, label %cleanup, !dbg !4341

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %cleanup, !dbg !4342

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 5, %land.lhs.true ]
  switch i32 %cleanup.dest.slot.0, label %cleanup39.loopexit3 [
    i32 0, label %for.inc
    i32 5, label %found
  ]

for.inc:                                          ; preds = %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %p.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4343
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4343
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4315, metadata !DIExpression()), !dbg !4329
  br label %for.cond, !dbg !4344, !llvm.loop !4345

found:                                            ; preds = %cleanup
  call void @llvm.dbg.label(metadata !4328), !dbg !4347
  %call2 = tail call %union.tree_node* @copy_list(%union.tree_node* %types) #7, !dbg !4348
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4314, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4315, metadata !DIExpression()), !dbg !4329
  br label %for.cond3, !dbg !4349

for.cond3:                                        ; preds = %for.inc35, %found
  %p.1 = phi %union.tree_node* [ %call2, %found ], [ %16, %for.inc35 ], !dbg !4350
  call void @llvm.dbg.value(metadata %union.tree_node* %p.1, metadata !4315, metadata !DIExpression()), !dbg !4329
  %tobool4 = icmp eq %union.tree_node* %p.1, null, !dbg !4351
  br i1 %tobool4, label %cleanup39.loopexit, label %for.body5, !dbg !4351

for.body5:                                        ; preds = %for.cond3
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %p.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4352
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4352
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4320, metadata !DIExpression()), !dbg !4353
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4354
  %bf.load9 = load i64, i64* %7, align 8, !dbg !4354
  %bf.cast112 = and i64 %bf.load9, 65535, !dbg !4355
  %cmp12 = icmp eq i64 %bf.cast112, 13, !dbg !4355
  br i1 %cmp12, label %land.lhs.true14, label %for.inc35, !dbg !4356

land.lhs.true14:                                  ; preds = %for.body5
  %8 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !4357
  %call15 = tail call zeroext i8 %8(%union.tree_node* %6) #7, !dbg !4358
  %tobool17 = icmp eq i8 %call15, 0, !dbg !4358
  br i1 %tobool17, label %for.inc35, label %if.then18, !dbg !4359

if.then18:                                        ; preds = %land.lhs.true14
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4360
  %9 = bitcast %union.tree_node** %type20 to i64*, !dbg !4360
  %10 = load i64, i64* %9, align 8, !dbg !4360
  %11 = bitcast %union.tree_node** %5 to i64*, !dbg !4361
  store i64 %10, i64* %11, align 8, !dbg !4361
  %chain24 = getelementptr inbounds %union.tree_node, %union.tree_node* %p.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4362
  %12 = bitcast %union.tree_node** %chain24 to i64*, !dbg !4362
  %13 = load i64, i64* %12, align 8, !dbg !4362
  %.cast = inttoptr i64 %10 to %union.tree_node*, !dbg !4363
  %call27 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %.cast) #7, !dbg !4363
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !4327, metadata !DIExpression()), !dbg !4364
  store %union.tree_node* %call27, %union.tree_node** %chain24, align 8, !dbg !4365
  %chain31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4366
  %14 = bitcast %union.tree_node** %chain31 to i64*, !dbg !4367
  store i64 %13, i64* %14, align 8, !dbg !4367
  %15 = load %union.tree_node*, %union.tree_node** %chain24, align 8, !dbg !4368
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !4315, metadata !DIExpression()), !dbg !4329
  br label %for.inc35, !dbg !4369

for.inc35:                                        ; preds = %land.lhs.true14, %for.body5, %if.then18
  %p.2 = phi %union.tree_node* [ %15, %if.then18 ], [ %p.1, %land.lhs.true14 ], [ %p.1, %for.body5 ], !dbg !4350
  call void @llvm.dbg.value(metadata %union.tree_node* %p.2, metadata !4315, metadata !DIExpression()), !dbg !4329
  %chain37 = getelementptr inbounds %union.tree_node, %union.tree_node* %p.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4370
  %16 = load %union.tree_node*, %union.tree_node** %chain37, align 8, !dbg !4370
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4315, metadata !DIExpression()), !dbg !4329
  br label %for.cond3, !dbg !4371, !llvm.loop !4372

cleanup39.loopexit:                               ; preds = %for.cond3
  br label %cleanup39, !dbg !4374

cleanup39.loopexit3:                              ; preds = %cleanup, %for.cond
  br label %cleanup39, !dbg !4374

cleanup39:                                        ; preds = %cleanup39.loopexit3, %cleanup39.loopexit
  %retval.0 = phi %union.tree_node* [ %call2, %cleanup39.loopexit ], [ %types, %cleanup39.loopexit3 ]
  ret %union.tree_node* %retval.0, !dbg !4374
}

declare dso_local %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @list_length(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @init_cumulative_args(%struct.ix86_args*, %union.tree_node*, %struct.rtx_def*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_argument_information(i32 %num_actuals, %struct.arg_data* %args, %struct.args_size* %args_size, i32 %n_named_args, %union.tree_node* %exp, %union.tree_node* %struct_value_addr_value, %union.tree_node* %fndecl, %union.tree_node* %fntype, %struct.ix86_args* %args_so_far, i32 %reg_parm_stack_space, %struct.rtx_def** %old_stack_level, i32* %old_pending_adj, i32* %must_preallocate, i32* %ecf_flags, i8* %may_tailcall, i8 zeroext %call_from_thunk_p) unnamed_addr #5 !dbg !4375 {
entry:
  %iter = alloca %struct.call_expr_arg_iterator_d, align 8
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %num_actuals, metadata !4382, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %struct.arg_data* %args, metadata !4383, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %struct.args_size* %args_size, metadata !4384, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32 %n_named_args, metadata !4385, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4386, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %union.tree_node* %struct_value_addr_value, metadata !4387, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !4388, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype, metadata !4389, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !4390, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32 %reg_parm_stack_space, metadata !4391, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_stack_level, metadata !4392, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32* %old_pending_adj, metadata !4393, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32* %must_preallocate, metadata !4394, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32* %ecf_flags, metadata !4395, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i8* %may_tailcall, metadata !4396, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i8 %call_from_thunk_p, metadata !4397, metadata !DIExpression()), !dbg !4432
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4433
  %bf.load = load i64, i64* %0, align 8, !dbg !4433
  %bf.cast = and i64 %bf.load, 65535, !dbg !4433
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4433
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4433
  %cmp = icmp ugt i32 %1, 3, !dbg !4433
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !4433

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %1, 11, !dbg !4433
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !4433

cond.true:                                        ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4433
  %3 = load i32, i32* %2, align 8, !dbg !4433
  br label %cond.end, !dbg !4433

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !4433
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4398, metadata !DIExpression()), !dbg !4432
  %constant = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 0, !dbg !4434
  store i64 0, i64* %constant, align 8, !dbg !4435
  %var = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 1, !dbg !4436
  store %union.tree_node* null, %union.tree_node** %var, align 8, !dbg !4437
  %sub = add nsw i32 %num_actuals, -1, !dbg !4438
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4401, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32 -1, metadata !4399, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4402, metadata !DIExpression()), !dbg !4441
  %4 = bitcast %struct.call_expr_arg_iterator_d* %iter to i8*, !dbg !4442
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #6, !dbg !4442
  %tobool = icmp eq %union.tree_node* %struct_value_addr_value, null, !dbg !4443
  br i1 %tobool, label %if.end, label %if.then, !dbg !4445

if.then:                                          ; preds = %cond.end
  %idxprom9 = sext i32 %sub to i64, !dbg !4446
  %tree_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %idxprom9, i32 0, !dbg !4448
  store %union.tree_node* %struct_value_addr_value, %union.tree_node** %tree_value, align 8, !dbg !4449
  %add = add nsw i32 %num_actuals, -2, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %add, metadata !4402, metadata !DIExpression()), !dbg !4441
  br label %if.end, !dbg !4451

if.end:                                           ; preds = %cond.end, %if.then
  %j.0 = phi i32 [ %add, %if.then ], [ %sub, %cond.end ], !dbg !4441
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !4402, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !4404, metadata !DIExpression(DW_OP_deref)), !dbg !4441
  %call = call fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !4452
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4405, metadata !DIExpression()), !dbg !4441
  br label %for.cond, !dbg !4452

for.cond:                                         ; preds = %if.end39, %if.end
  %j.1 = phi i32 [ %j.0, %if.end ], [ %add40, %if.end39 ], !dbg !4441
  %arg.0 = phi %union.tree_node* [ %call, %if.end ], [ %call41, %if.end39 ], !dbg !4453
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !4405, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !4402, metadata !DIExpression()), !dbg !4441
  %tobool11 = icmp eq %union.tree_node* %arg.0, null, !dbg !4452
  br i1 %tobool11, label %for.end, label %for.body, !dbg !4452

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4454
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4454
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4406, metadata !DIExpression()), !dbg !4455
  %6 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 10), align 8, !dbg !4456
  %tobool12 = icmp ne i8 (%union.tree_node*)* %6, null, !dbg !4457
  %tobool14 = icmp ne %union.tree_node* %5, null, !dbg !4458
  %or.cond = and i1 %tobool12, %tobool14, !dbg !4459
  br i1 %or.cond, label %land.lhs.true15, label %if.else, !dbg !4459

land.lhs.true15:                                  ; preds = %for.body
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4460
  %bf.load17 = load i64, i64* %7, align 8, !dbg !4460
  %bf.cast1914 = and i64 %bf.load17, 65535, !dbg !4461
  %cmp20 = icmp eq i64 %bf.cast1914, 13, !dbg !4461
  br i1 %cmp20, label %land.lhs.true21, label %if.else, !dbg !4462

land.lhs.true21:                                  ; preds = %land.lhs.true15
  %call22 = call zeroext i8 %6(%union.tree_node* nonnull %5) #7, !dbg !4463
  %tobool23 = icmp eq i8 %call22, 0, !dbg !4463
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !4464

if.then24:                                        ; preds = %land.lhs.true21
  %type26 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4465
  %8 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !4465
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4410, metadata !DIExpression()), !dbg !4466
  %call27 = call %union.tree_node* @build1_stat(i32 43, %union.tree_node* %8, %union.tree_node* nonnull %arg.0) #7, !dbg !4467
  %idxprom28 = sext i32 %j.1 to i64, !dbg !4468
  %tree_value30 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %idxprom28, i32 0, !dbg !4469
  store %union.tree_node* %call27, %union.tree_node** %tree_value30, align 8, !dbg !4470
  %add31 = add nsw i32 %j.1, -1, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %add31, metadata !4402, metadata !DIExpression()), !dbg !4441
  %call32 = call %union.tree_node* @build1_stat(i32 44, %union.tree_node* %8, %union.tree_node* nonnull %arg.0) #7, !dbg !4472
  %idxprom33 = sext i32 %add31 to i64, !dbg !4473
  %tree_value35 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %idxprom33, i32 0, !dbg !4474
  store %union.tree_node* %call32, %union.tree_node** %tree_value35, align 8, !dbg !4475
  br label %if.end39, !dbg !4476

if.else:                                          ; preds = %land.lhs.true21, %land.lhs.true15, %for.body
  %idxprom36 = sext i32 %j.1 to i64, !dbg !4477
  %tree_value38 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %idxprom36, i32 0, !dbg !4478
  store %union.tree_node* %arg.0, %union.tree_node** %tree_value38, align 8, !dbg !4479
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then24
  %j.2 = phi i32 [ %add31, %if.then24 ], [ %j.1, %if.else ], !dbg !4441
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !4402, metadata !DIExpression()), !dbg !4441
  %add40 = add nsw i32 %j.2, -1, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %add40, metadata !4402, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !4404, metadata !DIExpression(DW_OP_deref)), !dbg !4441
  %call41 = call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !4481
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !4405, metadata !DIExpression()), !dbg !4441
  br label %for.cond, !dbg !4481, !llvm.loop !4482

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #6, !dbg !4484
  call void @llvm.dbg.value(metadata i32 0, metadata !4400, metadata !DIExpression()), !dbg !4432
  %9 = bitcast i32* %unsignedp to i8*, !dbg !4485
  %tobool129 = icmp eq i8 %call_from_thunk_p, 0, !dbg !4486
  %tobool298 = icmp eq %union.tree_node* %fndecl, null, !dbg !4485
  %type301 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4485
  %cmp397 = icmp sgt i32 %reg_parm_stack_space, 0, !dbg !4487
  %10 = add i32 %num_actuals, -1, !dbg !4489
  %11 = sext i32 %10 to i64, !dbg !4489
  br label %for.cond42, !dbg !4489

for.cond42:                                       ; preds = %cond.end479, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end479 ], [ %11, %for.end ], !dbg !4490
  %argpos.0 = phi i32 [ %inc485, %cond.end479 ], [ 0, %for.end ], !dbg !4490
  %base107.0 = phi %union.tree_node* [ %base107.4, %cond.end479 ], [ undef, %for.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base107.0, metadata !4422, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4401, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32 %argpos.0, metadata !4400, metadata !DIExpression()), !dbg !4432
  %cmp43 = icmp slt i32 %argpos.0, %num_actuals, !dbg !4492
  br i1 %cmp43, label %for.body45, label %for.end486, !dbg !4493

for.body45:                                       ; preds = %for.cond42
  %tree_value49 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 0, !dbg !4494
  %12 = bitcast %union.tree_node** %tree_value49 to %struct.tree_common**, !dbg !4494
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !4494
  %type51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !4494
  %14 = load %union.tree_node*, %union.tree_node** %type51, align 8, !dbg !4494
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !4413, metadata !DIExpression()), !dbg !4485
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #6, !dbg !4495
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4496
  %cmp52 = icmp eq %union.tree_node* %14, %15, !dbg !4498
  br i1 %cmp52, label %if.then57, label %lor.lhs.false, !dbg !4499

lor.lhs.false:                                    ; preds = %for.body45
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4500
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !4500
  %cmp55 = icmp eq %union.tree_node* %17, null, !dbg !4500
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !4501

if.then57:                                        ; preds = %lor.lhs.false, %for.body45
  %18 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !4502
  %arrayidx59 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, !dbg !4503
  %19 = bitcast %struct.arg_data* %arrayidx59 to i64*, !dbg !4504
  store i64 %18, i64* %19, align 8, !dbg !4504
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4505
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !4413, metadata !DIExpression()), !dbg !4485
  br label %if.end61, !dbg !4503

if.end61:                                         ; preds = %lor.lhs.false, %if.then57
  %type46.0 = phi %union.tree_node* [ %20, %if.then57 ], [ %14, %lor.lhs.false ], !dbg !4485
  call void @llvm.dbg.value(metadata %union.tree_node* %type46.0, metadata !4413, metadata !DIExpression()), !dbg !4485
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %type46.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4506
  %bf.load63 = load i64, i64* %21, align 8, !dbg !4506
  %bf.cast652 = and i64 %bf.load63, 65535, !dbg !4508
  %cmp66 = icmp eq i64 %bf.cast652, 17, !dbg !4508
  br i1 %cmp66, label %land.lhs.true75, label %lor.lhs.false68, !dbg !4509

lor.lhs.false68:                                  ; preds = %if.end61
  %cmp73 = icmp eq i64 %bf.cast652, 16, !dbg !4510
  br i1 %cmp73, label %land.lhs.true75, label %if.end84, !dbg !4511

land.lhs.true75:                                  ; preds = %lor.lhs.false68, %if.end61
  %type76 = bitcast %union.tree_node* %type46.0 to %struct.tree_type*, !dbg !4512
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type76, i64 0, i32 6, !dbg !4512
  %bf.load77 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !4512
  %bf.clear78 = and i32 %bf.load77, 4096, !dbg !4512
  %tobool79 = icmp eq i32 %bf.clear78, 0, !dbg !4512
  br i1 %tobool79, label %if.end84, label %if.then80, !dbg !4513

if.then80:                                        ; preds = %land.lhs.true75
  %call81 = call %union.tree_node* @first_field(%union.tree_node* %type46.0) #7, !dbg !4514
  %type83 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4514
  %22 = load %union.tree_node*, %union.tree_node** %type83, align 8, !dbg !4514
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !4413, metadata !DIExpression()), !dbg !4485
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4515
  %bf.load86.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4516
  br label %if.end84, !dbg !4517

if.end84:                                         ; preds = %land.lhs.true75, %if.then80, %lor.lhs.false68
  %bf.load86 = phi i64 [ %bf.load86.pre, %if.then80 ], [ %bf.load63, %land.lhs.true75 ], [ %bf.load63, %lor.lhs.false68 ], !dbg !4516
  %type46.1 = phi %union.tree_node* [ %22, %if.then80 ], [ %type46.0, %land.lhs.true75 ], [ %type46.0, %lor.lhs.false68 ], !dbg !4485
  call void @llvm.dbg.value(metadata %union.tree_node* %type46.1, metadata !4413, metadata !DIExpression()), !dbg !4485
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %type46.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4516
  %bf.cast884 = and i64 %bf.load86, 65535, !dbg !4516
  %cmp89 = icmp eq i64 %bf.cast884, 14, !dbg !4516
  br i1 %cmp89, label %cond.true91, label %cond.false93, !dbg !4516

cond.true91:                                      ; preds = %if.end84
  %call92 = call i32 @vector_type_mode(%union.tree_node* %type46.1) #7, !dbg !4516
  br label %cond.end99, !dbg !4516

cond.false93:                                     ; preds = %if.end84
  %type94 = bitcast %union.tree_node* %type46.1 to %struct.tree_type*, !dbg !4516
  %mode95 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type94, i64 0, i32 6, !dbg !4516
  %bf.load96 = load i32, i32* %mode95, align 4, !dbg !4516
  %bf.lshr97 = lshr i32 %bf.load96, 16, !dbg !4516
  %bf.clear98 = and i32 %bf.lshr97, 255, !dbg !4516
  br label %cond.end99, !dbg !4516

cond.end99:                                       ; preds = %cond.false93, %cond.true91
  %cond100 = phi i32 [ %call92, %cond.true91 ], [ %bf.clear98, %cond.false93 ], !dbg !4516
  %cmp101 = icmp slt i32 %argpos.0, %n_named_args, !dbg !4518
  %conv103 = zext i1 %cmp101 to i8, !dbg !4519
  %call104 = call zeroext i8 @pass_by_reference(%struct.ix86_args* %args_so_far, i32 %cond100, %union.tree_node* %type46.1, i8 zeroext %conv103) #7, !dbg !4520
  %tobool105 = icmp eq i8 %call104, 0, !dbg !4520
  br i1 %tobool105, label %if.end276, label %if.then106, !dbg !4521

if.then106:                                       ; preds = %cond.end99
  %bf.load109 = load i64, i64* %23, align 8, !dbg !4522
  %bf.cast1118 = and i64 %bf.load109, 65535, !dbg !4522
  %cmp112 = icmp eq i64 %bf.cast1118, 14, !dbg !4522
  br i1 %cmp112, label %cond.true114, label %cond.false116, !dbg !4522

cond.true114:                                     ; preds = %if.then106
  %call115 = call i32 @vector_type_mode(%union.tree_node* %type46.1) #7, !dbg !4522
  br label %cond.end122, !dbg !4522

cond.false116:                                    ; preds = %if.then106
  %type117 = bitcast %union.tree_node* %type46.1 to %struct.tree_type*, !dbg !4522
  %mode118 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type117, i64 0, i32 6, !dbg !4522
  %bf.load119 = load i32, i32* %mode118, align 4, !dbg !4522
  %bf.lshr120 = lshr i32 %bf.load119, 16, !dbg !4522
  %bf.clear121 = and i32 %bf.lshr120, 255, !dbg !4522
  br label %cond.end122, !dbg !4522

cond.end122:                                      ; preds = %cond.false116, %cond.true114
  %cond123 = phi i32 [ %call115, %cond.true114 ], [ %bf.clear121, %cond.false116 ], !dbg !4522
  %call127 = call zeroext i8 @reference_callee_copied(%struct.ix86_args* %args_so_far, i32 %cond123, %union.tree_node* %type46.1, i8 zeroext %conv103) #7, !dbg !4523
  call void @llvm.dbg.value(metadata i8 %call127, metadata !4419, metadata !DIExpression()), !dbg !4491
  br i1 %tobool129, label %lor.lhs.false130, label %if.then176, !dbg !4524

lor.lhs.false130:                                 ; preds = %cond.end122
  %tobool132 = icmp eq i8 %call127, 0, !dbg !4525
  br i1 %tobool132, label %if.else212, label %land.lhs.true133, !dbg !4526

land.lhs.true133:                                 ; preds = %lor.lhs.false130
  %bf.load135 = load i64, i64* %23, align 8, !dbg !4527
  %bf.cast13810 = and i64 %bf.load135, 262144, !dbg !4527
  %tobool139 = icmp eq i64 %bf.cast13810, 0, !dbg !4527
  br i1 %tobool139, label %land.lhs.true140, label %if.else212, !dbg !4528

land.lhs.true140:                                 ; preds = %land.lhs.true133
  %24 = load %union.tree_node*, %union.tree_node** %tree_value49, align 8, !dbg !4529
  %call144 = call %union.tree_node* @get_base_address(%union.tree_node* %24) #7, !dbg !4530
  call void @llvm.dbg.value(metadata %union.tree_node* %call144, metadata !4422, metadata !DIExpression()), !dbg !4491
  %tobool145 = icmp eq %union.tree_node* %call144, null, !dbg !4531
  br i1 %tobool145, label %if.else212, label %land.lhs.true146, !dbg !4532

land.lhs.true146:                                 ; preds = %land.lhs.true140
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4533
  %bf.load148 = load i64, i64* %25, align 8, !dbg !4533
  %bf.cast15011 = and i64 %bf.load148, 65535, !dbg !4534
  %cmp151 = icmp eq i64 %bf.cast15011, 141, !dbg !4534
  br i1 %cmp151, label %if.else212, label %land.lhs.true153, !dbg !4535

land.lhs.true153:                                 ; preds = %land.lhs.true146
  %arrayidx159 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast15011, !dbg !4536
  %26 = load i32, i32* %arrayidx159, align 4, !dbg !4536
  %cmp160 = icmp eq i32 %26, 3, !dbg !4536
  br i1 %cmp160, label %lor.lhs.false162, label %if.then176, !dbg !4537

lor.lhs.false162:                                 ; preds = %land.lhs.true153
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %call144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4538
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4538
  %tobool163 = icmp eq %struct.rtx_def* %27, null, !dbg !4538
  br i1 %tobool163, label %cond.false167, label %cond.true164, !dbg !4538

cond.true164:                                     ; preds = %lor.lhs.false162
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 0, !dbg !4538
  br label %cond.end170, !dbg !4538

cond.false167:                                    ; preds = %lor.lhs.false162
  call void @make_decl_rtl(%union.tree_node* nonnull %call144) #7, !dbg !4538
  %.phi.trans.insert17 = bitcast %struct.rtx_def** %rtl to i32**, !dbg !4486
  %cond17113.pre = load i32*, i32** %.phi.trans.insert17, align 8, !dbg !4538
  br label %cond.end170, !dbg !4538

cond.end170:                                      ; preds = %cond.false167, %cond.true164
  %cond17113 = phi i32* [ %cond17113.pre, %cond.false167 ], [ %28, %cond.true164 ], !dbg !4538
  %bf.load172 = load i32, i32* %cond17113, align 8, !dbg !4538
  %bf.clear173 = and i32 %bf.load172, 65535, !dbg !4538
  %cmp174 = icmp eq i32 %bf.clear173, 43, !dbg !4538
  br i1 %cmp174, label %if.then176, label %if.else212, !dbg !4539

if.then176:                                       ; preds = %cond.end122, %cond.end170, %land.lhs.true153
  %base107.1 = phi %union.tree_node* [ %base107.0, %cond.end122 ], [ %call144, %cond.end170 ], [ %call144, %land.lhs.true153 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base107.1, metadata !4422, metadata !DIExpression()), !dbg !4491
  br i1 %tobool129, label %land.lhs.true178, label %if.end195, !dbg !4540

land.lhs.true178:                                 ; preds = %if.then176
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %base107.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4543
  %bf.load180 = load i64, i64* %29, align 8, !dbg !4543
  %bf.cast182 = and i64 %bf.load180, 65535, !dbg !4543
  %arrayidx184 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast182, !dbg !4543
  %30 = load i32, i32* %arrayidx184, align 4, !dbg !4543
  %cmp185 = icmp eq i32 %30, 3, !dbg !4543
  br i1 %cmp185, label %land.lhs.true187, label %if.end195, !dbg !4544

land.lhs.true187:                                 ; preds = %land.lhs.true178
  %bf.cast19212 = and i64 %bf.load180, 67108864, !dbg !4545
  %tobool193 = icmp eq i64 %bf.cast19212, 0, !dbg !4545
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !4546

if.then194:                                       ; preds = %land.lhs.true187
  store i8 0, i8* %may_tailcall, align 1, !dbg !4547
  br label %if.end195, !dbg !4548

if.end195:                                        ; preds = %land.lhs.true187, %if.then176, %if.then194, %land.lhs.true178
  %31 = load %union.tree_node*, %union.tree_node** %tree_value49, align 8, !dbg !4549
  %call199 = call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %31) #7, !dbg !4550
  store %union.tree_node* %call199, %union.tree_node** %tree_value49, align 8, !dbg !4551
  %type207 = getelementptr inbounds %union.tree_node, %union.tree_node* %call199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4552
  %32 = load %union.tree_node*, %union.tree_node** %type207, align 8, !dbg !4552
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !4413, metadata !DIExpression()), !dbg !4485
  %33 = load i32, i32* %ecf_flags, align 4, !dbg !4553
  %and = and i32 %33, 1, !dbg !4555
  %tobool208 = icmp eq i32 %and, 0, !dbg !4555
  br i1 %tobool208, label %if.end276, label %if.then209, !dbg !4556

if.then209:                                       ; preds = %if.end195
  %and210 = and i32 %33, -6, !dbg !4557
  store i32 %and210, i32* %ecf_flags, align 4, !dbg !4557
  br label %if.end276, !dbg !4558

if.else212:                                       ; preds = %land.lhs.true146, %land.lhs.true140, %land.lhs.true133, %lor.lhs.false130, %cond.end170
  %base107.2 = phi %union.tree_node* [ %base107.0, %land.lhs.true133 ], [ %call144, %cond.end170 ], [ %call144, %land.lhs.true146 ], [ null, %land.lhs.true140 ], [ %base107.0, %lor.lhs.false130 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base107.2, metadata !4422, metadata !DIExpression()), !dbg !4491
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %type46.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4559
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8, !dbg !4559
  %cmp215 = icmp eq %union.tree_node* %35, null, !dbg !4559
  br i1 %cmp215, label %if.then234, label %lor.lhs.false217, !dbg !4560

lor.lhs.false217:                                 ; preds = %if.else212
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %type46.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4561
  %37 = bitcast %union.tree_node** %36 to i64**, !dbg !4561
  %38 = load i64*, i64** %37, align 8, !dbg !4561
  %bf.load220 = load i64, i64* %38, align 8, !dbg !4561
  %bf.cast2229 = and i64 %bf.load220, 65535, !dbg !4562
  %cmp223 = icmp eq i64 %bf.cast2229, 23, !dbg !4562
  %39 = bitcast i64* %38 to %union.tree_node*, !dbg !4563
  br i1 %cmp223, label %lor.lhs.false225, label %if.then234, !dbg !4563

lor.lhs.false225:                                 ; preds = %lor.lhs.false217
  %40 = load i32, i32* @flag_stack_check, align 4, !dbg !4564
  %cmp226 = icmp eq i32 %40, 1, !dbg !4565
  br i1 %cmp226, label %land.lhs.true228, label %if.else246, !dbg !4566

land.lhs.true228:                                 ; preds = %lor.lhs.false225
  %call231 = call i32 @compare_tree_int(%union.tree_node* %39, i64 40) #7, !dbg !4567
  %cmp232 = icmp sgt i32 %call231, 0, !dbg !4568
  br i1 %cmp232, label %if.then234, label %if.else246, !dbg !4569

if.then234:                                       ; preds = %lor.lhs.false217, %if.else212, %land.lhs.true228
  %41 = load %union.tree_node*, %union.tree_node** %tree_value49, align 8, !dbg !4570
  %call238 = call %struct.rtx_def* @expr_size(%union.tree_node* %41) #7, !dbg !4571
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call238, metadata !4426, metadata !DIExpression()), !dbg !4572
  %42 = load %struct.rtx_def*, %struct.rtx_def** %old_stack_level, align 8, !dbg !4573
  %cmp239 = icmp eq %struct.rtx_def* %42, null, !dbg !4575
  br i1 %cmp239, label %if.then241, label %if.end242, !dbg !4576

if.then241:                                       ; preds = %if.then234
  call void @emit_stack_save(i32 0, %struct.rtx_def** %old_stack_level, %struct.rtx_def* null) #7, !dbg !4577
  %43 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !4579
  store i32 %43, i32* %old_pending_adj, align 4, !dbg !4580
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !4581
  br label %if.end242, !dbg !4582

if.end242:                                        ; preds = %if.then241, %if.then234
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %type46.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4583
  %45 = load i32, i32* %44, align 8, !dbg !4583
  %call244 = call %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def* %call238, %struct.rtx_def* null, i32 %45) #7, !dbg !4584
  %call245 = call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %call244) #7, !dbg !4585
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call245, metadata !4423, metadata !DIExpression()), !dbg !4586
  call void @set_mem_attributes(%struct.rtx_def* %call245, %union.tree_node* %type46.1, i32 1) #7, !dbg !4587
  br label %if.end248, !dbg !4588

if.else246:                                       ; preds = %land.lhs.true228, %lor.lhs.false225
  %call247 = call %struct.rtx_def* @assign_temp(%union.tree_node* %type46.1, i32 0, i32 1, i32 0) #7, !dbg !4589
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call247, metadata !4423, metadata !DIExpression()), !dbg !4586
  br label %if.end248

if.end248:                                        ; preds = %if.else246, %if.end242
  %copy.0 = phi %struct.rtx_def* [ %call245, %if.end242 ], [ %call247, %if.else246 ], !dbg !4590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy.0, metadata !4423, metadata !DIExpression()), !dbg !4586
  %46 = load %union.tree_node*, %union.tree_node** %tree_value49, align 8, !dbg !4591
  %call252 = call %struct.rtx_def* @store_expr(%union.tree_node* %46, %struct.rtx_def* %copy.0, i32 0, i8 zeroext 0) #7, !dbg !4592
  %47 = load i32, i32* %ecf_flags, align 4, !dbg !4593
  %and253 = and i32 %47, 1, !dbg !4595
  %tobool254 = icmp eq i32 %and253, 0, !dbg !4595
  br i1 %tobool254, label %if.end257, label %if.then255, !dbg !4596

if.then255:                                       ; preds = %if.end248
  %and256 = and i32 %47, -4, !dbg !4597
  %or = or i32 %and256, 2, !dbg !4599
  store i32 %or, i32* %ecf_flags, align 4, !dbg !4599
  br label %if.end257, !dbg !4600

if.end257:                                        ; preds = %if.end248, %if.then255
  %48 = phi i32 [ %47, %if.end248 ], [ %or, %if.then255 ]
  br i1 %tobool132, label %land.lhs.true259, label %if.end264, !dbg !4601

land.lhs.true259:                                 ; preds = %if.end257
  %and260 = and i32 %48, 2, !dbg !4603
  %tobool261 = icmp eq i32 %and260, 0, !dbg !4603
  br i1 %tobool261, label %if.end264, label %if.then262, !dbg !4604

if.then262:                                       ; preds = %land.lhs.true259
  %and263 = and i32 %48, -7, !dbg !4605
  store i32 %and263, i32* %ecf_flags, align 4, !dbg !4605
  br label %if.end264, !dbg !4606

if.end264:                                        ; preds = %land.lhs.true259, %if.end257, %if.then262
  %call265 = call %union.tree_node* @make_tree(%union.tree_node* %type46.1, %struct.rtx_def* %copy.0) #7, !dbg !4607
  %call266 = call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %call265) #7, !dbg !4608
  store %union.tree_node* %call266, %union.tree_node** %tree_value49, align 8, !dbg !4609
  %type274 = getelementptr inbounds %union.tree_node, %union.tree_node* %call266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4610
  %49 = load %union.tree_node*, %union.tree_node** %type274, align 8, !dbg !4610
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !4413, metadata !DIExpression()), !dbg !4485
  store i8 0, i8* %may_tailcall, align 1, !dbg !4611
  br label %if.end276

if.end276:                                        ; preds = %if.end195, %cond.end99, %if.end264, %if.then209
  %type46.3 = phi %union.tree_node* [ %type46.1, %cond.end99 ], [ %49, %if.end264 ], [ %32, %if.then209 ], [ %32, %if.end195 ], !dbg !4485
  %base107.4 = phi %union.tree_node* [ %base107.0, %cond.end99 ], [ %base107.2, %if.end264 ], [ %base107.1, %if.then209 ], [ %base107.1, %if.end195 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %base107.4, metadata !4422, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* %type46.3, metadata !4413, metadata !DIExpression()), !dbg !4485
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %type46.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4612
  %bf.load278 = load i64, i64* %50, align 8, !dbg !4612
  %bf.lshr279 = lshr i64 %bf.load278, 21, !dbg !4612
  %51 = trunc i64 %bf.lshr279 to i32, !dbg !4612
  %bf.cast281 = and i32 %51, 1, !dbg !4612
  call void @llvm.dbg.value(metadata i32 %bf.cast281, metadata !4417, metadata !DIExpression()), !dbg !4485
  store i32 %bf.cast281, i32* %unsignedp, align 4, !dbg !4613
  %bf.cast2855 = and i64 %bf.load278, 65535, !dbg !4614
  %cmp286 = icmp eq i64 %bf.cast2855, 14, !dbg !4614
  br i1 %cmp286, label %cond.true288, label %cond.false290, !dbg !4614

cond.true288:                                     ; preds = %if.end276
  %call289 = call i32 @vector_type_mode(%union.tree_node* %type46.3) #7, !dbg !4614
  br label %cond.end296, !dbg !4614

cond.false290:                                    ; preds = %if.end276
  %type291 = bitcast %union.tree_node* %type46.3 to %struct.tree_type*, !dbg !4614
  %mode292 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type291, i64 0, i32 6, !dbg !4614
  %bf.load293 = load i32, i32* %mode292, align 4, !dbg !4614
  %bf.lshr294 = lshr i32 %bf.load293, 16, !dbg !4614
  %bf.clear295 = and i32 %bf.lshr294, 255, !dbg !4614
  br label %cond.end296, !dbg !4614

cond.end296:                                      ; preds = %cond.false290, %cond.true288
  %cond297 = phi i32 [ %call289, %cond.true288 ], [ %bf.clear295, %cond.false290 ], !dbg !4614
  br i1 %tobool298, label %cond.end303, label %cond.true299, !dbg !4615

cond.true299:                                     ; preds = %cond.end296
  %52 = load %union.tree_node*, %union.tree_node** %type301, align 8, !dbg !4616
  br label %cond.end303, !dbg !4615

cond.end303:                                      ; preds = %cond.end296, %cond.true299
  %cond304 = phi %union.tree_node* [ %52, %cond.true299 ], [ %fntype, %cond.end296 ], !dbg !4615
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !4417, metadata !DIExpression(DW_OP_deref)), !dbg !4485
  %call305 = call i32 @promote_function_mode(%union.tree_node* %type46.3, i32 %cond297, i32* nonnull %unsignedp, %union.tree_node* %cond304, i32 0) #7, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %call305, metadata !4418, metadata !DIExpression()), !dbg !4485
  %53 = load i32, i32* %unsignedp, align 4, !dbg !4618
  call void @llvm.dbg.value(metadata i32 %53, metadata !4417, metadata !DIExpression()), !dbg !4485
  %unsignedp308 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 7, !dbg !4619
  store i32 %53, i32* %unsignedp308, align 8, !dbg !4620
  %mode311 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 1, !dbg !4621
  store i32 %call305, i32* %mode311, align 8, !dbg !4622
  %conv313 = zext i1 %cmp101 to i32, !dbg !4623
  %call314 = call %struct.rtx_def* @function_arg(%struct.ix86_args* %args_so_far, i32 %call305, %union.tree_node* %type46.3, i32 %conv313) #7, !dbg !4623
  %reg = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 4, !dbg !4624
  store %struct.rtx_def* %call314, %struct.rtx_def** %reg, align 8, !dbg !4625
  %54 = ptrtoint %struct.rtx_def* %call314 to i64, !dbg !4626
  %tail_call_reg = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 5, !dbg !4627
  %55 = bitcast %struct.rtx_def** %tail_call_reg to i64*, !dbg !4628
  store i64 %54, i64* %55, align 8, !dbg !4628
  %tobool325 = icmp eq %struct.rtx_def* %call314, null, !dbg !4629
  br i1 %tobool325, label %if.end333, label %if.then326, !dbg !4631

if.then326:                                       ; preds = %cond.end303
  %56 = load i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 13), align 8, !dbg !4632
  %call330 = call i32 %56(%struct.ix86_args* %args_so_far, i32 %call305, %union.tree_node* %type46.3, i8 zeroext %conv103) #7, !dbg !4633
  %partial = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 8, !dbg !4634
  store i32 %call330, i32* %partial, align 4, !dbg !4635
  br label %if.end333, !dbg !4636

if.end333:                                        ; preds = %cond.end303, %if.then326
  %57 = load i8 (i32, %union.tree_node*)*, i8 (i32, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 11), align 8, !dbg !4637
  %call334 = call zeroext i8 %57(i32 %call305, %union.tree_node* %type46.3) #7, !dbg !4638
  %conv335 = zext i8 %call334 to i32, !dbg !4638
  %pass_on_stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 9, !dbg !4639
  store i32 %conv335, i32* %pass_on_stack, align 8, !dbg !4640
  %58 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4641
  %tobool341 = icmp eq %struct.rtx_def* %58, null, !dbg !4643
  br i1 %tobool341, label %if.end365, label %land.lhs.true342, !dbg !4644

land.lhs.true342:                                 ; preds = %if.end333
  %59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i64 0, i32 0, !dbg !4644
  %bf.load346 = load i32, i32* %59, align 8, !dbg !4645
  %bf.clear347 = and i32 %bf.load346, 65535, !dbg !4645
  %cmp348 = icmp eq i32 %bf.clear347, 15, !dbg !4646
  br i1 %cmp348, label %land.lhs.true350, label %if.end365, !dbg !4647

land.lhs.true350:                                 ; preds = %land.lhs.true342
  %arrayidx354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4648
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx354 to %struct.rtvec_def**, !dbg !4648
  %60 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4648
  %arrayidx355 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %60, i64 0, i32 1, i64 0, !dbg !4648
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx355, align 8, !dbg !4648
  %arrayidx358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4648
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx358 to %struct.rtx_def**, !dbg !4648
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4648
  %cmp359 = icmp eq %struct.rtx_def* %62, null, !dbg !4649
  br i1 %cmp359, label %if.then361, label %if.end365, !dbg !4650

if.then361:                                       ; preds = %land.lhs.true350
  store i32 1, i32* %pass_on_stack, align 8, !dbg !4651
  br label %if.end365, !dbg !4652

if.end365:                                        ; preds = %if.end333, %if.then361, %land.lhs.true350, %land.lhs.true342
  %63 = phi i32 [ %conv335, %if.end333 ], [ 1, %if.then361 ], [ %conv335, %land.lhs.true350 ], [ %conv335, %land.lhs.true342 ]
  %bf.load367 = load i64, i64* %50, align 8, !dbg !4653
  %bf.cast3706 = and i64 %bf.load367, 262144, !dbg !4653
  %tobool371 = icmp eq i64 %bf.cast3706, 0, !dbg !4653
  br i1 %tobool371, label %lor.lhs.false372, label %if.then383, !dbg !4655

lor.lhs.false372:                                 ; preds = %if.end365
  %tobool376 = icmp eq i32 %63, 0, !dbg !4656
  br i1 %tobool376, label %if.end384, label %land.lhs.true377, !dbg !4657

land.lhs.true377:                                 ; preds = %lor.lhs.false372
  br i1 %tobool341, label %if.end384, label %if.then383, !dbg !4658

if.then383:                                       ; preds = %land.lhs.true377, %if.end365
  store i32 1, i32* %must_preallocate, align 4, !dbg !4659
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4660
  br label %if.end384, !dbg !4661

if.end384:                                        ; preds = %land.lhs.true377, %lor.lhs.false372, %if.then383
  %64 = phi %struct.rtx_def* [ null, %land.lhs.true377 ], [ %58, %lor.lhs.false372 ], [ %.pre, %if.then383 ], !dbg !4660
  %cmp388 = icmp eq %struct.rtx_def* %64, null, !dbg !4662
  br i1 %cmp388, label %if.then404, label %lor.lhs.false390, !dbg !4663

lor.lhs.false390:                                 ; preds = %if.end384
  %partial393 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 8, !dbg !4664
  %65 = load i32, i32* %partial393, align 4, !dbg !4664
  %cmp394 = icmp ne i32 %65, 0, !dbg !4665
  %or.cond1 = or i1 %cmp394, %cmp397, !dbg !4666
  br i1 %or.cond1, label %if.then404, label %lor.lhs.false399, !dbg !4666

lor.lhs.false399:                                 ; preds = %lor.lhs.false390
  %66 = load i32, i32* %pass_on_stack, align 8, !dbg !4667
  %tobool403 = icmp eq i32 %66, 0, !dbg !4668
  br i1 %tobool403, label %if.end423, label %if.then404, !dbg !4669

if.then404:                                       ; preds = %lor.lhs.false399, %lor.lhs.false390, %if.end384
  %cmp408 = icmp ne %struct.rtx_def* %64, null, !dbg !4670
  %conv409 = zext i1 %cmp408 to i32, !dbg !4670
  %67 = load i32, i32* %pass_on_stack, align 8, !dbg !4671
  %tobool413 = icmp eq i32 %67, 0, !dbg !4672
  br i1 %tobool413, label %cond.false415, label %cond.end419, !dbg !4672

cond.false415:                                    ; preds = %if.then404
  %partial418 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 8, !dbg !4673
  %68 = load i32, i32* %partial418, align 4, !dbg !4673
  br label %cond.end419, !dbg !4672

cond.end419:                                      ; preds = %if.then404, %cond.false415
  %cond420 = phi i32 [ %68, %cond.false415 ], [ 0, %if.then404 ], !dbg !4672
  %locate = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, !dbg !4674
  call void @locate_and_pad_parm(i32 %call305, %union.tree_node* %type46.3, i32 %conv409, i32 %cond420, %union.tree_node* %fndecl, %struct.args_size* %args_size, %struct.locate_and_pad_arg_data* nonnull %locate) #7, !dbg !4675
  br label %if.end423, !dbg !4675

if.end423:                                        ; preds = %lor.lhs.false399, %cond.end419
  %constant428 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 0, i32 0, !dbg !4676
  %69 = load i64, i64* %constant428, align 8, !dbg !4676
  %70 = load i64, i64* %constant, align 8, !dbg !4677
  %add430 = add nsw i64 %70, %69, !dbg !4677
  store i64 %add430, i64* %constant, align 8, !dbg !4677
  %var435 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 0, i32 1, !dbg !4678
  %71 = load %union.tree_node*, %union.tree_node** %var435, align 8, !dbg !4678
  %tobool436 = icmp eq %union.tree_node* %71, null, !dbg !4679
  br i1 %tobool436, label %if.end464, label %do.body, !dbg !4680

do.body:                                          ; preds = %if.end423
  call void @llvm.dbg.value(metadata %union.tree_node* %71, metadata !4429, metadata !DIExpression()), !dbg !4681
  %call444 = call i32 @host_integerp(%union.tree_node* nonnull %71, i32 0) #7, !dbg !4682
  %tobool445 = icmp eq i32 %call444, 0, !dbg !4682
  br i1 %tobool445, label %if.else450, label %if.then446, !dbg !4684

if.then446:                                       ; preds = %do.body
  %call447 = call i64 @tree_low_cst(%union.tree_node* nonnull %71, i32 0) #7, !dbg !4682
  %72 = load i64, i64* %constant, align 8, !dbg !4682
  %add449 = add nsw i64 %72, %call447, !dbg !4682
  store i64 %add449, i64* %constant, align 8, !dbg !4682
  br label %if.end464, !dbg !4682

if.else450:                                       ; preds = %do.body
  %73 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4685
  %cmp452 = icmp eq %union.tree_node* %73, null, !dbg !4685
  br i1 %cmp452, label %if.then454, label %if.else457, !dbg !4682

if.then454:                                       ; preds = %if.else450
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4685
  %call455 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %74, %union.tree_node* nonnull %71) #7, !dbg !4685
  store %union.tree_node* %call455, %union.tree_node** %var, align 8, !dbg !4685
  br label %if.end464, !dbg !4685

if.else457:                                       ; preds = %if.else450
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4685
  %call459 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %75, %union.tree_node* nonnull %71) #7, !dbg !4685
  %call460 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* nonnull %73, %union.tree_node* %call459) #7, !dbg !4685
  store %union.tree_node* %call460, %union.tree_node** %var, align 8, !dbg !4685
  br label %if.end464

if.end464:                                        ; preds = %if.end423, %if.then446, %if.else457, %if.then454
  %bf.load466 = load i64, i64* %50, align 8, !dbg !4687
  %bf.cast4687 = and i64 %bf.load466, 65535, !dbg !4687
  %cmp469 = icmp eq i64 %bf.cast4687, 14, !dbg !4687
  br i1 %cmp469, label %cond.true471, label %cond.false473, !dbg !4687

cond.true471:                                     ; preds = %if.end464
  %call472 = call i32 @vector_type_mode(%union.tree_node* %type46.3) #7, !dbg !4687
  br label %cond.end479, !dbg !4687

cond.false473:                                    ; preds = %if.end464
  %type474 = bitcast %union.tree_node* %type46.3 to %struct.tree_type*, !dbg !4687
  %mode475 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type474, i64 0, i32 6, !dbg !4687
  %bf.load476 = load i32, i32* %mode475, align 4, !dbg !4687
  %bf.lshr477 = lshr i32 %bf.load476, 16, !dbg !4687
  %bf.clear478 = and i32 %bf.lshr477, 255, !dbg !4687
  br label %cond.end479, !dbg !4687

cond.end479:                                      ; preds = %cond.false473, %cond.true471
  %cond480 = phi i32 [ %call472, %cond.true471 ], [ %bf.clear478, %cond.false473 ], !dbg !4687
  call void @function_arg_advance(%struct.ix86_args* %args_so_far, i32 %cond480, %union.tree_node* %type46.3, i32 %conv313) #7, !dbg !4687
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #6, !dbg !4688
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4689
  call void @llvm.dbg.value(metadata i32 undef, metadata !4401, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4432
  %inc485 = add nuw nsw i32 %argpos.0, 1, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %inc485, metadata !4400, metadata !DIExpression()), !dbg !4432
  br label %for.cond42, !dbg !4691, !llvm.loop !4692

for.end486:                                       ; preds = %for.cond42
  ret void, !dbg !4694
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @finalize_must_preallocate(i32 %must_preallocate, i32 %num_actuals, %struct.arg_data* %args, %struct.args_size* %args_size) unnamed_addr #5 !dbg !4695 {
entry:
  call void @llvm.dbg.value(metadata i32 %must_preallocate, metadata !4699, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %num_actuals, metadata !4700, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata %struct.arg_data* %args, metadata !4701, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata %struct.args_size* %args_size, metadata !4702, metadata !DIExpression()), !dbg !4708
  %tobool = icmp eq i32 %must_preallocate, 0, !dbg !4709
  br i1 %tobool, label %for.cond.preheader, label %if.end87, !dbg !4710

for.cond.preheader:                               ; preds = %entry
  %0 = sext i32 %num_actuals to i64, !dbg !4711
  br label %for.cond, !dbg !4711

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4713
  %partial_seen.0 = phi i32 [ 0, %for.cond.preheader ], [ %partial_seen.1, %for.inc ], !dbg !4713
  %copy_to_evaluate_size.0 = phi i32 [ 0, %for.cond.preheader ], [ %copy_to_evaluate_size.1, %for.inc ], !dbg !4714
  %must_preallocate.addr.0 = phi i32 [ 0, %for.cond.preheader ], [ %must_preallocate.addr.2, %for.inc ]
  call void @llvm.dbg.value(metadata i32 %must_preallocate.addr.0, metadata !4699, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4707, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %copy_to_evaluate_size.0, metadata !4706, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %partial_seen.0, metadata !4703, metadata !DIExpression()), !dbg !4714
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !4715
  %tobool1 = icmp eq i32 %must_preallocate.addr.0, 0, !dbg !4717
  %or.cond = and i1 %cmp, %tobool1, !dbg !4718
  br i1 %or.cond, label %for.body, label %for.end, !dbg !4718

for.body:                                         ; preds = %for.cond
  %partial = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 8, !dbg !4719
  %1 = load i32, i32* %partial, align 4, !dbg !4719
  %cmp2 = icmp sgt i32 %1, 0, !dbg !4722
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !4723

land.lhs.true:                                    ; preds = %for.body
  %pass_on_stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 9, !dbg !4724
  %2 = load i32, i32* %pass_on_stack, align 8, !dbg !4724
  %tobool5 = icmp eq i32 %2, 0, !dbg !4725
  br i1 %tobool5, label %if.end13, label %if.else, !dbg !4726

if.else:                                          ; preds = %land.lhs.true, %for.body
  %tobool7 = icmp eq i32 %partial_seen.0, 0, !dbg !4727
  br i1 %tobool7, label %if.end13, label %land.lhs.true8, !dbg !4729

land.lhs.true8:                                   ; preds = %if.else
  %reg = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 4, !dbg !4730
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4730
  %cmp11 = icmp eq %struct.rtx_def* %3, null, !dbg !4731
  %spec.select = zext i1 %cmp11 to i32, !dbg !4732
  br label %if.end13, !dbg !4732

if.end13:                                         ; preds = %land.lhs.true, %if.else, %land.lhs.true8
  %partial_seen.1 = phi i32 [ 1, %land.lhs.true ], [ %partial_seen.0, %land.lhs.true8 ], [ 0, %if.else ], !dbg !4714
  %must_preallocate.addr.2 = phi i32 [ 0, %land.lhs.true ], [ %spec.select, %land.lhs.true8 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata i32 %must_preallocate.addr.2, metadata !4699, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %partial_seen.1, metadata !4703, metadata !DIExpression()), !dbg !4714
  %tree_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 0, !dbg !4733
  %4 = bitcast %union.tree_node** %tree_value to %struct.tree_common**, !dbg !4733
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !4733
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !4733
  %6 = bitcast %union.tree_node** %type to i64**, !dbg !4733
  %7 = load i64*, i64** %6, align 8, !dbg !4733
  %bf.load = load i64, i64* %7, align 8, !dbg !4733
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4733
  %cmp16 = icmp eq i64 %bf.cast2, 14, !dbg !4733
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !4733

cond.true:                                        ; preds = %if.end13
  %8 = bitcast i64* %7 to %union.tree_node*, !dbg !4733
  %call = tail call i32 @vector_type_mode(%union.tree_node* %8) #7, !dbg !4733
  br label %cond.end, !dbg !4733

cond.false:                                       ; preds = %if.end13
  %type27 = bitcast i64* %7 to %struct.tree_type*, !dbg !4733
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type27, i64 0, i32 6, !dbg !4733
  %bf.load28 = load i32, i32* %mode, align 4, !dbg !4733
  %bf.lshr = lshr i32 %bf.load28, 16, !dbg !4733
  %bf.clear29 = and i32 %bf.lshr, 255, !dbg !4733
  br label %cond.end, !dbg !4733

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear29, %cond.false ], !dbg !4733
  %cmp30 = icmp eq i32 %cond, 1, !dbg !4735
  br i1 %cmp30, label %land.lhs.true31, label %for.inc, !dbg !4736

land.lhs.true31:                                  ; preds = %cond.end
  %9 = bitcast %union.tree_node** %tree_value to i64**, !dbg !4737
  %10 = load i64*, i64** %9, align 8, !dbg !4737
  %bf.load36 = load i64, i64* %10, align 8, !dbg !4737
  %bf.cast383 = and i64 %bf.load36, 65535, !dbg !4738
  %cmp39 = icmp eq i64 %bf.cast383, 59, !dbg !4738
  br i1 %cmp39, label %if.then69, label %lor.lhs.false, !dbg !4739

lor.lhs.false:                                    ; preds = %land.lhs.true31
  %cmp47 = icmp eq i64 %bf.cast383, 55, !dbg !4740
  br i1 %cmp47, label %if.then69, label %lor.lhs.false48, !dbg !4741

lor.lhs.false48:                                  ; preds = %lor.lhs.false
  %cmp56 = icmp eq i64 %bf.cast383, 56, !dbg !4742
  br i1 %cmp56, label %if.then69, label %lor.lhs.false57, !dbg !4743

lor.lhs.false57:                                  ; preds = %lor.lhs.false48
  %type62 = getelementptr inbounds i64, i64* %10, i64 2, !dbg !4744
  %11 = bitcast i64* %type62 to i64**, !dbg !4744
  %12 = load i64*, i64** %11, align 8, !dbg !4744
  %bf.load64 = load i64, i64* %12, align 8, !dbg !4744
  %bf.cast676 = and i64 %bf.load64, 262144, !dbg !4744
  %tobool68 = icmp eq i64 %bf.cast676, 0, !dbg !4744
  br i1 %tobool68, label %for.inc, label %if.then69, !dbg !4745

if.then69:                                        ; preds = %lor.lhs.false57, %lor.lhs.false48, %lor.lhs.false, %land.lhs.true31
  %type74 = getelementptr inbounds i64, i64* %10, i64 2, !dbg !4746
  %13 = bitcast i64* %type74 to %union.tree_node**, !dbg !4746
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !4746
  %call75 = tail call i64 @int_size_in_bytes(%union.tree_node* %14) #7, !dbg !4747
  %15 = trunc i64 %call75 to i32, !dbg !4748
  %conv76 = add i32 %copy_to_evaluate_size.0, %15, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %conv76, metadata !4706, metadata !DIExpression()), !dbg !4714
  br label %for.inc, !dbg !4749

for.inc:                                          ; preds = %lor.lhs.false57, %cond.end, %if.then69
  %copy_to_evaluate_size.1 = phi i32 [ %conv76, %if.then69 ], [ %copy_to_evaluate_size.0, %lor.lhs.false57 ], [ %copy_to_evaluate_size.0, %cond.end ], !dbg !4714
  call void @llvm.dbg.value(metadata i32 %copy_to_evaluate_size.1, metadata !4706, metadata !DIExpression()), !dbg !4714
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4750
  call void @llvm.dbg.value(metadata i32 undef, metadata !4707, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4714
  br label %for.cond, !dbg !4751, !llvm.loop !4752

for.end:                                          ; preds = %for.cond
  %copy_to_evaluate_size.0.lcssa = phi i32 [ %copy_to_evaluate_size.0, %for.cond ], !dbg !4714
  %must_preallocate.addr.0.lcssa = phi i32 [ %must_preallocate.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata i32 %copy_to_evaluate_size.0.lcssa, metadata !4706, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %must_preallocate.addr.0.lcssa, metadata !4699, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %copy_to_evaluate_size.0.lcssa, metadata !4706, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %must_preallocate.addr.0.lcssa, metadata !4699, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.value(metadata i32 %copy_to_evaluate_size.0.lcssa, metadata !4706, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %must_preallocate.addr.0.lcssa, metadata !4699, metadata !DIExpression()), !dbg !4708
  %mul = shl nsw i32 %copy_to_evaluate_size.0.lcssa, 1, !dbg !4754
  %conv78 = sext i32 %mul to i64, !dbg !4756
  %constant = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 0, !dbg !4757
  %16 = load i64, i64* %constant, align 8, !dbg !4757
  %cmp79 = icmp sgt i64 %16, %conv78, !dbg !4758
  br i1 %cmp79, label %if.end87, label %land.lhs.true81, !dbg !4759

land.lhs.true81:                                  ; preds = %for.end
  %cmp83 = icmp sgt i64 %16, 0, !dbg !4760
  %spec.select1 = select i1 %cmp83, i32 1, i32 %must_preallocate.addr.0.lcssa, !dbg !4761
  ret i32 %spec.select1, !dbg !4761

if.end87:                                         ; preds = %for.end, %entry
  %must_preallocate.addr.4 = phi i32 [ %must_preallocate, %entry ], [ %must_preallocate.addr.0.lcssa, %for.end ]
  call void @llvm.dbg.value(metadata i32 %must_preallocate.addr.4, metadata !4699, metadata !DIExpression()), !dbg !4708
  ret i32 %must_preallocate.addr.4, !dbg !4762
}

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @ix86_return_pops_args(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @promote_function_mode(%union.tree_node*, i32, i32*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @start_sequence() local_unnamed_addr #2

declare dso_local void @do_pending_stack_adjust() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @precompute_arguments(i32 %num_actuals, %struct.arg_data* %args) unnamed_addr #5 !dbg !4763 {
entry:
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %num_actuals, metadata !4767, metadata !DIExpression()), !dbg !4782
  call void @llvm.dbg.value(metadata %struct.arg_data* %args, metadata !4768, metadata !DIExpression()), !dbg !4782
  %0 = load i32, i32* @target_flags, align 4, !dbg !4783
  %and = and i32 %0, 4, !dbg !4783
  %cmp = icmp eq i32 %and, 0, !dbg !4783
  br i1 %cmp, label %lor.lhs.false, label %if.end, !dbg !4783

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @ix86_cfun_abi() #7, !dbg !4783
  %cmp1 = icmp eq i32 %call, 1, !dbg !4783
  br i1 %cmp1, label %if.end, label %cleanup.cont117, !dbg !4785

if.end:                                           ; preds = %entry, %lor.lhs.false
  call void @llvm.dbg.value(metadata i32 0, metadata !4769, metadata !DIExpression()), !dbg !4782
  %1 = bitcast i32* %unsignedp to i8*, !dbg !4786
  %2 = sext i32 %num_actuals to i64, !dbg !4787
  br label %for.cond, !dbg !4787

for.cond:                                         ; preds = %cleanup, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup ], [ 0, %if.end ], !dbg !4788
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4769, metadata !DIExpression()), !dbg !4782
  %cmp2 = icmp slt i64 %indvars.iv, %2, !dbg !4789
  br i1 %cmp2, label %for.body, label %cleanup.cont117.loopexit, !dbg !4790

for.body:                                         ; preds = %for.cond
  %tree_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 0, !dbg !4791
  %3 = bitcast %union.tree_node** %tree_value to i64**, !dbg !4791
  %4 = load i64*, i64** %3, align 8, !dbg !4791
  %bf.load = load i64, i64* %4, align 8, !dbg !4791
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4793
  %cmp3 = icmp eq i64 %bf.cast1, 59, !dbg !4793
  br i1 %cmp3, label %if.end5, label %cleanup, !dbg !4794

if.end5:                                          ; preds = %for.body
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !4794
  %type9 = getelementptr inbounds i64, i64* %4, i64 2, !dbg !4795
  %6 = bitcast i64* %type9 to %union.tree_node**, !dbg !4795
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !4795
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4770, metadata !DIExpression()), !dbg !4796
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4797
  %bf.load11 = load i64, i64* %8, align 8, !dbg !4797
  %bf.cast132 = and i64 %bf.load11, 262144, !dbg !4797
  %tobool = icmp eq i64 %bf.cast132, 0, !dbg !4797
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4797

cond.true:                                        ; preds = %if.end5
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1308, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4797
  %.pre = load %union.tree_node*, %union.tree_node** %tree_value, align 8, !dbg !4798
  br label %cond.end, !dbg !4797

cond.end:                                         ; preds = %if.end5, %cond.true
  %9 = phi %union.tree_node* [ %5, %if.end5 ], [ %.pre, %cond.true ], !dbg !4798
  %call17 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %9) #8, !dbg !4799
  %value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 2, !dbg !4800
  store %struct.rtx_def* %call17, %struct.rtx_def** %value, align 8, !dbg !4801
  %initial_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 3, !dbg !4802
  store %struct.rtx_def* %call17, %struct.rtx_def** %initial_value, align 8, !dbg !4803
  %bf.load23 = load i64, i64* %8, align 8, !dbg !4804
  %bf.cast253 = and i64 %bf.load23, 65535, !dbg !4804
  %cmp26 = icmp eq i64 %bf.cast253, 14, !dbg !4804
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !4804

cond.true27:                                      ; preds = %cond.end
  %call28 = call i32 @vector_type_mode(%union.tree_node* %7) #7, !dbg !4804
  br label %cond.end35, !dbg !4804

cond.false29:                                     ; preds = %cond.end
  %type30 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !4804
  %mode31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i64 0, i32 6, !dbg !4804
  %bf.load32 = load i32, i32* %mode31, align 4, !dbg !4804
  %bf.lshr33 = lshr i32 %bf.load32, 16, !dbg !4804
  %bf.clear34 = and i32 %bf.lshr33, 255, !dbg !4804
  br label %cond.end35, !dbg !4804

cond.end35:                                       ; preds = %cond.false29, %cond.true27
  %cond36 = phi i32 [ %call28, %cond.true27 ], [ %bf.clear34, %cond.false29 ], !dbg !4804
  call void @llvm.dbg.value(metadata i32 %cond36, metadata !4774, metadata !DIExpression()), !dbg !4796
  %mode39 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 1, !dbg !4805
  %10 = load i32, i32* %mode39, align 8, !dbg !4805
  %cmp40 = icmp eq i32 %cond36, %10, !dbg !4806
  br i1 %cmp40, label %cleanup, label %if.then41, !dbg !4807

if.then41:                                        ; preds = %cond.end35
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #6, !dbg !4808
  %unsignedp44 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 7, !dbg !4809
  %11 = load i32, i32* %unsignedp44, align 8, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %11, metadata !4775, metadata !DIExpression()), !dbg !4786
  store i32 %11, i32* %unsignedp, align 4, !dbg !4810
  %12 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !4811
  %call54 = call %struct.rtx_def* @convert_modes(i32 %10, i32 %cond36, %struct.rtx_def* %12, i32 %11) #7, !dbg !4812
  store %struct.rtx_def* %call54, %struct.rtx_def** %value, align 8, !dbg !4813
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call54, i64 0, i32 0, !dbg !4814
  %bf.load61 = load i32, i32* %13, align 8, !dbg !4814
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !4814
  %cmp63 = icmp eq i32 %bf.clear62, 37, !dbg !4814
  br i1 %cmp63, label %land.lhs.true, label %if.end112, !dbg !4815

land.lhs.true:                                    ; preds = %if.then41
  %14 = load i32, i32* %mode39, align 8, !dbg !4816
  %idxprom67 = zext i32 %14 to i64, !dbg !4816
  %arrayidx68 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom67, !dbg !4816
  %15 = load i8, i8* %arrayidx68, align 1, !dbg !4816
  %cmp69 = icmp eq i8 %15, 2, !dbg !4817
  br i1 %cmp69, label %land.lhs.true71, label %if.end112, !dbg !4818

land.lhs.true71:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !4775, metadata !DIExpression(DW_OP_deref)), !dbg !4786
  %call72 = call i32 @promote_mode(%union.tree_node* %7, i32 %cond36, i32* nonnull %unsignedp) #7, !dbg !4819
  %16 = load i32, i32* %mode39, align 8, !dbg !4820
  %cmp76 = icmp eq i32 %call72, %16, !dbg !4821
  br i1 %cmp76, label %if.end112, label %if.then78, !dbg !4822

if.then78:                                        ; preds = %land.lhs.true71
  %17 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !4823
  %call82 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %cond36, %struct.rtx_def* %17) #7, !dbg !4824
  store %struct.rtx_def* %call82, %struct.rtx_def** %initial_value, align 8, !dbg !4825
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call82, i64 0, i32 0, !dbg !4826
  %bf.load89 = load i32, i32* %18, align 8, !dbg !4827
  %bf.set = or i32 %bf.load89, 268435456, !dbg !4827
  store i32 %bf.set, i32* %18, align 8, !dbg !4827
  %19 = load %struct.rtx_def*, %struct.rtx_def** %initial_value, align 8, !dbg !4828
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !4778, metadata !DIExpression()), !dbg !4829
  %20 = load i32, i32* %unsignedp44, align 8, !dbg !4830
  %cmp97 = icmp slt i32 %20, 0, !dbg !4830
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !4832
  %bf.load100 = load i32, i32* %21, align 8, !dbg !4832
  br i1 %cmp97, label %if.then99, label %if.else, !dbg !4828

if.then99:                                        ; preds = %if.then78
  %bf.set102 = or i32 %bf.load100, 134217728, !dbg !4830
  store i32 %bf.set102, i32* %21, align 8, !dbg !4830
  br label %if.end112, !dbg !4830

if.else:                                          ; preds = %if.then78
  %bf.clear101 = and i32 %bf.load100, -134217729, !dbg !4832
  store i32 %bf.clear101, i32* %21, align 8, !dbg !4833
  %22 = load i32, i32* %unsignedp44, align 8, !dbg !4833
  %bf.value = shl i32 %22, 26, !dbg !4833
  %bf.shl = and i32 %bf.value, 67108864, !dbg !4833
  %bf.clear109 = and i32 %bf.load100, -201326593, !dbg !4833
  %bf.set110 = or i32 %bf.clear109, %bf.shl, !dbg !4833
  store i32 %bf.set110, i32* %21, align 8, !dbg !4833
  br label %if.end112

if.end112:                                        ; preds = %land.lhs.true71, %if.then99, %if.else, %land.lhs.true, %if.then41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #6, !dbg !4835
  br label %cleanup, !dbg !4836

cleanup:                                          ; preds = %cond.end35, %for.body, %if.end112
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4837
  call void @llvm.dbg.value(metadata i32 undef, metadata !4769, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4782
  br label %for.cond, !dbg !4838, !llvm.loop !4839

cleanup.cont117.loopexit:                         ; preds = %for.cond
  br label %cleanup.cont117, !dbg !4841

cleanup.cont117:                                  ; preds = %cleanup.cont117.loopexit, %lor.lhs.false
  ret void, !dbg !4841
}

declare dso_local void @stack_protect_epilogue() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal fastcc i32 @compute_argument_block_size(i32 %reg_parm_stack_space, %struct.args_size* %args_size, %union.tree_node* %fndecl, %union.tree_node* %fntype, i32 %preferred_stack_boundary) unnamed_addr #5 !dbg !4842 {
entry:
  call void @llvm.dbg.value(metadata i32 %reg_parm_stack_space, metadata !4846, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata %struct.args_size* %args_size, metadata !4847, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !4848, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype, metadata !4849, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i32 %preferred_stack_boundary, metadata !4850, metadata !DIExpression()), !dbg !4852
  %constant = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 0, !dbg !4853
  %0 = load i64, i64* %constant, align 8, !dbg !4853
  %conv = trunc i64 %0 to i32, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4851, metadata !DIExpression()), !dbg !4852
  %1 = load i32, i32* @target_flags, align 4, !dbg !4855
  %and = and i32 %1, 4, !dbg !4855
  %cmp = icmp eq i32 %and, 0, !dbg !4855
  br i1 %cmp, label %lor.lhs.false, label %land.lhs.true, !dbg !4855

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @ix86_cfun_abi() #7, !dbg !4855
  %cmp2 = icmp eq i32 %call, 1, !dbg !4855
  %cmp4 = icmp sgt i32 %preferred_stack_boundary, 32, !dbg !4857
  %or.cond = and i1 %cmp2, %cmp4, !dbg !4858
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4858

land.lhs.true:                                    ; preds = %entry
  %cmp4.old = icmp sgt i32 %preferred_stack_boundary, 32, !dbg !4857
  br i1 %cmp4.old, label %if.then, label %if.end, !dbg !4859

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.value(metadata i32 32, metadata !4850, metadata !DIExpression()), !dbg !4852
  br label %if.end, !dbg !4860

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  %preferred_stack_boundary.addr.0 = phi i32 [ 32, %if.then ], [ %preferred_stack_boundary, %land.lhs.true ], [ %preferred_stack_boundary, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata i32 %preferred_stack_boundary.addr.0, metadata !4850, metadata !DIExpression()), !dbg !4852
  %var = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 1, !dbg !4861
  %2 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4861
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !4863
  br i1 %tobool, label %if.else, label %if.then6, !dbg !4864

if.then6:                                         ; preds = %if.end
  br i1 false, label %cond.true, label %cond.false, !dbg !4865

cond.true:                                        ; preds = %if.then6
  br label %cond.end, !dbg !4865

cond.false:                                       ; preds = %if.then6
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4865
  %call13 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %3, %union.tree_node* nonnull %2) #7, !dbg !4865
  %4 = load i64, i64* %constant, align 8, !dbg !4865
  %call15 = tail call %union.tree_node* @size_int_kind(i64 %4, i32 1) #7, !dbg !4865
  %call16 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call13, %union.tree_node* %call15) #7, !dbg !4865
  br label %cond.end, !dbg !4865

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ undef, %cond.true ], [ %call16, %cond.false ], !dbg !4865
  store %union.tree_node* %cond, %union.tree_node** %var, align 8, !dbg !4867
  store i64 0, i64* %constant, align 8, !dbg !4868
  %div = sdiv i32 %preferred_stack_boundary.addr.0, 8, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %div, metadata !4850, metadata !DIExpression()), !dbg !4852
  %cmp19 = icmp sgt i32 %preferred_stack_boundary.addr.0, 15, !dbg !4870
  br i1 %cmp19, label %if.then21, label %if.end31, !dbg !4872

if.then21:                                        ; preds = %cond.end
  %5 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !4873
  %sub = add nsw i32 %div, -1, !dbg !4873
  %and22 = and i32 %5, %sub, !dbg !4873
  %tobool23 = icmp eq i32 %and22, 0, !dbg !4873
  br i1 %tobool23, label %cond.end26, label %cond.true24, !dbg !4873

cond.true24:                                      ; preds = %if.then21
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1231, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4873
  %.pre = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4875
  br label %cond.end26, !dbg !4873

cond.end26:                                       ; preds = %if.then21, %cond.true24
  %6 = phi %union.tree_node* [ %cond, %if.then21 ], [ %.pre, %cond.true24 ], !dbg !4875
  %call29 = tail call %union.tree_node* @round_up_loc(i32 0, %union.tree_node* %6, i32 %div) #7, !dbg !4875
  store %union.tree_node* %call29, %union.tree_node** %var, align 8, !dbg !4876
  br label %if.end31, !dbg !4877

if.end31:                                         ; preds = %cond.end26, %cond.end
  %7 = phi %union.tree_node* [ %call29, %cond.end26 ], [ %cond, %cond.end ]
  %cmp32 = icmp sgt i32 %reg_parm_stack_space, 0, !dbg !4878
  br i1 %cmp32, label %if.then34, label %if.end98, !dbg !4880

if.then34:                                        ; preds = %if.end31
  %conv36 = sext i32 %reg_parm_stack_space to i64, !dbg !4881
  %call37 = tail call %union.tree_node* @size_int_kind(i64 %conv36, i32 1) #7, !dbg !4881
  %call38 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 81, %union.tree_node* %7, %union.tree_node* %call37) #7, !dbg !4881
  store %union.tree_node* %call38, %union.tree_node** %var, align 8, !dbg !4883
  %tobool40 = icmp eq %union.tree_node* %fndecl, null, !dbg !4884
  br i1 %tobool40, label %cond.end43, label %cond.false42, !dbg !4884

cond.false42:                                     ; preds = %if.then34
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4884
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4884
  br label %cond.end43, !dbg !4884

cond.end43:                                       ; preds = %if.then34, %cond.false42
  %cond44 = phi %union.tree_node* [ %8, %cond.false42 ], [ %fntype, %if.then34 ], !dbg !4884
  %call45 = tail call i32 @ix86_function_type_abi(%union.tree_node* %cond44) #7, !dbg !4884
  %cmp46 = icmp eq i32 %call45, 1, !dbg !4884
  br i1 %cmp46, label %if.end98, label %if.then48, !dbg !4886

if.then48:                                        ; preds = %cond.end43
  %9 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4887
  %call51 = tail call %union.tree_node* @size_int_kind(i64 %conv36, i32 1) #7, !dbg !4887
  %call52 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 64, %union.tree_node* %9, %union.tree_node* %call51) #7, !dbg !4887
  store %union.tree_node* %call52, %union.tree_node** %var, align 8, !dbg !4888
  br label %if.end98, !dbg !4889

if.else:                                          ; preds = %if.end
  %div56 = sdiv i32 %preferred_stack_boundary.addr.0, 8, !dbg !4890
  call void @llvm.dbg.value(metadata i32 %div56, metadata !4850, metadata !DIExpression()), !dbg !4852
  %10 = icmp sgt i32 %div56, 1, !dbg !4892
  %spec.select = select i1 %10, i32 %div56, i32 1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4850, metadata !DIExpression()), !dbg !4852
  %11 = load i64, i64* %constant, align 8, !dbg !4893
  %12 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !4894
  %conv62 = sext i32 %12 to i64, !dbg !4894
  %add = add nsw i64 %11, %conv62, !dbg !4895
  %conv63 = zext i32 %spec.select to i64, !dbg !4896
  %add64 = add nsw i64 %add, %conv63, !dbg !4897
  %sub65 = add nsw i64 %add64, -1, !dbg !4898
  %13 = srem i64 %sub65, %conv63, !dbg !4899
  %mul = sub i64 %sub65, %13, !dbg !4899
  %sub70 = sub nsw i64 %mul, %conv62, !dbg !4900
  store i64 %sub70, i64* %constant, align 8, !dbg !4901
  %conv73 = sext i32 %reg_parm_stack_space to i64, !dbg !4902
  %cmp74 = icmp sgt i64 %sub70, %conv73, !dbg !4902
  br i1 %cmp74, label %cond.true76, label %cond.false78, !dbg !4902

cond.true76:                                      ; preds = %if.else
  br label %cond.end80, !dbg !4902

cond.false78:                                     ; preds = %if.else
  br label %cond.end80, !dbg !4902

cond.end80:                                       ; preds = %cond.false78, %cond.true76
  %cond81 = phi i64 [ %sub70, %cond.true76 ], [ %conv73, %cond.false78 ], !dbg !4902
  store i64 %cond81, i64* %constant, align 8, !dbg !4903
  %tobool83 = icmp eq %union.tree_node* %fndecl, null, !dbg !4904
  br i1 %tobool83, label %cond.end88, label %cond.false85, !dbg !4904

cond.false85:                                     ; preds = %cond.end80
  %type87 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4904
  %14 = load %union.tree_node*, %union.tree_node** %type87, align 8, !dbg !4904
  br label %cond.end88, !dbg !4904

cond.end88:                                       ; preds = %cond.end80, %cond.false85
  %cond89 = phi %union.tree_node* [ %14, %cond.false85 ], [ %fntype, %cond.end80 ], !dbg !4904
  %call90 = tail call i32 @ix86_function_type_abi(%union.tree_node* %cond89) #7, !dbg !4904
  %cmp91 = icmp eq i32 %call90, 1, !dbg !4904
  br i1 %cmp91, label %if.end98, label %if.then93, !dbg !4906

if.then93:                                        ; preds = %cond.end88
  %15 = load i64, i64* %constant, align 8, !dbg !4907
  %sub96 = sub nsw i64 %15, %conv73, !dbg !4907
  store i64 %sub96, i64* %constant, align 8, !dbg !4907
  br label %if.end98, !dbg !4908

if.end98:                                         ; preds = %cond.end88, %if.then93, %if.end31, %if.then48, %cond.end43
  ret i32 %conv, !dbg !4909
}

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local void @emit_stack_save(i32, %struct.rtx_def**, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @push_block(%struct.rtx_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %exp) unnamed_addr #0 !dbg !4910 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4914, metadata !DIExpression()), !dbg !4915
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0, %struct.rtx_def** null) #7, !dbg !4916
  ret %struct.rtx_def* %call, !dbg !4917
}

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @combine_pending_stack_adjustment_and_call(i32 %unadjusted_args_size, %struct.args_size* %args_size, i32 %preferred_unit_stack_boundary) unnamed_addr #5 !dbg !4918 {
entry:
  call void @llvm.dbg.value(metadata i32 %unadjusted_args_size, metadata !4922, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata %struct.args_size* %args_size, metadata !4923, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.value(metadata i32 %preferred_unit_stack_boundary, metadata !4924, metadata !DIExpression()), !dbg !4927
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !4928
  %add = add nsw i32 %0, %unadjusted_args_size, !dbg !4929
  %rem = urem i32 %add, %preferred_unit_stack_boundary, !dbg !4930
  %conv = zext i32 %rem to i64, !dbg !4931
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4926, metadata !DIExpression()), !dbg !4927
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !4932
  %rem1 = urem i32 %1, %preferred_unit_stack_boundary, !dbg !4933
  %conv2 = zext i32 %rem1 to i64, !dbg !4934
  %sub = sub nsw i64 %conv, %conv2, !dbg !4935
  call void @llvm.dbg.value(metadata i64 %sub, metadata !4926, metadata !DIExpression()), !dbg !4927
  %conv3 = sext i32 %1 to i64, !dbg !4936
  call void @llvm.dbg.value(metadata i64 %conv3, metadata !4925, metadata !DIExpression()), !dbg !4927
  %cmp = icmp ugt i32 %preferred_unit_stack_boundary, 1, !dbg !4937
  br i1 %cmp, label %if.then, label %if.end12, !dbg !4939

if.then:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %sub, 0, !dbg !4940
  %conv8 = zext i32 %preferred_unit_stack_boundary to i64, !dbg !4943
  %sub91 = sub nsw i64 %sub, %conv8, !dbg !4943
  %adjustment.0.v = select i1 %cmp5, i64 0, i64 %sub91, !dbg !4943
  %adjustment.0 = add nsw i64 %adjustment.0.v, %conv3, !dbg !4943
  br label %if.end12, !dbg !4943

if.end12:                                         ; preds = %if.then, %entry
  %adjustment.1 = phi i64 [ %conv3, %entry ], [ %adjustment.0, %if.then ], !dbg !4927
  call void @llvm.dbg.value(metadata i64 %adjustment.1, metadata !4925, metadata !DIExpression()), !dbg !4927
  %sub14 = sub nsw i64 %conv3, %adjustment.1, !dbg !4944
  %conv15 = sext i32 %unadjusted_args_size to i64, !dbg !4945
  %add16 = add nsw i64 %sub14, %conv15, !dbg !4946
  %constant = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 0, !dbg !4947
  store i64 %add16, i64* %constant, align 8, !dbg !4948
  %conv17 = trunc i64 %adjustment.1 to i32, !dbg !4949
  ret i32 %conv17, !dbg !4950
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @allocate_dynamic_stack_space(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_argument_addresses(%struct.arg_data* %args, %struct.rtx_def* %argblock, i32 %num_actuals) unnamed_addr #5 !dbg !4951 {
entry:
  call void @llvm.dbg.value(metadata %struct.arg_data* %args, metadata !4955, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock, metadata !4956, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i32 %num_actuals, metadata !4957, metadata !DIExpression()), !dbg !4973
  %tobool = icmp eq %struct.rtx_def* %argblock, null, !dbg !4974
  br i1 %tobool, label %if.end248, label %if.then, !dbg !4975

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock, metadata !4958, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i32 0, metadata !4962, metadata !DIExpression()), !dbg !4976
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %argblock, i64 0, i32 0, !dbg !4977
  %bf.load = load i32, i32* %0, align 8, !dbg !4977
  %bf.clear = and i32 %bf.load, 65535, !dbg !4977
  %cmp = icmp eq i32 %bf.clear, 49, !dbg !4979
  br i1 %cmp, label %if.then1, label %if.end, !dbg !4980

if.then1:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %argblock, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4981
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4981
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4981
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4958, metadata !DIExpression()), !dbg !4976
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %argblock, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4982
  %rt_rtx5 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !4982
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !4982
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, !dbg !4982
  %arrayidx7 = bitcast %union.u* %u6 to i64*, !dbg !4982
  %4 = load i64, i64* %arrayidx7, align 8, !dbg !4982
  %sext = shl i64 %4, 32, !dbg !4983
  %phitmp = ashr exact i64 %sext, 32, !dbg !4983
  br label %if.end, !dbg !4983

if.end:                                           ; preds = %if.then1, %if.then
  %arg_offset.0 = phi i64 [ %phitmp, %if.then1 ], [ 0, %if.then ]
  %arg_reg.0 = phi %struct.rtx_def* [ %1, %if.then1 ], [ %argblock, %if.then ], !dbg !4976
  call void @llvm.dbg.value(metadata %struct.rtx_def* %arg_reg.0, metadata !4958, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i32 0, metadata !4961, metadata !DIExpression()), !dbg !4976
  %5 = sext i32 %num_actuals to i64, !dbg !4984
  br label %for.cond, !dbg !4984

for.cond:                                         ; preds = %cleanup, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup ], [ 0, %if.end ], !dbg !4985
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4961, metadata !DIExpression()), !dbg !4976
  %cmp8 = icmp slt i64 %indvars.iv, %5, !dbg !4986
  br i1 %cmp8, label %for.body, label %if.end248.loopexit, !dbg !4987

for.body:                                         ; preds = %for.cond
  %var = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 1, i32 1, !dbg !4988
  %6 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4988
  %cmp12 = icmp eq %union.tree_node* %6, null, !dbg !4988
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !4988

cond.true:                                        ; preds = %for.body
  %constant = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 1, i32 0, !dbg !4988
  %7 = load i64, i64* %constant, align 8, !dbg !4988
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %7) #7, !dbg !4988
  br label %cond.end47, !dbg !4988

cond.false:                                       ; preds = %for.body
  br i1 false, label %cond.true25, label %cond.false32, !dbg !4988

cond.true25:                                      ; preds = %cond.false
  br label %cond.end, !dbg !4988

cond.false32:                                     ; preds = %cond.false
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4988
  %call38 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %8, %union.tree_node* nonnull %6) #7, !dbg !4988
  %constant43 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 1, i32 0, !dbg !4988
  %9 = load i64, i64* %constant43, align 8, !dbg !4988
  %call44 = tail call %union.tree_node* @size_int_kind(i64 %9, i32 1) #7, !dbg !4988
  %call45 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call38, %union.tree_node* %call44) #7, !dbg !4988
  br label %cond.end, !dbg !4988

cond.end:                                         ; preds = %cond.false32, %cond.true25
  %cond = phi %union.tree_node* [ undef, %cond.true25 ], [ %call45, %cond.false32 ], !dbg !4988
  %call46 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond) #8, !dbg !4988
  br label %cond.end47, !dbg !4988

cond.end47:                                       ; preds = %cond.end, %cond.true
  %cond48 = phi %struct.rtx_def* [ %call, %cond.true ], [ %call46, %cond.end ], !dbg !4988
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond48, metadata !4963, metadata !DIExpression()), !dbg !4989
  %var53 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 2, i32 1, !dbg !4990
  %10 = load %union.tree_node*, %union.tree_node** %var53, align 8, !dbg !4990
  %cmp54 = icmp eq %union.tree_node* %10, null, !dbg !4990
  br i1 %cmp54, label %cond.true56, label %cond.false63, !dbg !4990

cond.true56:                                      ; preds = %cond.end47
  %constant61 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 2, i32 0, !dbg !4990
  %11 = load i64, i64* %constant61, align 8, !dbg !4990
  %call62 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %11) #7, !dbg !4990
  br label %cond.end95, !dbg !4990

cond.false63:                                     ; preds = %cond.end47
  br i1 false, label %cond.true71, label %cond.false78, !dbg !4990

cond.true71:                                      ; preds = %cond.false63
  br label %cond.end92, !dbg !4990

cond.false78:                                     ; preds = %cond.false63
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !4990
  %call84 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %12, %union.tree_node* nonnull %10) #7, !dbg !4990
  %constant89 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 2, i32 0, !dbg !4990
  %13 = load i64, i64* %constant89, align 8, !dbg !4990
  %call90 = tail call %union.tree_node* @size_int_kind(i64 %13, i32 1) #7, !dbg !4990
  %call91 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call84, %union.tree_node* %call90) #7, !dbg !4990
  br label %cond.end92, !dbg !4990

cond.end92:                                       ; preds = %cond.false78, %cond.true71
  %cond93 = phi %union.tree_node* [ undef, %cond.true71 ], [ %call91, %cond.false78 ], !dbg !4990
  %call94 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond93) #8, !dbg !4990
  br label %cond.end95, !dbg !4990

cond.end95:                                       ; preds = %cond.end92, %cond.true56
  %cond96 = phi %struct.rtx_def* [ %call62, %cond.true56 ], [ %call94, %cond.end92 ], !dbg !4990
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond96, metadata !4967, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i32 0, metadata !4971, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i32 0, metadata !4972, metadata !DIExpression()), !dbg !4989
  %pass_on_stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 9, !dbg !4991
  %14 = load i32, i32* %pass_on_stack, align 8, !dbg !4991
  %tobool99 = icmp eq i32 %14, 0, !dbg !4993
  br i1 %tobool99, label %land.lhs.true, label %if.end110, !dbg !4994

land.lhs.true:                                    ; preds = %cond.end95
  %reg = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 4, !dbg !4995
  %15 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4995
  %cmp102 = icmp eq %struct.rtx_def* %15, null, !dbg !4996
  br i1 %cmp102, label %if.end110, label %land.lhs.true104, !dbg !4997

land.lhs.true104:                                 ; preds = %land.lhs.true
  %partial = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 8, !dbg !4998
  %16 = load i32, i32* %partial, align 4, !dbg !4998
  %cmp107 = icmp eq i32 %16, 0, !dbg !4999
  br i1 %cmp107, label %cleanup, label %if.end110, !dbg !5000

if.end110:                                        ; preds = %land.lhs.true, %cond.end95, %land.lhs.true104
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond48, i64 0, i32 0, !dbg !5001
  %bf.load111 = load i32, i32* %17, align 8, !dbg !5001
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !5001
  %cmp113 = icmp eq i32 %bf.clear112, 30, !dbg !5001
  br i1 %cmp113, label %if.then115, label %if.else, !dbg !5003

if.then115:                                       ; preds = %if.end110
  %u116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond48, i64 0, i32 1, !dbg !5004
  %arrayidx118 = bitcast %union.u* %u116 to i64*, !dbg !5004
  %18 = load i64, i64* %arrayidx118, align 8, !dbg !5004
  %call119 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %arg_reg.0, i64 %18) #7, !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call119, metadata !4968, metadata !DIExpression()), !dbg !4989
  br label %if.end121, !dbg !5006

if.else:                                          ; preds = %if.end110
  %call120 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %arg_reg.0, %struct.rtx_def* %cond48) #7, !dbg !5007
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call120, metadata !4968, metadata !DIExpression()), !dbg !4989
  br label %if.end121

if.end121:                                        ; preds = %if.else, %if.then115
  %addr.0 = phi %struct.rtx_def* [ %call119, %if.then115 ], [ %call120, %if.else ], !dbg !5008
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0, metadata !4968, metadata !DIExpression()), !dbg !4989
  %call123 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %addr.0, i64 %arg_offset.0) #7, !dbg !5009
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call123, metadata !4968, metadata !DIExpression()), !dbg !4989
  %partial126 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 8, !dbg !5010
  %19 = load i32, i32* %partial126, align 4, !dbg !5010
  %cmp127 = icmp eq i32 %19, 0, !dbg !5012
  br i1 %cmp127, label %if.else144, label %if.then129, !dbg !5013

if.then129:                                       ; preds = %if.end121
  %constant133 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 0, i32 0, !dbg !5014
  %20 = load i64, i64* %constant133, align 8, !dbg !5014
  %conv134 = trunc i64 %20 to i32, !dbg !5016
  call void @llvm.dbg.value(metadata i32 %conv134, metadata !4971, metadata !DIExpression()), !dbg !4989
  %mul = shl i32 %conv134, 3, !dbg !5017
  %call135 = tail call i32 @mode_for_size(i32 %mul, i32 2, i32 1) #7, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %call135, metadata !4972, metadata !DIExpression()), !dbg !4989
  %call136 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %call135, %struct.rtx_def* %call123) #7, !dbg !5019
  %stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 11, !dbg !5020
  store %struct.rtx_def* %call136, %struct.rtx_def** %stack, align 8, !dbg !5021
  %conv142 = and i64 %20, 4294967295, !dbg !5022
  %call143 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv142) #7, !dbg !5022
  tail call void @set_mem_size(%struct.rtx_def* %call136, %struct.rtx_def* %call143) #7, !dbg !5023
  br label %if.end156, !dbg !5024

if.else144:                                       ; preds = %if.end121
  %mode = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 1, !dbg !5025
  %21 = load i32, i32* %mode, align 8, !dbg !5025
  %call147 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %21, %struct.rtx_def* %call123) #7, !dbg !5027
  %stack150 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 11, !dbg !5028
  store %struct.rtx_def* %call147, %struct.rtx_def** %stack150, align 8, !dbg !5029
  %tree_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 0, !dbg !5030
  %22 = bitcast %union.tree_node** %tree_value to %struct.tree_common**, !dbg !5030
  %23 = load %struct.tree_common*, %struct.tree_common** %22, align 8, !dbg !5030
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !5030
  %24 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5030
  tail call void @set_mem_attributes(%struct.rtx_def* %call147, %union.tree_node* %24, i32 1) #7, !dbg !5031
  br label %if.end156

if.end156:                                        ; preds = %if.else144, %if.then129
  %units_on_stack.0 = phi i64 [ %20, %if.then129 ], [ 0, %if.else144 ], !dbg !4989
  %partial_mode.0 = phi i32 [ %call135, %if.then129 ], [ 0, %if.else144 ], !dbg !4989
  call void @llvm.dbg.value(metadata i32 %partial_mode.0, metadata !4972, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i32 8, metadata !4969, metadata !DIExpression()), !dbg !4989
  %boundary160 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 5, !dbg !5032
  %25 = load i32, i32* %boundary160, align 4, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %25, metadata !4970, metadata !DIExpression()), !dbg !4989
  %where_pad = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 10, i32 4, !dbg !5033
  %26 = load i32, i32* %where_pad, align 8, !dbg !5033
  %cmp164 = icmp eq i32 %26, 2, !dbg !5035
  br i1 %cmp164, label %if.else167, label %if.end180, !dbg !5036

if.else167:                                       ; preds = %if.end156
  %bf.load168 = load i32, i32* %17, align 8, !dbg !5037
  %bf.clear169 = and i32 %bf.load168, 65535, !dbg !5037
  %cmp170 = icmp eq i32 %bf.clear169, 30, !dbg !5037
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !5039

if.then172:                                       ; preds = %if.else167
  %u173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond48, i64 0, i32 1, !dbg !5040
  %arrayidx175 = bitcast %union.u* %u173 to i64*, !dbg !5040
  %27 = load i64, i64* %arrayidx175, align 8, !dbg !5040
  %.tr = trunc i64 %27 to i32, !dbg !5040
  %28 = shl i32 %.tr, 3, !dbg !5040
  %conv178 = or i32 %25, %28, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %conv178, metadata !4969, metadata !DIExpression()), !dbg !4989
  %sub = sub i32 0, %conv178, !dbg !5042
  %and = and i32 %conv178, %sub, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %and, metadata !4969, metadata !DIExpression()), !dbg !4989
  br label %if.end180, !dbg !5044

if.end180:                                        ; preds = %if.end156, %if.else167, %if.then172
  %align.1 = phi i32 [ %25, %if.end156 ], [ %and, %if.then172 ], [ 8, %if.else167 ], !dbg !5045
  call void @llvm.dbg.value(metadata i32 %align.1, metadata !4969, metadata !DIExpression()), !dbg !4989
  %stack183 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 11, !dbg !5046
  %29 = load %struct.rtx_def*, %struct.rtx_def** %stack183, align 8, !dbg !5046
  tail call void @set_mem_align(%struct.rtx_def* %29, i32 %align.1) #7, !dbg !5047
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond96, i64 0, i32 0, !dbg !5048
  %bf.load184 = load i32, i32* %30, align 8, !dbg !5048
  %bf.clear185 = and i32 %bf.load184, 65535, !dbg !5048
  %cmp186 = icmp eq i32 %bf.clear185, 30, !dbg !5048
  br i1 %cmp186, label %if.then188, label %if.else193, !dbg !5050

if.then188:                                       ; preds = %if.end180
  %u189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond96, i64 0, i32 1, !dbg !5051
  %arrayidx191 = bitcast %union.u* %u189 to i64*, !dbg !5051
  %31 = load i64, i64* %arrayidx191, align 8, !dbg !5051
  %call192 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %arg_reg.0, i64 %31) #7, !dbg !5052
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call192, metadata !4968, metadata !DIExpression()), !dbg !4989
  br label %if.end195, !dbg !5053

if.else193:                                       ; preds = %if.end180
  %call194 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %arg_reg.0, %struct.rtx_def* %cond96) #7, !dbg !5054
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call194, metadata !4968, metadata !DIExpression()), !dbg !4989
  br label %if.end195

if.end195:                                        ; preds = %if.else193, %if.then188
  %addr.1 = phi %struct.rtx_def* [ %call192, %if.then188 ], [ %call194, %if.else193 ], !dbg !5055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.1, metadata !4968, metadata !DIExpression()), !dbg !4989
  %call197 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %addr.1, i64 %arg_offset.0) #7, !dbg !5056
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call197, metadata !4968, metadata !DIExpression()), !dbg !4989
  %32 = load i32, i32* %partial126, align 4, !dbg !5057
  %cmp201 = icmp eq i32 %32, 0, !dbg !5059
  br i1 %cmp201, label %if.else212, label %if.then203, !dbg !5060

if.then203:                                       ; preds = %if.end195
  %call204 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %partial_mode.0, %struct.rtx_def* %call197) #7, !dbg !5061
  %stack_slot = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 12, !dbg !5063
  store %struct.rtx_def* %call204, %struct.rtx_def** %stack_slot, align 8, !dbg !5064
  %conv210 = and i64 %units_on_stack.0, 4294967295, !dbg !5065
  %call211 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv210) #7, !dbg !5065
  tail call void @set_mem_size(%struct.rtx_def* %call204, %struct.rtx_def* %call211) #7, !dbg !5066
  br label %if.end228, !dbg !5067

if.else212:                                       ; preds = %if.end195
  %mode215 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 1, !dbg !5068
  %33 = load i32, i32* %mode215, align 8, !dbg !5068
  %call216 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %33, %struct.rtx_def* %call197) #7, !dbg !5070
  %stack_slot219 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 12, !dbg !5071
  store %struct.rtx_def* %call216, %struct.rtx_def** %stack_slot219, align 8, !dbg !5072
  %tree_value225 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 0, !dbg !5073
  %34 = bitcast %union.tree_node** %tree_value225 to %struct.tree_common**, !dbg !5073
  %35 = load %struct.tree_common*, %struct.tree_common** %34, align 8, !dbg !5073
  %type227 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %35, i64 0, i32 2, !dbg !5073
  %36 = load %union.tree_node*, %union.tree_node** %type227, align 8, !dbg !5073
  tail call void @set_mem_attributes(%struct.rtx_def* %call216, %union.tree_node* %36, i32 1) #7, !dbg !5074
  br label %if.end228

if.end228:                                        ; preds = %if.else212, %if.then203
  %stack_slot231 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 12, !dbg !5075
  %37 = load %struct.rtx_def*, %struct.rtx_def** %stack_slot231, align 8, !dbg !5075
  %38 = load i32, i32* %boundary160, align 4, !dbg !5076
  tail call void @set_mem_align(%struct.rtx_def* %37, i32 %38) #7, !dbg !5077
  %39 = load %struct.rtx_def*, %struct.rtx_def** %stack183, align 8, !dbg !5078
  tail call void @set_mem_alias_set(%struct.rtx_def* %39, i32 0) #7, !dbg !5079
  %40 = load %struct.rtx_def*, %struct.rtx_def** %stack_slot231, align 8, !dbg !5080
  tail call void @set_mem_alias_set(%struct.rtx_def* %40, i32 0) #7, !dbg !5081
  br label %cleanup, !dbg !5082

cleanup:                                          ; preds = %land.lhs.true104, %if.end228
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5083
  call void @llvm.dbg.value(metadata i32 undef, metadata !4961, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4976
  br label %for.cond, !dbg !5084, !llvm.loop !5085

if.end248.loopexit:                               ; preds = %for.cond
  br label %if.end248, !dbg !5087

if.end248:                                        ; preds = %if.end248.loopexit, %entry
  ret void, !dbg !5087
}

declare dso_local void @anti_adjust_stack(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @rtx_for_function_call(%union.tree_node* %fndecl, %union.tree_node* %addr) unnamed_addr #5 !dbg !5088 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !5092, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !5093, metadata !DIExpression()), !dbg !5095
  %tobool = icmp eq %union.tree_node* %fndecl, null, !dbg !5096
  br i1 %tobool, label %if.else, label %if.then, !dbg !5098

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5099
  %bf.load = load i64, i64* %0, align 8, !dbg !5099
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !5099
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !5099
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5102
  %cmp = icmp ne %union.tree_node* %1, %fndecl, !dbg !5103
  %or.cond = and i1 %tobool1, %cmp, !dbg !5104
  br i1 %or.cond, label %if.then2, label %if.end, !dbg !5104

if.then2:                                         ; preds = %if.then
  tail call void @assemble_external(%union.tree_node* nonnull %fndecl) #7, !dbg !5105
  %bf.load4 = load i64, i64* %0, align 8, !dbg !5107
  %bf.set = or i64 %bf.load4, 16777216, !dbg !5107
  store i64 %bf.set, i64* %0, align 8, !dbg !5107
  br label %if.end, !dbg !5108

if.end:                                           ; preds = %if.then, %if.then2
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5109
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !5109
  %tobool6 = icmp eq %struct.rtx_def* %2, null, !dbg !5109
  br i1 %tobool6, label %cond.false, label %cond.true, !dbg !5109

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !5109

cond.false:                                       ; preds = %if.end
  tail call void @make_decl_rtl(%union.tree_node* nonnull %fndecl) #7, !dbg !5109
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !5109
  br label %cond.end, !dbg !5109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %2, %cond.true ], !dbg !5109
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5109
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5109
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5109
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !5094, metadata !DIExpression()), !dbg !5095
  br label %if.end11, !dbg !5110

if.else:                                          ; preds = %entry
  tail call void @push_temp_slots() #7, !dbg !5111
  %call = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %addr) #8, !dbg !5113
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5094, metadata !DIExpression()), !dbg !5095
  tail call void @pop_temp_slots() #7, !dbg !5114
  br label %if.end11

if.end11:                                         ; preds = %if.else, %cond.end
  %funexp.0 = phi %struct.rtx_def* [ %3, %cond.end ], [ %call, %if.else ], !dbg !5115
  call void @llvm.dbg.value(metadata %struct.rtx_def* %funexp.0, metadata !5094, metadata !DIExpression()), !dbg !5095
  ret %struct.rtx_def* %funexp.0, !dbg !5116
}

declare dso_local %struct.rtx_def* @hard_function_value(%union.tree_node*, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @precompute_register_parameters(i32 %num_actuals, %struct.arg_data* %args, i32* %reg_parm_seen) unnamed_addr #5 !dbg !5117 {
entry:
  call void @llvm.dbg.value(metadata i32 %num_actuals, metadata !5121, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata %struct.arg_data* %args, metadata !5122, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i32* %reg_parm_seen, metadata !5123, metadata !DIExpression()), !dbg !5132
  store i32 0, i32* %reg_parm_seen, align 4, !dbg !5133
  call void @llvm.dbg.value(metadata i32 0, metadata !5124, metadata !DIExpression()), !dbg !5132
  %0 = sext i32 %num_actuals to i64, !dbg !5134
  br label %for.cond, !dbg !5134

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5135
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5124, metadata !DIExpression()), !dbg !5132
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !5136
  br i1 %cmp, label %for.body, label %for.end, !dbg !5137

for.body:                                         ; preds = %for.cond
  %reg = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 4, !dbg !5138
  %1 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5138
  %cmp1 = icmp eq %struct.rtx_def* %1, null, !dbg !5139
  br i1 %cmp1, label %for.inc, label %land.lhs.true, !dbg !5140

land.lhs.true:                                    ; preds = %for.body
  %pass_on_stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 9, !dbg !5141
  %2 = load i32, i32* %pass_on_stack, align 8, !dbg !5141
  %tobool = icmp eq i32 %2, 0, !dbg !5142
  br i1 %tobool, label %if.then, label %for.inc, !dbg !5143

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %reg_parm_seen, align 4, !dbg !5144
  %value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 2, !dbg !5145
  %3 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5145
  %cmp6 = icmp eq %struct.rtx_def* %3, null, !dbg !5147
  br i1 %cmp6, label %if.then7, label %if.then.if.end_crit_edge, !dbg !5148

if.then.if.end_crit_edge:                         ; preds = %if.then
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !5148
  %.pre3 = bitcast %struct.rtx_def** %value to i32**, !dbg !5149
  br label %if.end, !dbg !5148

if.then7:                                         ; preds = %if.then
  tail call void @push_temp_slots() #7, !dbg !5151
  %tree_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 0, !dbg !5153
  %5 = load %union.tree_node*, %union.tree_node** %tree_value, align 8, !dbg !5153
  %call = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %5) #8, !dbg !5154
  store %struct.rtx_def* %call, %struct.rtx_def** %value, align 8, !dbg !5155
  tail call void @preserve_temp_slots(%struct.rtx_def* %call) #7, !dbg !5156
  tail call void @pop_temp_slots() #7, !dbg !5157
  %.phi.trans.insert = bitcast %struct.rtx_def** %value to i32**, !dbg !5158
  %.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !5149
  %6 = bitcast i32* %.pre to %struct.rtx_def*, !dbg !5159
  br label %if.end, !dbg !5159

if.end:                                           ; preds = %if.then.if.end_crit_edge, %if.then7
  %.pre-phi = phi i32** [ %.pre3, %if.then.if.end_crit_edge ], [ %.phi.trans.insert, %if.then7 ], !dbg !5149
  %7 = phi %struct.rtx_def* [ %3, %if.then.if.end_crit_edge ], [ %6, %if.then7 ]
  %8 = phi i32* [ %4, %if.then.if.end_crit_edge ], [ %.pre, %if.then7 ], !dbg !5149
  %bf.load = load i32, i32* %8, align 8, !dbg !5149
  %bf.clear = and i32 %bf.load, 65535, !dbg !5149
  %idxprom19 = zext i32 %bf.clear to i64, !dbg !5149
  %arrayidx20 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom19, !dbg !5149
  %9 = load i32, i32* %arrayidx20, align 4, !dbg !5149
  %cmp21 = icmp eq i32 %9, 9, !dbg !5149
  br i1 %cmp21, label %land.lhs.true22, label %if.end38, !dbg !5160

land.lhs.true22:                                  ; preds = %if.end
  %call26 = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %7) #7, !dbg !5161
  %tobool27 = icmp eq i8 %call26, 0, !dbg !5161
  br i1 %tobool27, label %if.then28, label %if.end38, !dbg !5162

if.then28:                                        ; preds = %land.lhs.true22
  %mode = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 1, !dbg !5163
  %10 = load i32, i32* %mode, align 8, !dbg !5163
  %11 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5164
  %call34 = tail call %struct.rtx_def* @force_reg(i32 %10, %struct.rtx_def* %11) #7, !dbg !5165
  store %struct.rtx_def* %call34, %struct.rtx_def** %value, align 8, !dbg !5166
  br label %if.end38, !dbg !5167

if.end38:                                         ; preds = %land.lhs.true22, %if.then28, %if.end
  %mode41 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 1, !dbg !5168
  %12 = load i32, i32* %mode41, align 8, !dbg !5168
  %tree_value44 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 0, !dbg !5170
  %13 = bitcast %union.tree_node** %tree_value44 to %struct.tree_common**, !dbg !5170
  %14 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !5170
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 2, !dbg !5170
  %15 = bitcast %union.tree_node** %type to i64**, !dbg !5170
  %16 = load i64*, i64** %15, align 8, !dbg !5170
  %bf.load45 = load i64, i64* %16, align 8, !dbg !5170
  %bf.cast1 = and i64 %bf.load45, 65535, !dbg !5170
  %cmp47 = icmp eq i64 %bf.cast1, 14, !dbg !5170
  br i1 %cmp47, label %cond.true, label %cond.false, !dbg !5170

cond.true:                                        ; preds = %if.end38
  %17 = bitcast i64* %16 to %union.tree_node*, !dbg !5170
  %call53 = tail call i32 @vector_type_mode(%union.tree_node* %17) #7, !dbg !5170
  br label %cond.end, !dbg !5170

cond.false:                                       ; preds = %if.end38
  %type59 = bitcast i64* %16 to %struct.tree_type*, !dbg !5170
  %mode60 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i64 0, i32 6, !dbg !5170
  %bf.load61 = load i32, i32* %mode60, align 4, !dbg !5170
  %bf.lshr = lshr i32 %bf.load61, 16, !dbg !5170
  %bf.clear62 = and i32 %bf.lshr, 255, !dbg !5170
  br label %cond.end, !dbg !5170

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call53, %cond.true ], [ %bf.clear62, %cond.false ], !dbg !5170
  %cmp63 = icmp eq i32 %12, %cond, !dbg !5171
  br i1 %cmp63, label %if.end107, label %if.then64, !dbg !5172

if.then64:                                        ; preds = %cond.end
  %18 = load i32, i32* %mode41, align 8, !dbg !5173
  %19 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !5174
  %type72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !5174
  %20 = bitcast %union.tree_node** %type72 to i64**, !dbg !5174
  %21 = load i64*, i64** %20, align 8, !dbg !5174
  %bf.load74 = load i64, i64* %21, align 8, !dbg !5174
  %bf.cast762 = and i64 %bf.load74, 65535, !dbg !5174
  %cmp77 = icmp eq i64 %bf.cast762, 14, !dbg !5174
  br i1 %cmp77, label %cond.true78, label %cond.false85, !dbg !5174

cond.true78:                                      ; preds = %if.then64
  %22 = bitcast i64* %21 to %union.tree_node*, !dbg !5174
  %call84 = tail call i32 @vector_type_mode(%union.tree_node* %22) #7, !dbg !5174
  br label %cond.end96, !dbg !5174

cond.false85:                                     ; preds = %if.then64
  %type91 = bitcast i64* %21 to %struct.tree_type*, !dbg !5174
  %mode92 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type91, i64 0, i32 6, !dbg !5174
  %bf.load93 = load i32, i32* %mode92, align 4, !dbg !5174
  %bf.lshr94 = lshr i32 %bf.load93, 16, !dbg !5174
  %bf.clear95 = and i32 %bf.lshr94, 255, !dbg !5174
  br label %cond.end96, !dbg !5174

cond.end96:                                       ; preds = %cond.false85, %cond.true78
  %cond97 = phi i32 [ %call84, %cond.true78 ], [ %bf.clear95, %cond.false85 ], !dbg !5174
  %23 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5175
  %unsignedp = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 7, !dbg !5176
  %24 = load i32, i32* %unsignedp, align 8, !dbg !5176
  %call103 = tail call %struct.rtx_def* @convert_modes(i32 %18, i32 %cond97, %struct.rtx_def* %23, i32 %24) #7, !dbg !5177
  store %struct.rtx_def* %call103, %struct.rtx_def** %value, align 8, !dbg !5178
  br label %if.end107, !dbg !5179

if.end107:                                        ; preds = %cond.end, %cond.end96
  %25 = bitcast %struct.rtx_def** %reg to i32**, !dbg !5180
  %26 = load i32*, i32** %25, align 8, !dbg !5180
  %bf.load111 = load i32, i32* %26, align 8, !dbg !5180
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !5180
  %cmp113 = icmp eq i32 %bf.clear112, 15, !dbg !5181
  br i1 %cmp113, label %if.then114, label %if.else, !dbg !5182

if.then114:                                       ; preds = %if.end107
  %27 = bitcast i32* %26 to %struct.rtx_def*, !dbg !5182
  %28 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !5183
  %type120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %28, i64 0, i32 2, !dbg !5183
  %29 = load %union.tree_node*, %union.tree_node** %type120, align 8, !dbg !5183
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !5125, metadata !DIExpression()), !dbg !5184
  %30 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5185
  %call127 = tail call i64 @int_size_in_bytes(%union.tree_node* %29) #7, !dbg !5186
  %conv = trunc i64 %call127 to i32, !dbg !5186
  %call128 = tail call %struct.rtx_def* @emit_group_load_into_temps(%struct.rtx_def* %27, %struct.rtx_def* %30, %union.tree_node* %29, i32 %conv) #7, !dbg !5187
  %parallel_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv, i32 6, !dbg !5188
  store %struct.rtx_def* %call128, %struct.rtx_def** %parallel_value, align 8, !dbg !5189
  br label %for.inc, !dbg !5190

if.else:                                          ; preds = %if.end107
  %31 = load i32*, i32** %.pre-phi, align 8, !dbg !5191
  %bf.load134 = load i32, i32* %31, align 8, !dbg !5191
  %bf.clear135 = and i32 %bf.load134, 65535, !dbg !5191
  %cmp136 = icmp eq i32 %bf.clear135, 37, !dbg !5191
  %32 = bitcast i32* %31 to %struct.rtx_def*, !dbg !5193
  br i1 %cmp136, label %for.inc, label %lor.lhs.false, !dbg !5193

lor.lhs.false:                                    ; preds = %if.else
  %cmp143 = icmp eq i32 %bf.clear135, 39, !dbg !5194
  br i1 %cmp143, label %land.lhs.true145, label %land.lhs.true154, !dbg !5195

land.lhs.true145:                                 ; preds = %lor.lhs.false
  %arrayidx149 = getelementptr inbounds i32, i32* %31, i64 2, !dbg !5196
  %33 = bitcast i32* %arrayidx149 to i32**, !dbg !5196
  %34 = load i32*, i32** %33, align 8, !dbg !5196
  %bf.load150 = load i32, i32* %34, align 8, !dbg !5196
  %bf.clear151 = and i32 %bf.load150, 65535, !dbg !5196
  %cmp152 = icmp eq i32 %bf.clear151, 37, !dbg !5196
  br i1 %cmp152, label %for.inc, label %land.lhs.true154, !dbg !5197

land.lhs.true154:                                 ; preds = %land.lhs.true145, %lor.lhs.false
  %35 = load i32, i32* %mode41, align 8, !dbg !5198
  %cmp158 = icmp eq i32 %35, 1, !dbg !5199
  br i1 %cmp158, label %for.inc, label %land.lhs.true160, !dbg !5200

land.lhs.true160:                                 ; preds = %land.lhs.true154
  %call164 = tail call zeroext i8 @optimize_insn_for_speed_p() #7, !dbg !5201
  %call165 = tail call i32 @rtx_cost(%struct.rtx_def* %32, i32 23, i8 zeroext %call164) #7, !dbg !5202
  %cmp166 = icmp sgt i32 %call165, 4, !dbg !5203
  br i1 %cmp166, label %land.lhs.true168, label %for.inc, !dbg !5204

land.lhs.true168:                                 ; preds = %land.lhs.true160
  %36 = load i32, i32* %reg_parm_seen, align 4, !dbg !5205
  %37 = load i32, i32* @optimize, align 4, !dbg !5206
  %38 = or i32 %36, %37, !dbg !5207
  %39 = icmp eq i32 %38, 0, !dbg !5207
  br i1 %39, label %for.inc, label %if.then172, !dbg !5207

if.then172:                                       ; preds = %land.lhs.true168
  %40 = load i32, i32* %mode41, align 8, !dbg !5208
  %41 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5209
  %call179 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %40, %struct.rtx_def* %41) #7, !dbg !5210
  store %struct.rtx_def* %call179, %struct.rtx_def** %value, align 8, !dbg !5211
  br label %for.inc, !dbg !5212

for.inc:                                          ; preds = %land.lhs.true168, %land.lhs.true154, %land.lhs.true, %for.body, %if.else, %land.lhs.true145, %land.lhs.true160, %if.then172, %if.then114
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5213
  call void @llvm.dbg.value(metadata i32 undef, metadata !5124, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5132
  br label %for.cond, !dbg !5214, !llvm.loop !5215

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5217
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @save_fixed_argument_area(i32 %reg_parm_stack_space, %struct.rtx_def* %argblock, i32* %low_to_save, i32* %high_to_save) unnamed_addr #5 !dbg !5218 {
entry:
  call void @llvm.dbg.value(metadata i32 %reg_parm_stack_space, metadata !5222, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock, metadata !5223, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i32* %low_to_save, metadata !5224, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i32* %high_to_save, metadata !5225, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i32 %reg_parm_stack_space, metadata !5227, metadata !DIExpression()), !dbg !5237
  %0 = load i32, i32* @highest_outgoing_arg_in_use, align 4, !dbg !5238
  %cmp = icmp slt i32 %0, %reg_parm_stack_space, !dbg !5240
  %spec.select = select i1 %cmp, i32 %0, i32 %reg_parm_stack_space, !dbg !5241
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5227, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i32 0, metadata !5226, metadata !DIExpression()), !dbg !5237
  %1 = load i8*, i8** @stack_usage_map, align 8, !dbg !5242
  %2 = sext i32 %spec.select to i64, !dbg !5243
  br label %for.cond, !dbg !5243

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc ], [ 0, %entry ], !dbg !5244
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !5226, metadata !DIExpression()), !dbg !5237
  %cmp1 = icmp slt i64 %indvars.iv4, %2, !dbg !5245
  br i1 %cmp1, label %for.body, label %cleanup.loopexit, !dbg !5246

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %indvars.iv4, !dbg !5247
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5247
  %cmp2 = icmp eq i8 %3, 0, !dbg !5248
  br i1 %cmp2, label %for.inc, label %while.cond.preheader, !dbg !5249

while.cond.preheader:                             ; preds = %for.body
  %indvars.iv4.lcssa6 = phi i64 [ %indvars.iv4, %for.body ], !dbg !5244
  call void @llvm.dbg.value(metadata i64 %indvars.iv4.lcssa6, metadata !5226, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i32 %6, metadata !5226, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i32 %6, metadata !5226, metadata !DIExpression()), !dbg !5237
  %4 = sext i32 %spec.select to i64, !dbg !5250
  br label %while.cond, !dbg !5250

while.cond:                                       ; preds = %while.cond.preheader, %while.cond
  %indvars.iv = phi i64 [ %4, %while.cond.preheader ], [ %indvars.iv.next, %while.cond ], !dbg !5237
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5227, metadata !DIExpression()), !dbg !5237
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5251
  call void @llvm.dbg.value(metadata i32 undef, metadata !5227, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5237
  %arrayidx6 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv.next, !dbg !5252
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !5252
  %cmp8 = icmp eq i8 %5, 0, !dbg !5253
  br i1 %cmp8, label %while.cond, label %while.end, !dbg !5250, !llvm.loop !5254

while.end:                                        ; preds = %while.cond
  %indvars.iv.next.lcssa = phi i64 [ %indvars.iv.next, %while.cond ], !dbg !5251
  %6 = trunc i64 %indvars.iv4.lcssa6 to i32, !dbg !5237
  %7 = trunc i64 %indvars.iv.next.lcssa to i32, !dbg !5256
  store i32 %6, i32* %low_to_save, align 4, !dbg !5256
  store i32 %7, i32* %high_to_save, align 4, !dbg !5257
  %sub = sub nsw i32 %7, %6, !dbg !5258
  %add = add nsw i32 %sub, 1, !dbg !5259
  call void @llvm.dbg.value(metadata i32 %add, metadata !5228, metadata !DIExpression()), !dbg !5260
  %mul = shl nsw i32 %add, 3, !dbg !5261
  %call = tail call i32 @mode_for_size(i32 %mul, i32 2, i32 1) #7, !dbg !5262
  call void @llvm.dbg.value(metadata i32 %call, metadata !5233, metadata !DIExpression()), !dbg !5260
  %idxprom10 = zext i32 %call to i64, !dbg !5263
  %arrayidx11 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom10, !dbg !5263
  %8 = load i8, i8* %arrayidx11, align 1, !dbg !5263
  %conv13 = zext i8 %8 to i32, !dbg !5263
  %9 = load i32, i32* @ix86_isa_flags, align 4, !dbg !5263
  %and = and i32 %9, 32, !dbg !5263
  %cmp14 = icmp eq i32 %and, 0, !dbg !5263
  %div = select i1 %cmp14, i32 32, i32 64, !dbg !5263
  %cmp16 = icmp ugt i32 %div, %conv13, !dbg !5263
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !5263

cond.true:                                        ; preds = %while.end
  br label %cond.end, !dbg !5263

cond.false:                                       ; preds = %while.end
  br label %cond.end, !dbg !5263

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond27 = phi i32 [ %conv13, %cond.true ], [ %div, %cond.false ], !dbg !5263
  %sub28 = add nsw i32 %cond27, -1, !dbg !5265
  %and29 = and i32 %sub28, %6, !dbg !5266
  %tobool = icmp eq i32 %and29, 0, !dbg !5266
  %spec.select1 = select i1 %tobool, i32 %call, i32 1, !dbg !5267
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !5233, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i32 %6, metadata !5234, metadata !DIExpression()), !dbg !5260
  %call33 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %argblock, i64 %indvars.iv4.lcssa6) #7, !dbg !5268
  %call34 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %spec.select1, %struct.rtx_def* %call33, i8 zeroext 0) #7, !dbg !5268
  %call35 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %spec.select1, %struct.rtx_def* %call34) #7, !dbg !5269
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !5235, metadata !DIExpression()), !dbg !5260
  tail call void @set_mem_align(%struct.rtx_def* %call35, i32 32) #7, !dbg !5270
  %cmp36 = icmp eq i32 %spec.select1, 1, !dbg !5271
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !5273

if.then38:                                        ; preds = %cond.end
  %conv39 = sext i32 %add to i64, !dbg !5274
  %call40 = tail call %struct.rtx_def* @assign_stack_temp(i32 1, i64 %conv39, i32 0) #7, !dbg !5276
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !5236, metadata !DIExpression()), !dbg !5260
  %call41 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call40) #7, !dbg !5277
  %call43 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv39) #7, !dbg !5278
  %call44 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call41, %struct.rtx_def* %call35, %struct.rtx_def* %call43, i32 2) #7, !dbg !5279
  br label %cleanup, !dbg !5280

if.else:                                          ; preds = %cond.end
  %call45 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %spec.select1) #7, !dbg !5281
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !5236, metadata !DIExpression()), !dbg !5260
  %call46 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call45, %struct.rtx_def* %call35) #7, !dbg !5283
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !5284
  call void @llvm.dbg.value(metadata i32 undef, metadata !5226, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5237
  br label %for.cond, !dbg !5285, !llvm.loop !5286

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5288

cleanup:                                          ; preds = %cleanup.loopexit, %if.then38, %if.else
  %retval.0 = phi %struct.rtx_def* [ %call40, %if.then38 ], [ %call45, %if.else ], [ null, %cleanup.loopexit ], !dbg !5237
  ret %struct.rtx_def* %retval.0, !dbg !5288
}

declare dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @store_one_arg(%struct.arg_data* %arg, %struct.rtx_def* %argblock, i32 %flags, i32 %variable_size, i32 %reg_parm_stack_space) unnamed_addr #5 !dbg !5289 {
entry:
  call void @llvm.dbg.value(metadata %struct.arg_data* %arg, metadata !5293, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock, metadata !5294, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5295, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 %variable_size, metadata !5296, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 %reg_parm_stack_space, metadata !5297, metadata !DIExpression()), !dbg !5336
  %tree_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 0, !dbg !5337
  %0 = load %union.tree_node*, %union.tree_node** %tree_value, align 8, !dbg !5337
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5298, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5299, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 0, metadata !5300, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 0, metadata !5301, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 0, metadata !5303, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 0, metadata !5304, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 0, metadata !5305, metadata !DIExpression()), !dbg !5336
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5338
  %bf.load = load i64, i64* %1, align 8, !dbg !5338
  %bf.cast9 = and i64 %bf.load, 65535, !dbg !5340
  %cmp = icmp eq i64 %bf.cast9, 0, !dbg !5340
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5341

if.end:                                           ; preds = %entry
  tail call void @push_temp_slots() #7, !dbg !5342
  %2 = load i32, i32* @target_flags, align 4, !dbg !5343
  %and = and i32 %2, 4, !dbg !5343
  %cmp1 = icmp eq i32 %and, 0, !dbg !5343
  br i1 %cmp1, label %lor.lhs.false, label %land.lhs.true, !dbg !5343

lor.lhs.false:                                    ; preds = %if.end
  %call = tail call i32 @ix86_cfun_abi() #7, !dbg !5343
  %cmp2 = icmp eq i32 %call, 1, !dbg !5343
  br i1 %cmp2, label %land.lhs.true, label %if.end101, !dbg !5344

land.lhs.true:                                    ; preds = %if.end, %lor.lhs.false
  %and3 = and i32 %flags, 256, !dbg !5345
  %tobool = icmp eq i32 %and3, 0, !dbg !5345
  br i1 %tobool, label %if.then4, label %if.end101, !dbg !5346

if.then4:                                         ; preds = %land.lhs.true
  %tobool5 = icmp eq %struct.rtx_def* %argblock, null, !dbg !5347
  %tobool7 = icmp ne i32 %variable_size, 0, !dbg !5348
  %or.cond = or i1 %tobool5, %tobool7, !dbg !5349
  br i1 %or.cond, label %if.end101, label %land.lhs.true8, !dbg !5349

land.lhs.true8:                                   ; preds = %if.then4
  %stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 11, !dbg !5350
  %3 = load %struct.rtx_def*, %struct.rtx_def** %stack, align 8, !dbg !5350
  %tobool9 = icmp eq %struct.rtx_def* %3, null, !dbg !5351
  br i1 %tobool9, label %if.end101, label %if.then10, !dbg !5352

if.then10:                                        ; preds = %land.lhs.true8
  %stack_slot = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 12, !dbg !5353
  %4 = load %struct.rtx_def*, %struct.rtx_def** %stack_slot, align 8, !dbg !5353
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5353
  %5 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !5353
  %6 = load i32*, i32** %5, align 8, !dbg !5353
  %bf.load11 = load i32, i32* %6, align 8, !dbg !5353
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !5353
  %cmp13 = icmp eq i32 %bf.clear12, 49, !dbg !5355
  br i1 %cmp13, label %if.then14, label %if.end26, !dbg !5356

if.then14:                                        ; preds = %if.then10
  %7 = getelementptr inbounds i32, i32* %6, i64 4, !dbg !5357
  %rt_rtx23 = bitcast i32* %7 to %struct.rtx_def**, !dbg !5357
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !5357
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, !dbg !5357
  %arrayidx25 = bitcast %union.u* %u24 to i64*, !dbg !5357
  %9 = load i64, i64* %arrayidx25, align 8, !dbg !5357
  %conv = trunc i64 %9 to i32, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5303, metadata !DIExpression()), !dbg !5336
  br label %if.end26, !dbg !5358

if.end26:                                         ; preds = %if.then10, %if.then14
  %lower_bound.0 = phi i32 [ %conv, %if.then14 ], [ 0, %if.then10 ], !dbg !5359
  call void @llvm.dbg.value(metadata i32 %lower_bound.0, metadata !5303, metadata !DIExpression()), !dbg !5336
  %constant = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 0, i32 0, !dbg !5360
  %10 = load i64, i64* %constant, align 8, !dbg !5360
  %11 = trunc i64 %10 to i32, !dbg !5361
  %conv28 = add i32 %lower_bound.0, %11, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %conv28, metadata !5304, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 %lower_bound.0, metadata !5302, metadata !DIExpression()), !dbg !5336
  %cmp29 = icmp slt i32 %lower_bound.0, %reg_parm_stack_space, !dbg !5362
  %spec.select = select i1 %cmp29, i32 %reg_parm_stack_space, i32 %lower_bound.0, !dbg !5364
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5302, metadata !DIExpression()), !dbg !5336
  %12 = load i8*, i8** @stack_usage_map, align 8, !dbg !5365
  %13 = sext i32 %spec.select to i64, !dbg !5366
  %14 = sext i32 %conv28 to i64, !dbg !5366
  br label %while.cond, !dbg !5366

while.cond:                                       ; preds = %while.body, %if.end26
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %while.body ], [ %13, %if.end26 ], !dbg !5365
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !5302, metadata !DIExpression()), !dbg !5336
  %cmp33 = icmp slt i64 %indvars.iv22, %14, !dbg !5367
  br i1 %cmp33, label %land.rhs, label %while.end, !dbg !5368

land.rhs:                                         ; preds = %while.cond
  %arrayidx35 = getelementptr inbounds i8, i8* %12, i64 %indvars.iv22, !dbg !5369
  %15 = load i8, i8* %arrayidx35, align 1, !dbg !5369
  %cmp37 = icmp eq i8 %15, 0, !dbg !5370
  br i1 %cmp37, label %while.body, label %while.end, !dbg !5366

while.body:                                       ; preds = %land.rhs
  %indvars.iv.next23 = add nsw i64 %indvars.iv22, 1, !dbg !5371
  call void @llvm.dbg.value(metadata i32 undef, metadata !5302, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5336
  br label %while.cond, !dbg !5366, !llvm.loop !5372

while.end:                                        ; preds = %while.cond, %land.rhs
  %cmp33.lcssa = phi i1 [ %cmp33, %while.cond ], [ %cmp33, %land.rhs ], !dbg !5367
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !5302, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !5302, metadata !DIExpression()), !dbg !5336
  br i1 %cmp33.lcssa, label %if.then41, label %if.end101, !dbg !5373

if.then41:                                        ; preds = %while.end
  %conv46 = shl i32 %11, 3, !dbg !5374
  call void @llvm.dbg.value(metadata i32 %conv46, metadata !5306, metadata !DIExpression()), !dbg !5375
  %call47 = tail call i32 @mode_for_size(i32 %conv46, i32 2, i32 1) #7, !dbg !5376
  call void @llvm.dbg.value(metadata i32 %call47, metadata !5313, metadata !DIExpression()), !dbg !5375
  %16 = load %struct.rtx_def*, %struct.rtx_def** %stack_slot, align 8, !dbg !5377
  %arrayidx51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5377
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !5377
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !5377
  %call53 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %call47, %struct.rtx_def* %17, i8 zeroext 0) #7, !dbg !5377
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !5314, metadata !DIExpression()), !dbg !5375
  %call54 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %call47, %struct.rtx_def* %call53) #7, !dbg !5378
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !5315, metadata !DIExpression()), !dbg !5375
  %cmp55 = icmp eq i32 %call47, 1, !dbg !5379
  br i1 %cmp55, label %if.then57, label %if.else93, !dbg !5380

if.then57:                                        ; preds = %if.then41
  %18 = bitcast %struct.arg_data* %arg to %struct.tree_common**, !dbg !5381
  %19 = load %struct.tree_common*, %struct.tree_common** %18, align 8, !dbg !5381
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !5381
  %20 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5381
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !5316, metadata !DIExpression()), !dbg !5382
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5383
  %bf.load60 = load i64, i64* %21, align 8, !dbg !5383
  %22 = lshr i64 %bf.load60, 18, !dbg !5383
  %23 = trunc i64 %22 to i32, !dbg !5383
  %mul69 = and i32 %23, 2, !dbg !5383
  %type70 = bitcast %union.tree_node* %20 to %struct.tree_type*, !dbg !5383
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type70, i64 0, i32 6, !dbg !5383
  %bf.load71 = load i32, i32* %restrict_flag, align 4, !dbg !5383
  %24 = lshr i32 %bf.load71, 11, !dbg !5383
  %mul74 = and i32 %24, 4, !dbg !5383
  %or75 = or i32 %mul69, %mul74, !dbg !5383
  %25 = lshr i64 %bf.load60, 48, !dbg !5383
  %26 = trunc i64 %25 to i32, !dbg !5383
  %shl = and i32 %26, 65280, !dbg !5383
  %or81 = or i32 %or75, %shl, !dbg !5383
  %or82 = or i32 %or81, 1, !dbg !5384
  %call83 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %20, i32 %or82) #7, !dbg !5385
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !5319, metadata !DIExpression()), !dbg !5382
  %call84 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %call83, i32 0, i32 1, i32 1) #7, !dbg !5386
  %save_area = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 13, !dbg !5387
  store %struct.rtx_def* %call84, %struct.rtx_def** %save_area, align 8, !dbg !5388
  tail call void @preserve_temp_slots(%struct.rtx_def* %call84) #7, !dbg !5389
  %27 = load %struct.rtx_def*, %struct.rtx_def** %save_area, align 8, !dbg !5390
  %call87 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %27) #7, !dbg !5391
  %28 = load i64, i64* %constant, align 8, !dbg !5392
  %call91 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %28) #7, !dbg !5392
  %call92 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call87, %struct.rtx_def* %call54, %struct.rtx_def* %call91, i32 2) #7, !dbg !5393
  br label %if.end101, !dbg !5394

if.else93:                                        ; preds = %if.then41
  %call94 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call47) #7, !dbg !5395
  %save_area95 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 13, !dbg !5397
  store %struct.rtx_def* %call94, %struct.rtx_def** %save_area95, align 8, !dbg !5398
  %call97 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call94, %struct.rtx_def* %call54) #7, !dbg !5399
  br label %if.end101

if.end101:                                        ; preds = %land.lhs.true8, %land.lhs.true, %if.then4, %if.then57, %if.else93, %while.end, %lor.lhs.false
  %lower_bound.2 = phi i32 [ 0, %land.lhs.true ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true8 ], [ 0, %if.then4 ], [ %lower_bound.0, %if.then57 ], [ %lower_bound.0, %if.else93 ], [ %lower_bound.0, %while.end ], !dbg !5400
  %upper_bound.1 = phi i32 [ 0, %land.lhs.true ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true8 ], [ 0, %if.then4 ], [ %conv28, %if.then57 ], [ %conv28, %if.else93 ], [ %conv28, %while.end ], !dbg !5401
  call void @llvm.dbg.value(metadata i32 %upper_bound.1, metadata !5304, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 %lower_bound.2, metadata !5303, metadata !DIExpression()), !dbg !5336
  %pass_on_stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 9, !dbg !5402
  %29 = load i32, i32* %pass_on_stack, align 8, !dbg !5402
  %tobool102 = icmp eq i32 %29, 0, !dbg !5404
  br i1 %tobool102, label %if.then103, label %if.end111, !dbg !5405

if.then103:                                       ; preds = %if.end101
  %and104 = and i32 %flags, 256, !dbg !5406
  %tobool105 = icmp eq i32 %and104, 0, !dbg !5406
  br i1 %tobool105, label %if.else107, label %if.then106, !dbg !5409

if.then106:                                       ; preds = %if.then103
  %tail_call_reg = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 5, !dbg !5410
  br label %if.end109, !dbg !5411

if.else107:                                       ; preds = %if.then103
  %reg108 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 4, !dbg !5412
  br label %if.end109

if.end109:                                        ; preds = %if.else107, %if.then106
  %reg.0.in = phi %struct.rtx_def** [ %tail_call_reg, %if.then106 ], [ %reg108, %if.else107 ]
  %reg.0 = load %struct.rtx_def*, %struct.rtx_def** %reg.0.in, align 8, !dbg !5413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0, metadata !5299, metadata !DIExpression()), !dbg !5336
  %partial110 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 8, !dbg !5414
  %30 = load i32, i32* %partial110, align 4, !dbg !5414
  call void @llvm.dbg.value(metadata i32 %30, metadata !5300, metadata !DIExpression()), !dbg !5336
  br label %if.end111, !dbg !5415

if.end111:                                        ; preds = %if.end101, %if.end109
  %partial.0 = phi i32 [ 0, %if.end101 ], [ %30, %if.end109 ], !dbg !5336
  %reg.1 = phi %struct.rtx_def* [ null, %if.end101 ], [ %reg.0, %if.end109 ], !dbg !5336
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.1, metadata !5299, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 %partial.0, metadata !5300, metadata !DIExpression()), !dbg !5336
  %cmp112 = icmp eq %struct.rtx_def* %reg.1, null, !dbg !5416
  %cmp115 = icmp ne i32 %partial.0, 0, !dbg !5416
  %or.cond1 = or i1 %cmp112, %cmp115, !dbg !5416
  br i1 %or.cond1, label %cond.end, label %cond.true, !dbg !5416

cond.true:                                        ; preds = %if.end111
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 4085, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5416
  br label %cond.end, !dbg !5416

cond.end:                                         ; preds = %if.end111, %cond.true
  %n_aligned_regs = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 15, !dbg !5417
  %31 = load i32, i32* %n_aligned_regs, align 8, !dbg !5417
  %cmp117 = icmp eq i32 %31, 0, !dbg !5419
  %spec.select2 = select i1 %cmp117, %struct.rtx_def* %reg.1, %struct.rtx_def* null, !dbg !5420
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select2, metadata !5299, metadata !DIExpression()), !dbg !5336
  %value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 2, !dbg !5421
  %32 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5421
  %cmp121 = icmp eq %struct.rtx_def* %32, null, !dbg !5423
  br i1 %cmp121, label %if.then123, label %if.end219, !dbg !5424

if.then123:                                       ; preds = %cond.end
  %33 = load i32, i32* %pass_on_stack, align 8, !dbg !5425
  %tobool125 = icmp eq i32 %33, 0, !dbg !5428
  br i1 %tobool125, label %if.end128, label %if.then126, !dbg !5429

if.then126:                                       ; preds = %if.then123
  %34 = load i32, i32* @stack_arg_under_construction, align 4, !dbg !5430
  %inc127 = add nsw i32 %34, 1, !dbg !5430
  store i32 %inc127, i32* @stack_arg_under_construction, align 4, !dbg !5430
  br label %if.end128, !dbg !5431

if.end128:                                        ; preds = %if.then123, %if.then126
  %tobool129 = icmp eq i32 %partial.0, 0, !dbg !5432
  br i1 %tobool129, label %lor.lhs.false130, label %if.end128.cond.end158_crit_edge, !dbg !5433

if.end128.cond.end158_crit_edge:                  ; preds = %if.end128
  br label %cond.end158, !dbg !5433

lor.lhs.false130:                                 ; preds = %if.end128
  %type132 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5434
  %35 = bitcast %union.tree_node** %type132 to i64**, !dbg !5434
  %36 = load i64*, i64** %35, align 8, !dbg !5434
  %bf.load134 = load i64, i64* %36, align 8, !dbg !5434
  %bf.cast13612 = and i64 %bf.load134, 65535, !dbg !5434
  %cmp137 = icmp eq i64 %bf.cast13612, 14, !dbg !5434
  br i1 %cmp137, label %cond.true139, label %cond.false143, !dbg !5434

cond.true139:                                     ; preds = %lor.lhs.false130
  %.cast13 = bitcast i64* %36 to %union.tree_node*, !dbg !5434
  %call142 = tail call i32 @vector_type_mode(%union.tree_node* %.cast13) #7, !dbg !5434
  br label %cond.end150, !dbg !5434

cond.false143:                                    ; preds = %lor.lhs.false130
  %type146 = bitcast i64* %36 to %struct.tree_type*, !dbg !5434
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type146, i64 0, i32 6, !dbg !5434
  %bf.load147 = load i32, i32* %mode, align 4, !dbg !5434
  %bf.lshr148 = lshr i32 %bf.load147, 16, !dbg !5434
  %bf.clear149 = and i32 %bf.lshr148, 255, !dbg !5434
  br label %cond.end150, !dbg !5434

cond.end150:                                      ; preds = %cond.false143, %cond.true139
  %cond151 = phi i32 [ %call142, %cond.true139 ], [ %bf.clear149, %cond.false143 ], !dbg !5434
  %mode152 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 1, !dbg !5435
  %37 = load i32, i32* %mode152, align 8, !dbg !5435
  %cmp153 = icmp eq i32 %cond151, %37, !dbg !5436
  br i1 %cmp153, label %cond.false156, label %cond.end158, !dbg !5437

cond.false156:                                    ; preds = %cond.end150
  %stack157 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 11, !dbg !5438
  %38 = load %struct.rtx_def*, %struct.rtx_def** %stack157, align 8, !dbg !5438
  br label %cond.end158, !dbg !5437

cond.end158:                                      ; preds = %if.end128.cond.end158_crit_edge, %cond.end150, %cond.false156
  %cond159 = phi %struct.rtx_def* [ %38, %cond.false156 ], [ null, %cond.end150 ], [ null, %if.end128.cond.end158_crit_edge ], !dbg !5437
  %call160 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %0, %struct.rtx_def* %cond159, i32 0, i32 1) #8, !dbg !5439
  store %struct.rtx_def* %call160, %struct.rtx_def** %value, align 8, !dbg !5440
  %mode162 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 1, !dbg !5441
  %39 = load i32, i32* %mode162, align 8, !dbg !5441
  %type164 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5443
  %40 = bitcast %union.tree_node** %type164 to i64**, !dbg !5443
  %41 = load i64*, i64** %40, align 8, !dbg !5443
  %bf.load166 = load i64, i64* %41, align 8, !dbg !5443
  %bf.cast16814 = and i64 %bf.load166, 65535, !dbg !5443
  %cmp169 = icmp eq i64 %bf.cast16814, 14, !dbg !5443
  br i1 %cmp169, label %cond.true171, label %cond.false175, !dbg !5443

cond.true171:                                     ; preds = %cond.end158
  %.cast15 = bitcast i64* %41 to %union.tree_node*, !dbg !5443
  %call174 = tail call i32 @vector_type_mode(%union.tree_node* %.cast15) #7, !dbg !5443
  br label %cond.end183, !dbg !5443

cond.false175:                                    ; preds = %cond.end158
  %type178 = bitcast i64* %41 to %struct.tree_type*, !dbg !5443
  %mode179 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type178, i64 0, i32 6, !dbg !5443
  %bf.load180 = load i32, i32* %mode179, align 4, !dbg !5443
  %bf.lshr181 = lshr i32 %bf.load180, 16, !dbg !5443
  %bf.clear182 = and i32 %bf.lshr181, 255, !dbg !5443
  br label %cond.end183, !dbg !5443

cond.end183:                                      ; preds = %cond.false175, %cond.true171
  %cond184 = phi i32 [ %call174, %cond.true171 ], [ %bf.clear182, %cond.false175 ], !dbg !5443
  %cmp185 = icmp eq i32 %39, %cond184, !dbg !5444
  br i1 %cmp185, label %if.end214, label %if.then187, !dbg !5445

if.then187:                                       ; preds = %cond.end183
  %42 = load i32, i32* %mode162, align 8, !dbg !5446
  %43 = load i64*, i64** %40, align 8, !dbg !5447
  %bf.load192 = load i64, i64* %43, align 8, !dbg !5447
  %bf.cast19416 = and i64 %bf.load192, 65535, !dbg !5447
  %cmp195 = icmp eq i64 %bf.cast19416, 14, !dbg !5447
  br i1 %cmp195, label %cond.true197, label %cond.false201, !dbg !5447

cond.true197:                                     ; preds = %if.then187
  %.cast17 = bitcast i64* %43 to %union.tree_node*, !dbg !5447
  %call200 = tail call i32 @vector_type_mode(%union.tree_node* %.cast17) #7, !dbg !5447
  br label %cond.end209, !dbg !5447

cond.false201:                                    ; preds = %if.then187
  %type204 = bitcast i64* %43 to %struct.tree_type*, !dbg !5447
  %mode205 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type204, i64 0, i32 6, !dbg !5447
  %bf.load206 = load i32, i32* %mode205, align 4, !dbg !5447
  %bf.lshr207 = lshr i32 %bf.load206, 16, !dbg !5447
  %bf.clear208 = and i32 %bf.lshr207, 255, !dbg !5447
  br label %cond.end209, !dbg !5447

cond.end209:                                      ; preds = %cond.false201, %cond.true197
  %cond210 = phi i32 [ %call200, %cond.true197 ], [ %bf.clear208, %cond.false201 ], !dbg !5447
  %44 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5448
  %unsignedp = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 7, !dbg !5449
  %45 = load i32, i32* %unsignedp, align 8, !dbg !5449
  %call212 = tail call %struct.rtx_def* @convert_modes(i32 %42, i32 %cond210, %struct.rtx_def* %44, i32 %45) #7, !dbg !5450
  store %struct.rtx_def* %call212, %struct.rtx_def** %value, align 8, !dbg !5451
  br label %if.end214, !dbg !5452

if.end214:                                        ; preds = %cond.end183, %cond.end209
  %46 = load i32, i32* %pass_on_stack, align 8, !dbg !5453
  %tobool216 = icmp eq i32 %46, 0, !dbg !5455
  br i1 %tobool216, label %if.end219, label %if.then217, !dbg !5456

if.then217:                                       ; preds = %if.end214
  %47 = load i32, i32* @stack_arg_under_construction, align 4, !dbg !5457
  %dec = add nsw i32 %47, -1, !dbg !5457
  store i32 %dec, i32* @stack_arg_under_construction, align 4, !dbg !5457
  br label %if.end219, !dbg !5458

if.end219:                                        ; preds = %if.end214, %if.then217, %cond.end
  %and220 = and i32 %flags, 256, !dbg !5459
  %tobool221 = icmp eq i32 %and220, 0, !dbg !5459
  br i1 %tobool221, label %if.end241, label %land.lhs.true222, !dbg !5461

land.lhs.true222:                                 ; preds = %if.end219
  %48 = bitcast %struct.rtx_def** %value to i32**, !dbg !5462
  %49 = load i32*, i32** %48, align 8, !dbg !5462
  %bf.load224 = load i32, i32* %49, align 8, !dbg !5462
  %bf.clear225 = and i32 %bf.load224, 65535, !dbg !5462
  %cmp226 = icmp eq i32 %bf.clear225, 43, !dbg !5462
  br i1 %cmp226, label %land.lhs.true228, label %if.end241, !dbg !5463

land.lhs.true228:                                 ; preds = %land.lhs.true222
  %arrayidx232 = getelementptr inbounds i32, i32* %49, i64 2, !dbg !5464
  %rt_rtx233 = bitcast i32* %arrayidx232 to %struct.rtx_def**, !dbg !5464
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx233, align 8, !dbg !5464
  %constant236 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 0, i32 0, !dbg !5465
  %51 = load i64, i64* %constant236, align 8, !dbg !5465
  %call237 = tail call fastcc zeroext i8 @mem_overlaps_already_clobbered_arg_p(%struct.rtx_def* %50, i64 %51) #8, !dbg !5466
  %tobool239 = icmp ne i8 %call237, 0, !dbg !5466
  %spec.select3 = zext i1 %tobool239 to i32, !dbg !5467
  br label %if.end241, !dbg !5467

if.end241:                                        ; preds = %if.end219, %land.lhs.true228, %land.lhs.true222
  %sibcall_failure.0 = phi i32 [ 0, %land.lhs.true222 ], [ 0, %if.end219 ], [ %spec.select3, %land.lhs.true228 ], !dbg !5336
  call void @llvm.dbg.value(metadata i32 %sibcall_failure.0, metadata !5305, metadata !DIExpression()), !dbg !5336
  %and242 = and i32 %flags, 32, !dbg !5468
  %tobool243 = icmp eq i32 %and242, 0, !dbg !5468
  br i1 %tobool243, label %if.end245, label %if.then244, !dbg !5470

if.then244:                                       ; preds = %if.end241
  tail call void @do_pending_stack_adjust() #7, !dbg !5471
  br label %if.end245, !dbg !5471

if.end245:                                        ; preds = %if.end241, %if.then244
  %52 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5472
  %stack247 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 11, !dbg !5473
  %53 = load %struct.rtx_def*, %struct.rtx_def** %stack247, align 8, !dbg !5473
  %cmp248 = icmp eq %struct.rtx_def* %52, %53, !dbg !5474
  br i1 %cmp248, label %if.end652, label %if.else251, !dbg !5475

if.else251:                                       ; preds = %if.end245
  %mode252 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 1, !dbg !5476
  %54 = load i32, i32* %mode252, align 8, !dbg !5476
  %cmp253 = icmp eq i32 %54, 1, !dbg !5477
  br i1 %cmp253, label %if.else347, label %if.then255, !dbg !5478

if.then255:                                       ; preds = %if.else251
  %boundary = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 5, !dbg !5479
  %55 = load i32, i32* %boundary, align 4, !dbg !5479
  call void @llvm.dbg.value(metadata i32 %55, metadata !5324, metadata !DIExpression()), !dbg !5480
  %type270 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5481
  %56 = load %union.tree_node*, %union.tree_node** %type270, align 8, !dbg !5481
  %var = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 1, i32 1, !dbg !5482
  %57 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !5482
  %cmp273 = icmp eq %union.tree_node* %57, null, !dbg !5482
  br i1 %cmp273, label %cond.true275, label %cond.false280, !dbg !5482

cond.true275:                                     ; preds = %if.then255
  %constant278 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 1, i32 0, !dbg !5482
  %58 = load i64, i64* %constant278, align 8, !dbg !5482
  %call279 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %58) #7, !dbg !5482
  br label %cond.end304, !dbg !5482

cond.false280:                                    ; preds = %if.then255
  br i1 false, label %cond.true286, label %cond.false291, !dbg !5482

cond.true286:                                     ; preds = %cond.false280
  br label %cond.end301, !dbg !5482

cond.false291:                                    ; preds = %cond.false280
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !5482
  %call295 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %59, %union.tree_node* nonnull %57) #7, !dbg !5482
  %constant298 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 1, i32 0, !dbg !5482
  %60 = load i64, i64* %constant298, align 8, !dbg !5482
  %call299 = tail call %union.tree_node* @size_int_kind(i64 %60, i32 1) #7, !dbg !5482
  %call300 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call295, %union.tree_node* %call299) #7, !dbg !5482
  br label %cond.end301, !dbg !5482

cond.end301:                                      ; preds = %cond.false291, %cond.true286
  %cond302 = phi %union.tree_node* [ undef, %cond.true286 ], [ %call300, %cond.false291 ], !dbg !5482
  %call303 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond302) #8, !dbg !5482
  br label %cond.end304, !dbg !5482

cond.end304:                                      ; preds = %cond.end301, %cond.true275
  %cond305 = phi %struct.rtx_def* [ %call279, %cond.true275 ], [ %call303, %cond.end301 ], !dbg !5482
  %var307 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 3, i32 1, !dbg !5483
  %61 = load %union.tree_node*, %union.tree_node** %var307, align 8, !dbg !5483
  %cmp308 = icmp eq %union.tree_node* %61, null, !dbg !5483
  br i1 %cmp308, label %cond.true310, label %cond.false315, !dbg !5483

cond.true310:                                     ; preds = %cond.end304
  %constant313 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 3, i32 0, !dbg !5483
  %62 = load i64, i64* %constant313, align 8, !dbg !5483
  %call314 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %62) #7, !dbg !5483
  br label %cond.end339, !dbg !5483

cond.false315:                                    ; preds = %cond.end304
  br i1 false, label %cond.true321, label %cond.false326, !dbg !5483

cond.true321:                                     ; preds = %cond.false315
  br label %cond.end336, !dbg !5483

cond.false326:                                    ; preds = %cond.false315
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !5483
  %call330 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %63, %union.tree_node* nonnull %61) #7, !dbg !5483
  %constant333 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 3, i32 0, !dbg !5483
  %64 = load i64, i64* %constant333, align 8, !dbg !5483
  %call334 = tail call %union.tree_node* @size_int_kind(i64 %64, i32 1) #7, !dbg !5483
  %call335 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call330, %union.tree_node* %call334) #7, !dbg !5483
  br label %cond.end336, !dbg !5483

cond.end336:                                      ; preds = %cond.false326, %cond.true321
  %cond337 = phi %union.tree_node* [ undef, %cond.true321 ], [ %call335, %cond.false326 ], !dbg !5483
  %call338 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond337) #8, !dbg !5483
  br label %cond.end339, !dbg !5483

cond.end339:                                      ; preds = %cond.end336, %cond.true310
  %cond340 = phi %struct.rtx_def* [ %call314, %cond.true310 ], [ %call338, %cond.end336 ], !dbg !5483
  tail call void @emit_push_insn(%struct.rtx_def* %52, i32 %54, %union.tree_node* %56, %struct.rtx_def* null, i32 %55, i32 %partial.0, %struct.rtx_def* %spec.select2, i32 0, %struct.rtx_def* %argblock, %struct.rtx_def* %cond305, i32 %reg_parm_stack_space, %struct.rtx_def* %cond340) #7, !dbg !5484
  %cmp341 = icmp eq i32 %partial.0, 0, !dbg !5485
  br i1 %cmp341, label %if.then343, label %if.end652, !dbg !5487

if.then343:                                       ; preds = %cond.end339
  %65 = bitcast %struct.rtx_def** %stack247 to i64*, !dbg !5488
  %66 = load i64, i64* %65, align 8, !dbg !5488
  %67 = bitcast %struct.rtx_def** %value to i64*, !dbg !5489
  store i64 %66, i64* %67, align 8, !dbg !5489
  br label %if.end652, !dbg !5490

if.else347:                                       ; preds = %if.else251
  %var351 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 0, i32 1, !dbg !5491
  %68 = load %union.tree_node*, %union.tree_node** %var351, align 8, !dbg !5491
  %cmp352 = icmp eq %union.tree_node* %68, null, !dbg !5493
  br i1 %cmp352, label %if.else391, label %if.then354, !dbg !5494

if.then354:                                       ; preds = %if.else347
  call void @llvm.dbg.value(metadata i32 0, metadata !5327, metadata !DIExpression()), !dbg !5495
  br i1 false, label %cond.true360, label %cond.false365, !dbg !5496

cond.true360:                                     ; preds = %if.then354
  br label %if.end422, !dbg !5496

cond.false365:                                    ; preds = %if.then354
  br i1 false, label %cond.true371, label %cond.false376, !dbg !5496

cond.true371:                                     ; preds = %cond.false365
  br label %cond.end386, !dbg !5496

cond.false376:                                    ; preds = %cond.false365
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !5496
  %call380 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %69, %union.tree_node* nonnull %68) #7, !dbg !5496
  %constant383 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 0, i32 0, !dbg !5496
  %70 = load i64, i64* %constant383, align 8, !dbg !5496
  %call384 = tail call %union.tree_node* @size_int_kind(i64 %70, i32 1) #7, !dbg !5496
  %call385 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call380, %union.tree_node* %call384) #7, !dbg !5496
  br label %cond.end386, !dbg !5496

cond.end386:                                      ; preds = %cond.false376, %cond.true371
  %cond387 = phi %union.tree_node* [ undef, %cond.true371 ], [ %call385, %cond.false376 ], !dbg !5496
  %call388 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond387) #8, !dbg !5496
  br label %if.end422, !dbg !5496

if.else391:                                       ; preds = %if.else347
  %constant394 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 0, i32 0, !dbg !5498
  %71 = load i64, i64* %constant394, align 8, !dbg !5498
  %type396 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5500
  %72 = load %union.tree_node*, %union.tree_node** %type396, align 8, !dbg !5500
  %call397 = tail call i64 @int_size_in_bytes(%union.tree_node* %72) #7, !dbg !5501
  %sub398 = sub nsw i64 %71, %call397, !dbg !5502
  %73 = trunc i64 %sub398 to i32, !dbg !5503
  %conv401 = add i32 %partial.0, %73, !dbg !5503
  call void @llvm.dbg.value(metadata i32 %conv401, metadata !5327, metadata !DIExpression()), !dbg !5495
  %74 = load %union.tree_node*, %union.tree_node** %type396, align 8, !dbg !5504
  %call404 = tail call %union.tree_node* @size_in_bytes(%union.tree_node* %74) #7, !dbg !5505
  %75 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !5506
  %bf.load406 = load i64, i64* %75, align 8, !dbg !5506
  %bf.cast40811 = and i64 %bf.load406, 65535, !dbg !5506
  %cmp409 = icmp eq i64 %bf.cast40811, 14, !dbg !5506
  br i1 %cmp409, label %cond.true411, label %cond.false413, !dbg !5506

cond.true411:                                     ; preds = %if.else391
  %.cast = bitcast i64* %75 to %union.tree_node*, !dbg !5506
  %call412 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !5506
  br label %cond.end419, !dbg !5506

cond.false413:                                    ; preds = %if.else391
  %type414 = bitcast i64* %75 to %struct.tree_type*, !dbg !5506
  %mode415 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type414, i64 0, i32 6, !dbg !5506
  %bf.load416 = load i32, i32* %mode415, align 4, !dbg !5506
  %bf.lshr417 = lshr i32 %bf.load416, 16, !dbg !5506
  %bf.clear418 = and i32 %bf.lshr417, 255, !dbg !5506
  br label %cond.end419, !dbg !5506

cond.end419:                                      ; preds = %cond.false413, %cond.true411
  %cond420 = phi i32 [ %call412, %cond.true411 ], [ %bf.clear418, %cond.false413 ], !dbg !5506
  %call421 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call404, %struct.rtx_def* null, i32 %cond420, i32 0) #8, !dbg !5507
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call421, metadata !5328, metadata !DIExpression()), !dbg !5495
  br label %if.end422

if.end422:                                        ; preds = %cond.true360, %cond.end386, %cond.end419
  %excess.0 = phi i32 [ %conv401, %cond.end419 ], [ 0, %cond.end386 ], [ undef, %cond.true360 ], !dbg !5508
  %size_rtx.0 = phi %struct.rtx_def* [ %call421, %cond.end419 ], [ %call388, %cond.end386 ], [ undef, %cond.true360 ], !dbg !5508
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size_rtx.0, metadata !5328, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata i32 %excess.0, metadata !5327, metadata !DIExpression()), !dbg !5495
  %boundary424 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 5, !dbg !5509
  %76 = load i32, i32* %boundary424, align 4, !dbg !5509
  call void @llvm.dbg.value(metadata i32 %76, metadata !5325, metadata !DIExpression()), !dbg !5495
  br i1 %tobool221, label %if.end568, label %land.lhs.true427, !dbg !5510

land.lhs.true427:                                 ; preds = %if.end422
  %77 = bitcast %struct.rtx_def** %value to i32**, !dbg !5511
  %78 = load i32*, i32** %77, align 8, !dbg !5511
  %bf.load429 = load i32, i32* %78, align 8, !dbg !5511
  %bf.clear430 = and i32 %bf.load429, 65535, !dbg !5511
  %cmp431 = icmp eq i32 %bf.clear430, 43, !dbg !5511
  br i1 %cmp431, label %if.then433, label %if.end568, !dbg !5512

if.then433:                                       ; preds = %land.lhs.true427
  call void @llvm.dbg.value(metadata i32* %78, metadata !5329, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.value(metadata i32 0, metadata !5332, metadata !DIExpression()), !dbg !5513
  %arrayidx438 = getelementptr inbounds i32, i32* %78, i64 2, !dbg !5514
  %rt_rtx439 = bitcast i32* %arrayidx438 to %struct.rtx_def**, !dbg !5514
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx439, align 8, !dbg !5514
  %80 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !5516
  %cmp440 = icmp eq %struct.rtx_def* %79, %80, !dbg !5517
  br i1 %cmp440, label %if.then475, label %lor.lhs.false442, !dbg !5518

lor.lhs.false442:                                 ; preds = %if.then433
  %81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 0, !dbg !5518
  %bf.load447 = load i32, i32* %81, align 8, !dbg !5519
  %bf.clear448 = and i32 %bf.load447, 65535, !dbg !5519
  %cmp449 = icmp eq i32 %bf.clear448, 49, !dbg !5520
  br i1 %cmp449, label %land.lhs.true451, label %if.end568, !dbg !5521

land.lhs.true451:                                 ; preds = %lor.lhs.false442
  %arrayidx458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5522
  %rt_rtx459 = bitcast %union.rtunion_def* %arrayidx458 to %struct.rtx_def**, !dbg !5522
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx459, align 8, !dbg !5522
  %cmp460 = icmp eq %struct.rtx_def* %82, %80, !dbg !5523
  br i1 %cmp460, label %land.lhs.true462, label %if.end568, !dbg !5524

land.lhs.true462:                                 ; preds = %land.lhs.true451
  %83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5525
  %84 = bitcast %union.rtunion_def* %83 to i32**, !dbg !5525
  %85 = load i32*, i32** %84, align 8, !dbg !5525
  %bf.load471 = load i32, i32* %85, align 8, !dbg !5525
  %bf.clear472 = and i32 %bf.load471, 65535, !dbg !5525
  %cmp473 = icmp eq i32 %bf.clear472, 30, !dbg !5525
  br i1 %cmp473, label %if.then475, label %if.end568, !dbg !5526

if.then475:                                       ; preds = %land.lhs.true462, %if.then433
  br i1 %cmp440, label %if.end495, label %if.then482, !dbg !5527

if.then482:                                       ; preds = %if.then475
  %86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5529
  %rt_rtx490 = bitcast %union.rtunion_def* %86 to %struct.rtx_def**, !dbg !5529
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx490, align 8, !dbg !5529
  %u491 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i64 0, i32 1, !dbg !5529
  %arrayidx493 = bitcast %union.u* %u491 to i64*, !dbg !5529
  %88 = load i64, i64* %arrayidx493, align 8, !dbg !5529
  %sext = shl i64 %88, 32, !dbg !5531
  %phitmp = ashr exact i64 %sext, 32, !dbg !5531
  br label %if.end495, !dbg !5531

if.end495:                                        ; preds = %if.then475, %if.then482
  %i435.0 = phi i64 [ %phitmp, %if.then482 ], [ 0, %if.then475 ]
  %var498 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 1, i32 1, !dbg !5532
  %89 = load %union.tree_node*, %union.tree_node** %var498, align 8, !dbg !5532
  %tobool499 = icmp eq %union.tree_node* %89, null, !dbg !5532
  br i1 %tobool499, label %land.lhs.true500, label %cond.true511, !dbg !5532

land.lhs.true500:                                 ; preds = %if.end495
  %90 = load %union.tree_node*, %union.tree_node** %var351, align 8, !dbg !5532
  %cmp504 = icmp eq %union.tree_node* %90, null, !dbg !5532
  br i1 %cmp504, label %land.lhs.true506, label %cond.true511, !dbg !5532

land.lhs.true506:                                 ; preds = %land.lhs.true500
  %91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size_rtx.0, i64 0, i32 0, !dbg !5532
  %bf.load507 = load i32, i32* %91, align 8, !dbg !5532
  %bf.clear508 = and i32 %bf.load507, 65535, !dbg !5532
  %cmp509 = icmp eq i32 %bf.clear508, 30, !dbg !5532
  br i1 %cmp509, label %cond.end513, label %cond.true511, !dbg !5532

cond.true511:                                     ; preds = %if.end495, %land.lhs.true506, %land.lhs.true500
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 4270, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5532
  br label %cond.end513, !dbg !5532

cond.end513:                                      ; preds = %land.lhs.true506, %cond.true511
  %constant517 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 1, i32 0, !dbg !5533
  %92 = load i64, i64* %constant517, align 8, !dbg !5533
  %cmp519 = icmp sgt i64 %92, %i435.0, !dbg !5535
  br i1 %cmp519, label %if.then521, label %if.else534, !dbg !5536

if.then521:                                       ; preds = %cond.end513
  %u526 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size_rtx.0, i64 0, i32 1, !dbg !5537
  %arrayidx528 = bitcast %union.u* %u526 to i64*, !dbg !5537
  %93 = load i64, i64* %arrayidx528, align 8, !dbg !5537
  %add529 = add nsw i64 %i435.0, %93, !dbg !5540
  %cmp530 = icmp slt i64 %92, %add529, !dbg !5541
  %spec.select4 = select i1 %cmp530, i32 1, i32 %sibcall_failure.0, !dbg !5542
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !5305, metadata !DIExpression()), !dbg !5336
  br label %if.end568, !dbg !5543

if.else534:                                       ; preds = %cond.end513
  %cmp539 = icmp slt i64 %92, %i435.0, !dbg !5544
  br i1 %cmp539, label %if.then541, label %if.else554, !dbg !5546

if.then541:                                       ; preds = %if.else534
  %constant548 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 0, i32 0, !dbg !5547
  %94 = load i64, i64* %constant548, align 8, !dbg !5547
  %add549 = add nsw i64 %92, %94, !dbg !5550
  %cmp550 = icmp slt i64 %i435.0, %add549, !dbg !5551
  %spec.select5 = select i1 %cmp550, i32 1, i32 %sibcall_failure.0, !dbg !5552
  call void @llvm.dbg.value(metadata i32 %spec.select5, metadata !5305, metadata !DIExpression()), !dbg !5336
  br label %if.end568, !dbg !5553

if.else554:                                       ; preds = %if.else534
  %constant557 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 0, i32 0, !dbg !5554
  %95 = load i64, i64* %constant557, align 8, !dbg !5554
  %u558 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size_rtx.0, i64 0, i32 1, !dbg !5557
  %arrayidx560 = bitcast %union.u* %u558 to i64*, !dbg !5557
  %96 = load i64, i64* %arrayidx560, align 8, !dbg !5557
  %cmp561 = icmp eq i64 %95, %96, !dbg !5558
  %spec.select6 = select i1 %cmp561, i32 %sibcall_failure.0, i32 1, !dbg !5559
  call void @llvm.dbg.value(metadata i32 %spec.select6, metadata !5305, metadata !DIExpression()), !dbg !5336
  br label %if.end568

if.end568:                                        ; preds = %if.end422, %lor.lhs.false442, %land.lhs.true451, %land.lhs.true462, %if.then541, %if.else554, %if.then521, %land.lhs.true427
  %sibcall_failure.7 = phi i32 [ %sibcall_failure.0, %land.lhs.true427 ], [ %sibcall_failure.0, %if.end422 ], [ %sibcall_failure.0, %land.lhs.true462 ], [ %sibcall_failure.0, %land.lhs.true451 ], [ %sibcall_failure.0, %lor.lhs.false442 ], [ %spec.select4, %if.then521 ], [ %spec.select5, %if.then541 ], [ %spec.select6, %if.else554 ], !dbg !5336
  call void @llvm.dbg.value(metadata i32 %sibcall_failure.7, metadata !5305, metadata !DIExpression()), !dbg !5336
  %97 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5560
  %98 = load i32, i32* %mode252, align 8, !dbg !5561
  %type572 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5562
  %99 = load %union.tree_node*, %union.tree_node** %type572, align 8, !dbg !5562
  %var575 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 1, i32 1, !dbg !5563
  %100 = load %union.tree_node*, %union.tree_node** %var575, align 8, !dbg !5563
  %cmp576 = icmp eq %union.tree_node* %100, null, !dbg !5563
  br i1 %cmp576, label %cond.true578, label %cond.false583, !dbg !5563

cond.true578:                                     ; preds = %if.end568
  %constant581 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 1, i32 0, !dbg !5563
  %101 = load i64, i64* %constant581, align 8, !dbg !5563
  %call582 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %101) #7, !dbg !5563
  br label %cond.end607, !dbg !5563

cond.false583:                                    ; preds = %if.end568
  br i1 false, label %cond.true589, label %cond.false594, !dbg !5563

cond.true589:                                     ; preds = %cond.false583
  br label %cond.end604, !dbg !5563

cond.false594:                                    ; preds = %cond.false583
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !5563
  %call598 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %102, %union.tree_node* nonnull %100) #7, !dbg !5563
  %constant601 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 1, i32 0, !dbg !5563
  %103 = load i64, i64* %constant601, align 8, !dbg !5563
  %call602 = tail call %union.tree_node* @size_int_kind(i64 %103, i32 1) #7, !dbg !5563
  %call603 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call598, %union.tree_node* %call602) #7, !dbg !5563
  br label %cond.end604, !dbg !5563

cond.end604:                                      ; preds = %cond.false594, %cond.true589
  %cond605 = phi %union.tree_node* [ undef, %cond.true589 ], [ %call603, %cond.false594 ], !dbg !5563
  %call606 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond605) #8, !dbg !5563
  br label %cond.end607, !dbg !5563

cond.end607:                                      ; preds = %cond.end604, %cond.true578
  %cond608 = phi %struct.rtx_def* [ %call582, %cond.true578 ], [ %call606, %cond.end604 ], !dbg !5563
  %var611 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 3, i32 1, !dbg !5564
  %104 = load %union.tree_node*, %union.tree_node** %var611, align 8, !dbg !5564
  %cmp612 = icmp eq %union.tree_node* %104, null, !dbg !5564
  br i1 %cmp612, label %cond.true614, label %cond.false619, !dbg !5564

cond.true614:                                     ; preds = %cond.end607
  %constant617 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 3, i32 0, !dbg !5564
  %105 = load i64, i64* %constant617, align 8, !dbg !5564
  %call618 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %105) #7, !dbg !5564
  br label %cond.end643, !dbg !5564

cond.false619:                                    ; preds = %cond.end607
  br i1 false, label %cond.true625, label %cond.false630, !dbg !5564

cond.true625:                                     ; preds = %cond.false619
  br label %cond.end640, !dbg !5564

cond.false630:                                    ; preds = %cond.false619
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !5564
  %call634 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %106, %union.tree_node* nonnull %104) #7, !dbg !5564
  %constant637 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 3, i32 0, !dbg !5564
  %107 = load i64, i64* %constant637, align 8, !dbg !5564
  %call638 = tail call %union.tree_node* @size_int_kind(i64 %107, i32 1) #7, !dbg !5564
  %call639 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call634, %union.tree_node* %call638) #7, !dbg !5564
  br label %cond.end640, !dbg !5564

cond.end640:                                      ; preds = %cond.false630, %cond.true625
  %cond641 = phi %union.tree_node* [ undef, %cond.true625 ], [ %call639, %cond.false630 ], !dbg !5564
  %call642 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond641) #8, !dbg !5564
  br label %cond.end643, !dbg !5564

cond.end643:                                      ; preds = %cond.end640, %cond.true614
  %cond644 = phi %struct.rtx_def* [ %call618, %cond.true614 ], [ %call642, %cond.end640 ], !dbg !5564
  tail call void @emit_push_insn(%struct.rtx_def* %97, i32 %98, %union.tree_node* %99, %struct.rtx_def* %size_rtx.0, i32 %76, i32 %partial.0, %struct.rtx_def* %spec.select2, i32 %excess.0, %struct.rtx_def* %argblock, %struct.rtx_def* %cond608, i32 %reg_parm_stack_space, %struct.rtx_def* %cond644) #7, !dbg !5565
  %cmp645 = icmp eq i32 %partial.0, 0, !dbg !5566
  br i1 %cmp645, label %if.then647, label %if.end652, !dbg !5568

if.then647:                                       ; preds = %cond.end643
  %stack_slot648 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 12, !dbg !5569
  %108 = bitcast %struct.rtx_def** %stack_slot648 to i64*, !dbg !5569
  %109 = load i64, i64* %108, align 8, !dbg !5569
  %110 = bitcast %struct.rtx_def** %value to i64*, !dbg !5570
  store i64 %109, i64* %110, align 8, !dbg !5570
  br label %if.end652, !dbg !5571

if.end652:                                        ; preds = %if.then343, %cond.end339, %if.then647, %cond.end643, %if.end245
  %sibcall_failure.9 = phi i32 [ %sibcall_failure.0, %if.end245 ], [ %sibcall_failure.0, %if.then343 ], [ %sibcall_failure.0, %cond.end339 ], [ %sibcall_failure.7, %if.then647 ], [ %sibcall_failure.7, %cond.end643 ], !dbg !5572
  call void @llvm.dbg.value(metadata i32 %sibcall_failure.9, metadata !5305, metadata !DIExpression()), !dbg !5336
  %reg653 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 4, !dbg !5573
  %111 = load %struct.rtx_def*, %struct.rtx_def** %reg653, align 8, !dbg !5573
  %tobool654 = icmp eq %struct.rtx_def* %111, null, !dbg !5574
  br i1 %tobool654, label %if.end671, label %land.lhs.true655, !dbg !5575

land.lhs.true655:                                 ; preds = %if.end652
  %112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i64 0, i32 0, !dbg !5575
  %bf.load657 = load i32, i32* %112, align 8, !dbg !5576
  %bf.clear658 = and i32 %bf.load657, 65535, !dbg !5576
  %cmp659 = icmp eq i32 %bf.clear658, 15, !dbg !5577
  br i1 %cmp659, label %if.then661, label %if.end671, !dbg !5578

if.then661:                                       ; preds = %land.lhs.true655
  %113 = bitcast %struct.arg_data* %arg to %struct.tree_common**, !dbg !5579
  %114 = load %struct.tree_common*, %struct.tree_common** %113, align 8, !dbg !5579
  %type665 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %114, i64 0, i32 2, !dbg !5579
  %115 = load %union.tree_node*, %union.tree_node** %type665, align 8, !dbg !5579
  call void @llvm.dbg.value(metadata %union.tree_node* %115, metadata !5333, metadata !DIExpression()), !dbg !5580
  %116 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5581
  %call668 = tail call i64 @int_size_in_bytes(%union.tree_node* %115) #7, !dbg !5582
  %conv669 = trunc i64 %call668 to i32, !dbg !5582
  %call670 = tail call %struct.rtx_def* @emit_group_load_into_temps(%struct.rtx_def* nonnull %111, %struct.rtx_def* %116, %union.tree_node* %115, i32 %conv669) #7, !dbg !5583
  %parallel_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 6, !dbg !5584
  store %struct.rtx_def* %call670, %struct.rtx_def** %parallel_value, align 8, !dbg !5585
  br label %if.end671, !dbg !5586

if.end671:                                        ; preds = %if.end652, %if.then661, %land.lhs.true655
  %117 = load i32, i32* @target_flags, align 4, !dbg !5587
  %and672 = and i32 %117, 4, !dbg !5587
  %cmp673 = icmp eq i32 %and672, 0, !dbg !5587
  br i1 %cmp673, label %lor.lhs.false675, label %land.lhs.true679, !dbg !5587

lor.lhs.false675:                                 ; preds = %if.end671
  %call676 = tail call i32 @ix86_cfun_abi() #7, !dbg !5587
  %cmp677 = icmp eq i32 %call676, 1, !dbg !5587
  br i1 %cmp677, label %land.lhs.true679, label %if.end695, !dbg !5589

land.lhs.true679:                                 ; preds = %if.end671, %lor.lhs.false675
  %tobool683 = icmp eq %struct.rtx_def* %argblock, null, !dbg !5590
  %118 = or i32 %and220, %variable_size, !dbg !5591
  %119 = icmp ne i32 %118, 0, !dbg !5591
  %120 = or i1 %119, %tobool683, !dbg !5591
  br i1 %120, label %if.end695, label %land.lhs.true686, !dbg !5591

land.lhs.true686:                                 ; preds = %land.lhs.true679
  %121 = load %struct.rtx_def*, %struct.rtx_def** %stack247, align 8, !dbg !5592
  %tobool688 = icmp eq %struct.rtx_def* %121, null, !dbg !5593
  br i1 %tobool688, label %if.end695, label %for.cond.preheader, !dbg !5594

for.cond.preheader:                               ; preds = %land.lhs.true686
  %122 = sext i32 %lower_bound.2 to i64, !dbg !5595
  %123 = sext i32 %upper_bound.1 to i64, !dbg !5595
  br label %for.cond, !dbg !5595

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %122, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !5597
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5302, metadata !DIExpression()), !dbg !5336
  %cmp690 = icmp slt i64 %indvars.iv, %123, !dbg !5598
  br i1 %cmp690, label %for.body, label %if.end695.loopexit, !dbg !5595

for.body:                                         ; preds = %for.cond
  %124 = load i8*, i8** @stack_usage_map, align 8, !dbg !5600
  %arrayidx693 = getelementptr inbounds i8, i8* %124, i64 %indvars.iv, !dbg !5600
  store i8 1, i8* %arrayidx693, align 1, !dbg !5601
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !5602
  call void @llvm.dbg.value(metadata i32 undef, metadata !5302, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5336
  br label %for.cond, !dbg !5603, !llvm.loop !5604

if.end695.loopexit:                               ; preds = %for.cond
  br label %if.end695, !dbg !5606

if.end695:                                        ; preds = %if.end695.loopexit, %land.lhs.true686, %land.lhs.true679, %lor.lhs.false675
  %125 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5606
  %add696 = add nsw i32 %125, 1, !dbg !5606
  store i32 %add696, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5606
  tail call void @preserve_temp_slots(%struct.rtx_def* null) #7, !dbg !5607
  tail call void @free_temp_slots() #7, !dbg !5608
  tail call void @pop_temp_slots() #7, !dbg !5609
  br label %cleanup, !dbg !5610

cleanup:                                          ; preds = %entry, %if.end695
  %retval.0 = phi i32 [ %sibcall_failure.9, %if.end695 ], [ 1, %entry ], !dbg !5336
  ret i32 %retval.0, !dbg !5611
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @check_sibcall_argument_overlap(%struct.rtx_def* %insn, %struct.arg_data* %arg, i32 %mark_stored_args_map) unnamed_addr #5 !dbg !5612 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5616, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata %struct.arg_data* %arg, metadata !5617, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata i32 %mark_stored_args_map, metadata !5618, metadata !DIExpression()), !dbg !5621
  %cmp = icmp eq %struct.rtx_def* %insn, null, !dbg !5622
  br i1 %cmp, label %if.then, label %if.else, !dbg !5624

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @get_insns() #7, !dbg !5625
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5616, metadata !DIExpression()), !dbg !5621
  br label %if.end, !dbg !5626

if.else:                                          ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5627
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5627
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5627
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5616, metadata !DIExpression()), !dbg !5621
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %insn.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %1, %if.else ], !dbg !5628
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !5616, metadata !DIExpression()), !dbg !5621
  br label %for.cond, !dbg !5629

for.cond:                                         ; preds = %for.inc, %if.end
  %insn.addr.1 = phi %struct.rtx_def* [ %insn.addr.0, %if.end ], [ %6, %for.inc ], !dbg !5621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1, metadata !5616, metadata !DIExpression()), !dbg !5621
  %tobool = icmp eq %struct.rtx_def* %insn.addr.1, null, !dbg !5630
  br i1 %tobool, label %for.end, label %for.body, !dbg !5630

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.1, i64 0, i32 0, !dbg !5632
  %bf.load = load i32, i32* %2, align 8, !dbg !5632
  %bf.clear = and i32 %bf.load, 65535, !dbg !5632
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !5632
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !5632

lor.lhs.false:                                    ; preds = %for.body
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !5632
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false5, !dbg !5632

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !5632
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false9, !dbg !5632

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !5632
  br i1 %cmp12, label %land.lhs.true, label %for.inc, !dbg !5635

land.lhs.true:                                    ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.1, i64 0, i32 1, !dbg !5636
  %3 = getelementptr inbounds %union.u, %union.u* %u13, i64 1, i32 0, i32 0, i64 0, !dbg !5636
  %rt_rtx16 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !5636
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !5636
  %call17 = tail call fastcc i32 @check_sibcall_argument_overlap_1(%struct.rtx_def* %4) #8, !dbg !5637
  %tobool18 = icmp eq i32 %call17, 0, !dbg !5637
  br i1 %tobool18, label %for.inc, label %for.end, !dbg !5638

for.inc:                                          ; preds = %land.lhs.true, %lor.lhs.false9
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5639
  %rt_rtx24 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !5639
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !5639
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !5616, metadata !DIExpression()), !dbg !5621
  br label %for.cond, !dbg !5640, !llvm.loop !5641

for.end:                                          ; preds = %land.lhs.true, %for.cond
  %insn.addr.1.lcssa = phi %struct.rtx_def* [ %insn.addr.1, %land.lhs.true ], [ %insn.addr.1, %for.cond ], !dbg !5621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1.lcssa, metadata !5616, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1.lcssa, metadata !5616, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1.lcssa, metadata !5616, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1.lcssa, metadata !5616, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1.lcssa, metadata !5616, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.1.lcssa, metadata !5616, metadata !DIExpression()), !dbg !5621
  %tobool25 = icmp eq i32 %mark_stored_args_map, 0, !dbg !5643
  br i1 %tobool25, label %if.end37, label %if.then26, !dbg !5645

if.then26:                                        ; preds = %for.end
  %constant = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 2, i32 0, !dbg !5646
  %7 = load i64, i64* %constant, align 8, !dbg !5646
  %conv = trunc i64 %7 to i32, !dbg !5648
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5619, metadata !DIExpression()), !dbg !5621
  %constant29 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %arg, i64 0, i32 10, i32 0, i32 0, !dbg !5649
  %8 = load i64, i64* %constant29, align 8, !dbg !5649
  %add = add i64 %7, %8, !dbg !5651
  %conv30 = trunc i64 %add to i32, !dbg !5652
  call void @llvm.dbg.value(metadata i32 %conv30, metadata !5620, metadata !DIExpression()), !dbg !5621
  br label %for.cond31, !dbg !5653

for.cond31:                                       ; preds = %for.body34, %if.then26
  %low.0 = phi i32 [ %conv, %if.then26 ], [ %inc, %for.body34 ], !dbg !5654
  call void @llvm.dbg.value(metadata i32 %low.0, metadata !5619, metadata !DIExpression()), !dbg !5621
  %cmp32 = icmp slt i32 %low.0, %conv30, !dbg !5655
  br i1 %cmp32, label %for.body34, label %if.end37.loopexit, !dbg !5657

for.body34:                                       ; preds = %for.cond31
  %9 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @stored_args_map, align 8, !dbg !5658
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %9, i32 %low.0) #8, !dbg !5659
  %inc = add nsw i32 %low.0, 1, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5619, metadata !DIExpression()), !dbg !5621
  br label %for.cond31, !dbg !5661, !llvm.loop !5662

if.end37.loopexit:                                ; preds = %for.cond31
  br label %if.end37, !dbg !5664

if.end37:                                         ; preds = %if.end37.loopexit, %for.end
  %cmp38 = icmp ne %struct.rtx_def* %insn.addr.1.lcssa, null, !dbg !5664
  %conv39 = zext i1 %cmp38 to i32, !dbg !5664
  ret i32 %conv39, !dbg !5665
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @load_register_parameters(%struct.arg_data* %args, i32 %num_actuals, %struct.rtx_def** %call_fusage, i32 %flags, i32 %is_sibcall, i32* %sibcall_failure) unnamed_addr #5 !dbg !5666 {
entry:
  call void @llvm.dbg.value(metadata %struct.arg_data* %args, metadata !5670, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %num_actuals, metadata !5671, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !5672, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5673, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %is_sibcall, metadata !5674, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32* %sibcall_failure, metadata !5675, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 0, metadata !5676, metadata !DIExpression()), !dbg !5701
  %and = and i32 %flags, 256, !dbg !5702
  %tobool = icmp eq i32 %and, 0, !dbg !5702
  %tobool106 = icmp eq i32 %is_sibcall, 0, !dbg !5703
  %0 = sext i32 %num_actuals to i64, !dbg !5705
  br label %for.cond, !dbg !5705

for.cond:                                         ; preds = %for.inc176, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc176 ], [ 0, %entry ], !dbg !5706
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !5676, metadata !DIExpression()), !dbg !5701
  %cmp = icmp slt i64 %indvars.iv3, %0, !dbg !5707
  br i1 %cmp, label %for.body, label %for.end178, !dbg !5708

for.body:                                         ; preds = %for.cond
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5709

cond.true:                                        ; preds = %for.body
  %tail_call_reg = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 5, !dbg !5710
  br label %cond.end, !dbg !5709

cond.false:                                       ; preds = %for.body
  %reg3 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 4, !dbg !5711
  br label %cond.end, !dbg !5709

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.rtx_def** [ %tail_call_reg, %cond.true ], [ %reg3, %cond.false ]
  %cond = load %struct.rtx_def*, %struct.rtx_def** %cond.in, align 8, !dbg !5709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !5678, metadata !DIExpression()), !dbg !5702
  %tobool4 = icmp eq %struct.rtx_def* %cond, null, !dbg !5712
  br i1 %tobool4, label %for.inc176, label %if.then, !dbg !5713

if.then:                                          ; preds = %cond.end
  %partial7 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 8, !dbg !5714
  %1 = load i32, i32* %partial7, align 4, !dbg !5714
  call void @llvm.dbg.value(metadata i32 %1, metadata !5682, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i32 0, metadata !5686, metadata !DIExpression()), !dbg !5715
  %call = tail call %struct.rtx_def* @get_last_insn() #7, !dbg !5716
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5687, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i32 -1, metadata !5685, metadata !DIExpression()), !dbg !5715
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !5717
  %bf.load = load i32, i32* %2, align 8, !dbg !5717
  %bf.clear = and i32 %bf.load, 65535, !dbg !5717
  %cmp8 = icmp eq i32 %bf.clear, 15, !dbg !5719
  br i1 %cmp8, label %if.end59, label %if.else, !dbg !5720

if.else:                                          ; preds = %if.then
  %tobool10 = icmp eq i32 %1, 0, !dbg !5721
  br i1 %tobool10, label %if.else17, label %if.then11, !dbg !5723

if.then11:                                        ; preds = %if.else
  %rem2 = and i32 %1, 3, !dbg !5724
  %cmp12 = icmp eq i32 %rem2, 0, !dbg !5724
  br i1 %cmp12, label %cond.end15, label %cond.true13, !dbg !5724

cond.true13:                                      ; preds = %if.then11
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1608, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5724
  br label %cond.end15, !dbg !5724

cond.end15:                                       ; preds = %if.then11, %cond.true13
  %div = sdiv i32 %1, 4, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %div, metadata !5685, metadata !DIExpression()), !dbg !5715
  br label %if.end59, !dbg !5727

if.else17:                                        ; preds = %if.else
  %tree_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 0, !dbg !5728
  %3 = bitcast %union.tree_node** %tree_value to %struct.tree_common**, !dbg !5728
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !5728
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !5728
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !5728
  %6 = load i64*, i64** %5, align 8, !dbg !5728
  %bf.load20 = load i64, i64* %6, align 8, !dbg !5728
  %bf.cast1 = and i64 %bf.load20, 65535, !dbg !5728
  %cmp22 = icmp eq i64 %bf.cast1, 14, !dbg !5728
  br i1 %cmp22, label %cond.true23, label %cond.false30, !dbg !5728

cond.true23:                                      ; preds = %if.else17
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !5728
  %call29 = tail call i32 @vector_type_mode(%union.tree_node* %7) #7, !dbg !5728
  br label %cond.end39, !dbg !5728

cond.false30:                                     ; preds = %if.else17
  %type36 = bitcast i64* %6 to %struct.tree_type*, !dbg !5728
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type36, i64 0, i32 6, !dbg !5728
  %bf.load37 = load i32, i32* %mode, align 4, !dbg !5728
  %bf.lshr = lshr i32 %bf.load37, 16, !dbg !5728
  %bf.clear38 = and i32 %bf.lshr, 255, !dbg !5728
  br label %cond.end39, !dbg !5728

cond.end39:                                       ; preds = %cond.false30, %cond.true23
  %cond40 = phi i32 [ %call29, %cond.true23 ], [ %bf.clear38, %cond.false30 ], !dbg !5728
  %cmp41 = icmp eq i32 %cond40, 1, !dbg !5730
  br i1 %cmp41, label %if.then42, label %if.else50, !dbg !5731

if.then42:                                        ; preds = %cond.end39
  %8 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !5732
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !5732
  %9 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !5732
  %call48 = tail call i64 @int_size_in_bytes(%union.tree_node* %9) #7, !dbg !5734
  %conv = trunc i64 %call48 to i32, !dbg !5734
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5686, metadata !DIExpression()), !dbg !5715
  %add = add nsw i32 %conv, 3, !dbg !5735
  %div49 = sdiv i32 %add, 4, !dbg !5736
  call void @llvm.dbg.value(metadata i32 %div49, metadata !5685, metadata !DIExpression()), !dbg !5715
  br label %if.end59, !dbg !5737

if.else50:                                        ; preds = %cond.end39
  %mode53 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 1, !dbg !5738
  %10 = load i32, i32* %mode53, align 8, !dbg !5738
  %idxprom54 = zext i32 %10 to i64, !dbg !5738
  %arrayidx55 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom54, !dbg !5738
  %11 = load i8, i8* %arrayidx55, align 1, !dbg !5738
  %conv57 = zext i8 %11 to i64, !dbg !5738
  call void @llvm.dbg.value(metadata i8 %11, metadata !5686, metadata !DIExpression()), !dbg !5715
  br label %if.end59

if.end59:                                         ; preds = %cond.end15, %if.else50, %if.then42, %if.then
  %nregs.2 = phi i32 [ -1, %if.then ], [ %div, %cond.end15 ], [ %div49, %if.then42 ], [ -1, %if.else50 ], !dbg !5715
  %size.2 = phi i64 [ 0, %if.then ], [ 0, %cond.end15 ], [ %call48, %if.then42 ], [ %conv57, %if.else50 ], !dbg !5739
  call void @llvm.dbg.value(metadata i32 %nregs.2, metadata !5685, metadata !DIExpression()), !dbg !5715
  %bf.load60 = load i32, i32* %2, align 8, !dbg !5740
  %bf.clear61 = and i32 %bf.load60, 65535, !dbg !5740
  %cmp62 = icmp eq i32 %bf.clear61, 15, !dbg !5741
  br i1 %cmp62, label %if.then64, label %if.else67, !dbg !5742

if.then64:                                        ; preds = %if.end59
  %parallel_value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 6, !dbg !5743
  %12 = load %struct.rtx_def*, %struct.rtx_def** %parallel_value, align 8, !dbg !5743
  tail call void @emit_group_move(%struct.rtx_def* nonnull %cond, %struct.rtx_def* %12) #7, !dbg !5744
  br label %if.end149, !dbg !5744

if.else67:                                        ; preds = %if.end59
  %cmp68 = icmp eq i32 %nregs.2, -1, !dbg !5745
  br i1 %cmp68, label %if.then70, label %if.else74, !dbg !5746

if.then70:                                        ; preds = %if.else67
  %value = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 2, !dbg !5747
  %13 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !5747
  %call73 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %cond, %struct.rtx_def* %13) #7, !dbg !5749
  br label %if.end149, !dbg !5750

if.else74:                                        ; preds = %if.else67
  %n_aligned_regs = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 15, !dbg !5751
  %14 = load i32, i32* %n_aligned_regs, align 8, !dbg !5751
  %cmp77 = icmp eq i32 %14, 0, !dbg !5752
  br i1 %cmp77, label %if.else95, label %for.cond80.preheader, !dbg !5753

for.cond80.preheader:                             ; preds = %if.else74
  %aligned_regs = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 14, !dbg !5754
  br label %for.cond80, !dbg !5757

for.cond80:                                       ; preds = %for.cond80.preheader, %for.body86
  %indvars.iv = phi i64 [ 0, %for.cond80.preheader ], [ %indvars.iv.next, %for.body86 ], !dbg !5758
  %15 = phi i32 [ %14, %for.cond80.preheader ], [ %.pre, %for.body86 ], !dbg !5758
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5677, metadata !DIExpression()), !dbg !5701
  %16 = sext i32 %15 to i64, !dbg !5759
  %cmp84 = icmp slt i64 %indvars.iv, %16, !dbg !5759
  br i1 %cmp84, label %for.body86, label %if.end149.loopexit, !dbg !5757

for.body86:                                       ; preds = %for.cond80
  %17 = load i32, i32* @word_mode, align 4, !dbg !5760
  %call87 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %cond) #8, !dbg !5761
  %18 = trunc i64 %indvars.iv to i32, !dbg !5762
  %add88 = add i32 %call87, %18, !dbg !5762
  %call89 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %17, i32 %add88) #7, !dbg !5763
  %19 = load %struct.rtx_def**, %struct.rtx_def*** %aligned_regs, align 8, !dbg !5764
  %arrayidx93 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %19, i64 %indvars.iv, !dbg !5765
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx93, align 8, !dbg !5765
  %call94 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call89, %struct.rtx_def* %20) #7, !dbg !5766
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5767
  call void @llvm.dbg.value(metadata i32 undef, metadata !5677, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5701
  %.pre = load i32, i32* %n_aligned_regs, align 8, !dbg !5758
  br label %for.cond80, !dbg !5768, !llvm.loop !5769

if.else95:                                        ; preds = %if.else74
  %cmp96 = icmp eq i32 %1, 0, !dbg !5771
  br i1 %cmp96, label %if.then101, label %lor.lhs.false, !dbg !5772

lor.lhs.false:                                    ; preds = %if.else95
  %pass_on_stack = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 9, !dbg !5773
  %21 = load i32, i32* %pass_on_stack, align 8, !dbg !5773
  %tobool100 = icmp eq i32 %21, 0, !dbg !5774
  br i1 %tobool100, label %if.end149, label %if.then101, !dbg !5775

if.then101:                                       ; preds = %lor.lhs.false, %if.else95
  %value104 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 2, !dbg !5776
  %22 = load %struct.rtx_def*, %struct.rtx_def** %value104, align 8, !dbg !5776
  %call105 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %22) #7, !dbg !5777
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call105, metadata !5688, metadata !DIExpression()), !dbg !5778
  br i1 %tobool106, label %if.end116, label %land.lhs.true, !dbg !5779

land.lhs.true:                                    ; preds = %if.then101
  %23 = load %struct.rtx_def*, %struct.rtx_def** %value104, align 8, !dbg !5780
  %arrayidx110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5780
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**, !dbg !5780
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5780
  %sext = shl i64 %size.2, 32, !dbg !5781
  %conv111 = ashr exact i64 %sext, 32, !dbg !5781
  %call112 = tail call fastcc zeroext i8 @mem_overlaps_already_clobbered_arg_p(%struct.rtx_def* %24, i64 %conv111) #8, !dbg !5782
  %tobool114 = icmp eq i8 %call112, 0, !dbg !5782
  br i1 %tobool114, label %if.end116, label %if.then115, !dbg !5783

if.then115:                                       ; preds = %land.lhs.true
  store i32 1, i32* %sibcall_failure, align 4, !dbg !5784
  br label %if.end116, !dbg !5785

if.end116:                                        ; preds = %land.lhs.true, %if.then101, %if.then115
  %call141 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %cond) #8, !dbg !5786
  %mode144 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, i32 1, !dbg !5787
  %25 = load i32, i32* %mode144, align 8, !dbg !5787
  tail call void @move_block_to_reg(i32 %call141, %struct.rtx_def* %call105, i32 %nregs.2, i32 %25) #7, !dbg !5788
  br label %if.end149, !dbg !5789

if.end149.loopexit:                               ; preds = %for.cond80
  br label %if.end149, !dbg !5790

if.end149:                                        ; preds = %if.end149.loopexit, %lor.lhs.false, %if.then70, %if.end116, %if.then64
  br i1 %tobool106, label %if.end157, label %land.lhs.true151, !dbg !5792

land.lhs.true151:                                 ; preds = %if.end149
  %arrayidx153 = getelementptr inbounds %struct.arg_data, %struct.arg_data* %args, i64 %indvars.iv3, !dbg !5793
  %call154 = tail call fastcc i32 @check_sibcall_argument_overlap(%struct.rtx_def* %call, %struct.arg_data* %arrayidx153, i32 0) #8, !dbg !5794
  %tobool155 = icmp eq i32 %call154, 0, !dbg !5794
  br i1 %tobool155, label %if.end157, label %if.then156, !dbg !5795

if.then156:                                       ; preds = %land.lhs.true151
  store i32 1, i32* %sibcall_failure, align 4, !dbg !5796
  br label %if.end157, !dbg !5797

if.end157:                                        ; preds = %land.lhs.true151, %if.end149, %if.then156
  %bf.load158 = load i32, i32* %2, align 8, !dbg !5798
  %bf.clear159 = and i32 %bf.load158, 65535, !dbg !5798
  %cmp160 = icmp eq i32 %bf.clear159, 15, !dbg !5800
  br i1 %cmp160, label %if.then162, label %if.else163, !dbg !5801

if.then162:                                       ; preds = %if.end157
  tail call void @use_group_regs(%struct.rtx_def** %call_fusage, %struct.rtx_def* nonnull %cond) #7, !dbg !5802
  br label %for.inc176, !dbg !5802

if.else163:                                       ; preds = %if.end157
  %cmp164 = icmp eq i32 %nregs.2, -1, !dbg !5803
  br i1 %cmp164, label %if.then166, label %if.else167, !dbg !5805

if.then166:                                       ; preds = %if.else163
  tail call void @use_reg(%struct.rtx_def** %call_fusage, %struct.rtx_def* nonnull %cond) #7, !dbg !5806
  br label %for.inc176, !dbg !5806

if.else167:                                       ; preds = %if.else163
  %cmp168 = icmp sgt i32 %nregs.2, 0, !dbg !5807
  br i1 %cmp168, label %if.then170, label %for.inc176, !dbg !5809

if.then170:                                       ; preds = %if.else167
  %call171 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %cond) #8, !dbg !5810
  tail call void @use_regs(%struct.rtx_def** %call_fusage, i32 %call171, i32 %nregs.2) #7, !dbg !5811
  br label %for.inc176, !dbg !5811

for.inc176:                                       ; preds = %cond.end, %if.then166, %if.then170, %if.else167, %if.then162
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !5812
  call void @llvm.dbg.value(metadata i32 undef, metadata !5676, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5701
  br label %for.cond, !dbg !5813, !llvm.loop !5814

for.end178:                                       ; preds = %for.cond
  ret void, !dbg !5816
}

declare dso_local %struct.rtx_def* @function_arg(%struct.ix86_args*, i32, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_call_1(%struct.rtx_def* %funexp, %union.tree_node* %fntree, %union.tree_node* %fndecl, %union.tree_node* %funtype, i64 %stack_size, i64 %rounded_stack_size, i64 %struct_value_size, %struct.rtx_def* %next_arg_reg, %struct.rtx_def* %valreg, i32 %old_inhibit_defer_pop, %struct.rtx_def* %call_fusage, i32 %ecf_flags, %struct.ix86_args* %args_so_far) unnamed_addr #5 !dbg !5817 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %funexp, metadata !5821, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %fntree, metadata !5822, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !5823, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %union.tree_node* %funtype, metadata !5824, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i64 %stack_size, metadata !5825, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i64 %rounded_stack_size, metadata !5826, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i64 %struct_value_size, metadata !5827, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next_arg_reg, metadata !5828, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %valreg, metadata !5829, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i32 %old_inhibit_defer_pop, metadata !5830, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call_fusage, metadata !5831, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i32 %ecf_flags, metadata !5832, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !5833, metadata !DIExpression()), !dbg !5842
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %rounded_stack_size) #7, !dbg !5843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5834, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i32 0, metadata !5836, metadata !DIExpression()), !dbg !5842
  %conv = trunc i64 %stack_size to i32, !dbg !5844
  %call1 = tail call i32 @ix86_return_pops_args(%union.tree_node* %fndecl, %union.tree_node* %funtype, i32 %conv) #7, !dbg !5844
  %conv2 = sext i32 %call1 to i64, !dbg !5844
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !5837, metadata !DIExpression()), !dbg !5842
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %funexp, i64 0, i32 0, !dbg !5845
  %bf.load = load i32, i32* %0, align 8, !dbg !5845
  %bf.clear = and i32 %bf.load, 65535, !dbg !5845
  %cmp = icmp eq i32 %bf.clear, 45, !dbg !5847
  br i1 %cmp, label %if.end, label %if.then, !dbg !5848

if.then:                                          ; preds = %entry
  %call4 = tail call %struct.rtx_def* @memory_address_addr_space(i32 14, %struct.rtx_def* %funexp, i8 zeroext 0) #7, !dbg !5849
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5821, metadata !DIExpression()), !dbg !5842
  br label %if.end, !dbg !5850

if.end:                                           ; preds = %entry, %if.then
  %funexp.addr.0 = phi %struct.rtx_def* [ %call4, %if.then ], [ %funexp, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %funexp.addr.0, metadata !5821, metadata !DIExpression()), !dbg !5842
  %cmp5 = icmp sgt i32 %call1, 0, !dbg !5851
  br i1 %cmp5, label %if.then7, label %if.else16, !dbg !5852

if.then7:                                         ; preds = %if.end
  %call8 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv2) #7, !dbg !5853
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !5838, metadata !DIExpression()), !dbg !5854
  %tobool = icmp eq %struct.rtx_def* %valreg, null, !dbg !5855
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 14, %struct.rtx_def* %funexp.addr.0) #7, !dbg !5857
  br i1 %tobool, label %if.else, label %if.then9, !dbg !5858

if.then9:                                         ; preds = %if.then7
  %call11 = tail call %struct.rtx_def* @gen_call_value_pop(%struct.rtx_def* nonnull %valreg, %struct.rtx_def* %call10, %struct.rtx_def* %call, %struct.rtx_def* %next_arg_reg, %struct.rtx_def* %call8) #7, !dbg !5859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !5841, metadata !DIExpression()), !dbg !5854
  br label %if.end14, !dbg !5860

if.else:                                          ; preds = %if.then7
  %call13 = tail call %struct.rtx_def* @gen_call_pop(%struct.rtx_def* %call10, %struct.rtx_def* %call, %struct.rtx_def* %next_arg_reg, %struct.rtx_def* %call8) #7, !dbg !5861
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !5841, metadata !DIExpression()), !dbg !5854
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then9
  %pat.0 = phi %struct.rtx_def* [ %call11, %if.then9 ], [ %call13, %if.else ], !dbg !5857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.0, metadata !5841, metadata !DIExpression()), !dbg !5854
  %call15 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %pat.0) #7, !dbg !5862
  call void @llvm.dbg.value(metadata i32 1, metadata !5836, metadata !DIExpression()), !dbg !5842
  br label %if.end41, !dbg !5863

if.else16:                                        ; preds = %if.end
  %and = and i32 %ecf_flags, 256, !dbg !5864
  %tobool17 = icmp eq i32 %and, 0, !dbg !5864
  %tobool19 = icmp ne %struct.rtx_def* %valreg, null, !dbg !5866
  %call21 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 14, %struct.rtx_def* %funexp.addr.0) #7, !dbg !5866
  br i1 %tobool17, label %if.else29, label %if.then18, !dbg !5867

if.then18:                                        ; preds = %if.else16
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !5868

if.then20:                                        ; preds = %if.then18
  %call22 = tail call %struct.rtx_def* @gen_sibcall_value(%struct.rtx_def* nonnull %valreg, %struct.rtx_def* %call21, %struct.rtx_def* %call, %struct.rtx_def* %next_arg_reg) #7, !dbg !5870
  %call23 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call22) #7, !dbg !5872
  br label %if.end41, !dbg !5872

if.else24:                                        ; preds = %if.then18
  %call26 = tail call %struct.rtx_def* @gen_sibcall(%struct.rtx_def* %call21, %struct.rtx_def* %call, %struct.rtx_def* %next_arg_reg) #7, !dbg !5873
  %call27 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call26) #7, !dbg !5874
  br label %if.end41

if.else29:                                        ; preds = %if.else16
  br i1 %tobool19, label %if.then31, label %if.else35, !dbg !5875

if.then31:                                        ; preds = %if.else29
  %call33 = tail call %struct.rtx_def* @gen_call_value(%struct.rtx_def* nonnull %valreg, %struct.rtx_def* %call21, %struct.rtx_def* %call, %struct.rtx_def* %next_arg_reg) #7, !dbg !5878
  %call34 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call33) #7, !dbg !5880
  br label %if.end41, !dbg !5880

if.else35:                                        ; preds = %if.else29
  %call37 = tail call %struct.rtx_def* @gen_call(%struct.rtx_def* %call21, %struct.rtx_def* %call, %struct.rtx_def* %next_arg_reg) #7, !dbg !5881
  %call38 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call37) #7, !dbg !5882
  br label %if.end41

if.end41:                                         ; preds = %if.else24, %if.then20, %if.else35, %if.then31, %if.end14
  %already_popped.0 = phi i32 [ 1, %if.end14 ], [ 0, %if.then31 ], [ 0, %if.else35 ], [ 0, %if.then20 ], [ 0, %if.else24 ], !dbg !5842
  call void @llvm.dbg.value(metadata i32 %already_popped.0, metadata !5836, metadata !DIExpression()), !dbg !5842
  %call42 = tail call %struct.rtx_def* @last_call_insn() #7, !dbg !5883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !5835, metadata !DIExpression()), !dbg !5842
  tail call void @add_function_usage_to(%struct.rtx_def* %call42, %struct.rtx_def* %call_fusage) #7, !dbg !5884
  %and43 = and i32 %ecf_flags, 1, !dbg !5885
  %tobool44 = icmp eq i32 %and43, 0, !dbg !5885
  br i1 %tobool44, label %if.end48, label %if.then45, !dbg !5887

if.then45:                                        ; preds = %if.end41
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 0, !dbg !5888
  %bf.load46 = load i32, i32* %1, align 8, !dbg !5889
  %bf.set = or i32 %bf.load46, 67108864, !dbg !5889
  store i32 %bf.set, i32* %1, align 8, !dbg !5889
  br label %if.end48, !dbg !5888

if.end48:                                         ; preds = %if.end41, %if.then45
  %and49 = and i32 %ecf_flags, 2, !dbg !5890
  %tobool50 = icmp eq i32 %and49, 0, !dbg !5890
  br i1 %tobool50, label %if.end55, label %if.then51, !dbg !5892

if.then51:                                        ; preds = %if.end48
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 0, !dbg !5893
  %bf.load52 = load i32, i32* %2, align 8, !dbg !5894
  %bf.set54 = or i32 %bf.load52, -2147483648, !dbg !5894
  store i32 %bf.set54, i32* %2, align 8, !dbg !5894
  br label %if.end55, !dbg !5893

if.end55:                                         ; preds = %if.end48, %if.then51
  %and56 = and i32 %ecf_flags, 4, !dbg !5895
  %tobool57 = icmp eq i32 %and56, 0, !dbg !5895
  br i1 %tobool57, label %if.end62, label %if.then58, !dbg !5897

if.then58:                                        ; preds = %if.end55
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 0, !dbg !5898
  %bf.load59 = load i32, i32* %3, align 8, !dbg !5899
  %bf.set61 = or i32 %bf.load59, 33554432, !dbg !5899
  store i32 %bf.set61, i32* %3, align 8, !dbg !5899
  br label %if.end62, !dbg !5898

if.end62:                                         ; preds = %if.end55, %if.then58
  tail call void @make_reg_eh_region_note(%struct.rtx_def* %call42, i32 %ecf_flags, i32 0) #7, !dbg !5900
  %and63 = and i32 %ecf_flags, 8, !dbg !5901
  %tobool64 = icmp eq i32 %and63, 0, !dbg !5901
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !5903

if.then65:                                        ; preds = %if.end62
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5904
  tail call void @add_reg_note(%struct.rtx_def* %call42, i32 27, %struct.rtx_def* %4) #7, !dbg !5905
  br label %if.end66, !dbg !5905

if.end66:                                         ; preds = %if.end62, %if.then65
  %5 = trunc i32 %ecf_flags to i8, !dbg !5906
  %tobool68 = icmp slt i8 %5, 0, !dbg !5906
  br i1 %tobool68, label %if.then69, label %if.end73, !dbg !5908

if.then69:                                        ; preds = %if.end66
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5909
  tail call void @add_reg_note(%struct.rtx_def* %call42, i32 30, %struct.rtx_def* %6) #7, !dbg !5911
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5912
  %calls_setjmp = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 20, !dbg !5913
  %bf.load70 = load i32, i32* %calls_setjmp, align 8, !dbg !5914
  %bf.set72 = or i32 %bf.load70, 262144, !dbg !5914
  store i32 %bf.set72, i32* %calls_setjmp, align 8, !dbg !5914
  br label %if.end73, !dbg !5915

if.end73:                                         ; preds = %if.then69, %if.end66
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 0, !dbg !5916
  %bf.load77 = load i32, i32* %8, align 8, !dbg !5917
  %9 = shl i32 %ecf_flags, 16, !dbg !5917
  %bf.shl = and i32 %9, 16777216, !dbg !5917
  %bf.clear78 = and i32 %bf.load77, -16777217, !dbg !5917
  %bf.set79 = or i32 %bf.clear78, %bf.shl, !dbg !5917
  store i32 %bf.set79, i32* %8, align 8, !dbg !5917
  %10 = load i32, i32* @flag_enable_icf_debug, align 4, !dbg !5918
  %tobool80 = icmp ne i32 %10, 0, !dbg !5918
  %cmp81 = icmp eq %union.tree_node* %fndecl, null, !dbg !5920
  %or.cond = and i1 %tobool80, %cmp81, !dbg !5921
  br i1 %or.cond, label %if.then83, label %if.end85, !dbg !5921

if.then83:                                        ; preds = %if.end73
  %11 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !5922
  %virtual_call_token = getelementptr inbounds %struct.gcc_debug_hooks, %struct.gcc_debug_hooks* %11, i64 0, i32 27, !dbg !5923
  %12 = load void (%union.tree_node*, i32)*, void (%union.tree_node*, i32)** %virtual_call_token, align 8, !dbg !5923
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %fntree, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5924
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5924
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5924
  %arrayidx84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5925
  %rt_int = bitcast %union.rtunion_def* %arrayidx84 to i32*, !dbg !5925
  %14 = load i32, i32* %rt_int, align 8, !dbg !5925
  tail call void %12(%union.tree_node* %13, i32 %14) #7, !dbg !5926
  br label %if.end85, !dbg !5926

if.end85:                                         ; preds = %if.then83, %if.end73
  store i32 %old_inhibit_defer_pop, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5927
  br i1 %cmp5, label %if.then88, label %if.end105, !dbg !5928

if.then88:                                        ; preds = %if.end85
  %tobool89 = icmp eq i32 %already_popped.0, 0, !dbg !5929
  br i1 %tobool89, label %if.then90, label %if.end100, !dbg !5933

if.then90:                                        ; preds = %if.then88
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !5934
  %call91 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %15) #7, !dbg !5934
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 1, !dbg !5934
  %arrayidx94 = getelementptr inbounds %union.u, %union.u* %u92, i64 1, i32 0, i32 1, !dbg !5934
  %rt_rtx = bitcast %struct.object_block** %arrayidx94 to %struct.rtx_def**, !dbg !5934
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5934
  %call95 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call91, %struct.rtx_def* %16) #7, !dbg !5934
  store %struct.rtx_def* %call95, %struct.rtx_def** %rt_rtx, align 8, !dbg !5935
  br label %if.end100, !dbg !5936

if.end100:                                        ; preds = %if.then88, %if.then90
  %sub = sub nsw i64 %rounded_stack_size, %conv2, !dbg !5937
  call void @llvm.dbg.value(metadata i64 %sub, metadata !5826, metadata !DIExpression()), !dbg !5842
  %call101 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #7, !dbg !5938
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call101, metadata !5834, metadata !DIExpression()), !dbg !5842
  %17 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !5939
  %sub103 = sub i32 %17, %call1, !dbg !5939
  store i32 %sub103, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !5939
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 45), align 1, !dbg !5940
  br label %if.end105, !dbg !5942

if.end105:                                        ; preds = %if.end100, %if.end85
  %rounded_stack_size.addr.0 = phi i64 [ %sub, %if.end100 ], [ %rounded_stack_size, %if.end85 ]
  %rounded_stack_size_rtx.0 = phi %struct.rtx_def* [ %call101, %if.end100 ], [ %call, %if.end85 ], !dbg !5842
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rounded_stack_size_rtx.0, metadata !5834, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i64 %rounded_stack_size.addr.0, metadata !5826, metadata !DIExpression()), !dbg !5842
  %18 = load i32, i32* @target_flags, align 4, !dbg !5943
  %and106 = and i32 %18, 4, !dbg !5943
  %cmp107 = icmp eq i32 %and106, 0, !dbg !5943
  br i1 %cmp107, label %lor.lhs.false, label %if.else137, !dbg !5943

lor.lhs.false:                                    ; preds = %if.end105
  %call109 = tail call i32 @ix86_cfun_abi() #7, !dbg !5943
  %cmp110 = icmp eq i32 %call109, 1, !dbg !5943
  br i1 %cmp110, label %if.else137, label %if.then112, !dbg !5945

if.then112:                                       ; preds = %lor.lhs.false
  %cmp113 = icmp eq i64 %rounded_stack_size.addr.0, 0, !dbg !5946
  br i1 %cmp113, label %if.end142, label %if.then115, !dbg !5949

if.then115:                                       ; preds = %if.then112
  br i1 %tobool64, label %if.else122, label %if.then118, !dbg !5950

if.then118:                                       ; preds = %if.then115
  %19 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !5952
  %20 = trunc i64 %rounded_stack_size.addr.0 to i32, !dbg !5952
  %conv121 = sub i32 %19, %20, !dbg !5952
  store i32 %conv121, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !5952
  br label %if.end142, !dbg !5954

if.else122:                                       ; preds = %if.then115
  %21 = load i32, i32* @flag_defer_pop, align 4, !dbg !5955
  %tobool123 = icmp eq i32 %21, 0, !dbg !5955
  %22 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5957
  %and128 = and i32 %ecf_flags, 3, !dbg !5958
  %23 = or i32 %22, %and128, !dbg !5959
  %24 = icmp ne i32 %23, 0, !dbg !5959
  %25 = or i1 %24, %tobool123, !dbg !5959
  br i1 %25, label %if.else133, label %if.then130, !dbg !5959

if.then130:                                       ; preds = %if.else122
  %26 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !5960
  %27 = trunc i64 %rounded_stack_size.addr.0 to i32, !dbg !5960
  %conv132 = add i32 %26, %27, !dbg !5960
  store i32 %conv132, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 0), align 8, !dbg !5960
  br label %if.end142, !dbg !5961

if.else133:                                       ; preds = %if.else122
  tail call void @adjust_stack(%struct.rtx_def* %rounded_stack_size_rtx.0) #7, !dbg !5962
  br label %if.end142

if.else137:                                       ; preds = %if.end105, %lor.lhs.false
  %tobool138 = icmp eq i32 %call1, 0, !dbg !5963
  br i1 %tobool138, label %if.end142, label %if.then139, !dbg !5965

if.then139:                                       ; preds = %if.else137
  %call140 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv2) #7, !dbg !5966
  tail call void @anti_adjust_stack(%struct.rtx_def* %call140) #7, !dbg !5967
  br label %if.end142, !dbg !5967

if.end142:                                        ; preds = %if.else137, %if.then112, %if.then139, %if.then130, %if.else133, %if.then118
  ret void, !dbg !5968
}

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #2

declare dso_local void @mark_reg_pointer(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

declare dso_local void @end_sequence() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @emit_group_store(%struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @avoid_likely_spilled_reg(%struct.rtx_def* %x) unnamed_addr #5 !dbg !5969 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5973, metadata !DIExpression()), !dbg !5975
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5976
  %bf.load = load i32, i32* %0, align 8, !dbg !5976
  %bf.clear = and i32 %bf.load, 65535, !dbg !5976
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5976
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !5978

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5979
  %cmp1 = icmp ult i32 %call, 53, !dbg !5979
  br i1 %cmp1, label %land.lhs.true2, label %cleanup, !dbg !5980

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom = zext i32 %call3 to i64, !dbg !5981
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom, !dbg !5981
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5981
  %cmp4 = icmp eq i32 %1, 1, !dbg !5981
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !5981

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %call5 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom6 = zext i32 %call5 to i64, !dbg !5981
  %arrayidx7 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom6, !dbg !5981
  %2 = load i32, i32* %arrayidx7, align 4, !dbg !5981
  %cmp8 = icmp eq i32 %2, 2, !dbg !5981
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !5981

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %call10 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom11 = zext i32 %call10 to i64, !dbg !5981
  %arrayidx12 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom11, !dbg !5981
  %3 = load i32, i32* %arrayidx12, align 4, !dbg !5981
  %cmp13 = icmp eq i32 %3, 3, !dbg !5981
  br i1 %cmp13, label %if.then, label %lor.lhs.false14, !dbg !5981

lor.lhs.false14:                                  ; preds = %lor.lhs.false9
  %call15 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom16 = zext i32 %call15 to i64, !dbg !5981
  %arrayidx17 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom16, !dbg !5981
  %4 = load i32, i32* %arrayidx17, align 4, !dbg !5981
  %cmp18 = icmp eq i32 %4, 4, !dbg !5981
  br i1 %cmp18, label %if.then, label %lor.lhs.false19, !dbg !5981

lor.lhs.false19:                                  ; preds = %lor.lhs.false14
  %call20 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom21 = zext i32 %call20 to i64, !dbg !5981
  %arrayidx22 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom21, !dbg !5981
  %5 = load i32, i32* %arrayidx22, align 4, !dbg !5981
  %cmp23 = icmp eq i32 %5, 7, !dbg !5981
  br i1 %cmp23, label %if.then, label %lor.lhs.false24, !dbg !5981

lor.lhs.false24:                                  ; preds = %lor.lhs.false19
  %call25 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom26 = zext i32 %call25 to i64, !dbg !5981
  %arrayidx27 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom26, !dbg !5981
  %6 = load i32, i32* %arrayidx27, align 4, !dbg !5981
  %cmp28 = icmp eq i32 %6, 5, !dbg !5981
  br i1 %cmp28, label %if.then, label %lor.lhs.false29, !dbg !5981

lor.lhs.false29:                                  ; preds = %lor.lhs.false24
  %call30 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom31 = zext i32 %call30 to i64, !dbg !5981
  %arrayidx32 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom31, !dbg !5981
  %7 = load i32, i32* %arrayidx32, align 4, !dbg !5981
  %cmp33 = icmp eq i32 %7, 6, !dbg !5981
  br i1 %cmp33, label %if.then, label %lor.lhs.false34, !dbg !5981

lor.lhs.false34:                                  ; preds = %lor.lhs.false29
  %call35 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom36 = zext i32 %call35 to i64, !dbg !5981
  %arrayidx37 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom36, !dbg !5981
  %8 = load i32, i32* %arrayidx37, align 4, !dbg !5981
  %cmp38 = icmp eq i32 %8, 17, !dbg !5981
  br i1 %cmp38, label %if.then, label %lor.lhs.false39, !dbg !5981

lor.lhs.false39:                                  ; preds = %lor.lhs.false34
  %call40 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom41 = zext i32 %call40 to i64, !dbg !5981
  %arrayidx42 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom41, !dbg !5981
  %9 = load i32, i32* %arrayidx42, align 4, !dbg !5981
  %cmp43 = icmp eq i32 %9, 14, !dbg !5981
  br i1 %cmp43, label %if.then, label %lor.lhs.false44, !dbg !5981

lor.lhs.false44:                                  ; preds = %lor.lhs.false39
  %call45 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !5981
  %idxprom46 = zext i32 %call45 to i64, !dbg !5981
  %arrayidx47 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom46, !dbg !5981
  %10 = load i32, i32* %arrayidx47, align 4, !dbg !5981
  %cmp48 = icmp eq i32 %10, 15, !dbg !5981
  br i1 %cmp48, label %if.then, label %cleanup, !dbg !5982

if.then:                                          ; preds = %lor.lhs.false44, %lor.lhs.false39, %lor.lhs.false34, %lor.lhs.false29, %lor.lhs.false24, %lor.lhs.false19, %lor.lhs.false14, %lor.lhs.false9, %lor.lhs.false, %land.lhs.true2
  store i32 0, i32* @generating_concat_p, align 4, !dbg !5983
  %bf.load49 = load i32, i32* %0, align 8, !dbg !5985
  %bf.lshr = lshr i32 %bf.load49, 16, !dbg !5985
  %bf.clear50 = and i32 %bf.lshr, 255, !dbg !5985
  %call51 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear50) #7, !dbg !5986
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call51, metadata !5974, metadata !DIExpression()), !dbg !5975
  store i32 1, i32* @generating_concat_p, align 4, !dbg !5987
  %call52 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call51, %struct.rtx_def* %x) #7, !dbg !5988
  br label %cleanup, !dbg !5989

cleanup:                                          ; preds = %entry, %land.lhs.true, %lor.lhs.false44, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call51, %if.then ], [ %x, %lor.lhs.false44 ], [ %x, %land.lhs.true ], [ %x, %entry ], !dbg !5975
  ret %struct.rtx_def* %retval.0, !dbg !5990
}

declare dso_local %struct.rtx_def* @copy_blkmode_from_reg(%struct.rtx_def*, %struct.rtx_def*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @emit_stack_restore(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @restore_fixed_argument_area(%struct.rtx_def* %save_area, %struct.rtx_def* %argblock, i32 %high_to_save, i32 %low_to_save) unnamed_addr #5 !dbg !5991 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %save_area, metadata !5995, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock, metadata !5996, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 %high_to_save, metadata !5997, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 %low_to_save, metadata !5998, metadata !DIExpression()), !dbg !6002
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %save_area, i64 0, i32 0, !dbg !6003
  %bf.load = load i32, i32* %0, align 8, !dbg !6003
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6003
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6003
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5999, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 %low_to_save, metadata !6000, metadata !DIExpression()), !dbg !6002
  %conv = sext i32 %low_to_save to i64, !dbg !6004
  %call = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %argblock, i64 %conv) #7, !dbg !6004
  %call1 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %bf.clear, %struct.rtx_def* %call, i8 zeroext 0) #7, !dbg !6004
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear, %struct.rtx_def* %call1) #7, !dbg !6005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !6001, metadata !DIExpression()), !dbg !6002
  tail call void @set_mem_align(%struct.rtx_def* %call2, i32 32) #7, !dbg !6006
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !6007
  br i1 %cmp, label %if.else, label %if.then, !dbg !6009

if.then:                                          ; preds = %entry
  %call4 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2, %struct.rtx_def* %save_area) #7, !dbg !6010
  br label %if.end, !dbg !6010

if.else:                                          ; preds = %entry
  %call5 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %save_area) #7, !dbg !6011
  %sub = sub nsw i32 %high_to_save, %low_to_save, !dbg !6012
  %add = add nsw i32 %sub, 1, !dbg !6012
  %conv6 = sext i32 %add to i64, !dbg !6012
  %call7 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv6) #7, !dbg !6012
  %call8 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call2, %struct.rtx_def* %call5, %struct.rtx_def* %call7, i32 2) #7, !dbg !6013
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6014
}

declare dso_local %struct.rtx_def* @emit_block_move(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @update_nonlocal_goto_save_area() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @fixup_tail_calls() local_unnamed_addr #5 !dbg !6015 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #7, !dbg !6024
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6019, metadata !DIExpression()), !dbg !6025
  br label %for.cond, !dbg !6026

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0 = phi %struct.rtx_def* [ %call, %entry ], [ %4, %for.inc ], !dbg !6027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6019, metadata !DIExpression()), !dbg !6025
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6028
  br i1 %tobool, label %for.end, label %for.body, !dbg !6028

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6029
  %bf.load = load i32, i32* %0, align 8, !dbg !6029
  %bf.clear = and i32 %bf.load, 65535, !dbg !6029
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !6029
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6031

land.lhs.true:                                    ; preds = %for.body
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6032
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6032
  %rt_int = bitcast %union.rtunion_def* %1 to i32*, !dbg !6032
  %2 = load i32, i32* %rt_int, align 8, !dbg !6032
  %cmp1 = icmp eq i32 %2, 4, !dbg !6033
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !6034

if.end:                                           ; preds = %land.lhs.true, %for.body
  %call2 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn.0, i32 3, %struct.rtx_def* null) #7, !dbg !6035
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !6020, metadata !DIExpression()), !dbg !6036
  %tobool3 = icmp eq %struct.rtx_def* %call2, null, !dbg !6037
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6039

if.then4:                                         ; preds = %if.end
  tail call void @remove_note(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* nonnull %call2) #7, !dbg !6040
  br label %if.end5, !dbg !6040

if.end5:                                          ; preds = %if.end, %if.then4
  %call6 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn.0, i32 3, %struct.rtx_def* null) #7, !dbg !6041
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !6020, metadata !DIExpression()), !dbg !6036
  %tobool7 = icmp eq %struct.rtx_def* %call6, null, !dbg !6042
  br i1 %tobool7, label %cleanup, label %cond.true, !dbg !6042

cond.true:                                        ; preds = %if.end5
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3207, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6042
  br label %cleanup, !dbg !6042

cleanup:                                          ; preds = %if.end5, %cond.true, %land.lhs.true
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true ], [ true, %if.end5 ], [ true, %cond.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6043
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6043
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6043
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6019, metadata !DIExpression()), !dbg !6025
  br label %for.cond, !dbg !6044, !llvm.loop !6045

for.end:                                          ; preds = %for.cond, %cleanup
  ret void, !dbg !6047
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @emit_library_call(%struct.rtx_def* %orgfun, i32 %fn_type, i32 %outmode, i32 %nargs, ...) local_unnamed_addr #5 !dbg !6048 {
entry:
  %p = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orgfun, metadata !6052, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.value(metadata i32 %fn_type, metadata !6053, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.value(metadata i32 %outmode, metadata !6054, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !6055, metadata !DIExpression()), !dbg !6063
  %0 = bitcast [1 x %struct.__va_list_tag]* %p to i8*, !dbg !6064
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !6064
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %p, metadata !6056, metadata !DIExpression()), !dbg !6065
  call void @llvm.va_start(i8* %0), !dbg !6066
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, !dbg !6067
  %call = call fastcc %struct.rtx_def* @emit_library_call_value_1(i32 0, %struct.rtx_def* %orgfun, %struct.rtx_def* null, i32 %fn_type, i32 %outmode, i32 %nargs, %struct.__va_list_tag* nonnull %arraydecay2) #8, !dbg !6068
  call void @llvm.va_end(i8* nonnull %0), !dbg !6069
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !6070
  ret void, !dbg !6070
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_library_call_value_1(i32 %retval1, %struct.rtx_def* %orgfun, %struct.rtx_def* %value, i32 %fn_type, i32 %outmode, i32 %nargs, %struct.__va_list_tag* %p) unnamed_addr #5 !dbg !2111 {
entry:
  %args_size = alloca %struct.args_size, align 8
  %original_args_size = alloca %struct.args_size, align 8
  %args_so_far = alloca %struct.ix86_args, align 4
  %call_fusage = alloca %struct.rtx_def*, align 8
  %low_to_save = alloca i32, align 4
  %high_to_save = alloca i32, align 4
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %retval1, metadata !2122, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orgfun, metadata !2123, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value, metadata !2124, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %fn_type, metadata !2125, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %outmode, metadata !2126, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !2127, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %p, metadata !2128, metadata !DIExpression()), !dbg !6071
  %0 = bitcast %struct.args_size* %args_size to i8*, !dbg !6072
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !6072
  %1 = bitcast %struct.args_size* %original_args_size to i8*, !dbg !6073
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #6, !dbg !6073
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2133, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2134, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2137, metadata !DIExpression()), !dbg !6071
  %2 = bitcast %struct.ix86_args* %args_so_far to i8*, !dbg !6074
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #6, !dbg !6074
  %3 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6075
  call void @llvm.dbg.value(metadata i32 %3, metadata !2159, metadata !DIExpression()), !dbg !6071
  %4 = bitcast %struct.rtx_def** %call_fusage to i8*, !dbg !6076
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !6076
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2160, metadata !DIExpression()), !dbg !6071
  store %struct.rtx_def* null, %struct.rtx_def** %call_fusage, align 8, !dbg !6077
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2161, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 0, metadata !2163, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 0, metadata !2164, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 0, metadata !2166, metadata !DIExpression()), !dbg !6071
  %5 = bitcast i32* %low_to_save to i8*, !dbg !6078
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6, !dbg !6078
  call void @llvm.dbg.value(metadata i32 0, metadata !2170, metadata !DIExpression()), !dbg !6071
  store i32 0, i32* %low_to_save, align 4, !dbg !6079
  %6 = bitcast i32* %high_to_save to i8*, !dbg !6078
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !6078
  call void @llvm.dbg.value(metadata i32 0, metadata !2171, metadata !DIExpression()), !dbg !6071
  store i32 0, i32* %high_to_save, align 4, !dbg !6080
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !2172, metadata !DIExpression()), !dbg !6071
  %7 = load i32, i32* @highest_outgoing_arg_in_use, align 4, !dbg !6081
  call void @llvm.dbg.value(metadata i32 %7, metadata !2173, metadata !DIExpression()), !dbg !6071
  %8 = load i8*, i8** @stack_usage_map, align 8, !dbg !6082
  call void @llvm.dbg.value(metadata i8* %8, metadata !2174, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i8* null, metadata !2175, metadata !DIExpression()), !dbg !6071
  %9 = load %struct.rtx_def* (%union.tree_node*, i32)*, %struct.rtx_def* (%union.tree_node*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 2), align 8, !dbg !6083
  %call = tail call %struct.rtx_def* %9(%union.tree_node* null, i32 0) #7, !dbg !6084
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2176, metadata !DIExpression()), !dbg !6071
  %call2 = tail call i32 @ix86_reg_parm_stack_space(%union.tree_node* null) #7, !dbg !6085
  call void @llvm.dbg.value(metadata i32 %call2, metadata !2166, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 64, metadata !2165, metadata !DIExpression()), !dbg !6071
  switch i32 %fn_type, label %sw.epilog [
    i32 5, label %sw.bb8
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb5
    i32 4, label %sw.bb7
  ], !dbg !6086

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.value(metadata i32 65, metadata !2165, metadata !DIExpression()), !dbg !6071
  br label %sw.epilog, !dbg !6087

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 66, metadata !2165, metadata !DIExpression()), !dbg !6071
  br label %sw.epilog, !dbg !6089

sw.bb5:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 72, metadata !2165, metadata !DIExpression()), !dbg !6071
  br label %sw.epilog, !dbg !6090

sw.bb7:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 8, metadata !2165, metadata !DIExpression()), !dbg !6071
  br label %sw.epilog, !dbg !6091

sw.bb8:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 128, metadata !2165, metadata !DIExpression()), !dbg !6071
  br label %sw.epilog, !dbg !6092

sw.epilog:                                        ; preds = %entry, %sw.bb8, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb
  %flags.0 = phi i32 [ 64, %entry ], [ 128, %sw.bb8 ], [ 8, %sw.bb7 ], [ 72, %sw.bb5 ], [ 66, %sw.bb3 ], [ 65, %sw.bb ], !dbg !6071
  call void @llvm.dbg.value(metadata i32 %flags.0, metadata !2165, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orgfun, metadata !2132, metadata !DIExpression()), !dbg !6071
  %10 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), align 8, !dbg !6093
  %11 = load i32, i32* @ix86_preferred_stack_boundary, align 4, !dbg !6095
  %cmp = icmp ult i32 %10, %11, !dbg !6096
  br i1 %cmp, label %if.then, label %if.end, !dbg !6097

if.then:                                          ; preds = %sw.epilog
  store i32 %11, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 23), align 8, !dbg !6098
  br label %if.end, !dbg !6099

if.end:                                           ; preds = %if.then, %sw.epilog
  %cmp9 = icmp eq i32 %outmode, 0, !dbg !6100
  br i1 %cmp9, label %if.else23, label %if.then10, !dbg !6102

if.then10:                                        ; preds = %if.end
  %12 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !6103
  %call11 = tail call %union.tree_node* %12(i32 %outmode, i32 0) #7, !dbg !6105
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !2169, metadata !DIExpression()), !dbg !6071
  %call12 = tail call i32 @aggregate_value_p(%union.tree_node* %call11, %union.tree_node* null) #7, !dbg !6106
  %tobool = icmp eq i32 %call12, 0, !dbg !6106
  br i1 %tobool, label %if.end24, label %if.then13, !dbg !6108

if.then13:                                        ; preds = %if.then10
  %idxprom = zext i32 %outmode to i64, !dbg !6109
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6109
  %13 = load i8, i8* %arrayidx, align 1, !dbg !6109
  call void @llvm.dbg.value(metadata i8 %13, metadata !2164, metadata !DIExpression()), !dbg !6071
  %cmp15 = icmp eq %struct.rtx_def* %value, null, !dbg !6111
  br i1 %cmp15, label %if.else, label %land.lhs.true, !dbg !6113

land.lhs.true:                                    ; preds = %if.then13
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value, i64 0, i32 0, !dbg !6114
  %bf.load = load i32, i32* %14, align 8, !dbg !6114
  %bf.clear = and i32 %bf.load, 65535, !dbg !6114
  %cmp17 = icmp eq i32 %bf.clear, 43, !dbg !6114
  br i1 %cmp17, label %if.end21, label %if.else, !dbg !6115

if.else:                                          ; preds = %if.then13, %land.lhs.true
  %call20 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %call11, i32 0, i32 1, i32 1) #7, !dbg !6116
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !2161, metadata !DIExpression()), !dbg !6071
  br label %if.end21

if.end21:                                         ; preds = %land.lhs.true, %if.else
  %mem_value.0 = phi %struct.rtx_def* [ %call20, %if.else ], [ %value, %land.lhs.true ], !dbg !6117
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem_value.0, metadata !2161, metadata !DIExpression()), !dbg !6071
  %and = and i32 %flags.0, 200, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %and, metadata !2165, metadata !DIExpression()), !dbg !6071
  %phitmp = zext i8 %13 to i64, !dbg !6119
  br label %if.end24, !dbg !6119

if.else23:                                        ; preds = %if.end
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6120
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !2169, metadata !DIExpression()), !dbg !6071
  br label %if.end24

if.end24:                                         ; preds = %if.then10, %if.end21, %if.else23
  %tfom.0 = phi %union.tree_node* [ %15, %if.else23 ], [ %call11, %if.end21 ], [ %call11, %if.then10 ], !dbg !6121
  %flags.2 = phi i32 [ %flags.0, %if.else23 ], [ %and, %if.end21 ], [ %flags.0, %if.then10 ], !dbg !6071
  %struct_value_size.1 = phi i64 [ 0, %if.else23 ], [ %phitmp, %if.end21 ], [ 0, %if.then10 ]
  %mem_value.2 = phi %struct.rtx_def* [ null, %if.else23 ], [ %mem_value.0, %if.end21 ], [ null, %if.then10 ], !dbg !6071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem_value.2, metadata !2161, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %flags.2, metadata !2165, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %union.tree_node* %tfom.0, metadata !2169, metadata !DIExpression()), !dbg !6071
  %add = add nsw i32 %nargs, 1, !dbg !6122
  %conv25 = sext i32 %add to i64, !dbg !6122
  %16 = alloca %struct.arg, i64 %conv25, align 16, !dbg !6122
  call void @llvm.dbg.value(metadata %struct.arg* %16, metadata !2158, metadata !DIExpression()), !dbg !6071
  %17 = bitcast %struct.arg* %16 to i8*, !dbg !6123
  %mul28 = mul nsw i64 %conv25, 112, !dbg !6124
  %call29 = call i8* @memset(i8* nonnull %17, i32 0, i64 %mul28) #7, !dbg !6125
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @init_cumulative_args(%struct.ix86_args* nonnull %args_so_far, %union.tree_node* null, %struct.rtx_def* %orgfun, %union.tree_node* null) #7, !dbg !6126
  %constant = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 0, !dbg !6127
  store i64 0, i64* %constant, align 8, !dbg !6128
  %var = getelementptr inbounds %struct.args_size, %struct.args_size* %args_size, i64 0, i32 1, !dbg !6129
  store %union.tree_node* null, %union.tree_node** %var, align 8, !dbg !6130
  call void @llvm.dbg.value(metadata i32 0, metadata !2136, metadata !DIExpression()), !dbg !6071
  call void @push_temp_slots() #7, !dbg !6131
  %tobool30 = icmp eq %struct.rtx_def* %mem_value.2, null, !dbg !6132
  %cmp32 = icmp ne %struct.rtx_def* %call, null, !dbg !6133
  %or.cond.not = or i1 %cmp32, %tobool30, !dbg !6134
  br i1 %or.cond.not, label %if.end104, label %if.then36, !dbg !6134

if.then36:                                        ; preds = %if.end24
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem_value.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6135
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !6135
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6135
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !2177, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i32 %add, metadata !2127, metadata !DIExpression()), !dbg !6071
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 0, !dbg !6137
  %bf.load39 = load i32, i32* %19, align 8, !dbg !6137
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !6137
  %cmp41 = icmp eq i32 %bf.clear40, 37, !dbg !6137
  br i1 %cmp41, label %if.end61, label %land.lhs.true43, !dbg !6139

land.lhs.true43:                                  ; preds = %if.then36
  %cmp46 = icmp eq i32 %bf.clear40, 43, !dbg !6140
  br i1 %cmp46, label %if.end61, label %land.lhs.true48, !dbg !6141

land.lhs.true48:                                  ; preds = %land.lhs.true43
  %idxprom51 = zext i32 %bf.clear40 to i64, !dbg !6142
  %arrayidx52 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom51, !dbg !6142
  %20 = load i32, i32* %arrayidx52, align 4, !dbg !6142
  %cmp53 = icmp eq i32 %20, 9, !dbg !6142
  br i1 %cmp53, label %land.lhs.true55, label %if.then59, !dbg !6143

land.lhs.true55:                                  ; preds = %land.lhs.true48
  %call56 = call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %18) #7, !dbg !6144
  %tobool58 = icmp eq i8 %call56, 0, !dbg !6144
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !6145

if.then59:                                        ; preds = %land.lhs.true55, %land.lhs.true48
  %call60 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %18, %struct.rtx_def* null) #7, !dbg !6146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call60, metadata !2177, metadata !DIExpression()), !dbg !6136
  br label %if.end61, !dbg !6147

if.end61:                                         ; preds = %land.lhs.true55, %if.then59, %land.lhs.true43, %if.then36
  %addr.0 = phi %struct.rtx_def* [ %18, %if.then36 ], [ %18, %land.lhs.true43 ], [ %18, %land.lhs.true55 ], [ %call60, %if.then59 ], !dbg !6136
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0, metadata !2177, metadata !DIExpression()), !dbg !6136
  %value64 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 0, i32 0, !dbg !6148
  store %struct.rtx_def* %addr.0, %struct.rtx_def** %value64, align 16, !dbg !6149
  %mode = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 0, i32 1, !dbg !6150
  store i32 16, i32* %mode, align 8, !dbg !6151
  %partial = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 0, i32 3, !dbg !6152
  store i32 0, i32* %partial, align 8, !dbg !6153
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call69 = call %struct.rtx_def* @function_arg(%struct.ix86_args* nonnull %args_so_far, i32 16, %union.tree_node* null, i32 1) #7, !dbg !6154
  %reg = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 0, i32 2, !dbg !6155
  store %struct.rtx_def* %call69, %struct.rtx_def** %reg, align 16, !dbg !6156
  %21 = load i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 13), align 8, !dbg !6157
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call72 = call i32 %21(%struct.ix86_args* nonnull %args_so_far, i32 16, %union.tree_node* null, i8 zeroext 1) #7, !dbg !6157
  %cmp73 = icmp eq i32 %call72, 0, !dbg !6157
  br i1 %cmp73, label %cond.end, label %cond.true, !dbg !6157

cond.true:                                        ; preds = %if.end61
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3422, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6157
  br label %cond.end, !dbg !6157

cond.end:                                         ; preds = %if.end61, %cond.true
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 16, !dbg !6158
  %cmp78 = icmp ne %struct.rtx_def* %22, null, !dbg !6159
  %conv79 = zext i1 %cmp78 to i32, !dbg !6159
  %locate = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 0, i32 4, !dbg !6160
  call void @llvm.dbg.value(metadata %struct.args_size* %args_size, metadata !2129, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @locate_and_pad_parm(i32 16, %union.tree_node* null, i32 %conv79, i32 0, %union.tree_node* null, %struct.args_size* nonnull %args_size, %struct.locate_and_pad_arg_data* nonnull %locate) #7, !dbg !6161
  %23 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 16, !dbg !6162
  %cmp85 = icmp eq %struct.rtx_def* %23, null, !dbg !6164
  br i1 %cmp85, label %if.then95, label %lor.lhs.false, !dbg !6165

lor.lhs.false:                                    ; preds = %cond.end
  %24 = load i32, i32* %partial, align 8, !dbg !6166
  %cmp90 = icmp ne i32 %24, 0, !dbg !6167
  %cmp93 = icmp sgt i32 %call2, 0, !dbg !6168
  %or.cond2 = or i1 %cmp90, %cmp93, !dbg !6169
  br i1 %or.cond2, label %if.then95, label %if.end102, !dbg !6169

if.then95:                                        ; preds = %lor.lhs.false, %cond.end
  %constant99 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 0, i32 4, i32 0, i32 0, !dbg !6170
  %25 = load i64, i64* %constant99, align 16, !dbg !6170
  %26 = load i64, i64* %constant, align 8, !dbg !6171
  %add101 = add nsw i64 %26, %25, !dbg !6171
  store i64 %add101, i64* %constant, align 8, !dbg !6171
  br label %if.end102, !dbg !6172

if.end102:                                        ; preds = %lor.lhs.false, %if.then95
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @function_arg_advance(%struct.ix86_args* nonnull %args_so_far, i32 16, %union.tree_node* null, i32 1) #7, !dbg !6173
  call void @llvm.dbg.value(metadata i32 1, metadata !2136, metadata !DIExpression()), !dbg !6071
  br label %if.end104, !dbg !6174

if.end104:                                        ; preds = %if.end24, %if.end102
  %count.0 = phi i64 [ 1, %if.end102 ], [ 0, %if.end24 ]
  %nargs.addr.0 = phi i32 [ %add, %if.end102 ], [ %nargs, %if.end24 ]
  call void @llvm.dbg.value(metadata i32 %nargs.addr.0, metadata !2127, metadata !DIExpression()), !dbg !6071
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %p, i64 0, i32 0, !dbg !6175
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %p, i64 0, i32 2, !dbg !6175
  %27 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %p, i64 0, i32 3, !dbg !6175
  %cmp242 = icmp sgt i32 %call2, 0, !dbg !6176
  %28 = sext i32 %nargs.addr.0 to i64, !dbg !6178
  br label %for.cond, !dbg !6178

for.cond:                                         ; preds = %if.end252, %if.end104
  %indvars.iv36 = phi i64 [ %indvars.iv.next37, %if.end252 ], [ %count.0, %if.end104 ], !dbg !6071
  %flags.3 = phi i32 [ %flags.5, %if.end252 ], [ %flags.2, %if.end104 ], !dbg !6071
  call void @llvm.dbg.value(metadata i64 %indvars.iv36, metadata !2136, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %flags.3, metadata !2165, metadata !DIExpression()), !dbg !6071
  %cmp105 = icmp slt i64 %indvars.iv36, %28, !dbg !6179
  br i1 %cmp105, label %for.body, label %for.end, !dbg !6180

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !6181
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !6181
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !6181

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %27, align 8, !dbg !6181
  %29 = sext i32 %gp_offset to i64, !dbg !6181
  %30 = getelementptr i8, i8* %reg_save_area, i64 %29, !dbg !6181
  %31 = add i32 %gp_offset, 8, !dbg !6181
  store i32 %31, i32* %gp_offset_p, align 8, !dbg !6181
  br label %vaarg.end, !dbg !6181

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !6181
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !6181
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !6181
  br label %vaarg.end, !dbg !6181

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %gp_offset109 = phi i32 [ %31, %vaarg.in_reg ], [ %gp_offset, %vaarg.in_mem ], !dbg !6182
  %vaarg.addr.in = phi i8* [ %30, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to %struct.rtx_def**, !dbg !6181
  %32 = load %struct.rtx_def*, %struct.rtx_def** %vaarg.addr, align 8, !dbg !6181
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !2180, metadata !DIExpression()), !dbg !6175
  %fits_in_gp110 = icmp ult i32 %gp_offset109, 41, !dbg !6182
  br i1 %fits_in_gp110, label %vaarg.in_reg111, label %vaarg.in_mem113, !dbg !6182

vaarg.in_reg111:                                  ; preds = %vaarg.end
  %reg_save_area112 = load i8*, i8** %27, align 8, !dbg !6182
  %33 = sext i32 %gp_offset109 to i64, !dbg !6182
  %34 = getelementptr i8, i8* %reg_save_area112, i64 %33, !dbg !6182
  %35 = add i32 %gp_offset109, 8, !dbg !6182
  store i32 %35, i32* %gp_offset_p, align 8, !dbg !6182
  br label %vaarg.end117, !dbg !6182

vaarg.in_mem113:                                  ; preds = %vaarg.end
  %overflow_arg_area115 = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !6182
  %overflow_arg_area.next116 = getelementptr i8, i8* %overflow_arg_area115, i64 8, !dbg !6182
  store i8* %overflow_arg_area.next116, i8** %overflow_arg_area_p, align 8, !dbg !6182
  br label %vaarg.end117, !dbg !6182

vaarg.end117:                                     ; preds = %vaarg.in_mem113, %vaarg.in_reg111
  %vaarg.addr118.in = phi i8* [ %34, %vaarg.in_reg111 ], [ %overflow_arg_area115, %vaarg.in_mem113 ]
  %vaarg.addr118 = bitcast i8* %vaarg.addr118.in to i32*, !dbg !6182
  %36 = load i32, i32* %vaarg.addr118, align 4, !dbg !6182
  call void @llvm.dbg.value(metadata i32 %36, metadata !2184, metadata !DIExpression()), !dbg !6175
  %cmp119 = icmp eq i32 %36, 1, !dbg !6183
  br i1 %cmp119, label %cond.true132, label %land.lhs.true121, !dbg !6183

land.lhs.true121:                                 ; preds = %vaarg.end117
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 0, !dbg !6183
  %bf.load122 = load i32, i32* %37, align 8, !dbg !6183
  %bf.lshr = lshr i32 %bf.load122, 16, !dbg !6183
  %bf.clear123 = and i32 %bf.lshr, 255, !dbg !6183
  %cmp124 = icmp eq i32 %bf.clear123, %36, !dbg !6183
  br i1 %cmp124, label %cond.end134, label %lor.lhs.false126, !dbg !6183

lor.lhs.false126:                                 ; preds = %land.lhs.true121
  %bf.clear129 = and i32 %bf.load122, 16711680, !dbg !6183
  %cmp130 = icmp eq i32 %bf.clear129, 0, !dbg !6183
  br i1 %cmp130, label %cond.end134, label %cond.true132, !dbg !6183

cond.true132:                                     ; preds = %vaarg.end117, %lor.lhs.false126
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3449, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6183
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 0, !dbg !6184
  %bf.load136.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !6186
  br label %cond.end134, !dbg !6183

cond.end134:                                      ; preds = %land.lhs.true121, %lor.lhs.false126, %cond.true132
  %bf.load146 = phi i32 [ %bf.load122, %land.lhs.true121 ], [ %bf.load122, %lor.lhs.false126 ], [ %bf.load136.pre, %cond.true132 ], !dbg !6186
  %bf.clear137 = and i32 %bf.load146, 65535, !dbg !6186
  %cmp138 = icmp eq i32 %bf.clear137, 37, !dbg !6186
  br i1 %cmp138, label %if.end158, label %land.lhs.true140, !dbg !6187

land.lhs.true140:                                 ; preds = %cond.end134
  %cmp143 = icmp eq i32 %bf.clear137, 43, !dbg !6188
  br i1 %cmp143, label %if.end158, label %land.lhs.true145, !dbg !6189

land.lhs.true145:                                 ; preds = %land.lhs.true140
  %idxprom148 = zext i32 %bf.clear137 to i64, !dbg !6190
  %arrayidx149 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom148, !dbg !6190
  %38 = load i32, i32* %arrayidx149, align 4, !dbg !6190
  %cmp150 = icmp eq i32 %38, 9, !dbg !6190
  br i1 %cmp150, label %land.lhs.true152, label %if.then156, !dbg !6191

land.lhs.true152:                                 ; preds = %land.lhs.true145
  %call153 = call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %32) #7, !dbg !6192
  %tobool155 = icmp eq i8 %call153, 0, !dbg !6192
  br i1 %tobool155, label %if.then156, label %if.end158, !dbg !6193

if.then156:                                       ; preds = %land.lhs.true152, %land.lhs.true145
  %call157 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %32, %struct.rtx_def* null) #7, !dbg !6194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call157, metadata !2180, metadata !DIExpression()), !dbg !6175
  br label %if.end158, !dbg !6195

if.end158:                                        ; preds = %land.lhs.true152, %if.then156, %land.lhs.true140, %cond.end134
  %val.0 = phi %struct.rtx_def* [ %32, %cond.end134 ], [ %32, %land.lhs.true140 ], [ %32, %land.lhs.true152 ], [ %call157, %if.then156 ], !dbg !6175
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.0, metadata !2180, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call159 = call zeroext i8 @pass_by_reference(%struct.ix86_args* nonnull %args_so_far, i32 %36, %union.tree_node* null, i8 zeroext 1) #7, !dbg !6196
  %tobool160 = icmp eq i8 %call159, 0, !dbg !6196
  br i1 %tobool160, label %if.end194, label %if.then161, !dbg !6197

if.then161:                                       ; preds = %if.end158
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call162 = call zeroext i8 @reference_callee_copied(%struct.ix86_args* nonnull %args_so_far, i32 %36, %union.tree_node* null, i8 zeroext 1) #7, !dbg !6198
  %tobool163 = icmp eq i8 %call162, 0, !dbg !6199
  call void @llvm.dbg.value(metadata i1 %tobool163, metadata !2188, metadata !DIExpression()), !dbg !6200
  %and164 = and i32 %flags.3, 1, !dbg !6201
  %tobool165 = icmp eq i32 %and164, 0, !dbg !6201
  %and167 = and i32 %flags.3, -4, !dbg !6203
  %or168 = or i32 %and167, 2, !dbg !6203
  %flags.4 = select i1 %tobool165, i32 %flags.3, i32 %or168, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %flags.4, metadata !2165, metadata !DIExpression()), !dbg !6071
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val.0, i64 0, i32 0, !dbg !6204
  %bf.load170 = load i32, i32* %39, align 8, !dbg !6204
  %bf.clear171 = and i32 %bf.load170, 65535, !dbg !6204
  %cmp172 = icmp ne i32 %bf.clear171, 43, !dbg !6204
  %or.cond3 = or i1 %cmp172, %tobool163, !dbg !6206
  br i1 %or.cond3, label %if.else177, label %if.end181, !dbg !6206

if.else177:                                       ; preds = %if.then161
  %40 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !6207
  %call178 = call %union.tree_node* %40(i32 %36, i32 0) #7, !dbg !6209
  %call179 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call178, i32 0, i32 1, i32 1) #7, !dbg !6210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call179, metadata !2185, metadata !DIExpression()), !dbg !6200
  %call180 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call179, %struct.rtx_def* %val.0) #7, !dbg !6211
  br label %if.end181

if.end181:                                        ; preds = %if.then161, %if.else177
  %slot.0 = phi %struct.rtx_def* [ %call179, %if.else177 ], [ %val.0, %if.then161 ], !dbg !6212
  call void @llvm.dbg.value(metadata %struct.rtx_def* %slot.0, metadata !2185, metadata !DIExpression()), !dbg !6200
  %call182 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 0, %struct.rtx_def* %slot.0) #7, !dbg !6213
  %41 = load %struct.rtx_def*, %struct.rtx_def** %call_fusage, align 8, !dbg !6213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %41, metadata !2160, metadata !DIExpression()), !dbg !6071
  %call183 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call182, %struct.rtx_def* %41) #7, !dbg !6213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call183, metadata !2160, metadata !DIExpression()), !dbg !6071
  store %struct.rtx_def* %call183, %struct.rtx_def** %call_fusage, align 8, !dbg !6214
  br i1 %tobool163, label %if.then185, label %if.end188, !dbg !6215

if.then185:                                       ; preds = %if.end181
  %call186 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %slot.0) #7, !dbg !6216
  %42 = load %struct.rtx_def*, %struct.rtx_def** %call_fusage, align 8, !dbg !6216
  call void @llvm.dbg.value(metadata %struct.rtx_def* %42, metadata !2160, metadata !DIExpression()), !dbg !6071
  %call187 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call186, %struct.rtx_def* %42) #7, !dbg !6216
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call187, metadata !2160, metadata !DIExpression()), !dbg !6071
  store %struct.rtx_def* %call187, %struct.rtx_def** %call_fusage, align 8, !dbg !6218
  br label %if.end188, !dbg !6219

if.end188:                                        ; preds = %if.then185, %if.end181
  call void @llvm.dbg.value(metadata i32 16, metadata !2184, metadata !DIExpression()), !dbg !6175
  %arrayidx191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %slot.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6220
  %rt_rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**, !dbg !6220
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx192, align 8, !dbg !6220
  %call193 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %43, %struct.rtx_def* null) #7, !dbg !6221
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call193, metadata !2180, metadata !DIExpression()), !dbg !6175
  br label %if.end194, !dbg !6222

if.end194:                                        ; preds = %if.end158, %if.end188
  %flags.5 = phi i32 [ %flags.4, %if.end188 ], [ %flags.3, %if.end158 ], !dbg !6071
  %val.1 = phi %struct.rtx_def* [ %call193, %if.end188 ], [ %val.0, %if.end158 ], !dbg !6175
  %mode107.0 = phi i32 [ 16, %if.end188 ], [ %36, %if.end158 ], !dbg !6175
  call void @llvm.dbg.value(metadata i32 %mode107.0, metadata !2184, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.1, metadata !2180, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i32 %flags.5, metadata !2165, metadata !DIExpression()), !dbg !6071
  %value197 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv36, i32 0, !dbg !6223
  store %struct.rtx_def* %val.1, %struct.rtx_def** %value197, align 16, !dbg !6224
  %mode200 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv36, i32 1, !dbg !6225
  store i32 %mode107.0, i32* %mode200, align 8, !dbg !6226
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call201 = call %struct.rtx_def* @function_arg(%struct.ix86_args* nonnull %args_so_far, i32 %mode107.0, %union.tree_node* null, i32 1) #7, !dbg !6227
  %reg204 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv36, i32 2, !dbg !6228
  store %struct.rtx_def* %call201, %struct.rtx_def** %reg204, align 16, !dbg !6229
  %44 = load i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 13), align 8, !dbg !6230
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call205 = call i32 %44(%struct.ix86_args* nonnull %args_so_far, i32 %mode107.0, %union.tree_node* null, i8 zeroext 1) #7, !dbg !6231
  %partial208 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv36, i32 3, !dbg !6232
  store i32 %call205, i32* %partial208, align 8, !dbg !6233
  %45 = load %struct.rtx_def*, %struct.rtx_def** %reg204, align 16, !dbg !6234
  %cmp212 = icmp ne %struct.rtx_def* %45, null, !dbg !6235
  %conv213 = zext i1 %cmp212 to i32, !dbg !6235
  %locate219 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv36, i32 4, !dbg !6236
  call void @llvm.dbg.value(metadata %struct.args_size* %args_size, metadata !2129, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @locate_and_pad_parm(i32 %mode107.0, %union.tree_node* null, i32 %conv213, i32 %call205, %union.tree_node* null, %struct.args_size* nonnull %args_size, %struct.locate_and_pad_arg_data* nonnull %locate219) #7, !dbg !6237
  %var224 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv36, i32 4, i32 0, i32 1, !dbg !6238
  %46 = load %union.tree_node*, %union.tree_node** %var224, align 8, !dbg !6238
  %tobool225 = icmp eq %union.tree_node* %46, null, !dbg !6238
  br i1 %tobool225, label %cond.end228, label %cond.true226, !dbg !6238

cond.true226:                                     ; preds = %if.end194
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3509, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6238
  br label %cond.end228, !dbg !6238

cond.end228:                                      ; preds = %if.end194, %cond.true226
  %47 = load %struct.rtx_def*, %struct.rtx_def** %reg204, align 16, !dbg !6239
  %cmp233 = icmp eq %struct.rtx_def* %47, null, !dbg !6240
  br i1 %cmp233, label %if.then244, label %lor.lhs.false235, !dbg !6241

lor.lhs.false235:                                 ; preds = %cond.end228
  %48 = load i32, i32* %partial208, align 8, !dbg !6242
  %cmp239 = icmp ne i32 %48, 0, !dbg !6243
  %or.cond4 = or i1 %cmp239, %cmp242, !dbg !6244
  br i1 %or.cond4, label %if.then244, label %if.end252, !dbg !6244

if.then244:                                       ; preds = %lor.lhs.false235, %cond.end228
  %constant249 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv36, i32 4, i32 0, i32 0, !dbg !6245
  %49 = load i64, i64* %constant249, align 16, !dbg !6245
  %50 = load i64, i64* %constant, align 8, !dbg !6246
  %add251 = add nsw i64 %50, %49, !dbg !6246
  store i64 %add251, i64* %constant, align 8, !dbg !6246
  br label %if.end252, !dbg !6247

if.end252:                                        ; preds = %lor.lhs.false235, %if.then244
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @function_arg_advance(%struct.ix86_args* nonnull %args_so_far, i32 %mode107.0, %union.tree_node* null, i32 1) #7, !dbg !6248
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1, !dbg !6249
  call void @llvm.dbg.value(metadata i32 undef, metadata !2136, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6071
  br label %for.cond, !dbg !6250, !llvm.loop !6251

for.end:                                          ; preds = %for.cond
  %flags.3.lcssa = phi i32 [ %flags.3, %for.cond ], !dbg !6071
  call void @llvm.dbg.value(metadata i32 %flags.3.lcssa, metadata !2165, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %flags.3.lcssa, metadata !2165, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %flags.3.lcssa, metadata !2165, metadata !DIExpression()), !dbg !6071
  call void @assemble_external_libcall(%struct.rtx_def* %orgfun) #7, !dbg !6253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %0, i64 16, i1 false), !dbg !6254
  %51 = load i64, i64* %constant, align 8, !dbg !6255
  %52 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !6256
  %conv255 = sext i32 %52 to i64, !dbg !6256
  %add256 = add nsw i64 %51, %conv255, !dbg !6257
  %53 = load i32, i32* @ix86_preferred_stack_boundary, align 4, !dbg !6258
  %div = lshr i32 %53, 3, !dbg !6258
  %conv257 = zext i32 %div to i64, !dbg !6258
  %add258 = add nsw i64 %add256, %conv257, !dbg !6259
  %sub = add nsw i64 %add258, -1, !dbg !6260
  %54 = srem i64 %sub, %conv257, !dbg !6261
  %mul264 = sub i64 %sub, %54, !dbg !6261
  %sub266 = sub nsw i64 %mul264, %conv255, !dbg !6262
  %conv269 = sext i32 %call2 to i64, !dbg !6263
  %cmp270 = icmp sgt i64 %sub266, %conv269, !dbg !6263
  %cond277 = select i1 %cmp270, i64 %sub266, i64 %conv269, !dbg !6263
  store i64 %cond277, i64* %constant, align 8, !dbg !6264
  %call284 = call i32 @ix86_function_type_abi(%union.tree_node* null) #7, !dbg !6265
  %cmp285 = icmp eq i32 %call284, 1, !dbg !6265
  br i1 %cmp285, label %for.end.if.end291_crit_edge, label %if.then287, !dbg !6267

for.end.if.end291_crit_edge:                      ; preds = %for.end
  %.pre = load i64, i64* %constant, align 8, !dbg !6268
  br label %if.end291, !dbg !6267

if.then287:                                       ; preds = %for.end
  %55 = load i64, i64* %constant, align 8, !dbg !6270
  %sub290 = sub nsw i64 %55, %conv269, !dbg !6270
  store i64 %sub290, i64* %constant, align 8, !dbg !6270
  br label %if.end291, !dbg !6271

if.end291:                                        ; preds = %for.end.if.end291_crit_edge, %if.then287
  %56 = phi i64 [ %.pre, %for.end.if.end291_crit_edge ], [ %sub290, %if.then287 ], !dbg !6268
  %57 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 6), align 8, !dbg !6272
  %conv293 = sext i32 %57 to i64, !dbg !6273
  %cmp294 = icmp sgt i64 %56, %conv293, !dbg !6274
  br i1 %cmp294, label %if.then296, label %if.end299, !dbg !6275

if.then296:                                       ; preds = %if.end291
  %conv298 = trunc i64 %56 to i32, !dbg !6276
  store i32 %conv298, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 6), align 8, !dbg !6277
  br label %if.end299, !dbg !6278

if.end299:                                        ; preds = %if.then296, %if.end291
  %58 = load i32, i32* @target_flags, align 4, !dbg !6279
  %and300 = and i32 %58, 4, !dbg !6279
  %cmp301 = icmp eq i32 %and300, 0, !dbg !6279
  br i1 %cmp301, label %lor.lhs.false303, label %if.then307, !dbg !6279

lor.lhs.false303:                                 ; preds = %if.end299
  %call304 = call i32 @ix86_cfun_abi() #7, !dbg !6279
  %cmp305 = icmp eq i32 %call304, 1, !dbg !6279
  br i1 %cmp305, label %lor.lhs.false303.if.then307_crit_edge, label %if.else351, !dbg !6281

lor.lhs.false303.if.then307_crit_edge:            ; preds = %lor.lhs.false303
  %.pre20 = load i64, i64* %constant, align 8, !dbg !6282
  br label %if.then307, !dbg !6281

if.then307:                                       ; preds = %lor.lhs.false303.if.then307_crit_edge, %if.end299
  %59 = phi i64 [ %.pre20, %lor.lhs.false303.if.then307_crit_edge ], [ %56, %if.end299 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 undef, metadata !2167, metadata !DIExpression()), !dbg !6071
  %conv309 = trunc i64 %59 to i32, !dbg !6284
  call void @llvm.dbg.value(metadata i32 %conv309, metadata !2167, metadata !DIExpression()), !dbg !6071
  %call317 = call i32 @ix86_function_type_abi(%union.tree_node* null) #7, !dbg !6285
  %cmp318 = icmp eq i32 %call317, 1, !dbg !6285
  %add321 = select i1 %cmp318, i32 0, i32 %call2, !dbg !6287
  %spec.select = add nsw i32 %add321, %conv309, !dbg !6287
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2167, metadata !DIExpression()), !dbg !6071
  %cmp323 = icmp sgt i32 %7, %spec.select, !dbg !6288
  %cond328 = select i1 %cmp323, i32 %7, i32 %spec.select, !dbg !6288
  store i32 %cond328, i32* @highest_outgoing_arg_in_use, align 4, !dbg !6289
  %conv329 = sext i32 %cond328 to i64, !dbg !6290
  %call331 = call i8* @xmalloc(i64 %conv329) #7, !dbg !6290
  call void @llvm.dbg.value(metadata i8* %call331, metadata !2175, metadata !DIExpression()), !dbg !6071
  store i8* %call331, i8** @stack_usage_map, align 8, !dbg !6291
  %tobool332 = icmp eq i32 %7, 0, !dbg !6292
  br i1 %tobool332, label %if.end336, label %if.then333, !dbg !6294

if.then333:                                       ; preds = %if.then307
  %conv334 = sext i32 %7 to i64, !dbg !6295
  %call335 = call i8* @memcpy(i8* %call331, i8* %8, i64 %conv334) #7, !dbg !6296
  br label %if.end336, !dbg !6296

if.end336:                                        ; preds = %if.then307, %if.then333
  %60 = load i32, i32* @highest_outgoing_arg_in_use, align 4, !dbg !6297
  %cmp337 = icmp eq i32 %60, %7, !dbg !6299
  br i1 %cmp337, label %if.end345, label %if.then339, !dbg !6300

if.then339:                                       ; preds = %if.end336
  %61 = load i8*, i8** @stack_usage_map, align 8, !dbg !6301
  %idxprom340 = sext i32 %7 to i64, !dbg !6301
  %arrayidx341 = getelementptr inbounds i8, i8* %61, i64 %idxprom340, !dbg !6301
  %sub342 = sub nsw i32 %60, %7, !dbg !6302
  %conv343 = sext i32 %sub342 to i64, !dbg !6303
  %call344 = call i8* @memset(i8* %arrayidx341, i32 0, i64 %conv343) #7, !dbg !6304
  br label %if.end345, !dbg !6304

if.end345:                                        ; preds = %if.end336, %if.then339
  call void @llvm.dbg.value(metadata i32 0, metadata !2167, metadata !DIExpression()), !dbg !6071
  %62 = load i32, i32* @virtuals_instantiated, align 4, !dbg !6305
  %tobool346 = icmp eq i32 %62, 0, !dbg !6305
  br i1 %tobool346, label %if.else349, label %if.then347, !dbg !6307

if.then347:                                       ; preds = %if.end345
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !6308
  %call348 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %63, i64 0) #7, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call348, metadata !2137, metadata !DIExpression()), !dbg !6071
  br label %if.end368, !dbg !6310

if.else349:                                       ; preds = %if.end345
  %64 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !6311
  call void @llvm.dbg.value(metadata %struct.rtx_def* %64, metadata !2137, metadata !DIExpression()), !dbg !6071
  br label %if.end368

if.else351:                                       ; preds = %lor.lhs.false303
  %65 = load i32, i32* @target_flags, align 4, !dbg !6312
  %and352 = and i32 %65, 8192, !dbg !6312
  %cmp353 = icmp eq i32 %and352, 0, !dbg !6312
  br i1 %cmp353, label %land.lhs.true355, label %if.then363, !dbg !6312

land.lhs.true355:                                 ; preds = %if.else351
  %and356 = and i32 %65, 4, !dbg !6312
  %cmp357 = icmp eq i32 %and356, 0, !dbg !6312
  br i1 %cmp357, label %lor.lhs.false359, label %if.then363, !dbg !6312

lor.lhs.false359:                                 ; preds = %land.lhs.true355
  %call360 = call i32 @ix86_cfun_abi() #7, !dbg !6312
  %cmp361 = icmp eq i32 %call360, 1, !dbg !6312
  br i1 %cmp361, label %if.then363, label %if.end368, !dbg !6315

if.then363:                                       ; preds = %land.lhs.true355, %lor.lhs.false359, %if.else351
  %66 = load i64, i64* %constant, align 8, !dbg !6316
  %call365 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %66) #7, !dbg !6316
  %call366 = call %struct.rtx_def* @push_block(%struct.rtx_def* %call365, i32 0, i32 0) #7, !dbg !6317
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call366, metadata !2137, metadata !DIExpression()), !dbg !6071
  br label %if.end368, !dbg !6318

if.end368:                                        ; preds = %lor.lhs.false359, %if.then363, %if.then347, %if.else349
  %stack_usage_map_buf.0 = phi i8* [ %call331, %if.else349 ], [ %call331, %if.then347 ], [ null, %if.then363 ], [ null, %lor.lhs.false359 ], !dbg !6071
  %argblock.2 = phi %struct.rtx_def* [ %64, %if.else349 ], [ %call348, %if.then347 ], [ %call366, %if.then363 ], [ null, %lor.lhs.false359 ], !dbg !6319
  call void @llvm.dbg.value(metadata %struct.rtx_def* %argblock.2, metadata !2137, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i8* %stack_usage_map_buf.0, metadata !2175, metadata !DIExpression()), !dbg !6071
  %cmp369 = icmp eq %struct.rtx_def* %argblock.2, null, !dbg !6320
  br i1 %cmp369, label %if.then371, label %if.end376, !dbg !6322

if.then371:                                       ; preds = %if.end368
  %67 = load i64, i64* %constant, align 8, !dbg !6323
  %constant373 = getelementptr inbounds %struct.args_size, %struct.args_size* %original_args_size, i64 0, i32 0, !dbg !6323
  %68 = load i64, i64* %constant373, align 8, !dbg !6323
  %sub374 = sub nsw i64 %67, %68, !dbg !6323
  %call375 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub374) #7, !dbg !6323
  call void @anti_adjust_stack(%struct.rtx_def* %call375) #7, !dbg !6324
  br label %if.end376, !dbg !6324

if.end376:                                        ; preds = %if.then371, %if.end368
  call void @llvm.dbg.value(metadata i32 -1, metadata !2135, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %nargs.addr.0, metadata !2131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6071
  %69 = load i32, i32* @target_flags, align 4, !dbg !6325
  %and378 = and i32 %69, 4, !dbg !6325
  %cmp379 = icmp eq i32 %and378, 0, !dbg !6325
  br i1 %cmp379, label %lor.lhs.false381, label %if.then385, !dbg !6325

lor.lhs.false381:                                 ; preds = %if.end376
  %call382 = call i32 @ix86_cfun_abi() #7, !dbg !6325
  %cmp383 = icmp eq i32 %call382, 1, !dbg !6325
  br i1 %cmp383, label %if.then385, label %if.end387, !dbg !6327

if.then385:                                       ; preds = %if.end376, %lor.lhs.false381
  call void @llvm.dbg.value(metadata i32* %low_to_save, metadata !2170, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @llvm.dbg.value(metadata i32* %high_to_save, metadata !2171, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call386 = call fastcc %struct.rtx_def* @save_fixed_argument_area(i32 %call2, %struct.rtx_def* %argblock.2, i32* nonnull %low_to_save, i32* nonnull %high_to_save) #8, !dbg !6328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call386, metadata !2172, metadata !DIExpression()), !dbg !6071
  br label %if.end387, !dbg !6330

if.end387:                                        ; preds = %if.then385, %lor.lhs.false381
  %save_area.0 = phi %struct.rtx_def* [ %call386, %if.then385 ], [ null, %lor.lhs.false381 ], !dbg !6071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %save_area.0, metadata !2172, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 0, metadata !2136, metadata !DIExpression()), !dbg !6071
  %and576 = and i32 %flags.3.lcssa, 1, !dbg !6331
  %tobool577 = icmp eq i32 %and576, 0, !dbg !6331
  %and579 = and i32 %flags.3.lcssa, 2, !dbg !6331
  %tobool580 = icmp eq i32 %and579, 0, !dbg !6331
  %70 = sext i32 %nargs.addr.0 to i64, !dbg !6332
  br label %for.cond388, !dbg !6332

for.cond388:                                      ; preds = %for.inc610, %if.end387
  %indvars.iv34 = phi i64 [ %indvars.iv.next35, %for.inc610 ], [ %70, %if.end387 ], !dbg !6333
  %count.2 = phi i32 [ %inc611, %for.inc610 ], [ 0, %if.end387 ], !dbg !6333
  %indvars.iv.next35 = add nsw i64 %indvars.iv34, -1, !dbg !6071
  call void @llvm.dbg.value(metadata i32 undef, metadata !2131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %count.2, metadata !2136, metadata !DIExpression()), !dbg !6071
  %cmp389 = icmp slt i32 %count.2, %nargs.addr.0, !dbg !6334
  br i1 %cmp389, label %for.body391, label %for.end613, !dbg !6335

for.body391:                                      ; preds = %for.cond388
  %mode395 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 1, !dbg !6336
  %71 = load i32, i32* %mode395, align 8, !dbg !6336
  call void @llvm.dbg.value(metadata i32 %71, metadata !2189, metadata !DIExpression()), !dbg !6337
  %value399 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 0, !dbg !6338
  %72 = load %struct.rtx_def*, %struct.rtx_def** %value399, align 16, !dbg !6338
  call void @llvm.dbg.value(metadata %struct.rtx_def* %72, metadata !2193, metadata !DIExpression()), !dbg !6337
  %reg403 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 2, !dbg !6339
  %73 = load %struct.rtx_def*, %struct.rtx_def** %reg403, align 16, !dbg !6339
  call void @llvm.dbg.value(metadata %struct.rtx_def* %73, metadata !2194, metadata !DIExpression()), !dbg !6337
  %partial407 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 3, !dbg !6340
  %74 = load i32, i32* %partial407, align 8, !dbg !6340
  call void @llvm.dbg.value(metadata i32 %74, metadata !2195, metadata !DIExpression()), !dbg !6337
  %boundary = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 4, i32 5, !dbg !6341
  %75 = load i32, i32* %boundary, align 4, !dbg !6341
  call void @llvm.dbg.value(metadata i32 %75, metadata !2196, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 0, metadata !2197, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 0, metadata !2198, metadata !DIExpression()), !dbg !6337
  %cmp411 = icmp ne %struct.rtx_def* %73, null, !dbg !6342
  %cmp414 = icmp eq i32 %74, 0, !dbg !6343
  %or.cond5 = and i1 %cmp411, %cmp414, !dbg !6344
  br i1 %or.cond5, label %for.inc610, label %if.then416, !dbg !6344

if.then416:                                       ; preds = %for.body391
  %76 = load i32, i32* @target_flags, align 4, !dbg !6345
  %and417 = and i32 %76, 4, !dbg !6345
  %cmp418 = icmp eq i32 %and417, 0, !dbg !6345
  br i1 %cmp418, label %lor.lhs.false420, label %if.then424, !dbg !6345

lor.lhs.false420:                                 ; preds = %if.then416
  %call421 = call i32 @ix86_cfun_abi() #7, !dbg !6345
  %cmp422 = icmp eq i32 %call421, 1, !dbg !6345
  br i1 %cmp422, label %if.then424, label %if.end503, !dbg !6346

if.then424:                                       ; preds = %if.then416, %lor.lhs.false420
  %constant428 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 4, i32 2, i32 0, !dbg !6347
  %77 = load i64, i64* %constant428, align 16, !dbg !6347
  %conv429 = trunc i64 %77 to i32, !dbg !6348
  call void @llvm.dbg.value(metadata i32 %conv429, metadata !2197, metadata !DIExpression()), !dbg !6337
  %constant435 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 4, i32 0, i32 0, !dbg !6349
  %78 = load i64, i64* %constant435, align 16, !dbg !6349
  %add436 = add i64 %77, %78, !dbg !6350
  call void @llvm.dbg.value(metadata i32 %conv429, metadata !2199, metadata !DIExpression()), !dbg !6337
  %cmp438 = icmp sgt i32 %call2, %conv429, !dbg !6351
  %spec.select6 = select i1 %cmp438, i32 %call2, i32 %conv429, !dbg !6353
  call void @llvm.dbg.value(metadata i32 %spec.select6, metadata !2199, metadata !DIExpression()), !dbg !6337
  %79 = load i8*, i8** @stack_usage_map, align 8, !dbg !6354
  %80 = sext i32 %spec.select6 to i64, !dbg !6355
  %sext = shl i64 %add436, 32, !dbg !6355
  %81 = ashr exact i64 %sext, 32, !dbg !6355
  br label %while.cond, !dbg !6355

while.cond:                                       ; preds = %while.body, %if.then424
  %indvars.iv30 = phi i64 [ %indvars.iv.next31, %while.body ], [ %80, %if.then424 ], !dbg !6354
  call void @llvm.dbg.value(metadata i64 %indvars.iv30, metadata !2199, metadata !DIExpression()), !dbg !6337
  %cmp442 = icmp slt i64 %indvars.iv30, %81, !dbg !6356
  br i1 %cmp442, label %land.rhs, label %while.end, !dbg !6357

land.rhs:                                         ; preds = %while.cond
  %arrayidx445 = getelementptr inbounds i8, i8* %79, i64 %indvars.iv30, !dbg !6358
  %82 = load i8, i8* %arrayidx445, align 1, !dbg !6358
  %cmp447 = icmp eq i8 %82, 0, !dbg !6359
  br i1 %cmp447, label %while.body, label %while.end, !dbg !6355

while.body:                                       ; preds = %land.rhs
  %indvars.iv.next31 = add nsw i64 %indvars.iv30, 1, !dbg !6360
  call void @llvm.dbg.value(metadata i32 undef, metadata !2199, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6337
  br label %while.cond, !dbg !6355, !llvm.loop !6361

while.end:                                        ; preds = %while.cond, %land.rhs
  %cmp442.lcssa = phi i1 [ %cmp442, %while.cond ], [ %cmp442, %land.rhs ], !dbg !6356
  call void @llvm.dbg.value(metadata i64 %indvars.iv30, metadata !2199, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i64 %indvars.iv30, metadata !2199, metadata !DIExpression()), !dbg !6337
  br i1 %cmp442.lcssa, label %if.then452, label %if.end503, !dbg !6362

if.then452:                                       ; preds = %while.end
  %.tr = trunc i64 %78 to i32, !dbg !6363
  %conv460 = shl i32 %.tr, 3, !dbg !6363
  call void @llvm.dbg.value(metadata i32 %conv460, metadata !2200, metadata !DIExpression()), !dbg !6364
  %call461 = call i32 @mode_for_size(i32 %conv460, i32 2, i32 1) #7, !dbg !6365
  call void @llvm.dbg.value(metadata i32 %call461, metadata !2207, metadata !DIExpression()), !dbg !6364
  %constant465 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 4, i32 1, i32 0, !dbg !6366
  %83 = load i64, i64* %constant465, align 16, !dbg !6366
  %call466 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %argblock.2, i64 %83) #7, !dbg !6367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call466, metadata !2208, metadata !DIExpression()), !dbg !6364
  %call467 = call %struct.rtx_def* @memory_address_addr_space(i32 %call461, %struct.rtx_def* %call466, i8 zeroext 0) #7, !dbg !6368
  %call468 = call %struct.rtx_def* @gen_rtx_MEM(i32 %call461, %struct.rtx_def* %call467) #7, !dbg !6369
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call468, metadata !2209, metadata !DIExpression()), !dbg !6364
  %cmp469 = icmp eq i32 %call461, 1, !dbg !6370
  br i1 %cmp469, label %if.then471, label %if.else492, !dbg !6372

if.then471:                                       ; preds = %if.then452
  %84 = load i64, i64* %constant435, align 16, !dbg !6373
  %call477 = call %struct.rtx_def* @assign_stack_temp(i32 1, i64 %84, i32 0) #7, !dbg !6375
  %save_area480 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 5, !dbg !6376
  store %struct.rtx_def* %call477, %struct.rtx_def** %save_area480, align 8, !dbg !6377
  %call484 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call477) #7, !dbg !6378
  %85 = load i64, i64* %constant435, align 16, !dbg !6379
  %call490 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %85) #7, !dbg !6379
  %call491 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call484, %struct.rtx_def* %call468, %struct.rtx_def* %call490, i32 2) #7, !dbg !6380
  br label %if.end503, !dbg !6381

if.else492:                                       ; preds = %if.then452
  %call493 = call %struct.rtx_def* @gen_reg_rtx(i32 %call461) #7, !dbg !6382
  %save_area496 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 5, !dbg !6384
  store %struct.rtx_def* %call493, %struct.rtx_def** %save_area496, align 8, !dbg !6385
  %call500 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call493, %struct.rtx_def* %call468) #7, !dbg !6386
  br label %if.end503

if.end503:                                        ; preds = %while.end, %if.else492, %if.then471, %lor.lhs.false420
  %lower_bound.0 = phi i64 [ 0, %lor.lhs.false420 ], [ %77, %if.then471 ], [ %77, %if.else492 ], [ %77, %while.end ], !dbg !6337
  %upper_bound.0 = phi i64 [ 0, %lor.lhs.false420 ], [ %add436, %if.then471 ], [ %add436, %if.else492 ], [ %add436, %while.end ], !dbg !6337
  %constant508 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 4, i32 1, i32 0, !dbg !6387
  %86 = load i64, i64* %constant508, align 16, !dbg !6387
  %call509 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %86) #7, !dbg !6387
  %var513 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 4, i32 3, i32 1, !dbg !6388
  %87 = load %union.tree_node*, %union.tree_node** %var513, align 8, !dbg !6388
  %cmp514 = icmp eq %union.tree_node* %87, null, !dbg !6388
  br i1 %cmp514, label %cond.true516, label %cond.false523, !dbg !6388

cond.true516:                                     ; preds = %if.end503
  %constant521 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 4, i32 3, i32 0, !dbg !6388
  %88 = load i64, i64* %constant521, align 16, !dbg !6388
  %call522 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %88) #7, !dbg !6388
  br label %cond.end555, !dbg !6388

cond.false523:                                    ; preds = %if.end503
  br i1 false, label %cond.true531, label %cond.false538, !dbg !6388

cond.true531:                                     ; preds = %cond.false523
  br label %cond.end552, !dbg !6388

cond.false538:                                    ; preds = %cond.false523
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !6388
  %call544 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %89, %union.tree_node* nonnull %87) #7, !dbg !6388
  %constant549 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next35, i32 4, i32 3, i32 0, !dbg !6388
  %90 = load i64, i64* %constant549, align 16, !dbg !6388
  %call550 = call %union.tree_node* @size_int_kind(i64 %90, i32 1) #7, !dbg !6388
  %call551 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call544, %union.tree_node* %call550) #7, !dbg !6388
  br label %cond.end552, !dbg !6388

cond.end552:                                      ; preds = %cond.false538, %cond.true531
  %cond553 = phi %union.tree_node* [ undef, %cond.true531 ], [ %call551, %cond.false538 ], !dbg !6388
  %call554 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond553) #8, !dbg !6388
  br label %cond.end555, !dbg !6388

cond.end555:                                      ; preds = %cond.end552, %cond.true516
  %cond556 = phi %struct.rtx_def* [ %call522, %cond.true516 ], [ %call554, %cond.end552 ], !dbg !6388
  call void @emit_push_insn(%struct.rtx_def* %72, i32 %71, %union.tree_node* null, %struct.rtx_def* null, i32 %75, i32 %74, %struct.rtx_def* %73, i32 0, %struct.rtx_def* %argblock.2, %struct.rtx_def* %call509, i32 %call2, %struct.rtx_def* %cond556) #7, !dbg !6389
  %91 = load i32, i32* @target_flags, align 4, !dbg !6390
  %and557 = and i32 %91, 4, !dbg !6390
  %cmp558 = icmp eq i32 %and557, 0, !dbg !6390
  br i1 %cmp558, label %lor.lhs.false560, label %if.then564, !dbg !6390

lor.lhs.false560:                                 ; preds = %cond.end555
  %call561 = call i32 @ix86_cfun_abi() #7, !dbg !6390
  %cmp562 = icmp eq i32 %call561, 1, !dbg !6390
  br i1 %cmp562, label %if.then564, label %if.end574, !dbg !6392

if.then564:                                       ; preds = %cond.end555, %lor.lhs.false560
  %sext38 = shl i64 %lower_bound.0, 32, !dbg !6393
  %92 = ashr exact i64 %sext38, 32, !dbg !6393
  %sext39 = shl i64 %upper_bound.0, 32, !dbg !6393
  %93 = ashr exact i64 %sext39, 32, !dbg !6393
  br label %for.cond565, !dbg !6393

for.cond565:                                      ; preds = %for.body568, %if.then564
  %indvars.iv32 = phi i64 [ %indvars.iv.next33, %for.body568 ], [ %92, %if.then564 ], !dbg !6395
  call void @llvm.dbg.value(metadata i64 %indvars.iv32, metadata !2199, metadata !DIExpression()), !dbg !6337
  %cmp566 = icmp slt i64 %indvars.iv32, %93, !dbg !6396
  br i1 %cmp566, label %for.body568, label %if.end574.loopexit, !dbg !6398

for.body568:                                      ; preds = %for.cond565
  %94 = load i8*, i8** @stack_usage_map, align 8, !dbg !6399
  %arrayidx570 = getelementptr inbounds i8, i8* %94, i64 %indvars.iv32, !dbg !6399
  store i8 1, i8* %arrayidx570, align 1, !dbg !6400
  %indvars.iv.next33 = add nsw i64 %indvars.iv32, 1, !dbg !6401
  call void @llvm.dbg.value(metadata i32 undef, metadata !2199, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6337
  br label %for.cond565, !dbg !6402, !llvm.loop !6403

if.end574.loopexit:                               ; preds = %for.cond565
  br label %if.end574, !dbg !6405

if.end574:                                        ; preds = %if.end574.loopexit, %lor.lhs.false560
  %95 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6405
  %add575 = add nsw i32 %95, 1, !dbg !6405
  store i32 %add575, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6405
  br i1 %tobool577, label %lor.lhs.false578, label %if.then589, !dbg !6406

lor.lhs.false578:                                 ; preds = %if.end574
  br i1 %tobool580, label %for.inc610, label %land.lhs.true581, !dbg !6407

land.lhs.true581:                                 ; preds = %lor.lhs.false578
  %96 = load i32, i32* @target_flags, align 4, !dbg !6408
  %and582 = and i32 %96, 4, !dbg !6408
  %cmp583 = icmp eq i32 %and582, 0, !dbg !6408
  br i1 %cmp583, label %lor.lhs.false585, label %if.then589, !dbg !6408

lor.lhs.false585:                                 ; preds = %land.lhs.true581
  %call586 = call i32 @ix86_cfun_abi() #7, !dbg !6408
  %cmp587 = icmp eq i32 %call586, 1, !dbg !6408
  br i1 %cmp587, label %if.then589, label %for.inc610, !dbg !6409

if.then589:                                       ; preds = %land.lhs.true581, %if.end574, %lor.lhs.false585
  br i1 %cmp369, label %if.else598, label %if.then591, !dbg !6410

if.then591:                                       ; preds = %if.then589
  %97 = load i64, i64* %constant508, align 16, !dbg !6411
  %call597 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* nonnull %argblock.2, i64 %97) #7, !dbg !6413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call597, metadata !2210, metadata !DIExpression()), !dbg !6414
  br label %if.end601, !dbg !6415

if.else598:                                       ; preds = %if.then589
  %98 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !6416
  %call599 = call %struct.rtx_def* @gen_rtx_fmt_0_stat(i32 38, i32 16) #7, !dbg !6416
  %call600 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %98, %struct.rtx_def* %call599) #7, !dbg !6416
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call600, metadata !2210, metadata !DIExpression()), !dbg !6414
  br label %if.end601

if.end601:                                        ; preds = %if.else598, %if.then591
  %use.0 = phi %struct.rtx_def* [ %call597, %if.then591 ], [ %call600, %if.else598 ], !dbg !6417
  call void @llvm.dbg.value(metadata %struct.rtx_def* %use.0, metadata !2210, metadata !DIExpression()), !dbg !6414
  %99 = load i32, i32* %mode395, align 8, !dbg !6418
  %call605 = call %struct.rtx_def* @gen_rtx_MEM(i32 %99, %struct.rtx_def* %use.0) #7, !dbg !6419
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call605, metadata !2210, metadata !DIExpression()), !dbg !6414
  %call606 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 0, %struct.rtx_def* %call605) #7, !dbg !6420
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call606, metadata !2210, metadata !DIExpression()), !dbg !6414
  %100 = load %struct.rtx_def*, %struct.rtx_def** %call_fusage, align 8, !dbg !6421
  call void @llvm.dbg.value(metadata %struct.rtx_def* %100, metadata !2160, metadata !DIExpression()), !dbg !6071
  %call607 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call606, %struct.rtx_def* %100) #7, !dbg !6421
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call607, metadata !2160, metadata !DIExpression()), !dbg !6071
  store %struct.rtx_def* %call607, %struct.rtx_def** %call_fusage, align 8, !dbg !6422
  br label %for.inc610, !dbg !6423

for.inc610:                                       ; preds = %lor.lhs.false578, %for.body391, %if.end601, %lor.lhs.false585
  %inc611 = add nuw nsw i32 %count.2, 1, !dbg !6424
  call void @llvm.dbg.value(metadata i32 %inc611, metadata !2136, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 undef, metadata !2131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6071
  br label %for.cond388, !dbg !6425, !llvm.loop !6426

for.end613:                                       ; preds = %for.cond388
  call void @llvm.dbg.value(metadata i32 %nargs.addr.0, metadata !2131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2160, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call624 = call %struct.rtx_def* @prepare_call_address(%union.tree_node* null, %struct.rtx_def* %orgfun, %struct.rtx_def* null, %struct.rtx_def** nonnull %call_fusage, i32 0, i32 0) #8, !dbg !6428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call624, metadata !2132, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 0, metadata !2136, metadata !DIExpression()), !dbg !6071
  %101 = sext i32 %nargs.addr.0 to i64, !dbg !6429
  br label %for.cond625, !dbg !6429

for.cond625:                                      ; preds = %if.end666, %for.end613
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %if.end666 ], [ %101, %for.end613 ], !dbg !6430
  %count.3 = phi i32 [ %inc669, %if.end666 ], [ 0, %for.end613 ], !dbg !6430
  %indvars.iv.next29 = add nsw i64 %indvars.iv28, -1, !dbg !6071
  call void @llvm.dbg.value(metadata i32 undef, metadata !2131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %count.3, metadata !2136, metadata !DIExpression()), !dbg !6071
  %cmp626 = icmp slt i32 %count.3, %nargs.addr.0, !dbg !6431
  br i1 %cmp626, label %for.body628, label %for.cond672.preheader, !dbg !6432

for.cond672.preheader:                            ; preds = %for.cond625
  %102 = sext i32 %nargs.addr.0 to i64, !dbg !6433
  br label %for.cond672, !dbg !6433

for.body628:                                      ; preds = %for.cond625
  %mode632 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next29, i32 1, !dbg !6434
  %103 = load i32, i32* %mode632, align 8, !dbg !6434
  call void @llvm.dbg.value(metadata i32 %103, metadata !2213, metadata !DIExpression()), !dbg !6435
  %value636 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next29, i32 0, !dbg !6436
  %104 = load %struct.rtx_def*, %struct.rtx_def** %value636, align 16, !dbg !6436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %104, metadata !2217, metadata !DIExpression()), !dbg !6435
  %reg640 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next29, i32 2, !dbg !6437
  %105 = load %struct.rtx_def*, %struct.rtx_def** %reg640, align 16, !dbg !6437
  call void @llvm.dbg.value(metadata %struct.rtx_def* %105, metadata !2218, metadata !DIExpression()), !dbg !6435
  %partial644 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv.next29, i32 3, !dbg !6438
  %106 = load i32, i32* %partial644, align 8, !dbg !6438
  call void @llvm.dbg.value(metadata i32 %106, metadata !2219, metadata !DIExpression()), !dbg !6435
  %cond = icmp eq %struct.rtx_def* %105, null, !dbg !6439
  br i1 %cond, label %if.end666, label %land.lhs.true647, !dbg !6439

land.lhs.true647:                                 ; preds = %for.body628
  %107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i64 0, i32 0, !dbg !6441
  %bf.load648 = load i32, i32* %107, align 8, !dbg !6441
  %bf.clear649 = and i32 %bf.load648, 65535, !dbg !6441
  %cmp650 = icmp eq i32 %bf.clear649, 15, !dbg !6442
  br i1 %cmp650, label %if.then652, label %if.else657, !dbg !6443

if.then652:                                       ; preds = %land.lhs.true647
  %idxprom653 = zext i32 %103 to i64, !dbg !6444
  %arrayidx654 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom653, !dbg !6444
  %108 = load i8, i8* %arrayidx654, align 1, !dbg !6444
  %conv656 = zext i8 %108 to i32, !dbg !6444
  call void @emit_group_load(%struct.rtx_def* nonnull %105, %struct.rtx_def* %104, %union.tree_node* null, i32 %conv656) #7, !dbg !6445
  br label %if.end666, !dbg !6445

if.else657:                                       ; preds = %land.lhs.true647
  %cmp661 = icmp eq i32 %106, 0, !dbg !6446
  br i1 %cmp661, label %if.then663, label %if.end666, !dbg !6448

if.then663:                                       ; preds = %if.else657
  %call664 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %105, %struct.rtx_def* %104) #7, !dbg !6449
  br label %if.end666, !dbg !6449

if.end666:                                        ; preds = %for.body628, %if.else657, %if.then663, %if.then652
  %109 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6450
  %add667 = add nsw i32 %109, 1, !dbg !6450
  store i32 %add667, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6450
  %inc669 = add nuw nsw i32 %count.3, 1, !dbg !6451
  call void @llvm.dbg.value(metadata i32 %inc669, metadata !2136, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 undef, metadata !2131, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6071
  br label %for.cond625, !dbg !6452, !llvm.loop !6453

for.cond672:                                      ; preds = %for.cond672.preheader, %for.inc710
  %indvars.iv26 = phi i64 [ 0, %for.cond672.preheader ], [ %indvars.iv.next27, %for.inc710 ], !dbg !6455
  call void @llvm.dbg.value(metadata i64 %indvars.iv26, metadata !2136, metadata !DIExpression()), !dbg !6071
  %cmp673 = icmp slt i64 %indvars.iv26, %102, !dbg !6456
  br i1 %cmp673, label %for.body675, label %for.end712, !dbg !6433

for.body675:                                      ; preds = %for.cond672
  %reg679 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv26, i32 2, !dbg !6457
  %110 = load %struct.rtx_def*, %struct.rtx_def** %reg679, align 16, !dbg !6457
  call void @llvm.dbg.value(metadata %struct.rtx_def* %110, metadata !2220, metadata !DIExpression()), !dbg !6458
  %cond14 = icmp eq %struct.rtx_def* %110, null, !dbg !6459
  br i1 %cond14, label %for.inc710, label %land.lhs.true682, !dbg !6459

land.lhs.true682:                                 ; preds = %for.body675
  %111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i64 0, i32 0, !dbg !6460
  %bf.load683 = load i32, i32* %111, align 8, !dbg !6460
  %bf.clear684 = and i32 %bf.load683, 65535, !dbg !6460
  %cmp685 = icmp eq i32 %bf.clear684, 15, !dbg !6461
  br i1 %cmp685, label %if.then687, label %if.else688, !dbg !6462

if.then687:                                       ; preds = %land.lhs.true682
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2160, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @use_group_regs(%struct.rtx_def** nonnull %call_fusage, %struct.rtx_def* nonnull %110) #7, !dbg !6463
  br label %for.inc710, !dbg !6463

if.else688:                                       ; preds = %land.lhs.true682
  %partial695 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv26, i32 3, !dbg !6464
  %112 = load i32, i32* %partial695, align 8, !dbg !6464
  call void @llvm.dbg.value(metadata i32 %112, metadata !2224, metadata !DIExpression()), !dbg !6465
  %tobool696 = icmp eq i32 %112, 0, !dbg !6466
  br i1 %tobool696, label %if.else706, label %if.then697, !dbg !6467

if.then697:                                       ; preds = %if.else688
  %rem15 = and i32 %112, 3, !dbg !6468
  %cmp698 = icmp eq i32 %rem15, 0, !dbg !6468
  br i1 %cmp698, label %cond.end702, label %cond.true700, !dbg !6468

cond.true700:                                     ; preds = %if.then697
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3780, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6468
  br label %cond.end702, !dbg !6468

cond.end702:                                      ; preds = %if.then697, %cond.true700
  %div704 = sdiv i32 %112, 4, !dbg !6469
  call void @llvm.dbg.value(metadata i32 %div704, metadata !2228, metadata !DIExpression()), !dbg !6470
  %call705 = call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %110) #8, !dbg !6471
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2160, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @use_regs(%struct.rtx_def** nonnull %call_fusage, i32 %call705, i32 %div704) #7, !dbg !6472
  br label %for.inc710, !dbg !6473

if.else706:                                       ; preds = %if.else688
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2160, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @use_reg(%struct.rtx_def** nonnull %call_fusage, %struct.rtx_def* nonnull %110) #7, !dbg !6474
  br label %for.inc710

for.inc710:                                       ; preds = %for.body675, %if.then687, %cond.end702, %if.else706
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1, !dbg !6475
  call void @llvm.dbg.value(metadata i32 undef, metadata !2136, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6071
  br label %for.cond672, !dbg !6476, !llvm.loop !6477

for.end712:                                       ; preds = %for.cond672
  %cmp716 = icmp eq %struct.rtx_def* %call, null, !dbg !6479
  %or.cond9.not = or i1 %cmp716, %tobool30, !dbg !6481
  br i1 %or.cond9.not, label %if.end734, label %if.then720, !dbg !6481

if.then720:                                       ; preds = %for.end712
  %arrayidx723 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem_value.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6482
  %rt_rtx724 = bitcast %union.rtunion_def* %arrayidx723 to %struct.rtx_def**, !dbg !6482
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx724, align 8, !dbg !6482
  %call725 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %113, %struct.rtx_def* null) #7, !dbg !6484
  %call726 = call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %call725) #7, !dbg !6485
  %call727 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %call726) #7, !dbg !6486
  %114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !6487
  %bf.load728 = load i32, i32* %114, align 8, !dbg !6487
  %bf.clear729 = and i32 %bf.load728, 65535, !dbg !6487
  %cmp730 = icmp eq i32 %bf.clear729, 37, !dbg !6487
  br i1 %cmp730, label %if.then732, label %if.end734, !dbg !6489

if.then732:                                       ; preds = %if.then720
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !2160, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call void @use_reg(%struct.rtx_def** nonnull %call_fusage, %struct.rtx_def* %call) #7, !dbg !6490
  br label %if.end734, !dbg !6490

if.end734:                                        ; preds = %if.then720, %if.then732, %for.end712
  %115 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6491
  %add735 = add nsw i32 %115, 1, !dbg !6491
  store i32 %add735, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6491
  %cmp739 = icmp ne i32 %outmode, 0, !dbg !6492
  %or.cond11 = and i1 %tobool30, %cmp739, !dbg !6493
  br i1 %or.cond11, label %cond.true741, label %cond.end744, !dbg !6493

cond.true741:                                     ; preds = %if.end734
  %call742 = call %struct.rtx_def* @hard_libcall_value(i32 %outmode, %struct.rtx_def* %orgfun) #7, !dbg !6494
  br label %cond.end744, !dbg !6495

cond.end744:                                      ; preds = %if.end734, %cond.true741
  %cond745 = phi %struct.rtx_def* [ %call742, %cond.true741 ], [ null, %if.end734 ], !dbg !6495
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond745, metadata !2162, metadata !DIExpression()), !dbg !6071
  %116 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !6496
  %117 = load i32, i32* @ix86_preferred_stack_boundary, align 4, !dbg !6496
  %div746 = lshr i32 %117, 3, !dbg !6496
  %sub747 = add nsw i32 %div746, -1, !dbg !6496
  %and748 = and i32 %116, %sub747, !dbg !6496
  %tobool749 = icmp eq i32 %and748, 0, !dbg !6496
  br i1 %tobool749, label %cond.end752, label %cond.true750, !dbg !6496

cond.true750:                                     ; preds = %cond.end744
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3808, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6496
  br label %cond.end752, !dbg !6496

cond.end752:                                      ; preds = %cond.end744, %cond.true750
  %call754 = call %struct.rtx_def* @get_last_insn() #7, !dbg !6497
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call754, metadata !2168, metadata !DIExpression()), !dbg !6071
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orgfun, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !6498
  %118 = load i8*, i8** %rt_str, align 8, !dbg !6498
  %call758 = call %union.tree_node* @get_identifier(i8* %118) #7, !dbg !6499
  %call759 = call %union.tree_node* @build_function_type(%union.tree_node* %tfom.0, %union.tree_node* null) #7, !dbg !6500
  %constant760 = getelementptr inbounds %struct.args_size, %struct.args_size* %original_args_size, i64 0, i32 0, !dbg !6501
  %119 = load i64, i64* %constant760, align 8, !dbg !6501
  %120 = load i64, i64* %constant, align 8, !dbg !6502
  %121 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6503
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  %call763 = call %struct.rtx_def* @function_arg(%struct.ix86_args* nonnull %args_so_far, i32 0, %union.tree_node* %121, i32 1) #7, !dbg !6503
  %add764 = add nsw i32 %3, 1, !dbg !6504
  %122 = load %struct.rtx_def*, %struct.rtx_def** %call_fusage, align 8, !dbg !6505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %122, metadata !2160, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !2138, metadata !DIExpression(DW_OP_deref)), !dbg !6071
  call fastcc void @emit_call_1(%struct.rtx_def* %call624, %union.tree_node* null, %union.tree_node* %call758, %union.tree_node* %call759, i64 %119, i64 %120, i64 %struct_value_size.1, %struct.rtx_def* %call763, %struct.rtx_def* %cond745, i32 %add764, %struct.rtx_def* %122, i32 %flags.3.lcssa, %struct.ix86_args* nonnull %args_so_far) #8, !dbg !6506
  %and765 = and i32 %flags.3.lcssa, 8, !dbg !6507
  %tobool766 = icmp eq i32 %and765, 0, !dbg !6507
  br i1 %tobool766, label %if.end789, label %if.then767, !dbg !6508

if.then767:                                       ; preds = %cond.end752
  %call768 = call %struct.rtx_def* @get_last_insn() #7, !dbg !6509
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call768, metadata !2231, metadata !DIExpression()), !dbg !6510
  br label %while.cond769, !dbg !6511

while.cond769:                                    ; preds = %cond.end785, %if.then767
  %last.0 = phi %struct.rtx_def* [ %call768, %if.then767 ], [ %125, %cond.end785 ], !dbg !6510
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !2231, metadata !DIExpression()), !dbg !6510
  %123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 0, !dbg !6512
  %bf.load770 = load i32, i32* %123, align 8, !dbg !6512
  %bf.clear771 = and i32 %bf.load770, 65535, !dbg !6512
  %cmp772 = icmp eq i32 %bf.clear771, 10, !dbg !6512
  br i1 %cmp772, label %while.end787, label %while.body776, !dbg !6511

while.body776:                                    ; preds = %while.cond769
  %124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6513
  %rt_rtx780 = bitcast %union.rtunion_def* %124 to %struct.rtx_def**, !dbg !6513
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx780, align 8, !dbg !6513
  call void @llvm.dbg.value(metadata %struct.rtx_def* %125, metadata !2231, metadata !DIExpression()), !dbg !6510
  %cmp781 = icmp eq %struct.rtx_def* %125, %call754, !dbg !6515
  br i1 %cmp781, label %cond.true783, label %cond.end785, !dbg !6515

cond.true783:                                     ; preds = %while.body776
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3844, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6515
  br label %cond.end785, !dbg !6515

cond.end785:                                      ; preds = %while.body776, %cond.true783
  br label %while.cond769, !dbg !6511, !llvm.loop !6516

while.end787:                                     ; preds = %while.cond769
  %last.0.lcssa = phi %struct.rtx_def* [ %last.0, %while.cond769 ], !dbg !6510
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !2231, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !2231, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0.lcssa, metadata !2231, metadata !DIExpression()), !dbg !6510
  %call788 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %last.0.lcssa) #7, !dbg !6518
  br label %if.end789, !dbg !6519

if.end789:                                        ; preds = %cond.end752, %while.end787
  %126 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6520
  %sub790 = add nsw i32 %126, -1, !dbg !6520
  store i32 %sub790, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !6520
  call void @pop_temp_slots() #7, !dbg !6521
  %tobool794 = icmp ne i32 %retval1, 0, !dbg !6522
  %or.cond12 = and i1 %cmp739, %tobool794, !dbg !6523
  br i1 %or.cond12, label %if.then795, label %if.end862, !dbg !6523

if.then795:                                       ; preds = %if.end789
  br i1 %tobool30, label %if.else807, label %if.then797, !dbg !6524

if.then797:                                       ; preds = %if.then795
  %cmp798 = icmp eq %struct.rtx_def* %value, null, !dbg !6525
  %spec.select13 = select i1 %cmp798, %struct.rtx_def* %mem_value.2, %struct.rtx_def* %value, !dbg !6528
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select13, metadata !2124, metadata !DIExpression()), !dbg !6071
  %cmp802 = icmp eq %struct.rtx_def* %spec.select13, %mem_value.2, !dbg !6529
  br i1 %cmp802, label %if.end862, label %if.then804, !dbg !6531

if.then804:                                       ; preds = %if.then797
  %call805 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %spec.select13, %struct.rtx_def* nonnull %mem_value.2) #7, !dbg !6532
  br label %if.end862, !dbg !6532

if.else807:                                       ; preds = %if.then795
  %127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond745, i64 0, i32 0, !dbg !6533
  %bf.load808 = load i32, i32* %127, align 8, !dbg !6533
  %bf.clear809 = and i32 %bf.load808, 65535, !dbg !6533
  %cmp810 = icmp eq i32 %bf.clear809, 15, !dbg !6534
  br i1 %cmp810, label %if.then812, label %if.else822, !dbg !6535

if.then812:                                       ; preds = %if.else807
  %cmp813 = icmp eq %struct.rtx_def* %value, null, !dbg !6536
  br i1 %cmp813, label %if.then815, label %if.end817, !dbg !6539

if.then815:                                       ; preds = %if.then812
  %call816 = call %struct.rtx_def* @gen_reg_rtx(i32 %outmode) #7, !dbg !6540
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call816, metadata !2124, metadata !DIExpression()), !dbg !6071
  br label %if.end817, !dbg !6541

if.end817:                                        ; preds = %if.then815, %if.then812
  %value.addr.1 = phi %struct.rtx_def* [ %call816, %if.then815 ], [ %value, %if.then812 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.addr.1, metadata !2124, metadata !DIExpression()), !dbg !6071
  %idxprom818 = zext i32 %outmode to i64, !dbg !6542
  %arrayidx819 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom818, !dbg !6542
  %128 = load i8, i8* %arrayidx819, align 1, !dbg !6542
  %conv821 = zext i8 %128 to i32, !dbg !6542
  call void @emit_group_store(%struct.rtx_def* %value.addr.1, %struct.rtx_def* %cond745, %union.tree_node* null, i32 %conv821) #7, !dbg !6543
  br label %if.end862, !dbg !6544

if.else822:                                       ; preds = %if.else807
  %bf.lshr824 = lshr i32 %bf.load808, 16, !dbg !6545
  %bf.clear825 = and i32 %bf.lshr824, 255, !dbg !6545
  %cmp826 = icmp eq i32 %bf.clear825, %outmode, !dbg !6546
  br i1 %cmp826, label %if.end853, label %if.then828, !dbg !6547

if.then828:                                       ; preds = %if.else822
  %129 = bitcast i32* %unsignedp to i8*, !dbg !6548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #6, !dbg !6548
  %130 = getelementptr inbounds %union.tree_node, %union.tree_node* %tfom.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6549
  %bf.load829 = load i64, i64* %130, align 8, !dbg !6549
  %bf.lshr830 = lshr i64 %bf.load829, 21, !dbg !6549
  %131 = trunc i64 %bf.lshr830 to i32, !dbg !6549
  %bf.cast = and i32 %131, 1, !dbg !6549
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !2234, metadata !DIExpression()), !dbg !6550
  store i32 %bf.cast, i32* %unsignedp, align 4, !dbg !6551
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !2234, metadata !DIExpression(DW_OP_deref)), !dbg !6550
  %call839 = call i32 @promote_function_mode(%union.tree_node* %tfom.0, i32 %outmode, i32* nonnull %unsignedp, %union.tree_node* null, i32 1) #7, !dbg !6552
  %bf.load840 = load i32, i32* %127, align 8, !dbg !6552
  %bf.lshr841 = lshr i32 %bf.load840, 16, !dbg !6552
  %bf.clear842 = and i32 %bf.lshr841, 255, !dbg !6552
  %cmp843 = icmp eq i32 %call839, %bf.clear842, !dbg !6552
  br i1 %cmp843, label %cond.end847, label %cond.true845, !dbg !6552

cond.true845:                                     ; preds = %if.then828
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3880, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6552
  %bf.load849.pre = load i32, i32* %127, align 8, !dbg !6553
  %.pre24 = lshr i32 %bf.load849.pre, 16, !dbg !6553
  %.pre25 = and i32 %.pre24, 255, !dbg !6553
  br label %cond.end847, !dbg !6552

cond.end847:                                      ; preds = %if.then828, %cond.true845
  %bf.clear851.pre-phi = phi i32 [ %bf.clear842, %if.then828 ], [ %.pre25, %cond.true845 ], !dbg !6553
  %call852 = call %struct.rtx_def* @convert_modes(i32 %outmode, i32 %bf.clear851.pre-phi, %struct.rtx_def* %cond745, i32 0) #7, !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call852, metadata !2162, metadata !DIExpression()), !dbg !6071
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #6, !dbg !6555
  br label %if.end853, !dbg !6556

if.end853:                                        ; preds = %if.else822, %cond.end847
  %valreg.0 = phi %struct.rtx_def* [ %call852, %cond.end847 ], [ %cond745, %if.else822 ], !dbg !6071
  call void @llvm.dbg.value(metadata %struct.rtx_def* %valreg.0, metadata !2162, metadata !DIExpression()), !dbg !6071
  %cmp854 = icmp eq %struct.rtx_def* %value, null, !dbg !6557
  br i1 %cmp854, label %if.end862, label %if.then856, !dbg !6559

if.then856:                                       ; preds = %if.end853
  %call857 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %value, %struct.rtx_def* %valreg.0) #7, !dbg !6560
  br label %if.end862, !dbg !6560

if.end862:                                        ; preds = %if.then797, %if.end853, %if.then804, %if.then856, %if.end817, %if.end789
  %value.addr.5 = phi %struct.rtx_def* [ %value, %if.end789 ], [ %spec.select13, %if.then804 ], [ %mem_value.2, %if.then797 ], [ %value.addr.1, %if.end817 ], [ %value, %if.then856 ], [ %valreg.0, %if.end853 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.addr.5, metadata !2124, metadata !DIExpression()), !dbg !6071
  %132 = load i32, i32* @target_flags, align 4, !dbg !6561
  %and863 = and i32 %132, 4, !dbg !6561
  %cmp864 = icmp eq i32 %and863, 0, !dbg !6561
  br i1 %cmp864, label %lor.lhs.false866, label %if.then870, !dbg !6561

lor.lhs.false866:                                 ; preds = %if.end862
  %call867 = call i32 @ix86_cfun_abi() #7, !dbg !6561
  %cmp868 = icmp eq i32 %call867, 1, !dbg !6561
  br i1 %cmp868, label %if.then870, label %if.end924, !dbg !6562

if.then870:                                       ; preds = %if.end862, %lor.lhs.false866
  %tobool871 = icmp eq %struct.rtx_def* %save_area.0, null, !dbg !6563
  br i1 %tobool871, label %if.end873, label %if.then872, !dbg !6565

if.then872:                                       ; preds = %if.then870
  %133 = load i32, i32* %high_to_save, align 4, !dbg !6566
  call void @llvm.dbg.value(metadata i32 %133, metadata !2171, metadata !DIExpression()), !dbg !6071
  %134 = load i32, i32* %low_to_save, align 4, !dbg !6567
  call void @llvm.dbg.value(metadata i32 %134, metadata !2170, metadata !DIExpression()), !dbg !6071
  call fastcc void @restore_fixed_argument_area(%struct.rtx_def* nonnull %save_area.0, %struct.rtx_def* %argblock.2, i32 %133, i32 %134) #8, !dbg !6568
  br label %if.end873, !dbg !6568

if.end873:                                        ; preds = %if.then870, %if.then872
  call void @llvm.dbg.value(metadata i32 0, metadata !2136, metadata !DIExpression()), !dbg !6071
  %135 = sext i32 %nargs.addr.0 to i64, !dbg !6569
  br label %for.cond874, !dbg !6569

for.cond874:                                      ; preds = %for.inc921, %if.end873
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc921 ], [ 0, %if.end873 ], !dbg !6570
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2136, metadata !DIExpression()), !dbg !6071
  %cmp875 = icmp slt i64 %indvars.iv, %135, !dbg !6571
  br i1 %cmp875, label %for.body877, label %for.end923, !dbg !6572

for.body877:                                      ; preds = %for.cond874
  %save_area880 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv, i32 5, !dbg !6573
  %136 = load %struct.rtx_def*, %struct.rtx_def** %save_area880, align 8, !dbg !6573
  %tobool881 = icmp eq %struct.rtx_def* %136, null, !dbg !6574
  br i1 %tobool881, label %for.inc921, label %if.then882, !dbg !6575

if.then882:                                       ; preds = %for.body877
  %137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i64 0, i32 0, !dbg !6575
  %bf.load887 = load i32, i32* %137, align 8, !dbg !6576
  %bf.lshr888 = lshr i32 %bf.load887, 16, !dbg !6576
  %bf.clear889 = and i32 %bf.lshr888, 255, !dbg !6576
  call void @llvm.dbg.value(metadata i32 %bf.clear889, metadata !2242, metadata !DIExpression()), !dbg !6577
  %constant895 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv, i32 4, i32 1, i32 0, !dbg !6578
  %138 = load i64, i64* %constant895, align 16, !dbg !6578
  %call896 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %argblock.2, i64 %138) #7, !dbg !6579
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call896, metadata !2249, metadata !DIExpression()), !dbg !6577
  %call898 = call %struct.rtx_def* @memory_address_addr_space(i32 %bf.clear889, %struct.rtx_def* %call896, i8 zeroext 0) #7, !dbg !6580
  %call899 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear889, %struct.rtx_def* %call898) #7, !dbg !6581
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call899, metadata !2250, metadata !DIExpression()), !dbg !6577
  %cmp900 = icmp eq i32 %bf.clear889, 1, !dbg !6582
  %139 = load %struct.rtx_def*, %struct.rtx_def** %save_area880, align 8, !dbg !6584
  br i1 %cmp900, label %if.then902, label %if.else914, !dbg !6585

if.then902:                                       ; preds = %if.then882
  %call906 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %139) #7, !dbg !6586
  %constant911 = getelementptr inbounds %struct.arg, %struct.arg* %16, i64 %indvars.iv, i32 4, i32 0, i32 0, !dbg !6587
  %140 = load i64, i64* %constant911, align 16, !dbg !6587
  %call912 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %140) #7, !dbg !6587
  %call913 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call899, %struct.rtx_def* %call906, %struct.rtx_def* %call912, i32 2) #7, !dbg !6588
  br label %for.inc921, !dbg !6588

if.else914:                                       ; preds = %if.then882
  %call918 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call899, %struct.rtx_def* %139) #7, !dbg !6589
  br label %for.inc921

for.inc921:                                       ; preds = %for.body877, %if.else914, %if.then902
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6590
  call void @llvm.dbg.value(metadata i32 undef, metadata !2136, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6071
  br label %for.cond874, !dbg !6591, !llvm.loop !6592

for.end923:                                       ; preds = %for.cond874
  store i32 %7, i32* @highest_outgoing_arg_in_use, align 4, !dbg !6594
  store i8* %8, i8** @stack_usage_map, align 8, !dbg !6595
  br label %if.end924, !dbg !6596

if.end924:                                        ; preds = %for.end923, %lor.lhs.false866
  %tobool925 = icmp eq i8* %stack_usage_map_buf.0, null, !dbg !6597
  br i1 %tobool925, label %if.end927, label %if.then926, !dbg !6599

if.then926:                                       ; preds = %if.end924
  call void @free(i8* nonnull %stack_usage_map_buf.0) #7, !dbg !6600
  br label %if.end927, !dbg !6600

if.end927:                                        ; preds = %if.end924, %if.then926
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !6601
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6, !dbg !6601
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !6601
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #6, !dbg !6601
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #6, !dbg !6601
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !6601
  ret %struct.rtx_def* %value.addr.5, !dbg !6602
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_library_call_value(%struct.rtx_def* %orgfun, %struct.rtx_def* %value, i32 %fn_type, i32 %outmode, i32 %nargs, ...) local_unnamed_addr #5 !dbg !6603 {
entry:
  %p = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orgfun, metadata !6607, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value, metadata !6608, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i32 %fn_type, metadata !6609, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i32 %outmode, metadata !6610, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !6611, metadata !DIExpression()), !dbg !6614
  %0 = bitcast [1 x %struct.__va_list_tag]* %p to i8*, !dbg !6615
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !6615
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %p, metadata !6613, metadata !DIExpression()), !dbg !6616
  call void @llvm.va_start(i8* %0), !dbg !6617
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, !dbg !6618
  %call = call fastcc %struct.rtx_def* @emit_library_call_value_1(i32 1, %struct.rtx_def* %orgfun, %struct.rtx_def* %value, i32 %fn_type, i32 %outmode, i32 %nargs, %struct.__va_list_tag* nonnull %arraydecay2) #8, !dbg !6619
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6612, metadata !DIExpression()), !dbg !6614
  call void @llvm.va_end(i8* nonnull %0), !dbg !6620
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !6621
  ret %struct.rtx_def* %call, !dbg !6622
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @must_pass_in_stack_var_size(i32 %mode, %union.tree_node* %type) local_unnamed_addr #5 !dbg !6623 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6627, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6628, metadata !DIExpression()), !dbg !6629
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !6630
  br i1 %tobool, label %return, label %if.end, !dbg !6632

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6633
  %1 = bitcast %union.tree_node** %0 to i64**, !dbg !6633
  %2 = load i64*, i64** %1, align 8, !dbg !6633
  %bf.load = load i64, i64* %2, align 8, !dbg !6633
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6635
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !6635
  br i1 %cmp, label %if.end3, label %return, !dbg !6636

if.end3:                                          ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6637
  %bf.load5 = load i64, i64* %3, align 8, !dbg !6637
  %bf.cast72 = lshr i64 %bf.load5, 18, !dbg !6629
  %4 = trunc i64 %bf.cast72 to i8, !dbg !6629
  %5 = and i8 %4, 1, !dbg !6629
  br label %return, !dbg !6629

return:                                           ; preds = %if.end, %entry, %if.end3
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.end ], [ %5, %if.end3 ], !dbg !6629
  ret i8 %retval.0, !dbg !6639
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @must_pass_in_stack_var_size_or_pad(i32 %mode, %union.tree_node* %type) local_unnamed_addr #5 !dbg !6640 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6642, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6643, metadata !DIExpression()), !dbg !6644
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !6645
  br i1 %tobool, label %return, label %if.end, !dbg !6647

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6648
  %1 = bitcast %union.tree_node** %0 to i64**, !dbg !6648
  %2 = load i64*, i64** %1, align 8, !dbg !6648
  %bf.load = load i64, i64* %2, align 8, !dbg !6648
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6650
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !6650
  br i1 %cmp, label %if.end3, label %return, !dbg !6651

if.end3:                                          ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6652
  %bf.load5 = load i64, i64* %3, align 8, !dbg !6652
  %bf.cast72 = and i64 %bf.load5, 262144, !dbg !6652
  %tobool8 = icmp eq i64 %bf.cast72, 0, !dbg !6652
  br i1 %tobool8, label %if.end10, label %return, !dbg !6654

if.end10:                                         ; preds = %if.end3
  %cmp11 = icmp eq i32 %mode, 1, !dbg !6655
  br i1 %cmp11, label %land.lhs.true, label %return, !dbg !6657

land.lhs.true:                                    ; preds = %if.end10
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* nonnull %type) #7, !dbg !6658
  ret i8 0, !dbg !6659

return:                                           ; preds = %if.end3, %if.end, %entry, %if.end10
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.end ], [ 1, %if.end3 ], [ 0, %if.end10 ], !dbg !6644
  ret i8 %retval.0, !dbg !6660
}

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

declare dso_local i32 @strncmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6661 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6665, metadata !DIExpression()), !dbg !6666
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !6667
  %bf.load = load i32, i32* %0, align 8, !dbg !6667
  %bf.clear = and i32 %bf.load, 255, !dbg !6667
  ret i32 %bf.clear, !dbg !6668
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6669 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6671, metadata !DIExpression()), !dbg !6672
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !6673
  ret %union.tree_node* %call, !dbg !6674
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6675 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6679, metadata !DIExpression()), !dbg !6681
  call void @llvm.dbg.value(metadata i32 1, metadata !6680, metadata !DIExpression()), !dbg !6681
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !6682
  %tobool = icmp eq i8 %call, 0, !dbg !6682
  br i1 %tobool, label %return, label %if.then, !dbg !6684

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !6685
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 1, !dbg !6685
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6685
  br label %return, !dbg !6687

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !6688
  ret %union.tree_node* %retval.0, !dbg !6689
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6690 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6692, metadata !DIExpression()), !dbg !6693
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !6694
  %cmp = icmp eq i32 %call, 0, !dbg !6695
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !6696

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !6697
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6698
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6699
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6700 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6704, metadata !DIExpression()), !dbg !6706
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !6707
  %idxprom = zext i32 %call to i64, !dbg !6708
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !6708
  %0 = load i64, i64* %arrayidx, align 8, !dbg !6708
  call void @llvm.dbg.value(metadata i64 %0, metadata !6705, metadata !DIExpression()), !dbg !6706
  %cmp = icmp eq i64 %0, 0, !dbg !6709
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6709

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6709
  br label %cond.end, !dbg !6709

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !6710
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !6711
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !6712
  ret %union.tree_node** %2, !dbg !6713
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6714 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6718, metadata !DIExpression()), !dbg !6719
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !6720
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !6721
  ret i32 %call1, !dbg !6722
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !6723 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6727, metadata !DIExpression()), !dbg !6728
  %idxprom = zext i32 %code to i64, !dbg !6729
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !6729
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6729
  ret i32 %0, !dbg !6730
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @init_call_expr_arg_iterator(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !6731 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6735, metadata !DIExpression()), !dbg !6737
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !6736, metadata !DIExpression()), !dbg !6737
  %t = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 0, !dbg !6738
  store %union.tree_node* %exp, %union.tree_node** %t, align 8, !dbg !6739
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6740
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !6740
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !6740
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !6740
  %2 = load i64, i64* %low, align 8, !dbg !6740
  %conv = trunc i64 %2 to i32, !dbg !6740
  %sub = add nsw i32 %conv, -3, !dbg !6740
  %n = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !6741
  store i32 %sub, i32* %n, align 8, !dbg !6742
  %i = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !6743
  store i32 0, i32* %i, align 4, !dbg !6744
  ret void, !dbg !6745
}

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @first_field(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @pass_by_reference(%struct.ix86_args*, i32, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @reference_callee_copied(%struct.ix86_args*, i32, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expr_size(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @store_expr(%union.tree_node*, %struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local void @locate_and_pad_parm(i32, %union.tree_node*, i32, i32, %union.tree_node*, %struct.args_size*, %struct.locate_and_pad_arg_data*) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @function_arg_advance(%struct.ix86_args*, i32, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @convert_modes(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local i32 @promote_mode(%union.tree_node*, i32, i32*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @round_up_loc(i32, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @mode_for_size(i32, i32, i32) local_unnamed_addr #2

declare dso_local void @set_mem_size(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_mem_align(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @set_mem_alias_set(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @assemble_external(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @push_temp_slots() local_unnamed_addr #2

declare dso_local void @pop_temp_slots() local_unnamed_addr #2

declare dso_local void @preserve_temp_slots(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @legitimate_constant_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_group_load_into_temps(%struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @optimize_insn_for_speed_p() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @assign_stack_temp(i32, i64, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @validize_mem(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @check_sibcall_argument_overlap_1(%struct.rtx_def* %x) unnamed_addr #5 !dbg !6746 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6750, metadata !DIExpression()), !dbg !6755
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !6756
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6758

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6759
  %bf.load = load i32, i32* %0, align 8, !dbg !6759
  %bf.clear = and i32 %bf.load, 65535, !dbg !6759
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6751, metadata !DIExpression()), !dbg !6755
  %cmp1 = icmp eq i32 %bf.clear, 43, !dbg !6760
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !6762

if.then2:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6763
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6763
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6763
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6764
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !6764
  %idxprom = zext i32 %bf.clear4 to i64, !dbg !6764
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6764
  %2 = load i8, i8* %arrayidx5, align 1, !dbg !6764
  %conv6 = zext i8 %2 to i64, !dbg !6764
  %call = tail call fastcc zeroext i8 @mem_overlaps_already_clobbered_arg_p(%struct.rtx_def* %1, i64 %conv6) #8, !dbg !6765
  %conv7 = zext i8 %call to i32, !dbg !6765
  br label %cleanup, !dbg !6766

if.end8:                                          ; preds = %if.end
  %idxprom9 = zext i32 %bf.clear to i64, !dbg !6767
  %arrayidx10 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom9, !dbg !6767
  %3 = load i8*, i8** %arrayidx10, align 8, !dbg !6767
  call void @llvm.dbg.value(metadata i8* %3, metadata !6754, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 0, metadata !6752, metadata !DIExpression()), !dbg !6755
  %arrayidx12 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom9, !dbg !6768
  %4 = load i8, i8* %arrayidx12, align 1, !dbg !6768
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !6771
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !6771
  %wide.trip.count = zext i8 %4 to i64, !dbg !6778
  br label %for.cond, !dbg !6779

for.cond:                                         ; preds = %for.inc53, %if.end8
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc53 ], [ 0, %if.end8 ], !dbg !6780
  %fmt.0 = phi i8* [ %incdec.ptr, %for.inc53 ], [ %3, %if.end8 ], !dbg !6755
  call void @llvm.dbg.value(metadata i8* %fmt.0, metadata !6754, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !6752, metadata !DIExpression()), !dbg !6755
  %exitcond = icmp eq i64 %indvars.iv2, %wide.trip.count, !dbg !6778
  br i1 %exitcond, label %cleanup.loopexit1, label %for.body, !dbg !6781

for.body:                                         ; preds = %for.cond
  %5 = load i8, i8* %fmt.0, align 1, !dbg !6782
  %cmp17 = icmp eq i8 %5, 101, !dbg !6783
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !6784

if.then19:                                        ; preds = %for.body
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv2, !dbg !6785
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !6785
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !6785
  %call25 = tail call fastcc i32 @check_sibcall_argument_overlap_1(%struct.rtx_def* %6) #8, !dbg !6788
  %tobool = icmp eq i32 %call25, 0, !dbg !6788
  br i1 %tobool, label %for.inc53, label %cleanup.loopexit1, !dbg !6789

if.else:                                          ; preds = %for.body
  %cmp29 = icmp eq i8 %5, 69, !dbg !6790
  br i1 %cmp29, label %for.cond32.preheader, label %for.inc53, !dbg !6791

for.cond32.preheader:                             ; preds = %if.else
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 %indvars.iv2, !dbg !6771
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !6771
  br label %for.cond32, !dbg !6792

for.cond32:                                       ; preds = %for.cond32.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond32.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !6793
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6753, metadata !DIExpression()), !dbg !6755
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6794
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 0, !dbg !6794
  %8 = load i32, i32* %num_elem, align 8, !dbg !6794
  %9 = sext i32 %8 to i64, !dbg !6795
  %cmp37 = icmp slt i64 %indvars.iv, %9, !dbg !6795
  br i1 %cmp37, label %for.body39, label %for.inc53.loopexit, !dbg !6792

for.body39:                                       ; preds = %for.cond32
  %arrayidx46 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 1, i64 %indvars.iv, !dbg !6796
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx46, align 8, !dbg !6796
  %call47 = tail call fastcc i32 @check_sibcall_argument_overlap_1(%struct.rtx_def* %10) #8, !dbg !6798
  %tobool48 = icmp eq i32 %call47, 0, !dbg !6798
  br i1 %tobool48, label %for.inc, label %cleanup.loopexit, !dbg !6799

for.inc:                                          ; preds = %for.body39
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6800
  call void @llvm.dbg.value(metadata i32 undef, metadata !6753, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6755
  br label %for.cond32, !dbg !6801, !llvm.loop !6802

for.inc53.loopexit:                               ; preds = %for.cond32
  br label %for.inc53, !dbg !6804

for.inc53:                                        ; preds = %for.inc53.loopexit, %if.then19, %if.else
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !6804
  call void @llvm.dbg.value(metadata i32 undef, metadata !6752, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6755
  %incdec.ptr = getelementptr inbounds i8, i8* %fmt.0, i64 1, !dbg !6805
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !6754, metadata !DIExpression()), !dbg !6755
  br label %for.cond, !dbg !6806, !llvm.loop !6807

cleanup.loopexit:                                 ; preds = %for.body39
  br label %cleanup, !dbg !6809

cleanup.loopexit1:                                ; preds = %for.cond, %if.then19
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then19 ]
  br label %cleanup, !dbg !6809

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %entry, %if.then2
  %retval.0 = phi i32 [ %conv7, %if.then2 ], [ 0, %entry ], [ 1, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !6755
  ret i32 %retval.0, !dbg !6809
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !6810 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !6814, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !6815, metadata !DIExpression()), !dbg !6819
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !6820
  %0 = load i8*, i8** %popcount, align 8, !dbg !6820
  %tobool = icmp eq i8* %0, null, !dbg !6821
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !6822

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !6823
  %.pre2 = zext i32 %.pre to i64, !dbg !6824
  %.pre3 = shl i64 1, %.pre2, !dbg !6824
  %.pre4 = lshr i32 %bitno, 6, !dbg !6825
  %.pre5 = zext i32 %.pre4 to i64, !dbg !6826
  br label %if.end7, !dbg !6822

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !6827
  %idxprom = zext i32 %div to i64, !dbg !6827
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !6827
  %1 = load i64, i64* %arrayidx, align 8, !dbg !6827
  %rem = and i32 %bitno, 63, !dbg !6827
  %sh_prom = zext i32 %rem to i64, !dbg !6827
  %2 = shl i64 1, %sh_prom, !dbg !6828
  %3 = and i64 %1, %2, !dbg !6828
  %tobool1 = icmp eq i64 %3, 0, !dbg !6828
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !6830

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !6831
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !6832
  %inc = add i8 %4, 1, !dbg !6832
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !6832
  br label %if.end7, !dbg !6831

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !6826
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !6824
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !6826
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !6833
  %or = or i64 %5, %shl.pre-phi, !dbg !6833
  store i64 %or, i64* %arrayidx13, align 8, !dbg !6833
  ret void, !dbg !6834
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @mem_overlaps_already_clobbered_arg_p(%struct.rtx_def* %addr, i64 %size) unnamed_addr #5 !dbg !6835 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !6839, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata i64 %size, metadata !6840, metadata !DIExpression()), !dbg !6845
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !6846
  %cmp = icmp eq %struct.rtx_def* %0, %addr, !dbg !6848
  br i1 %cmp, label %if.end35, label %if.else, !dbg !6849

if.else:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 0, !dbg !6850
  %bf.load = load i32, i32* %1, align 8, !dbg !6850
  %bf.clear = and i32 %bf.load, 65535, !dbg !6850
  %cmp1 = icmp eq i32 %bf.clear, 49, !dbg !6852
  br i1 %cmp1, label %land.lhs.true, label %if.else18, !dbg !6853

land.lhs.true:                                    ; preds = %if.else
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6854
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6854
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6854
  %cmp2 = icmp eq %struct.rtx_def* %2, %0, !dbg !6855
  br i1 %cmp2, label %land.lhs.true3, label %if.else18, !dbg !6856

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6857
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !6857
  %5 = load i32*, i32** %4, align 8, !dbg !6857
  %bf.load8 = load i32, i32* %5, align 8, !dbg !6857
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !6857
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !6857
  br i1 %cmp10, label %if.then11, label %if.else18, !dbg !6858

if.then11:                                        ; preds = %land.lhs.true3
  %u16 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !6859
  %arrayidx17 = bitcast i32* %u16 to i64*, !dbg !6859
  %6 = load i64, i64* %arrayidx17, align 8, !dbg !6859
  call void @llvm.dbg.value(metadata i64 %6, metadata !6841, metadata !DIExpression()), !dbg !6845
  br label %if.end35

if.else18:                                        ; preds = %land.lhs.true3, %land.lhs.true, %if.else
  br i1 %cmp1, label %land.lhs.true22, label %if.else34, !dbg !6860

land.lhs.true22:                                  ; preds = %if.else18
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6862
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !6862
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !6862
  %cmp27 = icmp eq %struct.rtx_def* %7, %0, !dbg !6863
  br i1 %cmp27, label %cleanup48, label %lor.lhs.false, !dbg !6864

lor.lhs.false:                                    ; preds = %land.lhs.true22
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6865
  %rt_rtx31 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !6865
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !6865
  %cmp32 = icmp eq %struct.rtx_def* %9, %0, !dbg !6866
  br i1 %cmp32, label %cleanup48, label %if.else34, !dbg !6867

if.else34:                                        ; preds = %lor.lhs.false, %if.else18
  br label %cleanup48, !dbg !6868

if.end35:                                         ; preds = %entry, %if.then11
  %i.0 = phi i64 [ %6, %if.then11 ], [ 0, %entry ], !dbg !6869
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6841, metadata !DIExpression()), !dbg !6845
  %cmp36 = icmp eq i64 %size, 0, !dbg !6870
  br i1 %cmp36, label %if.end47, label %for.cond.preheader, !dbg !6871

for.cond.preheader:                               ; preds = %if.end35
  %10 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @stored_args_map, align 8, !dbg !6872
  %n_bits = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %10, i64 0, i32 1, !dbg !6872
  br label %for.cond, !dbg !6876

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %k.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6877
  call void @llvm.dbg.value(metadata i64 %k.0, metadata !6842, metadata !DIExpression()), !dbg !6878
  %exitcond = icmp eq i64 %k.0, %size, !dbg !6879
  br i1 %exitcond, label %cleanup, label %for.body, !dbg !6876

for.body:                                         ; preds = %for.cond
  %add = add i64 %i.0, %k.0, !dbg !6880
  %11 = load i32, i32* %n_bits, align 8, !dbg !6881
  %conv = zext i32 %11 to i64, !dbg !6882
  %cmp39 = icmp ult i64 %add, %conv, !dbg !6883
  br i1 %cmp39, label %land.lhs.true41, label %for.inc, !dbg !6884

land.lhs.true41:                                  ; preds = %for.body
  %div = lshr i64 %add, 6, !dbg !6885
  %arrayidx43 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %10, i64 0, i32 3, i64 %div, !dbg !6885
  %12 = load i64, i64* %arrayidx43, align 8, !dbg !6885
  %rem = and i64 %add, 63, !dbg !6885
  %13 = shl i64 1, %rem, !dbg !6885
  %14 = and i64 %12, %13, !dbg !6885
  %tobool = icmp eq i64 %14, 0, !dbg !6885
  br i1 %tobool, label %for.inc, label %cleanup, !dbg !6886

for.inc:                                          ; preds = %land.lhs.true41, %for.body
  %inc = add i64 %k.0, 1, !dbg !6887
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6842, metadata !DIExpression()), !dbg !6878
  br label %for.cond, !dbg !6888, !llvm.loop !6889

cleanup:                                          ; preds = %for.cond, %land.lhs.true41
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true41 ], [ true, %for.cond ]
  br i1 %cleanup.dest.slot.0, label %if.end47, label %cleanup48

if.end47:                                         ; preds = %if.end35, %cleanup
  br label %cleanup48, !dbg !6891

cleanup48:                                        ; preds = %land.lhs.true22, %lor.lhs.false, %cleanup, %if.end47, %if.else34
  %retval.1 = phi i8 [ 1, %cleanup ], [ 0, %if.end47 ], [ 0, %if.else34 ], [ 1, %lor.lhs.false ], [ 1, %land.lhs.true22 ], !dbg !6845
  ret i8 %retval.1, !dbg !6892
}

declare dso_local void @emit_group_move(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @move_block_to_reg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local void @use_group_regs(%struct.rtx_def**, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @use_regs(%struct.rtx_def**, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_call_value_pop(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_call_pop(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_call_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_sibcall_value(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_sibcall(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_call_value(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_call(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @last_call_insn() local_unnamed_addr #2

declare dso_local void @add_function_usage_to(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @make_reg_eh_region_note(%struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local void @adjust_stack(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local %union.tree_node* @copy_list(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_tree_list_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @assemble_external_libcall(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @emit_push_insn(%struct.rtx_def*, i32, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_0_stat(i32, i32) local_unnamed_addr #2

declare dso_local void @emit_group_load(%struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @hard_libcall_value(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_in_bytes(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @free_temp_slots() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!1818}
!llvm.module.flags = !{!2452, !2453, !2454}
!llvm.ident = !{!2455}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "currently_expanding_call", scope: !2, file: !3, line: 1912, type: !32, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "expand_call", scope: !3, file: !3, line: 1909, type: !4, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2277)
!3 = !DIFile(filename: "calls.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !258, !6, !32}
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !7, line: 50, baseType: !8)
!7 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !10, line: 240, size: 384, elements: !11)
!10 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!11 = !{!12, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !9, file: !10, line: 242, baseType: !13, size: 16, flags: DIFlagBitField, extraData: i64 0)
!13 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9, file: !10, line: 245, baseType: !13, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !9, file: !10, line: 252, baseType: !13, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !9, file: !10, line: 257, baseType: !13, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !9, file: !10, line: 265, baseType: !13, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !9, file: !10, line: 277, baseType: !13, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !9, file: !10, line: 291, baseType: !13, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !9, file: !10, line: 298, baseType: !13, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !9, file: !10, line: 305, baseType: !13, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !9, file: !10, line: 310, baseType: !13, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !9, file: !10, line: 321, baseType: !24, size: 320, offset: 64)
!24 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !10, line: 315, size: 320, elements: !25)
!25 = !{!26, !1753, !1755, !1816, !1817}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !24, file: !10, line: 316, baseType: !27, size: 64)
!27 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !47)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !10, line: 183, baseType: !29)
!29 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !10, line: 166, size: 64, elements: !30)
!30 = !{!31, !33, !34, !38, !39, !49, !178, !190, !193, !257, !1731, !1732, !1743, !1750}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !29, file: !10, line: 168, baseType: !32, size: 32)
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !29, file: !10, line: 169, baseType: !13, size: 32)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !29, file: !10, line: 170, baseType: !35, size: 64)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
!36 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!37 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !29, file: !10, line: 171, baseType: !6, size: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !29, file: !10, line: 172, baseType: !40, size: 64)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !7, line: 53, baseType: !41)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !10, line: 359, size: 128, elements: !43)
!43 = !{!44, !45}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !42, file: !10, line: 360, baseType: !32, size: 32)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !42, file: !10, line: 361, baseType: !46, size: 64, offset: 64)
!46 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !47)
!47 = !{!48}
!48 = !DISubrange(count: 1)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !29, file: !10, line: 173, baseType: !50, size: 32)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !51, line: 7, baseType: !13, size: 32, elements: !52)
!51 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177}
!53 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!59 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!60 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!61 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!62 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!63 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!64 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!65 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!66 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!67 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!68 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!69 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!70 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!71 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!72 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!73 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!74 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!75 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!76 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!77 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!78 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!79 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!80 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!81 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!82 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!83 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!84 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!85 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!86 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!87 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!88 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!89 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!90 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!91 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!92 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!93 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!94 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!95 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!96 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!97 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!98 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!99 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!100 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!101 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!102 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!103 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!104 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!105 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!106 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!107 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!108 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!109 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!110 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!111 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!112 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!113 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!114 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!115 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!116 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!117 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!118 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!119 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!120 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!121 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!122 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!123 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!124 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!125 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!126 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!127 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!128 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!129 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!130 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!131 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!133 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!134 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!135 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!136 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!137 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!138 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!139 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!140 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!141 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!143 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!144 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!145 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!147 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!150 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!151 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!152 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!153 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!154 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!155 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!156 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!157 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!158 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!159 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!160 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!161 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!162 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!163 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!164 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!165 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!166 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!167 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!168 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!170 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!175 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!176 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!177 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !29, file: !10, line: 174, baseType: !179, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !10, line: 133, baseType: !180)
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 115, size: 32, elements: !181)
!181 = !{!182, !183, !184, !185, !186, !187, !188, !189}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !180, file: !10, line: 118, baseType: !13, size: 8, flags: DIFlagBitField, extraData: i64 0)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !180, file: !10, line: 120, baseType: !13, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !180, file: !10, line: 121, baseType: !13, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !180, file: !10, line: 123, baseType: !13, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !180, file: !10, line: 125, baseType: !13, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !180, file: !10, line: 127, baseType: !13, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !180, file: !10, line: 130, baseType: !13, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !180, file: !10, line: 132, baseType: !13, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !29, file: !10, line: 175, baseType: !191, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !10, line: 175, flags: DIFlagFwdDecl)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !29, file: !10, line: 176, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !196, line: 75, size: 256, elements: !197)
!196 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!197 = !{!198, !213, !214, !215}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !195, file: !196, line: 76, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !196, line: 68, baseType: !201)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !196, line: 63, size: 320, elements: !202)
!202 = !{!203, !205, !206, !207}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !201, file: !196, line: 64, baseType: !204, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !201, file: !196, line: 65, baseType: !204, size: 64, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !201, file: !196, line: 66, baseType: !13, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !201, file: !196, line: 67, baseType: !208, size: 128, offset: 192)
!208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !211)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !196, line: 29, baseType: !210)
!210 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!211 = !{!212}
!212 = !DISubrange(count: 2)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !195, file: !196, line: 77, baseType: !199, size: 64, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !195, file: !196, line: 78, baseType: !13, size: 32, offset: 128)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !195, file: !196, line: 79, baseType: !216, size: 64, offset: 192)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !196, line: 49, baseType: !218)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !196, line: 45, size: 832, elements: !219)
!219 = !{!220, !221, !222}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !218, file: !196, line: 46, baseType: !204, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !218, file: !196, line: 47, baseType: !194, size: 64, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !218, file: !196, line: 48, baseType: !223, size: 704, offset: 128)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !224, line: 164, size: 704, elements: !225)
!224 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!225 = !{!226, !228, !239, !240, !241, !242, !243, !244, !249, !253, !254, !255, !256}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !223, file: !224, line: 166, baseType: !227, size: 64)
!227 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !223, file: !224, line: 167, baseType: !229, size: 64, offset: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !224, line: 157, size: 192, elements: !231)
!231 = !{!232, !234, !235}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !230, file: !224, line: 159, baseType: !233, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !230, file: !224, line: 160, baseType: !229, size: 64, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !230, file: !224, line: 161, baseType: !236, size: 32, offset: 128)
!236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 32, elements: !237)
!237 = !{!238}
!238 = !DISubrange(count: 4)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !223, file: !224, line: 168, baseType: !233, size: 64, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !223, file: !224, line: 169, baseType: !233, size: 64, offset: 192)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !223, file: !224, line: 170, baseType: !233, size: 64, offset: 256)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !223, file: !224, line: 171, baseType: !227, size: 64, offset: 320)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !223, file: !224, line: 172, baseType: !32, size: 32, offset: 384)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !223, file: !224, line: 176, baseType: !245, size: 64, offset: 448)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{!229, !248, !227}
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !223, file: !224, line: 177, baseType: !250, size: 64, offset: 512)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !248, !229}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !223, file: !224, line: 178, baseType: !248, size: 64, offset: 576)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !223, file: !224, line: 179, baseType: !13, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !223, file: !224, line: 180, baseType: !13, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !223, file: !224, line: 184, baseType: !13, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !29, file: !10, line: 177, baseType: !258, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !7, line: 56, baseType: !259)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !261, line: 3371, size: 1792, elements: !262)
!261 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!262 = !{!263, !296, !302, !313, !332, !343, !348, !355, !361, !375, !387, !425, !430, !458, !475, !476, !481, !490, !496, !501, !505, !509, !1348, !1397, !1403, !1409, !1416, !1429, !1443, !1460, !1472, !1494, !1541, !1713}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !260, file: !261, line: 3372, baseType: !264, size: 64)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !261, line: 360, size: 64, elements: !265)
!265 = !{!266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !264, file: !261, line: 361, baseType: !13, size: 16, flags: DIFlagBitField, extraData: i64 0)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !264, file: !261, line: 363, baseType: !13, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !264, file: !261, line: 364, baseType: !13, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !264, file: !261, line: 365, baseType: !13, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !264, file: !261, line: 366, baseType: !13, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !264, file: !261, line: 367, baseType: !13, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !264, file: !261, line: 368, baseType: !13, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !264, file: !261, line: 369, baseType: !13, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !264, file: !261, line: 370, baseType: !13, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !264, file: !261, line: 372, baseType: !13, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !264, file: !261, line: 373, baseType: !13, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !264, file: !261, line: 374, baseType: !13, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !264, file: !261, line: 375, baseType: !13, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !264, file: !261, line: 376, baseType: !13, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !264, file: !261, line: 377, baseType: !13, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !264, file: !261, line: 378, baseType: !13, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !264, file: !261, line: 379, baseType: !13, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !264, file: !261, line: 381, baseType: !13, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !264, file: !261, line: 382, baseType: !13, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !264, file: !261, line: 383, baseType: !13, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !264, file: !261, line: 384, baseType: !13, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !264, file: !261, line: 385, baseType: !13, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !264, file: !261, line: 386, baseType: !13, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !264, file: !261, line: 387, baseType: !13, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !264, file: !261, line: 388, baseType: !13, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !264, file: !261, line: 390, baseType: !13, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !264, file: !261, line: 391, baseType: !13, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !264, file: !261, line: 392, baseType: !13, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !264, file: !261, line: 394, baseType: !13, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !264, file: !261, line: 399, baseType: !13, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !260, file: !261, line: 3373, baseType: !297, size: 192)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !261, line: 402, size: 192, elements: !298)
!298 = !{!299, !300, !301}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !297, file: !261, line: 403, baseType: !264, size: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !297, file: !261, line: 404, baseType: !258, size: 64, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !297, file: !261, line: 405, baseType: !258, size: 64, offset: 128)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !260, file: !261, line: 3374, baseType: !303, size: 320)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !261, line: 1384, size: 320, elements: !304)
!304 = !{!305, !306}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !303, file: !261, line: 1385, baseType: !297, size: 192)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !303, file: !261, line: 1386, baseType: !307, size: 128, offset: 192)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !308, line: 58, baseType: !309)
!308 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !308, line: 54, size: 128, elements: !310)
!310 = !{!311, !312}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !309, file: !308, line: 56, baseType: !210, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !309, file: !308, line: 57, baseType: !227, size: 64, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !260, file: !261, line: 3375, baseType: !314, size: 256)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !261, line: 1397, size: 256, elements: !315)
!315 = !{!316, !317}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !314, file: !261, line: 1398, baseType: !297, size: 192)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !314, file: !261, line: 1399, baseType: !318, size: 64, offset: 192)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !320, line: 52, size: 256, elements: !321)
!320 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!321 = !{!322, !323, !324, !325, !326, !327, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !319, file: !320, line: 56, baseType: !13, size: 2, flags: DIFlagBitField, extraData: i64 0)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !319, file: !320, line: 57, baseType: !13, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !319, file: !320, line: 58, baseType: !13, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !319, file: !320, line: 59, baseType: !13, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !319, file: !320, line: 60, baseType: !13, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !319, file: !320, line: 61, baseType: !13, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !319, file: !320, line: 62, baseType: !329, size: 192, offset: 64)
!329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 192, elements: !330)
!330 = !{!331}
!331 = !DISubrange(count: 3)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !260, file: !261, line: 3376, baseType: !333, size: 256)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !261, line: 1408, size: 256, elements: !334)
!334 = !{!335, !336}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !333, file: !261, line: 1409, baseType: !297, size: 192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !333, file: !261, line: 1410, baseType: !337, size: 64, offset: 192)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !339, line: 27, size: 192, elements: !340)
!339 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!340 = !{!341, !342}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !338, file: !339, line: 29, baseType: !307, size: 128)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !338, file: !339, line: 30, baseType: !50, size: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !260, file: !261, line: 3377, baseType: !344, size: 256)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !261, line: 1437, size: 256, elements: !345)
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !344, file: !261, line: 1438, baseType: !297, size: 192)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !344, file: !261, line: 1439, baseType: !258, size: 64, offset: 192)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !260, file: !261, line: 3378, baseType: !349, size: 256)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !261, line: 1418, size: 256, elements: !350)
!350 = !{!351, !352, !353}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !349, file: !261, line: 1419, baseType: !297, size: 192)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !349, file: !261, line: 1420, baseType: !32, size: 32, offset: 192)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !349, file: !261, line: 1421, baseType: !354, size: 8, offset: 224)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 8, elements: !47)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !260, file: !261, line: 3379, baseType: !356, size: 320)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !261, line: 1428, size: 320, elements: !357)
!357 = !{!358, !359, !360}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !356, file: !261, line: 1429, baseType: !297, size: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !356, file: !261, line: 1430, baseType: !258, size: 64, offset: 192)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !356, file: !261, line: 1431, baseType: !258, size: 64, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !260, file: !261, line: 3380, baseType: !362, size: 320)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !261, line: 1460, size: 320, elements: !363)
!363 = !{!364, !365}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !362, file: !261, line: 1461, baseType: !297, size: 192)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !362, file: !261, line: 1462, baseType: !366, size: 128, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !367, line: 31, size: 128, elements: !368)
!367 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!368 = !{!369, !373, !374}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !366, file: !367, line: 32, baseType: !370, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !366, file: !367, line: 33, baseType: !13, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !366, file: !367, line: 34, baseType: !13, size: 32, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !260, file: !261, line: 3381, baseType: !376, size: 384)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !261, line: 2507, size: 384, elements: !377)
!377 = !{!378, !379, !384, !385, !386}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !376, file: !261, line: 2508, baseType: !297, size: 192)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !376, file: !261, line: 2509, baseType: !380, size: 32, offset: 192)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !381, line: 58, baseType: !382)
!381 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !383, line: 44, baseType: !13)
!383 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!384 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !376, file: !261, line: 2510, baseType: !13, size: 32, offset: 224)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !376, file: !261, line: 2511, baseType: !258, size: 64, offset: 256)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !376, file: !261, line: 2512, baseType: !258, size: 64, offset: 320)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !260, file: !261, line: 3382, baseType: !388, size: 896)
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !261, line: 2652, size: 896, elements: !389)
!389 = !{!390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !388, file: !261, line: 2653, baseType: !376, size: 384)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !388, file: !261, line: 2654, baseType: !258, size: 64, offset: 384)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !388, file: !261, line: 2656, baseType: !13, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !388, file: !261, line: 2658, baseType: !13, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !388, file: !261, line: 2659, baseType: !13, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !388, file: !261, line: 2660, baseType: !13, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !388, file: !261, line: 2661, baseType: !13, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !388, file: !261, line: 2662, baseType: !13, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !388, file: !261, line: 2663, baseType: !13, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !388, file: !261, line: 2664, baseType: !13, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !388, file: !261, line: 2666, baseType: !13, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !388, file: !261, line: 2667, baseType: !13, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !388, file: !261, line: 2668, baseType: !13, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !388, file: !261, line: 2669, baseType: !13, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !388, file: !261, line: 2670, baseType: !13, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !388, file: !261, line: 2671, baseType: !13, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !388, file: !261, line: 2672, baseType: !13, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !388, file: !261, line: 2673, baseType: !13, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !388, file: !261, line: 2674, baseType: !13, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !388, file: !261, line: 2678, baseType: !13, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !388, file: !261, line: 2682, baseType: !13, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !388, file: !261, line: 2685, baseType: !13, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !388, file: !261, line: 2688, baseType: !13, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !388, file: !261, line: 2690, baseType: !13, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !388, file: !261, line: 2692, baseType: !13, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !388, file: !261, line: 2695, baseType: !13, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !388, file: !261, line: 2698, baseType: !13, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !388, file: !261, line: 2703, baseType: !13, size: 32, offset: 512)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !388, file: !261, line: 2705, baseType: !258, size: 64, offset: 576)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !388, file: !261, line: 2706, baseType: !258, size: 64, offset: 640)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !388, file: !261, line: 2707, baseType: !258, size: 64, offset: 704)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !388, file: !261, line: 2708, baseType: !258, size: 64, offset: 768)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !388, file: !261, line: 2711, baseType: !423, size: 64, offset: 832)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !261, line: 2711, flags: DIFlagFwdDecl)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !260, file: !261, line: 3383, baseType: !426, size: 960)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !261, line: 2756, size: 960, elements: !427)
!427 = !{!428, !429}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !426, file: !261, line: 2757, baseType: !388, size: 896)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !426, file: !261, line: 2758, baseType: !6, size: 64, offset: 896)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !260, file: !261, line: 3384, baseType: !431, size: 1472)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !261, line: 3114, size: 1472, elements: !432)
!432 = !{!433, !454, !455, !456, !457}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !431, file: !261, line: 3115, baseType: !434, size: 1216)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !261, line: 2984, size: 1216, elements: !435)
!435 = !{!436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !434, file: !261, line: 2985, baseType: !426, size: 960)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !434, file: !261, line: 2986, baseType: !258, size: 64, offset: 960)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !434, file: !261, line: 2987, baseType: !258, size: 64, offset: 1024)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !434, file: !261, line: 2988, baseType: !258, size: 64, offset: 1088)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !434, file: !261, line: 2991, baseType: !13, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !434, file: !261, line: 2992, baseType: !13, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !434, file: !261, line: 2993, baseType: !13, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !434, file: !261, line: 2994, baseType: !13, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !434, file: !261, line: 2995, baseType: !13, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !434, file: !261, line: 2996, baseType: !13, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !434, file: !261, line: 2998, baseType: !13, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !434, file: !261, line: 3000, baseType: !13, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !434, file: !261, line: 3002, baseType: !13, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !434, file: !261, line: 3003, baseType: !13, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !434, file: !261, line: 3004, baseType: !13, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !434, file: !261, line: 3005, baseType: !13, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !434, file: !261, line: 3007, baseType: !13, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !434, file: !261, line: 3010, baseType: !13, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !431, file: !261, line: 3117, baseType: !258, size: 64, offset: 1216)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !431, file: !261, line: 3119, baseType: !258, size: 64, offset: 1280)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !431, file: !261, line: 3121, baseType: !258, size: 64, offset: 1344)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !431, file: !261, line: 3123, baseType: !258, size: 64, offset: 1408)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !260, file: !261, line: 3385, baseType: !459, size: 1088)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !261, line: 2874, size: 1088, elements: !460)
!460 = !{!461, !462, !463}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !459, file: !261, line: 2875, baseType: !426, size: 960)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !459, file: !261, line: 2876, baseType: !6, size: 64, offset: 960)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !459, file: !261, line: 2877, baseType: !464, size: 64, offset: 1024)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !466, line: 172, size: 128, elements: !467)
!466 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!467 = !{!468, !469, !470, !471, !472, !473, !474}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !465, file: !466, line: 174, baseType: !13, size: 1, flags: DIFlagBitField, extraData: i64 0)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !465, file: !466, line: 178, baseType: !13, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !465, file: !466, line: 183, baseType: !13, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !465, file: !466, line: 187, baseType: !13, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !465, file: !466, line: 192, baseType: !13, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !465, file: !466, line: 195, baseType: !13, size: 32, offset: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !465, file: !466, line: 199, baseType: !258, size: 64, offset: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !260, file: !261, line: 3386, baseType: !434, size: 1216)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !260, file: !261, line: 3387, baseType: !477, size: 1280)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !261, line: 3093, size: 1280, elements: !478)
!478 = !{!479, !480}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !477, file: !261, line: 3094, baseType: !434, size: 1216)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !477, file: !261, line: 3095, baseType: !464, size: 64, offset: 1216)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !260, file: !261, line: 3388, baseType: !482, size: 1216)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !261, line: 2824, size: 1216, elements: !483)
!483 = !{!484, !485, !486, !487, !488, !489}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !482, file: !261, line: 2825, baseType: !388, size: 896)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !482, file: !261, line: 2827, baseType: !258, size: 64, offset: 896)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !482, file: !261, line: 2828, baseType: !258, size: 64, offset: 960)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !482, file: !261, line: 2829, baseType: !258, size: 64, offset: 1024)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !482, file: !261, line: 2830, baseType: !258, size: 64, offset: 1088)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !482, file: !261, line: 2831, baseType: !258, size: 64, offset: 1152)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !260, file: !261, line: 3389, baseType: !491, size: 1024)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !261, line: 2850, size: 1024, elements: !492)
!492 = !{!493, !494, !495}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !491, file: !261, line: 2851, baseType: !426, size: 960)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !491, file: !261, line: 2852, baseType: !32, size: 32, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !491, file: !261, line: 2853, baseType: !32, size: 32, offset: 992)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !260, file: !261, line: 3390, baseType: !497, size: 1024)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !261, line: 2857, size: 1024, elements: !498)
!498 = !{!499, !500}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !497, file: !261, line: 2858, baseType: !426, size: 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !497, file: !261, line: 2859, baseType: !464, size: 64, offset: 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !260, file: !261, line: 3391, baseType: !502, size: 960)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !261, line: 2862, size: 960, elements: !503)
!503 = !{!504}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !502, file: !261, line: 2863, baseType: !426, size: 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !260, file: !261, line: 3392, baseType: !506, size: 1472)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !261, line: 3304, size: 1472, elements: !507)
!507 = !{!508}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !506, file: !261, line: 3305, baseType: !431, size: 1472)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !260, file: !261, line: 3393, baseType: !510, size: 1792)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !261, line: 3248, size: 1792, elements: !511)
!511 = !{!512, !513, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !510, file: !261, line: 3249, baseType: !431, size: 1472)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !510, file: !261, line: 3251, baseType: !514, size: 64, offset: 1472)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !516, line: 463, size: 1152, elements: !517)
!516 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!517 = !{!518, !689, !1207, !1208, !1263, !1266, !1267, !1268, !1269, !1270, !1271, !1300, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !515, file: !516, line: 464, baseType: !519, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !521, line: 194, size: 384, elements: !522)
!521 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!522 = !{!523, !578, !591, !605, !657, !670}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !520, file: !521, line: 197, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !521, line: 182, baseType: !525)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !521, line: 116, size: 704, elements: !527)
!527 = !{!528, !529, !530, !531, !532, !539, !566, !575, !576, !577}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !526, file: !521, line: 119, baseType: !525, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !526, file: !521, line: 122, baseType: !525, size: 64, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !526, file: !521, line: 123, baseType: !525, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !526, file: !521, line: 126, baseType: !32, size: 32, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !526, file: !521, line: 129, baseType: !533, size: 32, offset: 224)
!533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !521, line: 30, baseType: !13, size: 32, elements: !534)
!534 = !{!535, !536, !537, !538}
!535 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!536 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!537 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!538 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !526, file: !521, line: 165, baseType: !540, size: 192, offset: 256)
!540 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !521, line: 132, size: 192, elements: !541)
!541 = !{!542, !555, !561}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !540, file: !521, line: 137, baseType: !543, size: 128)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !521, line: 133, size: 128, elements: !544)
!544 = !{!545, !554}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !543, file: !521, line: 135, baseType: !546, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !521, line: 93, size: 320, elements: !548)
!548 = !{!549, !550, !551, !552, !553}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !547, file: !521, line: 96, baseType: !546, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !547, file: !521, line: 97, baseType: !546, size: 64, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !547, file: !521, line: 101, baseType: !258, size: 64, offset: 128)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !547, file: !521, line: 106, baseType: !258, size: 64, offset: 192)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !547, file: !521, line: 111, baseType: !258, size: 64, offset: 256)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !543, file: !521, line: 136, baseType: !546, size: 64, offset: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !540, file: !521, line: 151, baseType: !556, size: 192)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !521, line: 139, size: 192, elements: !557)
!557 = !{!558, !559, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !556, file: !521, line: 141, baseType: !258, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !556, file: !521, line: 145, baseType: !258, size: 64, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !556, file: !521, line: 150, baseType: !32, size: 32, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !540, file: !521, line: 164, baseType: !562, size: 128)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !521, line: 153, size: 128, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !562, file: !521, line: 161, baseType: !258, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !562, file: !521, line: 163, baseType: !380, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !526, file: !521, line: 168, baseType: !567, size: 64, offset: 448)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !521, line: 67, size: 320, elements: !569)
!569 = !{!570, !571, !572, !573, !574}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !568, file: !521, line: 70, baseType: !567, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !568, file: !521, line: 73, baseType: !525, size: 64, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !568, file: !521, line: 78, baseType: !258, size: 64, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !568, file: !521, line: 85, baseType: !6, size: 64, offset: 192)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !568, file: !521, line: 88, baseType: !32, size: 32, offset: 256)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !526, file: !521, line: 173, baseType: !6, size: 64, offset: 512)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !526, file: !521, line: 173, baseType: !6, size: 64, offset: 576)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !526, file: !521, line: 177, baseType: !372, size: 8, offset: 640)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !520, file: !521, line: 200, baseType: !579, size: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !521, line: 185, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !521, line: 185, size: 128, elements: !582)
!582 = !{!583}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !581, file: !521, line: 185, baseType: !584, size: 128)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !521, line: 184, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !521, line: 184, size: 128, elements: !586)
!586 = !{!587, !588, !589}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !585, file: !521, line: 184, baseType: !13, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !585, file: !521, line: 184, baseType: !13, size: 32, offset: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !585, file: !521, line: 184, baseType: !590, size: 64, offset: 64)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 64, elements: !47)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !520, file: !521, line: 203, baseType: !592, size: 64, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !521, line: 189, baseType: !594)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !521, line: 189, size: 128, elements: !595)
!595 = !{!596}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !594, file: !521, line: 189, baseType: !597, size: 128)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !521, line: 188, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !521, line: 188, size: 128, elements: !599)
!599 = !{!600, !601, !602}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !598, file: !521, line: 188, baseType: !13, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !598, file: !521, line: 188, baseType: !13, size: 32, offset: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !598, file: !521, line: 188, baseType: !603, size: 64, offset: 64)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !47)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !521, line: 180, baseType: !567)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !520, file: !521, line: 207, baseType: !606, size: 64, offset: 192)
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !607, line: 144, baseType: !608)
!607 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !607, line: 100, size: 896, elements: !610)
!610 = !{!611, !619, !624, !629, !631, !634, !635, !636, !637, !638, !643, !645, !646, !651, !656}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !609, file: !607, line: 102, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !607, line: 52, baseType: !613)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DISubroutineType(types: !615)
!615 = !{!616, !617}
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !607, line: 47, baseType: !13)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !609, file: !607, line: 105, baseType: !620, size: 64, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !607, line: 59, baseType: !621)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DISubroutineType(types: !623)
!623 = !{!32, !617, !617}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !609, file: !607, line: 108, baseType: !625, size: 64, offset: 128)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !607, line: 63, baseType: !626)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DISubroutineType(types: !628)
!628 = !{null, !248}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !609, file: !607, line: 111, baseType: !630, size: 64, offset: 192)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !609, file: !607, line: 114, baseType: !632, size: 64, offset: 256)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !633, line: 46, baseType: !210)
!633 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!634 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !609, file: !607, line: 117, baseType: !632, size: 64, offset: 320)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !609, file: !607, line: 120, baseType: !632, size: 64, offset: 384)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !609, file: !607, line: 124, baseType: !13, size: 32, offset: 448)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !609, file: !607, line: 128, baseType: !13, size: 32, offset: 480)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !609, file: !607, line: 131, baseType: !639, size: 64, offset: 512)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !607, line: 75, baseType: !640)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{!248, !632, !632}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !609, file: !607, line: 132, baseType: !644, size: 64, offset: 576)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !607, line: 78, baseType: !626)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !609, file: !607, line: 135, baseType: !248, size: 64, offset: 640)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !609, file: !607, line: 136, baseType: !647, size: 64, offset: 704)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !607, line: 82, baseType: !648)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DISubroutineType(types: !650)
!650 = !{!248, !248, !632, !632}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !609, file: !607, line: 137, baseType: !652, size: 64, offset: 768)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !607, line: 83, baseType: !653)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{null, !248, !248}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !609, file: !607, line: 141, baseType: !13, size: 32, offset: 832)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !520, file: !521, line: 211, baseType: !658, size: 64, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !261, line: 183, baseType: !660)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !261, line: 183, size: 128, elements: !661)
!661 = !{!662}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !660, file: !261, line: 183, baseType: !663, size: 128)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !261, line: 182, baseType: !664)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !261, line: 182, size: 128, elements: !665)
!665 = !{!666, !667, !668}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !664, file: !261, line: 182, baseType: !13, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !664, file: !261, line: 182, baseType: !13, size: 32, offset: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !664, file: !261, line: 182, baseType: !669, size: 64, offset: 64)
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 64, elements: !47)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !520, file: !521, line: 220, baseType: !671, size: 64, offset: 320)
!671 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !521, line: 217, size: 64, elements: !672)
!672 = !{!673, !674}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !671, file: !521, line: 218, baseType: !658, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !671, file: !521, line: 219, baseType: !675, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !677, line: 29, baseType: !678)
!677 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !677, line: 29, size: 96, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !678, file: !677, line: 29, baseType: !681, size: 96)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !677, line: 27, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !677, line: 27, size: 96, elements: !683)
!683 = !{!684, !685, !686}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !682, file: !677, line: 27, baseType: !13, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !682, file: !677, line: 27, baseType: !13, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !682, file: !677, line: 27, baseType: !687, size: 8, offset: 64)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 8, elements: !47)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !677, line: 26, baseType: !372)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !515, file: !516, line: 467, baseType: !690, size: 64, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !692, line: 374, size: 640, elements: !693)
!692 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!693 = !{!694, !1172, !1173, !1186, !1187, !1188, !1189, !1190, !1196, !1203, !1205, !1206}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !691, file: !692, line: 377, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !7, line: 111, baseType: !696)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !692, line: 217, size: 832, elements: !698)
!698 = !{!699, !1137, !1138, !1139, !1142, !1146, !1147, !1148, !1166, !1167, !1168, !1169, !1170, !1171}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !697, file: !692, line: 219, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !692, line: 151, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !692, line: 151, size: 128, elements: !703)
!703 = !{!704}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !702, file: !692, line: 151, baseType: !705, size: 128)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !692, line: 150, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !692, line: 150, size: 128, elements: !707)
!707 = !{!708, !709, !710}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !706, file: !692, line: 150, baseType: !13, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !706, file: !692, line: 150, baseType: !13, size: 32, offset: 32)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !706, file: !692, line: 150, baseType: !711, size: 64, offset: 64)
!711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !712, size: 64, elements: !47)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !7, line: 108, baseType: !713)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !692, line: 122, size: 512, elements: !715)
!715 = !{!716, !717, !718, !1129, !1130, !1131, !1132, !1133, !1134, !1135}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !714, file: !692, line: 124, baseType: !696, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !714, file: !692, line: 125, baseType: !696, size: 64, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !714, file: !692, line: 131, baseType: !719, size: 64, offset: 128)
!719 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !692, line: 128, size: 64, elements: !720)
!720 = !{!721, !1128}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !719, file: !692, line: 129, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !7, line: 66, baseType: !723)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !725, line: 143, size: 192, elements: !726)
!725 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!726 = !{!727, !1126, !1127}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !724, file: !725, line: 145, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !7, line: 69, baseType: !729)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !725, line: 136, size: 192, elements: !731)
!731 = !{!732, !1124, !1125}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !730, file: !725, line: 137, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !7, line: 58, baseType: !734)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !725, line: 737, size: 768, elements: !736)
!736 = !{!737, !754, !787, !793, !798, !803, !810, !816, !822, !827, !841, !846, !852, !857, !867, !872, !1082, !1089, !1096, !1102, !1107, !1113, !1119}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !735, file: !725, line: 738, baseType: !738, size: 256)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !725, line: 271, size: 256, elements: !739)
!739 = !{!740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !738, file: !725, line: 274, baseType: !13, size: 8, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !738, file: !725, line: 277, baseType: !13, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !738, file: !725, line: 281, baseType: !13, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !738, file: !725, line: 284, baseType: !13, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !738, file: !725, line: 291, baseType: !13, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !738, file: !725, line: 295, baseType: !13, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !738, file: !725, line: 298, baseType: !13, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !738, file: !725, line: 301, baseType: !13, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !738, file: !725, line: 307, baseType: !13, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !738, file: !725, line: 312, baseType: !13, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !738, file: !725, line: 316, baseType: !380, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !738, file: !725, line: 319, baseType: !13, size: 32, offset: 96)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !738, file: !725, line: 323, baseType: !696, size: 64, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !738, file: !725, line: 327, baseType: !258, size: 64, offset: 192)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !735, file: !725, line: 739, baseType: !755, size: 448)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !725, line: 350, size: 448, elements: !756)
!756 = !{!757, !786}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !755, file: !725, line: 353, baseType: !758, size: 384)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !725, line: 333, size: 384, elements: !759)
!759 = !{!760, !761, !769}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !758, file: !725, line: 336, baseType: !738, size: 256)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !758, file: !725, line: 343, baseType: !762, size: 64, offset: 256)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !764, line: 37, size: 128, elements: !765)
!764 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!765 = !{!766, !767}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !763, file: !764, line: 39, baseType: !762, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !763, file: !764, line: 40, baseType: !768, size: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !758, file: !725, line: 344, baseType: !770, size: 64, offset: 320)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !764, line: 45, size: 320, elements: !772)
!772 = !{!773, !774}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !771, file: !764, line: 47, baseType: !770, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !771, file: !764, line: 48, baseType: !775, size: 256, offset: 64)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !261, line: 1883, size: 256, elements: !776)
!776 = !{!777, !779, !780, !785}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !775, file: !261, line: 1884, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !775, file: !261, line: 1885, baseType: !778, size: 64, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !775, file: !261, line: 1891, baseType: !781, size: 64, offset: 128)
!781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !775, file: !261, line: 1891, size: 64, elements: !782)
!782 = !{!783, !784}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !781, file: !261, line: 1891, baseType: !733, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !781, file: !261, line: 1891, baseType: !258, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !775, file: !261, line: 1892, baseType: !768, size: 64, offset: 192)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !755, file: !725, line: 359, baseType: !669, size: 64, offset: 384)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !735, file: !725, line: 740, baseType: !788, size: 512)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !725, line: 365, size: 512, elements: !789)
!789 = !{!790, !791, !792}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !788, file: !725, line: 368, baseType: !758, size: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !788, file: !725, line: 373, baseType: !258, size: 64, offset: 384)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !788, file: !725, line: 374, baseType: !258, size: 64, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !735, file: !725, line: 741, baseType: !794, size: 576)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !725, line: 380, size: 576, elements: !795)
!795 = !{!796, !797}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !794, file: !725, line: 383, baseType: !788, size: 512)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !794, file: !725, line: 389, baseType: !669, size: 64, offset: 512)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !735, file: !725, line: 742, baseType: !799, size: 320)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !725, line: 395, size: 320, elements: !800)
!800 = !{!801, !802}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !799, file: !725, line: 397, baseType: !738, size: 256)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !799, file: !725, line: 400, baseType: !722, size: 64, offset: 256)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !735, file: !725, line: 743, baseType: !804, size: 448)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !725, line: 406, size: 448, elements: !805)
!805 = !{!806, !807, !808, !809}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !804, file: !725, line: 408, baseType: !738, size: 256)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !804, file: !725, line: 412, baseType: !258, size: 64, offset: 256)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !804, file: !725, line: 420, baseType: !258, size: 64, offset: 320)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !804, file: !725, line: 423, baseType: !722, size: 64, offset: 384)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !735, file: !725, line: 744, baseType: !811, size: 384)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !725, line: 429, size: 384, elements: !812)
!812 = !{!813, !814, !815}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !811, file: !725, line: 431, baseType: !738, size: 256)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !811, file: !725, line: 434, baseType: !258, size: 64, offset: 256)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !811, file: !725, line: 437, baseType: !722, size: 64, offset: 320)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !735, file: !725, line: 745, baseType: !817, size: 384)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !725, line: 443, size: 384, elements: !818)
!818 = !{!819, !820, !821}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !817, file: !725, line: 445, baseType: !738, size: 256)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !817, file: !725, line: 449, baseType: !258, size: 64, offset: 256)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !817, file: !725, line: 453, baseType: !722, size: 64, offset: 320)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !735, file: !725, line: 746, baseType: !823, size: 320)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !725, line: 459, size: 320, elements: !824)
!824 = !{!825, !826}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !823, file: !725, line: 461, baseType: !738, size: 256)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !823, file: !725, line: 464, baseType: !258, size: 64, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !735, file: !725, line: 747, baseType: !828, size: 768)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !725, line: 469, size: 768, elements: !829)
!829 = !{!830, !831, !832, !833, !834}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !828, file: !725, line: 471, baseType: !738, size: 256)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !828, file: !725, line: 474, baseType: !13, size: 32, offset: 256)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !828, file: !725, line: 475, baseType: !13, size: 32, offset: 288)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !828, file: !725, line: 478, baseType: !258, size: 64, offset: 320)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !828, file: !725, line: 481, baseType: !835, size: 384, offset: 384)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !836, size: 384, elements: !47)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !261, line: 1917, size: 384, elements: !837)
!837 = !{!838, !839, !840}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !836, file: !261, line: 1920, baseType: !775, size: 256)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !836, file: !261, line: 1921, baseType: !258, size: 64, offset: 256)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !836, file: !261, line: 1922, baseType: !380, size: 32, offset: 320)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !735, file: !725, line: 748, baseType: !842, size: 320)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !725, line: 487, size: 320, elements: !843)
!843 = !{!844, !845}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !842, file: !725, line: 490, baseType: !738, size: 256)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !842, file: !725, line: 494, baseType: !32, size: 32, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !735, file: !725, line: 749, baseType: !847, size: 384)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !725, line: 500, size: 384, elements: !848)
!848 = !{!849, !850, !851}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !847, file: !725, line: 502, baseType: !738, size: 256)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !847, file: !725, line: 506, baseType: !722, size: 64, offset: 256)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !847, file: !725, line: 510, baseType: !722, size: 64, offset: 320)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !735, file: !725, line: 750, baseType: !853, size: 320)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !725, line: 529, size: 320, elements: !854)
!854 = !{!855, !856}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !853, file: !725, line: 531, baseType: !738, size: 256)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !853, file: !725, line: 540, baseType: !722, size: 64, offset: 256)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !735, file: !725, line: 751, baseType: !858, size: 704)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !725, line: 546, size: 704, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865, !866}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !858, file: !725, line: 549, baseType: !788, size: 512)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !858, file: !725, line: 553, baseType: !35, size: 64, offset: 512)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !858, file: !725, line: 557, baseType: !372, size: 8, offset: 576)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !858, file: !725, line: 558, baseType: !372, size: 8, offset: 584)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !858, file: !725, line: 559, baseType: !372, size: 8, offset: 592)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !858, file: !725, line: 560, baseType: !372, size: 8, offset: 600)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !858, file: !725, line: 566, baseType: !669, size: 64, offset: 640)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !735, file: !725, line: 752, baseType: !868, size: 384)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !725, line: 571, size: 384, elements: !869)
!869 = !{!870, !871}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !868, file: !725, line: 573, baseType: !799, size: 320)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !868, file: !725, line: 577, baseType: !258, size: 64, offset: 320)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !735, file: !725, line: 753, baseType: !873, size: 576)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !725, line: 600, size: 576, elements: !874)
!874 = !{!875, !876, !877, !878, !1081}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !873, file: !725, line: 602, baseType: !799, size: 320)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !873, file: !725, line: 605, baseType: !258, size: 64, offset: 320)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !873, file: !725, line: 609, baseType: !632, size: 64, offset: 384)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !873, file: !725, line: 612, baseType: !879, size: 64, offset: 448)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !725, line: 581, size: 320, elements: !881)
!881 = !{!882, !1077, !1078, !1079, !1080}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !880, file: !725, line: 583, baseType: !883, size: 32)
!883 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !261, line: 39, baseType: !13, size: 32, elements: !884)
!884 = !{!885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076}
!885 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!886 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!887 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!888 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!889 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!890 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!891 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!892 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!893 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!894 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!895 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!896 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!897 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!898 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!899 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!900 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!901 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!902 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!903 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!904 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!905 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!906 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!907 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!908 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!909 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!910 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!911 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!912 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!913 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!914 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!915 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!916 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!917 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!918 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!919 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!920 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!921 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!922 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!923 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!924 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!925 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!926 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!927 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!928 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!929 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!930 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!931 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!932 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!933 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!934 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!935 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!936 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!937 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!938 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!939 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!940 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!941 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!942 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!943 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!944 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!945 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!946 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!947 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!948 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!949 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!950 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!951 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!952 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!953 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!954 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!955 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!956 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!957 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!958 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!959 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!960 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!961 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!962 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!963 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!964 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!965 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!966 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!967 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!968 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!969 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!970 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!971 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!972 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!973 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!974 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!975 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!976 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!977 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!978 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!979 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!980 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!981 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!982 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!983 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!984 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!985 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!986 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!987 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!988 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!989 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!990 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!991 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!992 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!993 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!994 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!995 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!996 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!997 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!998 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!999 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!1000 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!1001 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!1002 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!1003 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!1004 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!1005 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!1006 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!1007 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!1008 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!1009 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!1010 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!1011 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!1012 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!1013 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!1014 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!1015 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!1016 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!1017 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!1018 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!1019 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!1020 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!1021 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!1022 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!1023 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!1024 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!1025 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!1026 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!1027 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!1028 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!1029 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!1030 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!1031 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!1032 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!1033 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!1034 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!1035 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!1036 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!1037 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!1038 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!1039 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!1040 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!1041 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!1042 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!1043 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!1044 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!1045 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!1046 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!1047 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!1048 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!1049 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!1050 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!1051 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!1052 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!1053 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!1054 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!1055 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!1056 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!1057 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!1058 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!1059 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!1060 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!1061 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!1062 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!1063 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!1064 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!1065 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!1066 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!1067 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!1068 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!1069 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!1070 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!1071 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!1072 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!1073 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!1074 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!1075 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!1076 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !880, file: !725, line: 586, baseType: !258, size: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !880, file: !725, line: 589, baseType: !258, size: 64, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !880, file: !725, line: 592, baseType: !258, size: 64, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !880, file: !725, line: 595, baseType: !258, size: 64, offset: 256)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !873, file: !725, line: 616, baseType: !722, size: 64, offset: 512)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !735, file: !725, line: 754, baseType: !1083, size: 512)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !725, line: 622, size: 512, elements: !1084)
!1084 = !{!1085, !1086, !1087, !1088}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1083, file: !725, line: 624, baseType: !799, size: 320)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1083, file: !725, line: 628, baseType: !258, size: 64, offset: 320)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1083, file: !725, line: 632, baseType: !258, size: 64, offset: 384)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1083, file: !725, line: 636, baseType: !258, size: 64, offset: 448)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !735, file: !725, line: 755, baseType: !1090, size: 704)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !725, line: 642, size: 704, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1090, file: !725, line: 644, baseType: !1083, size: 512)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1090, file: !725, line: 648, baseType: !258, size: 64, offset: 512)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1090, file: !725, line: 652, baseType: !258, size: 64, offset: 576)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1090, file: !725, line: 653, baseType: !258, size: 64, offset: 640)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !735, file: !725, line: 756, baseType: !1097, size: 448)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !725, line: 663, size: 448, elements: !1098)
!1098 = !{!1099, !1100, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1097, file: !725, line: 665, baseType: !799, size: 320)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1097, file: !725, line: 668, baseType: !258, size: 64, offset: 320)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1097, file: !725, line: 673, baseType: !258, size: 64, offset: 384)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !735, file: !725, line: 757, baseType: !1103, size: 384)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !725, line: 694, size: 384, elements: !1104)
!1104 = !{!1105, !1106}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1103, file: !725, line: 696, baseType: !799, size: 320)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1103, file: !725, line: 699, baseType: !258, size: 64, offset: 320)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !735, file: !725, line: 758, baseType: !1108, size: 384)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !725, line: 681, size: 384, elements: !1109)
!1109 = !{!1110, !1111, !1112}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1108, file: !725, line: 683, baseType: !738, size: 256)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1108, file: !725, line: 686, baseType: !258, size: 64, offset: 256)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1108, file: !725, line: 689, baseType: !258, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !735, file: !725, line: 759, baseType: !1114, size: 384)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !725, line: 707, size: 384, elements: !1115)
!1115 = !{!1116, !1117, !1118}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1114, file: !725, line: 709, baseType: !738, size: 256)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1114, file: !725, line: 712, baseType: !258, size: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1114, file: !725, line: 712, baseType: !258, size: 64, offset: 320)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !735, file: !725, line: 760, baseType: !1120, size: 320)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !725, line: 718, size: 320, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1120, file: !725, line: 720, baseType: !738, size: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1120, file: !725, line: 723, baseType: !258, size: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !730, file: !725, line: 138, baseType: !729, size: 64, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !730, file: !725, line: 139, baseType: !729, size: 64, offset: 128)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !724, file: !725, line: 146, baseType: !728, size: 64, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !724, file: !725, line: 152, baseType: !722, size: 64, offset: 128)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !719, file: !692, line: 130, baseType: !6, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !714, file: !692, line: 134, baseType: !248, size: 64, offset: 192)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !714, file: !692, line: 137, baseType: !258, size: 64, offset: 256)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !714, file: !692, line: 138, baseType: !380, size: 32, offset: 320)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !714, file: !692, line: 142, baseType: !13, size: 32, offset: 352)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !714, file: !692, line: 144, baseType: !32, size: 32, offset: 384)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !714, file: !692, line: 145, baseType: !32, size: 32, offset: 416)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !714, file: !692, line: 146, baseType: !1136, size: 64, offset: 448)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !692, line: 119, baseType: !227)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !697, file: !692, line: 220, baseType: !700, size: 64, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !697, file: !692, line: 223, baseType: !248, size: 64, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !697, file: !692, line: 226, baseType: !1140, size: 64, offset: 192)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !692, line: 185, flags: DIFlagFwdDecl)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !697, file: !692, line: 229, baseType: !1143, size: 128, offset: 256)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1144, size: 128, elements: !211)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !692, line: 229, flags: DIFlagFwdDecl)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !697, file: !692, line: 232, baseType: !696, size: 64, offset: 384)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !697, file: !692, line: 233, baseType: !696, size: 64, offset: 448)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !697, file: !692, line: 238, baseType: !1149, size: 64, offset: 512)
!1149 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !692, line: 235, size: 64, elements: !1150)
!1150 = !{!1151, !1157}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1149, file: !692, line: 236, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !692, line: 273, size: 128, elements: !1154)
!1154 = !{!1155, !1156}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1153, file: !692, line: 275, baseType: !722, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1153, file: !692, line: 278, baseType: !722, size: 64, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1149, file: !692, line: 237, baseType: !1158, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !692, line: 259, size: 320, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1159, file: !692, line: 261, baseType: !6, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1159, file: !692, line: 262, baseType: !6, size: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1159, file: !692, line: 266, baseType: !6, size: 64, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1159, file: !692, line: 267, baseType: !6, size: 64, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1159, file: !692, line: 270, baseType: !32, size: 32, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !697, file: !692, line: 241, baseType: !1136, size: 64, offset: 576)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !697, file: !692, line: 244, baseType: !32, size: 32, offset: 640)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !697, file: !692, line: 247, baseType: !32, size: 32, offset: 672)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !697, file: !692, line: 250, baseType: !32, size: 32, offset: 704)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !697, file: !692, line: 253, baseType: !32, size: 32, offset: 736)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !697, file: !692, line: 256, baseType: !32, size: 32, offset: 768)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !691, file: !692, line: 378, baseType: !695, size: 64, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !691, file: !692, line: 381, baseType: !1174, size: 64, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !692, line: 282, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !692, line: 282, size: 128, elements: !1177)
!1177 = !{!1178}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1176, file: !692, line: 282, baseType: !1179, size: 128)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !692, line: 281, baseType: !1180)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !692, line: 281, size: 128, elements: !1181)
!1181 = !{!1182, !1183, !1184}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1180, file: !692, line: 281, baseType: !13, size: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1180, file: !692, line: 281, baseType: !13, size: 32, offset: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1180, file: !692, line: 281, baseType: !1185, size: 64, offset: 64)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !695, size: 64, elements: !47)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !691, file: !692, line: 384, baseType: !32, size: 32, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !691, file: !692, line: 387, baseType: !32, size: 32, offset: 224)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !691, file: !692, line: 390, baseType: !32, size: 32, offset: 256)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !691, file: !692, line: 394, baseType: !1174, size: 64, offset: 320)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !691, file: !692, line: 396, baseType: !1191, size: 32, offset: 384)
!1191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !692, line: 363, baseType: !13, size: 32, elements: !1192)
!1192 = !{!1193, !1194, !1195}
!1193 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!1194 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!1195 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !691, file: !692, line: 399, baseType: !1197, size: 64, offset: 416)
!1197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1198, size: 64, elements: !211)
!1198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !692, line: 355, baseType: !13, size: 32, elements: !1199)
!1199 = !{!1200, !1201, !1202}
!1200 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!1201 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!1202 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !691, file: !692, line: 402, baseType: !1204, size: 64, offset: 480)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 64, elements: !211)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !691, file: !692, line: 406, baseType: !32, size: 32, offset: 544)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !691, file: !692, line: 409, baseType: !32, size: 32, offset: 576)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !515, file: !516, line: 470, baseType: !723, size: 64, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !515, file: !516, line: 473, baseType: !1209, size: 64, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !466, line: 39, size: 1152, elements: !1211)
!1211 = !{!1212, !1213, !1226, !1227, !1228, !1240, !1241, !1245, !1246, !1247, !1248, !1249}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1210, file: !466, line: 41, baseType: !606, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1210, file: !466, line: 48, baseType: !1214, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !725, line: 35, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !725, line: 35, size: 128, elements: !1217)
!1217 = !{!1218}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1216, file: !725, line: 35, baseType: !1219, size: 128)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !725, line: 33, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !725, line: 33, size: 128, elements: !1221)
!1221 = !{!1222, !1223, !1224}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1220, file: !725, line: 33, baseType: !13, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1220, file: !725, line: 33, baseType: !13, size: 32, offset: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1220, file: !725, line: 33, baseType: !1225, size: 64, offset: 64)
!1225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 64, elements: !47)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1210, file: !466, line: 51, baseType: !658, size: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1210, file: !466, line: 54, baseType: !258, size: 64, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1210, file: !466, line: 57, baseType: !1229, size: 128, offset: 256)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1230, line: 31, size: 128, elements: !1231)
!1230 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1231 = !{!1232, !1233, !1234, !1235, !1236, !1237, !1238}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1229, file: !1230, line: 35, baseType: !13, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1229, file: !1230, line: 39, baseType: !13, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1229, file: !1230, line: 42, baseType: !13, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1229, file: !1230, line: 46, baseType: !13, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1229, file: !1230, line: 50, baseType: !13, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1229, file: !1230, line: 53, baseType: !13, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1229, file: !1230, line: 56, baseType: !1239, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !7, line: 47, baseType: !194)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1210, file: !466, line: 60, baseType: !1229, size: 128, offset: 384)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1210, file: !466, line: 64, baseType: !1242, size: 64, offset: 512)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1244, line: 33, flags: DIFlagFwdDecl)
!1244 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1210, file: !466, line: 67, baseType: !258, size: 64, offset: 576)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1210, file: !466, line: 73, baseType: !606, size: 64, offset: 640)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1210, file: !466, line: 77, baseType: !1239, size: 64, offset: 704)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1210, file: !466, line: 80, baseType: !13, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1210, file: !466, line: 82, baseType: !1250, size: 320, offset: 832)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !764, line: 62, size: 320, elements: !1251)
!1251 = !{!1252, !1258, !1259, !1260, !1261, !1262}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1250, file: !764, line: 63, baseType: !1253, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !764, line: 56, size: 128, elements: !1255)
!1255 = !{!1256, !1257}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1254, file: !764, line: 57, baseType: !1253, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1254, file: !764, line: 58, baseType: !354, size: 8, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1250, file: !764, line: 64, baseType: !13, size: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1250, file: !764, line: 66, baseType: !13, size: 32, offset: 96)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1250, file: !764, line: 68, baseType: !372, size: 8, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1250, file: !764, line: 70, baseType: !762, size: 64, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1250, file: !764, line: 71, baseType: !770, size: 64, offset: 256)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !515, file: !516, line: 476, baseType: !1264, size: 64, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !516, line: 476, flags: DIFlagFwdDecl)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !515, file: !516, line: 479, baseType: !606, size: 64, offset: 320)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !515, file: !516, line: 484, baseType: !258, size: 64, offset: 384)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !515, file: !516, line: 488, baseType: !258, size: 64, offset: 448)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !515, file: !516, line: 493, baseType: !258, size: 64, offset: 512)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !515, file: !516, line: 496, baseType: !258, size: 64, offset: 576)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !515, file: !516, line: 501, baseType: !1272, size: 64, offset: 640)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !1274, line: 2355, size: 576, elements: !1275)
!1274 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1275 = !{!1276, !1279, !1280, !1281, !1282, !1284, !1285, !1290, !1295, !1296, !1297, !1298, !1299}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1273, file: !1274, line: 2356, baseType: !1277, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !1274, line: 2356, flags: DIFlagFwdDecl)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1273, file: !1274, line: 2357, baseType: !35, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1273, file: !1274, line: 2358, baseType: !32, size: 32, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1273, file: !1274, line: 2359, baseType: !32, size: 32, offset: 160)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1273, file: !1274, line: 2360, baseType: !1283, size: 128, offset: 192)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 128, elements: !237)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1273, file: !1274, line: 2364, baseType: !32, size: 32, offset: 320)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1273, file: !1274, line: 2367, baseType: !1286, size: 128, offset: 384)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !1274, line: 2349, size: 128, elements: !1287)
!1287 = !{!1288, !1289}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1286, file: !1274, line: 2351, baseType: !6, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1286, file: !1274, line: 2352, baseType: !227, size: 64, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1273, file: !1274, line: 2371, baseType: !1291, size: 32, offset: 512)
!1291 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !1274, line: 474, baseType: !13, size: 32, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!1294 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1273, file: !1274, line: 2374, baseType: !13, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1273, file: !1274, line: 2377, baseType: !13, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1273, file: !1274, line: 2381, baseType: !13, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1273, file: !1274, line: 2392, baseType: !13, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1273, file: !1274, line: 2396, baseType: !13, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !515, file: !516, line: 504, baseType: !1301, size: 64, offset: 704)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !516, line: 504, flags: DIFlagFwdDecl)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !515, file: !516, line: 507, baseType: !606, size: 64, offset: 768)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !515, file: !516, line: 510, baseType: !32, size: 32, offset: 832)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !515, file: !516, line: 513, baseType: !32, size: 32, offset: 864)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !515, file: !516, line: 516, baseType: !380, size: 32, offset: 896)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !515, file: !516, line: 519, baseType: !380, size: 32, offset: 928)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !515, file: !516, line: 522, baseType: !13, size: 32, offset: 960)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !515, file: !516, line: 523, baseType: !13, size: 32, offset: 992)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !515, file: !516, line: 528, baseType: !35, size: 64, offset: 1024)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !515, file: !516, line: 535, baseType: !13, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !515, file: !516, line: 539, baseType: !13, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !515, file: !516, line: 543, baseType: !13, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !515, file: !516, line: 546, baseType: !13, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !515, file: !516, line: 550, baseType: !13, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !515, file: !516, line: 554, baseType: !13, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !515, file: !516, line: 559, baseType: !13, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !515, file: !516, line: 562, baseType: !13, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !515, file: !516, line: 571, baseType: !13, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !515, file: !516, line: 573, baseType: !13, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !515, file: !516, line: 574, baseType: !13, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !515, file: !516, line: 581, baseType: !13, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !515, file: !516, line: 585, baseType: !13, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !515, file: !516, line: 588, baseType: !13, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !515, file: !516, line: 592, baseType: !13, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !515, file: !516, line: 598, baseType: !13, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !510, file: !261, line: 3254, baseType: !258, size: 64, offset: 1536)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !510, file: !261, line: 3257, baseType: !258, size: 64, offset: 1600)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !510, file: !261, line: 3258, baseType: !258, size: 64, offset: 1664)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !510, file: !261, line: 3264, baseType: !13, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !510, file: !261, line: 3265, baseType: !13, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !510, file: !261, line: 3267, baseType: !13, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !510, file: !261, line: 3268, baseType: !13, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !510, file: !261, line: 3269, baseType: !13, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !510, file: !261, line: 3271, baseType: !13, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !510, file: !261, line: 3272, baseType: !13, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !510, file: !261, line: 3273, baseType: !13, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !510, file: !261, line: 3274, baseType: !13, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !510, file: !261, line: 3275, baseType: !13, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !510, file: !261, line: 3276, baseType: !13, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !510, file: !261, line: 3277, baseType: !13, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !510, file: !261, line: 3279, baseType: !13, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !510, file: !261, line: 3280, baseType: !13, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !510, file: !261, line: 3281, baseType: !13, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !510, file: !261, line: 3282, baseType: !13, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !510, file: !261, line: 3283, baseType: !13, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !510, file: !261, line: 3284, baseType: !13, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !260, file: !261, line: 3394, baseType: !1349, size: 1344)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !261, line: 2279, size: 1344, elements: !1350)
!1350 = !{!1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1376, !1377, !1378, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1349, file: !261, line: 2280, baseType: !297, size: 192)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1349, file: !261, line: 2281, baseType: !258, size: 64, offset: 192)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1349, file: !261, line: 2282, baseType: !258, size: 64, offset: 256)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1349, file: !261, line: 2283, baseType: !258, size: 64, offset: 320)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1349, file: !261, line: 2284, baseType: !258, size: 64, offset: 384)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1349, file: !261, line: 2285, baseType: !13, size: 32, offset: 448)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1349, file: !261, line: 2287, baseType: !13, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1349, file: !261, line: 2288, baseType: !13, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1349, file: !261, line: 2289, baseType: !13, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1349, file: !261, line: 2290, baseType: !13, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1349, file: !261, line: 2291, baseType: !13, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1349, file: !261, line: 2292, baseType: !13, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1349, file: !261, line: 2294, baseType: !13, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1349, file: !261, line: 2296, baseType: !13, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1349, file: !261, line: 2297, baseType: !13, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1349, file: !261, line: 2298, baseType: !13, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1349, file: !261, line: 2299, baseType: !13, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1349, file: !261, line: 2300, baseType: !13, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1349, file: !261, line: 2301, baseType: !13, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1349, file: !261, line: 2302, baseType: !13, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1349, file: !261, line: 2303, baseType: !13, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1349, file: !261, line: 2305, baseType: !13, size: 32, offset: 512)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1349, file: !261, line: 2306, baseType: !1374, size: 32, offset: 544)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1375, line: 31, baseType: !32)
!1375 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1349, file: !261, line: 2307, baseType: !258, size: 64, offset: 576)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1349, file: !261, line: 2308, baseType: !258, size: 64, offset: 640)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1349, file: !261, line: 2314, baseType: !1379, size: 64, offset: 704)
!1379 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !261, line: 2309, size: 64, elements: !1380)
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1379, file: !261, line: 2310, baseType: !32, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1379, file: !261, line: 2311, baseType: !35, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1379, file: !261, line: 2312, baseType: !1384, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !261, line: 2277, flags: DIFlagFwdDecl)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1349, file: !261, line: 2315, baseType: !258, size: 64, offset: 768)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1349, file: !261, line: 2316, baseType: !258, size: 64, offset: 832)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1349, file: !261, line: 2317, baseType: !258, size: 64, offset: 896)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1349, file: !261, line: 2318, baseType: !258, size: 64, offset: 960)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1349, file: !261, line: 2319, baseType: !258, size: 64, offset: 1024)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1349, file: !261, line: 2320, baseType: !258, size: 64, offset: 1088)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1349, file: !261, line: 2321, baseType: !258, size: 64, offset: 1152)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1349, file: !261, line: 2322, baseType: !258, size: 64, offset: 1216)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1349, file: !261, line: 2324, baseType: !1395, size: 64, offset: 1280)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !261, line: 2324, flags: DIFlagFwdDecl)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !260, file: !261, line: 3395, baseType: !1398, size: 320)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !261, line: 1469, size: 320, elements: !1399)
!1399 = !{!1400, !1401, !1402}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1398, file: !261, line: 1470, baseType: !297, size: 192)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1398, file: !261, line: 1471, baseType: !258, size: 64, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1398, file: !261, line: 1472, baseType: !258, size: 64, offset: 256)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !260, file: !261, line: 3396, baseType: !1404, size: 320)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !261, line: 1482, size: 320, elements: !1405)
!1405 = !{!1406, !1407, !1408}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1404, file: !261, line: 1483, baseType: !297, size: 192)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1404, file: !261, line: 1484, baseType: !32, size: 32, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1404, file: !261, line: 1485, baseType: !669, size: 64, offset: 256)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !260, file: !261, line: 3397, baseType: !1410, size: 384)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !261, line: 1829, size: 384, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1415}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1410, file: !261, line: 1830, baseType: !297, size: 192)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1410, file: !261, line: 1831, baseType: !380, size: 32, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1410, file: !261, line: 1832, baseType: !258, size: 64, offset: 256)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1410, file: !261, line: 1835, baseType: !669, size: 64, offset: 320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !260, file: !261, line: 3398, baseType: !1417, size: 704)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !261, line: 1898, size: 704, elements: !1418)
!1418 = !{!1419, !1420, !1421, !1422, !1423, !1428}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1417, file: !261, line: 1899, baseType: !297, size: 192)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1417, file: !261, line: 1902, baseType: !258, size: 64, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1417, file: !261, line: 1905, baseType: !733, size: 64, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1417, file: !261, line: 1908, baseType: !13, size: 32, offset: 320)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1417, file: !261, line: 1911, baseType: !1424, size: 64, offset: 384)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !466, line: 117, size: 128, elements: !1426)
!1426 = !{!1427}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1425, file: !466, line: 120, baseType: !1229, size: 128)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1417, file: !261, line: 1914, baseType: !775, size: 256, offset: 448)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !260, file: !261, line: 3399, baseType: !1430, size: 704)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !261, line: 2008, size: 704, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1430, file: !261, line: 2009, baseType: !297, size: 192)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1430, file: !261, line: 2011, baseType: !13, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1430, file: !261, line: 2012, baseType: !13, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1430, file: !261, line: 2014, baseType: !380, size: 32, offset: 224)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1430, file: !261, line: 2016, baseType: !258, size: 64, offset: 256)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1430, file: !261, line: 2017, baseType: !658, size: 64, offset: 320)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1430, file: !261, line: 2019, baseType: !258, size: 64, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1430, file: !261, line: 2020, baseType: !258, size: 64, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1430, file: !261, line: 2021, baseType: !258, size: 64, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1430, file: !261, line: 2022, baseType: !258, size: 64, offset: 576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1430, file: !261, line: 2023, baseType: !258, size: 64, offset: 640)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !260, file: !261, line: 3400, baseType: !1444, size: 832)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !261, line: 2430, size: 832, elements: !1445)
!1445 = !{!1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1444, file: !261, line: 2431, baseType: !297, size: 192)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1444, file: !261, line: 2433, baseType: !258, size: 64, offset: 192)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1444, file: !261, line: 2434, baseType: !258, size: 64, offset: 256)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1444, file: !261, line: 2435, baseType: !258, size: 64, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1444, file: !261, line: 2436, baseType: !258, size: 64, offset: 384)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1444, file: !261, line: 2437, baseType: !658, size: 64, offset: 448)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1444, file: !261, line: 2438, baseType: !258, size: 64, offset: 512)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1444, file: !261, line: 2440, baseType: !258, size: 64, offset: 576)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1444, file: !261, line: 2441, baseType: !258, size: 64, offset: 640)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1444, file: !261, line: 2443, baseType: !1456, size: 128, offset: 704)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !261, line: 182, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !261, line: 182, size: 128, elements: !1458)
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1457, file: !261, line: 182, baseType: !663, size: 128)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !260, file: !261, line: 3401, baseType: !1461, size: 320)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !261, line: 3327, size: 320, elements: !1462)
!1462 = !{!1463, !1464, !1471}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1461, file: !261, line: 3329, baseType: !297, size: 192)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1461, file: !261, line: 3330, baseType: !1465, size: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !261, line: 3320, size: 192, elements: !1467)
!1467 = !{!1468, !1469, !1470}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1466, file: !261, line: 3322, baseType: !1465, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1466, file: !261, line: 3323, baseType: !1465, size: 64, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1466, file: !261, line: 3324, baseType: !258, size: 64, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1461, file: !261, line: 3331, baseType: !1465, size: 64, offset: 256)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !260, file: !261, line: 3402, baseType: !1473, size: 256)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !261, line: 1540, size: 256, elements: !1474)
!1474 = !{!1475, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1473, file: !261, line: 1541, baseType: !297, size: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1473, file: !261, line: 1542, baseType: !1477, size: 64, offset: 192)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !261, line: 1538, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !261, line: 1538, size: 192, elements: !1480)
!1480 = !{!1481}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1479, file: !261, line: 1538, baseType: !1482, size: 192)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !261, line: 1537, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !261, line: 1537, size: 192, elements: !1484)
!1484 = !{!1485, !1486, !1487}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1483, file: !261, line: 1537, baseType: !13, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1483, file: !261, line: 1537, baseType: !13, size: 32, offset: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1483, file: !261, line: 1537, baseType: !1488, size: 128, offset: 64)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 128, elements: !47)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !261, line: 1535, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !261, line: 1532, size: 128, elements: !1491)
!1491 = !{!1492, !1493}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1490, file: !261, line: 1533, baseType: !258, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1490, file: !261, line: 1534, baseType: !258, size: 64, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !260, file: !261, line: 3403, baseType: !1495, size: 512)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !261, line: 1938, size: 512, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1518, !1538, !1539, !1540}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1495, file: !261, line: 1939, baseType: !297, size: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1495, file: !261, line: 1940, baseType: !380, size: 32, offset: 192)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1495, file: !261, line: 1941, baseType: !1500, size: 32, offset: 224)
!1500 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !261, line: 280, baseType: !13, size: 32, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1502 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!1503 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!1504 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!1505 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!1506 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!1507 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!1508 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!1509 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!1510 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!1511 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!1512 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!1513 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!1514 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!1515 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!1516 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!1517 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1495, file: !261, line: 1946, baseType: !1519, size: 32, offset: 256)
!1519 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !261, line: 1942, size: 32, elements: !1520)
!1520 = !{!1521, !1529, !1537}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1519, file: !261, line: 1943, baseType: !1522, size: 32)
!1522 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !261, line: 1817, baseType: !13, size: 32, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528}
!1524 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!1525 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!1526 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!1527 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!1528 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1519, file: !261, line: 1944, baseType: !1530, size: 32)
!1530 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !261, line: 1805, baseType: !13, size: 32, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536}
!1532 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!1533 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!1534 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!1535 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!1536 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1519, file: !261, line: 1945, baseType: !883, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1495, file: !261, line: 1950, baseType: !722, size: 64, offset: 320)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1495, file: !261, line: 1951, baseType: !722, size: 64, offset: 384)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1495, file: !261, line: 1953, baseType: !669, size: 64, offset: 448)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !260, file: !261, line: 3404, baseType: !1542, size: 1664)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !261, line: 3337, size: 1664, elements: !1543)
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1542, file: !261, line: 3338, baseType: !297, size: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1542, file: !261, line: 3341, baseType: !1546, size: 1472, offset: 192)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1547, line: 410, size: 1472, elements: !1548)
!1547 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1548 = !{!1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1546, file: !1547, line: 412, baseType: !32, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1546, file: !1547, line: 413, baseType: !32, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1546, file: !1547, line: 414, baseType: !32, size: 32, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1546, file: !1547, line: 415, baseType: !32, size: 32, offset: 96)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1546, file: !1547, line: 416, baseType: !32, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1546, file: !1547, line: 417, baseType: !32, size: 32, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1546, file: !1547, line: 418, baseType: !372, size: 8, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1546, file: !1547, line: 419, baseType: !372, size: 8, offset: 200)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1546, file: !1547, line: 420, baseType: !1558, size: 8, offset: 208)
!1558 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1546, file: !1547, line: 421, baseType: !1558, size: 8, offset: 216)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1546, file: !1547, line: 422, baseType: !1558, size: 8, offset: 224)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1546, file: !1547, line: 423, baseType: !1558, size: 8, offset: 232)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1546, file: !1547, line: 424, baseType: !1558, size: 8, offset: 240)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1546, file: !1547, line: 425, baseType: !1558, size: 8, offset: 248)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1546, file: !1547, line: 426, baseType: !1558, size: 8, offset: 256)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1546, file: !1547, line: 427, baseType: !1558, size: 8, offset: 264)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1546, file: !1547, line: 428, baseType: !1558, size: 8, offset: 272)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1546, file: !1547, line: 429, baseType: !1558, size: 8, offset: 280)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1546, file: !1547, line: 430, baseType: !1558, size: 8, offset: 288)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1546, file: !1547, line: 431, baseType: !1558, size: 8, offset: 296)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1546, file: !1547, line: 432, baseType: !1558, size: 8, offset: 304)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1546, file: !1547, line: 433, baseType: !1558, size: 8, offset: 312)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1546, file: !1547, line: 434, baseType: !1558, size: 8, offset: 320)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1546, file: !1547, line: 435, baseType: !1558, size: 8, offset: 328)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1546, file: !1547, line: 436, baseType: !1558, size: 8, offset: 336)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1546, file: !1547, line: 437, baseType: !1558, size: 8, offset: 344)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1546, file: !1547, line: 438, baseType: !1558, size: 8, offset: 352)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1546, file: !1547, line: 439, baseType: !1558, size: 8, offset: 360)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1546, file: !1547, line: 440, baseType: !1558, size: 8, offset: 368)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1546, file: !1547, line: 441, baseType: !1558, size: 8, offset: 376)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1546, file: !1547, line: 442, baseType: !1558, size: 8, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1546, file: !1547, line: 443, baseType: !1558, size: 8, offset: 392)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1546, file: !1547, line: 444, baseType: !1558, size: 8, offset: 400)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1546, file: !1547, line: 445, baseType: !1558, size: 8, offset: 408)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1546, file: !1547, line: 446, baseType: !1558, size: 8, offset: 416)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1546, file: !1547, line: 447, baseType: !1558, size: 8, offset: 424)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1546, file: !1547, line: 448, baseType: !1558, size: 8, offset: 432)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1546, file: !1547, line: 449, baseType: !1558, size: 8, offset: 440)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1546, file: !1547, line: 450, baseType: !1558, size: 8, offset: 448)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1546, file: !1547, line: 451, baseType: !1558, size: 8, offset: 456)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1546, file: !1547, line: 452, baseType: !1558, size: 8, offset: 464)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1546, file: !1547, line: 453, baseType: !1558, size: 8, offset: 472)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1546, file: !1547, line: 454, baseType: !1558, size: 8, offset: 480)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1546, file: !1547, line: 455, baseType: !1558, size: 8, offset: 488)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1546, file: !1547, line: 456, baseType: !1558, size: 8, offset: 496)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1546, file: !1547, line: 457, baseType: !1558, size: 8, offset: 504)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1546, file: !1547, line: 458, baseType: !1558, size: 8, offset: 512)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1546, file: !1547, line: 459, baseType: !1558, size: 8, offset: 520)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1546, file: !1547, line: 460, baseType: !1558, size: 8, offset: 528)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1546, file: !1547, line: 461, baseType: !1558, size: 8, offset: 536)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1546, file: !1547, line: 462, baseType: !1558, size: 8, offset: 544)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1546, file: !1547, line: 463, baseType: !1558, size: 8, offset: 552)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1546, file: !1547, line: 464, baseType: !1558, size: 8, offset: 560)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1546, file: !1547, line: 465, baseType: !1558, size: 8, offset: 568)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1546, file: !1547, line: 466, baseType: !1558, size: 8, offset: 576)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1546, file: !1547, line: 467, baseType: !1558, size: 8, offset: 584)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1546, file: !1547, line: 468, baseType: !1558, size: 8, offset: 592)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1546, file: !1547, line: 469, baseType: !1558, size: 8, offset: 600)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1546, file: !1547, line: 470, baseType: !1558, size: 8, offset: 608)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1546, file: !1547, line: 471, baseType: !1558, size: 8, offset: 616)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1546, file: !1547, line: 472, baseType: !1558, size: 8, offset: 624)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1546, file: !1547, line: 473, baseType: !1558, size: 8, offset: 632)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1546, file: !1547, line: 474, baseType: !1558, size: 8, offset: 640)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1546, file: !1547, line: 475, baseType: !1558, size: 8, offset: 648)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1546, file: !1547, line: 476, baseType: !1558, size: 8, offset: 656)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1546, file: !1547, line: 477, baseType: !1558, size: 8, offset: 664)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1546, file: !1547, line: 478, baseType: !1558, size: 8, offset: 672)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1546, file: !1547, line: 479, baseType: !1558, size: 8, offset: 680)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1546, file: !1547, line: 480, baseType: !1558, size: 8, offset: 688)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1546, file: !1547, line: 481, baseType: !1558, size: 8, offset: 696)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1546, file: !1547, line: 482, baseType: !1558, size: 8, offset: 704)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1546, file: !1547, line: 483, baseType: !1558, size: 8, offset: 712)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1546, file: !1547, line: 484, baseType: !1558, size: 8, offset: 720)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1546, file: !1547, line: 485, baseType: !1558, size: 8, offset: 728)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1546, file: !1547, line: 486, baseType: !1558, size: 8, offset: 736)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1546, file: !1547, line: 487, baseType: !1558, size: 8, offset: 744)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1546, file: !1547, line: 488, baseType: !1558, size: 8, offset: 752)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1546, file: !1547, line: 489, baseType: !1558, size: 8, offset: 760)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1546, file: !1547, line: 490, baseType: !1558, size: 8, offset: 768)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1546, file: !1547, line: 491, baseType: !1558, size: 8, offset: 776)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1546, file: !1547, line: 492, baseType: !1558, size: 8, offset: 784)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1546, file: !1547, line: 493, baseType: !1558, size: 8, offset: 792)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1546, file: !1547, line: 494, baseType: !1558, size: 8, offset: 800)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1546, file: !1547, line: 495, baseType: !1558, size: 8, offset: 808)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1546, file: !1547, line: 496, baseType: !1558, size: 8, offset: 816)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1546, file: !1547, line: 497, baseType: !1558, size: 8, offset: 824)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1546, file: !1547, line: 498, baseType: !1558, size: 8, offset: 832)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1546, file: !1547, line: 499, baseType: !1558, size: 8, offset: 840)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1546, file: !1547, line: 500, baseType: !1558, size: 8, offset: 848)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1546, file: !1547, line: 501, baseType: !1558, size: 8, offset: 856)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1546, file: !1547, line: 502, baseType: !1558, size: 8, offset: 864)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1546, file: !1547, line: 503, baseType: !1558, size: 8, offset: 872)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1546, file: !1547, line: 504, baseType: !1558, size: 8, offset: 880)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1546, file: !1547, line: 505, baseType: !1558, size: 8, offset: 888)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1546, file: !1547, line: 506, baseType: !1558, size: 8, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1546, file: !1547, line: 507, baseType: !1558, size: 8, offset: 904)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1546, file: !1547, line: 508, baseType: !1558, size: 8, offset: 912)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1546, file: !1547, line: 509, baseType: !1558, size: 8, offset: 920)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1546, file: !1547, line: 510, baseType: !1558, size: 8, offset: 928)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1546, file: !1547, line: 511, baseType: !1558, size: 8, offset: 936)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1546, file: !1547, line: 512, baseType: !1558, size: 8, offset: 944)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1546, file: !1547, line: 513, baseType: !1558, size: 8, offset: 952)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1546, file: !1547, line: 514, baseType: !1558, size: 8, offset: 960)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1546, file: !1547, line: 515, baseType: !1558, size: 8, offset: 968)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1546, file: !1547, line: 516, baseType: !1558, size: 8, offset: 976)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1546, file: !1547, line: 517, baseType: !1558, size: 8, offset: 984)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1546, file: !1547, line: 518, baseType: !1558, size: 8, offset: 992)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1546, file: !1547, line: 519, baseType: !1558, size: 8, offset: 1000)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1546, file: !1547, line: 520, baseType: !1558, size: 8, offset: 1008)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1546, file: !1547, line: 521, baseType: !1558, size: 8, offset: 1016)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1546, file: !1547, line: 522, baseType: !1558, size: 8, offset: 1024)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1546, file: !1547, line: 523, baseType: !1558, size: 8, offset: 1032)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1546, file: !1547, line: 524, baseType: !1558, size: 8, offset: 1040)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1546, file: !1547, line: 525, baseType: !1558, size: 8, offset: 1048)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1546, file: !1547, line: 526, baseType: !1558, size: 8, offset: 1056)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1546, file: !1547, line: 527, baseType: !1558, size: 8, offset: 1064)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1546, file: !1547, line: 528, baseType: !1558, size: 8, offset: 1072)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1546, file: !1547, line: 529, baseType: !1558, size: 8, offset: 1080)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1546, file: !1547, line: 530, baseType: !1558, size: 8, offset: 1088)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1546, file: !1547, line: 531, baseType: !1558, size: 8, offset: 1096)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1546, file: !1547, line: 532, baseType: !1558, size: 8, offset: 1104)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1546, file: !1547, line: 533, baseType: !1558, size: 8, offset: 1112)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1546, file: !1547, line: 534, baseType: !1558, size: 8, offset: 1120)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1546, file: !1547, line: 535, baseType: !1558, size: 8, offset: 1128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1546, file: !1547, line: 536, baseType: !1558, size: 8, offset: 1136)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1546, file: !1547, line: 537, baseType: !1558, size: 8, offset: 1144)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1546, file: !1547, line: 538, baseType: !1558, size: 8, offset: 1152)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1546, file: !1547, line: 539, baseType: !1558, size: 8, offset: 1160)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1546, file: !1547, line: 540, baseType: !1558, size: 8, offset: 1168)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1546, file: !1547, line: 541, baseType: !1558, size: 8, offset: 1176)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1546, file: !1547, line: 542, baseType: !1558, size: 8, offset: 1184)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1546, file: !1547, line: 543, baseType: !1558, size: 8, offset: 1192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1546, file: !1547, line: 544, baseType: !1558, size: 8, offset: 1200)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1546, file: !1547, line: 545, baseType: !1558, size: 8, offset: 1208)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1546, file: !1547, line: 546, baseType: !1558, size: 8, offset: 1216)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1546, file: !1547, line: 547, baseType: !1558, size: 8, offset: 1224)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1546, file: !1547, line: 548, baseType: !1558, size: 8, offset: 1232)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1546, file: !1547, line: 549, baseType: !1558, size: 8, offset: 1240)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1546, file: !1547, line: 550, baseType: !1558, size: 8, offset: 1248)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1546, file: !1547, line: 551, baseType: !1558, size: 8, offset: 1256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1546, file: !1547, line: 552, baseType: !1558, size: 8, offset: 1264)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1546, file: !1547, line: 553, baseType: !1558, size: 8, offset: 1272)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1546, file: !1547, line: 554, baseType: !1558, size: 8, offset: 1280)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1546, file: !1547, line: 555, baseType: !1558, size: 8, offset: 1288)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1546, file: !1547, line: 556, baseType: !1558, size: 8, offset: 1296)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1546, file: !1547, line: 557, baseType: !1558, size: 8, offset: 1304)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1546, file: !1547, line: 558, baseType: !1558, size: 8, offset: 1312)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1546, file: !1547, line: 559, baseType: !1558, size: 8, offset: 1320)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1546, file: !1547, line: 560, baseType: !1558, size: 8, offset: 1328)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1546, file: !1547, line: 561, baseType: !1558, size: 8, offset: 1336)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1546, file: !1547, line: 562, baseType: !1558, size: 8, offset: 1344)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1546, file: !1547, line: 563, baseType: !1558, size: 8, offset: 1352)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1546, file: !1547, line: 564, baseType: !1558, size: 8, offset: 1360)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1546, file: !1547, line: 565, baseType: !1558, size: 8, offset: 1368)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1546, file: !1547, line: 566, baseType: !1558, size: 8, offset: 1376)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1546, file: !1547, line: 567, baseType: !1558, size: 8, offset: 1384)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1546, file: !1547, line: 568, baseType: !1558, size: 8, offset: 1392)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1546, file: !1547, line: 569, baseType: !1558, size: 8, offset: 1400)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1546, file: !1547, line: 570, baseType: !1558, size: 8, offset: 1408)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1546, file: !1547, line: 571, baseType: !1558, size: 8, offset: 1416)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1546, file: !1547, line: 572, baseType: !1558, size: 8, offset: 1424)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1546, file: !1547, line: 573, baseType: !1558, size: 8, offset: 1432)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1546, file: !1547, line: 574, baseType: !1558, size: 8, offset: 1440)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !260, file: !261, line: 3405, baseType: !1714, size: 384)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !261, line: 3352, size: 384, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1714, file: !261, line: 3353, baseType: !297, size: 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1714, file: !261, line: 3356, baseType: !1718, size: 192, offset: 192)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1547, line: 578, size: 192, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1718, file: !1547, line: 580, baseType: !32, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1718, file: !1547, line: 581, baseType: !32, size: 32, offset: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1718, file: !1547, line: 582, baseType: !32, size: 32, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1718, file: !1547, line: 583, baseType: !32, size: 32, offset: 96)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1718, file: !1547, line: 584, baseType: !372, size: 8, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1718, file: !1547, line: 585, baseType: !372, size: 8, offset: 136)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1718, file: !1547, line: 586, baseType: !372, size: 8, offset: 144)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1718, file: !1547, line: 587, baseType: !372, size: 8, offset: 152)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1718, file: !1547, line: 588, baseType: !372, size: 8, offset: 160)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1718, file: !1547, line: 589, baseType: !372, size: 8, offset: 168)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1718, file: !1547, line: 590, baseType: !372, size: 8, offset: 176)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !29, file: !10, line: 178, baseType: !696, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !29, file: !10, line: 179, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !10, line: 150, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !10, line: 142, size: 320, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1735, file: !10, line: 144, baseType: !258, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1735, file: !10, line: 145, baseType: !6, size: 64, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1735, file: !10, line: 146, baseType: !6, size: 64, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1735, file: !10, line: 147, baseType: !1374, size: 32, offset: 192)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1735, file: !10, line: 148, baseType: !13, size: 32, offset: 224)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1735, file: !10, line: 149, baseType: !372, size: 8, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !29, file: !10, line: 180, baseType: !1744, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !10, line: 162, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !10, line: 159, size: 128, elements: !1747)
!1747 = !{!1748, !1749}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1746, file: !10, line: 160, baseType: !258, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1746, file: !10, line: 161, baseType: !227, size: 64, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !29, file: !10, line: 181, baseType: !1751, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !10, line: 181, flags: DIFlagFwdDecl)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !24, file: !10, line: 317, baseType: !1754, size: 64)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !47)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !24, file: !10, line: 318, baseType: !1756, size: 320)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !10, line: 188, size: 320, elements: !1757)
!1757 = !{!1758, !1760, !1815}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1756, file: !10, line: 190, baseType: !1759, size: 192)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 192, elements: !330)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1756, file: !10, line: 193, baseType: !1761, size: 64, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !10, line: 206, size: 320, elements: !1763)
!1763 = !{!1764, !1800, !1801, !1802, !1814}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1762, file: !10, line: 208, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !7, line: 62, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1768, line: 538, size: 256, elements: !1769)
!1768 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1769 = !{!1770, !1774, !1780, !1791}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1767, file: !1768, line: 539, baseType: !1771, size: 32)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1768, line: 482, size: 32, elements: !1772)
!1772 = !{!1773}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1771, file: !1768, line: 484, baseType: !13, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1767, file: !1768, line: 540, baseType: !1775, size: 192)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1768, line: 488, size: 192, elements: !1776)
!1776 = !{!1777, !1778, !1779}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1775, file: !1768, line: 489, baseType: !1771, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1775, file: !1768, line: 492, baseType: !35, size: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1775, file: !1768, line: 496, baseType: !258, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1767, file: !1768, line: 541, baseType: !1781, size: 256)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1768, line: 504, size: 256, elements: !1782)
!1782 = !{!1783, !1784, !1789, !1790}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1781, file: !1768, line: 505, baseType: !1771, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1781, file: !1768, line: 509, baseType: !1785, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1768, line: 501, baseType: !1786)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{null, !617}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1781, file: !1768, line: 510, baseType: !617, size: 64, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1781, file: !1768, line: 513, baseType: !1765, size: 64, offset: 192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1767, file: !1768, line: 542, baseType: !1792, size: 128)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1768, line: 530, size: 128, elements: !1793)
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1792, file: !1768, line: 531, baseType: !1771, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1792, file: !1768, line: 534, baseType: !1796, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1768, line: 525, baseType: !1797)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!372, !258, !35, !210, !210}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1762, file: !10, line: 211, baseType: !13, size: 32, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1762, file: !10, line: 214, baseType: !227, size: 64, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1762, file: !10, line: 224, baseType: !1803, size: 64, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !10, line: 202, baseType: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !10, line: 202, size: 128, elements: !1806)
!1806 = !{!1807}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1805, file: !10, line: 202, baseType: !1808, size: 128)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !10, line: 200, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !10, line: 200, size: 128, elements: !1810)
!1810 = !{!1811, !1812, !1813}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1809, file: !10, line: 200, baseType: !13, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1809, file: !10, line: 200, baseType: !13, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1809, file: !10, line: 200, baseType: !46, size: 64, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1762, file: !10, line: 234, baseType: !1803, size: 64, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1756, file: !10, line: 197, baseType: !227, size: 64, offset: 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !24, file: !10, line: 319, baseType: !319, size: 256)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !24, file: !10, line: 320, baseType: !338, size: 192)
!1818 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1819, retainedTypes: !2071, globals: !2258, nameTableKind: None)
!1819 = !{!50, !533, !883, !1191, !1198, !1291, !1500, !1522, !1530, !1820, !1962, !1968, !1976, !2014, !2040, !2049}
!1820 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !10, line: 45, baseType: !13, size: 32, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961}
!1822 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!1823 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!1824 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!1825 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!1826 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!1827 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!1828 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!1829 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!1830 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!1831 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!1832 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!1833 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!1834 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!1835 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!1836 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!1837 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!1838 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!1839 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!1840 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!1841 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!1842 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!1843 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!1844 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!1845 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!1846 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!1847 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!1848 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!1849 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!1850 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!1851 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!1852 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!1853 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!1854 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!1855 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!1856 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!1857 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!1858 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!1859 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!1860 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!1861 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!1862 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!1863 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!1864 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!1865 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!1866 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!1867 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!1868 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!1869 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!1870 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!1871 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!1872 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!1873 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!1874 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!1875 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!1876 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!1877 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!1878 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!1879 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!1880 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!1881 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!1882 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!1883 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!1884 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!1885 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!1886 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!1887 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!1888 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!1889 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!1890 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!1891 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!1892 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!1893 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!1894 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!1895 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!1896 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!1897 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!1898 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!1899 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!1900 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!1901 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!1902 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!1903 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!1904 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!1905 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!1906 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!1907 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!1908 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!1909 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!1910 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!1911 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!1912 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!1913 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!1914 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!1915 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!1916 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!1917 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!1918 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!1919 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!1920 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!1921 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!1922 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!1923 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!1924 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!1925 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!1926 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!1927 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!1928 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!1929 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!1930 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!1931 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!1932 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!1933 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!1934 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!1935 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!1936 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!1937 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!1938 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!1939 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!1940 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!1941 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!1942 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!1943 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!1944 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!1945 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!1946 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!1947 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!1948 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!1949 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!1950 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!1951 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!1952 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!1953 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!1954 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!1955 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!1956 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!1957 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!1958 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!1959 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!1960 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!1961 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!1962 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "direction", file: !1963, line: 95, baseType: !13, size: 32, elements: !1964)
!1963 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1964 = !{!1965, !1966, !1967}
!1965 = !DIEnumerator(name: "none", value: 0, isUnsigned: true)
!1966 = !DIEnumerator(name: "upward", value: 1, isUnsigned: true)
!1967 = !DIEnumerator(name: "downward", value: 2, isUnsigned: true)
!1968 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "libcall_type", file: !10, line: 2360, baseType: !13, size: 32, elements: !1969)
!1969 = !{!1970, !1971, !1972, !1973, !1974, !1975}
!1970 = !DIEnumerator(name: "LCT_NORMAL", value: 0, isUnsigned: true)
!1971 = !DIEnumerator(name: "LCT_CONST", value: 1, isUnsigned: true)
!1972 = !DIEnumerator(name: "LCT_PURE", value: 2, isUnsigned: true)
!1973 = !DIEnumerator(name: "LCT_NORETURN", value: 3, isUnsigned: true)
!1974 = !DIEnumerator(name: "LCT_THROW", value: 4, isUnsigned: true)
!1975 = !DIEnumerator(name: "LCT_RETURNS_TWICE", value: 5, isUnsigned: true)
!1976 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !725, line: 51, baseType: !13, size: 32, elements: !1977)
!1977 = !{!1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!1978 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!1979 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!1980 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!1981 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!1982 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!1983 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!1984 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!1985 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!1986 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!1987 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!1988 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!1989 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!1990 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!1991 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!1992 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!1993 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!1994 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!1995 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!1996 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!1997 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!1998 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!1999 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!2000 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!2001 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!2002 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!2003 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!2004 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!2005 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!2006 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!2007 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!2008 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!2009 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!2010 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!2011 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!2012 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!2013 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!2014 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !725, line: 727, baseType: !13, size: 32, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039}
!2016 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!2017 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!2018 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!2019 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!2020 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!2021 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!2022 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!2023 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!2024 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!2025 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!2026 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!2027 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!2028 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!2029 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!2030 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!2031 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!2032 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!2033 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!2034 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!2035 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!2036 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!2037 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!2038 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!2039 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!2040 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !1963, line: 52, baseType: !13, size: 32, elements: !2041)
!2041 = !{!2042, !2043, !2044, !2045, !2046, !2047, !2048}
!2042 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!2043 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!2044 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!2045 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!2046 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!2047 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!2048 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!2049 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !2050, line: 36, baseType: !13, size: 32, elements: !2051)
!2050 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2051 = !{!2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070}
!2052 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!2053 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!2054 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!2055 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!2056 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!2057 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!2058 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!2059 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!2060 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!2061 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!2062 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!2063 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!2064 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!2065 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!2066 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!2067 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!2068 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!2069 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!2070 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!2071 = !{!2072, !372, !32, !2073, !248, !35, !1820, !883, !2074, !50, !6, !258, !2075, !382, !233, !734, !2107, !768, !2049, !13, !210, !2109}
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!2074 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arg_data", file: !3, line: 53, size: 1472, elements: !2077)
!2077 = !{!2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2101, !2102, !2103, !2104, !2106}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "tree_value", scope: !2076, file: !3, line: 56, baseType: !258, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2076, file: !3, line: 58, baseType: !50, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2076, file: !3, line: 60, baseType: !6, size: 64, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "initial_value", scope: !2076, file: !3, line: 62, baseType: !6, size: 64, offset: 192)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2076, file: !3, line: 66, baseType: !6, size: 64, offset: 256)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reg", scope: !2076, file: !3, line: 70, baseType: !6, size: 64, offset: 320)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "parallel_value", scope: !2076, file: !3, line: 73, baseType: !6, size: 64, offset: 384)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "unsignedp", scope: !2076, file: !3, line: 76, baseType: !32, size: 32, offset: 448)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "partial", scope: !2076, file: !3, line: 79, baseType: !32, size: 32, offset: 480)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "pass_on_stack", scope: !2076, file: !3, line: 84, baseType: !32, size: 32, offset: 512)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "locate", scope: !2076, file: !3, line: 86, baseType: !2089, size: 576, offset: 576)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "locate_and_pad_arg_data", file: !1963, line: 110, size: 576, elements: !2090)
!2090 = !{!2091, !2096, !2097, !2098, !2099, !2100}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2089, file: !1963, line: 115, baseType: !2092, size: 128)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "args_size", file: !1963, line: 102, size: 128, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !2092, file: !1963, line: 104, baseType: !227, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2092, file: !1963, line: 105, baseType: !258, size: 64, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2089, file: !1963, line: 117, baseType: !2092, size: 128, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "slot_offset", scope: !2089, file: !1963, line: 120, baseType: !2092, size: 128, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_pad", scope: !2089, file: !1963, line: 123, baseType: !2092, size: 128, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "where_pad", scope: !2089, file: !1963, line: 125, baseType: !1962, size: 32, offset: 512)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "boundary", scope: !2089, file: !1963, line: 127, baseType: !13, size: 32, offset: 544)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2076, file: !3, line: 89, baseType: !6, size: 64, offset: 1152)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "stack_slot", scope: !2076, file: !3, line: 93, baseType: !6, size: 64, offset: 1216)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "save_area", scope: !2076, file: !3, line: 95, baseType: !6, size: 64, offset: 1280)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_regs", scope: !2076, file: !3, line: 100, baseType: !2105, size: 64, offset: 1344)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "n_aligned_regs", scope: !2076, file: !3, line: 101, baseType: !32, size: 32, offset: 1408)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arg", scope: !2111, file: !3, line: 3280, size: 896, elements: !2251)
!2111 = distinct !DISubprogram(name: "emit_library_call_value_1", scope: !3, file: !3, line: 3262, type: !2112, scopeLine: 3265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2121)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!6, !32, !6, !6, !1968, !50, !32, !2114}
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2120}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2115, file: !3, baseType: !13, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2115, file: !3, baseType: !13, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2115, file: !3, baseType: !248, size: 64, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2115, file: !3, baseType: !248, size: 64, offset: 128)
!2121 = !{!2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2180, !2184, !2185, !2188, !2189, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2207, !2208, !2209, !2210, !2213, !2217, !2218, !2219, !2220, !2224, !2228, !2231, !2234, !2242, !2249, !2250}
!2122 = !DILocalVariable(name: "retval", arg: 1, scope: !2111, file: !3, line: 3262, type: !32)
!2123 = !DILocalVariable(name: "orgfun", arg: 2, scope: !2111, file: !3, line: 3262, type: !6)
!2124 = !DILocalVariable(name: "value", arg: 3, scope: !2111, file: !3, line: 3262, type: !6)
!2125 = !DILocalVariable(name: "fn_type", arg: 4, scope: !2111, file: !3, line: 3263, type: !1968)
!2126 = !DILocalVariable(name: "outmode", arg: 5, scope: !2111, file: !3, line: 3264, type: !50)
!2127 = !DILocalVariable(name: "nargs", arg: 6, scope: !2111, file: !3, line: 3264, type: !32)
!2128 = !DILocalVariable(name: "p", arg: 7, scope: !2111, file: !3, line: 3264, type: !2114)
!2129 = !DILocalVariable(name: "args_size", scope: !2111, file: !3, line: 3267, type: !2092)
!2130 = !DILocalVariable(name: "original_args_size", scope: !2111, file: !3, line: 3269, type: !2092)
!2131 = !DILocalVariable(name: "argnum", scope: !2111, file: !3, line: 3270, type: !32)
!2132 = !DILocalVariable(name: "fun", scope: !2111, file: !3, line: 3271, type: !6)
!2133 = !DILocalVariable(name: "fndecl", scope: !2111, file: !3, line: 3274, type: !258)
!2134 = !DILocalVariable(name: "fntype", scope: !2111, file: !3, line: 3275, type: !258)
!2135 = !DILocalVariable(name: "inc", scope: !2111, file: !3, line: 3276, type: !32)
!2136 = !DILocalVariable(name: "count", scope: !2111, file: !3, line: 3277, type: !32)
!2137 = !DILocalVariable(name: "argblock", scope: !2111, file: !3, line: 3278, type: !6)
!2138 = !DILocalVariable(name: "args_so_far", scope: !2111, file: !3, line: 3279, type: !2139)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "CUMULATIVE_ARGS", file: !1274, line: 1598, baseType: !2140)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ix86_args", file: !1274, line: 1579, size: 512, elements: !2141)
!2141 = !{!2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2140, file: !1274, line: 1580, baseType: !32, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !2140, file: !1274, line: 1581, baseType: !32, size: 32, offset: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !2140, file: !1274, line: 1582, baseType: !32, size: 32, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "fastcall", scope: !2140, file: !1274, line: 1583, baseType: !32, size: 32, offset: 96)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "sse_words", scope: !2140, file: !1274, line: 1584, baseType: !32, size: 32, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "sse_nregs", scope: !2140, file: !1274, line: 1585, baseType: !32, size: 32, offset: 160)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "warn_avx", scope: !2140, file: !1274, line: 1586, baseType: !32, size: 32, offset: 192)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "warn_sse", scope: !2140, file: !1274, line: 1587, baseType: !32, size: 32, offset: 224)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "warn_mmx", scope: !2140, file: !1274, line: 1588, baseType: !32, size: 32, offset: 256)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sse_regno", scope: !2140, file: !1274, line: 1589, baseType: !32, size: 32, offset: 288)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_words", scope: !2140, file: !1274, line: 1590, baseType: !32, size: 32, offset: 320)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_nregs", scope: !2140, file: !1274, line: 1591, baseType: !32, size: 32, offset: 352)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_regno", scope: !2140, file: !1274, line: 1592, baseType: !32, size: 32, offset: 384)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_vaarg", scope: !2140, file: !1274, line: 1593, baseType: !32, size: 32, offset: 416)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "float_in_sse", scope: !2140, file: !1274, line: 1594, baseType: !32, size: 32, offset: 448)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2140, file: !1274, line: 1596, baseType: !1291, size: 32, offset: 480)
!2158 = !DILocalVariable(name: "argvec", scope: !2111, file: !3, line: 3289, type: !2109)
!2159 = !DILocalVariable(name: "old_inhibit_defer_pop", scope: !2111, file: !3, line: 3290, type: !32)
!2160 = !DILocalVariable(name: "call_fusage", scope: !2111, file: !3, line: 3291, type: !6)
!2161 = !DILocalVariable(name: "mem_value", scope: !2111, file: !3, line: 3292, type: !6)
!2162 = !DILocalVariable(name: "valreg", scope: !2111, file: !3, line: 3293, type: !6)
!2163 = !DILocalVariable(name: "pcc_struct_value", scope: !2111, file: !3, line: 3294, type: !32)
!2164 = !DILocalVariable(name: "struct_value_size", scope: !2111, file: !3, line: 3295, type: !32)
!2165 = !DILocalVariable(name: "flags", scope: !2111, file: !3, line: 3296, type: !32)
!2166 = !DILocalVariable(name: "reg_parm_stack_space", scope: !2111, file: !3, line: 3297, type: !32)
!2167 = !DILocalVariable(name: "needed", scope: !2111, file: !3, line: 3298, type: !32)
!2168 = !DILocalVariable(name: "before_call", scope: !2111, file: !3, line: 3299, type: !6)
!2169 = !DILocalVariable(name: "tfom", scope: !2111, file: !3, line: 3300, type: !258)
!2170 = !DILocalVariable(name: "low_to_save", scope: !2111, file: !3, line: 3305, type: !32)
!2171 = !DILocalVariable(name: "high_to_save", scope: !2111, file: !3, line: 3305, type: !32)
!2172 = !DILocalVariable(name: "save_area", scope: !2111, file: !3, line: 3306, type: !6)
!2173 = !DILocalVariable(name: "initial_highest_arg_in_use", scope: !2111, file: !3, line: 3310, type: !32)
!2174 = !DILocalVariable(name: "initial_stack_usage_map", scope: !2111, file: !3, line: 3311, type: !233)
!2175 = !DILocalVariable(name: "stack_usage_map_buf", scope: !2111, file: !3, line: 3312, type: !233)
!2176 = !DILocalVariable(name: "struct_value", scope: !2111, file: !3, line: 3314, type: !6)
!2177 = !DILocalVariable(name: "addr", scope: !2178, file: !3, line: 3407, type: !6)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !3, line: 3406, column: 5)
!2179 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3405, column: 7)
!2180 = !DILocalVariable(name: "val", scope: !2181, file: !3, line: 3443, type: !6)
!2181 = distinct !DILexicalBlock(scope: !2182, file: !3, line: 3442, column: 5)
!2182 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 3441, column: 3)
!2183 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3441, column: 3)
!2184 = !DILocalVariable(name: "mode", scope: !2181, file: !3, line: 3444, type: !50)
!2185 = !DILocalVariable(name: "slot", scope: !2186, file: !3, line: 3458, type: !6)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !3, line: 3457, column: 2)
!2187 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 3456, column: 11)
!2188 = !DILocalVariable(name: "must_copy", scope: !2186, file: !3, line: 3459, type: !32)
!2189 = !DILocalVariable(name: "mode", scope: !2190, file: !3, line: 3630, type: !50)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 3629, column: 5)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !3, line: 3628, column: 3)
!2192 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3628, column: 3)
!2193 = !DILocalVariable(name: "val", scope: !2190, file: !3, line: 3631, type: !6)
!2194 = !DILocalVariable(name: "reg", scope: !2190, file: !3, line: 3632, type: !6)
!2195 = !DILocalVariable(name: "partial", scope: !2190, file: !3, line: 3633, type: !32)
!2196 = !DILocalVariable(name: "parm_align", scope: !2190, file: !3, line: 3634, type: !13)
!2197 = !DILocalVariable(name: "lower_bound", scope: !2190, file: !3, line: 3635, type: !32)
!2198 = !DILocalVariable(name: "upper_bound", scope: !2190, file: !3, line: 3635, type: !32)
!2199 = !DILocalVariable(name: "i", scope: !2190, file: !3, line: 3635, type: !32)
!2200 = !DILocalVariable(name: "size", scope: !2201, file: !3, line: 3665, type: !13)
!2201 = distinct !DILexicalBlock(scope: !2202, file: !3, line: 3663, column: 3)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3662, column: 12)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !3, line: 3640, column: 6)
!2204 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 3639, column: 8)
!2205 = distinct !DILexicalBlock(scope: !2206, file: !3, line: 3638, column: 2)
!2206 = distinct !DILexicalBlock(scope: !2190, file: !3, line: 3637, column: 11)
!2207 = !DILocalVariable(name: "save_mode", scope: !2201, file: !3, line: 3667, type: !50)
!2208 = !DILocalVariable(name: "adr", scope: !2201, file: !3, line: 3669, type: !6)
!2209 = !DILocalVariable(name: "stack_area", scope: !2201, file: !3, line: 3672, type: !6)
!2210 = !DILocalVariable(name: "use", scope: !2211, file: !3, line: 3712, type: !6)
!2211 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 3711, column: 6)
!2212 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 3709, column: 8)
!2213 = !DILocalVariable(name: "mode", scope: !2214, file: !3, line: 3753, type: !50)
!2214 = distinct !DILexicalBlock(scope: !2215, file: !3, line: 3752, column: 5)
!2215 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 3751, column: 3)
!2216 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3751, column: 3)
!2217 = !DILocalVariable(name: "val", scope: !2214, file: !3, line: 3754, type: !6)
!2218 = !DILocalVariable(name: "reg", scope: !2214, file: !3, line: 3755, type: !6)
!2219 = !DILocalVariable(name: "partial", scope: !2214, file: !3, line: 3756, type: !32)
!2220 = !DILocalVariable(name: "reg", scope: !2221, file: !3, line: 3771, type: !6)
!2221 = distinct !DILexicalBlock(scope: !2222, file: !3, line: 3770, column: 5)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !3, line: 3769, column: 3)
!2223 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3769, column: 3)
!2224 = !DILocalVariable(name: "partial", scope: !2225, file: !3, line: 3776, type: !32)
!2225 = distinct !DILexicalBlock(scope: !2226, file: !3, line: 3775, column: 9)
!2226 = distinct !DILexicalBlock(scope: !2227, file: !3, line: 3774, column: 16)
!2227 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 3772, column: 11)
!2228 = !DILocalVariable(name: "nregs", scope: !2229, file: !3, line: 3779, type: !32)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 3778, column: 6)
!2230 = distinct !DILexicalBlock(scope: !2225, file: !3, line: 3777, column: 8)
!2231 = !DILocalVariable(name: "last", scope: !2232, file: !3, line: 3839, type: !6)
!2232 = distinct !DILexicalBlock(scope: !2233, file: !3, line: 3834, column: 5)
!2233 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3833, column: 7)
!2234 = !DILocalVariable(name: "unsignedp", scope: !2235, file: !3, line: 3876, type: !32)
!2235 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 3875, column: 6)
!2236 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 3874, column: 8)
!2237 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 3872, column: 2)
!2238 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 3865, column: 16)
!2239 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 3858, column: 11)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 3857, column: 5)
!2241 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3856, column: 7)
!2242 = !DILocalVariable(name: "save_mode", scope: !2243, file: !3, line: 3903, type: !50)
!2243 = distinct !DILexicalBlock(scope: !2244, file: !3, line: 3902, column: 4)
!2244 = distinct !DILexicalBlock(scope: !2245, file: !3, line: 3901, column: 6)
!2245 = distinct !DILexicalBlock(scope: !2246, file: !3, line: 3900, column: 7)
!2246 = distinct !DILexicalBlock(scope: !2247, file: !3, line: 3900, column: 7)
!2247 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 3892, column: 5)
!2248 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3891, column: 7)
!2249 = !DILocalVariable(name: "adr", scope: !2243, file: !3, line: 3904, type: !6)
!2250 = !DILocalVariable(name: "stack_area", scope: !2243, file: !3, line: 3906, type: !6)
!2251 = !{!2252, !2253, !2254, !2255, !2256, !2257}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2110, file: !3, line: 3282, baseType: !6, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2110, file: !3, line: 3283, baseType: !50, size: 32, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2110, file: !3, line: 3284, baseType: !6, size: 64, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "partial", scope: !2110, file: !3, line: 3285, baseType: !32, size: 32, offset: 192)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "locate", scope: !2110, file: !3, line: 3286, baseType: !2089, size: 576, offset: 256)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "save_area", scope: !2110, file: !3, line: 3287, baseType: !6, size: 64, offset: 832)
!2258 = !{!0, !2259, !2261, !2263, !2275}
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "stack_usage_map", scope: !1818, file: !3, line: 108, type: !233, isLocal: true, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(name: "highest_outgoing_arg_in_use", scope: !1818, file: !3, line: 111, type: !32, isLocal: true, isDefinition: true)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "stored_args_map", scope: !1818, file: !3, line: 118, type: !2265, isLocal: true, isDefinition: true)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2266, line: 45, baseType: !2267)
!2266 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2266, line: 39, size: 192, elements: !2269)
!2269 = !{!2270, !2271, !2272, !2273}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2268, file: !2266, line: 41, baseType: !2072, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2268, file: !2266, line: 42, baseType: !13, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2268, file: !2266, line: 43, baseType: !13, size: 32, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2268, file: !2266, line: 44, baseType: !2274, size: 64, offset: 128)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 64, elements: !47)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "stack_arg_under_construction", scope: !1818, file: !3, line: 125, type: !32, isLocal: true, isDefinition: true)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2332, !2333, !2340, !2346, !2354, !2357, !2358, !2362, !2365, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2388, !2393, !2398, !2399, !2400, !2406, !2412, !2415, !2416, !2417, !2420, !2428, !2431, !2434, !2437, !2438, !2439, !2440, !2443, !2451}
!2278 = !DILocalVariable(name: "exp", arg: 1, scope: !2, file: !3, line: 1909, type: !258)
!2279 = !DILocalVariable(name: "target", arg: 2, scope: !2, file: !3, line: 1909, type: !6)
!2280 = !DILocalVariable(name: "ignore", arg: 3, scope: !2, file: !3, line: 1909, type: !32)
!2281 = !DILocalVariable(name: "funexp", scope: !2, file: !3, line: 1915, type: !6)
!2282 = !DILocalVariable(name: "normal_call_insns", scope: !2, file: !3, line: 1917, type: !6)
!2283 = !DILocalVariable(name: "tail_call_insns", scope: !2, file: !3, line: 1919, type: !6)
!2284 = !DILocalVariable(name: "funtype", scope: !2, file: !3, line: 1921, type: !258)
!2285 = !DILocalVariable(name: "type_arg_types", scope: !2, file: !3, line: 1922, type: !258)
!2286 = !DILocalVariable(name: "rettype", scope: !2, file: !3, line: 1923, type: !258)
!2287 = !DILocalVariable(name: "fndecl", scope: !2, file: !3, line: 1926, type: !258)
!2288 = !DILocalVariable(name: "fntype", scope: !2, file: !3, line: 1928, type: !258)
!2289 = !DILocalVariable(name: "try_tail_call", scope: !2, file: !3, line: 1929, type: !372)
!2290 = !DILocalVariable(name: "pass", scope: !2, file: !3, line: 1930, type: !32)
!2291 = !DILocalVariable(name: "valreg", scope: !2, file: !3, line: 1934, type: !6)
!2292 = !DILocalVariable(name: "structure_value_addr", scope: !2, file: !3, line: 1937, type: !6)
!2293 = !DILocalVariable(name: "structure_value_addr_parm", scope: !2, file: !3, line: 1941, type: !32)
!2294 = !DILocalVariable(name: "structure_value_addr_value", scope: !2, file: !3, line: 1943, type: !258)
!2295 = !DILocalVariable(name: "struct_value_size", scope: !2, file: !3, line: 1947, type: !227)
!2296 = !DILocalVariable(name: "pcc_struct_value", scope: !2, file: !3, line: 1950, type: !32)
!2297 = !DILocalVariable(name: "struct_value", scope: !2, file: !3, line: 1951, type: !6)
!2298 = !DILocalVariable(name: "num_actuals", scope: !2, file: !3, line: 1954, type: !32)
!2299 = !DILocalVariable(name: "n_named_args", scope: !2, file: !3, line: 1957, type: !32)
!2300 = !DILocalVariable(name: "num_complex_actuals", scope: !2, file: !3, line: 1959, type: !32)
!2301 = !DILocalVariable(name: "args", scope: !2, file: !3, line: 1964, type: !2075)
!2302 = !DILocalVariable(name: "args_size", scope: !2, file: !3, line: 1967, type: !2092)
!2303 = !DILocalVariable(name: "adjusted_args_size", scope: !2, file: !3, line: 1968, type: !2092)
!2304 = !DILocalVariable(name: "unadjusted_args_size", scope: !2, file: !3, line: 1970, type: !32)
!2305 = !DILocalVariable(name: "args_so_far", scope: !2, file: !3, line: 1972, type: !2139)
!2306 = !DILocalVariable(name: "reg_parm_seen", scope: !2, file: !3, line: 1974, type: !32)
!2307 = !DILocalVariable(name: "must_preallocate", scope: !2, file: !3, line: 1983, type: !32)
!2308 = !DILocalVariable(name: "reg_parm_stack_space", scope: !2, file: !3, line: 1986, type: !32)
!2309 = !DILocalVariable(name: "argblock", scope: !2, file: !3, line: 1990, type: !6)
!2310 = !DILocalVariable(name: "flags", scope: !2, file: !3, line: 1993, type: !32)
!2311 = !DILocalVariable(name: "low_to_save", scope: !2, file: !3, line: 1997, type: !32)
!2312 = !DILocalVariable(name: "high_to_save", scope: !2, file: !3, line: 1997, type: !32)
!2313 = !DILocalVariable(name: "save_area", scope: !2, file: !3, line: 1998, type: !6)
!2314 = !DILocalVariable(name: "initial_highest_arg_in_use", scope: !2, file: !3, line: 2001, type: !32)
!2315 = !DILocalVariable(name: "initial_stack_usage_map", scope: !2, file: !3, line: 2002, type: !233)
!2316 = !DILocalVariable(name: "stack_usage_map_buf", scope: !2, file: !3, line: 2003, type: !233)
!2317 = !DILocalVariable(name: "old_stack_allocated", scope: !2, file: !3, line: 2005, type: !32)
!2318 = !DILocalVariable(name: "old_stack_level", scope: !2, file: !3, line: 2008, type: !6)
!2319 = !DILocalVariable(name: "old_stack_arg_under_construction", scope: !2, file: !3, line: 2009, type: !32)
!2320 = !DILocalVariable(name: "old_pending_adj", scope: !2, file: !3, line: 2010, type: !32)
!2321 = !DILocalVariable(name: "old_inhibit_defer_pop", scope: !2, file: !3, line: 2011, type: !32)
!2322 = !DILocalVariable(name: "old_stack_pointer_delta", scope: !2, file: !3, line: 2016, type: !32)
!2323 = !DILocalVariable(name: "call_fusage", scope: !2, file: !3, line: 2018, type: !6)
!2324 = !DILocalVariable(name: "addr", scope: !2, file: !3, line: 2019, type: !258)
!2325 = !DILocalVariable(name: "i", scope: !2, file: !3, line: 2020, type: !32)
!2326 = !DILocalVariable(name: "preferred_stack_boundary", scope: !2, file: !3, line: 2022, type: !210)
!2327 = !DILocalVariable(name: "preferred_unit_stack_boundary", scope: !2, file: !3, line: 2024, type: !210)
!2328 = !DILocalVariable(name: "static_chain_value", scope: !2, file: !3, line: 2026, type: !6)
!2329 = !DILocalVariable(name: "volatilep", scope: !2330, file: !3, line: 2062, type: !372)
!2330 = distinct !DILexicalBlock(scope: !2331, file: !3, line: 2061, column: 5)
!2331 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2057, column: 7)
!2332 = !DILocalVariable(name: "arg", scope: !2330, file: !3, line: 2063, type: !258)
!2333 = !DILocalVariable(name: "iter", scope: !2330, file: !3, line: 2064, type: !2334)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "call_expr_arg_iterator", file: !261, line: 5364, baseType: !2335)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "call_expr_arg_iterator_d", file: !261, line: 5360, size: 128, elements: !2336)
!2336 = !{!2337, !2338, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !2335, file: !261, line: 5361, baseType: !258, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2335, file: !261, line: 5362, baseType: !32, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2335, file: !261, line: 5363, baseType: !32, size: 32, offset: 96)
!2340 = !DILocalVariable(name: "d", scope: !2341, file: !3, line: 2112, type: !6)
!2341 = distinct !DILexicalBlock(scope: !2342, file: !3, line: 2108, column: 4)
!2342 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 2105, column: 6)
!2343 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 2102, column: 7)
!2344 = distinct !DILexicalBlock(scope: !2345, file: !3, line: 2093, column: 5)
!2345 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2092, column: 7)
!2346 = !DILocalVariable(name: "i", scope: !2347, file: !3, line: 2126, type: !2349)
!2347 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 2125, column: 5)
!2348 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2124, column: 7)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !2351, line: 150, size: 32, elements: !2352)
!2351 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !2350, file: !2351, line: 151, baseType: !13, size: 32)
!2354 = !DILocalVariable(name: "iter", scope: !2355, file: !3, line: 2148, type: !2334)
!2355 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 2147, column: 5)
!2356 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2146, column: 7)
!2357 = !DILocalVariable(name: "arg", scope: !2355, file: !3, line: 2149, type: !258)
!2358 = !DILocalVariable(name: "type", scope: !2359, file: !3, line: 2152, type: !258)
!2359 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 2151, column: 2)
!2360 = distinct !DILexicalBlock(scope: !2361, file: !3, line: 2150, column: 7)
!2361 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 2150, column: 7)
!2362 = !DILocalVariable(name: "temp", scope: !2363, file: !3, line: 2175, type: !6)
!2363 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2169, column: 5)
!2364 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2168, column: 7)
!2365 = !DILocalVariable(name: "caller_mode", scope: !2366, file: !3, line: 2335, type: !50)
!2366 = distinct !DILexicalBlock(scope: !2367, file: !3, line: 2334, column: 5)
!2367 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2333, column: 7)
!2368 = !DILocalVariable(name: "caller_promoted_mode", scope: !2366, file: !3, line: 2335, type: !50)
!2369 = !DILocalVariable(name: "callee_mode", scope: !2366, file: !3, line: 2336, type: !50)
!2370 = !DILocalVariable(name: "callee_promoted_mode", scope: !2366, file: !3, line: 2336, type: !50)
!2371 = !DILocalVariable(name: "caller_unsignedp", scope: !2366, file: !3, line: 2337, type: !32)
!2372 = !DILocalVariable(name: "callee_unsignedp", scope: !2366, file: !3, line: 2337, type: !32)
!2373 = !DILocalVariable(name: "caller_res", scope: !2366, file: !3, line: 2338, type: !258)
!2374 = !DILocalVariable(name: "sibcall_failure", scope: !2375, file: !3, line: 2377, type: !32)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !3, line: 2376, column: 5)
!2376 = distinct !DILexicalBlock(scope: !2377, file: !3, line: 2375, column: 3)
!2377 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2375, column: 3)
!2378 = !DILocalVariable(name: "save_pending_stack_adjust", scope: !2375, file: !3, line: 2382, type: !32)
!2379 = !DILocalVariable(name: "save_stack_pointer_delta", scope: !2375, file: !3, line: 2383, type: !32)
!2380 = !DILocalVariable(name: "insns", scope: !2375, file: !3, line: 2384, type: !6)
!2381 = !DILocalVariable(name: "before_call", scope: !2375, file: !3, line: 2385, type: !6)
!2382 = !DILocalVariable(name: "next_arg_reg", scope: !2375, file: !3, line: 2385, type: !6)
!2383 = !DILocalVariable(name: "after_args", scope: !2375, file: !3, line: 2385, type: !6)
!2384 = !DILocalVariable(name: "needed", scope: !2385, file: !3, line: 2491, type: !32)
!2385 = distinct !DILexicalBlock(scope: !2386, file: !3, line: 2485, column: 2)
!2386 = distinct !DILexicalBlock(scope: !2387, file: !3, line: 2468, column: 16)
!2387 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2453, column: 11)
!2388 = !DILocalVariable(name: "push_size", scope: !2389, file: !3, line: 2618, type: !6)
!2389 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 2617, column: 6)
!2390 = distinct !DILexicalBlock(scope: !2391, file: !3, line: 2616, column: 8)
!2391 = distinct !DILexicalBlock(scope: !2392, file: !3, line: 2611, column: 2)
!2392 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2610, column: 11)
!2393 = !DILocalVariable(name: "elem", scope: !2394, file: !3, line: 2704, type: !6)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 2703, column: 6)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !3, line: 2702, column: 8)
!2396 = distinct !DILexicalBlock(scope: !2397, file: !3, line: 2691, column: 2)
!2397 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2689, column: 11)
!2398 = !DILocalVariable(name: "where", scope: !2394, file: !3, line: 2705, type: !6)
!2399 = !DILocalVariable(name: "offset", scope: !2394, file: !3, line: 2706, type: !6)
!2400 = !DILocalVariable(name: "before_arg", scope: !2401, file: !3, line: 2740, type: !6)
!2401 = distinct !DILexicalBlock(scope: !2402, file: !3, line: 2739, column: 6)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 2738, column: 8)
!2403 = distinct !DILexicalBlock(scope: !2404, file: !3, line: 2737, column: 2)
!2404 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 2736, column: 7)
!2405 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2736, column: 7)
!2406 = !DILocalVariable(name: "before_arg", scope: !2407, file: !3, line: 2773, type: !6)
!2407 = distinct !DILexicalBlock(scope: !2408, file: !3, line: 2772, column: 6)
!2408 = distinct !DILexicalBlock(scope: !2409, file: !3, line: 2771, column: 8)
!2409 = distinct !DILexicalBlock(scope: !2410, file: !3, line: 2770, column: 2)
!2410 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 2770, column: 2)
!2411 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2769, column: 11)
!2412 = !DILocalVariable(name: "temp", scope: !2413, file: !3, line: 2871, type: !6)
!2413 = distinct !DILexicalBlock(scope: !2414, file: !3, line: 2870, column: 2)
!2414 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2869, column: 11)
!2415 = !DILocalVariable(name: "last", scope: !2413, file: !3, line: 2872, type: !6)
!2416 = !DILocalVariable(name: "insns", scope: !2413, file: !3, line: 2872, type: !6)
!2417 = !DILocalVariable(name: "last", scope: !2418, file: !3, line: 2903, type: !6)
!2418 = distinct !DILexicalBlock(scope: !2419, file: !3, line: 2898, column: 2)
!2419 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2897, column: 11)
!2420 = !DILocalVariable(name: "nt", scope: !2421, file: !3, line: 2955, type: !258)
!2421 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 2953, column: 6)
!2422 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 2952, column: 8)
!2423 = distinct !DILexicalBlock(scope: !2424, file: !3, line: 2951, column: 2)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !3, line: 2950, column: 16)
!2425 = distinct !DILexicalBlock(scope: !2426, file: !3, line: 2939, column: 16)
!2426 = distinct !DILexicalBlock(scope: !2427, file: !3, line: 2928, column: 16)
!2427 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2925, column: 11)
!2428 = !DILocalVariable(name: "may_overlap", scope: !2429, file: !3, line: 2973, type: !372)
!2429 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 2972, column: 2)
!2430 = distinct !DILexicalBlock(scope: !2424, file: !3, line: 2969, column: 16)
!2431 = !DILocalVariable(name: "val", scope: !2432, file: !3, line: 3017, type: !6)
!2432 = distinct !DILexicalBlock(scope: !2433, file: !3, line: 3016, column: 2)
!2433 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 3015, column: 16)
!2434 = !DILocalVariable(name: "type", scope: !2435, file: !3, line: 3034, type: !258)
!2435 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 3033, column: 2)
!2436 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 3030, column: 11)
!2437 = !DILocalVariable(name: "unsignedp", scope: !2435, file: !3, line: 3035, type: !32)
!2438 = !DILocalVariable(name: "offset", scope: !2435, file: !3, line: 3036, type: !32)
!2439 = !DILocalVariable(name: "pmode", scope: !2435, file: !3, line: 3037, type: !50)
!2440 = !DILocalVariable(name: "_rtx", scope: !2441, file: !3, line: 3058, type: !2442)
!2441 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 3058, column: 4)
!2442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!2443 = !DILocalVariable(name: "save_mode", scope: !2444, file: !3, line: 3087, type: !50)
!2444 = distinct !DILexicalBlock(scope: !2445, file: !3, line: 3086, column: 8)
!2445 = distinct !DILexicalBlock(scope: !2446, file: !3, line: 3085, column: 10)
!2446 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 3084, column: 4)
!2447 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 3084, column: 4)
!2448 = distinct !DILexicalBlock(scope: !2449, file: !3, line: 3076, column: 2)
!2449 = distinct !DILexicalBlock(scope: !2450, file: !3, line: 3075, column: 16)
!2450 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 3064, column: 11)
!2451 = !DILocalVariable(name: "stack_area", scope: !2444, file: !3, line: 3088, type: !6)
!2452 = !{i32 2, !"Dwarf Version", i32 4}
!2453 = !{i32 2, !"Debug Info Version", i32 3}
!2454 = !{i32 1, !"wchar_size", i32 4}
!2455 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2456 = distinct !DISubprogram(name: "vprintf", scope: !2457, file: !2457, line: 39, type: !2458, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2461)
!2457 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2458 = !DISubroutineType(types: !2459)
!2459 = !{!32, !2460, !2114}
!2460 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !35)
!2461 = !{!2462, !2463}
!2462 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2456, file: !2457, line: 39, type: !2460)
!2463 = !DILocalVariable(name: "__arg", arg: 2, scope: !2456, file: !2457, line: 39, type: !2114)
!2464 = !DILocation(line: 0, scope: !2456)
!2465 = !DILocation(line: 41, column: 20, scope: !2456)
!2466 = !DILocation(line: 41, column: 10, scope: !2456)
!2467 = !DILocation(line: 41, column: 3, scope: !2456)
!2468 = distinct !DISubprogram(name: "getchar", scope: !2457, file: !2457, line: 47, type: !2469, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2471)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{!32}
!2471 = !{}
!2472 = !DILocation(line: 49, column: 16, scope: !2468)
!2473 = !DILocation(line: 49, column: 10, scope: !2468)
!2474 = !DILocation(line: 49, column: 3, scope: !2468)
!2475 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2457, file: !2457, line: 56, type: !2476, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2528)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!32, !2478}
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2480, line: 7, baseType: !2481)
!2480 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2482, line: 49, size: 1728, elements: !2483)
!2482 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2483 = !{!2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2499, !2501, !2502, !2503, !2506, !2507, !2508, !2509, !2512, !2514, !2517, !2520, !2521, !2522, !2523, !2524}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2481, file: !2482, line: 51, baseType: !32, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2481, file: !2482, line: 54, baseType: !233, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2481, file: !2482, line: 55, baseType: !233, size: 64, offset: 128)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2481, file: !2482, line: 56, baseType: !233, size: 64, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2481, file: !2482, line: 57, baseType: !233, size: 64, offset: 256)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2481, file: !2482, line: 58, baseType: !233, size: 64, offset: 320)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2481, file: !2482, line: 59, baseType: !233, size: 64, offset: 384)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2481, file: !2482, line: 60, baseType: !233, size: 64, offset: 448)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2481, file: !2482, line: 61, baseType: !233, size: 64, offset: 512)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2481, file: !2482, line: 64, baseType: !233, size: 64, offset: 576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2481, file: !2482, line: 65, baseType: !233, size: 64, offset: 640)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2481, file: !2482, line: 66, baseType: !233, size: 64, offset: 704)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2481, file: !2482, line: 68, baseType: !2497, size: 64, offset: 768)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2482, line: 36, flags: DIFlagFwdDecl)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2481, file: !2482, line: 70, baseType: !2500, size: 64, offset: 832)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2481, file: !2482, line: 72, baseType: !32, size: 32, offset: 896)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2481, file: !2482, line: 73, baseType: !32, size: 32, offset: 928)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2481, file: !2482, line: 74, baseType: !2504, size: 64, offset: 960)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2505, line: 152, baseType: !227)
!2505 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2481, file: !2482, line: 77, baseType: !2074, size: 16, offset: 1024)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2481, file: !2482, line: 78, baseType: !1558, size: 8, offset: 1040)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2481, file: !2482, line: 79, baseType: !354, size: 8, offset: 1048)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2481, file: !2482, line: 81, baseType: !2510, size: 64, offset: 1088)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2482, line: 43, baseType: null)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2481, file: !2482, line: 89, baseType: !2513, size: 64, offset: 1152)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2505, line: 153, baseType: !227)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2481, file: !2482, line: 91, baseType: !2515, size: 64, offset: 1216)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2482, line: 37, flags: DIFlagFwdDecl)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2481, file: !2482, line: 92, baseType: !2518, size: 64, offset: 1280)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2482, line: 38, flags: DIFlagFwdDecl)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2481, file: !2482, line: 93, baseType: !2500, size: 64, offset: 1344)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2481, file: !2482, line: 94, baseType: !248, size: 64, offset: 1408)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2481, file: !2482, line: 95, baseType: !632, size: 64, offset: 1472)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2481, file: !2482, line: 96, baseType: !32, size: 32, offset: 1536)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2481, file: !2482, line: 98, baseType: !2525, size: 160, offset: 1568)
!2525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 160, elements: !2526)
!2526 = !{!2527}
!2527 = !DISubrange(count: 20)
!2528 = !{!2529}
!2529 = !DILocalVariable(name: "__fp", arg: 1, scope: !2475, file: !2457, line: 56, type: !2478)
!2530 = !DILocation(line: 0, scope: !2475)
!2531 = !DILocation(line: 58, column: 10, scope: !2475)
!2532 = !DILocation(line: 58, column: 3, scope: !2475)
!2533 = distinct !DISubprogram(name: "getc_unlocked", scope: !2457, file: !2457, line: 66, type: !2476, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2534)
!2534 = !{!2535}
!2535 = !DILocalVariable(name: "__fp", arg: 1, scope: !2533, file: !2457, line: 66, type: !2478)
!2536 = !DILocation(line: 0, scope: !2533)
!2537 = !DILocation(line: 68, column: 10, scope: !2533)
!2538 = !DILocation(line: 68, column: 3, scope: !2533)
!2539 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2457, file: !2457, line: 73, type: !2469, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2471)
!2540 = !DILocation(line: 75, column: 10, scope: !2539)
!2541 = !DILocation(line: 75, column: 3, scope: !2539)
!2542 = distinct !DISubprogram(name: "putchar", scope: !2457, file: !2457, line: 82, type: !2543, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!32, !32}
!2545 = !{!2546}
!2546 = !DILocalVariable(name: "__c", arg: 1, scope: !2542, file: !2457, line: 82, type: !32)
!2547 = !DILocation(line: 0, scope: !2542)
!2548 = !DILocation(line: 84, column: 21, scope: !2542)
!2549 = !DILocation(line: 84, column: 10, scope: !2542)
!2550 = !DILocation(line: 84, column: 3, scope: !2542)
!2551 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2457, file: !2457, line: 91, type: !2552, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2554)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!32, !32, !2478}
!2554 = !{!2555, !2556}
!2555 = !DILocalVariable(name: "__c", arg: 1, scope: !2551, file: !2457, line: 91, type: !32)
!2556 = !DILocalVariable(name: "__stream", arg: 2, scope: !2551, file: !2457, line: 91, type: !2478)
!2557 = !DILocation(line: 0, scope: !2551)
!2558 = !DILocation(line: 93, column: 10, scope: !2551)
!2559 = !DILocation(line: 93, column: 3, scope: !2551)
!2560 = distinct !DISubprogram(name: "putc_unlocked", scope: !2457, file: !2457, line: 101, type: !2552, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2561)
!2561 = !{!2562, !2563}
!2562 = !DILocalVariable(name: "__c", arg: 1, scope: !2560, file: !2457, line: 101, type: !32)
!2563 = !DILocalVariable(name: "__stream", arg: 2, scope: !2560, file: !2457, line: 101, type: !2478)
!2564 = !DILocation(line: 0, scope: !2560)
!2565 = !DILocation(line: 103, column: 10, scope: !2560)
!2566 = !DILocation(line: 103, column: 3, scope: !2560)
!2567 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2457, file: !2457, line: 108, type: !2543, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2568)
!2568 = !{!2569}
!2569 = !DILocalVariable(name: "__c", arg: 1, scope: !2567, file: !2457, line: 108, type: !32)
!2570 = !DILocation(line: 0, scope: !2567)
!2571 = !DILocation(line: 110, column: 10, scope: !2567)
!2572 = !DILocation(line: 110, column: 3, scope: !2567)
!2573 = distinct !DISubprogram(name: "getline", scope: !2457, file: !2457, line: 118, type: !2574, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2578)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{!2576, !2073, !2577, !2478}
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2505, line: 193, baseType: !227)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!2578 = !{!2579, !2580, !2581}
!2579 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2573, file: !2457, line: 118, type: !2073)
!2580 = !DILocalVariable(name: "__n", arg: 2, scope: !2573, file: !2457, line: 118, type: !2577)
!2581 = !DILocalVariable(name: "__stream", arg: 3, scope: !2573, file: !2457, line: 118, type: !2478)
!2582 = !DILocation(line: 0, scope: !2573)
!2583 = !DILocation(line: 120, column: 10, scope: !2573)
!2584 = !DILocation(line: 120, column: 3, scope: !2573)
!2585 = distinct !DISubprogram(name: "feof_unlocked", scope: !2457, file: !2457, line: 128, type: !2476, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2586)
!2586 = !{!2587}
!2587 = !DILocalVariable(name: "__stream", arg: 1, scope: !2585, file: !2457, line: 128, type: !2478)
!2588 = !DILocation(line: 0, scope: !2585)
!2589 = !DILocation(line: 130, column: 10, scope: !2585)
!2590 = !DILocation(line: 130, column: 3, scope: !2585)
!2591 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2457, file: !2457, line: 135, type: !2476, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2592)
!2592 = !{!2593}
!2593 = !DILocalVariable(name: "__stream", arg: 1, scope: !2591, file: !2457, line: 135, type: !2478)
!2594 = !DILocation(line: 0, scope: !2591)
!2595 = !DILocation(line: 137, column: 10, scope: !2591)
!2596 = !DILocation(line: 137, column: 3, scope: !2591)
!2597 = distinct !DISubprogram(name: "tolower", scope: !2598, file: !2598, line: 207, type: !2543, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2599)
!2598 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2599 = !{!2600}
!2600 = !DILocalVariable(name: "__c", arg: 1, scope: !2597, file: !2598, line: 207, type: !32)
!2601 = !DILocation(line: 0, scope: !2597)
!2602 = !DILocation(line: 209, column: 22, scope: !2597)
!2603 = !DILocation(line: 209, column: 39, scope: !2597)
!2604 = !DILocation(line: 209, column: 38, scope: !2597)
!2605 = !DILocation(line: 209, column: 37, scope: !2597)
!2606 = !DILocation(line: 209, column: 10, scope: !2597)
!2607 = !DILocation(line: 209, column: 3, scope: !2597)
!2608 = distinct !DISubprogram(name: "toupper", scope: !2598, file: !2598, line: 213, type: !2543, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2609)
!2609 = !{!2610}
!2610 = !DILocalVariable(name: "__c", arg: 1, scope: !2608, file: !2598, line: 213, type: !32)
!2611 = !DILocation(line: 0, scope: !2608)
!2612 = !DILocation(line: 215, column: 22, scope: !2608)
!2613 = !DILocation(line: 215, column: 39, scope: !2608)
!2614 = !DILocation(line: 215, column: 38, scope: !2608)
!2615 = !DILocation(line: 215, column: 37, scope: !2608)
!2616 = !DILocation(line: 215, column: 10, scope: !2608)
!2617 = !DILocation(line: 215, column: 3, scope: !2608)
!2618 = distinct !DISubprogram(name: "atoi", scope: !2619, file: !2619, line: 361, type: !2620, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2622)
!2619 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!32, !35}
!2622 = !{!2623}
!2623 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2618, file: !2619, line: 361, type: !35)
!2624 = !DILocation(line: 0, scope: !2618)
!2625 = !DILocation(line: 363, column: 16, scope: !2618)
!2626 = !DILocation(line: 363, column: 10, scope: !2618)
!2627 = !DILocation(line: 363, column: 3, scope: !2618)
!2628 = distinct !DISubprogram(name: "atol", scope: !2619, file: !2619, line: 366, type: !2629, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2631)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!227, !35}
!2631 = !{!2632}
!2632 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2628, file: !2619, line: 366, type: !35)
!2633 = !DILocation(line: 0, scope: !2628)
!2634 = !DILocation(line: 368, column: 10, scope: !2628)
!2635 = !DILocation(line: 368, column: 3, scope: !2628)
!2636 = distinct !DISubprogram(name: "atoll", scope: !2619, file: !2619, line: 373, type: !2637, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2640)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!2639, !35}
!2639 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2640 = !{!2641}
!2641 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2636, file: !2619, line: 373, type: !35)
!2642 = !DILocation(line: 0, scope: !2636)
!2643 = !DILocation(line: 375, column: 10, scope: !2636)
!2644 = !DILocation(line: 375, column: 3, scope: !2636)
!2645 = distinct !DISubprogram(name: "bsearch", scope: !2646, file: !2646, line: 20, type: !2647, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2650)
!2646 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2647 = !DISubroutineType(types: !2648)
!2648 = !{!248, !617, !617, !632, !632, !2649}
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2619, line: 808, baseType: !621)
!2650 = !{!2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660}
!2651 = !DILocalVariable(name: "__key", arg: 1, scope: !2645, file: !2646, line: 20, type: !617)
!2652 = !DILocalVariable(name: "__base", arg: 2, scope: !2645, file: !2646, line: 20, type: !617)
!2653 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2645, file: !2646, line: 20, type: !632)
!2654 = !DILocalVariable(name: "__size", arg: 4, scope: !2645, file: !2646, line: 20, type: !632)
!2655 = !DILocalVariable(name: "__compar", arg: 5, scope: !2645, file: !2646, line: 21, type: !2649)
!2656 = !DILocalVariable(name: "__l", scope: !2645, file: !2646, line: 23, type: !632)
!2657 = !DILocalVariable(name: "__u", scope: !2645, file: !2646, line: 23, type: !632)
!2658 = !DILocalVariable(name: "__idx", scope: !2645, file: !2646, line: 23, type: !632)
!2659 = !DILocalVariable(name: "__p", scope: !2645, file: !2646, line: 24, type: !617)
!2660 = !DILocalVariable(name: "__comparison", scope: !2645, file: !2646, line: 25, type: !32)
!2661 = !DILocation(line: 0, scope: !2645)
!2662 = !DILocation(line: 29, column: 3, scope: !2645)
!2663 = !DILocation(line: 27, column: 7, scope: !2645)
!2664 = !DILocation(line: 29, column: 14, scope: !2645)
!2665 = !DILocation(line: 31, column: 20, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2645, file: !2646, line: 30, column: 5)
!2667 = !DILocation(line: 31, column: 27, scope: !2666)
!2668 = !DILocation(line: 32, column: 56, scope: !2666)
!2669 = !DILocation(line: 32, column: 47, scope: !2666)
!2670 = !DILocation(line: 33, column: 22, scope: !2666)
!2671 = !DILocation(line: 34, column: 24, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2666, file: !2646, line: 34, column: 11)
!2673 = !DILocation(line: 34, column: 11, scope: !2666)
!2674 = !DILocation(line: 36, column: 29, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2672, file: !2646, line: 36, column: 16)
!2676 = !DILocation(line: 36, column: 16, scope: !2672)
!2677 = !DILocation(line: 37, column: 14, scope: !2675)
!2678 = distinct !{!2678, !2662, !2679}
!2679 = !DILocation(line: 40, column: 5, scope: !2645)
!2680 = !DILocation(line: 43, column: 1, scope: !2645)
!2681 = distinct !DISubprogram(name: "atof", scope: !2682, file: !2682, line: 25, type: !2683, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2686)
!2682 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!2685, !35}
!2685 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2686 = !{!2687}
!2687 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2681, file: !2682, line: 25, type: !35)
!2688 = !DILocation(line: 0, scope: !2681)
!2689 = !DILocation(line: 27, column: 10, scope: !2681)
!2690 = !DILocation(line: 27, column: 3, scope: !2681)
!2691 = distinct !DISubprogram(name: "strtoimax", scope: !2692, file: !2692, line: 324, type: !2693, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2699)
!2692 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!2695, !2460, !2698, !32}
!2695 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2696, line: 101, baseType: !2697)
!2696 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2505, line: 72, baseType: !227)
!2698 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2073)
!2699 = !{!2700, !2701, !2702}
!2700 = !DILocalVariable(name: "nptr", arg: 1, scope: !2691, file: !2692, line: 324, type: !2460)
!2701 = !DILocalVariable(name: "endptr", arg: 2, scope: !2691, file: !2692, line: 324, type: !2698)
!2702 = !DILocalVariable(name: "base", arg: 3, scope: !2691, file: !2692, line: 324, type: !32)
!2703 = !DILocation(line: 0, scope: !2691)
!2704 = !DILocation(line: 327, column: 10, scope: !2691)
!2705 = !DILocation(line: 327, column: 3, scope: !2691)
!2706 = distinct !DISubprogram(name: "strtoumax", scope: !2692, file: !2692, line: 336, type: !2707, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2711)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!2709, !2460, !2698, !32}
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2696, line: 102, baseType: !2710)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2505, line: 73, baseType: !210)
!2711 = !{!2712, !2713, !2714}
!2712 = !DILocalVariable(name: "nptr", arg: 1, scope: !2706, file: !2692, line: 336, type: !2460)
!2713 = !DILocalVariable(name: "endptr", arg: 2, scope: !2706, file: !2692, line: 336, type: !2698)
!2714 = !DILocalVariable(name: "base", arg: 3, scope: !2706, file: !2692, line: 336, type: !32)
!2715 = !DILocation(line: 0, scope: !2706)
!2716 = !DILocation(line: 339, column: 10, scope: !2706)
!2717 = !DILocation(line: 339, column: 3, scope: !2706)
!2718 = distinct !DISubprogram(name: "wcstoimax", scope: !2692, file: !2692, line: 348, type: !2719, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2728)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!2695, !2721, !2725, !32}
!2721 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2722)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2724)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2692, line: 34, baseType: !32)
!2725 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2726)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2728 = !{!2729, !2730, !2731}
!2729 = !DILocalVariable(name: "nptr", arg: 1, scope: !2718, file: !2692, line: 348, type: !2721)
!2730 = !DILocalVariable(name: "endptr", arg: 2, scope: !2718, file: !2692, line: 348, type: !2725)
!2731 = !DILocalVariable(name: "base", arg: 3, scope: !2718, file: !2692, line: 348, type: !32)
!2732 = !DILocation(line: 0, scope: !2718)
!2733 = !DILocation(line: 351, column: 10, scope: !2718)
!2734 = !DILocation(line: 351, column: 3, scope: !2718)
!2735 = distinct !DISubprogram(name: "wcstoumax", scope: !2692, file: !2692, line: 362, type: !2736, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2738)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!2709, !2721, !2725, !32}
!2738 = !{!2739, !2740, !2741}
!2739 = !DILocalVariable(name: "nptr", arg: 1, scope: !2735, file: !2692, line: 362, type: !2721)
!2740 = !DILocalVariable(name: "endptr", arg: 2, scope: !2735, file: !2692, line: 362, type: !2725)
!2741 = !DILocalVariable(name: "base", arg: 3, scope: !2735, file: !2692, line: 362, type: !32)
!2742 = !DILocation(line: 0, scope: !2735)
!2743 = !DILocation(line: 365, column: 10, scope: !2735)
!2744 = !DILocation(line: 365, column: 3, scope: !2735)
!2745 = distinct !DISubprogram(name: "stat", scope: !2746, file: !2746, line: 453, type: !2747, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2784)
!2746 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2747 = !DISubroutineType(types: !2748)
!2748 = !{!32, !35, !2749}
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2751, line: 46, size: 1152, elements: !2752)
!2751 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2752 = !{!2753, !2755, !2757, !2759, !2761, !2763, !2765, !2766, !2767, !2768, !2770, !2772, !2780, !2781, !2782}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2750, file: !2751, line: 48, baseType: !2754, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2505, line: 145, baseType: !210)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2750, file: !2751, line: 53, baseType: !2756, size: 64, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2505, line: 148, baseType: !210)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2750, file: !2751, line: 61, baseType: !2758, size: 64, offset: 128)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2505, line: 151, baseType: !210)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2750, file: !2751, line: 62, baseType: !2760, size: 32, offset: 192)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2505, line: 150, baseType: !13)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2750, file: !2751, line: 64, baseType: !2762, size: 32, offset: 224)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2505, line: 146, baseType: !13)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2750, file: !2751, line: 65, baseType: !2764, size: 32, offset: 256)
!2764 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2505, line: 147, baseType: !13)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2750, file: !2751, line: 67, baseType: !32, size: 32, offset: 288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2750, file: !2751, line: 69, baseType: !2754, size: 64, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2750, file: !2751, line: 74, baseType: !2504, size: 64, offset: 384)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2750, file: !2751, line: 78, baseType: !2769, size: 64, offset: 448)
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2505, line: 174, baseType: !227)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2750, file: !2751, line: 80, baseType: !2771, size: 64, offset: 512)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2505, line: 179, baseType: !227)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2750, file: !2751, line: 91, baseType: !2773, size: 128, offset: 576)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2774, line: 10, size: 128, elements: !2775)
!2774 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2775 = !{!2776, !2778}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2773, file: !2774, line: 12, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2505, line: 160, baseType: !227)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2773, file: !2774, line: 16, baseType: !2779, size: 64, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2505, line: 196, baseType: !227)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2750, file: !2751, line: 92, baseType: !2773, size: 128, offset: 704)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2750, file: !2751, line: 93, baseType: !2773, size: 128, offset: 832)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2750, file: !2751, line: 106, baseType: !2783, size: 192, offset: 960)
!2783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2779, size: 192, elements: !330)
!2784 = !{!2785, !2786}
!2785 = !DILocalVariable(name: "__path", arg: 1, scope: !2745, file: !2746, line: 453, type: !35)
!2786 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2745, file: !2746, line: 453, type: !2749)
!2787 = !DILocation(line: 0, scope: !2745)
!2788 = !DILocation(line: 455, column: 10, scope: !2745)
!2789 = !DILocation(line: 455, column: 3, scope: !2745)
!2790 = distinct !DISubprogram(name: "lstat", scope: !2746, file: !2746, line: 460, type: !2747, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2791)
!2791 = !{!2792, !2793}
!2792 = !DILocalVariable(name: "__path", arg: 1, scope: !2790, file: !2746, line: 460, type: !35)
!2793 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2790, file: !2746, line: 460, type: !2749)
!2794 = !DILocation(line: 0, scope: !2790)
!2795 = !DILocation(line: 462, column: 10, scope: !2790)
!2796 = !DILocation(line: 462, column: 3, scope: !2790)
!2797 = distinct !DISubprogram(name: "fstat", scope: !2746, file: !2746, line: 467, type: !2798, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2800)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!32, !32, !2749}
!2800 = !{!2801, !2802}
!2801 = !DILocalVariable(name: "__fd", arg: 1, scope: !2797, file: !2746, line: 467, type: !32)
!2802 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2797, file: !2746, line: 467, type: !2749)
!2803 = !DILocation(line: 0, scope: !2797)
!2804 = !DILocation(line: 469, column: 10, scope: !2797)
!2805 = !DILocation(line: 469, column: 3, scope: !2797)
!2806 = distinct !DISubprogram(name: "fstatat", scope: !2746, file: !2746, line: 474, type: !2807, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2809)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!32, !32, !35, !2749, !32}
!2809 = !{!2810, !2811, !2812, !2813}
!2810 = !DILocalVariable(name: "__fd", arg: 1, scope: !2806, file: !2746, line: 474, type: !32)
!2811 = !DILocalVariable(name: "__filename", arg: 2, scope: !2806, file: !2746, line: 474, type: !35)
!2812 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2806, file: !2746, line: 474, type: !2749)
!2813 = !DILocalVariable(name: "__flag", arg: 4, scope: !2806, file: !2746, line: 474, type: !32)
!2814 = !DILocation(line: 0, scope: !2806)
!2815 = !DILocation(line: 477, column: 10, scope: !2806)
!2816 = !DILocation(line: 477, column: 3, scope: !2806)
!2817 = distinct !DISubprogram(name: "mknod", scope: !2746, file: !2746, line: 483, type: !2818, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2820)
!2818 = !DISubroutineType(types: !2819)
!2819 = !{!32, !35, !2760, !2754}
!2820 = !{!2821, !2822, !2823}
!2821 = !DILocalVariable(name: "__path", arg: 1, scope: !2817, file: !2746, line: 483, type: !35)
!2822 = !DILocalVariable(name: "__mode", arg: 2, scope: !2817, file: !2746, line: 483, type: !2760)
!2823 = !DILocalVariable(name: "__dev", arg: 3, scope: !2817, file: !2746, line: 483, type: !2754)
!2824 = !DILocation(line: 0, scope: !2817)
!2825 = !DILocation(line: 485, column: 10, scope: !2817)
!2826 = !DILocation(line: 485, column: 3, scope: !2817)
!2827 = distinct !DISubprogram(name: "mknodat", scope: !2746, file: !2746, line: 491, type: !2828, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2830)
!2828 = !DISubroutineType(types: !2829)
!2829 = !{!32, !32, !35, !2760, !2754}
!2830 = !{!2831, !2832, !2833, !2834}
!2831 = !DILocalVariable(name: "__fd", arg: 1, scope: !2827, file: !2746, line: 491, type: !32)
!2832 = !DILocalVariable(name: "__path", arg: 2, scope: !2827, file: !2746, line: 491, type: !35)
!2833 = !DILocalVariable(name: "__mode", arg: 3, scope: !2827, file: !2746, line: 491, type: !2760)
!2834 = !DILocalVariable(name: "__dev", arg: 4, scope: !2827, file: !2746, line: 491, type: !2754)
!2835 = !DILocation(line: 0, scope: !2827)
!2836 = !DILocation(line: 494, column: 10, scope: !2827)
!2837 = !DILocation(line: 494, column: 3, scope: !2827)
!2838 = distinct !DISubprogram(name: "stat64", scope: !2746, file: !2746, line: 502, type: !2839, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2861)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!32, !35, !2841}
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2751, line: 119, size: 1152, elements: !2843)
!2843 = !{!2844, !2845, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2857, !2858, !2859, !2860}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2842, file: !2751, line: 121, baseType: !2754, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2842, file: !2751, line: 123, baseType: !2846, size: 64, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2505, line: 149, baseType: !210)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2842, file: !2751, line: 124, baseType: !2758, size: 64, offset: 128)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2842, file: !2751, line: 125, baseType: !2760, size: 32, offset: 192)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2842, file: !2751, line: 132, baseType: !2762, size: 32, offset: 224)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2842, file: !2751, line: 133, baseType: !2764, size: 32, offset: 256)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2842, file: !2751, line: 135, baseType: !32, size: 32, offset: 288)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2842, file: !2751, line: 136, baseType: !2754, size: 64, offset: 320)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2842, file: !2751, line: 137, baseType: !2504, size: 64, offset: 384)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2842, file: !2751, line: 143, baseType: !2769, size: 64, offset: 448)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2842, file: !2751, line: 144, baseType: !2856, size: 64, offset: 512)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2505, line: 180, baseType: !227)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2842, file: !2751, line: 152, baseType: !2773, size: 128, offset: 576)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2842, file: !2751, line: 153, baseType: !2773, size: 128, offset: 704)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2842, file: !2751, line: 154, baseType: !2773, size: 128, offset: 832)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2842, file: !2751, line: 164, baseType: !2783, size: 192, offset: 960)
!2861 = !{!2862, !2863}
!2862 = !DILocalVariable(name: "__path", arg: 1, scope: !2838, file: !2746, line: 502, type: !35)
!2863 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2838, file: !2746, line: 502, type: !2841)
!2864 = !DILocation(line: 0, scope: !2838)
!2865 = !DILocation(line: 504, column: 10, scope: !2838)
!2866 = !DILocation(line: 504, column: 3, scope: !2838)
!2867 = distinct !DISubprogram(name: "lstat64", scope: !2746, file: !2746, line: 509, type: !2839, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2868)
!2868 = !{!2869, !2870}
!2869 = !DILocalVariable(name: "__path", arg: 1, scope: !2867, file: !2746, line: 509, type: !35)
!2870 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2867, file: !2746, line: 509, type: !2841)
!2871 = !DILocation(line: 0, scope: !2867)
!2872 = !DILocation(line: 511, column: 10, scope: !2867)
!2873 = !DILocation(line: 511, column: 3, scope: !2867)
!2874 = distinct !DISubprogram(name: "fstat64", scope: !2746, file: !2746, line: 516, type: !2875, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2877)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!32, !32, !2841}
!2877 = !{!2878, !2879}
!2878 = !DILocalVariable(name: "__fd", arg: 1, scope: !2874, file: !2746, line: 516, type: !32)
!2879 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2874, file: !2746, line: 516, type: !2841)
!2880 = !DILocation(line: 0, scope: !2874)
!2881 = !DILocation(line: 518, column: 10, scope: !2874)
!2882 = !DILocation(line: 518, column: 3, scope: !2874)
!2883 = distinct !DISubprogram(name: "fstatat64", scope: !2746, file: !2746, line: 523, type: !2884, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2886)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{!32, !32, !35, !2841, !32}
!2886 = !{!2887, !2888, !2889, !2890}
!2887 = !DILocalVariable(name: "__fd", arg: 1, scope: !2883, file: !2746, line: 523, type: !32)
!2888 = !DILocalVariable(name: "__filename", arg: 2, scope: !2883, file: !2746, line: 523, type: !35)
!2889 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2883, file: !2746, line: 523, type: !2841)
!2890 = !DILocalVariable(name: "__flag", arg: 4, scope: !2883, file: !2746, line: 523, type: !32)
!2891 = !DILocation(line: 0, scope: !2883)
!2892 = !DILocation(line: 526, column: 10, scope: !2883)
!2893 = !DILocation(line: 526, column: 3, scope: !2883)
!2894 = distinct !DISubprogram(name: "prepare_call_address", scope: !3, file: !3, line: 170, type: !2895, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2897)
!2895 = !DISubroutineType(types: !2896)
!2896 = !{!6, !258, !6, !6, !2105, !32, !32}
!2897 = !{!2898, !2899, !2900, !2901, !2902, !2903, !2904}
!2898 = !DILocalVariable(name: "fndecl", arg: 1, scope: !2894, file: !3, line: 170, type: !258)
!2899 = !DILocalVariable(name: "funexp", arg: 2, scope: !2894, file: !3, line: 170, type: !6)
!2900 = !DILocalVariable(name: "static_chain_value", arg: 3, scope: !2894, file: !3, line: 170, type: !6)
!2901 = !DILocalVariable(name: "call_fusage", arg: 4, scope: !2894, file: !3, line: 171, type: !2105)
!2902 = !DILocalVariable(name: "reg_parm_seen", arg: 5, scope: !2894, file: !3, line: 171, type: !32)
!2903 = !DILocalVariable(name: "sibcallp", arg: 6, scope: !2894, file: !3, line: 171, type: !32)
!2904 = !DILocalVariable(name: "chain", scope: !2905, file: !3, line: 191, type: !6)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 190, column: 5)
!2906 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 189, column: 7)
!2907 = !DILocation(line: 0, scope: !2894)
!2908 = !DILocation(line: 175, column: 7, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 175, column: 7)
!2910 = !DILocation(line: 175, column: 25, scope: !2909)
!2911 = !DILocation(line: 175, column: 7, scope: !2894)
!2912 = !DILocation(line: 178, column: 42, scope: !2909)
!2913 = !DILocation(line: 0, scope: !2909)
!2914 = !DILocation(line: 178, column: 15, scope: !2909)
!2915 = !DILocation(line: 179, column: 10, scope: !2909)
!2916 = !DILocation(line: 189, column: 26, scope: !2906)
!2917 = !DILocation(line: 189, column: 7, scope: !2894)
!2918 = !DILocation(line: 193, column: 7, scope: !2905)
!2919 = !DILocation(line: 194, column: 29, scope: !2905)
!2920 = !DILocation(line: 194, column: 15, scope: !2905)
!2921 = !DILocation(line: 0, scope: !2905)
!2922 = !DILocation(line: 195, column: 28, scope: !2905)
!2923 = !DILocation(line: 197, column: 7, scope: !2905)
!2924 = !DILocation(line: 198, column: 11, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 198, column: 11)
!2926 = !DILocation(line: 198, column: 11, scope: !2905)
!2927 = !DILocation(line: 199, column: 2, scope: !2925)
!2928 = !DILocation(line: 202, column: 3, scope: !2894)
!2929 = distinct !DISubprogram(name: "setjmp_call_p", scope: !3, file: !3, line: 545, type: !2930, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2935)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!32, !2932}
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !7, line: 59, baseType: !2933)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !260)
!2935 = !{!2936}
!2936 = !DILocalVariable(name: "fndecl", arg: 1, scope: !2929, file: !3, line: 545, type: !2932)
!2937 = !DILocation(line: 0, scope: !2929)
!2938 = !DILocation(line: 547, column: 10, scope: !2929)
!2939 = !DILocation(line: 547, column: 41, scope: !2929)
!2940 = !DILocation(line: 547, column: 3, scope: !2929)
!2941 = distinct !DISubprogram(name: "special_function_p", scope: !3, file: !3, line: 467, type: !2942, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !2944)
!2942 = !DISubroutineType(types: !2943)
!2943 = !{!32, !2932, !32}
!2944 = !{!2945, !2946, !2947, !2950}
!2945 = !DILocalVariable(name: "fndecl", arg: 1, scope: !2941, file: !3, line: 467, type: !2932)
!2946 = !DILocalVariable(name: "flags", arg: 2, scope: !2941, file: !3, line: 467, type: !32)
!2947 = !DILocalVariable(name: "name", scope: !2948, file: !3, line: 482, type: !35)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 481, column: 5)
!2949 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 469, column: 7)
!2950 = !DILocalVariable(name: "tname", scope: !2948, file: !3, line: 483, type: !35)
!2951 = !DILocation(line: 0, scope: !2941)
!2952 = !DILocation(line: 469, column: 7, scope: !2949)
!2953 = !DILocation(line: 469, column: 14, scope: !2949)
!2954 = !DILocation(line: 469, column: 17, scope: !2949)
!2955 = !DILocation(line: 470, column: 7, scope: !2949)
!2956 = !DILocation(line: 470, column: 10, scope: !2949)
!2957 = !DILocation(line: 470, column: 49, scope: !2949)
!2958 = !DILocation(line: 478, column: 7, scope: !2949)
!2959 = !DILocation(line: 478, column: 11, scope: !2949)
!2960 = !DILocation(line: 478, column: 33, scope: !2949)
!2961 = !DILocation(line: 479, column: 4, scope: !2949)
!2962 = !DILocation(line: 479, column: 7, scope: !2949)
!2963 = !DILocation(line: 479, column: 41, scope: !2949)
!2964 = !DILocation(line: 480, column: 7, scope: !2949)
!2965 = !DILocation(line: 480, column: 10, scope: !2949)
!2966 = !DILocation(line: 469, column: 7, scope: !2941)
!2967 = !DILocation(line: 482, column: 26, scope: !2948)
!2968 = !DILocation(line: 0, scope: !2948)
!2969 = !DILocation(line: 488, column: 52, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 488, column: 11)
!2971 = !DILocation(line: 489, column: 6, scope: !2970)
!2972 = !DILocation(line: 489, column: 9, scope: !2970)
!2973 = !DILocation(line: 489, column: 17, scope: !2970)
!2974 = !DILocation(line: 490, column: 6, scope: !2970)
!2975 = !DILocation(line: 490, column: 11, scope: !2970)
!2976 = !DILocation(line: 491, column: 5, scope: !2970)
!2977 = !DILocation(line: 491, column: 9, scope: !2970)
!2978 = !DILocation(line: 0, scope: !2970)
!2979 = !DILocation(line: 491, column: 48, scope: !2970)
!2980 = !DILocation(line: 492, column: 9, scope: !2970)
!2981 = !DILocation(line: 492, column: 12, scope: !2970)
!2982 = !DILocation(line: 492, column: 20, scope: !2970)
!2983 = !DILocation(line: 493, column: 9, scope: !2970)
!2984 = !DILocation(line: 493, column: 14, scope: !2970)
!2985 = !DILocation(line: 488, column: 11, scope: !2948)
!2986 = !DILocation(line: 494, column: 8, scope: !2970)
!2987 = !DILocation(line: 494, column: 2, scope: !2970)
!2988 = !DILocation(line: 497, column: 11, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 497, column: 11)
!2990 = !DILocation(line: 497, column: 19, scope: !2989)
!2991 = !DILocation(line: 497, column: 11, scope: !2948)
!2992 = !DILocation(line: 499, column: 8, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2994, file: !3, line: 499, column: 8)
!2994 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 498, column: 2)
!2995 = !DILocation(line: 499, column: 16, scope: !2993)
!2996 = !DILocation(line: 500, column: 8, scope: !2993)
!2997 = !DILocation(line: 500, column: 11, scope: !2993)
!2998 = !DILocation(line: 500, column: 19, scope: !2993)
!2999 = !DILocation(line: 501, column: 8, scope: !2993)
!3000 = !DILocation(line: 501, column: 26, scope: !2993)
!3001 = !DILocation(line: 501, column: 12, scope: !2993)
!3002 = !DILocation(line: 499, column: 8, scope: !2994)
!3003 = !DILocation(line: 503, column: 13, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 503, column: 13)
!3005 = !DILocation(line: 502, column: 12, scope: !2993)
!3006 = !DILocation(line: 502, column: 6, scope: !2993)
!3007 = !DILocation(line: 503, column: 21, scope: !3004)
!3008 = !DILocation(line: 503, column: 28, scope: !3004)
!3009 = !DILocation(line: 503, column: 31, scope: !3004)
!3010 = !DILocation(line: 503, column: 39, scope: !3004)
!3011 = !DILocation(line: 503, column: 13, scope: !2993)
!3012 = !DILocation(line: 504, column: 12, scope: !3004)
!3013 = !DILocation(line: 504, column: 6, scope: !3004)
!3014 = !DILocation(line: 505, column: 13, scope: !3004)
!3015 = !DILocation(line: 511, column: 11, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 511, column: 11)
!3017 = !DILocation(line: 511, column: 20, scope: !3016)
!3018 = !DILocation(line: 511, column: 11, scope: !2948)
!3019 = !DILocation(line: 513, column: 9, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 513, column: 8)
!3021 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 512, column: 2)
!3022 = !DILocation(line: 513, column: 18, scope: !3020)
!3023 = !DILocation(line: 514, column: 9, scope: !3020)
!3024 = !DILocation(line: 514, column: 15, scope: !3020)
!3025 = !DILocation(line: 515, column: 6, scope: !3020)
!3026 = !DILocation(line: 515, column: 11, scope: !3020)
!3027 = !DILocation(line: 516, column: 8, scope: !3020)
!3028 = !DILocation(line: 516, column: 12, scope: !3020)
!3029 = !DILocation(line: 516, column: 21, scope: !3020)
!3030 = !DILocation(line: 517, column: 5, scope: !3020)
!3031 = !DILocation(line: 517, column: 10, scope: !3020)
!3032 = !DILocation(line: 518, column: 8, scope: !3020)
!3033 = !DILocation(line: 518, column: 12, scope: !3020)
!3034 = !DILocation(line: 518, column: 21, scope: !3020)
!3035 = !DILocation(line: 519, column: 5, scope: !3020)
!3036 = !DILocation(line: 519, column: 10, scope: !3020)
!3037 = !DILocation(line: 513, column: 8, scope: !3021)
!3038 = !DILocation(line: 520, column: 12, scope: !3020)
!3039 = !DILocation(line: 520, column: 6, scope: !3020)
!3040 = !DILocation(line: 522, column: 8, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 522, column: 8)
!3042 = !DILocation(line: 522, column: 17, scope: !3041)
!3043 = !DILocation(line: 523, column: 8, scope: !3041)
!3044 = !DILocation(line: 523, column: 13, scope: !3041)
!3045 = !DILocation(line: 524, column: 12, scope: !3041)
!3046 = !DILocation(line: 522, column: 8, scope: !3021)
!3047 = !DILocation(line: 526, column: 26, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 526, column: 16)
!3049 = !DILocation(line: 526, column: 33, scope: !3048)
!3050 = !DILocation(line: 526, column: 36, scope: !3048)
!3051 = !DILocation(line: 526, column: 45, scope: !3048)
!3052 = !DILocation(line: 527, column: 3, scope: !3048)
!3053 = !DILocation(line: 527, column: 8, scope: !3048)
!3054 = !DILocation(line: 528, column: 9, scope: !3048)
!3055 = !DILocation(line: 528, column: 13, scope: !3048)
!3056 = !DILocation(line: 528, column: 22, scope: !3048)
!3057 = !DILocation(line: 528, column: 29, scope: !3048)
!3058 = !DILocation(line: 528, column: 32, scope: !3048)
!3059 = !DILocation(line: 528, column: 41, scope: !3048)
!3060 = !DILocation(line: 529, column: 6, scope: !3048)
!3061 = !DILocation(line: 529, column: 11, scope: !3048)
!3062 = !DILocation(line: 530, column: 9, scope: !3048)
!3063 = !DILocation(line: 530, column: 13, scope: !3048)
!3064 = !DILocation(line: 530, column: 22, scope: !3048)
!3065 = !DILocation(line: 530, column: 29, scope: !3048)
!3066 = !DILocation(line: 530, column: 32, scope: !3048)
!3067 = !DILocation(line: 530, column: 41, scope: !3048)
!3068 = !DILocation(line: 531, column: 6, scope: !3048)
!3069 = !DILocation(line: 531, column: 10, scope: !3048)
!3070 = !DILocation(line: 526, column: 16, scope: !3016)
!3071 = !DILocation(line: 534, column: 16, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 534, column: 16)
!3073 = !DILocation(line: 532, column: 8, scope: !3048)
!3074 = !DILocation(line: 532, column: 2, scope: !3048)
!3075 = !DILocation(line: 534, column: 25, scope: !3072)
!3076 = !DILocation(line: 534, column: 32, scope: !3072)
!3077 = !DILocation(line: 534, column: 35, scope: !3072)
!3078 = !DILocation(line: 534, column: 44, scope: !3072)
!3079 = !DILocation(line: 535, column: 9, scope: !3072)
!3080 = !DILocation(line: 535, column: 14, scope: !3072)
!3081 = !DILocation(line: 536, column: 8, scope: !3072)
!3082 = !DILocation(line: 534, column: 16, scope: !3048)
!3083 = !DILocation(line: 539, column: 3, scope: !2941)
!3084 = distinct !DISubprogram(name: "gimple_alloca_call_p", scope: !3, file: !3, line: 554, type: !3085, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !3088)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!372, !3087}
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !7, line: 60, baseType: !2107)
!3088 = !{!3089, !3090}
!3089 = !DILocalVariable(name: "stmt", arg: 1, scope: !3084, file: !3, line: 554, type: !3087)
!3090 = !DILocalVariable(name: "fndecl", scope: !3084, file: !3, line: 556, type: !258)
!3091 = !DILocation(line: 0, scope: !3084)
!3092 = !DILocation(line: 558, column: 8, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 558, column: 7)
!3094 = !DILocation(line: 558, column: 7, scope: !3084)
!3095 = !DILocation(line: 561, column: 12, scope: !3084)
!3096 = !DILocation(line: 562, column: 7, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 562, column: 7)
!3098 = !DILocation(line: 562, column: 14, scope: !3097)
!3099 = !DILocation(line: 562, column: 18, scope: !3097)
!3100 = !DILocation(line: 562, column: 49, scope: !3097)
!3101 = !DILocation(line: 562, column: 7, scope: !3084)
!3102 = !DILocation(line: 565, column: 3, scope: !3084)
!3103 = !DILocation(line: 566, column: 1, scope: !3084)
!3104 = distinct !DISubprogram(name: "is_gimple_call", scope: !725, file: !725, line: 1870, type: !3085, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !3105)
!3105 = !{!3106}
!3106 = !DILocalVariable(name: "gs", arg: 1, scope: !3104, file: !725, line: 1870, type: !3087)
!3107 = !DILocation(line: 0, scope: !3104)
!3108 = !DILocation(line: 1872, column: 10, scope: !3104)
!3109 = !DILocation(line: 1872, column: 27, scope: !3104)
!3110 = !DILocation(line: 1872, column: 3, scope: !3104)
!3111 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !725, file: !725, line: 1954, type: !3112, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !3114)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!258, !3087}
!3114 = !{!3115, !3116}
!3115 = !DILocalVariable(name: "gs", arg: 1, scope: !3111, file: !725, line: 1954, type: !3087)
!3116 = !DILocalVariable(name: "addr", scope: !3111, file: !725, line: 1956, type: !258)
!3117 = !DILocation(line: 0, scope: !3111)
!3118 = !DILocation(line: 1956, column: 15, scope: !3111)
!3119 = !DILocation(line: 1957, column: 7, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3111, file: !725, line: 1957, column: 7)
!3121 = !DILocation(line: 1957, column: 24, scope: !3120)
!3122 = !DILocation(line: 1957, column: 7, scope: !3111)
!3123 = !DILocation(line: 1958, column: 12, scope: !3120)
!3124 = !DILocation(line: 1958, column: 5, scope: !3120)
!3125 = !DILocation(line: 1960, column: 1, scope: !3111)
!3126 = distinct !DISubprogram(name: "alloca_call_p", scope: !3, file: !3, line: 571, type: !3127, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !3129)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!372, !2932}
!3129 = !{!3130}
!3130 = !DILocalVariable(name: "exp", arg: 1, scope: !3126, file: !3, line: 571, type: !2932)
!3131 = !DILocation(line: 0, scope: !3126)
!3132 = !DILocation(line: 573, column: 7, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 573, column: 7)
!3134 = !DILocation(line: 573, column: 23, scope: !3133)
!3135 = !DILocation(line: 574, column: 7, scope: !3133)
!3136 = !DILocation(line: 574, column: 10, scope: !3133)
!3137 = !DILocation(line: 574, column: 41, scope: !3133)
!3138 = !DILocation(line: 575, column: 7, scope: !3133)
!3139 = !DILocation(line: 575, column: 11, scope: !3133)
!3140 = !DILocation(line: 575, column: 60, scope: !3133)
!3141 = !DILocation(line: 576, column: 7, scope: !3133)
!3142 = !DILocation(line: 576, column: 11, scope: !3133)
!3143 = !DILocation(line: 577, column: 4, scope: !3133)
!3144 = !DILocation(line: 573, column: 7, scope: !3126)
!3145 = !DILocation(line: 579, column: 3, scope: !3126)
!3146 = !DILocation(line: 580, column: 1, scope: !3126)
!3147 = distinct !DISubprogram(name: "flags_from_decl_or_type", scope: !3, file: !3, line: 585, type: !2930, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !3148)
!3148 = !{!3149, !3150}
!3149 = !DILocalVariable(name: "exp", arg: 1, scope: !3147, file: !3, line: 585, type: !2932)
!3150 = !DILocalVariable(name: "flags", scope: !3147, file: !3, line: 587, type: !32)
!3151 = !DILocation(line: 0, scope: !3147)
!3152 = !DILocation(line: 589, column: 7, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 589, column: 7)
!3154 = !DILocation(line: 589, column: 7, scope: !3147)
!3155 = !DILocation(line: 592, column: 11, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 592, column: 11)
!3157 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 590, column: 5)
!3158 = !DILocation(line: 592, column: 11, scope: !3157)
!3159 = !DILocation(line: 596, column: 11, scope: !3157)
!3160 = !DILocation(line: 600, column: 11, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 600, column: 11)
!3162 = !DILocation(line: 600, column: 31, scope: !3161)
!3163 = !DILocation(line: 610, column: 11, scope: !3157)
!3164 = !DILocation(line: 600, column: 11, scope: !3157)
!3165 = !DILocation(line: 0, scope: !3157)
!3166 = !DILocation(line: 602, column: 11, scope: !3157)
!3167 = !DILocation(line: 604, column: 11, scope: !3157)
!3168 = !DILocation(line: 607, column: 11, scope: !3157)
!3169 = !DILocation(line: 613, column: 15, scope: !3157)
!3170 = !DILocation(line: 618, column: 7, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 618, column: 7)
!3172 = !DILocation(line: 614, column: 5, scope: !3157)
!3173 = !DILocation(line: 615, column: 12, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 615, column: 12)
!3175 = !DILocation(line: 615, column: 25, scope: !3174)
!3176 = !DILocation(line: 615, column: 28, scope: !3174)
!3177 = !DILocation(line: 615, column: 48, scope: !3174)
!3178 = !DILocation(line: 615, column: 12, scope: !3153)
!3179 = !DILocation(line: 618, column: 7, scope: !3147)
!3180 = !DILocation(line: 621, column: 3, scope: !3147)
!3181 = distinct !DISubprogram(name: "call_expr_flags", scope: !3, file: !3, line: 627, type: !2930, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !3182)
!3182 = !{!3183, !3184, !3185}
!3183 = !DILocalVariable(name: "t", arg: 1, scope: !3181, file: !3, line: 627, type: !2932)
!3184 = !DILocalVariable(name: "flags", scope: !3181, file: !3, line: 629, type: !32)
!3185 = !DILocalVariable(name: "decl", scope: !3181, file: !3, line: 630, type: !258)
!3186 = !DILocation(line: 0, scope: !3181)
!3187 = !DILocation(line: 630, column: 15, scope: !3181)
!3188 = !DILocation(line: 632, column: 7, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3181, file: !3, line: 632, column: 7)
!3190 = !DILocation(line: 632, column: 7, scope: !3181)
!3191 = !DILocation(line: 633, column: 13, scope: !3189)
!3192 = !DILocation(line: 633, column: 5, scope: !3189)
!3193 = !DILocation(line: 636, column: 11, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 635, column: 5)
!3195 = !DILocation(line: 637, column: 11, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3194, file: !3, line: 637, column: 11)
!3197 = !DILocation(line: 637, column: 13, scope: !3196)
!3198 = !DILocation(line: 637, column: 16, scope: !3196)
!3199 = !DILocation(line: 637, column: 30, scope: !3196)
!3200 = !DILocation(line: 637, column: 11, scope: !3194)
!3201 = !DILocation(line: 638, column: 35, scope: !3196)
!3202 = !DILocation(line: 638, column: 10, scope: !3196)
!3203 = !DILocation(line: 638, column: 2, scope: !3196)
!3204 = !DILocation(line: 0, scope: !3189)
!3205 = !DILocation(line: 643, column: 3, scope: !3181)
!3206 = distinct !DISubprogram(name: "shift_return_value", scope: !3, file: !3, line: 1859, type: !3207, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !3209)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!372, !50, !372, !6}
!3209 = !{!3210, !3211, !3212, !3213}
!3210 = !DILocalVariable(name: "mode", arg: 1, scope: !3206, file: !3, line: 1859, type: !50)
!3211 = !DILocalVariable(name: "left_p", arg: 2, scope: !3206, file: !3, line: 1859, type: !372)
!3212 = !DILocalVariable(name: "value", arg: 3, scope: !3206, file: !3, line: 1859, type: !6)
!3213 = !DILocalVariable(name: "shift", scope: !3206, file: !3, line: 1861, type: !227)
!3214 = !DILocation(line: 0, scope: !3206)
!3215 = !DILocation(line: 1863, column: 3, scope: !3206)
!3216 = !DILocation(line: 1864, column: 11, scope: !3206)
!3217 = !DILocation(line: 1864, column: 49, scope: !3206)
!3218 = !DILocation(line: 1864, column: 47, scope: !3206)
!3219 = !DILocation(line: 1865, column: 13, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3206, file: !3, line: 1865, column: 7)
!3221 = !DILocation(line: 1865, column: 7, scope: !3206)
!3222 = !DILocation(line: 1871, column: 46, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3206, file: !3, line: 1871, column: 7)
!3224 = !DILocation(line: 1872, column: 14, scope: !3223)
!3225 = !DILocation(line: 1871, column: 8, scope: !3223)
!3226 = !DILocation(line: 1871, column: 7, scope: !3206)
!3227 = !DILocation(line: 1873, column: 5, scope: !3223)
!3228 = !DILocation(line: 1875, column: 1, scope: !3206)
!3229 = distinct !DISubprogram(name: "rhs_regno", scope: !10, file: !10, line: 1051, type: !3230, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !3235)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{!13, !3232}
!3232 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !7, line: 51, baseType: !3233)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!3235 = !{!3236}
!3236 = !DILocalVariable(name: "x", arg: 1, scope: !3229, file: !10, line: 1051, type: !3232)
!3237 = !DILocation(line: 0, scope: !3229)
!3238 = !DILocation(line: 1053, column: 10, scope: !3229)
!3239 = !DILocation(line: 1053, column: 3, scope: !3229)
!3240 = !DILocation(line: 0, scope: !2)
!3241 = !DILocation(line: 1929, column: 3, scope: !2)
!3242 = !DILocation(line: 1929, column: 24, scope: !2)
!3243 = !DILocation(line: 1929, column: 8, scope: !2)
!3244 = !DILocation(line: 1967, column: 3, scope: !2)
!3245 = !DILocation(line: 1968, column: 3, scope: !2)
!3246 = !DILocation(line: 1972, column: 3, scope: !2)
!3247 = !DILocation(line: 1974, column: 3, scope: !2)
!3248 = !DILocation(line: 1983, column: 3, scope: !2)
!3249 = !DILocation(line: 1983, column: 27, scope: !2)
!3250 = !DILocation(line: 2028, column: 7, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2028, column: 7)
!3252 = !DILocation(line: 1983, column: 26, scope: !2)
!3253 = !DILocation(line: 1983, column: 7, scope: !2)
!3254 = !DILocation(line: 1993, column: 3, scope: !2)
!3255 = !DILocation(line: 1993, column: 7, scope: !2)
!3256 = !DILocation(line: 1997, column: 3, scope: !2)
!3257 = !DILocation(line: 2001, column: 36, scope: !2)
!3258 = !DILocation(line: 2002, column: 35, scope: !2)
!3259 = !DILocation(line: 2008, column: 3, scope: !2)
!3260 = !DILocation(line: 2008, column: 7, scope: !2)
!3261 = !DILocation(line: 2010, column: 3, scope: !2)
!3262 = !DILocation(line: 2010, column: 7, scope: !2)
!3263 = !DILocation(line: 2011, column: 31, scope: !2)
!3264 = !DILocation(line: 2018, column: 3, scope: !2)
!3265 = !DILocation(line: 2019, column: 15, scope: !2)
!3266 = !DILocation(line: 2028, column: 7, scope: !2)
!3267 = !DILocation(line: 2029, column: 11, scope: !3251)
!3268 = !DILocation(line: 2029, column: 5, scope: !3251)
!3269 = !DILocation(line: 2033, column: 12, scope: !2)
!3270 = !DILocation(line: 2034, column: 7, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2034, column: 7)
!3272 = !DILocation(line: 2034, column: 7, scope: !2)
!3273 = !DILocation(line: 2036, column: 16, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 2035, column: 5)
!3275 = !DILocation(line: 2037, column: 16, scope: !3274)
!3276 = !DILocation(line: 2038, column: 5, scope: !3274)
!3277 = !DILocation(line: 2041, column: 16, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 2040, column: 5)
!3279 = !DILocation(line: 2042, column: 16, scope: !3278)
!3280 = !DILocation(line: 0, scope: !3271)
!3281 = !DILocation(line: 2044, column: 13, scope: !2)
!3282 = !DILocation(line: 2046, column: 32, scope: !2)
!3283 = !DILocation(line: 2046, column: 18, scope: !2)
!3284 = !DILocation(line: 2050, column: 7, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2050, column: 7)
!3286 = !DILocation(line: 2050, column: 7, scope: !2)
!3287 = !DILocation(line: 2051, column: 5, scope: !3285)
!3288 = !DILocation(line: 2057, column: 14, scope: !2331)
!3289 = !DILocation(line: 2058, column: 7, scope: !2331)
!3290 = !DILocation(line: 2058, column: 19, scope: !2331)
!3291 = !DILocation(line: 2059, column: 7, scope: !2331)
!3292 = !DILocation(line: 2059, column: 11, scope: !2331)
!3293 = !DILocation(line: 2059, column: 31, scope: !2331)
!3294 = !DILocation(line: 2059, column: 28, scope: !2331)
!3295 = !DILocation(line: 2059, column: 18, scope: !2331)
!3296 = !DILocation(line: 2060, column: 7, scope: !2331)
!3297 = !DILocation(line: 2060, column: 27, scope: !2331)
!3298 = !DILocation(line: 2057, column: 7, scope: !2)
!3299 = !DILocation(line: 0, scope: !2330)
!3300 = !DILocation(line: 2064, column: 7, scope: !2330)
!3301 = !DILocation(line: 2066, column: 7, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !2330, file: !3, line: 2066, column: 7)
!3303 = !DILocation(line: 0, scope: !3302)
!3304 = !DILocation(line: 2067, column: 6, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 2067, column: 6)
!3306 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2066, column: 7)
!3307 = !DILocation(line: 2067, column: 6, scope: !3306)
!3308 = !DILocation(line: 2066, column: 7, scope: !3306)
!3309 = distinct !{!3309, !3301, !3310}
!3310 = !DILocation(line: 2071, column: 4, scope: !3302)
!3311 = !DILocation(line: 2073, column: 11, scope: !2330)
!3312 = !DILocation(line: 2075, column: 4, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 2075, column: 4)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 2074, column: 2)
!3315 = distinct !DILexicalBlock(scope: !2330, file: !3, line: 2073, column: 11)
!3316 = !DILocation(line: 0, scope: !3313)
!3317 = !DILocation(line: 0, scope: !3314)
!3318 = !DILocation(line: 2076, column: 6, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 2075, column: 4)
!3320 = !DILocation(line: 2075, column: 4, scope: !3319)
!3321 = distinct !{!3321, !3312, !3322}
!3322 = !DILocation(line: 2076, column: 59, scope: !3313)
!3323 = !DILocation(line: 2079, column: 5, scope: !2331)
!3324 = !DILocation(line: 2082, column: 26, scope: !2)
!3325 = !DILocation(line: 2085, column: 9, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2085, column: 7)
!3327 = !DILocation(line: 2086, column: 31, scope: !3326)
!3328 = !DILocation(line: 2086, column: 7, scope: !3326)
!3329 = !DILocation(line: 2086, column: 38, scope: !3326)
!3330 = !DILocation(line: 2085, column: 7, scope: !2)
!3331 = !DILocation(line: 2087, column: 22, scope: !3326)
!3332 = !DILocation(line: 2087, column: 5, scope: !3326)
!3333 = !DILocation(line: 2092, column: 7, scope: !2345)
!3334 = !DILocation(line: 2092, column: 7, scope: !2)
!3335 = !DILocation(line: 2095, column: 13, scope: !2344)
!3336 = !DILocation(line: 2103, column: 22, scope: !2343)
!3337 = !DILocation(line: 2105, column: 6, scope: !2342)
!3338 = !DILocation(line: 2105, column: 13, scope: !2342)
!3339 = !DILocation(line: 2105, column: 16, scope: !2342)
!3340 = !DILocation(line: 2105, column: 31, scope: !2342)
!3341 = !DILocation(line: 2105, column: 34, scope: !2342)
!3342 = !DILocation(line: 2105, column: 6, scope: !2343)
!3343 = !DILocation(line: 2106, column: 27, scope: !2342)
!3344 = !DILocation(line: 2106, column: 4, scope: !2342)
!3345 = !DILocation(line: 2112, column: 14, scope: !2341)
!3346 = !DILocation(line: 0, scope: !2341)
!3347 = !DILocation(line: 2114, column: 6, scope: !2341)
!3348 = !DILocation(line: 2115, column: 29, scope: !2341)
!3349 = !DILocation(line: 2123, column: 30, scope: !2)
!3350 = !DILocation(line: 2124, column: 7, scope: !2)
!3351 = !DILocation(line: 2126, column: 35, scope: !2347)
!3352 = !DILocation(line: 0, scope: !2347)
!3353 = !DILocation(line: 2132, column: 11, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 2132, column: 11)
!3355 = !DILocation(line: 2133, column: 4, scope: !3354)
!3356 = !DILocation(line: 2133, column: 10, scope: !3354)
!3357 = !DILocation(line: 2133, column: 7, scope: !3354)
!3358 = !DILocation(line: 2134, column: 4, scope: !3354)
!3359 = !DILocation(line: 2134, column: 44, scope: !3354)
!3360 = !DILocation(line: 2132, column: 11, scope: !2347)
!3361 = !DILocation(line: 2135, column: 29, scope: !3354)
!3362 = !DILocation(line: 2135, column: 2, scope: !3354)
!3363 = !DILocation(line: 2139, column: 13, scope: !2)
!3364 = !DILocation(line: 2140, column: 3, scope: !2)
!3365 = !DILocation(line: 2141, column: 13, scope: !2)
!3366 = !DILocation(line: 2146, column: 21, scope: !2356)
!3367 = !DILocation(line: 2146, column: 7, scope: !2356)
!3368 = !DILocation(line: 2146, column: 7, scope: !2)
!3369 = !DILocation(line: 2148, column: 7, scope: !2355)
!3370 = !DILocation(line: 0, scope: !2355)
!3371 = !DILocation(line: 2150, column: 7, scope: !2361)
!3372 = !DILocation(line: 0, scope: !2361)
!3373 = !DILocation(line: 2152, column: 16, scope: !2359)
!3374 = !DILocation(line: 0, scope: !2359)
!3375 = !DILocation(line: 2153, column: 8, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 2153, column: 8)
!3377 = !DILocation(line: 2153, column: 13, scope: !3376)
!3378 = !DILocation(line: 2153, column: 16, scope: !3376)
!3379 = !DILocation(line: 2153, column: 33, scope: !3376)
!3380 = !DILocation(line: 2154, column: 8, scope: !3376)
!3381 = !DILocation(line: 2154, column: 25, scope: !3376)
!3382 = !DILocation(line: 2154, column: 11, scope: !3376)
!3383 = !DILocation(line: 2153, column: 8, scope: !2359)
!3384 = !DILocation(line: 2150, column: 7, scope: !2360)
!3385 = distinct !{!3385, !3371, !3386}
!3386 = !DILocation(line: 2156, column: 2, scope: !2361)
!3387 = !DILocation(line: 2157, column: 45, scope: !2355)
!3388 = !DILocation(line: 2157, column: 24, scope: !2355)
!3389 = !DILocation(line: 2158, column: 5, scope: !2356)
!3390 = !DILocation(line: 2158, column: 5, scope: !2355)
!3391 = !DILocation(line: 2160, column: 22, scope: !2356)
!3392 = !DILocation(line: 1959, column: 7, scope: !2)
!3393 = !DILocation(line: 0, scope: !2356)
!3394 = !DILocation(line: 2162, column: 7, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2162, column: 7)
!3396 = !DILocation(line: 2162, column: 13, scope: !3395)
!3397 = !DILocation(line: 2162, column: 7, scope: !2)
!3398 = !DILocation(line: 2163, column: 5, scope: !3395)
!3399 = !DILocation(line: 2163, column: 11, scope: !3395)
!3400 = !DILocation(line: 2163, column: 24, scope: !3395)
!3401 = !DILocation(line: 2168, column: 7, scope: !2364)
!3402 = !DILocation(line: 2168, column: 44, scope: !2364)
!3403 = !DILocation(line: 2168, column: 28, scope: !2364)
!3404 = !DILocation(line: 2175, column: 20, scope: !2363)
!3405 = !DILocation(line: 2176, column: 5, scope: !2363)
!3406 = !DILocation(line: 2176, column: 9, scope: !2363)
!3407 = !DILocation(line: 2177, column: 9, scope: !2363)
!3408 = !DILocation(line: 2177, column: 12, scope: !2363)
!3409 = !DILocation(line: 2178, column: 36, scope: !2363)
!3410 = !DILocation(line: 2178, column: 33, scope: !2363)
!3411 = !DILocation(line: 2178, column: 9, scope: !2363)
!3412 = !DILocation(line: 2179, column: 25, scope: !2363)
!3413 = !DILocation(line: 2179, column: 7, scope: !2363)
!3414 = !DILocation(line: 2175, column: 19, scope: !2363)
!3415 = !DILocation(line: 0, scope: !2363)
!3416 = !DILocation(line: 2184, column: 33, scope: !2363)
!3417 = !DILocation(line: 2184, column: 13, scope: !2363)
!3418 = !DILocation(line: 2184, column: 2, scope: !2363)
!3419 = !DILocation(line: 2186, column: 5, scope: !2363)
!3420 = !DILocation(line: 2190, column: 5, scope: !2)
!3421 = !DILocation(line: 2190, column: 27, scope: !2)
!3422 = !DILocation(line: 2190, column: 49, scope: !2)
!3423 = !DILocation(line: 2195, column: 22, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2195, column: 7)
!3425 = !DILocation(line: 2195, column: 7, scope: !2)
!3426 = !DILocation(line: 2197, column: 10, scope: !3424)
!3427 = !DILocation(line: 2199, column: 3, scope: !3424)
!3428 = !DILocation(line: 2196, column: 5, scope: !3424)
!3429 = !DILocation(line: 0, scope: !3424)
!3430 = !DILocation(line: 2210, column: 3, scope: !2)
!3431 = !DILocation(line: 2231, column: 7, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2230, column: 7)
!3433 = !DILocation(line: 2231, column: 24, scope: !3432)
!3434 = !DILocation(line: 2231, column: 10, scope: !3432)
!3435 = !DILocation(line: 2230, column: 7, scope: !2)
!3436 = !DILocation(line: 2234, column: 24, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 2233, column: 12)
!3438 = !DILocation(line: 2234, column: 10, scope: !3437)
!3439 = !DILocation(line: 2236, column: 5, scope: !3437)
!3440 = !DILocation(line: 2233, column: 12, scope: !3432)
!3441 = !DILocation(line: 2242, column: 10, scope: !2)
!3442 = !DILocation(line: 2243, column: 11, scope: !2)
!3443 = !DILocation(line: 2243, column: 32, scope: !2)
!3444 = !DILocation(line: 2243, column: 3, scope: !2)
!3445 = !DILocation(line: 2253, column: 24, scope: !2)
!3446 = !DILocation(line: 2247, column: 3, scope: !2)
!3447 = !DILocation(line: 2255, column: 17, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2255, column: 7)
!3449 = !DILocation(line: 2255, column: 7, scope: !3448)
!3450 = !DILocation(line: 2255, column: 7, scope: !2)
!3451 = !DILocation(line: 2259, column: 49, scope: !2)
!3452 = !DILocation(line: 2256, column: 22, scope: !3448)
!3453 = !DILocation(line: 2256, column: 5, scope: !3448)
!3454 = !DILocation(line: 2259, column: 22, scope: !2)
!3455 = !DILocation(line: 2259, column: 20, scope: !2)
!3456 = !DILocation(line: 2267, column: 7, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2267, column: 7)
!3458 = !DILocation(line: 2268, column: 7, scope: !3457)
!3459 = !DILocation(line: 2268, column: 28, scope: !3457)
!3460 = !DILocation(line: 2268, column: 11, scope: !3457)
!3461 = !DILocation(line: 2269, column: 4, scope: !3457)
!3462 = !DILocation(line: 2269, column: 24, scope: !3457)
!3463 = !DILocation(line: 2269, column: 7, scope: !3457)
!3464 = !DILocation(line: 2271, column: 7, scope: !3457)
!3465 = !DILocation(line: 2271, column: 21, scope: !3457)
!3466 = !DILocation(line: 2271, column: 11, scope: !3457)
!3467 = !DILocation(line: 2272, column: 4, scope: !3457)
!3468 = !DILocation(line: 2272, column: 9, scope: !3457)
!3469 = !DILocation(line: 2272, column: 34, scope: !3457)
!3470 = !DILocation(line: 2272, column: 47, scope: !3457)
!3471 = !DILocation(line: 2272, column: 37, scope: !3457)
!3472 = !DILocation(line: 2267, column: 7, scope: !2)
!3473 = !DILocation(line: 2273, column: 28, scope: !3457)
!3474 = !DILocation(line: 2273, column: 5, scope: !3457)
!3475 = !DILocation(line: 2280, column: 31, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2280, column: 7)
!3477 = !DILocation(line: 2280, column: 34, scope: !3476)
!3478 = !DILocation(line: 2281, column: 11, scope: !3476)
!3479 = !DILocation(line: 2281, column: 7, scope: !3476)
!3480 = !DILocation(line: 2282, column: 20, scope: !3476)
!3481 = !DILocation(line: 2282, column: 10, scope: !3476)
!3482 = !DILocation(line: 2283, column: 7, scope: !3476)
!3483 = !DILocation(line: 2283, column: 10, scope: !3476)
!3484 = !DILocation(line: 2283, column: 30, scope: !3476)
!3485 = !DILocation(line: 2280, column: 7, scope: !2)
!3486 = !DILocation(line: 2293, column: 11, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2289, column: 7)
!3488 = !DILocation(line: 2284, column: 19, scope: !3476)
!3489 = !DILocation(line: 2284, column: 5, scope: !3476)
!3490 = !DILocation(line: 2298, column: 31, scope: !3487)
!3491 = !DILocation(line: 2298, column: 7, scope: !3487)
!3492 = !DILocation(line: 2301, column: 11, scope: !3487)
!3493 = !DILocation(line: 2302, column: 7, scope: !3487)
!3494 = !DILocation(line: 2302, column: 4, scope: !3487)
!3495 = !DILocation(line: 2303, column: 7, scope: !3487)
!3496 = !DILocation(line: 2303, column: 35, scope: !3487)
!3497 = !DILocation(line: 2303, column: 32, scope: !3487)
!3498 = !DILocation(line: 2307, column: 7, scope: !3487)
!3499 = !DILocation(line: 2307, column: 19, scope: !3487)
!3500 = !DILocation(line: 2307, column: 11, scope: !3487)
!3501 = !DILocation(line: 2310, column: 7, scope: !3487)
!3502 = !DILocation(line: 2310, column: 11, scope: !3487)
!3503 = !DILocation(line: 2310, column: 17, scope: !3487)
!3504 = !DILocation(line: 2311, column: 7, scope: !3487)
!3505 = !DILocation(line: 2311, column: 10, scope: !3487)
!3506 = !DILocation(line: 2315, column: 7, scope: !3487)
!3507 = !DILocation(line: 2315, column: 18, scope: !3487)
!3508 = !DILocation(line: 2315, column: 21, scope: !3487)
!3509 = !DILocation(line: 2315, column: 55, scope: !3487)
!3510 = !DILocation(line: 2315, column: 52, scope: !3487)
!3511 = !DILocation(line: 2320, column: 7, scope: !3487)
!3512 = !DILocation(line: 2320, column: 20, scope: !3487)
!3513 = !DILocation(line: 2320, column: 43, scope: !3487)
!3514 = !DILocation(line: 2321, column: 24, scope: !3487)
!3515 = !DILocation(line: 2321, column: 11, scope: !3487)
!3516 = !DILocation(line: 2320, column: 31, scope: !3487)
!3517 = !DILocation(line: 2320, column: 29, scope: !3487)
!3518 = !DILocation(line: 2324, column: 7, scope: !3487)
!3519 = !DILocation(line: 2324, column: 11, scope: !3487)
!3520 = !DILocation(line: 2325, column: 7, scope: !3487)
!3521 = !DILocation(line: 2325, column: 4, scope: !3487)
!3522 = !DILocation(line: 2328, column: 7, scope: !3487)
!3523 = !DILocation(line: 2328, column: 28, scope: !3487)
!3524 = !DILocation(line: 2328, column: 11, scope: !3487)
!3525 = !DILocation(line: 2289, column: 7, scope: !2)
!3526 = !DILocation(line: 2333, column: 7, scope: !2367)
!3527 = !DILocation(line: 2329, column: 19, scope: !3487)
!3528 = !DILocation(line: 2329, column: 5, scope: !3487)
!3529 = !DILocation(line: 2333, column: 7, scope: !2)
!3530 = !DILocation(line: 2337, column: 7, scope: !2366)
!3531 = !DILocation(line: 2338, column: 25, scope: !2366)
!3532 = !DILocation(line: 0, scope: !2366)
!3533 = !DILocation(line: 2340, column: 26, scope: !2366)
!3534 = !DILocation(line: 2340, column: 24, scope: !2366)
!3535 = !DILocation(line: 2341, column: 21, scope: !2366)
!3536 = !DILocation(line: 2342, column: 26, scope: !2366)
!3537 = !DILocation(line: 2342, column: 24, scope: !2366)
!3538 = !DILocation(line: 2343, column: 21, scope: !2366)
!3539 = !DILocation(line: 2345, column: 27, scope: !2366)
!3540 = !DILocation(line: 2347, column: 6, scope: !2366)
!3541 = !DILocation(line: 2345, column: 4, scope: !2366)
!3542 = !DILocation(line: 2349, column: 27, scope: !2366)
!3543 = !DILocation(line: 2349, column: 4, scope: !2366)
!3544 = !DILocation(line: 2352, column: 23, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 2352, column: 11)
!3546 = !DILocation(line: 2353, column: 4, scope: !3545)
!3547 = !DILocation(line: 2353, column: 29, scope: !3545)
!3548 = !DILocation(line: 2354, column: 8, scope: !3545)
!3549 = !DILocation(line: 2354, column: 25, scope: !3545)
!3550 = !DILocation(line: 2355, column: 21, scope: !3545)
!3551 = !DILocation(line: 2355, column: 6, scope: !3545)
!3552 = !DILocation(line: 2356, column: 9, scope: !3545)
!3553 = !DILocation(line: 2356, column: 29, scope: !3545)
!3554 = !DILocation(line: 2356, column: 26, scope: !3545)
!3555 = !DILocation(line: 2357, column: 9, scope: !3545)
!3556 = !DILocation(line: 2357, column: 12, scope: !3545)
!3557 = !DILocation(line: 2358, column: 7, scope: !3545)
!3558 = !DILocation(line: 2358, column: 5, scope: !3545)
!3559 = !DILocation(line: 2352, column: 11, scope: !2366)
!3560 = !DILocation(line: 2359, column: 16, scope: !3545)
!3561 = !DILocation(line: 2359, column: 2, scope: !3545)
!3562 = !DILocation(line: 2360, column: 5, scope: !2367)
!3563 = !DILocation(line: 2360, column: 5, scope: !2366)
!3564 = !DILocation(line: 2365, column: 13, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2365, column: 7)
!3566 = !DILocation(line: 2365, column: 7, scope: !3565)
!3567 = !DILocation(line: 2365, column: 38, scope: !3565)
!3568 = !DILocation(line: 2365, column: 7, scope: !2)
!3569 = !DILocation(line: 2366, column: 38, scope: !3565)
!3570 = !DILocation(line: 2366, column: 36, scope: !3565)
!3571 = !DILocation(line: 2366, column: 5, scope: !3565)
!3572 = !DILocation(line: 0, scope: !2375)
!3573 = !DILocation(line: 2370, column: 60, scope: !2)
!3574 = !DILocation(line: 2375, column: 15, scope: !2377)
!3575 = !DILocation(line: 0, scope: !2386)
!3576 = !DILocation(line: 0, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !2386, file: !3, line: 2469, column: 2)
!3578 = !DILocation(line: 0, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 2556, column: 7)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 2555, column: 9)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 2554, column: 3)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 2502, column: 12)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 2501, column: 6)
!3584 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 2500, column: 8)
!3585 = !DILocation(line: 0, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2521, column: 9)
!3587 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 2503, column: 3)
!3588 = !DILocation(line: 0, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2536, column: 9)
!3590 = !DILocation(line: 0, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !2387, file: !3, line: 2454, column: 2)
!3592 = !DILocation(line: 0, scope: !2397)
!3593 = !DILocation(line: 0, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2717, column: 11)
!3595 = !DILocation(line: 0, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2793, column: 11)
!3597 = !DILocation(line: 0, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2800, column: 11)
!3599 = !DILocation(line: 0, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 2809, column: 8)
!3601 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 2801, column: 2)
!3602 = !DILocation(line: 0, scope: !2427)
!3603 = !DILocation(line: 0, scope: !2435)
!3604 = !DILocation(line: 2375, column: 8, scope: !2377)
!3605 = !DILocation(line: 2273, column: 26, scope: !3457)
!3606 = !DILocation(line: 0, scope: !2377)
!3607 = !DILocation(line: 1917, column: 7, scope: !2)
!3608 = !DILocation(line: 2375, column: 43, scope: !2376)
!3609 = !DILocation(line: 2375, column: 3, scope: !2377)
!3610 = !DILocation(line: 2377, column: 7, scope: !2375)
!3611 = !DILocation(line: 2377, column: 11, scope: !2375)
!3612 = !DILocation(line: 2387, column: 16, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2387, column: 11)
!3614 = !DILocation(line: 2387, column: 11, scope: !2375)
!3615 = !DILocation(line: 0, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2394, column: 11)
!3617 = !DILocation(line: 2394, column: 11, scope: !2375)
!3618 = !DILocation(line: 2395, column: 8, scope: !3616)
!3619 = !DILocation(line: 2395, column: 2, scope: !3616)
!3620 = !DILocation(line: 2397, column: 8, scope: !3616)
!3621 = !DILocation(line: 2402, column: 19, scope: !2375)
!3622 = !DILocation(line: 2408, column: 7, scope: !2375)
!3623 = !DILocation(line: 2416, column: 11, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2416, column: 11)
!3625 = !DILocation(line: 2416, column: 32, scope: !3624)
!3626 = !DILocation(line: 2417, column: 4, scope: !3624)
!3627 = !DILocation(line: 2417, column: 29, scope: !3624)
!3628 = !DILocation(line: 2418, column: 8, scope: !3624)
!3629 = !DILocation(line: 2418, column: 12, scope: !3624)
!3630 = !DILocation(line: 2418, column: 18, scope: !3624)
!3631 = !DILocation(line: 2419, column: 4, scope: !3624)
!3632 = !DILocation(line: 2420, column: 11, scope: !3624)
!3633 = !DILocation(line: 2420, column: 8, scope: !3624)
!3634 = !DILocation(line: 2420, column: 32, scope: !3624)
!3635 = !DILocation(line: 2420, column: 38, scope: !3624)
!3636 = !DILocation(line: 2421, column: 4, scope: !3624)
!3637 = !DILocation(line: 2416, column: 11, scope: !2375)
!3638 = !DILocation(line: 2422, column: 2, scope: !3624)
!3639 = !DILocation(line: 2425, column: 11, scope: !2375)
!3640 = !DILocation(line: 2426, column: 2, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2425, column: 11)
!3642 = !DILocation(line: 2430, column: 16, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2430, column: 11)
!3644 = !DILocation(line: 2430, column: 20, scope: !3643)
!3645 = !DILocation(line: 2430, column: 26, scope: !3643)
!3646 = !DILocation(line: 2430, column: 11, scope: !2375)
!3647 = !DILocation(line: 2431, column: 2, scope: !3643)
!3648 = !DILocation(line: 2433, column: 21, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2433, column: 11)
!3650 = !DILocation(line: 2433, column: 30, scope: !3649)
!3651 = !DILocation(line: 2433, column: 24, scope: !3649)
!3652 = !DILocation(line: 2433, column: 11, scope: !2375)
!3653 = !DILocation(line: 2434, column: 2, scope: !3649)
!3654 = !DILocation(line: 2436, column: 28, scope: !2375)
!3655 = !DILocation(line: 2446, column: 12, scope: !2375)
!3656 = !DILocation(line: 2443, column: 4, scope: !2375)
!3657 = !DILocation(line: 2449, column: 29, scope: !2375)
!3658 = !DILocation(line: 2449, column: 51, scope: !2375)
!3659 = !DILocation(line: 2449, column: 49, scope: !2375)
!3660 = !DILocation(line: 2453, column: 11, scope: !2375)
!3661 = !DILocation(line: 2455, column: 26, scope: !3591)
!3662 = !DILocation(line: 2458, column: 44, scope: !3591)
!3663 = !DILocation(line: 2458, column: 33, scope: !3591)
!3664 = !DILocation(line: 2458, column: 8, scope: !3591)
!3665 = !DILocation(line: 2462, column: 47, scope: !3591)
!3666 = !DILocation(line: 2462, column: 37, scope: !3591)
!3667 = !DILocation(line: 2462, column: 22, scope: !3591)
!3668 = !DILocation(line: 2462, column: 20, scope: !3591)
!3669 = !DILocation(line: 2463, column: 4, scope: !3591)
!3670 = !DILocation(line: 2464, column: 2, scope: !3591)
!3671 = !DILocation(line: 2468, column: 35, scope: !2386)
!3672 = !DILocation(line: 2468, column: 39, scope: !2386)
!3673 = !DILocation(line: 2468, column: 16, scope: !2387)
!3674 = !DILocation(line: 2470, column: 8, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 2470, column: 8)
!3676 = !DILocation(line: 2470, column: 24, scope: !3675)
!3677 = !DILocation(line: 2470, column: 8, scope: !3577)
!3678 = !DILocation(line: 2472, column: 8, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 2471, column: 6)
!3680 = !DILocation(line: 2473, column: 34, scope: !3679)
!3681 = !DILocation(line: 2474, column: 26, scope: !3679)
!3682 = !DILocation(line: 2474, column: 24, scope: !3679)
!3683 = !DILocation(line: 2475, column: 29, scope: !3679)
!3684 = !DILocation(line: 2479, column: 43, scope: !3679)
!3685 = !DILocation(line: 2480, column: 37, scope: !3679)
!3686 = !DILocation(line: 2482, column: 27, scope: !3577)
!3687 = !DILocation(line: 2481, column: 6, scope: !3679)
!3688 = !DILocation(line: 2482, column: 15, scope: !3577)
!3689 = !DILocation(line: 2483, column: 2, scope: !3577)
!3690 = !DILocation(line: 2491, column: 36, scope: !2385)
!3691 = !DILocation(line: 2491, column: 17, scope: !2385)
!3692 = !DILocation(line: 0, scope: !2385)
!3693 = !DILocation(line: 2497, column: 23, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 2497, column: 8)
!3695 = !DILocation(line: 2497, column: 15, scope: !3694)
!3696 = !DILocation(line: 2497, column: 8, scope: !2385)
!3697 = !DILocation(line: 2498, column: 31, scope: !3694)
!3698 = !DILocation(line: 2498, column: 6, scope: !3694)
!3699 = !DILocation(line: 2500, column: 8, scope: !3584)
!3700 = !DILocation(line: 2500, column: 8, scope: !2385)
!3701 = !DILocation(line: 2502, column: 12, scope: !3582)
!3702 = !DILocation(line: 2502, column: 12, scope: !3583)
!3703 = !DILocation(line: 2521, column: 11, scope: !3586)
!3704 = !DILocation(line: 2521, column: 9, scope: !3587)
!3705 = !DILocation(line: 2528, column: 35, scope: !3587)
!3706 = !DILocation(line: 2528, column: 33, scope: !3587)
!3707 = !DILocation(line: 2531, column: 9, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2531, column: 9)
!3709 = !DILocation(line: 2531, column: 9, scope: !3587)
!3710 = !DILocation(line: 2532, column: 7, scope: !3708)
!3711 = !DILocation(line: 2533, column: 27, scope: !3587)
!3712 = !DILocation(line: 2534, column: 21, scope: !3587)
!3713 = !DILocation(line: 2536, column: 9, scope: !3587)
!3714 = !DILocation(line: 2537, column: 7, scope: !3589)
!3715 = !DILocation(line: 2540, column: 39, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2540, column: 9)
!3717 = !DILocation(line: 2540, column: 36, scope: !3716)
!3718 = !DILocation(line: 2540, column: 9, scope: !3587)
!3719 = !DILocation(line: 2541, column: 16, scope: !3716)
!3720 = !DILocation(line: 2543, column: 8, scope: !3716)
!3721 = !DILocation(line: 2542, column: 7, scope: !3716)
!3722 = !DILocation(line: 2541, column: 7, scope: !3716)
!3723 = !DILocation(line: 2551, column: 16, scope: !3587)
!3724 = !DILocation(line: 2552, column: 3, scope: !3587)
!3725 = !DILocation(line: 2555, column: 9, scope: !3580)
!3726 = !DILocation(line: 2555, column: 27, scope: !3580)
!3727 = !DILocation(line: 2555, column: 9, scope: !3581)
!3728 = !DILocation(line: 2560, column: 7, scope: !3579)
!3729 = !DILocation(line: 2569, column: 39, scope: !3579)
!3730 = !DILocation(line: 2571, column: 20, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2571, column: 13)
!3732 = !DILocation(line: 2571, column: 13, scope: !3579)
!3733 = !DILocation(line: 2576, column: 29, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 2572, column: 4)
!3735 = !DILocation(line: 2576, column: 27, scope: !3734)
!3736 = !DILocation(line: 2577, column: 6, scope: !3734)
!3737 = !DILocation(line: 2579, column: 4, scope: !3734)
!3738 = !DILocation(line: 2583, column: 25, scope: !3731)
!3739 = !DILocation(line: 2588, column: 16, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 2588, column: 9)
!3741 = !DILocation(line: 2588, column: 9, scope: !3581)
!3742 = !DILocation(line: 2589, column: 18, scope: !3740)
!3743 = !DILocation(line: 2589, column: 7, scope: !3740)
!3744 = !DILocation(line: 2592, column: 32, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 2591, column: 7)
!3746 = !DILocation(line: 2592, column: 20, scope: !3745)
!3747 = !DILocation(line: 0, scope: !3740)
!3748 = !DILocation(line: 2605, column: 16, scope: !3581)
!3749 = !DILocation(line: 2003, column: 9, scope: !2)
!3750 = !DILocation(line: 0, scope: !2387)
!3751 = !DILocation(line: 2610, column: 11, scope: !2392)
!3752 = !DILocation(line: 2610, column: 11, scope: !2375)
!3753 = !DILocation(line: 2616, column: 8, scope: !2390)
!3754 = !DILocation(line: 2616, column: 8, scope: !2391)
!3755 = !DILocation(line: 2619, column: 5, scope: !2389)
!3756 = !DILocation(line: 0, scope: !2389)
!3757 = !DILocation(line: 2623, column: 12, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !2389, file: !3, line: 2623, column: 12)
!3759 = !DILocation(line: 2623, column: 28, scope: !3758)
!3760 = !DILocation(line: 2623, column: 12, scope: !2389)
!3761 = !DILocation(line: 2625, column: 5, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 2624, column: 3)
!3763 = !DILocation(line: 2627, column: 31, scope: !3762)
!3764 = !DILocation(line: 2628, column: 23, scope: !3762)
!3765 = !DILocation(line: 2628, column: 21, scope: !3762)
!3766 = !DILocation(line: 2629, column: 26, scope: !3762)
!3767 = !DILocation(line: 2635, column: 9, scope: !3762)
!3768 = !DILocation(line: 2636, column: 34, scope: !3762)
!3769 = !DILocation(line: 2638, column: 9, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 2638, column: 9)
!3771 = !DILocation(line: 2638, column: 9, scope: !3762)
!3772 = !DILocation(line: 2639, column: 7, scope: !3770)
!3773 = !DILocation(line: 2640, column: 27, scope: !3762)
!3774 = !DILocation(line: 2641, column: 21, scope: !3762)
!3775 = !DILocation(line: 2642, column: 33, scope: !3762)
!3776 = !DILocation(line: 2643, column: 3, scope: !3762)
!3777 = !DILocation(line: 2644, column: 8, scope: !2389)
!3778 = !DILocation(line: 2646, column: 6, scope: !2389)
!3779 = !DILocation(line: 2650, column: 9, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !2391, file: !3, line: 2650, column: 4)
!3781 = !DILocation(line: 0, scope: !3780)
!3782 = !DILocation(line: 2650, column: 18, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 2650, column: 4)
!3784 = !DILocation(line: 2650, column: 4, scope: !3780)
!3785 = !DILocation(line: 2651, column: 18, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 2651, column: 10)
!3787 = !DILocation(line: 2651, column: 10, scope: !3786)
!3788 = !DILocation(line: 2651, column: 10, scope: !3783)
!3789 = !DILocation(line: 2653, column: 14, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 2652, column: 8)
!3791 = !DILocation(line: 2654, column: 3, scope: !3790)
!3792 = !DILocation(line: 2650, column: 34, scope: !3783)
!3793 = !DILocation(line: 2650, column: 4, scope: !3783)
!3794 = distinct !{!3794, !3784, !3795}
!3795 = !DILocation(line: 2655, column: 8, scope: !3780)
!3796 = !DILocation(line: 2658, column: 7, scope: !2375)
!3797 = !DILocation(line: 2662, column: 42, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2662, column: 11)
!3799 = !DILocation(line: 2663, column: 4, scope: !3798)
!3800 = !DILocation(line: 2663, column: 26, scope: !3798)
!3801 = !DILocation(line: 2663, column: 38, scope: !3798)
!3802 = !DILocation(line: 2663, column: 35, scope: !3798)
!3803 = !DILocation(line: 2662, column: 11, scope: !2375)
!3804 = !DILocation(line: 2667, column: 8, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2667, column: 8)
!3806 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 2664, column: 2)
!3807 = !DILocation(line: 2668, column: 13, scope: !3805)
!3808 = !DILocation(line: 2668, column: 8, scope: !3805)
!3809 = !DILocation(line: 2671, column: 6, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3805, file: !3, line: 2669, column: 6)
!3811 = !DILocation(line: 2671, column: 3, scope: !3810)
!3812 = !DILocation(line: 2675, column: 8, scope: !3810)
!3813 = !DILocation(line: 2676, column: 6, scope: !3810)
!3814 = !DILocation(line: 2677, column: 13, scope: !3805)
!3815 = !DILocation(line: 2678, column: 25, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3805, file: !3, line: 2677, column: 13)
!3817 = !DILocation(line: 2678, column: 6, scope: !3816)
!3818 = !DILocation(line: 2683, column: 7, scope: !2375)
!3819 = !DILocation(line: 2685, column: 16, scope: !2375)
!3820 = !DILocation(line: 2689, column: 11, scope: !2397)
!3821 = !DILocation(line: 2689, column: 31, scope: !2397)
!3822 = !DILocation(line: 2690, column: 9, scope: !2397)
!3823 = !DILocation(line: 2690, column: 4, scope: !2397)
!3824 = !DILocation(line: 2697, column: 14, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !2396, file: !3, line: 2692, column: 8)
!3826 = !DILocation(line: 2696, column: 15, scope: !3825)
!3827 = !DILocation(line: 2702, column: 8, scope: !2395)
!3828 = !DILocation(line: 2702, column: 26, scope: !2395)
!3829 = !DILocation(line: 2702, column: 8, scope: !2396)
!3830 = !DILocation(line: 2704, column: 19, scope: !2394)
!3831 = !DILocation(line: 0, scope: !2394)
!3832 = !DILocation(line: 2705, column: 20, scope: !2394)
!3833 = !DILocation(line: 2706, column: 21, scope: !2394)
!3834 = !DILocation(line: 2707, column: 22, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 2707, column: 12)
!3836 = !DILocation(line: 2707, column: 19, scope: !3835)
!3837 = !DILocation(line: 2708, column: 5, scope: !3835)
!3838 = !DILocation(line: 2708, column: 8, scope: !3835)
!3839 = !DILocation(line: 2708, column: 25, scope: !3835)
!3840 = !DILocation(line: 2707, column: 12, scope: !2394)
!3841 = !DILocation(line: 2715, column: 7, scope: !2375)
!3842 = !DILocation(line: 2717, column: 11, scope: !3594)
!3843 = !DILocation(line: 2717, column: 11, scope: !2375)
!3844 = !DILocation(line: 2718, column: 23, scope: !3594)
!3845 = !DILocation(line: 2718, column: 2, scope: !3594)
!3846 = !DILocation(line: 2725, column: 11, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2725, column: 11)
!3848 = !DILocation(line: 2725, column: 39, scope: !3847)
!3849 = !DILocation(line: 2725, column: 36, scope: !3847)
!3850 = !DILocation(line: 2725, column: 11, scope: !2375)
!3851 = !DILocation(line: 2726, column: 14, scope: !3847)
!3852 = !DILocation(line: 2726, column: 2, scope: !3847)
!3853 = !DILocation(line: 2736, column: 12, scope: !2405)
!3854 = !DILocation(line: 0, scope: !2405)
!3855 = !DILocation(line: 2736, column: 21, scope: !2404)
!3856 = !DILocation(line: 2736, column: 7, scope: !2405)
!3857 = !DILocation(line: 2738, column: 16, scope: !2402)
!3858 = !DILocation(line: 2738, column: 20, scope: !2402)
!3859 = !DILocation(line: 2738, column: 25, scope: !2402)
!3860 = !DILocation(line: 2738, column: 36, scope: !2402)
!3861 = !DILocation(line: 2738, column: 28, scope: !2402)
!3862 = !DILocation(line: 2738, column: 8, scope: !2403)
!3863 = !DILocation(line: 2740, column: 25, scope: !2401)
!3864 = !DILocation(line: 0, scope: !2401)
!3865 = !DILocation(line: 2742, column: 28, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 2742, column: 12)
!3867 = !DILocation(line: 2742, column: 47, scope: !3866)
!3868 = !DILocation(line: 2743, column: 25, scope: !3866)
!3869 = !DILocation(line: 2743, column: 29, scope: !3866)
!3870 = !DILocation(line: 2742, column: 12, scope: !3866)
!3871 = !DILocation(line: 2745, column: 5, scope: !3866)
!3872 = !DILocation(line: 2746, column: 12, scope: !3866)
!3873 = !DILocation(line: 2742, column: 12, scope: !2401)
!3874 = !DILocation(line: 2748, column: 19, scope: !3866)
!3875 = !DILocation(line: 2748, column: 3, scope: !3866)
!3876 = !DILocation(line: 2751, column: 10, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 2751, column: 8)
!3878 = !DILocation(line: 2751, column: 16, scope: !3877)
!3879 = !DILocation(line: 2752, column: 9, scope: !3877)
!3880 = !DILocation(line: 2752, column: 20, scope: !3877)
!3881 = !DILocation(line: 2752, column: 32, scope: !3877)
!3882 = !DILocation(line: 2752, column: 35, scope: !3877)
!3883 = !DILocation(line: 2753, column: 8, scope: !3877)
!3884 = !DILocation(line: 2753, column: 19, scope: !3877)
!3885 = !DILocation(line: 2753, column: 11, scope: !3877)
!3886 = !DILocation(line: 2751, column: 8, scope: !2403)
!3887 = !DILocation(line: 2754, column: 20, scope: !3877)
!3888 = !DILocation(line: 2754, column: 18, scope: !3877)
!3889 = !DILocation(line: 2754, column: 6, scope: !3877)
!3890 = !DILocation(line: 2736, column: 37, scope: !2404)
!3891 = !DILocation(line: 2736, column: 7, scope: !2404)
!3892 = distinct !{!3892, !3856, !3893}
!3893 = !DILocation(line: 2758, column: 2, scope: !2405)
!3894 = !DILocation(line: 2769, column: 11, scope: !2411)
!3895 = !DILocation(line: 2746, column: 9, scope: !3866)
!3896 = !DILocation(line: 2769, column: 11, scope: !2375)
!3897 = !DILocation(line: 2770, column: 2, scope: !2410)
!3898 = !DILocation(line: 0, scope: !2410)
!3899 = !DILocation(line: 2770, column: 16, scope: !2409)
!3900 = !DILocation(line: 2771, column: 16, scope: !2408)
!3901 = !DILocation(line: 2771, column: 24, scope: !2408)
!3902 = !DILocation(line: 2771, column: 29, scope: !2408)
!3903 = !DILocation(line: 2771, column: 42, scope: !2408)
!3904 = !DILocation(line: 2771, column: 34, scope: !2408)
!3905 = !DILocation(line: 2771, column: 8, scope: !2409)
!3906 = !DILocation(line: 2773, column: 25, scope: !2407)
!3907 = !DILocation(line: 0, scope: !2407)
!3908 = !DILocation(line: 2775, column: 28, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !2407, file: !3, line: 2775, column: 12)
!3910 = !DILocation(line: 2775, column: 47, scope: !3909)
!3911 = !DILocation(line: 2776, column: 25, scope: !3909)
!3912 = !DILocation(line: 2776, column: 29, scope: !3909)
!3913 = !DILocation(line: 2775, column: 12, scope: !3909)
!3914 = !DILocation(line: 2778, column: 5, scope: !3909)
!3915 = !DILocation(line: 2779, column: 12, scope: !3909)
!3916 = !DILocation(line: 2775, column: 12, scope: !2407)
!3917 = !DILocation(line: 2781, column: 19, scope: !3909)
!3918 = !DILocation(line: 2781, column: 3, scope: !3909)
!3919 = !DILocation(line: 2770, column: 32, scope: !2409)
!3920 = !DILocation(line: 2770, column: 2, scope: !2409)
!3921 = distinct !{!3921, !3897, !3922}
!3922 = !DILocation(line: 2782, column: 6, scope: !2410)
!3923 = !DILocation(line: 2793, column: 11, scope: !3596)
!3924 = !DILocation(line: 2779, column: 9, scope: !3909)
!3925 = !DILocation(line: 2794, column: 11, scope: !3596)
!3926 = !DILocation(line: 2794, column: 15, scope: !3596)
!3927 = !DILocation(line: 2795, column: 7, scope: !3596)
!3928 = !DILocation(line: 2795, column: 24, scope: !3596)
!3929 = !DILocation(line: 2795, column: 4, scope: !3596)
!3930 = !DILocation(line: 2796, column: 21, scope: !3596)
!3931 = !DILocation(line: 2796, column: 2, scope: !3596)
!3932 = !DILocation(line: 2800, column: 24, scope: !3598)
!3933 = !DILocation(line: 2800, column: 21, scope: !3598)
!3934 = !DILocation(line: 2803, column: 8, scope: !3601)
!3935 = !DILocation(line: 2806, column: 10, scope: !3601)
!3936 = !DILocation(line: 2805, column: 6, scope: !3601)
!3937 = !DILocation(line: 2804, column: 4, scope: !3601)
!3938 = !DILocation(line: 2809, column: 8, scope: !3600)
!3939 = !DILocation(line: 2809, column: 8, scope: !3601)
!3940 = !DILocation(line: 2810, column: 6, scope: !3600)
!3941 = !DILocation(line: 2813, column: 20, scope: !2375)
!3942 = !DILocation(line: 2815, column: 24, scope: !2375)
!3943 = !DILocation(line: 2815, column: 44, scope: !2375)
!3944 = !DILocation(line: 2814, column: 16, scope: !2375)
!3945 = !DILocation(line: 2817, column: 66, scope: !2375)
!3946 = !DILocation(line: 2817, column: 7, scope: !2375)
!3947 = !DILocation(line: 2822, column: 21, scope: !2375)
!3948 = !DILocation(line: 2832, column: 17, scope: !2375)
!3949 = !DILocation(line: 2839, column: 7, scope: !2375)
!3950 = !DILocation(line: 2843, column: 50, scope: !2375)
!3951 = !DILocation(line: 2844, column: 25, scope: !2375)
!3952 = !DILocation(line: 2845, column: 51, scope: !2375)
!3953 = !DILocation(line: 2846, column: 6, scope: !2375)
!3954 = !DILocation(line: 2843, column: 7, scope: !2375)
!3955 = !DILocation(line: 2852, column: 4, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2851, column: 11)
!3957 = !DILocation(line: 2852, column: 7, scope: !3956)
!3958 = !DILocation(line: 2851, column: 11, scope: !2375)
!3959 = !DILocation(line: 2853, column: 18, scope: !3956)
!3960 = !DILocation(line: 2853, column: 2, scope: !3956)
!3961 = !DILocation(line: 2859, column: 12, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 2859, column: 11)
!3963 = !DILocation(line: 2860, column: 4, scope: !3962)
!3964 = !DILocation(line: 2861, column: 7, scope: !3962)
!3965 = !DILocation(line: 2861, column: 27, scope: !3962)
!3966 = !DILocation(line: 2862, column: 4, scope: !3962)
!3967 = !DILocation(line: 2862, column: 21, scope: !3962)
!3968 = !DILocation(line: 2862, column: 7, scope: !3962)
!3969 = !DILocation(line: 2859, column: 11, scope: !2375)
!3970 = !DILocation(line: 2864, column: 28, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 2864, column: 8)
!3972 = distinct !DILexicalBlock(scope: !3962, file: !3, line: 2863, column: 2)
!3973 = !DILocation(line: 2864, column: 8, scope: !3971)
!3974 = !DILocation(line: 2864, column: 8, scope: !3972)
!3975 = !DILocation(line: 2865, column: 22, scope: !3971)
!3976 = !DILocation(line: 2865, column: 6, scope: !3971)
!3977 = !DILocation(line: 2866, column: 26, scope: !3972)
!3978 = !DILocation(line: 2866, column: 47, scope: !3972)
!3979 = !DILocation(line: 2866, column: 13, scope: !3972)
!3980 = !DILocation(line: 2867, column: 2, scope: !3972)
!3981 = !DILocation(line: 2869, column: 16, scope: !2414)
!3982 = !DILocation(line: 2869, column: 20, scope: !2414)
!3983 = !DILocation(line: 2869, column: 26, scope: !2414)
!3984 = !DILocation(line: 2869, column: 11, scope: !2375)
!3985 = !DILocation(line: 2871, column: 28, scope: !2413)
!3986 = !DILocation(line: 2871, column: 15, scope: !2413)
!3987 = !DILocation(line: 0, scope: !2413)
!3988 = !DILocation(line: 2875, column: 8, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !2413, file: !3, line: 2875, column: 8)
!3990 = !DILocation(line: 2875, column: 28, scope: !3989)
!3991 = !DILocation(line: 2875, column: 8, scope: !2413)
!3992 = !DILocation(line: 2876, column: 30, scope: !3989)
!3993 = !DILocation(line: 2876, column: 6, scope: !3989)
!3994 = !DILocation(line: 2878, column: 4, scope: !2413)
!3995 = !DILocation(line: 2882, column: 11, scope: !2413)
!3996 = !DILocation(line: 2883, column: 4, scope: !2413)
!3997 = !DILocation(line: 2886, column: 12, scope: !2413)
!3998 = !DILocation(line: 2887, column: 4, scope: !2413)
!3999 = !DILocation(line: 2888, column: 4, scope: !2413)
!4000 = !DILocation(line: 2890, column: 2, scope: !2413)
!4001 = !DILocation(line: 2897, column: 12, scope: !2419)
!4002 = !DILocation(line: 2897, column: 18, scope: !2419)
!4003 = !DILocation(line: 2897, column: 34, scope: !2419)
!4004 = !DILocation(line: 2903, column: 15, scope: !2418)
!4005 = !DILocation(line: 0, scope: !2418)
!4006 = !DILocation(line: 2904, column: 4, scope: !2418)
!4007 = !DILocation(line: 2904, column: 12, scope: !2418)
!4008 = !DILocation(line: 2906, column: 15, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !2418, file: !3, line: 2905, column: 6)
!4010 = !DILocation(line: 2908, column: 8, scope: !4009)
!4011 = distinct !{!4011, !4006, !4012}
!4012 = !DILocation(line: 2909, column: 6, scope: !2418)
!4013 = !DILocation(line: 2911, column: 4, scope: !2418)
!4014 = !DILocation(line: 2916, column: 8, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !2418, file: !3, line: 2916, column: 8)
!4016 = !DILocation(line: 2916, column: 26, scope: !4015)
!4017 = !DILocation(line: 2916, column: 8, scope: !2418)
!4018 = !DILocation(line: 2918, column: 28, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 2917, column: 6)
!4020 = !DILocation(line: 2919, column: 29, scope: !4019)
!4021 = !DILocation(line: 2920, column: 6, scope: !4019)
!4022 = !DILocation(line: 2925, column: 11, scope: !2427)
!4023 = !DILocation(line: 2925, column: 31, scope: !2427)
!4024 = !DILocation(line: 2926, column: 4, scope: !2427)
!4025 = !DILocation(line: 2927, column: 11, scope: !2427)
!4026 = !DILocation(line: 2927, column: 2, scope: !2427)
!4027 = !DILocation(line: 2928, column: 16, scope: !2427)
!4028 = !DILocation(line: 2930, column: 15, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 2930, column: 8)
!4030 = distinct !DILexicalBlock(scope: !2426, file: !3, line: 2929, column: 2)
!4031 = !DILocation(line: 2930, column: 20, scope: !4029)
!4032 = !DILocation(line: 2930, column: 24, scope: !4029)
!4033 = !DILocation(line: 2930, column: 8, scope: !4030)
!4034 = !DILocation(line: 2933, column: 18, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 2931, column: 6)
!4036 = !DILocation(line: 2934, column: 11, scope: !4035)
!4037 = !DILocation(line: 2933, column: 5, scope: !4035)
!4038 = !DILocation(line: 2936, column: 8, scope: !4035)
!4039 = !DILocation(line: 2937, column: 6, scope: !4035)
!4040 = !DILocation(line: 2950, column: 16, scope: !2424)
!4041 = !DILocation(line: 2950, column: 34, scope: !2424)
!4042 = !DILocation(line: 2950, column: 16, scope: !2425)
!4043 = !DILocation(line: 2952, column: 15, scope: !2422)
!4044 = !DILocation(line: 2952, column: 8, scope: !2423)
!4045 = !DILocation(line: 2956, column: 13, scope: !2421)
!4046 = !DILocation(line: 2957, column: 13, scope: !2421)
!4047 = !DILocation(line: 2955, column: 18, scope: !2421)
!4048 = !DILocation(line: 0, scope: !2421)
!4049 = !DILocation(line: 2959, column: 17, scope: !2421)
!4050 = !DILocation(line: 2960, column: 6, scope: !2421)
!4051 = !DILocation(line: 2962, column: 10, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 2962, column: 8)
!4053 = !DILocation(line: 2962, column: 8, scope: !2423)
!4054 = !DILocation(line: 2964, column: 10, scope: !4052)
!4055 = !DILocation(line: 2963, column: 6, scope: !4052)
!4056 = !DILocation(line: 2967, column: 20, scope: !2423)
!4057 = !DILocation(line: 2968, column: 2, scope: !2423)
!4058 = !DILocation(line: 2969, column: 16, scope: !2430)
!4059 = !DILocation(line: 2970, column: 9, scope: !2430)
!4060 = !DILocation(line: 2970, column: 12, scope: !2430)
!4061 = !DILocation(line: 2970, column: 33, scope: !2430)
!4062 = !DILocation(line: 2970, column: 30, scope: !2430)
!4063 = !DILocation(line: 2971, column: 9, scope: !2430)
!4064 = !DILocation(line: 2971, column: 12, scope: !2430)
!4065 = !DILocation(line: 2971, column: 33, scope: !2430)
!4066 = !DILocation(line: 2971, column: 30, scope: !2430)
!4067 = !DILocation(line: 2969, column: 16, scope: !2424)
!4068 = !DILocation(line: 0, scope: !2429)
!4069 = !DILocation(line: 2977, column: 9, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !2429, file: !3, line: 2977, column: 8)
!4071 = !DILocation(line: 2977, column: 24, scope: !4070)
!4072 = !DILocation(line: 2977, column: 27, scope: !4070)
!4073 = !DILocation(line: 2977, column: 8, scope: !2429)
!4074 = !DILocation(line: 2978, column: 15, scope: !4070)
!4075 = !DILocation(line: 2978, column: 6, scope: !4070)
!4076 = !DILocation(line: 2986, column: 8, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !2429, file: !3, line: 2986, column: 8)
!4078 = !DILocation(line: 2986, column: 36, scope: !4077)
!4079 = !DILocation(line: 2986, column: 33, scope: !4077)
!4080 = !DILocation(line: 2986, column: 41, scope: !4077)
!4081 = !DILocation(line: 2986, column: 44, scope: !4077)
!4082 = !DILocation(line: 2986, column: 8, scope: !2429)
!4083 = !DILocation(line: 2987, column: 6, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 2987, column: 6)
!4085 = !DILocation(line: 0, scope: !4084)
!4086 = !DILocation(line: 2987, column: 20, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 2987, column: 6)
!4088 = !DILocation(line: 2988, column: 20, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 2988, column: 12)
!4090 = !DILocation(line: 2988, column: 12, scope: !4089)
!4091 = !DILocation(line: 2988, column: 12, scope: !4087)
!4092 = !DILocation(line: 2987, column: 36, scope: !4087)
!4093 = !DILocation(line: 2987, column: 6, scope: !4087)
!4094 = distinct !{!4094, !4083, !4095}
!4095 = !DILocation(line: 2992, column: 3, scope: !4084)
!4096 = !DILocation(line: 2994, column: 8, scope: !2429)
!4097 = !DILocation(line: 2995, column: 15, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !2429, file: !3, line: 2994, column: 8)
!4099 = !DILocation(line: 2995, column: 6, scope: !4098)
!4100 = !DILocation(line: 3006, column: 8, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 2997, column: 6)
!4102 = !DILocation(line: 3011, column: 12, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 3011, column: 12)
!4104 = !DILocation(line: 3011, column: 12, scope: !4101)
!4105 = !DILocation(line: 3012, column: 19, scope: !4103)
!4106 = !DILocation(line: 3012, column: 3, scope: !4103)
!4107 = !DILocation(line: 3015, column: 16, scope: !2433)
!4108 = !DILocation(line: 3015, column: 36, scope: !2433)
!4109 = !DILocation(line: 3015, column: 16, scope: !2430)
!4110 = !DILocation(line: 0, scope: !2432)
!4111 = !DILocation(line: 3018, column: 8, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !2432, file: !3, line: 3018, column: 8)
!4113 = !DILocation(line: 3018, column: 23, scope: !4112)
!4114 = !DILocation(line: 3018, column: 8, scope: !2432)
!4115 = !DILocation(line: 3019, column: 12, scope: !4112)
!4116 = !DILocation(line: 3019, column: 6, scope: !4112)
!4117 = !DILocation(line: 3020, column: 13, scope: !2432)
!4118 = !DILocation(line: 3023, column: 20, scope: !2432)
!4119 = !DILocation(line: 3024, column: 2, scope: !2432)
!4120 = !DILocation(line: 3026, column: 24, scope: !2433)
!4121 = !DILocation(line: 3026, column: 11, scope: !2433)
!4122 = !DILocation(line: 3030, column: 11, scope: !2436)
!4123 = !DILocation(line: 3031, column: 4, scope: !2436)
!4124 = !DILocation(line: 3031, column: 7, scope: !2436)
!4125 = !DILocation(line: 3031, column: 27, scope: !2436)
!4126 = !DILocation(line: 3032, column: 4, scope: !2436)
!4127 = !DILocation(line: 3032, column: 7, scope: !2436)
!4128 = !DILocation(line: 3032, column: 28, scope: !2436)
!4129 = !DILocation(line: 3032, column: 25, scope: !2436)
!4130 = !DILocation(line: 3030, column: 11, scope: !2375)
!4131 = !DILocation(line: 3035, column: 4, scope: !2435)
!4132 = !DILocation(line: 3035, column: 20, scope: !2435)
!4133 = !DILocation(line: 3035, column: 8, scope: !2435)
!4134 = !DILocation(line: 3040, column: 41, scope: !2435)
!4135 = !DILocation(line: 3040, column: 12, scope: !2435)
!4136 = !DILocation(line: 3042, column: 4, scope: !2435)
!4137 = !DILocation(line: 3056, column: 29, scope: !2435)
!4138 = !DILocation(line: 3056, column: 13, scope: !2435)
!4139 = !DILocation(line: 3057, column: 4, scope: !2435)
!4140 = !DILocation(line: 3057, column: 35, scope: !2435)
!4141 = !DILocation(line: 0, scope: !2441)
!4142 = !DILocation(line: 3058, column: 4, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !2441, file: !3, line: 3058, column: 4)
!4144 = !DILocation(line: 3058, column: 4, scope: !2441)
!4145 = !DILocation(line: 0, scope: !4143)
!4146 = !DILocation(line: 3058, column: 4, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 3058, column: 4)
!4148 = !DILocation(line: 3059, column: 2, scope: !2436)
!4149 = !DILocation(line: 3059, column: 2, scope: !2435)
!4150 = !DILocation(line: 3064, column: 11, scope: !2450)
!4151 = !DILocation(line: 3064, column: 11, scope: !2375)
!4152 = !DILocation(line: 3066, column: 4, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !2450, file: !3, line: 3065, column: 2)
!4154 = !DILocation(line: 3067, column: 24, scope: !4153)
!4155 = !DILocation(line: 3068, column: 27, scope: !4153)
!4156 = !DILocation(line: 3068, column: 25, scope: !4153)
!4157 = !DILocation(line: 3069, column: 46, scope: !4153)
!4158 = !DILocation(line: 3070, column: 33, scope: !4153)
!4159 = !DILocation(line: 3071, column: 32, scope: !4153)
!4160 = !DILocation(line: 3072, column: 20, scope: !4153)
!4161 = !DILocation(line: 3073, column: 20, scope: !4153)
!4162 = !DILocation(line: 3074, column: 2, scope: !4153)
!4163 = !DILocation(line: 3075, column: 16, scope: !2449)
!4164 = !DILocation(line: 3075, column: 44, scope: !2449)
!4165 = !DILocation(line: 3075, column: 41, scope: !2449)
!4166 = !DILocation(line: 3075, column: 16, scope: !2450)
!4167 = !DILocation(line: 3078, column: 8, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 3078, column: 8)
!4169 = !DILocation(line: 3078, column: 8, scope: !2448)
!4170 = !DILocation(line: 3080, column: 7, scope: !4168)
!4171 = !DILocation(line: 3080, column: 21, scope: !4168)
!4172 = !DILocation(line: 3079, column: 6, scope: !4168)
!4173 = !DILocation(line: 3084, column: 9, scope: !2447)
!4174 = !DILocation(line: 0, scope: !2447)
!4175 = !DILocation(line: 3084, column: 18, scope: !2446)
!4176 = !DILocation(line: 3084, column: 4, scope: !2447)
!4177 = !DILocation(line: 3085, column: 18, scope: !2445)
!4178 = !DILocation(line: 3085, column: 10, scope: !2445)
!4179 = !DILocation(line: 3085, column: 10, scope: !2446)
!4180 = !DILocation(line: 3087, column: 33, scope: !2444)
!4181 = !DILocation(line: 0, scope: !2444)
!4182 = !DILocation(line: 3090, column: 6, scope: !2444)
!4183 = !DILocation(line: 3089, column: 7, scope: !2444)
!4184 = !DILocation(line: 3093, column: 17, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !2444, file: !3, line: 3093, column: 7)
!4186 = !DILocation(line: 0, scope: !4185)
!4187 = !DILocation(line: 3093, column: 7, scope: !2444)
!4188 = !DILocation(line: 3094, column: 5, scope: !4185)
!4189 = !DILocation(line: 3097, column: 8, scope: !4185)
!4190 = !DILocation(line: 3096, column: 5, scope: !4185)
!4191 = !DILocation(line: 3084, column: 34, scope: !2446)
!4192 = !DILocation(line: 3084, column: 4, scope: !2446)
!4193 = distinct !{!4193, !4176, !4194}
!4194 = !DILocation(line: 3099, column: 8, scope: !2447)
!4195 = !DILocation(line: 3101, column: 32, scope: !2448)
!4196 = !DILocation(line: 3102, column: 20, scope: !2448)
!4197 = !DILocation(line: 3103, column: 2, scope: !2448)
!4198 = !DILocation(line: 3109, column: 12, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 3109, column: 11)
!4200 = !DILocation(line: 3109, column: 18, scope: !4199)
!4201 = !DILocation(line: 3109, column: 39, scope: !4199)
!4202 = !DILocation(line: 3109, column: 42, scope: !4199)
!4203 = !DILocation(line: 3109, column: 48, scope: !4199)
!4204 = !DILocation(line: 3109, column: 72, scope: !4199)
!4205 = !DILocation(line: 3109, column: 11, scope: !2375)
!4206 = !DILocation(line: 3110, column: 2, scope: !4199)
!4207 = !DILocation(line: 3113, column: 12, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 3113, column: 7)
!4209 = !DILocation(line: 0, scope: !4208)
!4210 = !DILocation(line: 3113, column: 21, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 3113, column: 7)
!4212 = !DILocation(line: 3113, column: 7, scope: !4208)
!4213 = !DILocation(line: 3114, column: 14, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 3114, column: 6)
!4215 = !DILocation(line: 3114, column: 6, scope: !4214)
!4216 = !DILocation(line: 3114, column: 6, scope: !4211)
!4217 = !DILocation(line: 3115, column: 4, scope: !4214)
!4218 = !DILocation(line: 3113, column: 36, scope: !4211)
!4219 = !DILocation(line: 3113, column: 7, scope: !4211)
!4220 = distinct !{!4220, !4212, !4221}
!4221 = !DILocation(line: 3115, column: 30, scope: !4208)
!4222 = !DILocation(line: 3117, column: 15, scope: !2375)
!4223 = !DILocation(line: 3118, column: 7, scope: !2375)
!4224 = !DILocation(line: 3120, column: 11, scope: !2375)
!4225 = !DILocation(line: 3127, column: 25, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 3121, column: 2)
!4227 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 3120, column: 11)
!4228 = !DILocation(line: 3128, column: 24, scope: !4226)
!4229 = !DILocation(line: 3131, column: 9, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 3131, column: 4)
!4231 = !DILocation(line: 0, scope: !4230)
!4232 = !DILocation(line: 3131, column: 18, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 3131, column: 4)
!4234 = !DILocation(line: 3131, column: 4, scope: !4230)
!4235 = !DILocation(line: 3133, column: 16, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 3132, column: 6)
!4237 = !DILocation(line: 3133, column: 22, scope: !4236)
!4238 = !DILocation(line: 3134, column: 16, scope: !4236)
!4239 = !DILocation(line: 3134, column: 29, scope: !4236)
!4240 = !DILocation(line: 3135, column: 16, scope: !4236)
!4241 = !DILocation(line: 3135, column: 22, scope: !4236)
!4242 = !DILocation(line: 3131, column: 34, scope: !4233)
!4243 = !DILocation(line: 3131, column: 4, scope: !4233)
!4244 = distinct !{!4244, !4234, !4245}
!4245 = !DILocation(line: 3136, column: 6, scope: !4230)
!4246 = !DILocation(line: 3138, column: 4, scope: !4226)
!4247 = !DILocation(line: 3139, column: 2, scope: !4226)
!4248 = !DILocation(line: 3145, column: 4, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 3141, column: 2)
!4250 = !DILocation(line: 3152, column: 11, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 3152, column: 11)
!4252 = !DILocation(line: 3152, column: 11, scope: !2375)
!4253 = !DILocation(line: 3156, column: 5, scope: !2376)
!4254 = !DILocation(line: 2375, column: 52, scope: !2376)
!4255 = !DILocation(line: 2375, column: 3, scope: !2376)
!4256 = distinct !{!4256, !3609, !4257}
!4257 = !DILocation(line: 3156, column: 5, scope: !2377)
!4258 = !DILocation(line: 3160, column: 7, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3160, column: 7)
!4260 = !DILocation(line: 3160, column: 7, scope: !2)
!4261 = !DILocation(line: 3162, column: 7, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 3161, column: 5)
!4263 = !DILocation(line: 3163, column: 28, scope: !4262)
!4264 = !DILocation(line: 3164, column: 5, scope: !4262)
!4265 = !DILocation(line: 3166, column: 5, scope: !4259)
!4266 = !DILocation(line: 3168, column: 27, scope: !2)
!4267 = !DILocation(line: 3170, column: 7, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3170, column: 7)
!4269 = !DILocation(line: 3170, column: 7, scope: !2)
!4270 = !DILocation(line: 3171, column: 5, scope: !4268)
!4271 = !DILocation(line: 3174, column: 1, scope: !2)
!4272 = distinct !DISubprogram(name: "first_call_expr_arg", scope: !261, file: !261, line: 5419, type: !4273, scopeLine: 5420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4276)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!258, !258, !4275}
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!4276 = !{!4277, !4278}
!4277 = !DILocalVariable(name: "exp", arg: 1, scope: !4272, file: !261, line: 5419, type: !258)
!4278 = !DILocalVariable(name: "iter", arg: 2, scope: !4272, file: !261, line: 5419, type: !4275)
!4279 = !DILocation(line: 0, scope: !4272)
!4280 = !DILocation(line: 5421, column: 3, scope: !4272)
!4281 = !DILocation(line: 5422, column: 10, scope: !4272)
!4282 = !DILocation(line: 5422, column: 3, scope: !4272)
!4283 = distinct !DISubprogram(name: "next_call_expr_arg", scope: !261, file: !261, line: 5393, type: !4284, scopeLine: 5394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4286)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!258, !4275}
!4286 = !{!4287, !4288}
!4287 = !DILocalVariable(name: "iter", arg: 1, scope: !4283, file: !261, line: 5393, type: !4275)
!4288 = !DILocalVariable(name: "result", scope: !4283, file: !261, line: 5395, type: !258)
!4289 = !DILocation(line: 0, scope: !4283)
!4290 = !DILocation(line: 5396, column: 13, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4283, file: !261, line: 5396, column: 7)
!4292 = !DILocation(line: 5396, column: 24, scope: !4291)
!4293 = !DILocation(line: 5396, column: 15, scope: !4291)
!4294 = !DILocation(line: 5396, column: 7, scope: !4283)
!4295 = !DILocation(line: 5398, column: 12, scope: !4283)
!4296 = !DILocation(line: 5399, column: 10, scope: !4283)
!4297 = !DILocation(line: 5400, column: 3, scope: !4283)
!4298 = !DILocation(line: 5401, column: 1, scope: !4283)
!4299 = distinct !DISubprogram(name: "expand_expr", scope: !1963, file: !1963, line: 555, type: !4300, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!6, !258, !6, !50, !2040}
!4302 = !{!4303, !4304, !4305, !4306}
!4303 = !DILocalVariable(name: "exp", arg: 1, scope: !4299, file: !1963, line: 555, type: !258)
!4304 = !DILocalVariable(name: "target", arg: 2, scope: !4299, file: !1963, line: 555, type: !6)
!4305 = !DILocalVariable(name: "mode", arg: 3, scope: !4299, file: !1963, line: 555, type: !50)
!4306 = !DILocalVariable(name: "modifier", arg: 4, scope: !4299, file: !1963, line: 556, type: !2040)
!4307 = !DILocation(line: 0, scope: !4299)
!4308 = !DILocation(line: 558, column: 10, scope: !4299)
!4309 = !DILocation(line: 558, column: 3, scope: !4299)
!4310 = distinct !DISubprogram(name: "split_complex_types", scope: !3, file: !3, line: 3214, type: !4311, scopeLine: 3215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4313)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!258, !258}
!4313 = !{!4314, !4315, !4316, !4320, !4324, !4327, !4328}
!4314 = !DILocalVariable(name: "types", arg: 1, scope: !4310, file: !3, line: 3214, type: !258)
!4315 = !DILocalVariable(name: "p", scope: !4310, file: !3, line: 3216, type: !258)
!4316 = !DILocalVariable(name: "type", scope: !4317, file: !3, line: 3221, type: !258)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 3220, column: 5)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 3219, column: 3)
!4319 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 3219, column: 3)
!4320 = !DILocalVariable(name: "complex_type", scope: !4321, file: !3, line: 3233, type: !258)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !3, line: 3232, column: 5)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 3231, column: 3)
!4323 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 3231, column: 3)
!4324 = !DILocalVariable(name: "next", scope: !4325, file: !3, line: 3238, type: !258)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 3237, column: 2)
!4326 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 3235, column: 11)
!4327 = !DILocalVariable(name: "imag", scope: !4325, file: !3, line: 3238, type: !258)
!4328 = !DILabel(scope: !4310, name: "found", file: !3, line: 3228)
!4329 = !DILocation(line: 0, scope: !4310)
!4330 = !DILocation(line: 3219, column: 8, scope: !4319)
!4331 = !DILocation(line: 0, scope: !4319)
!4332 = !DILocation(line: 3219, column: 3, scope: !4319)
!4333 = !DILocation(line: 3221, column: 19, scope: !4317)
!4334 = !DILocation(line: 0, scope: !4317)
!4335 = !DILocation(line: 3222, column: 11, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 3222, column: 11)
!4337 = !DILocation(line: 3222, column: 28, scope: !4336)
!4338 = !DILocation(line: 3223, column: 4, scope: !4336)
!4339 = !DILocation(line: 3223, column: 21, scope: !4336)
!4340 = !DILocation(line: 3223, column: 7, scope: !4336)
!4341 = !DILocation(line: 3222, column: 11, scope: !4317)
!4342 = !DILocation(line: 3225, column: 5, scope: !4318)
!4343 = !DILocation(line: 3219, column: 26, scope: !4318)
!4344 = !DILocation(line: 3219, column: 3, scope: !4318)
!4345 = distinct !{!4345, !4332, !4346}
!4346 = !DILocation(line: 3225, column: 5, scope: !4319)
!4347 = !DILocation(line: 3228, column: 2, scope: !4310)
!4348 = !DILocation(line: 3229, column: 11, scope: !4310)
!4349 = !DILocation(line: 3231, column: 8, scope: !4323)
!4350 = !DILocation(line: 0, scope: !4323)
!4351 = !DILocation(line: 3231, column: 3, scope: !4323)
!4352 = !DILocation(line: 3233, column: 27, scope: !4321)
!4353 = !DILocation(line: 0, scope: !4321)
!4354 = !DILocation(line: 3235, column: 11, scope: !4326)
!4355 = !DILocation(line: 3235, column: 36, scope: !4326)
!4356 = !DILocation(line: 3236, column: 4, scope: !4326)
!4357 = !DILocation(line: 3236, column: 21, scope: !4326)
!4358 = !DILocation(line: 3236, column: 7, scope: !4326)
!4359 = !DILocation(line: 3235, column: 11, scope: !4321)
!4360 = !DILocation(line: 3241, column: 21, scope: !4325)
!4361 = !DILocation(line: 3241, column: 19, scope: !4325)
!4362 = !DILocation(line: 3242, column: 11, scope: !4325)
!4363 = !DILocation(line: 3245, column: 11, scope: !4325)
!4364 = !DILocation(line: 0, scope: !4325)
!4365 = !DILocation(line: 3246, column: 19, scope: !4325)
!4366 = !DILocation(line: 3247, column: 4, scope: !4325)
!4367 = !DILocation(line: 3247, column: 22, scope: !4325)
!4368 = !DILocation(line: 3250, column: 8, scope: !4325)
!4369 = !DILocation(line: 3251, column: 2, scope: !4325)
!4370 = !DILocation(line: 3231, column: 26, scope: !4322)
!4371 = !DILocation(line: 3231, column: 3, scope: !4322)
!4372 = distinct !{!4372, !4351, !4373}
!4373 = !DILocation(line: 3252, column: 5, scope: !4323)
!4374 = !DILocation(line: 3255, column: 1, scope: !4310)
!4375 = distinct !DISubprogram(name: "initialize_argument_information", scope: !3, file: !3, line: 932, type: !4376, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4381)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{null, !32, !2075, !4378, !32, !258, !258, !258, !258, !4379, !32, !2105, !4380, !4380, !4380, !2072, !372}
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!4381 = !{!4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4404, !4405, !4406, !4410, !4413, !4417, !4418, !4419, !4422, !4423, !4426, !4429}
!4382 = !DILocalVariable(name: "num_actuals", arg: 1, scope: !4375, file: !3, line: 932, type: !32)
!4383 = !DILocalVariable(name: "args", arg: 2, scope: !4375, file: !3, line: 933, type: !2075)
!4384 = !DILocalVariable(name: "args_size", arg: 3, scope: !4375, file: !3, line: 934, type: !4378)
!4385 = !DILocalVariable(name: "n_named_args", arg: 4, scope: !4375, file: !3, line: 935, type: !32)
!4386 = !DILocalVariable(name: "exp", arg: 5, scope: !4375, file: !3, line: 936, type: !258)
!4387 = !DILocalVariable(name: "struct_value_addr_value", arg: 6, scope: !4375, file: !3, line: 936, type: !258)
!4388 = !DILocalVariable(name: "fndecl", arg: 7, scope: !4375, file: !3, line: 937, type: !258)
!4389 = !DILocalVariable(name: "fntype", arg: 8, scope: !4375, file: !3, line: 937, type: !258)
!4390 = !DILocalVariable(name: "args_so_far", arg: 9, scope: !4375, file: !3, line: 938, type: !4379)
!4391 = !DILocalVariable(name: "reg_parm_stack_space", arg: 10, scope: !4375, file: !3, line: 939, type: !32)
!4392 = !DILocalVariable(name: "old_stack_level", arg: 11, scope: !4375, file: !3, line: 940, type: !2105)
!4393 = !DILocalVariable(name: "old_pending_adj", arg: 12, scope: !4375, file: !3, line: 940, type: !4380)
!4394 = !DILocalVariable(name: "must_preallocate", arg: 13, scope: !4375, file: !3, line: 941, type: !4380)
!4395 = !DILocalVariable(name: "ecf_flags", arg: 14, scope: !4375, file: !3, line: 941, type: !4380)
!4396 = !DILocalVariable(name: "may_tailcall", arg: 15, scope: !4375, file: !3, line: 942, type: !2072)
!4397 = !DILocalVariable(name: "call_from_thunk_p", arg: 16, scope: !4375, file: !3, line: 942, type: !372)
!4398 = !DILocalVariable(name: "loc", scope: !4375, file: !3, line: 944, type: !380)
!4399 = !DILocalVariable(name: "inc", scope: !4375, file: !3, line: 946, type: !32)
!4400 = !DILocalVariable(name: "argpos", scope: !4375, file: !3, line: 949, type: !32)
!4401 = !DILocalVariable(name: "i", scope: !4375, file: !3, line: 951, type: !32)
!4402 = !DILocalVariable(name: "j", scope: !4403, file: !3, line: 974, type: !32)
!4403 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 973, column: 3)
!4404 = !DILocalVariable(name: "iter", scope: !4403, file: !3, line: 975, type: !2334)
!4405 = !DILocalVariable(name: "arg", scope: !4403, file: !3, line: 976, type: !258)
!4406 = !DILocalVariable(name: "argtype", scope: !4407, file: !3, line: 985, type: !258)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 984, column: 7)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 983, column: 5)
!4409 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 983, column: 5)
!4410 = !DILocalVariable(name: "subtype", scope: !4411, file: !3, line: 991, type: !258)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 990, column: 4)
!4412 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 986, column: 6)
!4413 = !DILocalVariable(name: "type", scope: !4414, file: !3, line: 1005, type: !258)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1004, column: 5)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1003, column: 3)
!4416 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1003, column: 3)
!4417 = !DILocalVariable(name: "unsignedp", scope: !4414, file: !3, line: 1006, type: !32)
!4418 = !DILocalVariable(name: "mode", scope: !4414, file: !3, line: 1007, type: !50)
!4419 = !DILocalVariable(name: "callee_copies", scope: !4420, file: !3, line: 1038, type: !372)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 1037, column: 2)
!4421 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1035, column: 11)
!4422 = !DILocalVariable(name: "base", scope: !4420, file: !3, line: 1039, type: !258)
!4423 = !DILocalVariable(name: "copy", scope: !4424, file: !3, line: 1070, type: !6)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 1067, column: 6)
!4425 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 1047, column: 8)
!4426 = !DILocalVariable(name: "size_rtx", scope: !4427, file: !3, line: 1080, type: !6)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 1077, column: 3)
!4428 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1072, column: 12)
!4429 = !DILocalVariable(name: "inc", scope: !4430, file: !3, line: 1185, type: !258)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 1185, column: 2)
!4431 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1184, column: 11)
!4432 = !DILocation(line: 0, scope: !4375)
!4433 = !DILocation(line: 944, column: 20, scope: !4375)
!4434 = !DILocation(line: 953, column: 14, scope: !4375)
!4435 = !DILocation(line: 953, column: 23, scope: !4375)
!4436 = !DILocation(line: 954, column: 14, scope: !4375)
!4437 = !DILocation(line: 954, column: 18, scope: !4375)
!4438 = !DILocation(line: 962, column: 23, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 961, column: 5)
!4440 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 960, column: 7)
!4441 = !DILocation(line: 0, scope: !4403)
!4442 = !DILocation(line: 975, column: 5, scope: !4403)
!4443 = !DILocation(line: 978, column: 9, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 978, column: 9)
!4445 = !DILocation(line: 978, column: 9, scope: !4403)
!4446 = !DILocation(line: 980, column: 2, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 979, column: 7)
!4448 = !DILocation(line: 980, column: 10, scope: !4447)
!4449 = !DILocation(line: 980, column: 21, scope: !4447)
!4450 = !DILocation(line: 981, column: 4, scope: !4447)
!4451 = !DILocation(line: 982, column: 7, scope: !4447)
!4452 = !DILocation(line: 983, column: 5, scope: !4409)
!4453 = !DILocation(line: 0, scope: !4409)
!4454 = !DILocation(line: 985, column: 17, scope: !4407)
!4455 = !DILocation(line: 0, scope: !4407)
!4456 = !DILocation(line: 986, column: 20, scope: !4412)
!4457 = !DILocation(line: 986, column: 6, scope: !4412)
!4458 = !DILocation(line: 987, column: 9, scope: !4412)
!4459 = !DILocation(line: 987, column: 6, scope: !4412)
!4460 = !DILocation(line: 988, column: 9, scope: !4412)
!4461 = !DILocation(line: 988, column: 29, scope: !4412)
!4462 = !DILocation(line: 989, column: 6, scope: !4412)
!4463 = !DILocation(line: 989, column: 9, scope: !4412)
!4464 = !DILocation(line: 986, column: 6, scope: !4407)
!4465 = !DILocation(line: 991, column: 21, scope: !4411)
!4466 = !DILocation(line: 0, scope: !4411)
!4467 = !DILocation(line: 992, column: 27, scope: !4411)
!4468 = !DILocation(line: 992, column: 6, scope: !4411)
!4469 = !DILocation(line: 992, column: 14, scope: !4411)
!4470 = !DILocation(line: 992, column: 25, scope: !4411)
!4471 = !DILocation(line: 993, column: 8, scope: !4411)
!4472 = !DILocation(line: 994, column: 27, scope: !4411)
!4473 = !DILocation(line: 994, column: 6, scope: !4411)
!4474 = !DILocation(line: 994, column: 14, scope: !4411)
!4475 = !DILocation(line: 994, column: 25, scope: !4411)
!4476 = !DILocation(line: 995, column: 4, scope: !4411)
!4477 = !DILocation(line: 997, column: 4, scope: !4412)
!4478 = !DILocation(line: 997, column: 12, scope: !4412)
!4479 = !DILocation(line: 997, column: 23, scope: !4412)
!4480 = !DILocation(line: 998, column: 4, scope: !4407)
!4481 = !DILocation(line: 983, column: 5, scope: !4408)
!4482 = distinct !{!4482, !4452, !4483}
!4483 = !DILocation(line: 999, column: 7, scope: !4409)
!4484 = !DILocation(line: 1000, column: 3, scope: !4375)
!4485 = !DILocation(line: 0, scope: !4414)
!4486 = !DILocation(line: 0, scope: !4425)
!4487 = !DILocation(line: 0, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1161, column: 11)
!4489 = !DILocation(line: 1003, column: 8, scope: !4416)
!4490 = !DILocation(line: 0, scope: !4416)
!4491 = !DILocation(line: 0, scope: !4420)
!4492 = !DILocation(line: 1003, column: 27, scope: !4415)
!4493 = !DILocation(line: 1003, column: 3, scope: !4416)
!4494 = !DILocation(line: 1005, column: 19, scope: !4414)
!4495 = !DILocation(line: 1006, column: 7, scope: !4414)
!4496 = !DILocation(line: 1010, column: 19, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1010, column: 11)
!4498 = !DILocation(line: 1010, column: 16, scope: !4497)
!4499 = !DILocation(line: 1010, column: 35, scope: !4497)
!4500 = !DILocation(line: 1010, column: 39, scope: !4497)
!4501 = !DILocation(line: 1010, column: 11, scope: !4414)
!4502 = !DILocation(line: 1011, column: 23, scope: !4497)
!4503 = !DILocation(line: 1011, column: 2, scope: !4497)
!4504 = !DILocation(line: 1011, column: 21, scope: !4497)
!4505 = !DILocation(line: 1011, column: 49, scope: !4497)
!4506 = !DILocation(line: 1016, column: 12, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1016, column: 11)
!4508 = !DILocation(line: 1016, column: 29, scope: !4507)
!4509 = !DILocation(line: 1016, column: 43, scope: !4507)
!4510 = !DILocation(line: 1016, column: 63, scope: !4507)
!4511 = !DILocation(line: 1017, column: 5, scope: !4507)
!4512 = !DILocation(line: 1017, column: 8, scope: !4507)
!4513 = !DILocation(line: 1016, column: 11, scope: !4414)
!4514 = !DILocation(line: 1018, column: 9, scope: !4507)
!4515 = !DILocation(line: 0, scope: !4421)
!4516 = !DILocation(line: 1035, column: 43, scope: !4421)
!4517 = !DILocation(line: 1018, column: 2, scope: !4507)
!4518 = !DILocation(line: 1036, column: 22, scope: !4421)
!4519 = !DILocation(line: 1036, column: 15, scope: !4421)
!4520 = !DILocation(line: 1035, column: 11, scope: !4421)
!4521 = !DILocation(line: 1035, column: 11, scope: !4414)
!4522 = !DILocation(line: 1042, column: 46, scope: !4420)
!4523 = !DILocation(line: 1042, column: 8, scope: !4420)
!4524 = !DILocation(line: 1048, column: 8, scope: !4425)
!4525 = !DILocation(line: 1048, column: 12, scope: !4425)
!4526 = !DILocation(line: 1049, column: 5, scope: !4425)
!4527 = !DILocation(line: 1049, column: 9, scope: !4425)
!4528 = !DILocation(line: 1050, column: 5, scope: !4425)
!4529 = !DILocation(line: 1050, column: 42, scope: !4425)
!4530 = !DILocation(line: 1050, column: 16, scope: !4425)
!4531 = !DILocation(line: 1050, column: 14, scope: !4425)
!4532 = !DILocation(line: 1051, column: 5, scope: !4425)
!4533 = !DILocation(line: 1051, column: 8, scope: !4425)
!4534 = !DILocation(line: 1051, column: 25, scope: !4425)
!4535 = !DILocation(line: 1052, column: 5, scope: !4425)
!4536 = !DILocation(line: 1052, column: 10, scope: !4425)
!4537 = !DILocation(line: 1052, column: 24, scope: !4425)
!4538 = !DILocation(line: 1052, column: 27, scope: !4425)
!4539 = !DILocation(line: 1047, column: 8, scope: !4420)
!4540 = !DILocation(line: 1056, column: 31, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1056, column: 12)
!4542 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 1053, column: 6)
!4543 = !DILocation(line: 1056, column: 34, scope: !4541)
!4544 = !DILocation(line: 1056, column: 48, scope: !4541)
!4545 = !DILocation(line: 1056, column: 52, scope: !4541)
!4546 = !DILocation(line: 1056, column: 12, scope: !4542)
!4547 = !DILocation(line: 1057, column: 17, scope: !4541)
!4548 = !DILocation(line: 1057, column: 3, scope: !4541)
!4549 = !DILocation(line: 1060, column: 17, scope: !4542)
!4550 = !DILocation(line: 1059, column: 29, scope: !4542)
!4551 = !DILocation(line: 1059, column: 27, scope: !4542)
!4552 = !DILocation(line: 1061, column: 15, scope: !4542)
!4553 = !DILocation(line: 1063, column: 12, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1063, column: 12)
!4555 = !DILocation(line: 1063, column: 23, scope: !4554)
!4556 = !DILocation(line: 1063, column: 12, scope: !4542)
!4557 = !DILocation(line: 1064, column: 14, scope: !4554)
!4558 = !DILocation(line: 1064, column: 3, scope: !4554)
!4559 = !DILocation(line: 1072, column: 13, scope: !4428)
!4560 = !DILocation(line: 1073, column: 5, scope: !4428)
!4561 = !DILocation(line: 1073, column: 8, scope: !4428)
!4562 = !DILocation(line: 1073, column: 42, scope: !4428)
!4563 = !DILocation(line: 1074, column: 5, scope: !4428)
!4564 = !DILocation(line: 1074, column: 9, scope: !4428)
!4565 = !DILocation(line: 1074, column: 26, scope: !4428)
!4566 = !DILocation(line: 1075, column: 9, scope: !4428)
!4567 = !DILocation(line: 1075, column: 12, scope: !4428)
!4568 = !DILocation(line: 1076, column: 35, scope: !4428)
!4569 = !DILocation(line: 1072, column: 12, scope: !4424)
!4570 = !DILocation(line: 1080, column: 39, scope: !4427)
!4571 = !DILocation(line: 1080, column: 20, scope: !4427)
!4572 = !DILocation(line: 0, scope: !4427)
!4573 = !DILocation(line: 1082, column: 9, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 1082, column: 9)
!4575 = !DILocation(line: 1082, column: 26, scope: !4574)
!4576 = !DILocation(line: 1082, column: 9, scope: !4427)
!4577 = !DILocation(line: 1084, column: 9, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 1083, column: 7)
!4579 = !DILocation(line: 1085, column: 28, scope: !4578)
!4580 = !DILocation(line: 1085, column: 26, scope: !4578)
!4581 = !DILocation(line: 1086, column: 30, scope: !4578)
!4582 = !DILocation(line: 1087, column: 7, scope: !4578)
!4583 = !DILocation(line: 1091, column: 32, scope: !4427)
!4584 = !DILocation(line: 1090, column: 11, scope: !4427)
!4585 = !DILocation(line: 1089, column: 12, scope: !4427)
!4586 = !DILocation(line: 0, scope: !4424)
!4587 = !DILocation(line: 1092, column: 5, scope: !4427)
!4588 = !DILocation(line: 1093, column: 3, scope: !4427)
!4589 = !DILocation(line: 1095, column: 10, scope: !4428)
!4590 = !DILocation(line: 0, scope: !4428)
!4591 = !DILocation(line: 1097, column: 28, scope: !4424)
!4592 = !DILocation(line: 1097, column: 8, scope: !4424)
!4593 = !DILocation(line: 1102, column: 12, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1102, column: 12)
!4595 = !DILocation(line: 1102, column: 23, scope: !4594)
!4596 = !DILocation(line: 1102, column: 12, scope: !4424)
!4597 = !DILocation(line: 1104, column: 16, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 1103, column: 3)
!4599 = !DILocation(line: 1105, column: 16, scope: !4598)
!4600 = !DILocation(line: 1106, column: 3, scope: !4598)
!4601 = !DILocation(line: 1108, column: 27, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1108, column: 12)
!4603 = !DILocation(line: 1108, column: 41, scope: !4602)
!4604 = !DILocation(line: 1108, column: 12, scope: !4424)
!4605 = !DILocation(line: 1109, column: 14, scope: !4602)
!4606 = !DILocation(line: 1109, column: 3, scope: !4602)
!4607 = !DILocation(line: 1112, column: 36, scope: !4424)
!4608 = !DILocation(line: 1112, column: 5, scope: !4424)
!4609 = !DILocation(line: 1112, column: 3, scope: !4424)
!4610 = !DILocation(line: 1113, column: 15, scope: !4424)
!4611 = !DILocation(line: 1114, column: 22, scope: !4424)
!4612 = !DILocation(line: 1118, column: 19, scope: !4414)
!4613 = !DILocation(line: 1118, column: 17, scope: !4414)
!4614 = !DILocation(line: 1119, column: 43, scope: !4414)
!4615 = !DILocation(line: 1120, column: 9, scope: !4414)
!4616 = !DILocation(line: 1120, column: 18, scope: !4414)
!4617 = !DILocation(line: 1119, column: 14, scope: !4414)
!4618 = !DILocation(line: 1122, column: 27, scope: !4414)
!4619 = !DILocation(line: 1122, column: 15, scope: !4414)
!4620 = !DILocation(line: 1122, column: 25, scope: !4414)
!4621 = !DILocation(line: 1123, column: 15, scope: !4414)
!4622 = !DILocation(line: 1123, column: 20, scope: !4414)
!4623 = !DILocation(line: 1125, column: 21, scope: !4414)
!4624 = !DILocation(line: 1125, column: 15, scope: !4414)
!4625 = !DILocation(line: 1125, column: 19, scope: !4414)
!4626 = !DILocation(line: 1134, column: 39, scope: !4414)
!4627 = !DILocation(line: 1134, column: 15, scope: !4414)
!4628 = !DILocation(line: 1134, column: 29, scope: !4414)
!4629 = !DILocation(line: 1137, column: 11, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1137, column: 11)
!4631 = !DILocation(line: 1137, column: 11, scope: !4414)
!4632 = !DILocation(line: 1139, column: 20, scope: !4630)
!4633 = !DILocation(line: 1139, column: 6, scope: !4630)
!4634 = !DILocation(line: 1138, column: 10, scope: !4630)
!4635 = !DILocation(line: 1139, column: 4, scope: !4630)
!4636 = !DILocation(line: 1138, column: 2, scope: !4630)
!4637 = !DILocation(line: 1142, column: 45, scope: !4414)
!4638 = !DILocation(line: 1142, column: 31, scope: !4414)
!4639 = !DILocation(line: 1142, column: 15, scope: !4414)
!4640 = !DILocation(line: 1142, column: 29, scope: !4414)
!4641 = !DILocation(line: 1147, column: 19, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1147, column: 11)
!4643 = !DILocation(line: 1147, column: 11, scope: !4642)
!4644 = !DILocation(line: 1147, column: 23, scope: !4642)
!4645 = !DILocation(line: 1147, column: 26, scope: !4642)
!4646 = !DILocation(line: 1147, column: 49, scope: !4642)
!4647 = !DILocation(line: 1148, column: 4, scope: !4642)
!4648 = !DILocation(line: 1148, column: 7, scope: !4642)
!4649 = !DILocation(line: 1148, column: 45, scope: !4642)
!4650 = !DILocation(line: 1147, column: 11, scope: !4414)
!4651 = !DILocation(line: 1149, column: 24, scope: !4642)
!4652 = !DILocation(line: 1149, column: 2, scope: !4642)
!4653 = !DILocation(line: 1156, column: 11, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1156, column: 11)
!4655 = !DILocation(line: 1157, column: 4, scope: !4654)
!4656 = !DILocation(line: 1157, column: 8, scope: !4654)
!4657 = !DILocation(line: 1157, column: 30, scope: !4654)
!4658 = !DILocation(line: 1156, column: 11, scope: !4414)
!4659 = !DILocation(line: 1158, column: 20, scope: !4654)
!4660 = !DILocation(line: 1161, column: 19, scope: !4488)
!4661 = !DILocation(line: 1158, column: 2, scope: !4654)
!4662 = !DILocation(line: 1161, column: 23, scope: !4488)
!4663 = !DILocation(line: 1161, column: 28, scope: !4488)
!4664 = !DILocation(line: 1161, column: 39, scope: !4488)
!4665 = !DILocation(line: 1161, column: 47, scope: !4488)
!4666 = !DILocation(line: 1162, column: 4, scope: !4488)
!4667 = !DILocation(line: 1163, column: 15, scope: !4488)
!4668 = !DILocation(line: 1163, column: 7, scope: !4488)
!4669 = !DILocation(line: 1161, column: 11, scope: !4414)
!4670 = !DILocation(line: 1168, column: 21, scope: !4488)
!4671 = !DILocation(line: 1170, column: 17, scope: !4488)
!4672 = !DILocation(line: 1170, column: 9, scope: !4488)
!4673 = !DILocation(line: 1170, column: 45, scope: !4488)
!4674 = !DILocation(line: 1171, column: 37, scope: !4488)
!4675 = !DILocation(line: 1164, column: 2, scope: !4488)
!4676 = !DILocation(line: 1183, column: 50, scope: !4414)
!4677 = !DILocation(line: 1183, column: 27, scope: !4414)
!4678 = !DILocation(line: 1184, column: 31, scope: !4431)
!4679 = !DILocation(line: 1184, column: 11, scope: !4431)
!4680 = !DILocation(line: 1184, column: 11, scope: !4414)
!4681 = !DILocation(line: 0, scope: !4430)
!4682 = !DILocation(line: 1185, column: 2, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 1185, column: 2)
!4684 = !DILocation(line: 1185, column: 2, scope: !4430)
!4685 = !DILocation(line: 1185, column: 2, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1185, column: 2)
!4687 = !DILocation(line: 1190, column: 7, scope: !4414)
!4688 = !DILocation(line: 1192, column: 5, scope: !4415)
!4689 = !DILocation(line: 1003, column: 44, scope: !4415)
!4690 = !DILocation(line: 1003, column: 58, scope: !4415)
!4691 = !DILocation(line: 1003, column: 3, scope: !4415)
!4692 = distinct !{!4692, !4493, !4693}
!4693 = !DILocation(line: 1192, column: 5, scope: !4416)
!4694 = !DILocation(line: 1193, column: 1, scope: !4375)
!4695 = distinct !DISubprogram(name: "finalize_must_preallocate", scope: !3, file: !3, line: 1343, type: !4696, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4698)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!32, !32, !32, !2075, !4378}
!4698 = !{!4699, !4700, !4701, !4702, !4703, !4706, !4707}
!4699 = !DILocalVariable(name: "must_preallocate", arg: 1, scope: !4695, file: !3, line: 1343, type: !32)
!4700 = !DILocalVariable(name: "num_actuals", arg: 2, scope: !4695, file: !3, line: 1343, type: !32)
!4701 = !DILocalVariable(name: "args", arg: 3, scope: !4695, file: !3, line: 1344, type: !2075)
!4702 = !DILocalVariable(name: "args_size", arg: 4, scope: !4695, file: !3, line: 1344, type: !4378)
!4703 = !DILocalVariable(name: "partial_seen", scope: !4704, file: !3, line: 1367, type: !32)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1366, column: 5)
!4705 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 1365, column: 7)
!4706 = !DILocalVariable(name: "copy_to_evaluate_size", scope: !4704, file: !3, line: 1368, type: !32)
!4707 = !DILocalVariable(name: "i", scope: !4704, file: !3, line: 1369, type: !32)
!4708 = !DILocation(line: 0, scope: !4695)
!4709 = !DILocation(line: 1365, column: 9, scope: !4705)
!4710 = !DILocation(line: 1365, column: 7, scope: !4695)
!4711 = !DILocation(line: 1371, column: 7, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 1371, column: 7)
!4713 = !DILocation(line: 1367, column: 11, scope: !4704)
!4714 = !DILocation(line: 0, scope: !4704)
!4715 = !DILocation(line: 1371, column: 21, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 1371, column: 7)
!4717 = !DILocation(line: 1371, column: 38, scope: !4716)
!4718 = !DILocation(line: 1371, column: 35, scope: !4716)
!4719 = !DILocation(line: 1373, column: 16, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 1373, column: 8)
!4721 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 1372, column: 2)
!4722 = !DILocation(line: 1373, column: 24, scope: !4720)
!4723 = !DILocation(line: 1373, column: 28, scope: !4720)
!4724 = !DILocation(line: 1373, column: 41, scope: !4720)
!4725 = !DILocation(line: 1373, column: 33, scope: !4720)
!4726 = !DILocation(line: 1373, column: 8, scope: !4721)
!4727 = !DILocation(line: 1375, column: 13, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 1375, column: 13)
!4729 = !DILocation(line: 1375, column: 26, scope: !4728)
!4730 = !DILocation(line: 1375, column: 37, scope: !4728)
!4731 = !DILocation(line: 1375, column: 41, scope: !4728)
!4732 = !DILocation(line: 1375, column: 13, scope: !4720)
!4733 = !DILocation(line: 1378, column: 8, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 1378, column: 8)
!4735 = !DILocation(line: 1378, column: 51, scope: !4734)
!4736 = !DILocation(line: 1379, column: 8, scope: !4734)
!4737 = !DILocation(line: 1379, column: 12, scope: !4734)
!4738 = !DILocation(line: 1379, column: 43, scope: !4734)
!4739 = !DILocation(line: 1380, column: 5, scope: !4734)
!4740 = !DILocation(line: 1380, column: 39, scope: !4734)
!4741 = !DILocation(line: 1381, column: 5, scope: !4734)
!4742 = !DILocation(line: 1381, column: 39, scope: !4734)
!4743 = !DILocation(line: 1382, column: 5, scope: !4734)
!4744 = !DILocation(line: 1382, column: 8, scope: !4734)
!4745 = !DILocation(line: 1378, column: 8, scope: !4721)
!4746 = !DILocation(line: 1384, column: 30, scope: !4734)
!4747 = !DILocation(line: 1384, column: 11, scope: !4734)
!4748 = !DILocation(line: 1384, column: 8, scope: !4734)
!4749 = !DILocation(line: 1383, column: 6, scope: !4734)
!4750 = !DILocation(line: 1371, column: 59, scope: !4716)
!4751 = !DILocation(line: 1371, column: 7, scope: !4716)
!4752 = distinct !{!4752, !4711, !4753}
!4753 = !DILocation(line: 1385, column: 2, scope: !4712)
!4754 = !DILocation(line: 1387, column: 33, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 1387, column: 11)
!4756 = !DILocation(line: 1387, column: 11, scope: !4755)
!4757 = !DILocation(line: 1387, column: 51, scope: !4755)
!4758 = !DILocation(line: 1387, column: 37, scope: !4755)
!4759 = !DILocation(line: 1388, column: 4, scope: !4755)
!4760 = !DILocation(line: 1388, column: 27, scope: !4755)
!4761 = !DILocation(line: 1387, column: 11, scope: !4704)
!4762 = !DILocation(line: 1391, column: 3, scope: !4695)
!4763 = distinct !DISubprogram(name: "precompute_arguments", scope: !3, file: !3, line: 1281, type: !4764, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4766)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{null, !32, !2075}
!4766 = !{!4767, !4768, !4769, !4770, !4774, !4775, !4778}
!4767 = !DILocalVariable(name: "num_actuals", arg: 1, scope: !4763, file: !3, line: 1281, type: !32)
!4768 = !DILocalVariable(name: "args", arg: 2, scope: !4763, file: !3, line: 1281, type: !2075)
!4769 = !DILocalVariable(name: "i", scope: !4763, file: !3, line: 1283, type: !32)
!4770 = !DILocalVariable(name: "type", scope: !4771, file: !3, line: 1300, type: !258)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 1299, column: 5)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 1298, column: 3)
!4773 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 1298, column: 3)
!4774 = !DILocalVariable(name: "mode", scope: !4771, file: !3, line: 1301, type: !50)
!4775 = !DILocalVariable(name: "unsignedp", scope: !4776, file: !3, line: 1316, type: !32)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 1315, column: 2)
!4777 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 1314, column: 11)
!4778 = !DILocalVariable(name: "_rtx", scope: !4779, file: !3, line: 1331, type: !2442)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 1331, column: 8)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1327, column: 6)
!4781 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 1324, column: 8)
!4782 = !DILocation(line: 0, scope: !4763)
!4783 = !DILocation(line: 1295, column: 8, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 1295, column: 7)
!4785 = !DILocation(line: 1295, column: 7, scope: !4763)
!4786 = !DILocation(line: 0, scope: !4776)
!4787 = !DILocation(line: 1298, column: 8, scope: !4773)
!4788 = !DILocation(line: 0, scope: !4773)
!4789 = !DILocation(line: 1298, column: 17, scope: !4772)
!4790 = !DILocation(line: 1298, column: 3, scope: !4773)
!4791 = !DILocation(line: 1303, column: 11, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 1303, column: 11)
!4793 = !DILocation(line: 1303, column: 42, scope: !4792)
!4794 = !DILocation(line: 1303, column: 11, scope: !4771)
!4795 = !DILocation(line: 1307, column: 14, scope: !4771)
!4796 = !DILocation(line: 0, scope: !4771)
!4797 = !DILocation(line: 1308, column: 7, scope: !4771)
!4798 = !DILocation(line: 1311, column: 27, scope: !4771)
!4799 = !DILocation(line: 1311, column: 4, scope: !4771)
!4800 = !DILocation(line: 1310, column: 39, scope: !4771)
!4801 = !DILocation(line: 1311, column: 2, scope: !4771)
!4802 = !DILocation(line: 1310, column: 15, scope: !4771)
!4803 = !DILocation(line: 1310, column: 29, scope: !4771)
!4804 = !DILocation(line: 1313, column: 14, scope: !4771)
!4805 = !DILocation(line: 1314, column: 27, scope: !4777)
!4806 = !DILocation(line: 1314, column: 16, scope: !4777)
!4807 = !DILocation(line: 1314, column: 11, scope: !4771)
!4808 = !DILocation(line: 1316, column: 4, scope: !4776)
!4809 = !DILocation(line: 1316, column: 28, scope: !4776)
!4810 = !DILocation(line: 1316, column: 8, scope: !4776)
!4811 = !DILocation(line: 1319, column: 17, scope: !4776)
!4812 = !DILocation(line: 1318, column: 8, scope: !4776)
!4813 = !DILocation(line: 1318, column: 6, scope: !4776)
!4814 = !DILocation(line: 1324, column: 8, scope: !4781)
!4815 = !DILocation(line: 1325, column: 8, scope: !4781)
!4816 = !DILocation(line: 1325, column: 11, scope: !4781)
!4817 = !DILocation(line: 1325, column: 41, scope: !4781)
!4818 = !DILocation(line: 1326, column: 8, scope: !4781)
!4819 = !DILocation(line: 1326, column: 11, scope: !4781)
!4820 = !DILocation(line: 1326, column: 60, scope: !4781)
!4821 = !DILocation(line: 1326, column: 49, scope: !4781)
!4822 = !DILocation(line: 1324, column: 8, scope: !4776)
!4823 = !DILocation(line: 1329, column: 39, scope: !4780)
!4824 = !DILocation(line: 1329, column: 5, scope: !4780)
!4825 = !DILocation(line: 1329, column: 3, scope: !4780)
!4826 = !DILocation(line: 1330, column: 8, scope: !4780)
!4827 = !DILocation(line: 1330, column: 54, scope: !4780)
!4828 = !DILocation(line: 1331, column: 8, scope: !4779)
!4829 = !DILocation(line: 0, scope: !4779)
!4830 = !DILocation(line: 1331, column: 8, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 1331, column: 8)
!4832 = !DILocation(line: 0, scope: !4831)
!4833 = !DILocation(line: 1331, column: 8, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 1331, column: 8)
!4835 = !DILocation(line: 1334, column: 2, scope: !4777)
!4836 = !DILocation(line: 1334, column: 2, scope: !4776)
!4837 = !DILocation(line: 1298, column: 33, scope: !4772)
!4838 = !DILocation(line: 1298, column: 3, scope: !4772)
!4839 = distinct !{!4839, !4790, !4840}
!4840 = !DILocation(line: 1335, column: 5, scope: !4773)
!4841 = !DILocation(line: 1336, column: 1, scope: !4763)
!4842 = distinct !DISubprogram(name: "compute_argument_block_size", scope: !3, file: !3, line: 1202, type: !4843, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4845)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!32, !32, !4378, !258, !258, !32}
!4845 = !{!4846, !4847, !4848, !4849, !4850, !4851}
!4846 = !DILocalVariable(name: "reg_parm_stack_space", arg: 1, scope: !4842, file: !3, line: 1202, type: !32)
!4847 = !DILocalVariable(name: "args_size", arg: 2, scope: !4842, file: !3, line: 1203, type: !4378)
!4848 = !DILocalVariable(name: "fndecl", arg: 3, scope: !4842, file: !3, line: 1204, type: !258)
!4849 = !DILocalVariable(name: "fntype", arg: 4, scope: !4842, file: !3, line: 1205, type: !258)
!4850 = !DILocalVariable(name: "preferred_stack_boundary", arg: 5, scope: !4842, file: !3, line: 1206, type: !32)
!4851 = !DILocalVariable(name: "unadjusted_args_size", scope: !4842, file: !3, line: 1208, type: !32)
!4852 = !DILocation(line: 0, scope: !4842)
!4853 = !DILocation(line: 1208, column: 41, scope: !4842)
!4854 = !DILocation(line: 1208, column: 30, scope: !4842)
!4855 = !DILocation(line: 1213, column: 7, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 1213, column: 7)
!4857 = !DILocation(line: 1213, column: 60, scope: !4856)
!4858 = !DILocation(line: 1213, column: 32, scope: !4856)
!4859 = !DILocation(line: 1213, column: 7, scope: !4842)
!4860 = !DILocation(line: 1214, column: 5, scope: !4856)
!4861 = !DILocation(line: 1220, column: 18, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 1220, column: 7)
!4863 = !DILocation(line: 1220, column: 7, scope: !4862)
!4864 = !DILocation(line: 1220, column: 7, scope: !4842)
!4865 = !DILocation(line: 1222, column: 24, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1221, column: 5)
!4867 = !DILocation(line: 1222, column: 22, scope: !4866)
!4868 = !DILocation(line: 1223, column: 27, scope: !4866)
!4869 = !DILocation(line: 1225, column: 32, scope: !4866)
!4870 = !DILocation(line: 1226, column: 36, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 1226, column: 11)
!4872 = !DILocation(line: 1226, column: 11, scope: !4866)
!4873 = !DILocation(line: 1231, column: 4, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 1227, column: 2)
!4875 = !DILocation(line: 1232, column: 21, scope: !4874)
!4876 = !DILocation(line: 1232, column: 19, scope: !4874)
!4877 = !DILocation(line: 1233, column: 2, scope: !4874)
!4878 = !DILocation(line: 1235, column: 32, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 1235, column: 11)
!4880 = !DILocation(line: 1235, column: 11, scope: !4866)
!4881 = !DILocation(line: 1238, column: 8, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1236, column: 2)
!4883 = !DILocation(line: 1238, column: 6, scope: !4882)
!4884 = !DILocation(line: 1243, column: 10, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 1243, column: 8)
!4886 = !DILocation(line: 1243, column: 8, scope: !4882)
!4887 = !DILocation(line: 1245, column: 10, scope: !4885)
!4888 = !DILocation(line: 1245, column: 8, scope: !4885)
!4889 = !DILocation(line: 1244, column: 6, scope: !4885)
!4890 = !DILocation(line: 1251, column: 32, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1250, column: 5)
!4892 = !DILocation(line: 1252, column: 11, scope: !4891)
!4893 = !DILocation(line: 1254, column: 43, scope: !4891)
!4894 = !DILocation(line: 1255, column: 13, scope: !4891)
!4895 = !DILocation(line: 1255, column: 11, scope: !4891)
!4896 = !DILocation(line: 1256, column: 13, scope: !4891)
!4897 = !DILocation(line: 1256, column: 11, scope: !4891)
!4898 = !DILocation(line: 1256, column: 38, scope: !4891)
!4899 = !DILocation(line: 1258, column: 10, scope: !4891)
!4900 = !DILocation(line: 1259, column: 9, scope: !4891)
!4901 = !DILocation(line: 1254, column: 27, scope: !4891)
!4902 = !DILocation(line: 1261, column: 29, scope: !4891)
!4903 = !DILocation(line: 1261, column: 27, scope: !4891)
!4904 = !DILocation(line: 1264, column: 13, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 1264, column: 11)
!4906 = !DILocation(line: 1264, column: 11, scope: !4891)
!4907 = !DILocation(line: 1265, column: 22, scope: !4905)
!4908 = !DILocation(line: 1265, column: 2, scope: !4905)
!4909 = !DILocation(line: 1267, column: 3, scope: !4842)
!4910 = distinct !DISubprogram(name: "expand_normal", scope: !1963, file: !1963, line: 562, type: !4911, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4913)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!6, !258}
!4913 = !{!4914}
!4914 = !DILocalVariable(name: "exp", arg: 1, scope: !4910, file: !1963, line: 562, type: !258)
!4915 = !DILocation(line: 0, scope: !4910)
!4916 = !DILocation(line: 564, column: 10, scope: !4910)
!4917 = !DILocation(line: 564, column: 3, scope: !4910)
!4918 = distinct !DISubprogram(name: "combine_pending_stack_adjustment_and_call", scope: !3, file: !3, line: 1731, type: !4919, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4921)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!32, !32, !4378, !13}
!4921 = !{!4922, !4923, !4924, !4925, !4926}
!4922 = !DILocalVariable(name: "unadjusted_args_size", arg: 1, scope: !4918, file: !3, line: 1731, type: !32)
!4923 = !DILocalVariable(name: "args_size", arg: 2, scope: !4918, file: !3, line: 1732, type: !4378)
!4924 = !DILocalVariable(name: "preferred_unit_stack_boundary", arg: 3, scope: !4918, file: !3, line: 1733, type: !13)
!4925 = !DILocalVariable(name: "adjustment", scope: !4918, file: !3, line: 1737, type: !227)
!4926 = !DILocalVariable(name: "unadjusted_alignment", scope: !4918, file: !3, line: 1740, type: !210)
!4927 = !DILocation(line: 0, scope: !4918)
!4928 = !DILocation(line: 1743, column: 9, scope: !4918)
!4929 = !DILocation(line: 1743, column: 29, scope: !4918)
!4930 = !DILocation(line: 1744, column: 8, scope: !4918)
!4931 = !DILocation(line: 1743, column: 7, scope: !4918)
!4932 = !DILocation(line: 1755, column: 11, scope: !4918)
!4933 = !DILocation(line: 1755, column: 32, scope: !4918)
!4934 = !DILocation(line: 1755, column: 10, scope: !4918)
!4935 = !DILocation(line: 1755, column: 8, scope: !4918)
!4936 = !DILocation(line: 1756, column: 16, scope: !4918)
!4937 = !DILocation(line: 1759, column: 37, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1759, column: 7)
!4939 = !DILocation(line: 1759, column: 7, scope: !4918)
!4940 = !DILocation(line: 1761, column: 32, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 1761, column: 11)
!4942 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 1760, column: 5)
!4943 = !DILocation(line: 1761, column: 11, scope: !4942)
!4944 = !DILocation(line: 1772, column: 28, scope: !4918)
!4945 = !DILocation(line: 1772, column: 43, scope: !4918)
!4946 = !DILocation(line: 1772, column: 41, scope: !4918)
!4947 = !DILocation(line: 1771, column: 14, scope: !4918)
!4948 = !DILocation(line: 1772, column: 5, scope: !4918)
!4949 = !DILocation(line: 1774, column: 10, scope: !4918)
!4950 = !DILocation(line: 1774, column: 3, scope: !4918)
!4951 = distinct !DISubprogram(name: "compute_argument_addresses", scope: !3, file: !3, line: 1403, type: !4952, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !4954)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{null, !2075, !6, !32}
!4954 = !{!4955, !4956, !4957, !4958, !4961, !4962, !4963, !4967, !4968, !4969, !4970, !4971, !4972}
!4955 = !DILocalVariable(name: "args", arg: 1, scope: !4951, file: !3, line: 1403, type: !2075)
!4956 = !DILocalVariable(name: "argblock", arg: 2, scope: !4951, file: !3, line: 1403, type: !6)
!4957 = !DILocalVariable(name: "num_actuals", arg: 3, scope: !4951, file: !3, line: 1403, type: !32)
!4958 = !DILocalVariable(name: "arg_reg", scope: !4959, file: !3, line: 1407, type: !6)
!4959 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 1406, column: 5)
!4960 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 1405, column: 7)
!4961 = !DILocalVariable(name: "i", scope: !4959, file: !3, line: 1408, type: !32)
!4962 = !DILocalVariable(name: "arg_offset", scope: !4959, file: !3, line: 1408, type: !32)
!4963 = !DILocalVariable(name: "offset", scope: !4964, file: !3, line: 1415, type: !6)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 1414, column: 2)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 1413, column: 7)
!4966 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 1413, column: 7)
!4967 = !DILocalVariable(name: "slot_offset", scope: !4964, file: !3, line: 1416, type: !6)
!4968 = !DILocalVariable(name: "addr", scope: !4964, file: !3, line: 1417, type: !6)
!4969 = !DILocalVariable(name: "align", scope: !4964, file: !3, line: 1418, type: !13)
!4970 = !DILocalVariable(name: "boundary", scope: !4964, file: !3, line: 1418, type: !13)
!4971 = !DILocalVariable(name: "units_on_stack", scope: !4964, file: !3, line: 1419, type: !13)
!4972 = !DILocalVariable(name: "partial_mode", scope: !4964, file: !3, line: 1420, type: !50)
!4973 = !DILocation(line: 0, scope: !4951)
!4974 = !DILocation(line: 1405, column: 7, scope: !4960)
!4975 = !DILocation(line: 1405, column: 7, scope: !4951)
!4976 = !DILocation(line: 0, scope: !4959)
!4977 = !DILocation(line: 1410, column: 11, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 1410, column: 11)
!4979 = !DILocation(line: 1410, column: 31, scope: !4978)
!4980 = !DILocation(line: 1410, column: 11, scope: !4959)
!4981 = !DILocation(line: 1411, column: 12, scope: !4978)
!4982 = !DILocation(line: 1411, column: 45, scope: !4978)
!4983 = !DILocation(line: 1411, column: 2, scope: !4978)
!4984 = !DILocation(line: 1413, column: 12, scope: !4966)
!4985 = !DILocation(line: 0, scope: !4966)
!4986 = !DILocation(line: 1413, column: 21, scope: !4965)
!4987 = !DILocation(line: 1413, column: 7, scope: !4966)
!4988 = !DILocation(line: 1415, column: 17, scope: !4964)
!4989 = !DILocation(line: 0, scope: !4964)
!4990 = !DILocation(line: 1416, column: 22, scope: !4964)
!4991 = !DILocation(line: 1423, column: 18, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1423, column: 8)
!4993 = !DILocation(line: 1423, column: 10, scope: !4992)
!4994 = !DILocation(line: 1424, column: 8, scope: !4992)
!4995 = !DILocation(line: 1424, column: 19, scope: !4992)
!4996 = !DILocation(line: 1424, column: 23, scope: !4992)
!4997 = !DILocation(line: 1425, column: 8, scope: !4992)
!4998 = !DILocation(line: 1425, column: 19, scope: !4992)
!4999 = !DILocation(line: 1425, column: 27, scope: !4992)
!5000 = !DILocation(line: 1423, column: 8, scope: !4964)
!5001 = !DILocation(line: 1428, column: 8, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1428, column: 8)
!5003 = !DILocation(line: 1428, column: 8, scope: !4964)
!5004 = !DILocation(line: 1429, column: 37, scope: !5002)
!5005 = !DILocation(line: 1429, column: 13, scope: !5002)
!5006 = !DILocation(line: 1429, column: 6, scope: !5002)
!5007 = !DILocation(line: 1431, column: 13, scope: !5002)
!5008 = !DILocation(line: 0, scope: !5002)
!5009 = !DILocation(line: 1433, column: 11, scope: !4964)
!5010 = !DILocation(line: 1435, column: 16, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1435, column: 8)
!5012 = !DILocation(line: 1435, column: 24, scope: !5011)
!5013 = !DILocation(line: 1435, column: 8, scope: !4964)
!5014 = !DILocation(line: 1439, column: 45, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1436, column: 6)
!5016 = !DILocation(line: 1439, column: 25, scope: !5015)
!5017 = !DILocation(line: 1440, column: 53, scope: !5015)
!5018 = !DILocation(line: 1440, column: 23, scope: !5015)
!5019 = !DILocation(line: 1442, column: 24, scope: !5015)
!5020 = !DILocation(line: 1442, column: 16, scope: !5015)
!5021 = !DILocation(line: 1442, column: 22, scope: !5015)
!5022 = !DILocation(line: 1443, column: 37, scope: !5015)
!5023 = !DILocation(line: 1443, column: 8, scope: !5015)
!5024 = !DILocation(line: 1444, column: 6, scope: !5015)
!5025 = !DILocation(line: 1447, column: 45, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1446, column: 6)
!5027 = !DILocation(line: 1447, column: 24, scope: !5026)
!5028 = !DILocation(line: 1447, column: 16, scope: !5026)
!5029 = !DILocation(line: 1447, column: 22, scope: !5026)
!5030 = !DILocation(line: 1449, column: 7, scope: !5026)
!5031 = !DILocation(line: 1448, column: 8, scope: !5026)
!5032 = !DILocation(line: 1452, column: 30, scope: !4964)
!5033 = !DILocation(line: 1453, column: 23, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1453, column: 8)
!5035 = !DILocation(line: 1453, column: 33, scope: !5034)
!5036 = !DILocation(line: 1453, column: 8, scope: !4964)
!5037 = !DILocation(line: 1455, column: 13, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 1455, column: 13)
!5039 = !DILocation(line: 1455, column: 13, scope: !5034)
!5040 = !DILocation(line: 1457, column: 16, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 1456, column: 6)
!5042 = !DILocation(line: 1458, column: 24, scope: !5041)
!5043 = !DILocation(line: 1458, column: 22, scope: !5041)
!5044 = !DILocation(line: 1459, column: 6, scope: !5041)
!5045 = !DILocation(line: 0, scope: !5034)
!5046 = !DILocation(line: 1460, column: 27, scope: !4964)
!5047 = !DILocation(line: 1460, column: 4, scope: !4964)
!5048 = !DILocation(line: 1462, column: 8, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1462, column: 8)
!5050 = !DILocation(line: 1462, column: 8, scope: !4964)
!5051 = !DILocation(line: 1463, column: 37, scope: !5049)
!5052 = !DILocation(line: 1463, column: 13, scope: !5049)
!5053 = !DILocation(line: 1463, column: 6, scope: !5049)
!5054 = !DILocation(line: 1465, column: 13, scope: !5049)
!5055 = !DILocation(line: 0, scope: !5049)
!5056 = !DILocation(line: 1467, column: 11, scope: !4964)
!5057 = !DILocation(line: 1469, column: 16, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1469, column: 8)
!5059 = !DILocation(line: 1469, column: 24, scope: !5058)
!5060 = !DILocation(line: 1469, column: 8, scope: !4964)
!5061 = !DILocation(line: 1474, column: 29, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 1470, column: 6)
!5063 = !DILocation(line: 1474, column: 16, scope: !5062)
!5064 = !DILocation(line: 1474, column: 27, scope: !5062)
!5065 = !DILocation(line: 1475, column: 42, scope: !5062)
!5066 = !DILocation(line: 1475, column: 8, scope: !5062)
!5067 = !DILocation(line: 1476, column: 6, scope: !5062)
!5068 = !DILocation(line: 1479, column: 50, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 1478, column: 6)
!5070 = !DILocation(line: 1479, column: 29, scope: !5069)
!5071 = !DILocation(line: 1479, column: 16, scope: !5069)
!5072 = !DILocation(line: 1479, column: 27, scope: !5069)
!5073 = !DILocation(line: 1481, column: 7, scope: !5069)
!5074 = !DILocation(line: 1480, column: 8, scope: !5069)
!5075 = !DILocation(line: 1483, column: 27, scope: !4964)
!5076 = !DILocation(line: 1483, column: 54, scope: !4964)
!5077 = !DILocation(line: 1483, column: 4, scope: !4964)
!5078 = !DILocation(line: 1489, column: 31, scope: !4964)
!5079 = !DILocation(line: 1489, column: 4, scope: !4964)
!5080 = !DILocation(line: 1490, column: 31, scope: !4964)
!5081 = !DILocation(line: 1490, column: 4, scope: !4964)
!5082 = !DILocation(line: 1491, column: 2, scope: !4965)
!5083 = !DILocation(line: 1413, column: 37, scope: !4965)
!5084 = !DILocation(line: 1413, column: 7, scope: !4965)
!5085 = distinct !{!5085, !4987, !5086}
!5086 = !DILocation(line: 1491, column: 2, scope: !4966)
!5087 = !DILocation(line: 1493, column: 1, scope: !4951)
!5088 = distinct !DISubprogram(name: "rtx_for_function_call", scope: !3, file: !3, line: 1504, type: !5089, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5091)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!6, !258, !258}
!5091 = !{!5092, !5093, !5094}
!5092 = !DILocalVariable(name: "fndecl", arg: 1, scope: !5088, file: !3, line: 1504, type: !258)
!5093 = !DILocalVariable(name: "addr", arg: 2, scope: !5088, file: !3, line: 1504, type: !258)
!5094 = !DILocalVariable(name: "funexp", scope: !5088, file: !3, line: 1506, type: !6)
!5095 = !DILocation(line: 0, scope: !5088)
!5096 = !DILocation(line: 1509, column: 7, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1509, column: 7)
!5098 = !DILocation(line: 1509, column: 7, scope: !5088)
!5099 = !DILocation(line: 1513, column: 12, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1513, column: 11)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 1510, column: 5)
!5102 = !DILocation(line: 1513, column: 44, scope: !5100)
!5103 = !DILocation(line: 1513, column: 41, scope: !5100)
!5104 = !DILocation(line: 1513, column: 31, scope: !5100)
!5105 = !DILocation(line: 1515, column: 4, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1514, column: 2)
!5107 = !DILocation(line: 1516, column: 23, scope: !5106)
!5108 = !DILocation(line: 1517, column: 2, scope: !5106)
!5109 = !DILocation(line: 1520, column: 16, scope: !5101)
!5110 = !DILocation(line: 1521, column: 5, scope: !5101)
!5111 = !DILocation(line: 1525, column: 7, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 1524, column: 5)
!5113 = !DILocation(line: 1526, column: 16, scope: !5112)
!5114 = !DILocation(line: 1527, column: 7, scope: !5112)
!5115 = !DILocation(line: 0, scope: !5097)
!5116 = !DILocation(line: 1529, column: 3, scope: !5088)
!5117 = distinct !DISubprogram(name: "precompute_register_parameters", scope: !3, file: !3, line: 654, type: !5118, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5120)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{null, !32, !2075, !4380}
!5120 = !{!5121, !5122, !5123, !5124, !5125}
!5121 = !DILocalVariable(name: "num_actuals", arg: 1, scope: !5117, file: !3, line: 654, type: !32)
!5122 = !DILocalVariable(name: "args", arg: 2, scope: !5117, file: !3, line: 654, type: !2075)
!5123 = !DILocalVariable(name: "reg_parm_seen", arg: 3, scope: !5117, file: !3, line: 655, type: !4380)
!5124 = !DILocalVariable(name: "i", scope: !5117, file: !3, line: 657, type: !32)
!5125 = !DILocalVariable(name: "type", scope: !5126, file: !3, line: 694, type: !258)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 693, column: 4)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 692, column: 6)
!5128 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 663, column: 7)
!5129 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 662, column: 9)
!5130 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 661, column: 3)
!5131 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 661, column: 3)
!5132 = !DILocation(line: 0, scope: !5117)
!5133 = !DILocation(line: 659, column: 18, scope: !5117)
!5134 = !DILocation(line: 661, column: 8, scope: !5131)
!5135 = !DILocation(line: 0, scope: !5131)
!5136 = !DILocation(line: 661, column: 17, scope: !5130)
!5137 = !DILocation(line: 661, column: 3, scope: !5131)
!5138 = !DILocation(line: 662, column: 17, scope: !5129)
!5139 = !DILocation(line: 662, column: 21, scope: !5129)
!5140 = !DILocation(line: 662, column: 26, scope: !5129)
!5141 = !DILocation(line: 662, column: 39, scope: !5129)
!5142 = !DILocation(line: 662, column: 31, scope: !5129)
!5143 = !DILocation(line: 662, column: 9, scope: !5130)
!5144 = !DILocation(line: 664, column: 17, scope: !5128)
!5145 = !DILocation(line: 666, column: 14, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 666, column: 6)
!5147 = !DILocation(line: 666, column: 20, scope: !5146)
!5148 = !DILocation(line: 666, column: 6, scope: !5128)
!5149 = !DILocation(line: 676, column: 6, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 676, column: 6)
!5151 = !DILocation(line: 668, column: 6, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 667, column: 4)
!5153 = !DILocation(line: 669, column: 45, scope: !5152)
!5154 = !DILocation(line: 669, column: 22, scope: !5152)
!5155 = !DILocation(line: 669, column: 20, scope: !5152)
!5156 = !DILocation(line: 670, column: 6, scope: !5152)
!5157 = !DILocation(line: 671, column: 6, scope: !5152)
!5158 = !DILocation(line: 0, scope: !5150)
!5159 = !DILocation(line: 672, column: 4, scope: !5152)
!5160 = !DILocation(line: 677, column: 6, scope: !5150)
!5161 = !DILocation(line: 677, column: 10, scope: !5150)
!5162 = !DILocation(line: 676, column: 6, scope: !5128)
!5163 = !DILocation(line: 678, column: 39, scope: !5150)
!5164 = !DILocation(line: 678, column: 53, scope: !5150)
!5165 = !DILocation(line: 678, column: 20, scope: !5150)
!5166 = !DILocation(line: 678, column: 18, scope: !5150)
!5167 = !DILocation(line: 678, column: 4, scope: !5150)
!5168 = !DILocation(line: 683, column: 14, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 683, column: 6)
!5170 = !DILocation(line: 683, column: 22, scope: !5169)
!5171 = !DILocation(line: 683, column: 19, scope: !5169)
!5172 = !DILocation(line: 683, column: 6, scope: !5128)
!5173 = !DILocation(line: 685, column: 31, scope: !5169)
!5174 = !DILocation(line: 686, column: 9, scope: !5169)
!5175 = !DILocation(line: 687, column: 17, scope: !5169)
!5176 = !DILocation(line: 687, column: 32, scope: !5169)
!5177 = !DILocation(line: 685, column: 8, scope: !5169)
!5178 = !DILocation(line: 685, column: 6, scope: !5169)
!5179 = !DILocation(line: 684, column: 4, scope: !5169)
!5180 = !DILocation(line: 692, column: 6, scope: !5127)
!5181 = !DILocation(line: 692, column: 29, scope: !5127)
!5182 = !DILocation(line: 692, column: 6, scope: !5128)
!5183 = !DILocation(line: 694, column: 18, scope: !5126)
!5184 = !DILocation(line: 0, scope: !5126)
!5185 = !DILocation(line: 696, column: 59, scope: !5126)
!5186 = !DILocation(line: 697, column: 16, scope: !5126)
!5187 = !DILocation(line: 696, column: 10, scope: !5126)
!5188 = !DILocation(line: 695, column: 14, scope: !5126)
!5189 = !DILocation(line: 696, column: 8, scope: !5126)
!5190 = !DILocation(line: 698, column: 4, scope: !5126)
!5191 = !DILocation(line: 708, column: 15, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 708, column: 11)
!5193 = !DILocation(line: 709, column: 8, scope: !5192)
!5194 = !DILocation(line: 709, column: 37, scope: !5192)
!5195 = !DILocation(line: 710, column: 5, scope: !5192)
!5196 = !DILocation(line: 710, column: 8, scope: !5192)
!5197 = !DILocation(line: 711, column: 4, scope: !5192)
!5198 = !DILocation(line: 711, column: 15, scope: !5192)
!5199 = !DILocation(line: 711, column: 20, scope: !5192)
!5200 = !DILocation(line: 712, column: 4, scope: !5192)
!5201 = !DILocation(line: 712, column: 37, scope: !5192)
!5202 = !DILocation(line: 712, column: 7, scope: !5192)
!5203 = !DILocation(line: 713, column: 7, scope: !5192)
!5204 = !DILocation(line: 714, column: 4, scope: !5192)
!5205 = !DILocation(line: 714, column: 35, scope: !5192)
!5206 = !DILocation(line: 715, column: 11, scope: !5192)
!5207 = !DILocation(line: 715, column: 8, scope: !5192)
!5208 = !DILocation(line: 716, column: 46, scope: !5192)
!5209 = !DILocation(line: 716, column: 60, scope: !5192)
!5210 = !DILocation(line: 716, column: 20, scope: !5192)
!5211 = !DILocation(line: 716, column: 18, scope: !5192)
!5212 = !DILocation(line: 716, column: 4, scope: !5192)
!5213 = !DILocation(line: 661, column: 33, scope: !5130)
!5214 = !DILocation(line: 661, column: 3, scope: !5130)
!5215 = distinct !{!5215, !5137, !5216}
!5216 = !DILocation(line: 717, column: 7, scope: !5131)
!5217 = !DILocation(line: 718, column: 1, scope: !5117)
!5218 = distinct !DISubprogram(name: "save_fixed_argument_area", scope: !3, file: !3, line: 727, type: !5219, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5221)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{!6, !32, !6, !4380, !4380}
!5221 = !{!5222, !5223, !5224, !5225, !5226, !5227, !5228, !5233, !5234, !5235, !5236}
!5222 = !DILocalVariable(name: "reg_parm_stack_space", arg: 1, scope: !5218, file: !3, line: 727, type: !32)
!5223 = !DILocalVariable(name: "argblock", arg: 2, scope: !5218, file: !3, line: 727, type: !6)
!5224 = !DILocalVariable(name: "low_to_save", arg: 3, scope: !5218, file: !3, line: 727, type: !4380)
!5225 = !DILocalVariable(name: "high_to_save", arg: 4, scope: !5218, file: !3, line: 727, type: !4380)
!5226 = !DILocalVariable(name: "low", scope: !5218, file: !3, line: 729, type: !32)
!5227 = !DILocalVariable(name: "high", scope: !5218, file: !3, line: 730, type: !32)
!5228 = !DILocalVariable(name: "num_to_save", scope: !5229, file: !3, line: 743, type: !32)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 742, column: 7)
!5230 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 741, column: 9)
!5231 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 740, column: 3)
!5232 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 740, column: 3)
!5233 = !DILocalVariable(name: "save_mode", scope: !5229, file: !3, line: 744, type: !50)
!5234 = !DILocalVariable(name: "delta", scope: !5229, file: !3, line: 745, type: !32)
!5235 = !DILocalVariable(name: "stack_area", scope: !5229, file: !3, line: 746, type: !6)
!5236 = !DILocalVariable(name: "save_area", scope: !5229, file: !3, line: 747, type: !6)
!5237 = !DILocation(line: 0, scope: !5218)
!5238 = !DILocation(line: 737, column: 14, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 737, column: 7)
!5240 = !DILocation(line: 737, column: 12, scope: !5239)
!5241 = !DILocation(line: 737, column: 7, scope: !5218)
!5242 = !DILocation(line: 0, scope: !5230)
!5243 = !DILocation(line: 740, column: 8, scope: !5232)
!5244 = !DILocation(line: 0, scope: !5232)
!5245 = !DILocation(line: 740, column: 21, scope: !5231)
!5246 = !DILocation(line: 740, column: 3, scope: !5232)
!5247 = !DILocation(line: 741, column: 9, scope: !5230)
!5248 = !DILocation(line: 741, column: 30, scope: !5230)
!5249 = !DILocation(line: 741, column: 9, scope: !5231)
!5250 = !DILocation(line: 749, column: 2, scope: !5229)
!5251 = !DILocation(line: 749, column: 25, scope: !5229)
!5252 = !DILocation(line: 749, column: 9, scope: !5229)
!5253 = !DILocation(line: 749, column: 33, scope: !5229)
!5254 = distinct !{!5254, !5250, !5255}
!5255 = !DILocation(line: 750, column: 4, scope: !5229)
!5256 = !DILocation(line: 752, column: 15, scope: !5229)
!5257 = !DILocation(line: 753, column: 16, scope: !5229)
!5258 = !DILocation(line: 755, column: 21, scope: !5229)
!5259 = !DILocation(line: 755, column: 27, scope: !5229)
!5260 = !DILocation(line: 0, scope: !5229)
!5261 = !DILocation(line: 756, column: 41, scope: !5229)
!5262 = !DILocation(line: 756, column: 14, scope: !5229)
!5263 = !DILocation(line: 760, column: 14, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 760, column: 6)
!5265 = !DILocation(line: 761, column: 41, scope: !5264)
!5266 = !DILocation(line: 760, column: 11, scope: !5264)
!5267 = !DILocation(line: 760, column: 6, scope: !5229)
!5268 = !DILocation(line: 770, column: 7, scope: !5229)
!5269 = !DILocation(line: 769, column: 15, scope: !5229)
!5270 = !DILocation(line: 774, column: 2, scope: !5229)
!5271 = !DILocation(line: 775, column: 16, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 775, column: 6)
!5273 = !DILocation(line: 775, column: 6, scope: !5229)
!5274 = !DILocation(line: 777, column: 46, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 776, column: 4)
!5276 = !DILocation(line: 777, column: 18, scope: !5275)
!5277 = !DILocation(line: 778, column: 23, scope: !5275)
!5278 = !DILocation(line: 779, column: 9, scope: !5275)
!5279 = !DILocation(line: 778, column: 6, scope: !5275)
!5280 = !DILocation(line: 780, column: 4, scope: !5275)
!5281 = !DILocation(line: 783, column: 18, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 782, column: 4)
!5283 = !DILocation(line: 784, column: 6, scope: !5282)
!5284 = !DILocation(line: 740, column: 32, scope: !5231)
!5285 = !DILocation(line: 740, column: 3, scope: !5231)
!5286 = distinct !{!5286, !5246, !5287}
!5287 = !DILocation(line: 788, column: 7, scope: !5232)
!5288 = !DILocation(line: 791, column: 1, scope: !5218)
!5289 = distinct !DISubprogram(name: "store_one_arg", scope: !3, file: !3, line: 3994, type: !5290, scopeLine: 3996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5292)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!32, !2075, !6, !32, !32, !32}
!5292 = !{!5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5313, !5314, !5315, !5316, !5319, !5320, !5324, !5325, !5327, !5328, !5329, !5332, !5333}
!5293 = !DILocalVariable(name: "arg", arg: 1, scope: !5289, file: !3, line: 3994, type: !2075)
!5294 = !DILocalVariable(name: "argblock", arg: 2, scope: !5289, file: !3, line: 3994, type: !6)
!5295 = !DILocalVariable(name: "flags", arg: 3, scope: !5289, file: !3, line: 3994, type: !32)
!5296 = !DILocalVariable(name: "variable_size", arg: 4, scope: !5289, file: !3, line: 3995, type: !32)
!5297 = !DILocalVariable(name: "reg_parm_stack_space", arg: 5, scope: !5289, file: !3, line: 3995, type: !32)
!5298 = !DILocalVariable(name: "pval", scope: !5289, file: !3, line: 3997, type: !258)
!5299 = !DILocalVariable(name: "reg", scope: !5289, file: !3, line: 3998, type: !6)
!5300 = !DILocalVariable(name: "partial", scope: !5289, file: !3, line: 3999, type: !32)
!5301 = !DILocalVariable(name: "used", scope: !5289, file: !3, line: 4000, type: !32)
!5302 = !DILocalVariable(name: "i", scope: !5289, file: !3, line: 4001, type: !32)
!5303 = !DILocalVariable(name: "lower_bound", scope: !5289, file: !3, line: 4001, type: !32)
!5304 = !DILocalVariable(name: "upper_bound", scope: !5289, file: !3, line: 4001, type: !32)
!5305 = !DILocalVariable(name: "sibcall_failure", scope: !5289, file: !3, line: 4002, type: !32)
!5306 = !DILocalVariable(name: "size", scope: !5307, file: !3, line: 4046, type: !13)
!5307 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 4044, column: 6)
!5308 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 4043, column: 8)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 4016, column: 2)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 4015, column: 11)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 4012, column: 5)
!5312 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4011, column: 7)
!5313 = !DILocalVariable(name: "save_mode", scope: !5307, file: !3, line: 4047, type: !50)
!5314 = !DILocalVariable(name: "adr", scope: !5307, file: !3, line: 4048, type: !6)
!5315 = !DILocalVariable(name: "stack_area", scope: !5307, file: !3, line: 4049, type: !6)
!5316 = !DILocalVariable(name: "ot", scope: !5317, file: !3, line: 4053, type: !258)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 4052, column: 3)
!5318 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 4051, column: 12)
!5319 = !DILocalVariable(name: "nt", scope: !5317, file: !3, line: 4054, type: !258)
!5320 = !DILocalVariable(name: "size", scope: !5321, file: !3, line: 4151, type: !32)
!5321 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 4150, column: 5)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 4149, column: 12)
!5323 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4146, column: 7)
!5324 = !DILocalVariable(name: "parm_align", scope: !5321, file: !3, line: 4152, type: !13)
!5325 = !DILocalVariable(name: "parm_align", scope: !5326, file: !3, line: 4208, type: !13)
!5326 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 4205, column: 5)
!5327 = !DILocalVariable(name: "excess", scope: !5326, file: !3, line: 4209, type: !32)
!5328 = !DILocalVariable(name: "size_rtx", scope: !5326, file: !3, line: 4210, type: !6)
!5329 = !DILocalVariable(name: "x", scope: !5330, file: !3, line: 4255, type: !6)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 4252, column: 2)
!5331 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 4251, column: 11)
!5332 = !DILocalVariable(name: "i", scope: !5330, file: !3, line: 4256, type: !32)
!5333 = !DILocalVariable(name: "type", scope: !5334, file: !3, line: 4318, type: !258)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 4317, column: 5)
!5335 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4316, column: 7)
!5336 = !DILocation(line: 0, scope: !5289)
!5337 = !DILocation(line: 3997, column: 20, scope: !5289)
!5338 = !DILocation(line: 4004, column: 7, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4004, column: 7)
!5340 = !DILocation(line: 4004, column: 24, scope: !5339)
!5341 = !DILocation(line: 4004, column: 7, scope: !5289)
!5342 = !DILocation(line: 4009, column: 3, scope: !5289)
!5343 = !DILocation(line: 4011, column: 7, scope: !5312)
!5344 = !DILocation(line: 4011, column: 32, scope: !5312)
!5345 = !DILocation(line: 4011, column: 43, scope: !5312)
!5346 = !DILocation(line: 4011, column: 7, scope: !5289)
!5347 = !DILocation(line: 4015, column: 11, scope: !5310)
!5348 = !DILocation(line: 4015, column: 25, scope: !5310)
!5349 = !DILocation(line: 4015, column: 20, scope: !5310)
!5350 = !DILocation(line: 4015, column: 47, scope: !5310)
!5351 = !DILocation(line: 4015, column: 42, scope: !5310)
!5352 = !DILocation(line: 4015, column: 11, scope: !5311)
!5353 = !DILocation(line: 4027, column: 8, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 4027, column: 8)
!5355 = !DILocation(line: 4027, column: 45, scope: !5354)
!5356 = !DILocation(line: 4027, column: 8, scope: !5309)
!5357 = !DILocation(line: 4028, column: 20, scope: !5354)
!5358 = !DILocation(line: 4028, column: 6, scope: !5354)
!5359 = !DILocation(line: 0, scope: !5354)
!5360 = !DILocation(line: 4032, column: 49, scope: !5309)
!5361 = !DILocation(line: 4032, column: 18, scope: !5309)
!5362 = !DILocation(line: 4038, column: 10, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 4038, column: 8)
!5364 = !DILocation(line: 4038, column: 8, scope: !5309)
!5365 = !DILocation(line: 0, scope: !5309)
!5366 = !DILocation(line: 4040, column: 4, scope: !5309)
!5367 = !DILocation(line: 4040, column: 13, scope: !5309)
!5368 = !DILocation(line: 4040, column: 27, scope: !5309)
!5369 = !DILocation(line: 4040, column: 30, scope: !5309)
!5370 = !DILocation(line: 4040, column: 49, scope: !5309)
!5371 = !DILocation(line: 4041, column: 7, scope: !5309)
!5372 = distinct !{!5372, !5366, !5371}
!5373 = !DILocation(line: 4043, column: 8, scope: !5309)
!5374 = !DILocation(line: 4046, column: 28, scope: !5307)
!5375 = !DILocation(line: 0, scope: !5307)
!5376 = !DILocation(line: 4047, column: 38, scope: !5307)
!5377 = !DILocation(line: 4048, column: 18, scope: !5307)
!5378 = !DILocation(line: 4049, column: 25, scope: !5307)
!5379 = !DILocation(line: 4051, column: 22, scope: !5318)
!5380 = !DILocation(line: 4051, column: 12, scope: !5307)
!5381 = !DILocation(line: 4053, column: 15, scope: !5317)
!5382 = !DILocation(line: 0, scope: !5317)
!5383 = !DILocation(line: 4054, column: 42, scope: !5317)
!5384 = !DILocation(line: 4055, column: 14, scope: !5317)
!5385 = !DILocation(line: 4054, column: 15, scope: !5317)
!5386 = !DILocation(line: 4057, column: 22, scope: !5317)
!5387 = !DILocation(line: 4057, column: 10, scope: !5317)
!5388 = !DILocation(line: 4057, column: 20, scope: !5317)
!5389 = !DILocation(line: 4058, column: 5, scope: !5317)
!5390 = !DILocation(line: 4059, column: 41, scope: !5317)
!5391 = !DILocation(line: 4059, column: 22, scope: !5317)
!5392 = !DILocation(line: 4060, column: 8, scope: !5317)
!5393 = !DILocation(line: 4059, column: 5, scope: !5317)
!5394 = !DILocation(line: 4062, column: 3, scope: !5317)
!5395 = !DILocation(line: 4065, column: 22, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 4064, column: 3)
!5397 = !DILocation(line: 4065, column: 10, scope: !5396)
!5398 = !DILocation(line: 4065, column: 20, scope: !5396)
!5399 = !DILocation(line: 4066, column: 5, scope: !5396)
!5400 = !DILocation(line: 4001, column: 10, scope: !5289)
!5401 = !DILocation(line: 4001, column: 27, scope: !5289)
!5402 = !DILocation(line: 4074, column: 14, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4074, column: 7)
!5404 = !DILocation(line: 4074, column: 9, scope: !5403)
!5405 = !DILocation(line: 4074, column: 7, scope: !5289)
!5406 = !DILocation(line: 4076, column: 17, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 4076, column: 11)
!5408 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 4075, column: 5)
!5409 = !DILocation(line: 4076, column: 11, scope: !5408)
!5410 = !DILocation(line: 4077, column: 13, scope: !5407)
!5411 = !DILocation(line: 4077, column: 2, scope: !5407)
!5412 = !DILocation(line: 4079, column: 13, scope: !5407)
!5413 = !DILocation(line: 0, scope: !5407)
!5414 = !DILocation(line: 4080, column: 22, scope: !5408)
!5415 = !DILocation(line: 4081, column: 5, scope: !5408)
!5416 = !DILocation(line: 4085, column: 3, scope: !5289)
!5417 = !DILocation(line: 4089, column: 12, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4089, column: 7)
!5419 = !DILocation(line: 4089, column: 27, scope: !5418)
!5420 = !DILocation(line: 4089, column: 7, scope: !5289)
!5421 = !DILocation(line: 4094, column: 12, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4094, column: 7)
!5423 = !DILocation(line: 4094, column: 18, scope: !5422)
!5424 = !DILocation(line: 4094, column: 7, scope: !5289)
!5425 = !DILocation(line: 4114, column: 16, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 4114, column: 11)
!5427 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 4095, column: 5)
!5428 = !DILocation(line: 4114, column: 11, scope: !5426)
!5429 = !DILocation(line: 4114, column: 11, scope: !5427)
!5430 = !DILocation(line: 4115, column: 30, scope: !5426)
!5431 = !DILocation(line: 4115, column: 2, scope: !5426)
!5432 = !DILocation(line: 4118, column: 6, scope: !5427)
!5433 = !DILocation(line: 4119, column: 6, scope: !5427)
!5434 = !DILocation(line: 4119, column: 9, scope: !5427)
!5435 = !DILocation(line: 4119, column: 46, scope: !5427)
!5436 = !DILocation(line: 4119, column: 38, scope: !5427)
!5437 = !DILocation(line: 4118, column: 5, scope: !5427)
!5438 = !DILocation(line: 4120, column: 23, scope: !5427)
!5439 = !DILocation(line: 4117, column: 20, scope: !5427)
!5440 = !DILocation(line: 4117, column: 18, scope: !5427)
!5441 = !DILocation(line: 4126, column: 16, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 4126, column: 11)
!5443 = !DILocation(line: 4126, column: 24, scope: !5442)
!5444 = !DILocation(line: 4126, column: 21, scope: !5442)
!5445 = !DILocation(line: 4126, column: 11, scope: !5427)
!5446 = !DILocation(line: 4127, column: 35, scope: !5442)
!5447 = !DILocation(line: 4127, column: 41, scope: !5442)
!5448 = !DILocation(line: 4128, column: 14, scope: !5442)
!5449 = !DILocation(line: 4128, column: 26, scope: !5442)
!5450 = !DILocation(line: 4127, column: 15, scope: !5442)
!5451 = !DILocation(line: 4127, column: 13, scope: !5442)
!5452 = !DILocation(line: 4127, column: 2, scope: !5442)
!5453 = !DILocation(line: 4130, column: 16, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 4130, column: 11)
!5455 = !DILocation(line: 4130, column: 11, scope: !5454)
!5456 = !DILocation(line: 4130, column: 11, scope: !5427)
!5457 = !DILocation(line: 4131, column: 30, scope: !5454)
!5458 = !DILocation(line: 4131, column: 2, scope: !5454)
!5459 = !DILocation(line: 4135, column: 14, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4135, column: 7)
!5461 = !DILocation(line: 4136, column: 7, scope: !5460)
!5462 = !DILocation(line: 4136, column: 10, scope: !5460)
!5463 = !DILocation(line: 4137, column: 7, scope: !5460)
!5464 = !DILocation(line: 4137, column: 48, scope: !5460)
!5465 = !DILocation(line: 4138, column: 30, scope: !5460)
!5466 = !DILocation(line: 4137, column: 10, scope: !5460)
!5467 = !DILocation(line: 4135, column: 7, scope: !5289)
!5468 = !DILocation(line: 4143, column: 13, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4143, column: 7)
!5470 = !DILocation(line: 4143, column: 7, scope: !5289)
!5471 = !DILocation(line: 4144, column: 5, scope: !5469)
!5472 = !DILocation(line: 4146, column: 12, scope: !5323)
!5473 = !DILocation(line: 4146, column: 26, scope: !5323)
!5474 = !DILocation(line: 4146, column: 18, scope: !5323)
!5475 = !DILocation(line: 4146, column: 7, scope: !5289)
!5476 = !DILocation(line: 4149, column: 17, scope: !5322)
!5477 = !DILocation(line: 4149, column: 22, scope: !5322)
!5478 = !DILocation(line: 4149, column: 12, scope: !5323)
!5479 = !DILocation(line: 4181, column: 32, scope: !5321)
!5480 = !DILocation(line: 0, scope: !5321)
!5481 = !DILocation(line: 4194, column: 46, scope: !5321)
!5482 = !DILocation(line: 4196, column: 9, scope: !5321)
!5483 = !DILocation(line: 4197, column: 9, scope: !5321)
!5484 = !DILocation(line: 4194, column: 7, scope: !5321)
!5485 = !DILocation(line: 4201, column: 19, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 4201, column: 11)
!5487 = !DILocation(line: 4201, column: 11, scope: !5321)
!5488 = !DILocation(line: 4202, column: 20, scope: !5486)
!5489 = !DILocation(line: 4202, column: 13, scope: !5486)
!5490 = !DILocation(line: 4202, column: 2, scope: !5486)
!5491 = !DILocation(line: 4219, column: 28, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 4219, column: 11)
!5493 = !DILocation(line: 4219, column: 32, scope: !5492)
!5494 = !DILocation(line: 4219, column: 11, scope: !5326)
!5495 = !DILocation(line: 0, scope: !5326)
!5496 = !DILocation(line: 4222, column: 15, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 4220, column: 2)
!5498 = !DILocation(line: 4228, column: 31, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 4225, column: 2)
!5500 = !DILocation(line: 4229, column: 28, scope: !5499)
!5501 = !DILocation(line: 4229, column: 9, scope: !5499)
!5502 = !DILocation(line: 4229, column: 7, scope: !5499)
!5503 = !DILocation(line: 4228, column: 13, scope: !5499)
!5504 = !DILocation(line: 4231, column: 43, scope: !5499)
!5505 = !DILocation(line: 4231, column: 28, scope: !5499)
!5506 = !DILocation(line: 4232, column: 17, scope: !5499)
!5507 = !DILocation(line: 4231, column: 15, scope: !5499)
!5508 = !DILocation(line: 0, scope: !5492)
!5509 = !DILocation(line: 4236, column: 32, scope: !5326)
!5510 = !DILocation(line: 4251, column: 33, scope: !5331)
!5511 = !DILocation(line: 4251, column: 36, scope: !5331)
!5512 = !DILocation(line: 4251, column: 11, scope: !5326)
!5513 = !DILocation(line: 0, scope: !5330)
!5514 = !DILocation(line: 4258, column: 8, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 4258, column: 8)
!5516 = !DILocation(line: 4258, column: 34, scope: !5515)
!5517 = !DILocation(line: 4258, column: 20, scope: !5515)
!5518 = !DILocation(line: 4259, column: 8, scope: !5515)
!5519 = !DILocation(line: 4259, column: 12, scope: !5515)
!5520 = !DILocation(line: 4259, column: 35, scope: !5515)
!5521 = !DILocation(line: 4260, column: 5, scope: !5515)
!5522 = !DILocation(line: 4260, column: 8, scope: !5515)
!5523 = !DILocation(line: 4260, column: 30, scope: !5515)
!5524 = !DILocation(line: 4262, column: 5, scope: !5515)
!5525 = !DILocation(line: 4262, column: 8, scope: !5515)
!5526 = !DILocation(line: 4258, column: 8, scope: !5330)
!5527 = !DILocation(line: 4264, column: 12, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 4263, column: 6)
!5529 = !DILocation(line: 4265, column: 7, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 4264, column: 12)
!5531 = !DILocation(line: 4265, column: 3, scope: !5530)
!5532 = !DILocation(line: 4268, column: 8, scope: !5528)
!5533 = !DILocation(line: 4272, column: 31, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 4272, column: 12)
!5535 = !DILocation(line: 4272, column: 40, scope: !5534)
!5536 = !DILocation(line: 4272, column: 12, scope: !5528)
!5537 = !DILocation(line: 4274, column: 43, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 4274, column: 9)
!5539 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 4273, column: 3)
!5540 = !DILocation(line: 4274, column: 41, scope: !5538)
!5541 = !DILocation(line: 4274, column: 37, scope: !5538)
!5542 = !DILocation(line: 4274, column: 9, scope: !5539)
!5543 = !DILocation(line: 4276, column: 3, scope: !5539)
!5544 = !DILocation(line: 4277, column: 45, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 4277, column: 17)
!5546 = !DILocation(line: 4277, column: 17, scope: !5534)
!5547 = !DILocation(line: 4283, column: 26, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 4282, column: 9)
!5549 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 4278, column: 3)
!5550 = !DILocation(line: 4283, column: 7, scope: !5548)
!5551 = !DILocation(line: 4282, column: 11, scope: !5548)
!5552 = !DILocation(line: 4282, column: 9, scope: !5549)
!5553 = !DILocation(line: 4285, column: 3, scope: !5549)
!5554 = !DILocation(line: 4293, column: 26, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 4293, column: 9)
!5556 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 4287, column: 3)
!5557 = !DILocation(line: 4293, column: 38, scope: !5555)
!5558 = !DILocation(line: 4293, column: 35, scope: !5555)
!5559 = !DILocation(line: 4293, column: 9, scope: !5556)
!5560 = !DILocation(line: 4299, column: 28, scope: !5326)
!5561 = !DILocation(line: 4299, column: 40, scope: !5326)
!5562 = !DILocation(line: 4299, column: 46, scope: !5326)
!5563 = !DILocation(line: 4301, column: 9, scope: !5326)
!5564 = !DILocation(line: 4302, column: 9, scope: !5326)
!5565 = !DILocation(line: 4299, column: 7, scope: !5326)
!5566 = !DILocation(line: 4312, column: 19, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 4312, column: 11)
!5568 = !DILocation(line: 4312, column: 11, scope: !5326)
!5569 = !DILocation(line: 4313, column: 20, scope: !5567)
!5570 = !DILocation(line: 4313, column: 13, scope: !5567)
!5571 = !DILocation(line: 4313, column: 2, scope: !5567)
!5572 = !DILocation(line: 4139, column: 21, scope: !5460)
!5573 = !DILocation(line: 4316, column: 12, scope: !5335)
!5574 = !DILocation(line: 4316, column: 7, scope: !5335)
!5575 = !DILocation(line: 4316, column: 16, scope: !5335)
!5576 = !DILocation(line: 4316, column: 19, scope: !5335)
!5577 = !DILocation(line: 4316, column: 39, scope: !5335)
!5578 = !DILocation(line: 4316, column: 7, scope: !5289)
!5579 = !DILocation(line: 4318, column: 19, scope: !5334)
!5580 = !DILocation(line: 0, scope: !5334)
!5581 = !DILocation(line: 4320, column: 47, scope: !5334)
!5582 = !DILocation(line: 4321, column: 11, scope: !5334)
!5583 = !DILocation(line: 4320, column: 4, scope: !5334)
!5584 = !DILocation(line: 4319, column: 12, scope: !5334)
!5585 = !DILocation(line: 4320, column: 2, scope: !5334)
!5586 = !DILocation(line: 4322, column: 5, scope: !5334)
!5587 = !DILocation(line: 4325, column: 7, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 4325, column: 7)
!5589 = !DILocation(line: 4325, column: 32, scope: !5588)
!5590 = !DILocation(line: 4326, column: 10, scope: !5588)
!5591 = !DILocation(line: 4326, column: 7, scope: !5588)
!5592 = !DILocation(line: 4326, column: 46, scope: !5588)
!5593 = !DILocation(line: 4326, column: 41, scope: !5588)
!5594 = !DILocation(line: 4325, column: 7, scope: !5289)
!5595 = !DILocation(line: 4327, column: 5, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 4327, column: 5)
!5597 = !DILocation(line: 0, scope: !5596)
!5598 = !DILocation(line: 4327, column: 29, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 4327, column: 5)
!5600 = !DILocation(line: 4328, column: 7, scope: !5599)
!5601 = !DILocation(line: 4328, column: 26, scope: !5599)
!5602 = !DILocation(line: 4327, column: 45, scope: !5599)
!5603 = !DILocation(line: 4327, column: 5, scope: !5599)
!5604 = distinct !{!5604, !5595, !5605}
!5605 = !DILocation(line: 4328, column: 28, scope: !5596)
!5606 = !DILocation(line: 4332, column: 3, scope: !5289)
!5607 = !DILocation(line: 4337, column: 3, scope: !5289)
!5608 = !DILocation(line: 4338, column: 3, scope: !5289)
!5609 = !DILocation(line: 4339, column: 3, scope: !5289)
!5610 = !DILocation(line: 4341, column: 3, scope: !5289)
!5611 = !DILocation(line: 4342, column: 1, scope: !5289)
!5612 = distinct !DISubprogram(name: "check_sibcall_argument_overlap", scope: !3, file: !3, line: 1826, type: !5613, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5615)
!5613 = !DISubroutineType(types: !5614)
!5614 = !{!32, !6, !2075, !32}
!5615 = !{!5616, !5617, !5618, !5619, !5620}
!5616 = !DILocalVariable(name: "insn", arg: 1, scope: !5612, file: !3, line: 1826, type: !6)
!5617 = !DILocalVariable(name: "arg", arg: 2, scope: !5612, file: !3, line: 1826, type: !2075)
!5618 = !DILocalVariable(name: "mark_stored_args_map", arg: 3, scope: !5612, file: !3, line: 1826, type: !32)
!5619 = !DILocalVariable(name: "low", scope: !5612, file: !3, line: 1828, type: !32)
!5620 = !DILocalVariable(name: "high", scope: !5612, file: !3, line: 1828, type: !32)
!5621 = !DILocation(line: 0, scope: !5612)
!5622 = !DILocation(line: 1830, column: 12, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 1830, column: 7)
!5624 = !DILocation(line: 1830, column: 7, scope: !5612)
!5625 = !DILocation(line: 1831, column: 12, scope: !5623)
!5626 = !DILocation(line: 1831, column: 5, scope: !5623)
!5627 = !DILocation(line: 1833, column: 12, scope: !5623)
!5628 = !DILocation(line: 0, scope: !5623)
!5629 = !DILocation(line: 1835, column: 3, scope: !5612)
!5630 = !DILocation(line: 1835, column: 3, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 1835, column: 3)
!5632 = !DILocation(line: 1836, column: 9, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1836, column: 9)
!5634 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 1835, column: 3)
!5635 = !DILocation(line: 1837, column: 2, scope: !5633)
!5636 = !DILocation(line: 1837, column: 39, scope: !5633)
!5637 = !DILocation(line: 1837, column: 5, scope: !5633)
!5638 = !DILocation(line: 1836, column: 9, scope: !5634)
!5639 = !DILocation(line: 1835, column: 23, scope: !5634)
!5640 = !DILocation(line: 1835, column: 3, scope: !5634)
!5641 = distinct !{!5641, !5630, !5642}
!5642 = !DILocation(line: 1838, column: 7, scope: !5631)
!5643 = !DILocation(line: 1840, column: 7, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 1840, column: 7)
!5645 = !DILocation(line: 1840, column: 7, scope: !5612)
!5646 = !DILocation(line: 1845, column: 37, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 1841, column: 5)
!5648 = !DILocation(line: 1845, column: 13, scope: !5647)
!5649 = !DILocation(line: 1848, column: 42, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1848, column: 7)
!5651 = !DILocation(line: 1848, column: 23, scope: !5650)
!5652 = !DILocation(line: 1848, column: 19, scope: !5650)
!5653 = !DILocation(line: 1848, column: 12, scope: !5650)
!5654 = !DILocation(line: 0, scope: !5647)
!5655 = !DILocation(line: 1848, column: 56, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1848, column: 7)
!5657 = !DILocation(line: 1848, column: 7, scope: !5650)
!5658 = !DILocation(line: 1849, column: 11, scope: !5656)
!5659 = !DILocation(line: 1849, column: 2, scope: !5656)
!5660 = !DILocation(line: 1848, column: 67, scope: !5656)
!5661 = !DILocation(line: 1848, column: 7, scope: !5656)
!5662 = distinct !{!5662, !5657, !5663}
!5663 = !DILocation(line: 1849, column: 31, scope: !5650)
!5664 = !DILocation(line: 1851, column: 15, scope: !5612)
!5665 = !DILocation(line: 1851, column: 3, scope: !5612)
!5666 = distinct !DISubprogram(name: "load_register_parameters", scope: !3, file: !3, line: 1583, type: !5667, scopeLine: 1586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5669)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{null, !2075, !32, !2105, !32, !32, !4380}
!5669 = !{!5670, !5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5682, !5685, !5686, !5687, !5688, !5694, !5697, !5698, !5699, !5700}
!5670 = !DILocalVariable(name: "args", arg: 1, scope: !5666, file: !3, line: 1583, type: !2075)
!5671 = !DILocalVariable(name: "num_actuals", arg: 2, scope: !5666, file: !3, line: 1583, type: !32)
!5672 = !DILocalVariable(name: "call_fusage", arg: 3, scope: !5666, file: !3, line: 1584, type: !2105)
!5673 = !DILocalVariable(name: "flags", arg: 4, scope: !5666, file: !3, line: 1584, type: !32)
!5674 = !DILocalVariable(name: "is_sibcall", arg: 5, scope: !5666, file: !3, line: 1584, type: !32)
!5675 = !DILocalVariable(name: "sibcall_failure", arg: 6, scope: !5666, file: !3, line: 1585, type: !4380)
!5676 = !DILocalVariable(name: "i", scope: !5666, file: !3, line: 1587, type: !32)
!5677 = !DILocalVariable(name: "j", scope: !5666, file: !3, line: 1587, type: !32)
!5678 = !DILocalVariable(name: "reg", scope: !5679, file: !3, line: 1591, type: !6)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1590, column: 5)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 1589, column: 3)
!5681 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 1589, column: 3)
!5682 = !DILocalVariable(name: "partial", scope: !5683, file: !3, line: 1595, type: !32)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 1594, column: 2)
!5684 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 1593, column: 11)
!5685 = !DILocalVariable(name: "nregs", scope: !5683, file: !3, line: 1596, type: !32)
!5686 = !DILocalVariable(name: "size", scope: !5683, file: !3, line: 1597, type: !32)
!5687 = !DILocalVariable(name: "before_arg", scope: !5683, file: !3, line: 1598, type: !6)
!5688 = !DILocalVariable(name: "mem", scope: !5689, file: !3, line: 1667, type: !6)
!5689 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 1666, column: 6)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 1665, column: 13)
!5691 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 1660, column: 13)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1629, column: 13)
!5693 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1622, column: 8)
!5694 = !DILocalVariable(name: "tem", scope: !5695, file: !3, line: 1684, type: !6)
!5695 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 1683, column: 3)
!5696 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 1676, column: 12)
!5697 = !DILocalVariable(name: "ri", scope: !5695, file: !3, line: 1685, type: !6)
!5698 = !DILocalVariable(name: "x", scope: !5695, file: !3, line: 1686, type: !6)
!5699 = !DILocalVariable(name: "shift", scope: !5695, file: !3, line: 1687, type: !32)
!5700 = !DILocalVariable(name: "dir", scope: !5695, file: !3, line: 1688, type: !883)
!5701 = !DILocation(line: 0, scope: !5666)
!5702 = !DILocation(line: 0, scope: !5679)
!5703 = !DILocation(line: 0, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 1670, column: 12)
!5705 = !DILocation(line: 1589, column: 8, scope: !5681)
!5706 = !DILocation(line: 0, scope: !5681)
!5707 = !DILocation(line: 1589, column: 17, scope: !5680)
!5708 = !DILocation(line: 1589, column: 3, scope: !5681)
!5709 = !DILocation(line: 1591, column: 18, scope: !5679)
!5710 = !DILocation(line: 1592, column: 14, scope: !5679)
!5711 = !DILocation(line: 1592, column: 38, scope: !5679)
!5712 = !DILocation(line: 1593, column: 11, scope: !5684)
!5713 = !DILocation(line: 1593, column: 11, scope: !5679)
!5714 = !DILocation(line: 1595, column: 26, scope: !5683)
!5715 = !DILocation(line: 0, scope: !5683)
!5716 = !DILocation(line: 1598, column: 21, scope: !5683)
!5717 = !DILocation(line: 1604, column: 8, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1604, column: 8)
!5719 = !DILocation(line: 1604, column: 23, scope: !5718)
!5720 = !DILocation(line: 1604, column: 8, scope: !5683)
!5721 = !DILocation(line: 1606, column: 13, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 1606, column: 13)
!5723 = !DILocation(line: 1606, column: 13, scope: !5718)
!5724 = !DILocation(line: 1608, column: 8, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 1607, column: 6)
!5726 = !DILocation(line: 1609, column: 24, scope: !5725)
!5727 = !DILocation(line: 1610, column: 6, scope: !5725)
!5728 = !DILocation(line: 1611, column: 13, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 1611, column: 13)
!5730 = !DILocation(line: 1611, column: 56, scope: !5729)
!5731 = !DILocation(line: 1611, column: 13, scope: !5722)
!5732 = !DILocation(line: 1613, column: 34, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1612, column: 6)
!5734 = !DILocation(line: 1613, column: 15, scope: !5733)
!5735 = !DILocation(line: 1614, column: 22, scope: !5733)
!5736 = !DILocation(line: 1614, column: 46, scope: !5733)
!5737 = !DILocation(line: 1615, column: 6, scope: !5733)
!5738 = !DILocation(line: 1617, column: 13, scope: !5729)
!5739 = !DILocation(line: 1597, column: 8, scope: !5683)
!5740 = !DILocation(line: 1622, column: 8, scope: !5693)
!5741 = !DILocation(line: 1622, column: 23, scope: !5693)
!5742 = !DILocation(line: 1622, column: 8, scope: !5683)
!5743 = !DILocation(line: 1623, column: 36, scope: !5693)
!5744 = !DILocation(line: 1623, column: 6, scope: !5693)
!5745 = !DILocation(line: 1629, column: 19, scope: !5692)
!5746 = !DILocation(line: 1629, column: 13, scope: !5693)
!5747 = !DILocation(line: 1631, column: 37, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 1630, column: 6)
!5749 = !DILocation(line: 1631, column: 8, scope: !5748)
!5750 = !DILocation(line: 1655, column: 6, scope: !5748)
!5751 = !DILocation(line: 1660, column: 21, scope: !5691)
!5752 = !DILocation(line: 1660, column: 36, scope: !5691)
!5753 = !DILocation(line: 1660, column: 13, scope: !5692)
!5754 = !DILocation(line: 0, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1661, column: 6)
!5756 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 1661, column: 6)
!5757 = !DILocation(line: 1661, column: 6, scope: !5756)
!5758 = !DILocation(line: 1661, column: 30, scope: !5755)
!5759 = !DILocation(line: 1661, column: 20, scope: !5755)
!5760 = !DILocation(line: 1662, column: 37, scope: !5755)
!5761 = !DILocation(line: 1662, column: 48, scope: !5755)
!5762 = !DILocation(line: 1662, column: 60, scope: !5755)
!5763 = !DILocation(line: 1662, column: 24, scope: !5755)
!5764 = !DILocation(line: 1663, column: 18, scope: !5755)
!5765 = !DILocation(line: 1663, column: 10, scope: !5755)
!5766 = !DILocation(line: 1662, column: 8, scope: !5755)
!5767 = !DILocation(line: 1661, column: 47, scope: !5755)
!5768 = !DILocation(line: 1661, column: 6, scope: !5755)
!5769 = distinct !{!5769, !5757, !5770}
!5770 = !DILocation(line: 1663, column: 33, scope: !5756)
!5771 = !DILocation(line: 1665, column: 21, scope: !5690)
!5772 = !DILocation(line: 1665, column: 26, scope: !5690)
!5773 = !DILocation(line: 1665, column: 37, scope: !5690)
!5774 = !DILocation(line: 1665, column: 29, scope: !5690)
!5775 = !DILocation(line: 1665, column: 13, scope: !5691)
!5776 = !DILocation(line: 1667, column: 40, scope: !5689)
!5777 = !DILocation(line: 1667, column: 18, scope: !5689)
!5778 = !DILocation(line: 0, scope: !5689)
!5779 = !DILocation(line: 1671, column: 5, scope: !5704)
!5780 = !DILocation(line: 1671, column: 46, scope: !5704)
!5781 = !DILocation(line: 1672, column: 11, scope: !5704)
!5782 = !DILocation(line: 1671, column: 8, scope: !5704)
!5783 = !DILocation(line: 1670, column: 12, scope: !5689)
!5784 = !DILocation(line: 1673, column: 20, scope: !5704)
!5785 = !DILocation(line: 1673, column: 3, scope: !5704)
!5786 = !DILocation(line: 1699, column: 22, scope: !5696)
!5787 = !DILocation(line: 1699, column: 55, scope: !5696)
!5788 = !DILocation(line: 1699, column: 3, scope: !5696)
!5789 = !DILocation(line: 1700, column: 6, scope: !5689)
!5790 = !DILocation(line: 1705, column: 8, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1705, column: 8)
!5792 = !DILocation(line: 1706, column: 8, scope: !5791)
!5793 = !DILocation(line: 1706, column: 56, scope: !5791)
!5794 = !DILocation(line: 1706, column: 11, scope: !5791)
!5795 = !DILocation(line: 1705, column: 8, scope: !5683)
!5796 = !DILocation(line: 1707, column: 23, scope: !5791)
!5797 = !DILocation(line: 1707, column: 6, scope: !5791)
!5798 = !DILocation(line: 1711, column: 8, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1711, column: 8)
!5800 = !DILocation(line: 1711, column: 23, scope: !5799)
!5801 = !DILocation(line: 1711, column: 8, scope: !5683)
!5802 = !DILocation(line: 1712, column: 6, scope: !5799)
!5803 = !DILocation(line: 1713, column: 19, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 1713, column: 13)
!5805 = !DILocation(line: 1713, column: 13, scope: !5799)
!5806 = !DILocation(line: 1714, column: 6, scope: !5804)
!5807 = !DILocation(line: 1715, column: 19, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 1715, column: 13)
!5809 = !DILocation(line: 1715, column: 13, scope: !5804)
!5810 = !DILocation(line: 1716, column: 29, scope: !5808)
!5811 = !DILocation(line: 1716, column: 6, scope: !5808)
!5812 = !DILocation(line: 1589, column: 33, scope: !5680)
!5813 = !DILocation(line: 1589, column: 3, scope: !5680)
!5814 = distinct !{!5814, !5708, !5815}
!5815 = !DILocation(line: 1718, column: 5, scope: !5681)
!5816 = !DILocation(line: 1719, column: 1, scope: !5666)
!5817 = distinct !DISubprogram(name: "emit_call_1", scope: !3, file: !3, line: 246, type: !5818, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5820)
!5818 = !DISubroutineType(types: !5819)
!5819 = !{null, !6, !258, !258, !258, !227, !227, !227, !6, !6, !32, !6, !32, !4379}
!5820 = !{!5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836, !5837, !5838, !5841}
!5821 = !DILocalVariable(name: "funexp", arg: 1, scope: !5817, file: !3, line: 246, type: !6)
!5822 = !DILocalVariable(name: "fntree", arg: 2, scope: !5817, file: !3, line: 246, type: !258)
!5823 = !DILocalVariable(name: "fndecl", arg: 3, scope: !5817, file: !3, line: 246, type: !258)
!5824 = !DILocalVariable(name: "funtype", arg: 4, scope: !5817, file: !3, line: 247, type: !258)
!5825 = !DILocalVariable(name: "stack_size", arg: 5, scope: !5817, file: !3, line: 248, type: !227)
!5826 = !DILocalVariable(name: "rounded_stack_size", arg: 6, scope: !5817, file: !3, line: 249, type: !227)
!5827 = !DILocalVariable(name: "struct_value_size", arg: 7, scope: !5817, file: !3, line: 250, type: !227)
!5828 = !DILocalVariable(name: "next_arg_reg", arg: 8, scope: !5817, file: !3, line: 251, type: !6)
!5829 = !DILocalVariable(name: "valreg", arg: 9, scope: !5817, file: !3, line: 251, type: !6)
!5830 = !DILocalVariable(name: "old_inhibit_defer_pop", arg: 10, scope: !5817, file: !3, line: 252, type: !32)
!5831 = !DILocalVariable(name: "call_fusage", arg: 11, scope: !5817, file: !3, line: 252, type: !6)
!5832 = !DILocalVariable(name: "ecf_flags", arg: 12, scope: !5817, file: !3, line: 252, type: !32)
!5833 = !DILocalVariable(name: "args_so_far", arg: 13, scope: !5817, file: !3, line: 253, type: !4379)
!5834 = !DILocalVariable(name: "rounded_stack_size_rtx", scope: !5817, file: !3, line: 255, type: !6)
!5835 = !DILocalVariable(name: "call_insn", scope: !5817, file: !3, line: 256, type: !6)
!5836 = !DILocalVariable(name: "already_popped", scope: !5817, file: !3, line: 257, type: !32)
!5837 = !DILocalVariable(name: "n_popped", scope: !5817, file: !3, line: 258, type: !227)
!5838 = !DILocalVariable(name: "n_pop", scope: !5839, file: !3, line: 308, type: !6)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 307, column: 5)
!5840 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 302, column: 7)
!5841 = !DILocalVariable(name: "pat", scope: !5839, file: !3, line: 309, type: !6)
!5842 = !DILocation(line: 0, scope: !5817)
!5843 = !DILocation(line: 255, column: 32, scope: !5817)
!5844 = !DILocation(line: 258, column: 28, scope: !5817)
!5845 = !DILocation(line: 267, column: 7, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 267, column: 7)
!5847 = !DILocation(line: 267, column: 25, scope: !5846)
!5848 = !DILocation(line: 267, column: 7, scope: !5817)
!5849 = !DILocation(line: 268, column: 14, scope: !5846)
!5850 = !DILocation(line: 268, column: 5, scope: !5846)
!5851 = !DILocation(line: 303, column: 19, scope: !5840)
!5852 = !DILocation(line: 302, column: 7, scope: !5817)
!5853 = !DILocation(line: 308, column: 19, scope: !5839)
!5854 = !DILocation(line: 0, scope: !5839)
!5855 = !DILocation(line: 314, column: 11, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 314, column: 11)
!5857 = !DILocation(line: 0, scope: !5856)
!5858 = !DILocation(line: 314, column: 11, scope: !5839)
!5859 = !DILocation(line: 315, column: 8, scope: !5856)
!5860 = !DILocation(line: 315, column: 2, scope: !5856)
!5861 = !DILocation(line: 319, column: 8, scope: !5856)
!5862 = !DILocation(line: 322, column: 7, scope: !5839)
!5863 = !DILocation(line: 324, column: 5, scope: !5839)
!5864 = !DILocation(line: 329, column: 18, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 329, column: 7)
!5866 = !DILocation(line: 0, scope: !5865)
!5867 = !DILocation(line: 329, column: 7, scope: !5840)
!5868 = !DILocation(line: 332, column: 11, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 331, column: 5)
!5870 = !DILocation(line: 333, column: 18, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 332, column: 11)
!5872 = !DILocation(line: 333, column: 2, scope: !5871)
!5873 = !DILocation(line: 338, column: 18, scope: !5871)
!5874 = !DILocation(line: 338, column: 2, scope: !5871)
!5875 = !DILocation(line: 348, column: 11, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 347, column: 5)
!5877 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 346, column: 7)
!5878 = !DILocation(line: 349, column: 18, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 348, column: 11)
!5880 = !DILocation(line: 349, column: 2, scope: !5879)
!5881 = !DILocation(line: 354, column: 18, scope: !5879)
!5882 = !DILocation(line: 354, column: 2, scope: !5879)
!5883 = !DILocation(line: 363, column: 15, scope: !5817)
!5884 = !DILocation(line: 366, column: 3, scope: !5817)
!5885 = !DILocation(line: 369, column: 17, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 369, column: 7)
!5887 = !DILocation(line: 369, column: 7, scope: !5817)
!5888 = !DILocation(line: 370, column: 5, scope: !5886)
!5889 = !DILocation(line: 370, column: 34, scope: !5886)
!5890 = !DILocation(line: 373, column: 17, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 373, column: 7)
!5892 = !DILocation(line: 373, column: 7, scope: !5817)
!5893 = !DILocation(line: 374, column: 5, scope: !5891)
!5894 = !DILocation(line: 374, column: 33, scope: !5891)
!5895 = !DILocation(line: 377, column: 17, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 377, column: 7)
!5897 = !DILocation(line: 377, column: 7, scope: !5817)
!5898 = !DILocation(line: 378, column: 5, scope: !5896)
!5899 = !DILocation(line: 378, column: 50, scope: !5896)
!5900 = !DILocation(line: 381, column: 3, scope: !5817)
!5901 = !DILocation(line: 383, column: 17, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 383, column: 7)
!5903 = !DILocation(line: 383, column: 7, scope: !5817)
!5904 = !DILocation(line: 384, column: 44, scope: !5902)
!5905 = !DILocation(line: 384, column: 5, scope: !5902)
!5906 = !DILocation(line: 386, column: 17, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 386, column: 7)
!5908 = !DILocation(line: 386, column: 7, scope: !5817)
!5909 = !DILocation(line: 388, column: 44, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 387, column: 5)
!5911 = !DILocation(line: 388, column: 7, scope: !5910)
!5912 = !DILocation(line: 389, column: 7, scope: !5910)
!5913 = !DILocation(line: 389, column: 13, scope: !5910)
!5914 = !DILocation(line: 389, column: 26, scope: !5910)
!5915 = !DILocation(line: 390, column: 5, scope: !5910)
!5916 = !DILocation(line: 392, column: 3, scope: !5817)
!5917 = !DILocation(line: 392, column: 30, scope: !5817)
!5918 = !DILocation(line: 395, column: 7, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 395, column: 7)
!5920 = !DILocation(line: 395, column: 39, scope: !5919)
!5921 = !DILocation(line: 395, column: 29, scope: !5919)
!5922 = !DILocation(line: 396, column: 7, scope: !5919)
!5923 = !DILocation(line: 396, column: 20, scope: !5919)
!5924 = !DILocation(line: 396, column: 41, scope: !5919)
!5925 = !DILocation(line: 397, column: 41, scope: !5919)
!5926 = !DILocation(line: 396, column: 5, scope: !5919)
!5927 = !DILocation(line: 401, column: 21, scope: !5817)
!5928 = !DILocation(line: 403, column: 7, scope: !5817)
!5929 = !DILocation(line: 405, column: 12, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 405, column: 11)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 404, column: 5)
!5932 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 403, column: 7)
!5933 = !DILocation(line: 405, column: 11, scope: !5931)
!5934 = !DILocation(line: 407, column: 6, scope: !5930)
!5935 = !DILocation(line: 407, column: 4, scope: !5930)
!5936 = !DILocation(line: 406, column: 2, scope: !5930)
!5937 = !DILocation(line: 410, column: 26, scope: !5931)
!5938 = !DILocation(line: 411, column: 32, scope: !5931)
!5939 = !DILocation(line: 412, column: 27, scope: !5931)
!5940 = !DILocation(line: 416, column: 25, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 415, column: 11)
!5942 = !DILocation(line: 417, column: 5, scope: !5931)
!5943 = !DILocation(line: 419, column: 8, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 419, column: 7)
!5945 = !DILocation(line: 419, column: 7, scope: !5817)
!5946 = !DILocation(line: 428, column: 30, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 428, column: 11)
!5948 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 420, column: 5)
!5949 = !DILocation(line: 428, column: 11, scope: !5948)
!5950 = !DILocation(line: 430, column: 8, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 429, column: 2)
!5952 = !DILocation(line: 432, column: 26, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 430, column: 8)
!5954 = !DILocation(line: 432, column: 6, scope: !5953)
!5955 = !DILocation(line: 433, column: 13, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 433, column: 13)
!5957 = !DILocation(line: 433, column: 31, scope: !5956)
!5958 = !DILocation(line: 434, column: 24, scope: !5956)
!5959 = !DILocation(line: 433, column: 28, scope: !5956)
!5960 = !DILocation(line: 435, column: 27, scope: !5956)
!5961 = !DILocation(line: 435, column: 6, scope: !5956)
!5962 = !DILocation(line: 437, column: 6, scope: !5956)
!5963 = !DILocation(line: 451, column: 12, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 451, column: 12)
!5965 = !DILocation(line: 451, column: 12, scope: !5944)
!5966 = !DILocation(line: 452, column: 24, scope: !5964)
!5967 = !DILocation(line: 452, column: 5, scope: !5964)
!5968 = !DILocation(line: 453, column: 1, scope: !5817)
!5969 = distinct !DISubprogram(name: "avoid_likely_spilled_reg", scope: !3, file: !3, line: 1881, type: !5970, scopeLine: 1882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5972)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!6, !6}
!5972 = !{!5973, !5974}
!5973 = !DILocalVariable(name: "x", arg: 1, scope: !5969, file: !3, line: 1881, type: !6)
!5974 = !DILocalVariable(name: "new_rtx", scope: !5969, file: !3, line: 1883, type: !6)
!5975 = !DILocation(line: 0, scope: !5969)
!5976 = !DILocation(line: 1885, column: 7, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 1885, column: 7)
!5978 = !DILocation(line: 1886, column: 7, scope: !5977)
!5979 = !DILocation(line: 1886, column: 10, scope: !5977)
!5980 = !DILocation(line: 1887, column: 7, scope: !5977)
!5981 = !DILocation(line: 1887, column: 10, scope: !5977)
!5982 = !DILocation(line: 1885, column: 7, scope: !5969)
!5983 = !DILocation(line: 1893, column: 27, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 1888, column: 5)
!5985 = !DILocation(line: 1894, column: 30, scope: !5984)
!5986 = !DILocation(line: 1894, column: 17, scope: !5984)
!5987 = !DILocation(line: 1895, column: 27, scope: !5984)
!5988 = !DILocation(line: 1896, column: 7, scope: !5984)
!5989 = !DILocation(line: 1897, column: 7, scope: !5984)
!5990 = !DILocation(line: 1900, column: 1, scope: !5969)
!5991 = distinct !DISubprogram(name: "restore_fixed_argument_area", scope: !3, file: !3, line: 794, type: !5992, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !5994)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{null, !6, !6, !32, !32}
!5994 = !{!5995, !5996, !5997, !5998, !5999, !6000, !6001}
!5995 = !DILocalVariable(name: "save_area", arg: 1, scope: !5991, file: !3, line: 794, type: !6)
!5996 = !DILocalVariable(name: "argblock", arg: 2, scope: !5991, file: !3, line: 794, type: !6)
!5997 = !DILocalVariable(name: "high_to_save", arg: 3, scope: !5991, file: !3, line: 794, type: !32)
!5998 = !DILocalVariable(name: "low_to_save", arg: 4, scope: !5991, file: !3, line: 794, type: !32)
!5999 = !DILocalVariable(name: "save_mode", scope: !5991, file: !3, line: 796, type: !50)
!6000 = !DILocalVariable(name: "delta", scope: !5991, file: !3, line: 797, type: !32)
!6001 = !DILocalVariable(name: "stack_area", scope: !5991, file: !3, line: 798, type: !6)
!6002 = !DILocation(line: 0, scope: !5991)
!6003 = !DILocation(line: 796, column: 33, scope: !5991)
!6004 = !DILocation(line: 806, column: 8, scope: !5991)
!6005 = !DILocation(line: 805, column: 16, scope: !5991)
!6006 = !DILocation(line: 808, column: 3, scope: !5991)
!6007 = !DILocation(line: 810, column: 17, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 810, column: 7)
!6009 = !DILocation(line: 810, column: 7, scope: !5991)
!6010 = !DILocation(line: 811, column: 5, scope: !6008)
!6011 = !DILocation(line: 813, column: 34, scope: !6008)
!6012 = !DILocation(line: 814, column: 8, scope: !6008)
!6013 = !DILocation(line: 813, column: 5, scope: !6008)
!6014 = !DILocation(line: 816, column: 1, scope: !5991)
!6015 = distinct !DISubprogram(name: "fixup_tail_calls", scope: !3, file: !3, line: 3189, type: !6016, scopeLine: 3190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6018)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{null}
!6018 = !{!6019, !6020}
!6019 = !DILocalVariable(name: "insn", scope: !6015, file: !3, line: 3191, type: !6)
!6020 = !DILocalVariable(name: "note", scope: !6021, file: !3, line: 3195, type: !6)
!6021 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 3194, column: 5)
!6022 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 3193, column: 3)
!6023 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 3193, column: 3)
!6024 = !DILocation(line: 3193, column: 15, scope: !6023)
!6025 = !DILocation(line: 0, scope: !6015)
!6026 = !DILocation(line: 3193, column: 8, scope: !6023)
!6027 = !DILocation(line: 0, scope: !6023)
!6028 = !DILocation(line: 3193, column: 3, scope: !6023)
!6029 = !DILocation(line: 3199, column: 11, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 3199, column: 11)
!6031 = !DILocation(line: 3200, column: 4, scope: !6030)
!6032 = !DILocation(line: 3200, column: 7, scope: !6030)
!6033 = !DILocation(line: 3200, column: 24, scope: !6030)
!6034 = !DILocation(line: 3199, column: 11, scope: !6021)
!6035 = !DILocation(line: 3203, column: 14, scope: !6021)
!6036 = !DILocation(line: 0, scope: !6021)
!6037 = !DILocation(line: 3204, column: 11, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 3204, column: 11)
!6039 = !DILocation(line: 3204, column: 11, scope: !6021)
!6040 = !DILocation(line: 3205, column: 2, scope: !6038)
!6041 = !DILocation(line: 3206, column: 14, scope: !6021)
!6042 = !DILocation(line: 3207, column: 7, scope: !6021)
!6043 = !DILocation(line: 3193, column: 42, scope: !6022)
!6044 = !DILocation(line: 3193, column: 3, scope: !6022)
!6045 = distinct !{!6045, !6028, !6046}
!6046 = !DILocation(line: 3208, column: 5, scope: !6023)
!6047 = !DILocation(line: 3209, column: 1, scope: !6015)
!6048 = distinct !DISubprogram(name: "emit_library_call", scope: !3, file: !3, line: 3940, type: !6049, scopeLine: 3942, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6051)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{null, !6, !1968, !50, !32, null}
!6051 = !{!6052, !6053, !6054, !6055, !6056}
!6052 = !DILocalVariable(name: "orgfun", arg: 1, scope: !6048, file: !3, line: 3940, type: !6)
!6053 = !DILocalVariable(name: "fn_type", arg: 2, scope: !6048, file: !3, line: 3940, type: !1968)
!6054 = !DILocalVariable(name: "outmode", arg: 3, scope: !6048, file: !3, line: 3941, type: !50)
!6055 = !DILocalVariable(name: "nargs", arg: 4, scope: !6048, file: !3, line: 3941, type: !32)
!6056 = !DILocalVariable(name: "p", scope: !6048, file: !3, line: 3943, type: !6057)
!6057 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !6058, line: 52, baseType: !6059)
!6058 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!6059 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6060, line: 32, baseType: !6061)
!6060 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stdarg.h", directory: "")
!6061 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 3943, baseType: !6062)
!6062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 192, elements: !47)
!6063 = !DILocation(line: 0, scope: !6048)
!6064 = !DILocation(line: 3943, column: 3, scope: !6048)
!6065 = !DILocation(line: 3943, column: 11, scope: !6048)
!6066 = !DILocation(line: 3945, column: 3, scope: !6048)
!6067 = !DILocation(line: 3946, column: 76, scope: !6048)
!6068 = !DILocation(line: 3946, column: 3, scope: !6048)
!6069 = !DILocation(line: 3947, column: 3, scope: !6048)
!6070 = !DILocation(line: 3948, column: 1, scope: !6048)
!6071 = !DILocation(line: 0, scope: !2111)
!6072 = !DILocation(line: 3267, column: 3, scope: !2111)
!6073 = !DILocation(line: 3269, column: 3, scope: !2111)
!6074 = !DILocation(line: 3279, column: 3, scope: !2111)
!6075 = !DILocation(line: 3290, column: 31, scope: !2111)
!6076 = !DILocation(line: 3291, column: 3, scope: !2111)
!6077 = !DILocation(line: 3291, column: 7, scope: !2111)
!6078 = !DILocation(line: 3305, column: 3, scope: !2111)
!6079 = !DILocation(line: 3305, column: 7, scope: !2111)
!6080 = !DILocation(line: 3305, column: 24, scope: !2111)
!6081 = !DILocation(line: 3310, column: 36, scope: !2111)
!6082 = !DILocation(line: 3311, column: 35, scope: !2111)
!6083 = !DILocation(line: 3314, column: 36, scope: !2111)
!6084 = !DILocation(line: 3314, column: 22, scope: !2111)
!6085 = !DILocation(line: 3317, column: 26, scope: !2111)
!6086 = !DILocation(line: 3323, column: 3, scope: !2111)
!6087 = !DILocation(line: 3329, column: 7, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3324, column: 5)
!6089 = !DILocation(line: 3332, column: 7, scope: !6088)
!6090 = !DILocation(line: 3335, column: 7, scope: !6088)
!6091 = !DILocation(line: 3338, column: 7, scope: !6088)
!6092 = !DILocation(line: 3341, column: 7, scope: !6088)
!6093 = !DILocation(line: 3347, column: 13, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3347, column: 7)
!6095 = !DILocation(line: 3347, column: 40, scope: !6094)
!6096 = !DILocation(line: 3347, column: 38, scope: !6094)
!6097 = !DILocation(line: 3347, column: 7, scope: !2111)
!6098 = !DILocation(line: 3348, column: 36, scope: !6094)
!6099 = !DILocation(line: 3348, column: 5, scope: !6094)
!6100 = !DILocation(line: 3352, column: 15, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3352, column: 7)
!6102 = !DILocation(line: 3352, column: 7, scope: !2111)
!6103 = !DILocation(line: 3354, column: 31, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 3353, column: 5)
!6105 = !DILocation(line: 3354, column: 14, scope: !6104)
!6106 = !DILocation(line: 3355, column: 11, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 3355, column: 11)
!6108 = !DILocation(line: 3355, column: 11, scope: !6104)
!6109 = !DILocation(line: 3365, column: 24, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 3356, column: 2)
!6111 = !DILocation(line: 3366, column: 14, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 3366, column: 8)
!6113 = !DILocation(line: 3366, column: 19, scope: !6112)
!6114 = !DILocation(line: 3366, column: 22, scope: !6112)
!6115 = !DILocation(line: 3366, column: 8, scope: !6110)
!6116 = !DILocation(line: 3369, column: 18, scope: !6112)
!6117 = !DILocation(line: 0, scope: !6112)
!6118 = !DILocation(line: 3372, column: 10, scope: !6110)
!6119 = !DILocation(line: 3373, column: 2, scope: !6110)
!6120 = !DILocation(line: 3376, column: 12, scope: !6101)
!6121 = !DILocation(line: 0, scope: !6101)
!6122 = !DILocation(line: 3387, column: 12, scope: !2111)
!6123 = !DILocation(line: 3388, column: 11, scope: !2111)
!6124 = !DILocation(line: 3388, column: 34, scope: !2111)
!6125 = !DILocation(line: 3388, column: 3, scope: !2111)
!6126 = !DILocation(line: 3393, column: 3, scope: !2111)
!6127 = !DILocation(line: 3396, column: 13, scope: !2111)
!6128 = !DILocation(line: 3396, column: 22, scope: !2111)
!6129 = !DILocation(line: 3397, column: 13, scope: !2111)
!6130 = !DILocation(line: 3397, column: 17, scope: !2111)
!6131 = !DILocation(line: 3401, column: 3, scope: !2111)
!6132 = !DILocation(line: 3405, column: 7, scope: !2179)
!6133 = !DILocation(line: 3405, column: 33, scope: !2179)
!6134 = !DILocation(line: 3405, column: 17, scope: !2179)
!6135 = !DILocation(line: 3407, column: 18, scope: !2178)
!6136 = !DILocation(line: 0, scope: !2178)
!6137 = !DILocation(line: 3412, column: 12, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 3412, column: 11)
!6139 = !DILocation(line: 3412, column: 25, scope: !6138)
!6140 = !DILocation(line: 3412, column: 29, scope: !6138)
!6141 = !DILocation(line: 3413, column: 4, scope: !6138)
!6142 = !DILocation(line: 3413, column: 10, scope: !6138)
!6143 = !DILocation(line: 3413, column: 28, scope: !6138)
!6144 = !DILocation(line: 3413, column: 31, scope: !6138)
!6145 = !DILocation(line: 3412, column: 11, scope: !2178)
!6146 = !DILocation(line: 3414, column: 9, scope: !6138)
!6147 = !DILocation(line: 3414, column: 2, scope: !6138)
!6148 = !DILocation(line: 3416, column: 21, scope: !2178)
!6149 = !DILocation(line: 3416, column: 27, scope: !2178)
!6150 = !DILocation(line: 3417, column: 21, scope: !2178)
!6151 = !DILocation(line: 3417, column: 26, scope: !2178)
!6152 = !DILocation(line: 3418, column: 21, scope: !2178)
!6153 = !DILocation(line: 3418, column: 29, scope: !2178)
!6154 = !DILocation(line: 3420, column: 27, scope: !2178)
!6155 = !DILocation(line: 3420, column: 21, scope: !2178)
!6156 = !DILocation(line: 3420, column: 25, scope: !2178)
!6157 = !DILocation(line: 3421, column: 7, scope: !2178)
!6158 = !DILocation(line: 3428, column: 21, scope: !2178)
!6159 = !DILocation(line: 3428, column: 25, scope: !2178)
!6160 = !DILocation(line: 3430, column: 48, scope: !2178)
!6161 = !DILocation(line: 3424, column: 7, scope: !2178)
!6162 = !DILocation(line: 3432, column: 25, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 3432, column: 11)
!6164 = !DILocation(line: 3432, column: 29, scope: !6163)
!6165 = !DILocation(line: 3432, column: 34, scope: !6163)
!6166 = !DILocation(line: 3432, column: 51, scope: !6163)
!6167 = !DILocation(line: 3432, column: 59, scope: !6163)
!6168 = !DILocation(line: 3433, column: 28, scope: !6163)
!6169 = !DILocation(line: 3433, column: 4, scope: !6163)
!6170 = !DILocation(line: 3434, column: 50, scope: !6163)
!6171 = !DILocation(line: 3434, column: 21, scope: !6163)
!6172 = !DILocation(line: 3434, column: 2, scope: !6163)
!6173 = !DILocation(line: 3436, column: 7, scope: !2178)
!6174 = !DILocation(line: 3439, column: 5, scope: !2178)
!6175 = !DILocation(line: 0, scope: !2181)
!6176 = !DILocation(line: 0, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 3511, column: 11)
!6178 = !DILocation(line: 3441, column: 3, scope: !2111)
!6179 = !DILocation(line: 3441, column: 16, scope: !2182)
!6180 = !DILocation(line: 3441, column: 3, scope: !2183)
!6181 = !DILocation(line: 3443, column: 17, scope: !2181)
!6182 = !DILocation(line: 3444, column: 52, scope: !2181)
!6183 = !DILocation(line: 3448, column: 7, scope: !2181)
!6184 = !DILocation(line: 0, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 3452, column: 11)
!6186 = !DILocation(line: 3452, column: 12, scope: !6185)
!6187 = !DILocation(line: 3452, column: 24, scope: !6185)
!6188 = !DILocation(line: 3452, column: 28, scope: !6185)
!6189 = !DILocation(line: 3453, column: 4, scope: !6185)
!6190 = !DILocation(line: 3453, column: 10, scope: !6185)
!6191 = !DILocation(line: 3453, column: 27, scope: !6185)
!6192 = !DILocation(line: 3453, column: 30, scope: !6185)
!6193 = !DILocation(line: 3452, column: 11, scope: !2181)
!6194 = !DILocation(line: 3454, column: 8, scope: !6185)
!6195 = !DILocation(line: 3454, column: 2, scope: !6185)
!6196 = !DILocation(line: 3456, column: 11, scope: !2187)
!6197 = !DILocation(line: 3456, column: 11, scope: !2181)
!6198 = !DILocation(line: 3460, column: 9, scope: !2186)
!6199 = !DILocation(line: 3460, column: 8, scope: !2186)
!6200 = !DILocation(line: 0, scope: !2186)
!6201 = !DILocation(line: 3464, column: 14, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !2186, file: !3, line: 3464, column: 8)
!6203 = !DILocation(line: 3464, column: 8, scope: !2186)
!6204 = !DILocation(line: 3470, column: 8, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !2186, file: !3, line: 3470, column: 8)
!6206 = !DILocation(line: 3470, column: 20, scope: !6205)
!6207 = !DILocation(line: 3474, column: 45, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 3473, column: 6)
!6209 = !DILocation(line: 3474, column: 28, scope: !6208)
!6210 = !DILocation(line: 3474, column: 15, scope: !6208)
!6211 = !DILocation(line: 3476, column: 8, scope: !6208)
!6212 = !DILocation(line: 0, scope: !6205)
!6213 = !DILocation(line: 3479, column: 18, scope: !2186)
!6214 = !DILocation(line: 3479, column: 16, scope: !2186)
!6215 = !DILocation(line: 3482, column: 8, scope: !2186)
!6216 = !DILocation(line: 3483, column: 20, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !2186, file: !3, line: 3482, column: 8)
!6218 = !DILocation(line: 3483, column: 18, scope: !6217)
!6219 = !DILocation(line: 3483, column: 6, scope: !6217)
!6220 = !DILocation(line: 3489, column: 25, scope: !2186)
!6221 = !DILocation(line: 3489, column: 10, scope: !2186)
!6222 = !DILocation(line: 3490, column: 2, scope: !2186)
!6223 = !DILocation(line: 3492, column: 21, scope: !2181)
!6224 = !DILocation(line: 3492, column: 27, scope: !2181)
!6225 = !DILocation(line: 3493, column: 21, scope: !2181)
!6226 = !DILocation(line: 3493, column: 26, scope: !2181)
!6227 = !DILocation(line: 3495, column: 27, scope: !2181)
!6228 = !DILocation(line: 3495, column: 21, scope: !2181)
!6229 = !DILocation(line: 3495, column: 25, scope: !2181)
!6230 = !DILocation(line: 3498, column: 18, scope: !2181)
!6231 = !DILocation(line: 3498, column: 4, scope: !2181)
!6232 = !DILocation(line: 3497, column: 21, scope: !2181)
!6233 = !DILocation(line: 3498, column: 2, scope: !2181)
!6234 = !DILocation(line: 3504, column: 21, scope: !2181)
!6235 = !DILocation(line: 3504, column: 25, scope: !2181)
!6236 = !DILocation(line: 3507, column: 45, scope: !2181)
!6237 = !DILocation(line: 3500, column: 7, scope: !2181)
!6238 = !DILocation(line: 3509, column: 7, scope: !2181)
!6239 = !DILocation(line: 3511, column: 25, scope: !6177)
!6240 = !DILocation(line: 3511, column: 29, scope: !6177)
!6241 = !DILocation(line: 3511, column: 34, scope: !6177)
!6242 = !DILocation(line: 3511, column: 51, scope: !6177)
!6243 = !DILocation(line: 3511, column: 59, scope: !6177)
!6244 = !DILocation(line: 3512, column: 4, scope: !6177)
!6245 = !DILocation(line: 3513, column: 50, scope: !6177)
!6246 = !DILocation(line: 3513, column: 21, scope: !6177)
!6247 = !DILocation(line: 3513, column: 2, scope: !6177)
!6248 = !DILocation(line: 3515, column: 7, scope: !2181)
!6249 = !DILocation(line: 3441, column: 30, scope: !2182)
!6250 = !DILocation(line: 3441, column: 3, scope: !2182)
!6251 = distinct !{!6251, !6180, !6252}
!6252 = !DILocation(line: 3516, column: 5, scope: !2183)
!6253 = !DILocation(line: 3520, column: 3, scope: !2111)
!6254 = !DILocation(line: 3522, column: 24, scope: !2111)
!6255 = !DILocation(line: 3523, column: 37, scope: !2111)
!6256 = !DILocation(line: 3524, column: 8, scope: !2111)
!6257 = !DILocation(line: 3524, column: 6, scope: !2111)
!6258 = !DILocation(line: 3525, column: 8, scope: !2111)
!6259 = !DILocation(line: 3525, column: 6, scope: !2111)
!6260 = !DILocation(line: 3525, column: 20, scope: !2111)
!6261 = !DILocation(line: 3527, column: 6, scope: !2111)
!6262 = !DILocation(line: 3528, column: 5, scope: !2111)
!6263 = !DILocation(line: 3530, column: 24, scope: !2111)
!6264 = !DILocation(line: 3530, column: 22, scope: !2111)
!6265 = !DILocation(line: 3533, column: 9, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3533, column: 7)
!6267 = !DILocation(line: 3533, column: 7, scope: !2111)
!6268 = !DILocation(line: 3536, column: 17, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3536, column: 7)
!6270 = !DILocation(line: 3534, column: 24, scope: !6266)
!6271 = !DILocation(line: 3534, column: 5, scope: !6266)
!6272 = !DILocation(line: 3536, column: 34, scope: !6269)
!6273 = !DILocation(line: 3536, column: 28, scope: !6269)
!6274 = !DILocation(line: 3536, column: 26, scope: !6269)
!6275 = !DILocation(line: 3536, column: 7, scope: !2111)
!6276 = !DILocation(line: 3537, column: 32, scope: !6269)
!6277 = !DILocation(line: 3537, column: 30, scope: !6269)
!6278 = !DILocation(line: 3537, column: 5, scope: !6269)
!6279 = !DILocation(line: 3539, column: 7, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3539, column: 7)
!6281 = !DILocation(line: 3539, column: 7, scope: !2111)
!6282 = !DILocation(line: 3553, column: 26, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3540, column: 5)
!6284 = !DILocation(line: 3553, column: 16, scope: !6283)
!6285 = !DILocation(line: 3558, column: 13, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3558, column: 11)
!6287 = !DILocation(line: 3558, column: 11, scope: !6283)
!6288 = !DILocation(line: 3565, column: 37, scope: !6283)
!6289 = !DILocation(line: 3565, column: 35, scope: !6283)
!6290 = !DILocation(line: 3568, column: 29, scope: !6283)
!6291 = !DILocation(line: 3569, column: 23, scope: !6283)
!6292 = !DILocation(line: 3571, column: 11, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3571, column: 11)
!6294 = !DILocation(line: 3571, column: 11, scope: !6283)
!6295 = !DILocation(line: 3573, column: 3, scope: !6293)
!6296 = !DILocation(line: 3572, column: 2, scope: !6293)
!6297 = !DILocation(line: 3575, column: 41, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3575, column: 11)
!6299 = !DILocation(line: 3575, column: 38, scope: !6298)
!6300 = !DILocation(line: 3575, column: 11, scope: !6283)
!6301 = !DILocation(line: 3576, column: 11, scope: !6298)
!6302 = !DILocation(line: 3577, column: 37, scope: !6298)
!6303 = !DILocation(line: 3577, column: 9, scope: !6298)
!6304 = !DILocation(line: 3576, column: 2, scope: !6298)
!6305 = !DILocation(line: 3585, column: 11, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 3585, column: 11)
!6307 = !DILocation(line: 3585, column: 11, scope: !6283)
!6308 = !DILocation(line: 3586, column: 28, scope: !6306)
!6309 = !DILocation(line: 3586, column: 13, scope: !6306)
!6310 = !DILocation(line: 3586, column: 2, scope: !6306)
!6311 = !DILocation(line: 3588, column: 13, scope: !6306)
!6312 = !DILocation(line: 3592, column: 12, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 3592, column: 11)
!6314 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3591, column: 5)
!6315 = !DILocation(line: 3592, column: 11, scope: !6314)
!6316 = !DILocation(line: 3593, column: 25, scope: !6313)
!6317 = !DILocation(line: 3593, column: 13, scope: !6313)
!6318 = !DILocation(line: 3593, column: 2, scope: !6313)
!6319 = !DILocation(line: 0, scope: !6280)
!6320 = !DILocation(line: 3598, column: 16, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3598, column: 7)
!6322 = !DILocation(line: 3598, column: 7, scope: !2111)
!6323 = !DILocation(line: 3599, column: 24, scope: !6321)
!6324 = !DILocation(line: 3599, column: 5, scope: !6321)
!6325 = !DILocation(line: 3614, column: 7, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3614, column: 7)
!6327 = !DILocation(line: 3614, column: 7, scope: !2111)
!6328 = !DILocation(line: 3619, column: 19, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 3615, column: 5)
!6330 = !DILocation(line: 3621, column: 5, scope: !6329)
!6331 = !DILocation(line: 0, scope: !2212)
!6332 = !DILocation(line: 3628, column: 8, scope: !2192)
!6333 = !DILocation(line: 0, scope: !2192)
!6334 = !DILocation(line: 3628, column: 25, scope: !2191)
!6335 = !DILocation(line: 3628, column: 3, scope: !2192)
!6336 = !DILocation(line: 3630, column: 47, scope: !2190)
!6337 = !DILocation(line: 0, scope: !2190)
!6338 = !DILocation(line: 3631, column: 32, scope: !2190)
!6339 = !DILocation(line: 3632, column: 32, scope: !2190)
!6340 = !DILocation(line: 3633, column: 36, scope: !2190)
!6341 = !DILocation(line: 3634, column: 55, scope: !2190)
!6342 = !DILocation(line: 3637, column: 18, scope: !2206)
!6343 = !DILocation(line: 3637, column: 34, scope: !2206)
!6344 = !DILocation(line: 3637, column: 23, scope: !2206)
!6345 = !DILocation(line: 3639, column: 8, scope: !2204)
!6346 = !DILocation(line: 3639, column: 8, scope: !2205)
!6347 = !DILocation(line: 3650, column: 56, scope: !2203)
!6348 = !DILocation(line: 3650, column: 22, scope: !2203)
!6349 = !DILocation(line: 3651, column: 63, scope: !2203)
!6350 = !DILocation(line: 3651, column: 34, scope: !2203)
!6351 = !DILocation(line: 3657, column: 14, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 3657, column: 12)
!6353 = !DILocation(line: 3657, column: 12, scope: !2203)
!6354 = !DILocation(line: 0, scope: !2203)
!6355 = !DILocation(line: 3659, column: 8, scope: !2203)
!6356 = !DILocation(line: 3659, column: 17, scope: !2203)
!6357 = !DILocation(line: 3659, column: 31, scope: !2203)
!6358 = !DILocation(line: 3659, column: 34, scope: !2203)
!6359 = !DILocation(line: 3659, column: 53, scope: !2203)
!6360 = !DILocation(line: 3660, column: 4, scope: !2203)
!6361 = distinct !{!6361, !6355, !6360}
!6362 = !DILocation(line: 3662, column: 12, scope: !2203)
!6363 = !DILocation(line: 3666, column: 9, scope: !2201)
!6364 = !DILocation(line: 0, scope: !2201)
!6365 = !DILocation(line: 3668, column: 9, scope: !2201)
!6366 = !DILocation(line: 3671, column: 39, scope: !2201)
!6367 = !DILocation(line: 3670, column: 9, scope: !2201)
!6368 = !DILocation(line: 3673, column: 33, scope: !2201)
!6369 = !DILocation(line: 3673, column: 9, scope: !2201)
!6370 = !DILocation(line: 3675, column: 19, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !2201, file: !3, line: 3675, column: 9)
!6372 = !DILocation(line: 3675, column: 9, scope: !2201)
!6373 = !DILocation(line: 3679, column: 38, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 3676, column: 7)
!6375 = !DILocation(line: 3678, column: 6, scope: !6374)
!6376 = !DILocation(line: 3677, column: 24, scope: !6374)
!6377 = !DILocation(line: 3678, column: 4, scope: !6374)
!6378 = !DILocation(line: 3682, column: 26, scope: !6374)
!6379 = !DILocation(line: 3684, column: 12, scope: !6374)
!6380 = !DILocation(line: 3682, column: 9, scope: !6374)
!6381 = !DILocation(line: 3686, column: 7, scope: !6374)
!6382 = !DILocation(line: 3689, column: 36, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 3688, column: 7)
!6384 = !DILocation(line: 3689, column: 24, scope: !6383)
!6385 = !DILocation(line: 3689, column: 34, scope: !6383)
!6386 = !DILocation(line: 3691, column: 9, scope: !6383)
!6387 = !DILocation(line: 3698, column: 6, scope: !2205)
!6388 = !DILocation(line: 3700, column: 6, scope: !2205)
!6389 = !DILocation(line: 3696, column: 4, scope: !2205)
!6390 = !DILocation(line: 3703, column: 8, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 3703, column: 8)
!6392 = !DILocation(line: 3703, column: 8, scope: !2205)
!6393 = !DILocation(line: 3704, column: 11, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 3704, column: 6)
!6395 = !DILocation(line: 0, scope: !6394)
!6396 = !DILocation(line: 3704, column: 30, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 3704, column: 6)
!6398 = !DILocation(line: 3704, column: 6, scope: !6394)
!6399 = !DILocation(line: 3705, column: 8, scope: !6397)
!6400 = !DILocation(line: 3705, column: 27, scope: !6397)
!6401 = !DILocation(line: 3704, column: 46, scope: !6397)
!6402 = !DILocation(line: 3704, column: 6, scope: !6397)
!6403 = distinct !{!6403, !6398, !6404}
!6404 = !DILocation(line: 3705, column: 29, scope: !6394)
!6405 = !DILocation(line: 3707, column: 4, scope: !2205)
!6406 = !DILocation(line: 3710, column: 8, scope: !2212)
!6407 = !DILocation(line: 3710, column: 31, scope: !2212)
!6408 = !DILocation(line: 3710, column: 34, scope: !2212)
!6409 = !DILocation(line: 3709, column: 8, scope: !2205)
!6410 = !DILocation(line: 3716, column: 12, scope: !2211)
!6411 = !DILocation(line: 3718, column: 39, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !2211, file: !3, line: 3716, column: 12)
!6413 = !DILocation(line: 3717, column: 9, scope: !6412)
!6414 = !DILocation(line: 0, scope: !2211)
!6415 = !DILocation(line: 3717, column: 3, scope: !6412)
!6416 = !DILocation(line: 3725, column: 9, scope: !6412)
!6417 = !DILocation(line: 0, scope: !6412)
!6418 = !DILocation(line: 3727, column: 42, scope: !2211)
!6419 = !DILocation(line: 3727, column: 14, scope: !2211)
!6420 = !DILocation(line: 3728, column: 14, scope: !2211)
!6421 = !DILocation(line: 3729, column: 22, scope: !2211)
!6422 = !DILocation(line: 3729, column: 20, scope: !2211)
!6423 = !DILocation(line: 3730, column: 6, scope: !2211)
!6424 = !DILocation(line: 3628, column: 39, scope: !2191)
!6425 = !DILocation(line: 3628, column: 3, scope: !2191)
!6426 = distinct !{!6426, !6335, !6427}
!6427 = !DILocation(line: 3732, column: 5, scope: !2192)
!6428 = !DILocation(line: 3745, column: 9, scope: !2111)
!6429 = !DILocation(line: 3751, column: 8, scope: !2216)
!6430 = !DILocation(line: 0, scope: !2216)
!6431 = !DILocation(line: 3751, column: 25, scope: !2215)
!6432 = !DILocation(line: 3751, column: 3, scope: !2216)
!6433 = !DILocation(line: 3769, column: 3, scope: !2223)
!6434 = !DILocation(line: 3753, column: 47, scope: !2214)
!6435 = !DILocation(line: 0, scope: !2214)
!6436 = !DILocation(line: 3754, column: 32, scope: !2214)
!6437 = !DILocation(line: 3755, column: 32, scope: !2214)
!6438 = !DILocation(line: 3756, column: 36, scope: !2214)
!6439 = !DILocation(line: 3760, column: 20, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !2214, file: !3, line: 3760, column: 11)
!6441 = !DILocation(line: 3760, column: 23, scope: !6440)
!6442 = !DILocation(line: 3760, column: 38, scope: !6440)
!6443 = !DILocation(line: 3760, column: 11, scope: !2214)
!6444 = !DILocation(line: 3761, column: 40, scope: !6440)
!6445 = !DILocation(line: 3761, column: 2, scope: !6440)
!6446 = !DILocation(line: 3762, column: 36, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 3762, column: 16)
!6448 = !DILocation(line: 3762, column: 25, scope: !6447)
!6449 = !DILocation(line: 3763, column: 2, scope: !6447)
!6450 = !DILocation(line: 3765, column: 7, scope: !2214)
!6451 = !DILocation(line: 3751, column: 39, scope: !2215)
!6452 = !DILocation(line: 3751, column: 3, scope: !2215)
!6453 = distinct !{!6453, !6432, !6454}
!6454 = !DILocation(line: 3766, column: 5, scope: !2216)
!6455 = !DILocation(line: 0, scope: !2223)
!6456 = !DILocation(line: 3769, column: 25, scope: !2222)
!6457 = !DILocation(line: 3771, column: 31, scope: !2221)
!6458 = !DILocation(line: 0, scope: !2221)
!6459 = !DILocation(line: 3772, column: 20, scope: !2227)
!6460 = !DILocation(line: 3772, column: 23, scope: !2227)
!6461 = !DILocation(line: 3772, column: 38, scope: !2227)
!6462 = !DILocation(line: 3772, column: 11, scope: !2221)
!6463 = !DILocation(line: 3773, column: 2, scope: !2227)
!6464 = !DILocation(line: 3776, column: 32, scope: !2225)
!6465 = !DILocation(line: 0, scope: !2225)
!6466 = !DILocation(line: 3777, column: 8, scope: !2230)
!6467 = !DILocation(line: 3777, column: 8, scope: !2225)
!6468 = !DILocation(line: 3780, column: 15, scope: !2229)
!6469 = !DILocation(line: 3781, column: 24, scope: !2229)
!6470 = !DILocation(line: 0, scope: !2229)
!6471 = !DILocation(line: 3782, column: 32, scope: !2229)
!6472 = !DILocation(line: 3782, column: 8, scope: !2229)
!6473 = !DILocation(line: 3783, column: 6, scope: !2229)
!6474 = !DILocation(line: 3785, column: 6, scope: !2230)
!6475 = !DILocation(line: 3769, column: 39, scope: !2222)
!6476 = !DILocation(line: 3769, column: 3, scope: !2222)
!6477 = distinct !{!6477, !6433, !6478}
!6478 = !DILocation(line: 3787, column: 5, scope: !2223)
!6479 = !DILocation(line: 3790, column: 38, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3790, column: 7)
!6481 = !DILocation(line: 3790, column: 22, scope: !6480)
!6482 = !DILocation(line: 3794, column: 21, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 3791, column: 5)
!6484 = !DILocation(line: 3794, column: 6, scope: !6483)
!6485 = !DILocation(line: 3793, column: 9, scope: !6483)
!6486 = !DILocation(line: 3792, column: 7, scope: !6483)
!6487 = !DILocation(line: 3796, column: 11, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6483, file: !3, line: 3796, column: 11)
!6489 = !DILocation(line: 3796, column: 11, scope: !6483)
!6490 = !DILocation(line: 3797, column: 2, scope: !6488)
!6491 = !DILocation(line: 3802, column: 3, scope: !2111)
!6492 = !DILocation(line: 3803, column: 39, scope: !2111)
!6493 = !DILocation(line: 3803, column: 28, scope: !2111)
!6494 = !DILocation(line: 3804, column: 8, scope: !2111)
!6495 = !DILocation(line: 3803, column: 13, scope: !2111)
!6496 = !DILocation(line: 3807, column: 3, scope: !2111)
!6497 = !DILocation(line: 3810, column: 17, scope: !2111)
!6498 = !DILocation(line: 3820, column: 25, scope: !2111)
!6499 = !DILocation(line: 3820, column: 9, scope: !2111)
!6500 = !DILocation(line: 3821, column: 9, scope: !2111)
!6501 = !DILocation(line: 3822, column: 28, scope: !2111)
!6502 = !DILocation(line: 3822, column: 48, scope: !2111)
!6503 = !DILocation(line: 3824, column: 9, scope: !2111)
!6504 = !DILocation(line: 3826, column: 31, scope: !2111)
!6505 = !DILocation(line: 3826, column: 36, scope: !2111)
!6506 = !DILocation(line: 3819, column: 3, scope: !2111)
!6507 = !DILocation(line: 3833, column: 13, scope: !2233)
!6508 = !DILocation(line: 3833, column: 7, scope: !2111)
!6509 = !DILocation(line: 3839, column: 18, scope: !2232)
!6510 = !DILocation(line: 0, scope: !2232)
!6511 = !DILocation(line: 3840, column: 7, scope: !2232)
!6512 = !DILocation(line: 3840, column: 15, scope: !2232)
!6513 = !DILocation(line: 3842, column: 11, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !2232, file: !3, line: 3841, column: 2)
!6515 = !DILocation(line: 3844, column: 4, scope: !6514)
!6516 = distinct !{!6516, !6511, !6517}
!6517 = !DILocation(line: 3845, column: 2, scope: !2232)
!6518 = !DILocation(line: 3847, column: 7, scope: !2232)
!6519 = !DILocation(line: 3848, column: 5, scope: !2232)
!6520 = !DILocation(line: 3851, column: 3, scope: !2111)
!6521 = !DILocation(line: 3853, column: 3, scope: !2111)
!6522 = !DILocation(line: 3856, column: 30, scope: !2241)
!6523 = !DILocation(line: 3856, column: 27, scope: !2241)
!6524 = !DILocation(line: 3858, column: 11, scope: !2240)
!6525 = !DILocation(line: 3860, column: 14, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 3860, column: 8)
!6527 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 3859, column: 2)
!6528 = !DILocation(line: 3860, column: 8, scope: !6527)
!6529 = !DILocation(line: 3862, column: 14, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 3862, column: 8)
!6531 = !DILocation(line: 3862, column: 8, scope: !6527)
!6532 = !DILocation(line: 3863, column: 6, scope: !6530)
!6533 = !DILocation(line: 3865, column: 16, scope: !2238)
!6534 = !DILocation(line: 3865, column: 34, scope: !2238)
!6535 = !DILocation(line: 3865, column: 16, scope: !2239)
!6536 = !DILocation(line: 3867, column: 14, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 3867, column: 8)
!6538 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 3866, column: 2)
!6539 = !DILocation(line: 3867, column: 8, scope: !6538)
!6540 = !DILocation(line: 3868, column: 14, scope: !6537)
!6541 = !DILocation(line: 3868, column: 6, scope: !6537)
!6542 = !DILocation(line: 3869, column: 48, scope: !6538)
!6543 = !DILocation(line: 3869, column: 4, scope: !6538)
!6544 = !DILocation(line: 3870, column: 2, scope: !6538)
!6545 = !DILocation(line: 3874, column: 8, scope: !2236)
!6546 = !DILocation(line: 3874, column: 26, scope: !2236)
!6547 = !DILocation(line: 3874, column: 8, scope: !2237)
!6548 = !DILocation(line: 3876, column: 8, scope: !2235)
!6549 = !DILocation(line: 3876, column: 24, scope: !2235)
!6550 = !DILocation(line: 0, scope: !2235)
!6551 = !DILocation(line: 3876, column: 12, scope: !2235)
!6552 = !DILocation(line: 3878, column: 8, scope: !2235)
!6553 = !DILocation(line: 3881, column: 41, scope: !2235)
!6554 = !DILocation(line: 3881, column: 17, scope: !2235)
!6555 = !DILocation(line: 3882, column: 6, scope: !2236)
!6556 = !DILocation(line: 3882, column: 6, scope: !2235)
!6557 = !DILocation(line: 3884, column: 14, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 3884, column: 8)
!6559 = !DILocation(line: 3884, column: 8, scope: !2237)
!6560 = !DILocation(line: 3885, column: 6, scope: !6558)
!6561 = !DILocation(line: 3891, column: 7, scope: !2248)
!6562 = !DILocation(line: 3891, column: 7, scope: !2111)
!6563 = !DILocation(line: 3894, column: 11, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !2247, file: !3, line: 3894, column: 11)
!6565 = !DILocation(line: 3894, column: 11, scope: !2247)
!6566 = !DILocation(line: 3896, column: 10, scope: !6564)
!6567 = !DILocation(line: 3896, column: 24, scope: !6564)
!6568 = !DILocation(line: 3895, column: 2, scope: !6564)
!6569 = !DILocation(line: 3900, column: 12, scope: !2246)
!6570 = !DILocation(line: 0, scope: !2246)
!6571 = !DILocation(line: 3900, column: 29, scope: !2245)
!6572 = !DILocation(line: 3900, column: 7, scope: !2246)
!6573 = !DILocation(line: 3901, column: 20, scope: !2244)
!6574 = !DILocation(line: 3901, column: 6, scope: !2244)
!6575 = !DILocation(line: 3901, column: 6, scope: !2245)
!6576 = !DILocation(line: 3903, column: 36, scope: !2243)
!6577 = !DILocation(line: 0, scope: !2243)
!6578 = !DILocation(line: 3905, column: 38, scope: !2243)
!6579 = !DILocation(line: 3904, column: 16, scope: !2243)
!6580 = !DILocation(line: 3907, column: 8, scope: !2243)
!6581 = !DILocation(line: 3906, column: 23, scope: !2243)
!6582 = !DILocation(line: 3909, column: 20, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !2243, file: !3, line: 3909, column: 10)
!6584 = !DILocation(line: 0, scope: !6583)
!6585 = !DILocation(line: 3909, column: 10, scope: !2243)
!6586 = !DILocation(line: 3911, column: 11, scope: !6583)
!6587 = !DILocation(line: 3912, column: 11, scope: !6583)
!6588 = !DILocation(line: 3910, column: 8, scope: !6583)
!6589 = !DILocation(line: 3915, column: 8, scope: !6583)
!6590 = !DILocation(line: 3900, column: 43, scope: !2245)
!6591 = !DILocation(line: 3900, column: 7, scope: !2245)
!6592 = distinct !{!6592, !6572, !6593}
!6593 = !DILocation(line: 3916, column: 4, scope: !2246)
!6594 = !DILocation(line: 3918, column: 35, scope: !2247)
!6595 = !DILocation(line: 3919, column: 23, scope: !2247)
!6596 = !DILocation(line: 3920, column: 5, scope: !2247)
!6597 = !DILocation(line: 3922, column: 7, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 3922, column: 7)
!6599 = !DILocation(line: 3922, column: 7, scope: !2111)
!6600 = !DILocation(line: 3923, column: 5, scope: !6598)
!6601 = !DILocation(line: 3927, column: 1, scope: !2111)
!6602 = !DILocation(line: 3925, column: 3, scope: !2111)
!6603 = distinct !DISubprogram(name: "emit_library_call_value", scope: !3, file: !3, line: 3959, type: !6604, scopeLine: 3962, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6606)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!6, !6, !6, !1968, !50, !32, null}
!6606 = !{!6607, !6608, !6609, !6610, !6611, !6612, !6613}
!6607 = !DILocalVariable(name: "orgfun", arg: 1, scope: !6603, file: !3, line: 3959, type: !6)
!6608 = !DILocalVariable(name: "value", arg: 2, scope: !6603, file: !3, line: 3959, type: !6)
!6609 = !DILocalVariable(name: "fn_type", arg: 3, scope: !6603, file: !3, line: 3960, type: !1968)
!6610 = !DILocalVariable(name: "outmode", arg: 4, scope: !6603, file: !3, line: 3961, type: !50)
!6611 = !DILocalVariable(name: "nargs", arg: 5, scope: !6603, file: !3, line: 3961, type: !32)
!6612 = !DILocalVariable(name: "result", scope: !6603, file: !3, line: 3963, type: !6)
!6613 = !DILocalVariable(name: "p", scope: !6603, file: !3, line: 3964, type: !6057)
!6614 = !DILocation(line: 0, scope: !6603)
!6615 = !DILocation(line: 3964, column: 3, scope: !6603)
!6616 = !DILocation(line: 3964, column: 11, scope: !6603)
!6617 = !DILocation(line: 3966, column: 3, scope: !6603)
!6618 = !DILocation(line: 3968, column: 18, scope: !6603)
!6619 = !DILocation(line: 3967, column: 12, scope: !6603)
!6620 = !DILocation(line: 3969, column: 3, scope: !6603)
!6621 = !DILocation(line: 3972, column: 1, scope: !6603)
!6622 = !DILocation(line: 3971, column: 3, scope: !6603)
!6623 = distinct !DISubprogram(name: "must_pass_in_stack_var_size", scope: !3, file: !3, line: 4347, type: !6624, scopeLine: 4349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6626)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!372, !50, !2932}
!6626 = !{!6627, !6628}
!6627 = !DILocalVariable(name: "mode", arg: 1, scope: !6623, file: !3, line: 4347, type: !50)
!6628 = !DILocalVariable(name: "type", arg: 2, scope: !6623, file: !3, line: 4348, type: !2932)
!6629 = !DILocation(line: 0, scope: !6623)
!6630 = !DILocation(line: 4350, column: 8, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 4350, column: 7)
!6632 = !DILocation(line: 4350, column: 7, scope: !6623)
!6633 = !DILocation(line: 4354, column: 7, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 4354, column: 7)
!6635 = !DILocation(line: 4354, column: 36, scope: !6634)
!6636 = !DILocation(line: 4354, column: 7, scope: !6623)
!6637 = !DILocation(line: 4359, column: 7, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 4359, column: 7)
!6639 = !DILocation(line: 4363, column: 1, scope: !6623)
!6640 = distinct !DISubprogram(name: "must_pass_in_stack_var_size_or_pad", scope: !3, file: !3, line: 4370, type: !6624, scopeLine: 4371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6641)
!6641 = !{!6642, !6643}
!6642 = !DILocalVariable(name: "mode", arg: 1, scope: !6640, file: !3, line: 4370, type: !50)
!6643 = !DILocalVariable(name: "type", arg: 2, scope: !6640, file: !3, line: 4370, type: !2932)
!6644 = !DILocation(line: 0, scope: !6640)
!6645 = !DILocation(line: 4372, column: 8, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 4372, column: 7)
!6647 = !DILocation(line: 4372, column: 7, scope: !6640)
!6648 = !DILocation(line: 4376, column: 7, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 4376, column: 7)
!6650 = !DILocation(line: 4376, column: 36, scope: !6649)
!6651 = !DILocation(line: 4376, column: 7, scope: !6640)
!6652 = !DILocation(line: 4381, column: 7, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 4381, column: 7)
!6654 = !DILocation(line: 4381, column: 7, scope: !6640)
!6655 = !DILocation(line: 4386, column: 12, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 4386, column: 7)
!6657 = !DILocation(line: 4387, column: 7, scope: !6656)
!6658 = !DILocation(line: 4387, column: 10, scope: !6656)
!6659 = !DILocation(line: 4388, column: 7, scope: !6656)
!6660 = !DILocation(line: 4393, column: 1, scope: !6640)
!6661 = distinct !DISubprogram(name: "gimple_code", scope: !725, file: !725, line: 1052, type: !6662, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6664)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{!1976, !3087}
!6664 = !{!6665}
!6665 = !DILocalVariable(name: "g", arg: 1, scope: !6661, file: !725, line: 1052, type: !3087)
!6666 = !DILocation(line: 0, scope: !6661)
!6667 = !DILocation(line: 1054, column: 20, scope: !6661)
!6668 = !DILocation(line: 1054, column: 3, scope: !6661)
!6669 = distinct !DISubprogram(name: "gimple_call_fn", scope: !725, file: !725, line: 1911, type: !3112, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6670)
!6670 = !{!6671}
!6671 = !DILocalVariable(name: "gs", arg: 1, scope: !6669, file: !725, line: 1911, type: !3087)
!6672 = !DILocation(line: 0, scope: !6669)
!6673 = !DILocation(line: 1914, column: 10, scope: !6669)
!6674 = !DILocation(line: 1914, column: 3, scope: !6669)
!6675 = distinct !DISubprogram(name: "gimple_op", scope: !725, file: !725, line: 1631, type: !6676, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6678)
!6676 = !DISubroutineType(types: !6677)
!6677 = !{!258, !3087, !13}
!6678 = !{!6679, !6680}
!6679 = !DILocalVariable(name: "gs", arg: 1, scope: !6675, file: !725, line: 1631, type: !3087)
!6680 = !DILocalVariable(name: "i", arg: 2, scope: !6675, file: !725, line: 1631, type: !13)
!6681 = !DILocation(line: 0, scope: !6675)
!6682 = !DILocation(line: 1633, column: 7, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6675, file: !725, line: 1633, column: 7)
!6684 = !DILocation(line: 1633, column: 7, scope: !6675)
!6685 = !DILocation(line: 1638, column: 14, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6683, file: !725, line: 1634, column: 5)
!6687 = !DILocation(line: 1638, column: 7, scope: !6686)
!6688 = !DILocation(line: 0, scope: !6683)
!6689 = !DILocation(line: 1642, column: 1, scope: !6675)
!6690 = distinct !DISubprogram(name: "gimple_has_ops", scope: !725, file: !725, line: 1274, type: !3085, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6691)
!6691 = !{!6692}
!6692 = !DILocalVariable(name: "g", arg: 1, scope: !6690, file: !725, line: 1274, type: !3087)
!6693 = !DILocation(line: 0, scope: !6690)
!6694 = !DILocation(line: 1276, column: 10, scope: !6690)
!6695 = !DILocation(line: 1276, column: 26, scope: !6690)
!6696 = !DILocation(line: 1276, column: 41, scope: !6690)
!6697 = !DILocation(line: 1276, column: 44, scope: !6690)
!6698 = !DILocation(line: 1276, column: 60, scope: !6690)
!6699 = !DILocation(line: 1276, column: 3, scope: !6690)
!6700 = distinct !DISubprogram(name: "gimple_ops", scope: !725, file: !725, line: 1614, type: !6701, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6703)
!6701 = !DISubroutineType(types: !6702)
!6702 = !{!768, !733}
!6703 = !{!6704, !6705}
!6704 = !DILocalVariable(name: "gs", arg: 1, scope: !6700, file: !725, line: 1614, type: !733)
!6705 = !DILocalVariable(name: "off", scope: !6700, file: !725, line: 1616, type: !632)
!6706 = !DILocation(line: 0, scope: !6700)
!6707 = !DILocation(line: 1621, column: 28, scope: !6700)
!6708 = !DILocation(line: 1621, column: 9, scope: !6700)
!6709 = !DILocation(line: 1622, column: 3, scope: !6700)
!6710 = !DILocation(line: 1624, column: 20, scope: !6700)
!6711 = !DILocation(line: 1624, column: 32, scope: !6700)
!6712 = !DILocation(line: 1624, column: 10, scope: !6700)
!6713 = !DILocation(line: 1624, column: 3, scope: !6700)
!6714 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !725, file: !725, line: 1073, type: !6715, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6717)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{!2014, !733}
!6717 = !{!6718}
!6718 = !DILocalVariable(name: "gs", arg: 1, scope: !6714, file: !725, line: 1073, type: !733)
!6719 = !DILocation(line: 0, scope: !6714)
!6720 = !DILocation(line: 1075, column: 24, scope: !6714)
!6721 = !DILocation(line: 1075, column: 10, scope: !6714)
!6722 = !DILocation(line: 1075, column: 3, scope: !6714)
!6723 = distinct !DISubprogram(name: "gss_for_code", scope: !725, file: !725, line: 1061, type: !6724, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6726)
!6724 = !DISubroutineType(types: !6725)
!6725 = !{!2014, !1976}
!6726 = !{!6727}
!6727 = !DILocalVariable(name: "code", arg: 1, scope: !6723, file: !725, line: 1061, type: !1976)
!6728 = !DILocation(line: 0, scope: !6723)
!6729 = !DILocation(line: 1066, column: 10, scope: !6723)
!6730 = !DILocation(line: 1066, column: 3, scope: !6723)
!6731 = distinct !DISubprogram(name: "init_call_expr_arg_iterator", scope: !261, file: !261, line: 5375, type: !6732, scopeLine: 5376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6734)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{null, !258, !4275}
!6734 = !{!6735, !6736}
!6735 = !DILocalVariable(name: "exp", arg: 1, scope: !6731, file: !261, line: 5375, type: !258)
!6736 = !DILocalVariable(name: "iter", arg: 2, scope: !6731, file: !261, line: 5375, type: !4275)
!6737 = !DILocation(line: 0, scope: !6731)
!6738 = !DILocation(line: 5377, column: 9, scope: !6731)
!6739 = !DILocation(line: 5377, column: 11, scope: !6731)
!6740 = !DILocation(line: 5378, column: 13, scope: !6731)
!6741 = !DILocation(line: 5378, column: 9, scope: !6731)
!6742 = !DILocation(line: 5378, column: 11, scope: !6731)
!6743 = !DILocation(line: 5379, column: 9, scope: !6731)
!6744 = !DILocation(line: 5379, column: 11, scope: !6731)
!6745 = !DILocation(line: 5380, column: 1, scope: !6731)
!6746 = distinct !DISubprogram(name: "check_sibcall_argument_overlap_1", scope: !3, file: !3, line: 1784, type: !6747, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6749)
!6747 = !DISubroutineType(types: !6748)
!6748 = !{!32, !6}
!6749 = !{!6750, !6751, !6752, !6753, !6754}
!6750 = !DILocalVariable(name: "x", arg: 1, scope: !6746, file: !3, line: 1784, type: !6)
!6751 = !DILocalVariable(name: "code", scope: !6746, file: !3, line: 1786, type: !1820)
!6752 = !DILocalVariable(name: "i", scope: !6746, file: !3, line: 1787, type: !32)
!6753 = !DILocalVariable(name: "j", scope: !6746, file: !3, line: 1787, type: !32)
!6754 = !DILocalVariable(name: "fmt", scope: !6746, file: !3, line: 1788, type: !35)
!6755 = !DILocation(line: 0, scope: !6746)
!6756 = !DILocation(line: 1790, column: 9, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1790, column: 7)
!6758 = !DILocation(line: 1790, column: 7, scope: !6746)
!6759 = !DILocation(line: 1793, column: 10, scope: !6746)
!6760 = !DILocation(line: 1795, column: 12, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1795, column: 7)
!6762 = !DILocation(line: 1795, column: 7, scope: !6746)
!6763 = !DILocation(line: 1796, column: 50, scope: !6761)
!6764 = !DILocation(line: 1797, column: 8, scope: !6761)
!6765 = !DILocation(line: 1796, column: 12, scope: !6761)
!6766 = !DILocation(line: 1796, column: 5, scope: !6761)
!6767 = !DILocation(line: 1800, column: 9, scope: !6746)
!6768 = !DILocation(line: 0, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 1801, column: 3)
!6770 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1801, column: 3)
!6771 = !DILocation(line: 0, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 1810, column: 4)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1810, column: 4)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1809, column: 2)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 1808, column: 16)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 1803, column: 11)
!6777 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 1802, column: 5)
!6778 = !DILocation(line: 1801, column: 17, scope: !6769)
!6779 = !DILocation(line: 1801, column: 8, scope: !6770)
!6780 = !DILocation(line: 0, scope: !6770)
!6781 = !DILocation(line: 1801, column: 3, scope: !6770)
!6782 = !DILocation(line: 1803, column: 11, scope: !6776)
!6783 = !DILocation(line: 1803, column: 16, scope: !6776)
!6784 = !DILocation(line: 1803, column: 11, scope: !6777)
!6785 = !DILocation(line: 1805, column: 42, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 1805, column: 8)
!6787 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 1804, column: 2)
!6788 = !DILocation(line: 1805, column: 8, scope: !6786)
!6789 = !DILocation(line: 1805, column: 8, scope: !6787)
!6790 = !DILocation(line: 1808, column: 21, scope: !6775)
!6791 = !DILocation(line: 1808, column: 16, scope: !6776)
!6792 = !DILocation(line: 1810, column: 4, scope: !6773)
!6793 = !DILocation(line: 0, scope: !6773)
!6794 = !DILocation(line: 1810, column: 20, scope: !6772)
!6795 = !DILocation(line: 1810, column: 18, scope: !6772)
!6796 = !DILocation(line: 1811, column: 44, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 1811, column: 10)
!6798 = !DILocation(line: 1811, column: 10, scope: !6797)
!6799 = !DILocation(line: 1811, column: 10, scope: !6772)
!6800 = !DILocation(line: 1810, column: 37, scope: !6772)
!6801 = !DILocation(line: 1810, column: 4, scope: !6772)
!6802 = distinct !{!6802, !6792, !6803}
!6803 = !DILocation(line: 1812, column: 15, scope: !6773)
!6804 = !DILocation(line: 1801, column: 43, scope: !6769)
!6805 = !DILocation(line: 1801, column: 50, scope: !6769)
!6806 = !DILocation(line: 1801, column: 3, scope: !6769)
!6807 = distinct !{!6807, !6781, !6808}
!6808 = !DILocation(line: 1814, column: 5, scope: !6770)
!6809 = !DILocation(line: 1816, column: 1, scope: !6746)
!6810 = distinct !DISubprogram(name: "SET_BIT", scope: !2266, file: !2266, line: 63, type: !6811, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6813)
!6811 = !DISubroutineType(types: !6812)
!6812 = !{null, !2265, !13}
!6813 = !{!6814, !6815, !6816}
!6814 = !DILocalVariable(name: "map", arg: 1, scope: !6810, file: !2266, line: 63, type: !2265)
!6815 = !DILocalVariable(name: "bitno", arg: 2, scope: !6810, file: !2266, line: 63, type: !13)
!6816 = !DILocalVariable(name: "oldbit", scope: !6817, file: !2266, line: 67, type: !372)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !2266, line: 66, column: 5)
!6818 = distinct !DILexicalBlock(scope: !6810, file: !2266, line: 65, column: 7)
!6819 = !DILocation(line: 0, scope: !6810)
!6820 = !DILocation(line: 65, column: 12, scope: !6818)
!6821 = !DILocation(line: 65, column: 7, scope: !6818)
!6822 = !DILocation(line: 65, column: 7, scope: !6810)
!6823 = !DILocation(line: 73, column: 40, scope: !6810)
!6824 = !DILocation(line: 73, column: 29, scope: !6810)
!6825 = !DILocation(line: 72, column: 19, scope: !6810)
!6826 = !DILocation(line: 72, column: 3, scope: !6810)
!6827 = !DILocation(line: 68, column: 16, scope: !6817)
!6828 = !DILocation(line: 69, column: 12, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6817, file: !2266, line: 69, column: 11)
!6830 = !DILocation(line: 69, column: 11, scope: !6817)
!6831 = !DILocation(line: 70, column: 2, scope: !6829)
!6832 = !DILocation(line: 70, column: 41, scope: !6829)
!6833 = !DILocation(line: 73, column: 5, scope: !6810)
!6834 = !DILocation(line: 74, column: 1, scope: !6810)
!6835 = distinct !DISubprogram(name: "mem_overlaps_already_clobbered_arg_p", scope: !3, file: !3, line: 1538, type: !6836, scopeLine: 1539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1818, retainedNodes: !6838)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!372, !6, !210}
!6838 = !{!6839, !6840, !6841, !6842}
!6839 = !DILocalVariable(name: "addr", arg: 1, scope: !6835, file: !3, line: 1538, type: !6)
!6840 = !DILocalVariable(name: "size", arg: 2, scope: !6835, file: !3, line: 1538, type: !210)
!6841 = !DILocalVariable(name: "i", scope: !6835, file: !3, line: 1540, type: !227)
!6842 = !DILocalVariable(name: "k", scope: !6843, file: !3, line: 1561, type: !210)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 1560, column: 5)
!6844 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 1559, column: 7)
!6845 = !DILocation(line: 0, scope: !6835)
!6846 = !DILocation(line: 1542, column: 26, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 1542, column: 7)
!6848 = !DILocation(line: 1542, column: 12, scope: !6847)
!6849 = !DILocation(line: 1542, column: 7, scope: !6835)
!6850 = !DILocation(line: 1544, column: 12, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1544, column: 12)
!6852 = !DILocation(line: 1544, column: 28, scope: !6851)
!6853 = !DILocation(line: 1545, column: 5, scope: !6851)
!6854 = !DILocation(line: 1545, column: 8, scope: !6851)
!6855 = !DILocation(line: 1545, column: 23, scope: !6851)
!6856 = !DILocation(line: 1546, column: 5, scope: !6851)
!6857 = !DILocation(line: 1546, column: 8, scope: !6851)
!6858 = !DILocation(line: 1544, column: 12, scope: !6847)
!6859 = !DILocation(line: 1547, column: 9, scope: !6851)
!6860 = !DILocation(line: 1550, column: 5, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 1549, column: 12)
!6862 = !DILocation(line: 1550, column: 9, scope: !6861)
!6863 = !DILocation(line: 1550, column: 24, scope: !6861)
!6864 = !DILocation(line: 1551, column: 9, scope: !6861)
!6865 = !DILocation(line: 1551, column: 12, scope: !6861)
!6866 = !DILocation(line: 1551, column: 27, scope: !6861)
!6867 = !DILocation(line: 1549, column: 12, scope: !6851)
!6868 = !DILocation(line: 1554, column: 5, scope: !6861)
!6869 = !DILocation(line: 0, scope: !6847)
!6870 = !DILocation(line: 1559, column: 12, scope: !6844)
!6871 = !DILocation(line: 1559, column: 7, scope: !6835)
!6872 = !DILocation(line: 0, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 1564, column: 6)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1563, column: 7)
!6875 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1563, column: 7)
!6876 = !DILocation(line: 1563, column: 7, scope: !6875)
!6877 = !DILocation(line: 0, scope: !6875)
!6878 = !DILocation(line: 0, scope: !6843)
!6879 = !DILocation(line: 1563, column: 21, scope: !6874)
!6880 = !DILocation(line: 1564, column: 8, scope: !6873)
!6881 = !DILocation(line: 1564, column: 31, scope: !6873)
!6882 = !DILocation(line: 1564, column: 14, scope: !6873)
!6883 = !DILocation(line: 1564, column: 12, scope: !6873)
!6884 = !DILocation(line: 1565, column: 6, scope: !6873)
!6885 = !DILocation(line: 1565, column: 9, scope: !6873)
!6886 = !DILocation(line: 1564, column: 6, scope: !6874)
!6887 = !DILocation(line: 1563, column: 30, scope: !6874)
!6888 = !DILocation(line: 1563, column: 7, scope: !6874)
!6889 = distinct !{!6889, !6876, !6890}
!6890 = !DILocation(line: 1566, column: 11, scope: !6875)
!6891 = !DILocation(line: 1569, column: 3, scope: !6835)
!6892 = !DILocation(line: 1570, column: 1, scope: !6835)
