; ModuleID = 'tree.bc'
source_filename = "tree.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.line_maps = type { %struct.line_map*, i32, i32, i32, i32, i32, i8, i32, i32, i32, i8* (i8*, i64)* }
%struct.simple_ipa_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.ggc_cache_tab = type { %struct.htab**, i64, i64, void (i8*)*, void (i8*)*, i32 (i8*)* }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.VEC_alias_pair_gc = type { %struct.VEC_alias_pair_base }
%struct.VEC_alias_pair_base = type { i32, i32, [1 x %struct.alias_pair] }
%struct.alias_pair = type { %union.tree_node*, %union.tree_node* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.var_ann_d = type { i8, i32, %union.tree_node* }
%struct.tree_map = type { %struct.tree_map_base, i32, %union.tree_node* }
%struct.tree_map_base = type { %union.tree_node* }
%struct.tree_priority_map = type { %struct.tree_map_base, i16, i16 }
%struct.tree_vec = type { %struct.tree_common, i32, [1 x %union.tree_node*] }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.const_call_expr_arg_iterator_d = type { %union.tree_node*, i32, i32 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.type_hash = type { i64, %union.tree_node* }
%struct.__mpz_struct = type { i32, i32, i64* }
%struct.pointer_set_t = type opaque
%struct.tree_stmt_iterator = type { %struct.tree_statement_list_node*, %union.tree_node* }
%struct.tree_statement_list_node = type { %struct.tree_statement_list_node*, %struct.tree_statement_list_node*, %union.tree_node* }
%struct.tree_complex = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_constructor = type { %struct.tree_common, %struct.VEC_constructor_elt_gc* }
%struct.tree_omp_clause = type { %struct.tree_common, i32, i32, %union.omp_clause_subcode, %struct.gimple_seq_d*, %struct.gimple_seq_d*, [1 x %union.tree_node*] }
%union.omp_clause_subcode = type { i32 }
%struct.tree_block = type { %struct.tree_common, i32, i32, %union.tree_node*, %struct.VEC_tree_gc*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_real_cst = type { %struct.tree_common, %struct.real_value* }
%struct.function_args_iterator = type { %union.tree_node*, %union.tree_node* }
%struct.tree_optimization_option = type { %struct.tree_common, %struct.cl_optimization }
%struct.cl_optimization = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.tree_target_option = type { %struct.tree_common, %struct.cl_target_option }
%struct.free_lang_data_d = type { %struct.VEC_tree_heap*, %struct.pointer_set_t*, %struct.VEC_tree_heap*, %struct.VEC_tree_heap* }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.eh_catch_d = type { %struct.eh_catch_d*, %struct.eh_catch_d*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_binfo = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.VEC_tree_gc*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.VEC_tree_none }
%struct.VEC_tree_none = type { %struct.VEC_tree_base }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@tree_code_type = dso_local local_unnamed_addr constant [191 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 10, i32 0, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 9, i32 10, i32 10, i32 0, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 6, i32 6, i32 6, i32 7, i32 7, i32 6, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 6, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 7, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 4, i32 10, i32 10, i32 10, i32 10, i32 7, i32 6, i32 10, i32 10, i32 10, i32 10, i32 10, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 0, i32 8, i32 8, i32 10, i32 10, i32 10, i32 0, i32 10, i32 0, i32 10, i32 10, i32 4, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 0, i32 6, i32 6, i32 6, i32 10, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 6, i32 6, i32 6, i32 6, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 10, i32 0, i32 0, i32 0, i32 10, i32 10], align 16, !dbg !0
@tree_code_length = dso_local local_unnamed_addr constant [191 x i8] calign 16, !dbg !2794
@.str = private unnamed_addr constant [11 x i8] c"error_mark\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"identifier_node\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"tree_list\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"tree_vec\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"block\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"offset_type\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"enumeral_type\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"boolean_type\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"integer_type\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"real_type\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"pointer_type\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"fixed_point_type\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"reference_type\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"complex_type\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"vector_type\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"array_type\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"record_type\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"union_type\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"qual_union_type\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"void_type\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"function_type\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"method_type\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"lang_type\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"integer_cst\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"real_cst\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"fixed_cst\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"complex_cst\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"vector_cst\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"string_cst\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"function_decl\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"label_decl\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"field_decl\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"var_decl\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"const_decl\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"parm_decl\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"type_decl\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"result_decl\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"debug_expr_decl\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"namespace_decl\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"imported_decl\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"translation_unit_decl\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"component_ref\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"bit_field_ref\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"realpart_expr\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"imagpart_expr\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"array_ref\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"array_range_ref\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"indirect_ref\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"align_indirect_ref\00", align 1
@.str.49 = private unnamed_addr constant [24 x i8] c"misaligned_indirect_ref\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"obj_type_ref\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"compound_expr\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"modify_expr\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"init_expr\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"target_expr\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"cond_expr\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"vec_cond_expr\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"bind_expr\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"call_expr\00", align 1
@.str.60 = private unnamed_addr constant [18 x i8] c"with_cleanup_expr\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"cleanup_point_expr\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"placeholder_expr\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"plus_expr\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"minus_expr\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"mult_expr\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"pointer_plus_expr\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"trunc_div_expr\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"ceil_div_expr\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"floor_div_expr\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"round_div_expr\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"trunc_mod_expr\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"ceil_mod_expr\00", align 1
@.str.73 = private unnamed_addr constant [15 x i8] c"floor_mod_expr\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"round_mod_expr\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"rdiv_expr\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"exact_div_expr\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"fix_trunc_expr\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"float_expr\00", align 1
@.str.79 = private unnamed_addr constant [12 x i8] c"negate_expr\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"min_expr\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"max_expr\00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c"abs_expr\00", align 1
@.str.83 = private unnamed_addr constant [12 x i8] c"lshift_expr\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"rshift_expr\00", align 1
@.str.85 = private unnamed_addr constant [13 x i8] c"lrotate_expr\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"rrotate_expr\00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"bit_ior_expr\00", align 1
@.str.88 = private unnamed_addr constant [13 x i8] c"bit_xor_expr\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"bit_and_expr\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"bit_not_expr\00", align 1
@.str.91 = private unnamed_addr constant [17 x i8] c"truth_andif_expr\00", align 1
@.str.92 = private unnamed_addr constant [16 x i8] c"truth_orif_expr\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"truth_and_expr\00", align 1
@.str.94 = private unnamed_addr constant [14 x i8] c"truth_or_expr\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"truth_xor_expr\00", align 1
@.str.96 = private unnamed_addr constant [15 x i8] c"truth_not_expr\00", align 1
@.str.97 = private unnamed_addr constant [8 x i8] c"lt_expr\00", align 1
@.str.98 = private unnamed_addr constant [8 x i8] c"le_expr\00", align 1
@.str.99 = private unnamed_addr constant [8 x i8] c"gt_expr\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c"ge_expr\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"eq_expr\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"ne_expr\00", align 1
@.str.103 = private unnamed_addr constant [15 x i8] c"unordered_expr\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"ordered_expr\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"unlt_expr\00", align 1
@.str.106 = private unnamed_addr constant [10 x i8] c"unle_expr\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"ungt_expr\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"unge_expr\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"uneq_expr\00", align 1
@.str.110 = private unnamed_addr constant [10 x i8] c"ltgt_expr\00", align 1
@.str.111 = private unnamed_addr constant [11 x i8] c"range_expr\00", align 1
@.str.112 = private unnamed_addr constant [11 x i8] c"paren_expr\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"convert_expr\00", align 1
@.str.114 = private unnamed_addr constant [24 x i8] c"addr_space_convert_expr\00", align 1
@.str.115 = private unnamed_addr constant [19 x i8] c"fixed_convert_expr\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"nop_expr\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"non_lvalue_expr\00", align 1
@.str.118 = private unnamed_addr constant [18 x i8] c"view_convert_expr\00", align 1
@.str.119 = private unnamed_addr constant [22 x i8] c"compound_literal_expr\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"save_expr\00", align 1
@.str.121 = private unnamed_addr constant [10 x i8] c"addr_expr\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"fdesc_expr\00", align 1
@.str.123 = private unnamed_addr constant [13 x i8] c"complex_expr\00", align 1
@.str.124 = private unnamed_addr constant [10 x i8] c"conj_expr\00", align 1
@.str.125 = private unnamed_addr constant [18 x i8] c"predecrement_expr\00", align 1
@.str.126 = private unnamed_addr constant [18 x i8] c"preincrement_expr\00", align 1
@.str.127 = private unnamed_addr constant [19 x i8] c"postdecrement_expr\00", align 1
@.str.128 = private unnamed_addr constant [19 x i8] c"postincrement_expr\00", align 1
@.str.129 = private unnamed_addr constant [12 x i8] c"va_arg_expr\00", align 1
@.str.130 = private unnamed_addr constant [15 x i8] c"try_catch_expr\00", align 1
@.str.131 = private unnamed_addr constant [12 x i8] c"try_finally\00", align 1
@.str.132 = private unnamed_addr constant [10 x i8] c"decl_expr\00", align 1
@.str.133 = private unnamed_addr constant [11 x i8] c"label_expr\00", align 1
@.str.134 = private unnamed_addr constant [10 x i8] c"goto_expr\00", align 1
@.str.135 = private unnamed_addr constant [12 x i8] c"return_expr\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"exit_expr\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"loop_expr\00", align 1
@.str.138 = private unnamed_addr constant [12 x i8] c"switch_expr\00", align 1
@.str.139 = private unnamed_addr constant [16 x i8] c"case_label_expr\00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"asm_expr\00", align 1
@.str.141 = private unnamed_addr constant [9 x i8] c"ssa_name\00", align 1
@.str.142 = private unnamed_addr constant [11 x i8] c"catch_expr\00", align 1
@.str.143 = private unnamed_addr constant [15 x i8] c"eh_filter_expr\00", align 1
@.str.144 = private unnamed_addr constant [11 x i8] c"scev_known\00", align 1
@.str.145 = private unnamed_addr constant [15 x i8] c"scev_not_known\00", align 1
@.str.146 = private unnamed_addr constant [17 x i8] c"polynomial_chrec\00", align 1
@.str.147 = private unnamed_addr constant [15 x i8] c"statement_list\00", align 1
@.str.148 = private unnamed_addr constant [12 x i8] c"assert_expr\00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"tree_binfo\00", align 1
@.str.150 = private unnamed_addr constant [15 x i8] c"with_size_expr\00", align 1
@.str.151 = private unnamed_addr constant [13 x i8] c"realign_load\00", align 1
@.str.152 = private unnamed_addr constant [15 x i8] c"target_mem_ref\00", align 1
@.str.153 = private unnamed_addr constant [13 x i8] c"omp_parallel\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"omp_task\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"omp_for\00", align 1
@.str.156 = private unnamed_addr constant [13 x i8] c"omp_sections\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"omp_single\00", align 1
@.str.158 = private unnamed_addr constant [12 x i8] c"omp_section\00", align 1
@.str.159 = private unnamed_addr constant [11 x i8] c"omp_master\00", align 1
@.str.160 = private unnamed_addr constant [12 x i8] c"omp_ordered\00", align 1
@.str.161 = private unnamed_addr constant [13 x i8] c"omp_critical\00", align 1
@.str.162 = private unnamed_addr constant [11 x i8] c"omp_atomic\00", align 1
@.str.163 = private unnamed_addr constant [11 x i8] c"omp_clause\00", align 1
@.str.164 = private unnamed_addr constant [15 x i8] c"reduc_max_expr\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"reduc_min_expr\00", align 1
@.str.166 = private unnamed_addr constant [16 x i8] c"reduc_plus_expr\00", align 1
@.str.167 = private unnamed_addr constant [14 x i8] c"dot_prod_expr\00", align 1
@.str.168 = private unnamed_addr constant [15 x i8] c"widen_sum_expr\00", align 1
@.str.169 = private unnamed_addr constant [16 x i8] c"widen_mult_expr\00", align 1
@.str.170 = private unnamed_addr constant [16 x i8] c"vec_lshift_expr\00", align 1
@.str.171 = private unnamed_addr constant [16 x i8] c"vec_rshift_expr\00", align 1
@.str.172 = private unnamed_addr constant [19 x i8] c"widen_mult_hi_expr\00", align 1
@.str.173 = private unnamed_addr constant [19 x i8] c"widen_mult_lo_expr\00", align 1
@.str.174 = private unnamed_addr constant [19 x i8] c"vec_unpack_hi_expr\00", align 1
@.str.175 = private unnamed_addr constant [19 x i8] c"vec_unpack_lo_expr\00", align 1
@.str.176 = private unnamed_addr constant [25 x i8] c"vec_unpack_float_hi_expr\00", align 1
@.str.177 = private unnamed_addr constant [25 x i8] c"vec_unpack_float_lo_expr\00", align 1
@.str.178 = private unnamed_addr constant [20 x i8] c"vec_pack_trunc_expr\00", align 1
@.str.179 = private unnamed_addr constant [18 x i8] c"vec_pack_sat_expr\00", align 1
@.str.180 = private unnamed_addr constant [24 x i8] c"vec_pack_fix_trunc_expr\00", align 1
@.str.181 = private unnamed_addr constant [21 x i8] c"vec_extracteven_expr\00", align 1
@.str.182 = private unnamed_addr constant [20 x i8] c"vec_extractodd_expr\00", align 1
@.str.183 = private unnamed_addr constant [24 x i8] c"vec_interleavehigh_expr\00", align 1
@.str.184 = private unnamed_addr constant [23 x i8] c"vec_interleavelow_expr\00", align 1
@.str.185 = private unnamed_addr constant [13 x i8] c"predict_expr\00", align 1
@.str.186 = private unnamed_addr constant [18 x i8] c"optimization_node\00", align 1
@.str.187 = private unnamed_addr constant [19 x i8] c"target_option_node\00", align 1
@.str.188 = private unnamed_addr constant [7 x i8] c"@dummy\00", align 1
@.str.189 = private unnamed_addr constant [19 x i8] c"c_maybe_const_expr\00", align 1
@.str.190 = private unnamed_addr constant [22 x i8] c"excess_precision_expr\00", align 1
@tree_code_name = dso_local local_unnamed_addr constant [191 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.190, i32 0, i32 0)], align 16, !dbg !2799
@.str.191 = private unnamed_addr constant [12 x i8] c"exceptional\00", align 1
@.str.192 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@.str.193 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.194 = private unnamed_addr constant [12 x i8] c"declaration\00", align 1
@.str.195 = private unnamed_addr constant [10 x i8] c"reference\00", align 1
@.str.196 = private unnamed_addr constant [11 x i8] c"comparison\00", align 1
@.str.197 = private unnamed_addr constant [6 x i8] c"unary\00", align 1
@.str.198 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str.199 = private unnamed_addr constant [10 x i8] c"statement\00", align 1
@.str.200 = private unnamed_addr constant [7 x i8] c"vl_exp\00", align 1
@.str.201 = private unnamed_addr constant [11 x i8] c"expression\00", align 1
@tree_code_class_strings = dso_local local_unnamed_addr constant [11 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.201, i32 0, i32 0)], align 16, !dbg !2803
@omp_clause_num_ops = dso_local local_unnamed_addr constant [16 x i8] c"\00\01\01\01\02\04\01\01\01\01\01\00\00\00\03\00", align 16, !dbg !2808
@.str.202 = private unnamed_addr constant [13 x i8] c"error_clause\00", align 1
@.str.203 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.205 = private unnamed_addr constant [13 x i8] c"firstprivate\00", align 1
@.str.206 = private unnamed_addr constant [12 x i8] c"lastprivate\00", align 1
@.str.207 = private unnamed_addr constant [10 x i8] c"reduction\00", align 1
@.str.208 = private unnamed_addr constant [7 x i8] c"copyin\00", align 1
@.str.209 = private unnamed_addr constant [12 x i8] c"copyprivate\00", align 1
@.str.210 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.211 = private unnamed_addr constant [12 x i8] c"num_threads\00", align 1
@.str.212 = private unnamed_addr constant [9 x i8] c"schedule\00", align 1
@.str.213 = private unnamed_addr constant [7 x i8] c"nowait\00", align 1
@.str.214 = private unnamed_addr constant [8 x i8] c"ordered\00", align 1
@.str.215 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.216 = private unnamed_addr constant [9 x i8] c"collapse\00", align 1
@.str.217 = private unnamed_addr constant [7 x i8] c"untied\00", align 1
@omp_clause_code_name = dso_local local_unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.217, i32 0, i32 0)], align 16, !dbg !2813
@type_hash_table = internal global %struct.htab* null, align 8, !dbg !2888
@debug_expr_for_decl = internal global %struct.htab* null, align 8, !dbg !2900
@value_expr_for_decl = internal global %struct.htab* null, align 8, !dbg !2902
@init_priority_for_decl = internal global %struct.htab* null, align 8, !dbg !2904
@int_cst_hash_table = internal global %struct.htab* null, align 8, !dbg !2892
@int_cst_node = internal global %union.tree_node* null, align 8, !dbg !2890
@cl_option_hash_table = internal global %struct.htab* null, align 8, !dbg !2898
@cl_optimization_node = internal global %union.tree_node* null, align 8, !dbg !2894
@cl_target_option_node = internal global %union.tree_node* null, align 8, !dbg !2896
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@tree_contains_struct = common dso_local local_unnamed_addr global [191 x [64 x i8]] zeroinitializer, align 16, !dbg !2914
@user_label_prefix = external dso_local local_unnamed_addr global i8*, align 8
@.str.218 = private unnamed_addr constant [7 x i8] c"tree.c\00", align 1
@.str.219 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@input_location = external dso_local local_unnamed_addr global i32, align 4
@next_debug_decl_uid = internal global i32 0, align 4, !dbg !2886
@next_decl_uid = internal global i32 0, align 4, !dbg !2884
@next_type_uid = internal global i32 1, align 4, !dbg !2921
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@integer_types = common dso_local local_unnamed_addr global [11 x %union.tree_node*] zeroinitializer, align 16, !dbg !2911
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@dconst1 = external dso_local global %struct.real_value, align 8
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@fconst1 = external dso_local global [8 x %struct.fixed_value], align 16
@global_trees = common dso_local local_unnamed_addr global [131 x %union.tree_node*] zeroinitializer, align 16, !dbg !2906
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@dconst0 = external dso_local global %struct.real_value, align 8
@dconst2 = external dso_local global %struct.real_value, align 8
@dconstm1 = external dso_local global %struct.real_value, align 8
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.220 = private unnamed_addr constant [11 x i8] c"<built-in>\00", align 1
@line_table = external dso_local local_unnamed_addr global %struct.line_maps*, align 8
@.str.221 = private unnamed_addr constant [52 x i8] c"ignoring attributes applied to %qT after definition\00", align 1
@.str.222 = private unnamed_addr constant [16 x i8] c"*free_lang_data\00", align 1
@pass_ipa_free_lang_data = dso_local local_unnamed_addr global %struct.simple_ipa_opt_pass { %struct.opt_pass { i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.222, i32 0, i32 0), i8 ()* null, i32 ()* @free_lang_data, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 2 } }, align 8, !dbg !2816
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@.str.223 = private unnamed_addr constant [10 x i8] c"may_alias\00", align 1
@.str.224 = private unnamed_addr constant [39 x i8] c"arrays of functions are not meaningful\00", align 1
@.str.225 = private unnamed_addr constant [40 x i8] c"function return type cannot be function\00", align 1
@.str.226 = private unnamed_addr constant [13 x i8] c"complex char\00", align 1
@.str.227 = private unnamed_addr constant [20 x i8] c"complex signed char\00", align 1
@.str.228 = private unnamed_addr constant [22 x i8] c"complex unsigned char\00", align 1
@.str.229 = private unnamed_addr constant [18 x i8] c"complex short int\00", align 1
@.str.230 = private unnamed_addr constant [27 x i8] c"complex short unsigned int\00", align 1
@.str.231 = private unnamed_addr constant [12 x i8] c"complex int\00", align 1
@.str.232 = private unnamed_addr constant [21 x i8] c"complex unsigned int\00", align 1
@.str.233 = private unnamed_addr constant [17 x i8] c"complex long int\00", align 1
@.str.234 = private unnamed_addr constant [26 x i8] c"complex long unsigned int\00", align 1
@.str.235 = private unnamed_addr constant [22 x i8] c"complex long long int\00", align 1
@.str.236 = private unnamed_addr constant [31 x i8] c"complex long long unsigned int\00", align 1
@flag_excess_precision = external dso_local local_unnamed_addr global i32, align 4
@ix86_fpmath = external dso_local local_unnamed_addr global i32, align 4
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.237 = private unnamed_addr constant [26 x i8] c"\0A??? tree nodes created\0A\0A\00", align 1
@.str.238 = private unnamed_addr constant [26 x i8] c"(No per-node statistics)\0A\00", align 1
@_sch_istable = external dso_local local_unnamed_addr constant [256 x i16], align 16
@first_global_object_name = external dso_local local_unnamed_addr global i8*, align 8
@libiberty_optr = external dso_local local_unnamed_addr global i8*, align 8
@libiberty_len = external dso_local local_unnamed_addr global i64, align 8
@libiberty_nptr = external dso_local local_unnamed_addr global i8*, align 8
@main_input_filename = external dso_local local_unnamed_addr global i8*, align 8
@weak_global_object_name = external dso_local local_unnamed_addr global i8*, align 8
@.str.239 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.240 = private unnamed_addr constant [11 x i8] c"_%08X_%08X\00", align 1
@.str.241 = private unnamed_addr constant [15 x i8] c"_GLOBAL__%s_%s\00", align 1
@.str.242 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@.str.244 = private unnamed_addr constant [17 x i8] c"__builtin_memcpy\00", align 1
@.str.245 = private unnamed_addr constant [7 x i8] c"memcpy\00", align 1
@.str.246 = private unnamed_addr constant [18 x i8] c"__builtin_memmove\00", align 1
@.str.247 = private unnamed_addr constant [8 x i8] c"memmove\00", align 1
@.str.248 = private unnamed_addr constant [17 x i8] c"__builtin_memcmp\00", align 1
@.str.249 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@.str.250 = private unnamed_addr constant [17 x i8] c"__builtin_memset\00", align 1
@.str.251 = private unnamed_addr constant [7 x i8] c"memset\00", align 1
@.str.252 = private unnamed_addr constant [17 x i8] c"__builtin_alloca\00", align 1
@.str.253 = private unnamed_addr constant [7 x i8] c"alloca\00", align 1
@flag_stack_check = external dso_local local_unnamed_addr global i32, align 4
@.str.254 = private unnamed_addr constant [26 x i8] c"__builtin_init_trampoline\00", align 1
@.str.255 = private unnamed_addr constant [28 x i8] c"__builtin_adjust_trampoline\00", align 1
@.str.256 = private unnamed_addr constant [24 x i8] c"__builtin_nonlocal_goto\00", align 1
@.str.257 = private unnamed_addr constant [23 x i8] c"__builtin_setjmp_setup\00", align 1
@.str.258 = private unnamed_addr constant [28 x i8] c"__builtin_setjmp_dispatcher\00", align 1
@.str.259 = private unnamed_addr constant [26 x i8] c"__builtin_setjmp_receiver\00", align 1
@.str.260 = private unnamed_addr constant [21 x i8] c"__builtin_stack_save\00", align 1
@.str.261 = private unnamed_addr constant [24 x i8] c"__builtin_stack_restore\00", align 1
@.str.262 = private unnamed_addr constant [29 x i8] c"__builtin_profile_func_enter\00", align 1
@.str.263 = private unnamed_addr constant [19 x i8] c"profile_func_enter\00", align 1
@.str.264 = private unnamed_addr constant [28 x i8] c"__builtin_profile_func_exit\00", align 1
@.str.265 = private unnamed_addr constant [18 x i8] c"profile_func_exit\00", align 1
@.str.266 = private unnamed_addr constant [26 x i8] c"__builtin_cxa_end_cleanup\00", align 1
@.str.267 = private unnamed_addr constant [18 x i8] c"__cxa_end_cleanup\00", align 1
@.str.268 = private unnamed_addr constant [24 x i8] c"__builtin_unwind_resume\00", align 1
@.str.269 = private unnamed_addr constant [15 x i8] c"_Unwind_Resume\00", align 1
@.str.270 = private unnamed_addr constant [21 x i8] c"__builtin_eh_pointer\00", align 1
@.str.271 = private unnamed_addr constant [20 x i8] c"__builtin_eh_filter\00", align 1
@.str.272 = private unnamed_addr constant [25 x i8] c"__builtin_eh_copy_values\00", align 1
@mode_name = external dso_local local_unnamed_addr constant [87 x i8*], align 16
@_sch_tolower = external dso_local local_unnamed_addr constant [256 x i8], align 16
@.str.273 = private unnamed_addr constant [6 x i8] c"__mul\00", align 1
@.str.274 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@built_in_names = external dso_local local_unnamed_addr global [721 x i8*], align 16
@.str.275 = private unnamed_addr constant [6 x i8] c"__div\00", align 1
@mode_nunits = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.276 = private unnamed_addr constant [11 x i8] c"artificial\00", align 1
@gcc_eh_personality_decl = internal global %union.tree_node* null, align 8, !dbg !2919
@.str.277 = private unnamed_addr constant [21 x i8] c"__gcc_personality_v0\00", align 1
@gt_ggc_r_gt_tree_h = dso_local local_unnamed_addr constant [5 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%union.tree_node** @gcc_eh_personality_decl to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @cl_target_option_node to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @cl_optimization_node to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @int_cst_node to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2844
@gt_ggc_rc_gt_tree_h = dso_local local_unnamed_addr constant [7 x %struct.ggc_cache_tab] [%struct.ggc_cache_tab { %struct.htab** @init_priority_for_decl, i64 1, i64 8, void (i8*)* @gt_ggc_mx_tree_priority_map, void (i8*)* @gt_pch_nx_tree_priority_map, i32 (i8*)* @tree_map_base_marked_p }, %struct.ggc_cache_tab { %struct.htab** @value_expr_for_decl, i64 1, i64 8, void (i8*)* @gt_ggc_mx_tree_map, void (i8*)* @gt_pch_nx_tree_map, i32 (i8*)* @tree_map_base_marked_p }, %struct.ggc_cache_tab { %struct.htab** @debug_expr_for_decl, i64 1, i64 8, void (i8*)* @gt_ggc_mx_tree_map, void (i8*)* @gt_pch_nx_tree_map, i32 (i8*)* @tree_map_base_marked_p }, %struct.ggc_cache_tab { %struct.htab** @cl_option_hash_table, i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab { %struct.htab** @int_cst_hash_table, i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node, i32 (i8*)* @ggc_marked_p }, %struct.ggc_cache_tab { %struct.htab** @type_hash_table, i64 1, i64 8, void (i8*)* @gt_ggc_mx_type_hash, void (i8*)* @gt_pch_nx_type_hash, i32 (i8*)* @type_hash_marked_p }, %struct.ggc_cache_tab zeroinitializer], align 16, !dbg !2860
@gt_pch_rc_gt_tree_h = dso_local local_unnamed_addr constant [7 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.htab** @init_priority_for_decl to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P17tree_priority_map4htab, void (i8*)* @gt_pch_n_P17tree_priority_map4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @value_expr_for_decl to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P8tree_map4htab, void (i8*)* @gt_pch_n_P8tree_map4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @debug_expr_for_decl to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P8tree_map4htab, void (i8*)* @gt_pch_n_P8tree_map4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @cl_option_hash_table to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P9tree_node4htab, void (i8*)* @gt_pch_n_P9tree_node4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @int_cst_hash_table to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P9tree_node4htab, void (i8*)* @gt_pch_n_P9tree_node4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @type_hash_table to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P9type_hash4htab, void (i8*)* @gt_pch_n_P9type_hash4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2878
@gt_pch_rs_gt_tree_h = dso_local local_unnamed_addr constant [4 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @next_debug_decl_uid to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @next_type_uid to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @next_decl_uid to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2881
@in_lto_p = external dso_local local_unnamed_addr global i8, align 1
@flag_generate_lto = external dso_local local_unnamed_addr global i32, align 4
@global_dc = external dso_local local_unnamed_addr global %struct.diagnostic_context*, align 8
@cgraph_nodes = external dso_local local_unnamed_addr global %struct.cgraph_node*, align 8
@alias_pairs = external dso_local local_unnamed_addr global %struct.VEC_alias_pair_gc*, align 8
@varpool_nodes_queue = external dso_local local_unnamed_addr global %struct.varpool_node*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@debug_info_level = external dso_local local_unnamed_addr global i32, align 4
@.str.278 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.279 = private unnamed_addr constant [50 x i8] c"Type hash: size %ld, %ld elements, %f collisions\0A\00", align 1
@.str.280 = private unnamed_addr constant [62 x i8] c"DECL_DEBUG_EXPR  hash: size %ld, %ld elements, %f collisions\0A\00", align 1
@.str.281 = private unnamed_addr constant [62 x i8] c"DECL_VALUE_EXPR  hash: size %ld, %ld elements, %f collisions\0A\00", align 1
@implicit_built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@.str.282 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.283 = private unnamed_addr constant [9 x i8] c"./tree.h\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2929 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2942, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2943, metadata !DIExpression()), !dbg !2944
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2945
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #7, !dbg !2946
  ret i32 %call, !dbg !2947
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2948 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2952
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #7, !dbg !2953
  ret i32 %call, !dbg !2954
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2955 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3009, metadata !DIExpression()), !dbg !3010
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3011
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3011
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3011
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3011
  %cmp = icmp uge i8* %0, %1, !dbg !3011
  %conv1 = zext i1 %cmp to i64, !dbg !3011
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3011
  %tobool = icmp eq i64 %expval, 0, !dbg !3011
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3011

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !3011
  br label %cond.end, !dbg !3011

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3011
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3011
  %2 = load i8, i8* %0, align 1, !dbg !3011
  %conv3 = zext i8 %2 to i32, !dbg !3011
  br label %cond.end, !dbg !3011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3011
  ret i32 %cond, !dbg !3012
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3013 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3015, metadata !DIExpression()), !dbg !3016
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3017
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3017
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3017
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3017
  %cmp = icmp uge i8* %0, %1, !dbg !3017
  %conv1 = zext i1 %cmp to i64, !dbg !3017
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3017
  %tobool = icmp eq i64 %expval, 0, !dbg !3017
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3017

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !3017
  br label %cond.end, !dbg !3017

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3017
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3017
  %2 = load i8, i8* %0, align 1, !dbg !3017
  %conv3 = zext i8 %2 to i32, !dbg !3017
  br label %cond.end, !dbg !3017

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3017
  ret i32 %cond, !dbg !3018
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !3019 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3020
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !3020
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3020
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !3020
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !3020
  %cmp = icmp uge i8* %1, %2, !dbg !3020
  %conv1 = zext i1 %cmp to i64, !dbg !3020
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3020
  %tobool = icmp eq i64 %expval, 0, !dbg !3020
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3020

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #7, !dbg !3020
  br label %cond.end, !dbg !3020

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3020
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3020
  %3 = load i8, i8* %1, align 1, !dbg !3020
  %conv3 = zext i8 %3 to i32, !dbg !3020
  br label %cond.end, !dbg !3020

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3020
  ret i32 %cond, !dbg !3021
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !3022 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3026, metadata !DIExpression()), !dbg !3027
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3028
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #7, !dbg !3029
  ret i32 %call, !dbg !3030
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3031 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3035, metadata !DIExpression()), !dbg !3037
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3036, metadata !DIExpression()), !dbg !3037
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3038
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3038
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3038
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3038
  %cmp = icmp uge i8* %0, %1, !dbg !3038
  %conv1 = zext i1 %cmp to i64, !dbg !3038
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3038
  %tobool = icmp eq i64 %expval, 0, !dbg !3038
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3038

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3038
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !3038
  br label %cond.end, !dbg !3038

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3038
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3038
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3038
  store i8 %conv2, i8* %0, align 1, !dbg !3038
  %conv6 = and i32 %__c, 255, !dbg !3038
  br label %cond.end, !dbg !3038

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3038
  ret i32 %cond, !dbg !3039
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3040 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3042, metadata !DIExpression()), !dbg !3044
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3043, metadata !DIExpression()), !dbg !3044
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3045
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3045
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3045
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3045
  %cmp = icmp uge i8* %0, %1, !dbg !3045
  %conv1 = zext i1 %cmp to i64, !dbg !3045
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3045
  %tobool = icmp eq i64 %expval, 0, !dbg !3045
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3045

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3045
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !3045
  br label %cond.end, !dbg !3045

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3045
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3045
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3045
  store i8 %conv2, i8* %0, align 1, !dbg !3045
  %conv6 = and i32 %__c, 255, !dbg !3045
  br label %cond.end, !dbg !3045

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3045
  ret i32 %cond, !dbg !3046
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !3047 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3049, metadata !DIExpression()), !dbg !3050
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3051
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !3051
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3051
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !3051
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !3051
  %cmp = icmp uge i8* %1, %2, !dbg !3051
  %conv1 = zext i1 %cmp to i64, !dbg !3051
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3051
  %tobool = icmp eq i64 %expval, 0, !dbg !3051
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3051

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3051
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #7, !dbg !3051
  br label %cond.end, !dbg !3051

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !3051
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3051
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3051
  store i8 %conv4, i8* %1, align 1, !dbg !3051
  %conv6 = and i32 %__c, 255, !dbg !3051
  br label %cond.end, !dbg !3051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3051
  ret i32 %cond, !dbg !3052
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3053 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !3059, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata i64* %__n, metadata !3060, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3061, metadata !DIExpression()), !dbg !3062
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #7, !dbg !3063
  ret i64 %call, !dbg !3064
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3065 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3067, metadata !DIExpression()), !dbg !3068
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3069
  %0 = load i32, i32* %_flags, align 8, !dbg !3069
  %and = lshr i32 %0, 4, !dbg !3069
  %and.lobit = and i32 %and, 1, !dbg !3069
  ret i32 %and.lobit, !dbg !3070
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3071 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3073, metadata !DIExpression()), !dbg !3074
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3075
  %0 = load i32, i32* %_flags, align 8, !dbg !3075
  %and = lshr i32 %0, 5, !dbg !3075
  %and.lobit = and i32 %and, 1, !dbg !3075
  ret i32 %and.lobit, !dbg !3076
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !3077 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3080, metadata !DIExpression()), !dbg !3081
  %__c.off = add i32 %__c, 128, !dbg !3082
  %0 = icmp ult i32 %__c.off, 384, !dbg !3082
  br i1 %0, label %cond.true, label %cond.end, !dbg !3082

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #7, !dbg !3083
  %1 = load i32*, i32** %call, align 8, !dbg !3084
  %idxprom = sext i32 %__c to i64, !dbg !3085
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3085
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3085
  br label %cond.end, !dbg !3086

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3086
  ret i32 %cond, !dbg !3087
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !3088 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3090, metadata !DIExpression()), !dbg !3091
  %__c.off = add i32 %__c, 128, !dbg !3092
  %0 = icmp ult i32 %__c.off, 384, !dbg !3092
  br i1 %0, label %cond.true, label %cond.end, !dbg !3092

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #7, !dbg !3093
  %1 = load i32*, i32** %call, align 8, !dbg !3094
  %idxprom = sext i32 %__c to i64, !dbg !3095
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3095
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3095
  br label %cond.end, !dbg !3096

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3096
  ret i32 %cond, !dbg !3097
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !3098 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3103, metadata !DIExpression()), !dbg !3104
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !3105
  %conv = trunc i64 %call to i32, !dbg !3106
  ret i32 %conv, !dbg !3107
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !3108 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3112, metadata !DIExpression()), !dbg !3113
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !3114
  ret i64 %call, !dbg !3115
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !3116 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3121, metadata !DIExpression()), !dbg !3122
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #7, !dbg !3123
  ret i64 %call, !dbg !3124
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !3125 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !3131, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i8* %__base, metadata !3132, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3133, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i64 %__size, metadata !3134, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !3135, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i64 0, metadata !3136, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3137, metadata !DIExpression()), !dbg !3141
  br label %while.cond, !dbg !3142

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !3143
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !3141
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !3137, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !3136, metadata !DIExpression()), !dbg !3141
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !3144
  br i1 %cmp, label %while.body, label %cleanup, !dbg !3142

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !3145
  %div = lshr i64 %add, 1, !dbg !3147
  call void @llvm.dbg.value(metadata i64 %div, metadata !3138, metadata !DIExpression()), !dbg !3141
  %mul = mul i64 %div, %__size, !dbg !3148
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !3149
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !3139, metadata !DIExpression()), !dbg !3141
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #7, !dbg !3150
  call void @llvm.dbg.value(metadata i32 %call, metadata !3140, metadata !DIExpression()), !dbg !3141
  %cmp1 = icmp slt i32 %call, 0, !dbg !3151
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !3153

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !3154
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !3156

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !3157
  call void @llvm.dbg.value(metadata i64 %add4, metadata !3136, metadata !DIExpression()), !dbg !3141
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !3141
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !3141
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !3137, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !3136, metadata !DIExpression()), !dbg !3141
  br label %while.cond, !dbg !3142, !llvm.loop !3158

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !3141
  ret i8* %retval.0, !dbg !3160
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !3161 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3167, metadata !DIExpression()), !dbg !3168
  %call = tail call double @strtod(i8* %__nptr, i8** null) #7, !dbg !3169
  ret double %call, !dbg !3170
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3171 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3180, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3181, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.value(metadata i32 %base, metadata !3182, metadata !DIExpression()), !dbg !3183
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !3184
  ret i64 %call, !dbg !3185
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3186 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3192, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3193, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.value(metadata i32 %base, metadata !3194, metadata !DIExpression()), !dbg !3195
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !3196
  ret i64 %call, !dbg !3197
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3198 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3209, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3210, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata i32 %base, metadata !3211, metadata !DIExpression()), !dbg !3212
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !3213
  ret i64 %call, !dbg !3214
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3215 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3219, metadata !DIExpression()), !dbg !3222
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3220, metadata !DIExpression()), !dbg !3222
  call void @llvm.dbg.value(metadata i32 %base, metadata !3221, metadata !DIExpression()), !dbg !3222
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !3223
  ret i64 %call, !dbg !3224
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3225 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3265, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3266, metadata !DIExpression()), !dbg !3267
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !3268
  ret i32 %call, !dbg !3269
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3270 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3272, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3273, metadata !DIExpression()), !dbg !3274
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !3275
  ret i32 %call, !dbg !3276
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3277 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3281, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3282, metadata !DIExpression()), !dbg !3283
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #7, !dbg !3284
  ret i32 %call, !dbg !3285
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3286 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3290, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3291, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3292, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3293, metadata !DIExpression()), !dbg !3294
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #7, !dbg !3295
  ret i32 %call, !dbg !3296
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3297 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3301, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3302, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3303, metadata !DIExpression()), !dbg !3304
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3303, metadata !DIExpression(DW_OP_deref)), !dbg !3304
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !3305
  ret i32 %call, !dbg !3306
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3307 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3311, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3312, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3313, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3314, metadata !DIExpression()), !dbg !3315
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3314, metadata !DIExpression(DW_OP_deref)), !dbg !3315
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !3316
  ret i32 %call, !dbg !3317
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3318 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3342, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3343, metadata !DIExpression()), !dbg !3344
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !3345
  ret i32 %call, !dbg !3346
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3347 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3349, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3350, metadata !DIExpression()), !dbg !3351
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !3352
  ret i32 %call, !dbg !3353
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3354 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3358, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3359, metadata !DIExpression()), !dbg !3360
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #7, !dbg !3361
  ret i32 %call, !dbg !3362
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3363 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3367, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3368, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3369, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3370, metadata !DIExpression()), !dbg !3371
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #7, !dbg !3372
  ret i32 %call, !dbg !3373
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @init_ttree() local_unnamed_addr #5 !dbg !3374 {
entry:
  %call = tail call %struct.htab* @htab_create_alloc(i64 1000, i32 (i8*)* nonnull @type_hash_hash, i32 (i8*, i8*)* nonnull @type_hash_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !3377
  store %struct.htab* %call, %struct.htab** @type_hash_table, align 8, !dbg !3378
  %call1 = tail call %struct.htab* @htab_create_alloc(i64 512, i32 (i8*)* nonnull @tree_map_hash, i32 (i8*, i8*)* nonnull @tree_map_base_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !3379
  store %struct.htab* %call1, %struct.htab** @debug_expr_for_decl, align 8, !dbg !3380
  %call2 = tail call %struct.htab* @htab_create_alloc(i64 512, i32 (i8*)* nonnull @tree_map_hash, i32 (i8*, i8*)* nonnull @tree_map_base_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !3381
  store %struct.htab* %call2, %struct.htab** @value_expr_for_decl, align 8, !dbg !3382
  %call3 = tail call %struct.htab* @htab_create_alloc(i64 512, i32 (i8*)* nonnull @tree_map_base_hash, i32 (i8*, i8*)* nonnull @tree_map_base_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !3383
  store %struct.htab* %call3, %struct.htab** @init_priority_for_decl, align 8, !dbg !3384
  %call4 = tail call %struct.htab* @htab_create_alloc(i64 1024, i32 (i8*)* nonnull @int_cst_hash_hash, i32 (i8*, i8*)* nonnull @int_cst_hash_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !3385
  store %struct.htab* %call4, %struct.htab** @int_cst_hash_table, align 8, !dbg !3386
  %call5 = tail call %union.tree_node* @make_node_stat(i32 23) #8, !dbg !3387
  store %union.tree_node* %call5, %union.tree_node** @int_cst_node, align 8, !dbg !3388
  %call6 = tail call %struct.htab* @htab_create_alloc(i64 64, i32 (i8*)* nonnull @cl_option_hash_hash, i32 (i8*, i8*)* nonnull @cl_option_hash_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #7, !dbg !3389
  store %struct.htab* %call6, %struct.htab** @cl_option_hash_table, align 8, !dbg !3390
  %call7 = tail call %union.tree_node* @make_node_stat(i32 186) #8, !dbg !3391
  store %union.tree_node* %call7, %union.tree_node** @cl_optimization_node, align 8, !dbg !3392
  %call8 = tail call %union.tree_node* @make_node_stat(i32 187) #8, !dbg !3393
  store %union.tree_node* %call8, %union.tree_node** @cl_target_option_node, align 8, !dbg !3394
  tail call fastcc void @initialize_tree_contains_struct() #8, !dbg !3395
  %0 = load void ()*, void ()** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 43), align 8, !dbg !3396
  tail call void %0() #7, !dbg !3397
  ret void, !dbg !3398
}

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @type_hash_hash(i8* %item) #5 !dbg !3399 {
entry:
  call void @llvm.dbg.value(metadata i8* %item, metadata !3401, metadata !DIExpression()), !dbg !3402
  %hash = bitcast i8* %item to i64*, !dbg !3403
  %0 = load i64, i64* %hash, align 8, !dbg !3403
  %conv = trunc i64 %0 to i32, !dbg !3404
  ret i32 %conv, !dbg !3405
}

; Function Attrs: nounwind uwtable
define internal i32 @type_hash_eq(i8* %va, i8* %vb) #5 !dbg !3406 {
entry:
  call void @llvm.dbg.value(metadata i8* %va, metadata !3408, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i8* %vb, metadata !3409, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i8* %va, metadata !3410, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i8* %vb, metadata !3412, metadata !DIExpression()), !dbg !3413
  %hash = bitcast i8* %va to i64*, !dbg !3414
  %0 = load i64, i64* %hash, align 8, !dbg !3414
  %hash1 = bitcast i8* %vb to i64*, !dbg !3416
  %1 = load i64, i64* %hash1, align 8, !dbg !3416
  %cmp = icmp eq i64 %0, %1, !dbg !3417
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !3418

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds i8, i8* %va, i64 8, !dbg !3419
  %2 = bitcast i8* %type to i64**, !dbg !3419
  %3 = load i64*, i64** %2, align 8, !dbg !3419
  %bf.load = load i64, i64* %3, align 8, !dbg !3419
  %type2 = getelementptr inbounds i8, i8* %vb, i64 8, !dbg !3420
  %4 = bitcast i8* %type2 to i64**, !dbg !3420
  %5 = load i64*, i64** %4, align 8, !dbg !3420
  %bf.load4 = load i64, i64* %5, align 8, !dbg !3420
  %6 = xor i64 %bf.load, %bf.load4, !dbg !3421
  %7 = and i64 %6, 65535, !dbg !3421
  %cmp7 = icmp eq i64 %7, 0, !dbg !3421
  br i1 %cmp7, label %lor.lhs.false8, label %cleanup, !dbg !3422

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %type10 = getelementptr inbounds i64, i64* %3, i64 2, !dbg !3423
  %8 = bitcast i64* %type10 to %union.tree_node**, !dbg !3423
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !3423
  %type13 = getelementptr inbounds i64, i64* %5, i64 2, !dbg !3424
  %10 = bitcast i64* %type13 to %union.tree_node**, !dbg !3424
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !3424
  %cmp14 = icmp eq %union.tree_node* %9, %11, !dbg !3425
  br i1 %cmp14, label %lor.lhs.false15, label %cleanup, !dbg !3426

lor.lhs.false15:                                  ; preds = %lor.lhs.false8
  %12 = bitcast i8* %type to %struct.tree_type**, !dbg !3427
  %attributes = getelementptr inbounds i64, i64* %3, i64 6, !dbg !3427
  %13 = bitcast i64* %attributes to %union.tree_node**, !dbg !3427
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !3427
  %15 = bitcast i8* %type2 to %struct.tree_type**, !dbg !3428
  %attributes20 = getelementptr inbounds i64, i64* %5, i64 6, !dbg !3428
  %16 = bitcast i64* %attributes20 to %union.tree_node**, !dbg !3428
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !3428
  %call = tail call i32 @attribute_list_equal(%union.tree_node* %14, %union.tree_node* %17) #8, !dbg !3429
  %tobool = icmp eq i32 %call, 0, !dbg !3429
  br i1 %tobool, label %cleanup, label %lor.lhs.false21, !dbg !3430

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %18 = load %struct.tree_type*, %struct.tree_type** %12, align 8, !dbg !3431
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 7, !dbg !3431
  %19 = load i32, i32* %align, align 8, !dbg !3431
  %20 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3432
  %align26 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %20, i64 0, i32 7, !dbg !3432
  %21 = load i32, i32* %align26, align 8, !dbg !3432
  %cmp27 = icmp eq i32 %19, %21, !dbg !3433
  %22 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %20, i64 0, i32 0, i32 0, i32 0, !dbg !3434
  br i1 %cmp27, label %lor.lhs.false28, label %cleanup, !dbg !3434

lor.lhs.false28:                                  ; preds = %lor.lhs.false21
  %23 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 0, i32 0, i32 0, !dbg !3434
  %bf.load31 = load i64, i64* %23, align 8, !dbg !3435
  %bf.cast331 = and i64 %bf.load31, 65535, !dbg !3435
  %cmp34 = icmp eq i64 %bf.cast331, 14, !dbg !3435
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !3435

cond.true:                                        ; preds = %lor.lhs.false28
  %.cast = bitcast %struct.tree_type* %18 to %union.tree_node*, !dbg !3435
  %call36 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !3435
  %.pre = load i64*, i64** %4, align 8, !dbg !3436
  br label %cond.end, !dbg !3435

cond.false:                                       ; preds = %lor.lhs.false28
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 6, !dbg !3435
  %bf.load39 = load i32, i32* %mode, align 4, !dbg !3435
  %bf.lshr = lshr i32 %bf.load39, 16, !dbg !3435
  %bf.clear40 = and i32 %bf.lshr, 255, !dbg !3435
  br label %cond.end, !dbg !3435

cond.end:                                         ; preds = %cond.false, %cond.true
  %24 = phi i64* [ %.pre, %cond.true ], [ %22, %cond.false ], !dbg !3436
  %cond = phi i32 [ %call36, %cond.true ], [ %bf.clear40, %cond.false ], !dbg !3435
  %bf.load43 = load i64, i64* %24, align 8, !dbg !3436
  %bf.cast452 = and i64 %bf.load43, 65535, !dbg !3436
  %cmp46 = icmp eq i64 %bf.cast452, 14, !dbg !3436
  br i1 %cmp46, label %cond.true47, label %cond.false50, !dbg !3436

cond.true47:                                      ; preds = %cond.end
  %.cast3 = bitcast i64* %24 to %union.tree_node*, !dbg !3436
  %call49 = tail call i32 @vector_type_mode(%union.tree_node* %.cast3) #7, !dbg !3436
  br label %cond.end57, !dbg !3436

cond.false50:                                     ; preds = %cond.end
  %type52 = bitcast i64* %24 to %struct.tree_type*, !dbg !3436
  %mode53 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type52, i64 0, i32 6, !dbg !3436
  %bf.load54 = load i32, i32* %mode53, align 4, !dbg !3436
  %bf.lshr55 = lshr i32 %bf.load54, 16, !dbg !3436
  %bf.clear56 = and i32 %bf.lshr55, 255, !dbg !3436
  br label %cond.end57, !dbg !3436

cond.end57:                                       ; preds = %cond.false50, %cond.true47
  %cond58 = phi i32 [ %call49, %cond.true47 ], [ %bf.clear56, %cond.false50 ], !dbg !3436
  %cmp59 = icmp eq i32 %cond, %cond58, !dbg !3437
  br i1 %cmp59, label %lor.lhs.false60, label %cleanup, !dbg !3438

lor.lhs.false60:                                  ; preds = %cond.end57
  %25 = load i64*, i64** %2, align 8, !dbg !3439
  %bf.load63 = load i64, i64* %25, align 8, !dbg !3439
  %bf.cast654 = and i64 %bf.load63, 65535, !dbg !3440
  %cmp66 = icmp eq i64 %bf.cast654, 13, !dbg !3440
  %26 = bitcast i64* %25 to %struct.tree_type*, !dbg !3441
  br i1 %cmp66, label %if.end, label %land.lhs.true, !dbg !3441

land.lhs.true:                                    ; preds = %lor.lhs.false60
  %name = getelementptr inbounds i64, i64* %25, i64 12, !dbg !3442
  %27 = bitcast i64* %name to %union.tree_node**, !dbg !3442
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !3442
  %29 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3443
  %name71 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %29, i64 0, i32 12, !dbg !3443
  %30 = load %union.tree_node*, %union.tree_node** %name71, align 8, !dbg !3443
  %cmp72 = icmp eq %union.tree_node* %28, %30, !dbg !3444
  br i1 %cmp72, label %if.end, label %cleanup, !dbg !3445

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false60
  %31 = trunc i64 %bf.load63 to i16, !dbg !3446
  switch i16 %31, label %sw.default [
    i16 19, label %cleanup
    i16 13, label %cleanup
    i16 10, label %cleanup
    i16 12, label %cleanup
    i16 14, label %sw.bb78
    i16 6, label %sw.bb91
    i16 8, label %sw.bb140
    i16 9, label %sw.bb140
    i16 7, label %sw.bb140
    i16 11, label %sw.bb172
    i16 5, label %sw.bb187
    i16 21, label %sw.bb196
    i16 15, label %sw.bb258
    i16 16, label %sw.bb267
    i16 17, label %sw.bb267
    i16 18, label %sw.bb267
    i16 20, label %sw.bb318
  ], !dbg !3447

sw.bb78:                                          ; preds = %if.end
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 6, !dbg !3448
  %bf.load81 = load i32, i32* %precision, align 4, !dbg !3448
  %bf.clear82 = and i32 %bf.load81, 1023, !dbg !3448
  %sh_prom = zext i32 %bf.clear82 to i64, !dbg !3448
  %shl = shl i64 1, %sh_prom, !dbg !3448
  %32 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3450
  %precision85 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 6, !dbg !3450
  %bf.load86 = load i32, i32* %precision85, align 4, !dbg !3450
  %bf.clear87 = and i32 %bf.load86, 1023, !dbg !3450
  %sh_prom88 = zext i32 %bf.clear87 to i64, !dbg !3450
  %shl89 = shl i64 1, %sh_prom88, !dbg !3450
  %cmp90 = icmp eq i64 %shl, %shl89, !dbg !3451
  %conv = zext i1 %cmp90 to i32, !dbg !3451
  br label %cleanup, !dbg !3452

sw.bb91:                                          ; preds = %if.end
  %values = getelementptr inbounds i64, i64* %25, i64 3, !dbg !3453
  %33 = bitcast i64* %values to %union.tree_node**, !dbg !3453
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !3453
  %35 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3455
  %values96 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %35, i64 0, i32 1, !dbg !3455
  %36 = load %union.tree_node*, %union.tree_node** %values96, align 8, !dbg !3455
  %cmp97 = icmp eq %union.tree_node* %34, %36, !dbg !3456
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3457
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3457
  br i1 %cmp97, label %sw.bb140, label %land.lhs.true99, !dbg !3457

land.lhs.true99:                                  ; preds = %sw.bb91
  %tobool103 = icmp eq %union.tree_node* %34, null, !dbg !3458
  br i1 %tobool103, label %cleanup, label %land.lhs.true104, !dbg !3459

land.lhs.true104:                                 ; preds = %land.lhs.true99
  %bf.load109 = load i64, i64* %37, align 8, !dbg !3460
  %bf.cast11113 = and i64 %bf.load109, 65535, !dbg !3461
  %cmp112 = icmp eq i64 %bf.cast11113, 2, !dbg !3461
  br i1 %cmp112, label %land.lhs.true114, label %cleanup, !dbg !3462

land.lhs.true114:                                 ; preds = %land.lhs.true104
  %tobool118 = icmp eq %union.tree_node* %36, null, !dbg !3463
  br i1 %tobool118, label %cleanup, label %land.lhs.true119, !dbg !3464

land.lhs.true119:                                 ; preds = %land.lhs.true114
  %bf.load124 = load i64, i64* %38, align 8, !dbg !3465
  %bf.cast12614 = and i64 %bf.load124, 65535, !dbg !3466
  %cmp127 = icmp eq i64 %bf.cast12614, 2, !dbg !3466
  br i1 %cmp127, label %land.lhs.true129, label %cleanup, !dbg !3467

land.lhs.true129:                                 ; preds = %land.lhs.true119
  %call136 = tail call i32 @type_list_equal(%union.tree_node* nonnull %34, %union.tree_node* nonnull %36) #8, !dbg !3468
  %tobool137 = icmp eq i32 %call136, 0, !dbg !3468
  br i1 %tobool137, label %cleanup, label %land.lhs.true129.sw.bb140_crit_edge, !dbg !3469

land.lhs.true129.sw.bb140_crit_edge:              ; preds = %land.lhs.true129
  %.pre16 = load %struct.tree_type*, %struct.tree_type** %12, align 8, !dbg !3470
  br label %sw.bb140, !dbg !3469

sw.bb140:                                         ; preds = %land.lhs.true129.sw.bb140_crit_edge, %sw.bb91, %if.end, %if.end, %if.end
  %39 = phi %struct.tree_type* [ %.pre16, %land.lhs.true129.sw.bb140_crit_edge ], [ %26, %sw.bb91 ], [ %26, %if.end ], [ %26, %if.end ], [ %26, %if.end ]
  %40 = phi %struct.tree_type* [ %.pre16, %land.lhs.true129.sw.bb140_crit_edge ], [ %26, %sw.bb91 ], [ %26, %if.end ], [ %26, %if.end ], [ %26, %if.end ]
  %41 = phi %struct.tree_type* [ %.pre16, %land.lhs.true129.sw.bb140_crit_edge ], [ %26, %sw.bb91 ], [ %26, %if.end ], [ %26, %if.end ], [ %26, %if.end ]
  %42 = phi %struct.tree_type* [ %.pre16, %land.lhs.true129.sw.bb140_crit_edge ], [ %26, %sw.bb91 ], [ %26, %if.end ], [ %26, %if.end ], [ %26, %if.end ], !dbg !3470
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %42, i64 0, i32 14, !dbg !3470
  %43 = load %union.tree_node*, %union.tree_node** %maxval, align 8, !dbg !3470
  %44 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3471
  %maxval145 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %44, i64 0, i32 14, !dbg !3471
  %45 = load %union.tree_node*, %union.tree_node** %maxval145, align 8, !dbg !3471
  %cmp146 = icmp eq %union.tree_node* %43, %45, !dbg !3472
  br i1 %cmp146, label %land.rhs, label %lor.lhs.false148, !dbg !3473

lor.lhs.false148:                                 ; preds = %sw.bb140
  %maxval151 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %41, i64 0, i32 14, !dbg !3474
  %46 = load %union.tree_node*, %union.tree_node** %maxval151, align 8, !dbg !3474
  %call155 = tail call i32 @tree_int_cst_equal(%union.tree_node* %46, %union.tree_node* %45) #8, !dbg !3475
  %tobool156 = icmp eq i32 %call155, 0, !dbg !3475
  br i1 %tobool156, label %land.end, label %lor.lhs.false148.land.rhs_crit_edge, !dbg !3476

lor.lhs.false148.land.rhs_crit_edge:              ; preds = %lor.lhs.false148
  %.pre17 = load %struct.tree_type*, %struct.tree_type** %12, align 8, !dbg !3477
  %.pre18 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3478
  br label %land.rhs, !dbg !3476

land.rhs:                                         ; preds = %lor.lhs.false148.land.rhs_crit_edge, %sw.bb140
  %47 = phi %struct.tree_type* [ %.pre17, %lor.lhs.false148.land.rhs_crit_edge ], [ %39, %sw.bb140 ]
  %48 = phi %struct.tree_type* [ %.pre18, %lor.lhs.false148.land.rhs_crit_edge ], [ %44, %sw.bb140 ], !dbg !3478
  %49 = phi %struct.tree_type* [ %.pre17, %lor.lhs.false148.land.rhs_crit_edge ], [ %40, %sw.bb140 ], !dbg !3477
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %49, i64 0, i32 13, !dbg !3477
  %50 = load %union.tree_node*, %union.tree_node** %minval, align 8, !dbg !3477
  %minval161 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %48, i64 0, i32 13, !dbg !3478
  %51 = load %union.tree_node*, %union.tree_node** %minval161, align 8, !dbg !3478
  %cmp162 = icmp eq %union.tree_node* %50, %51, !dbg !3479
  br i1 %cmp162, label %land.end, label %lor.rhs, !dbg !3480

lor.rhs:                                          ; preds = %land.rhs
  %minval166 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %47, i64 0, i32 13, !dbg !3481
  %52 = load %union.tree_node*, %union.tree_node** %minval166, align 8, !dbg !3481
  %call170 = tail call i32 @tree_int_cst_equal(%union.tree_node* %52, %union.tree_node* %51) #8, !dbg !3482
  %tobool171 = icmp ne i32 %call170, 0, !dbg !3480
  %phitmp12 = zext i1 %tobool171 to i32, !dbg !3480
  br label %land.end, !dbg !3480

land.end:                                         ; preds = %lor.lhs.false148, %land.rhs, %lor.rhs
  %53 = phi i32 [ 0, %lor.lhs.false148 ], [ 1, %land.rhs ], [ %phitmp12, %lor.rhs ]
  br label %cleanup, !dbg !3483

sw.bb172:                                         ; preds = %if.end
  %54 = load i64*, i64** %4, align 8, !dbg !3484
  %bf.load181 = load i64, i64* %54, align 8, !dbg !3484
  %bf.lshr17615 = xor i64 %bf.load63, %bf.load181, !dbg !3485
  %55 = lshr i64 %bf.lshr17615, 31, !dbg !3485
  %56 = trunc i64 %55 to i32, !dbg !3485
  %57 = and i32 %56, 1, !dbg !3485
  %58 = xor i32 %57, 1, !dbg !3485
  br label %cleanup, !dbg !3486

sw.bb187:                                         ; preds = %if.end
  %maxval190 = getelementptr inbounds i64, i64* %25, i64 14, !dbg !3487
  %59 = bitcast i64* %maxval190 to %union.tree_node**, !dbg !3487
  %60 = load %union.tree_node*, %union.tree_node** %59, align 8, !dbg !3487
  %61 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3488
  %maxval193 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %61, i64 0, i32 14, !dbg !3488
  %62 = load %union.tree_node*, %union.tree_node** %maxval193, align 8, !dbg !3488
  %cmp194 = icmp eq %union.tree_node* %60, %62, !dbg !3489
  %conv195 = zext i1 %cmp194 to i32, !dbg !3489
  br label %cleanup, !dbg !3490

sw.bb196:                                         ; preds = %if.end
  %maxval199 = getelementptr inbounds i64, i64* %25, i64 14, !dbg !3491
  %63 = bitcast i64* %maxval199 to %union.tree_node**, !dbg !3491
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8, !dbg !3491
  %65 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3492
  %maxval202 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %65, i64 0, i32 14, !dbg !3492
  %66 = load %union.tree_node*, %union.tree_node** %maxval202, align 8, !dbg !3492
  %cmp203 = icmp eq %union.tree_node* %64, %66, !dbg !3493
  br i1 %cmp203, label %land.rhs205, label %land.end256, !dbg !3494

land.rhs205:                                      ; preds = %sw.bb196
  %values208 = getelementptr inbounds i64, i64* %25, i64 3, !dbg !3495
  %67 = bitcast i64* %values208 to %union.tree_node**, !dbg !3495
  %68 = load %union.tree_node*, %union.tree_node** %67, align 8, !dbg !3495
  %values211 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %65, i64 0, i32 1, !dbg !3496
  %69 = load %union.tree_node*, %union.tree_node** %values211, align 8, !dbg !3496
  %cmp212 = icmp eq %union.tree_node* %68, %69, !dbg !3497
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3498
  %71 = getelementptr inbounds %union.tree_node, %union.tree_node* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3498
  br i1 %cmp212, label %land.end256, label %lor.rhs214, !dbg !3498

lor.rhs214:                                       ; preds = %land.rhs205
  %tobool218 = icmp eq %union.tree_node* %68, null, !dbg !3499
  br i1 %tobool218, label %land.end256, label %land.lhs.true219, !dbg !3500

land.lhs.true219:                                 ; preds = %lor.rhs214
  %bf.load224 = load i64, i64* %70, align 8, !dbg !3501
  %bf.cast22610 = and i64 %bf.load224, 65535, !dbg !3502
  %cmp227 = icmp eq i64 %bf.cast22610, 2, !dbg !3502
  br i1 %cmp227, label %land.lhs.true229, label %land.end256, !dbg !3503

land.lhs.true229:                                 ; preds = %land.lhs.true219
  %tobool233 = icmp eq %union.tree_node* %69, null, !dbg !3504
  br i1 %tobool233, label %land.end256, label %land.lhs.true234, !dbg !3505

land.lhs.true234:                                 ; preds = %land.lhs.true229
  %bf.load239 = load i64, i64* %71, align 8, !dbg !3506
  %bf.cast24111 = and i64 %bf.load239, 65535, !dbg !3507
  %cmp242 = icmp eq i64 %bf.cast24111, 2, !dbg !3507
  br i1 %cmp242, label %land.rhs244, label %land.end256, !dbg !3508

land.rhs244:                                      ; preds = %land.lhs.true234
  %call251 = tail call i32 @type_list_equal(%union.tree_node* nonnull %68, %union.tree_node* nonnull %69) #8, !dbg !3509
  %tobool252 = icmp ne i32 %call251, 0, !dbg !3508
  %phitmp9 = zext i1 %tobool252 to i32
  br label %land.end256

land.end256:                                      ; preds = %land.lhs.true229, %lor.rhs214, %land.rhs205, %land.rhs244, %land.lhs.true234, %land.lhs.true219, %sw.bb196
  %72 = phi i32 [ 0, %sw.bb196 ], [ 1, %land.rhs205 ], [ 0, %land.lhs.true234 ], [ 0, %land.lhs.true229 ], [ 0, %land.lhs.true219 ], [ 0, %lor.rhs214 ], [ %phitmp9, %land.rhs244 ]
  br label %cleanup, !dbg !3510

sw.bb258:                                         ; preds = %if.end
  %values261 = getelementptr inbounds i64, i64* %25, i64 3, !dbg !3511
  %73 = bitcast i64* %values261 to %union.tree_node**, !dbg !3511
  %74 = load %union.tree_node*, %union.tree_node** %73, align 8, !dbg !3511
  %75 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3512
  %values264 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %75, i64 0, i32 1, !dbg !3512
  %76 = load %union.tree_node*, %union.tree_node** %values264, align 8, !dbg !3512
  %cmp265 = icmp eq %union.tree_node* %74, %76, !dbg !3513
  %conv266 = zext i1 %cmp265 to i32, !dbg !3513
  br label %cleanup, !dbg !3514

sw.bb267:                                         ; preds = %if.end, %if.end, %if.end
  %values270 = getelementptr inbounds i64, i64* %25, i64 3, !dbg !3515
  %77 = bitcast i64* %values270 to %union.tree_node**, !dbg !3515
  %78 = load %union.tree_node*, %union.tree_node** %77, align 8, !dbg !3515
  %79 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3516
  %values273 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %79, i64 0, i32 1, !dbg !3516
  %80 = load %union.tree_node*, %union.tree_node** %values273, align 8, !dbg !3516
  %cmp274 = icmp eq %union.tree_node* %78, %80, !dbg !3517
  %81 = getelementptr inbounds %union.tree_node, %union.tree_node* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3518
  %82 = getelementptr inbounds %union.tree_node, %union.tree_node* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3518
  br i1 %cmp274, label %lor.end317, label %lor.rhs276, !dbg !3518

lor.rhs276:                                       ; preds = %sw.bb267
  %tobool280 = icmp eq %union.tree_node* %78, null, !dbg !3519
  br i1 %tobool280, label %lor.end317, label %land.lhs.true281, !dbg !3520

land.lhs.true281:                                 ; preds = %lor.rhs276
  %bf.load286 = load i64, i64* %81, align 8, !dbg !3521
  %bf.cast2887 = and i64 %bf.load286, 65535, !dbg !3522
  %cmp289 = icmp eq i64 %bf.cast2887, 2, !dbg !3522
  br i1 %cmp289, label %land.lhs.true291, label %lor.end317, !dbg !3523

land.lhs.true291:                                 ; preds = %land.lhs.true281
  %tobool295 = icmp eq %union.tree_node* %80, null, !dbg !3524
  br i1 %tobool295, label %lor.end317, label %land.lhs.true296, !dbg !3525

land.lhs.true296:                                 ; preds = %land.lhs.true291
  %bf.load301 = load i64, i64* %82, align 8, !dbg !3526
  %bf.cast3038 = and i64 %bf.load301, 65535, !dbg !3527
  %cmp304 = icmp eq i64 %bf.cast3038, 2, !dbg !3527
  br i1 %cmp304, label %land.rhs306, label %lor.end317, !dbg !3528

land.rhs306:                                      ; preds = %land.lhs.true296
  %call313 = tail call i32 @type_list_equal(%union.tree_node* nonnull %78, %union.tree_node* nonnull %80) #8, !dbg !3529
  %tobool314 = icmp ne i32 %call313, 0, !dbg !3528
  %phitmp = zext i1 %tobool314 to i32
  br label %lor.end317

lor.end317:                                       ; preds = %land.lhs.true291, %lor.rhs276, %land.lhs.true281, %land.lhs.true296, %land.rhs306, %sw.bb267
  %83 = phi i32 [ 1, %sw.bb267 ], [ 0, %land.lhs.true296 ], [ 0, %land.lhs.true291 ], [ 0, %land.lhs.true281 ], [ 0, %lor.rhs276 ], [ %phitmp, %land.rhs306 ]
  br label %cleanup, !dbg !3530

sw.bb318:                                         ; preds = %if.end
  %values321 = getelementptr inbounds i64, i64* %25, i64 3, !dbg !3531
  %84 = bitcast i64* %values321 to %union.tree_node**, !dbg !3531
  %85 = load %union.tree_node*, %union.tree_node** %84, align 8, !dbg !3531
  %86 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !3533
  %values324 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %86, i64 0, i32 1, !dbg !3533
  %87 = load %union.tree_node*, %union.tree_node** %values324, align 8, !dbg !3533
  %cmp325 = icmp eq %union.tree_node* %85, %87, !dbg !3534
  %88 = getelementptr inbounds %union.tree_node, %union.tree_node* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3535
  %89 = getelementptr inbounds %union.tree_node, %union.tree_node* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3535
  br i1 %cmp325, label %sw.epilog, label %lor.lhs.false327, !dbg !3535

lor.lhs.false327:                                 ; preds = %sw.bb318
  %tobool331 = icmp eq %union.tree_node* %85, null, !dbg !3536
  br i1 %tobool331, label %cleanup, label %land.lhs.true332, !dbg !3537

land.lhs.true332:                                 ; preds = %lor.lhs.false327
  %bf.load337 = load i64, i64* %88, align 8, !dbg !3538
  %bf.cast3395 = and i64 %bf.load337, 65535, !dbg !3539
  %cmp340 = icmp eq i64 %bf.cast3395, 2, !dbg !3539
  br i1 %cmp340, label %land.lhs.true342, label %cleanup, !dbg !3540

land.lhs.true342:                                 ; preds = %land.lhs.true332
  %tobool346 = icmp eq %union.tree_node* %87, null, !dbg !3541
  br i1 %tobool346, label %cleanup, label %land.lhs.true347, !dbg !3542

land.lhs.true347:                                 ; preds = %land.lhs.true342
  %bf.load352 = load i64, i64* %89, align 8, !dbg !3543
  %bf.cast3546 = and i64 %bf.load352, 65535, !dbg !3544
  %cmp355 = icmp eq i64 %bf.cast3546, 2, !dbg !3544
  br i1 %cmp355, label %land.lhs.true357, label %cleanup, !dbg !3545

land.lhs.true357:                                 ; preds = %land.lhs.true347
  %call364 = tail call i32 @type_list_equal(%union.tree_node* nonnull %85, %union.tree_node* nonnull %87) #8, !dbg !3546
  %tobool365 = icmp eq i32 %call364, 0, !dbg !3546
  br i1 %tobool365, label %cleanup, label %sw.epilog, !dbg !3547

sw.default:                                       ; preds = %if.end
  br label %cleanup, !dbg !3548

sw.epilog:                                        ; preds = %land.lhs.true357, %sw.bb318
  %90 = load i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 11), align 8, !dbg !3549
  %cmp368 = icmp eq i8 (%union.tree_node*, %union.tree_node*)* %90, null, !dbg !3551
  br i1 %cmp368, label %cleanup, label %if.then370, !dbg !3552

if.then370:                                       ; preds = %sw.epilog
  %91 = bitcast i8* %type to %union.tree_node**, !dbg !3553
  %92 = load %union.tree_node*, %union.tree_node** %91, align 8, !dbg !3553
  %93 = bitcast i8* %type2 to %union.tree_node**, !dbg !3554
  %94 = load %union.tree_node*, %union.tree_node** %93, align 8, !dbg !3554
  %call373 = tail call zeroext i8 %90(%union.tree_node* %92, %union.tree_node* %94) #7, !dbg !3555
  %conv374 = zext i8 %call373 to i32, !dbg !3555
  br label %cleanup, !dbg !3556

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true129, %land.lhs.true114, %land.lhs.true99, %sw.epilog, %land.lhs.true357, %land.lhs.true342, %lor.lhs.false327, %cond.end57, %lor.lhs.false21, %lor.lhs.false15, %lor.lhs.false8, %lor.lhs.false, %entry, %land.lhs.true332, %land.lhs.true347, %land.lhs.true104, %land.lhs.true119, %if.end, %if.end, %if.end, %if.end, %if.then370, %sw.default, %lor.end317, %sw.bb258, %land.end256, %sw.bb187, %sw.bb172, %land.end, %sw.bb78
  %retval.0 = phi i32 [ 0, %sw.default ], [ %conv374, %if.then370 ], [ %83, %lor.end317 ], [ %conv266, %sw.bb258 ], [ %72, %land.end256 ], [ %conv195, %sw.bb187 ], [ %58, %sw.bb172 ], [ %53, %land.end ], [ %conv, %sw.bb78 ], [ 0, %land.lhs.true ], [ 0, %cond.end57 ], [ 0, %lor.lhs.false21 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false8 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 0, %land.lhs.true129 ], [ 0, %land.lhs.true119 ], [ 0, %land.lhs.true114 ], [ 0, %land.lhs.true104 ], [ 0, %land.lhs.true99 ], [ 0, %land.lhs.true357 ], [ 0, %land.lhs.true347 ], [ 0, %land.lhs.true342 ], [ 0, %land.lhs.true332 ], [ 0, %lor.lhs.false327 ], [ 1, %sw.epilog ], !dbg !3413
  ret i32 %retval.0, !dbg !3557
}

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_map_hash(i8* %item) #5 !dbg !3558 {
entry:
  call void @llvm.dbg.value(metadata i8* %item, metadata !3562, metadata !DIExpression()), !dbg !3563
  %hash = getelementptr inbounds i8, i8* %item, i64 8, !dbg !3564
  %0 = bitcast i8* %hash to i32*, !dbg !3564
  %1 = load i32, i32* %0, align 8, !dbg !3564
  ret i32 %1, !dbg !3565
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_map_base_eq(i8* %va, i8* %vb) #5 !dbg !3566 {
entry:
  call void @llvm.dbg.value(metadata i8* %va, metadata !3568, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.value(metadata i8* %vb, metadata !3569, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.value(metadata i8* %va, metadata !3570, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.value(metadata i8* %vb, metadata !3572, metadata !DIExpression()), !dbg !3573
  %from = bitcast i8* %va to %union.tree_node**, !dbg !3574
  %0 = load %union.tree_node*, %union.tree_node** %from, align 8, !dbg !3574
  %from1 = bitcast i8* %vb to %union.tree_node**, !dbg !3575
  %1 = load %union.tree_node*, %union.tree_node** %from1, align 8, !dbg !3575
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !3576
  %conv = zext i1 %cmp to i32, !dbg !3576
  ret i32 %conv, !dbg !3577
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_map_base_hash(i8* %item) #5 !dbg !3578 {
entry:
  call void @llvm.dbg.value(metadata i8* %item, metadata !3580, metadata !DIExpression()), !dbg !3581
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !3582
  %1 = bitcast i8* %item to i8**, !dbg !3583
  %2 = load i8*, i8** %1, align 8, !dbg !3583
  %call = tail call i32 %0(i8* %2) #7, !dbg !3582
  ret i32 %call, !dbg !3584
}

; Function Attrs: nounwind uwtable
define internal i32 @int_cst_hash_hash(i8* %x) #5 !dbg !3585 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3587, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i8* %x, metadata !3588, metadata !DIExpression()), !dbg !3590
  %high = getelementptr inbounds i8, i8* %x, i64 32, !dbg !3591
  %0 = bitcast i8* %high to i64*, !dbg !3591
  %1 = load i64, i64* %0, align 8, !dbg !3591
  %int_cst3 = getelementptr inbounds i8, i8* %x, i64 24, !dbg !3592
  %low = bitcast i8* %int_cst3 to i64*, !dbg !3592
  %2 = load i64, i64* %low, align 8, !dbg !3592
  %xor = xor i64 %1, %2, !dbg !3593
  %3 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !3594
  %type = getelementptr inbounds i8, i8* %x, i64 16, !dbg !3595
  %4 = bitcast i8* %type to i8**, !dbg !3595
  %5 = load i8*, i8** %4, align 8, !dbg !3595
  %call = tail call i32 %3(i8* %5) #7, !dbg !3594
  %6 = trunc i64 %xor to i32, !dbg !3596
  %conv5 = xor i32 %call, %6, !dbg !3596
  ret i32 %conv5, !dbg !3597
}

; Function Attrs: nounwind uwtable
define internal i32 @int_cst_hash_eq(i8* %x, i8* %y) #5 !dbg !3598 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3600, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i8* %y, metadata !3601, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i8* %x, metadata !3602, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i8* %y, metadata !3603, metadata !DIExpression()), !dbg !3604
  %type = getelementptr inbounds i8, i8* %x, i64 16, !dbg !3605
  %0 = bitcast i8* %type to %union.tree_node**, !dbg !3605
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3605
  %type2 = getelementptr inbounds i8, i8* %y, i64 16, !dbg !3606
  %2 = bitcast i8* %type2 to %union.tree_node**, !dbg !3606
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !3606
  %cmp = icmp eq %union.tree_node* %1, %3, !dbg !3607
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !3608

land.lhs.true:                                    ; preds = %entry
  %high = getelementptr inbounds i8, i8* %x, i64 32, !dbg !3609
  %4 = bitcast i8* %high to i64*, !dbg !3609
  %5 = load i64, i64* %4, align 8, !dbg !3609
  %high6 = getelementptr inbounds i8, i8* %y, i64 32, !dbg !3610
  %6 = bitcast i8* %high6 to i64*, !dbg !3610
  %7 = load i64, i64* %6, align 8, !dbg !3610
  %cmp7 = icmp eq i64 %5, %7, !dbg !3611
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !3612

land.rhs:                                         ; preds = %land.lhs.true
  %int_cst9 = getelementptr inbounds i8, i8* %x, i64 24, !dbg !3613
  %low = bitcast i8* %int_cst9 to i64*, !dbg !3613
  %8 = load i64, i64* %low, align 8, !dbg !3613
  %int_cst11 = getelementptr inbounds i8, i8* %y, i64 24, !dbg !3614
  %low12 = bitcast i8* %int_cst11 to i64*, !dbg !3614
  %9 = load i64, i64* %low12, align 8, !dbg !3614
  %cmp13 = icmp eq i64 %8, %9, !dbg !3615
  %phitmp = zext i1 %cmp13 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i32 [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %10, !dbg !3616
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @make_node_stat(i32 %code) local_unnamed_addr #5 !dbg !3617 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3621, metadata !DIExpression()), !dbg !3625
  %idxprom = sext i32 %code to i64, !dbg !3626
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !3626
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3626
  call void @llvm.dbg.value(metadata i32 %0, metadata !3623, metadata !DIExpression()), !dbg !3625
  %call = tail call i64 @tree_code_size(i32 %code) #8, !dbg !3627
  call void @llvm.dbg.value(metadata i64 %call, metadata !3624, metadata !DIExpression()), !dbg !3625
  %call1 = tail call i8* @ggc_alloc_stat(i64 %call) #7, !dbg !3628
  %1 = bitcast i8* %call1 to %union.tree_node*, !dbg !3628
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3622, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3622, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3622, metadata !DIExpression()), !dbg !3625
  %call3 = tail call i8* @memset(i8* %call1, i32 0, i64 %call) #7, !dbg !3630
  %2 = bitcast i8* %call1 to i64*, !dbg !3631
  %bf.load = load i64, i64* %2, align 8, !dbg !3631
  %3 = and i32 %code, 65535, !dbg !3631
  %bf.value = zext i32 %3 to i64, !dbg !3631
  %bf.clear = and i64 %bf.load, -65536, !dbg !3631
  %bf.set = or i64 %bf.clear, %bf.value, !dbg !3631
  store i64 %bf.set, i64* %2, align 8, !dbg !3631
  switch i32 %0, label %sw.epilog66 [
    i32 8, label %sw.bb
    i32 3, label %sw.bb8
    i32 2, label %sw.bb41
    i32 1, label %sw.bb54
    i32 10, label %sw.bb59
  ], !dbg !3632

sw.bb:                                            ; preds = %entry
  %bf.set7 = or i64 %bf.set, 65536, !dbg !3633
  store i64 %bf.set7, i64* %2, align 8, !dbg !3633
  br label %sw.epilog66, !dbg !3635

sw.bb8:                                           ; preds = %entry
  %idxprom9 = zext i32 %code to i64, !dbg !3636
  %arrayidx11 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom9, i64 10, !dbg !3636
  %4 = load i8, i8* %arrayidx11, align 2, !dbg !3636
  %tobool = icmp eq i8 %4, 0, !dbg !3636
  br i1 %tobool, label %if.end23, label %if.then12, !dbg !3638

if.then12:                                        ; preds = %sw.bb8
  %cmp13 = icmp eq i32 %code, 29, !dbg !3639
  %align = getelementptr inbounds i8, i8* %call1, i64 64, !dbg !3642
  %5 = bitcast i8* %align to i32*, !dbg !3642
  br i1 %cmp13, label %if.then14, label %if.else19, !dbg !3643

if.then14:                                        ; preds = %if.then12
  store i32 8, i32* %5, align 8, !dbg !3644
  %mode = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !3646
  %6 = bitcast i8* %mode to i64*, !dbg !3646
  %bf.load16 = load i64, i64* %6, align 8, !dbg !3647
  %bf.clear17 = and i64 %bf.load16, -256, !dbg !3647
  %bf.set18 = or i64 %bf.clear17, 14, !dbg !3647
  store i64 %bf.set18, i64* %6, align 8, !dbg !3647
  br label %if.end23, !dbg !3648

if.else19:                                        ; preds = %if.then12
  store i32 1, i32* %5, align 8, !dbg !3649
  br label %if.end23

if.end23:                                         ; preds = %sw.bb8, %if.then14, %if.else19
  %7 = load i32, i32* @input_location, align 4, !dbg !3650
  %locus = getelementptr inbounds i8, i8* %call1, i64 24, !dbg !3651
  %8 = bitcast i8* %locus to i32*, !dbg !3651
  store i32 %7, i32* %8, align 8, !dbg !3652
  %cmp27 = icmp eq i32 %3, 37, !dbg !3653
  br i1 %cmp27, label %if.then28, label %if.else30, !dbg !3655

if.then28:                                        ; preds = %if.end23
  %9 = load i32, i32* @next_debug_decl_uid, align 4, !dbg !3656
  %dec = add nsw i32 %9, -1, !dbg !3656
  store i32 %dec, i32* @next_debug_decl_uid, align 4, !dbg !3656
  %uid = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !3657
  %10 = bitcast i8* %uid to i32*, !dbg !3657
  store i32 %dec, i32* %10, align 4, !dbg !3658
  br label %if.end33, !dbg !3657

if.else30:                                        ; preds = %if.end23
  %11 = load i32, i32* @next_decl_uid, align 4, !dbg !3659
  %inc = add nsw i32 %11, 1, !dbg !3659
  store i32 %inc, i32* @next_decl_uid, align 4, !dbg !3659
  %uid32 = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !3660
  %12 = bitcast i8* %uid32 to i32*, !dbg !3660
  store i32 %11, i32* %12, align 4, !dbg !3661
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.then28
  %cmp38 = icmp eq i32 %3, 30, !dbg !3662
  br i1 %cmp38, label %if.then39, label %sw.epilog66, !dbg !3664

if.then39:                                        ; preds = %if.end33
  %label_decl_uid = getelementptr inbounds i8, i8* %call1, i64 120, !dbg !3665
  %13 = bitcast i8* %label_decl_uid to i32*, !dbg !3665
  store i32 -1, i32* %13, align 8, !dbg !3666
  br label %sw.epilog66, !dbg !3665

sw.bb41:                                          ; preds = %entry
  %14 = load i32, i32* @next_type_uid, align 4, !dbg !3667
  %inc42 = add nsw i32 %14, 1, !dbg !3667
  store i32 %inc42, i32* @next_type_uid, align 4, !dbg !3667
  %uid44 = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !3668
  %15 = bitcast i8* %uid44 to i32*, !dbg !3668
  store i32 %14, i32* %15, align 8, !dbg !3669
  %align46 = getelementptr inbounds i8, i8* %call1, i64 64, !dbg !3670
  %16 = bitcast i8* %align46 to i32*, !dbg !3670
  store i32 8, i32* %16, align 8, !dbg !3671
  %bf.clear49 = and i64 %bf.set, -4398046511105, !dbg !3672
  store i64 %bf.clear49, i64* %2, align 8, !dbg !3672
  %main_variant = getelementptr inbounds i8, i8* %call1, i64 128, !dbg !3673
  %17 = bitcast i8* %main_variant to i8**, !dbg !3674
  store i8* %call1, i8** %17, align 8, !dbg !3674
  %canonical = getelementptr inbounds i8, i8* %call1, i64 152, !dbg !3675
  %18 = bitcast i8* %canonical to i8**, !dbg !3676
  store i8* %call1, i8** %18, align 8, !dbg !3676
  %attributes = getelementptr inbounds i8, i8* %call1, i64 48, !dbg !3677
  %19 = bitcast i8* %attributes to %union.tree_node**, !dbg !3677
  store %union.tree_node* null, %union.tree_node** %19, align 8, !dbg !3678
  %20 = load void (%union.tree_node*)*, void (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 15), align 8, !dbg !3679
  tail call void %20(%union.tree_node* %1) #7, !dbg !3680
  %alias_set = getelementptr inbounds i8, i8* %call1, i64 68, !dbg !3681
  %21 = bitcast i8* %alias_set to i32*, !dbg !3681
  store i32 -1, i32* %21, align 4, !dbg !3682
  br label %sw.epilog66, !dbg !3683

sw.bb54:                                          ; preds = %entry
  %bf.set58 = or i64 %bf.set, 131072, !dbg !3684
  store i64 %bf.set58, i64* %2, align 8, !dbg !3684
  br label %sw.epilog66, !dbg !3685

sw.bb59:                                          ; preds = %entry
  switch i32 %code, label %sw.epilog66 [
    i32 54, label %sw.bb60
    i32 53, label %sw.bb60
    i32 129, label %sw.bb60
    i32 125, label %sw.bb60
    i32 126, label %sw.bb60
    i32 127, label %sw.bb60
    i32 128, label %sw.bb60
  ], !dbg !3686

sw.bb60:                                          ; preds = %sw.bb59, %sw.bb59, %sw.bb59, %sw.bb59, %sw.bb59, %sw.bb59, %sw.bb59
  %bf.set64 = or i64 %bf.set, 65536, !dbg !3687
  store i64 %bf.set64, i64* %2, align 8, !dbg !3687
  br label %sw.epilog66, !dbg !3689

sw.epilog66:                                      ; preds = %entry, %sw.bb60, %sw.bb59, %if.end33, %if.then39, %sw.bb54, %sw.bb41, %sw.bb
  ret %union.tree_node* %1, !dbg !3690
}

; Function Attrs: nounwind uwtable
define internal i32 @cl_option_hash_hash(i8* %x) #5 !dbg !3691 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3693, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i8* %x, metadata !3694, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i64 0, metadata !3697, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i32 0, metadata !3698, metadata !DIExpression()), !dbg !3699
  %0 = bitcast i8* %x to i64*, !dbg !3700
  %bf.load = load i64, i64* %0, align 8, !dbg !3700
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3702
  %cmp = icmp eq i64 %bf.cast1, 186, !dbg !3702
  br i1 %cmp, label %if.then, label %if.else, !dbg !3703

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x, metadata !3694, metadata !DIExpression()), !dbg !3699
  %opts = getelementptr inbounds i8, i8* %x, i64 24, !dbg !3704
  call void @llvm.dbg.value(metadata i8* %opts, metadata !3695, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i64 184, metadata !3697, metadata !DIExpression()), !dbg !3699
  br label %if.end9, !dbg !3706

if.else:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 187, !dbg !3707
  br i1 %cmp5, label %if.then6, label %if.else8, !dbg !3709

if.then6:                                         ; preds = %if.else
  %opts7 = getelementptr inbounds i8, i8* %x, i64 24, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %opts7, metadata !3695, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i64 24, metadata !3697, metadata !DIExpression()), !dbg !3699
  br label %if.end9, !dbg !3712

if.else8:                                         ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 10485, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3713
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.else8, %if.then
  %p.1 = phi i8* [ %opts, %if.then ], [ %opts7, %if.then6 ], [ undef, %if.else8 ], !dbg !3714
  %len.1 = phi i64 [ 184, %if.then ], [ 24, %if.then6 ], [ 0, %if.else8 ], !dbg !3714
  call void @llvm.dbg.value(metadata i64 %len.1, metadata !3697, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !3695, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i64 0, metadata !3696, metadata !DIExpression()), !dbg !3699
  br label %for.cond, !dbg !3715

for.cond:                                         ; preds = %for.inc, %if.end9
  %i.0 = phi i64 [ 0, %if.end9 ], [ %inc, %for.inc ], !dbg !3717
  %hash.0 = phi i32 [ 0, %if.end9 ], [ %hash.1, %for.inc ], !dbg !3699
  call void @llvm.dbg.value(metadata i32 %hash.0, metadata !3698, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3696, metadata !DIExpression()), !dbg !3699
  %exitcond = icmp eq i64 %i.0, %len.1, !dbg !3718
  br i1 %exitcond, label %for.end, label %for.body, !dbg !3720

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8, i8* %p.1, i64 %i.0, !dbg !3721
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3721
  %tobool = icmp eq i8 %1, 0, !dbg !3721
  br i1 %tobool, label %for.inc, label %if.then11, !dbg !3723

if.then11:                                        ; preds = %for.body
  %shl = shl i32 %hash.0, 4, !dbg !3724
  %shl12 = shl i64 %i.0, 2, !dbg !3725
  %conv14 = sext i8 %1 to i64, !dbg !3726
  %or = or i64 %shl12, %conv14, !dbg !3727
  %2 = trunc i64 %or to i32, !dbg !3728
  %conv15 = xor i32 %shl, %2, !dbg !3728
  call void @llvm.dbg.value(metadata i32 %conv15, metadata !3698, metadata !DIExpression()), !dbg !3699
  br label %for.inc, !dbg !3729

for.inc:                                          ; preds = %for.body, %if.then11
  %hash.1 = phi i32 [ %conv15, %if.then11 ], [ %hash.0, %for.body ], !dbg !3699
  call void @llvm.dbg.value(metadata i32 %hash.1, metadata !3698, metadata !DIExpression()), !dbg !3699
  %inc = add nuw nsw i64 %i.0, 1, !dbg !3730
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3696, metadata !DIExpression()), !dbg !3699
  br label %for.cond, !dbg !3731, !llvm.loop !3732

for.end:                                          ; preds = %for.cond
  %hash.0.lcssa = phi i32 [ %hash.0, %for.cond ], !dbg !3699
  call void @llvm.dbg.value(metadata i32 %hash.0.lcssa, metadata !3698, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i32 %hash.0.lcssa, metadata !3698, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i32 %hash.0.lcssa, metadata !3698, metadata !DIExpression()), !dbg !3699
  ret i32 %hash.0.lcssa, !dbg !3734
}

; Function Attrs: nounwind uwtable
define internal i32 @cl_option_hash_eq(i8* %x, i8* %y) #5 !dbg !3735 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3737, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %y, metadata !3738, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %x, metadata !3739, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %y, metadata !3740, metadata !DIExpression()), !dbg !3744
  %0 = bitcast i8* %x to i64*, !dbg !3745
  %bf.load = load i64, i64* %0, align 8, !dbg !3745
  %1 = bitcast i8* %y to i64*, !dbg !3747
  %bf.load2 = load i64, i64* %1, align 8, !dbg !3747
  %2 = xor i64 %bf.load, %bf.load2, !dbg !3748
  %3 = and i64 %2, 65535, !dbg !3748
  %cmp = icmp eq i64 %3, 0, !dbg !3748
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3749

if.end:                                           ; preds = %entry
  %bf.cast81 = and i64 %bf.load, 65535, !dbg !3750
  %cmp9 = icmp eq i64 %bf.cast81, 186, !dbg !3750
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !3752

if.then10:                                        ; preds = %if.end
  %opts = getelementptr inbounds i8, i8* %x, i64 24, !dbg !3753
  call void @llvm.dbg.value(metadata i8* %opts, metadata !3741, metadata !DIExpression()), !dbg !3744
  %opts12 = getelementptr inbounds i8, i8* %y, i64 24, !dbg !3755
  call void @llvm.dbg.value(metadata i8* %opts12, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i64 184, metadata !3743, metadata !DIExpression()), !dbg !3744
  br label %if.end24, !dbg !3756

if.else:                                          ; preds = %if.end
  %cmp17 = icmp eq i64 %bf.cast81, 187, !dbg !3757
  br i1 %cmp17, label %if.then18, label %if.else22, !dbg !3759

if.then18:                                        ; preds = %if.else
  %opts19 = getelementptr inbounds i8, i8* %x, i64 24, !dbg !3760
  call void @llvm.dbg.value(metadata i8* %opts19, metadata !3741, metadata !DIExpression()), !dbg !3744
  %opts21 = getelementptr inbounds i8, i8* %y, i64 24, !dbg !3762
  call void @llvm.dbg.value(metadata i8* %opts21, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i64 24, metadata !3743, metadata !DIExpression()), !dbg !3744
  br label %if.end24, !dbg !3763

if.else22:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 10527, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3764
  br label %if.end24

if.end24:                                         ; preds = %if.then18, %if.else22, %if.then10
  %xp.1 = phi i8* [ %opts, %if.then10 ], [ %opts19, %if.then18 ], [ undef, %if.else22 ], !dbg !3765
  %yp.1 = phi i8* [ %opts12, %if.then10 ], [ %opts21, %if.then18 ], [ undef, %if.else22 ], !dbg !3765
  %len.1 = phi i64 [ 184, %if.then10 ], [ 24, %if.then18 ], [ 24, %if.else22 ], !dbg !3765
  call void @llvm.dbg.value(metadata i64 %len.1, metadata !3743, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %yp.1, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %xp.1, metadata !3741, metadata !DIExpression()), !dbg !3744
  %call = tail call i32 @memcmp(i8* %xp.1, i8* %yp.1, i64 %len.1) #7, !dbg !3766
  %cmp25 = icmp eq i32 %call, 0, !dbg !3767
  %conv = zext i1 %cmp25 to i32, !dbg !3767
  br label %cleanup, !dbg !3768

cleanup:                                          ; preds = %entry, %if.end24
  %retval.0 = phi i32 [ %conv, %if.end24 ], [ 0, %entry ], !dbg !3744
  ret i32 %retval.0, !dbg !3769
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_tree_contains_struct() unnamed_addr #5 !dbg !3770 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3772, metadata !DIExpression()), !dbg !3778
  br label %for.cond, !dbg !3779

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3780
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3772, metadata !DIExpression()), !dbg !3778
  %exitcond = icmp eq i64 %indvars.iv, 188, !dbg !3781
  br i1 %exitcond, label %for.end, label %for.body, !dbg !3782

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3773, metadata !DIExpression()), !dbg !3783
  %0 = trunc i64 %indvars.iv to i32, !dbg !3784
  %call = tail call fastcc i32 @tree_node_structure_for_code(i32 %0) #8, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %call, metadata !3777, metadata !DIExpression()), !dbg !3783
  %idxprom1 = zext i32 %call to i64, !dbg !3785
  %arrayidx2 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 %idxprom1, !dbg !3785
  store i8 1, i8* %arrayidx2, align 1, !dbg !3786
  switch i32 %call, label %sw.default [
    i32 1, label %do.body
    i32 2, label %do.body8
    i32 3, label %do.body8
    i32 4, label %do.body8
    i32 5, label %do.body8
    i32 6, label %do.body8
    i32 7, label %do.body8
    i32 8, label %do.body8
    i32 9, label %do.body8
    i32 22, label %do.body8
    i32 23, label %do.body8
    i32 24, label %do.body8
    i32 25, label %do.body8
    i32 26, label %do.body8
    i32 27, label %do.body8
    i32 28, label %do.body8
    i32 29, label %do.body8
    i32 30, label %do.body8
    i32 31, label %do.body8
    i32 32, label %do.body8
    i32 33, label %do.body8
    i32 10, label %do.body22
    i32 11, label %do.body42
    i32 12, label %do.body69
    i32 13, label %do.body105
    i32 16, label %do.body105
    i32 17, label %do.body105
    i32 18, label %do.body105
    i32 19, label %do.body105
    i32 14, label %do.body135
    i32 15, label %do.body162
    i32 20, label %do.body200
    i32 21, label %do.body200
  ], !dbg !3787

do.body:                                          ; preds = %for.body
  %arrayidx5 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3788
  store i8 1, i8* %arrayidx5, align 16, !dbg !3788
  br label %for.inc, !dbg !3791

do.body8:                                         ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %arrayidx11 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3792
  store i8 1, i8* %arrayidx11, align 16, !dbg !3792
  %arrayidx16 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 1, !dbg !3795
  store i8 1, i8* %arrayidx16, align 1, !dbg !3795
  br label %for.inc, !dbg !3796

do.body22:                                        ; preds = %for.body
  %arrayidx25 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3797
  store i8 1, i8* %arrayidx25, align 16, !dbg !3797
  %arrayidx30 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 1, !dbg !3801
  store i8 1, i8* %arrayidx30, align 1, !dbg !3801
  %arrayidx35 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 9, !dbg !3802
  store i8 1, i8* %arrayidx35, align 1, !dbg !3802
  br label %for.inc, !dbg !3803

do.body42:                                        ; preds = %for.body
  %arrayidx45 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3804
  store i8 1, i8* %arrayidx45, align 16, !dbg !3804
  %arrayidx50 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 1, !dbg !3809
  store i8 1, i8* %arrayidx50, align 1, !dbg !3809
  %arrayidx55 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 9, !dbg !3810
  store i8 1, i8* %arrayidx55, align 1, !dbg !3810
  %arrayidx60 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 10, !dbg !3811
  store i8 1, i8* %arrayidx60, align 2, !dbg !3811
  br label %for.inc, !dbg !3812

do.body69:                                        ; preds = %for.body
  %arrayidx72 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3813
  store i8 1, i8* %arrayidx72, align 16, !dbg !3813
  %arrayidx77 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 1, !dbg !3820
  store i8 1, i8* %arrayidx77, align 1, !dbg !3820
  %arrayidx82 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 9, !dbg !3821
  store i8 1, i8* %arrayidx82, align 1, !dbg !3821
  %arrayidx87 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 10, !dbg !3822
  store i8 1, i8* %arrayidx87, align 2, !dbg !3822
  %arrayidx92 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 11, !dbg !3823
  store i8 1, i8* %arrayidx92, align 1, !dbg !3823
  %arrayidx97 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 13, !dbg !3824
  store i8 1, i8* %arrayidx97, align 1, !dbg !3824
  br label %for.inc, !dbg !3825

do.body105:                                       ; preds = %for.body, %for.body, %for.body, %for.body, %for.body
  %arrayidx108 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3826
  store i8 1, i8* %arrayidx108, align 16, !dbg !3826
  %arrayidx113 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 1, !dbg !3832
  store i8 1, i8* %arrayidx113, align 1, !dbg !3832
  %arrayidx118 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 9, !dbg !3833
  store i8 1, i8* %arrayidx118, align 1, !dbg !3833
  %arrayidx123 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 10, !dbg !3834
  store i8 1, i8* %arrayidx123, align 2, !dbg !3834
  %arrayidx128 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 11, !dbg !3835
  store i8 1, i8* %arrayidx128, align 1, !dbg !3835
  br label %for.inc, !dbg !3836

do.body135:                                       ; preds = %for.body
  %arrayidx138 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3837
  store i8 1, i8* %arrayidx138, align 16, !dbg !3837
  %arrayidx143 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 1, !dbg !3842
  store i8 1, i8* %arrayidx143, align 1, !dbg !3842
  %arrayidx148 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 9, !dbg !3843
  store i8 1, i8* %arrayidx148, align 1, !dbg !3843
  %arrayidx153 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 10, !dbg !3844
  store i8 1, i8* %arrayidx153, align 2, !dbg !3844
  br label %for.inc, !dbg !3845

do.body162:                                       ; preds = %for.body
  %arrayidx165 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3846
  store i8 1, i8* %arrayidx165, align 16, !dbg !3846
  %arrayidx170 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 1, !dbg !3853
  store i8 1, i8* %arrayidx170, align 1, !dbg !3853
  %arrayidx175 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 9, !dbg !3854
  store i8 1, i8* %arrayidx175, align 1, !dbg !3854
  %arrayidx180 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 10, !dbg !3855
  store i8 1, i8* %arrayidx180, align 2, !dbg !3855
  %arrayidx185 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 11, !dbg !3856
  store i8 1, i8* %arrayidx185, align 1, !dbg !3856
  %arrayidx190 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 13, !dbg !3857
  store i8 1, i8* %arrayidx190, align 1, !dbg !3857
  br label %for.inc, !dbg !3858

do.body200:                                       ; preds = %for.body, %for.body
  %arrayidx203 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 0, !dbg !3859
  store i8 1, i8* %arrayidx203, align 16, !dbg !3859
  %arrayidx208 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 1, !dbg !3867
  store i8 1, i8* %arrayidx208, align 1, !dbg !3867
  %arrayidx213 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 9, !dbg !3868
  store i8 1, i8* %arrayidx213, align 1, !dbg !3868
  %arrayidx218 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 10, !dbg !3869
  store i8 1, i8* %arrayidx218, align 2, !dbg !3869
  %arrayidx223 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 11, !dbg !3870
  store i8 1, i8* %arrayidx223, align 1, !dbg !3870
  %arrayidx228 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 13, !dbg !3871
  store i8 1, i8* %arrayidx228, align 1, !dbg !3871
  %arrayidx233 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %indvars.iv, i64 12, !dbg !3872
  store i8 1, i8* %arrayidx233, align 4, !dbg !3872
  br label %for.inc, !dbg !3873

sw.default:                                       ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 473, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3874
  br label %for.inc, !dbg !3875

for.inc:                                          ; preds = %do.body, %do.body8, %do.body22, %do.body42, %do.body69, %do.body105, %do.body135, %do.body162, %do.body200, %sw.default
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3876
  call void @llvm.dbg.value(metadata i32 undef, metadata !3772, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3778
  br label %for.cond, !dbg !3877, !llvm.loop !3878

for.end:                                          ; preds = %for.cond
  %1 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 29, i64 12), align 4, !dbg !3880
  %tobool = icmp eq i8 %1, 0, !dbg !3880
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3880

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3880
  br label %cond.end, !dbg !3880

cond.end:                                         ; preds = %for.end, %cond.true
  %2 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 40, i64 12), align 4, !dbg !3881
  %tobool236 = icmp eq i8 %2, 0, !dbg !3881
  br i1 %tobool236, label %cond.true237, label %cond.end239, !dbg !3881

cond.true237:                                     ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 479, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3881
  br label %cond.end239, !dbg !3881

cond.end239:                                      ; preds = %cond.end, %cond.true237
  %3 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 35, i64 12), align 4, !dbg !3882
  %tobool241 = icmp eq i8 %3, 0, !dbg !3882
  br i1 %tobool241, label %cond.true242, label %cond.end244, !dbg !3882

cond.true242:                                     ; preds = %cond.end239
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 480, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3882
  br label %cond.end244, !dbg !3882

cond.end244:                                      ; preds = %cond.end239, %cond.true242
  %4 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 33, i64 10), align 2, !dbg !3883
  %tobool246 = icmp eq i8 %4, 0, !dbg !3883
  br i1 %tobool246, label %cond.true247, label %cond.end249, !dbg !3883

cond.true247:                                     ; preds = %cond.end244
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 481, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3883
  br label %cond.end249, !dbg !3883

cond.end249:                                      ; preds = %cond.end244, %cond.true247
  %5 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 10), align 2, !dbg !3884
  %tobool251 = icmp eq i8 %5, 0, !dbg !3884
  br i1 %tobool251, label %cond.true252, label %cond.end254, !dbg !3884

cond.true252:                                     ; preds = %cond.end249
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 482, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3884
  br label %cond.end254, !dbg !3884

cond.end254:                                      ; preds = %cond.end249, %cond.true252
  %6 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 34, i64 10), align 2, !dbg !3885
  %tobool256 = icmp eq i8 %6, 0, !dbg !3885
  br i1 %tobool256, label %cond.true257, label %cond.end259, !dbg !3885

cond.true257:                                     ; preds = %cond.end254
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 483, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3885
  br label %cond.end259, !dbg !3885

cond.end259:                                      ; preds = %cond.end254, %cond.true257
  %7 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 36, i64 10), align 2, !dbg !3886
  %tobool261 = icmp eq i8 %7, 0, !dbg !3886
  br i1 %tobool261, label %cond.true262, label %cond.end264, !dbg !3886

cond.true262:                                     ; preds = %cond.end259
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 484, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3886
  br label %cond.end264, !dbg !3886

cond.end264:                                      ; preds = %cond.end259, %cond.true262
  %8 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 29, i64 10), align 2, !dbg !3887
  %tobool266 = icmp eq i8 %8, 0, !dbg !3887
  br i1 %tobool266, label %cond.true267, label %cond.end269, !dbg !3887

cond.true267:                                     ; preds = %cond.end264
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 485, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3887
  br label %cond.end269, !dbg !3887

cond.end269:                                      ; preds = %cond.end264, %cond.true267
  %9 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 35, i64 10), align 2, !dbg !3888
  %tobool271 = icmp eq i8 %9, 0, !dbg !3888
  br i1 %tobool271, label %cond.true272, label %cond.end274, !dbg !3888

cond.true272:                                     ; preds = %cond.end269
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3888
  br label %cond.end274, !dbg !3888

cond.end274:                                      ; preds = %cond.end269, %cond.true272
  %10 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 40, i64 10), align 2, !dbg !3889
  %tobool276 = icmp eq i8 %10, 0, !dbg !3889
  br i1 %tobool276, label %cond.true277, label %cond.end279, !dbg !3889

cond.true277:                                     ; preds = %cond.end274
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 487, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3889
  br label %cond.end279, !dbg !3889

cond.end279:                                      ; preds = %cond.end274, %cond.true277
  %11 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 30, i64 10), align 2, !dbg !3890
  %tobool281 = icmp eq i8 %11, 0, !dbg !3890
  br i1 %tobool281, label %cond.true282, label %cond.end284, !dbg !3890

cond.true282:                                     ; preds = %cond.end279
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 488, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3890
  br label %cond.end284, !dbg !3890

cond.end284:                                      ; preds = %cond.end279, %cond.true282
  %12 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 31, i64 10), align 2, !dbg !3891
  %tobool286 = icmp eq i8 %12, 0, !dbg !3891
  br i1 %tobool286, label %cond.true287, label %cond.end289, !dbg !3891

cond.true287:                                     ; preds = %cond.end284
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 489, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3891
  br label %cond.end289, !dbg !3891

cond.end289:                                      ; preds = %cond.end284, %cond.true287
  %13 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 33, i64 11), align 1, !dbg !3892
  %tobool291 = icmp eq i8 %13, 0, !dbg !3892
  br i1 %tobool291, label %cond.true292, label %cond.end294, !dbg !3892

cond.true292:                                     ; preds = %cond.end289
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 490, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3892
  br label %cond.end294, !dbg !3892

cond.end294:                                      ; preds = %cond.end289, %cond.true292
  %14 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !dbg !3893
  %tobool296 = icmp eq i8 %14, 0, !dbg !3893
  br i1 %tobool296, label %cond.true297, label %cond.end299, !dbg !3893

cond.true297:                                     ; preds = %cond.end294
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 491, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3893
  br label %cond.end299, !dbg !3893

cond.end299:                                      ; preds = %cond.end294, %cond.true297
  %15 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 34, i64 11), align 1, !dbg !3894
  %tobool301 = icmp eq i8 %15, 0, !dbg !3894
  br i1 %tobool301, label %cond.true302, label %cond.end304, !dbg !3894

cond.true302:                                     ; preds = %cond.end299
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 492, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3894
  br label %cond.end304, !dbg !3894

cond.end304:                                      ; preds = %cond.end299, %cond.true302
  %16 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 36, i64 11), align 1, !dbg !3895
  %tobool306 = icmp eq i8 %16, 0, !dbg !3895
  br i1 %tobool306, label %cond.true307, label %cond.end309, !dbg !3895

cond.true307:                                     ; preds = %cond.end304
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 493, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3895
  br label %cond.end309, !dbg !3895

cond.end309:                                      ; preds = %cond.end304, %cond.true307
  %17 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 29, i64 11), align 1, !dbg !3896
  %tobool311 = icmp eq i8 %17, 0, !dbg !3896
  br i1 %tobool311, label %cond.true312, label %cond.end314, !dbg !3896

cond.true312:                                     ; preds = %cond.end309
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 494, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3896
  br label %cond.end314, !dbg !3896

cond.end314:                                      ; preds = %cond.end309, %cond.true312
  %18 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 30, i64 11), align 1, !dbg !3897
  %tobool316 = icmp eq i8 %18, 0, !dbg !3897
  br i1 %tobool316, label %cond.true317, label %cond.end319, !dbg !3897

cond.true317:                                     ; preds = %cond.end314
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 495, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3897
  br label %cond.end319, !dbg !3897

cond.end319:                                      ; preds = %cond.end314, %cond.true317
  %19 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 33, i64 9), align 1, !dbg !3898
  %tobool321 = icmp eq i8 %19, 0, !dbg !3898
  br i1 %tobool321, label %cond.true322, label %cond.end324, !dbg !3898

cond.true322:                                     ; preds = %cond.end319
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 496, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3898
  br label %cond.end324, !dbg !3898

cond.end324:                                      ; preds = %cond.end319, %cond.true322
  %20 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 9), align 1, !dbg !3899
  %tobool326 = icmp eq i8 %20, 0, !dbg !3899
  br i1 %tobool326, label %cond.true327, label %cond.end329, !dbg !3899

cond.true327:                                     ; preds = %cond.end324
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 497, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3899
  br label %cond.end329, !dbg !3899

cond.end329:                                      ; preds = %cond.end324, %cond.true327
  %21 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 34, i64 9), align 1, !dbg !3900
  %tobool331 = icmp eq i8 %21, 0, !dbg !3900
  br i1 %tobool331, label %cond.true332, label %cond.end334, !dbg !3900

cond.true332:                                     ; preds = %cond.end329
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 498, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3900
  br label %cond.end334, !dbg !3900

cond.end334:                                      ; preds = %cond.end329, %cond.true332
  %22 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 36, i64 9), align 1, !dbg !3901
  %tobool336 = icmp eq i8 %22, 0, !dbg !3901
  br i1 %tobool336, label %cond.true337, label %cond.end339, !dbg !3901

cond.true337:                                     ; preds = %cond.end334
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3901
  br label %cond.end339, !dbg !3901

cond.end339:                                      ; preds = %cond.end334, %cond.true337
  %23 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 29, i64 9), align 1, !dbg !3902
  %tobool341 = icmp eq i8 %23, 0, !dbg !3902
  br i1 %tobool341, label %cond.true342, label %cond.end344, !dbg !3902

cond.true342:                                     ; preds = %cond.end339
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 500, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3902
  br label %cond.end344, !dbg !3902

cond.end344:                                      ; preds = %cond.end339, %cond.true342
  %24 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 35, i64 9), align 1, !dbg !3903
  %tobool346 = icmp eq i8 %24, 0, !dbg !3903
  br i1 %tobool346, label %cond.true347, label %cond.end349, !dbg !3903

cond.true347:                                     ; preds = %cond.end344
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 501, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3903
  br label %cond.end349, !dbg !3903

cond.end349:                                      ; preds = %cond.end344, %cond.true347
  %25 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 40, i64 9), align 1, !dbg !3904
  %tobool351 = icmp eq i8 %25, 0, !dbg !3904
  br i1 %tobool351, label %cond.true352, label %cond.end354, !dbg !3904

cond.true352:                                     ; preds = %cond.end349
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 502, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3904
  br label %cond.end354, !dbg !3904

cond.end354:                                      ; preds = %cond.end349, %cond.true352
  %26 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 30, i64 9), align 1, !dbg !3905
  %tobool356 = icmp eq i8 %26, 0, !dbg !3905
  br i1 %tobool356, label %cond.true357, label %cond.end359, !dbg !3905

cond.true357:                                     ; preds = %cond.end354
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 503, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3905
  br label %cond.end359, !dbg !3905

cond.end359:                                      ; preds = %cond.end354, %cond.true357
  %27 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 31, i64 9), align 1, !dbg !3906
  %tobool361 = icmp eq i8 %27, 0, !dbg !3906
  br i1 %tobool361, label %cond.true362, label %cond.end364, !dbg !3906

cond.true362:                                     ; preds = %cond.end359
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 504, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3906
  br label %cond.end364, !dbg !3906

cond.end364:                                      ; preds = %cond.end359, %cond.true362
  %28 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 13), align 1, !dbg !3907
  %tobool366 = icmp eq i8 %28, 0, !dbg !3907
  br i1 %tobool366, label %cond.true367, label %cond.end369, !dbg !3907

cond.true367:                                     ; preds = %cond.end364
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 505, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3907
  br label %cond.end369, !dbg !3907

cond.end369:                                      ; preds = %cond.end364, %cond.true367
  %29 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 29, i64 13), align 1, !dbg !3908
  %tobool371 = icmp eq i8 %29, 0, !dbg !3908
  br i1 %tobool371, label %cond.true372, label %cond.end374, !dbg !3908

cond.true372:                                     ; preds = %cond.end369
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 506, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3908
  br label %cond.end374, !dbg !3908

cond.end374:                                      ; preds = %cond.end369, %cond.true372
  %30 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 35, i64 13), align 1, !dbg !3909
  %tobool376 = icmp eq i8 %30, 0, !dbg !3909
  br i1 %tobool376, label %cond.true377, label %cond.end379, !dbg !3909

cond.true377:                                     ; preds = %cond.end374
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 507, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3909
  br label %cond.end379, !dbg !3909

cond.end379:                                      ; preds = %cond.end374, %cond.true377
  %31 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 40, i64 13), align 1, !dbg !3910
  %tobool381 = icmp eq i8 %31, 0, !dbg !3910
  br i1 %tobool381, label %cond.true382, label %cond.end384, !dbg !3910

cond.true382:                                     ; preds = %cond.end379
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 508, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3910
  br label %cond.end384, !dbg !3910

cond.end384:                                      ; preds = %cond.end379, %cond.true382
  %32 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 15), align 1, !dbg !3911
  %tobool386 = icmp eq i8 %32, 0, !dbg !3911
  br i1 %tobool386, label %cond.true387, label %cond.end389, !dbg !3911

cond.true387:                                     ; preds = %cond.end384
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 509, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3911
  br label %cond.end389, !dbg !3911

cond.end389:                                      ; preds = %cond.end384, %cond.true387
  %33 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 31, i64 14), align 2, !dbg !3912
  %tobool391 = icmp eq i8 %33, 0, !dbg !3912
  br i1 %tobool391, label %cond.true392, label %cond.end394, !dbg !3912

cond.true392:                                     ; preds = %cond.end389
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3912
  br label %cond.end394, !dbg !3912

cond.end394:                                      ; preds = %cond.end389, %cond.true392
  %34 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 34, i64 16), align 16, !dbg !3913
  %tobool396 = icmp eq i8 %34, 0, !dbg !3913
  br i1 %tobool396, label %cond.true397, label %cond.end399, !dbg !3913

cond.true397:                                     ; preds = %cond.end394
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 511, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3913
  br label %cond.end399, !dbg !3913

cond.end399:                                      ; preds = %cond.end394, %cond.true397
  %35 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 30, i64 17), align 1, !dbg !3914
  %tobool401 = icmp eq i8 %35, 0, !dbg !3914
  br i1 %tobool401, label %cond.true402, label %cond.end404, !dbg !3914

cond.true402:                                     ; preds = %cond.end399
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 512, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3914
  br label %cond.end404, !dbg !3914

cond.end404:                                      ; preds = %cond.end399, %cond.true402
  %36 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 36, i64 18), align 2, !dbg !3915
  %tobool406 = icmp eq i8 %36, 0, !dbg !3915
  br i1 %tobool406, label %cond.true407, label %cond.end409, !dbg !3915

cond.true407:                                     ; preds = %cond.end404
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 513, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3915
  br label %cond.end409, !dbg !3915

cond.end409:                                      ; preds = %cond.end404, %cond.true407
  %37 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 33, i64 19), align 1, !dbg !3916
  %tobool411 = icmp eq i8 %37, 0, !dbg !3916
  br i1 %tobool411, label %cond.true412, label %cond.end414, !dbg !3916

cond.true412:                                     ; preds = %cond.end409
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 514, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3916
  br label %cond.end414, !dbg !3916

cond.end414:                                      ; preds = %cond.end409, %cond.true412
  %38 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 35, i64 20), align 4, !dbg !3917
  %tobool416 = icmp eq i8 %38, 0, !dbg !3917
  br i1 %tobool416, label %cond.true417, label %cond.end419, !dbg !3917

cond.true417:                                     ; preds = %cond.end414
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 515, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3917
  br label %cond.end419, !dbg !3917

cond.end419:                                      ; preds = %cond.end414, %cond.true417
  %39 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 29, i64 21), align 1, !dbg !3918
  %tobool421 = icmp eq i8 %39, 0, !dbg !3918
  br i1 %tobool421, label %cond.true422, label %cond.end424, !dbg !3918

cond.true422:                                     ; preds = %cond.end419
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 516, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3918
  br label %cond.end424, !dbg !3918

cond.end424:                                      ; preds = %cond.end419, %cond.true422
  %40 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 39, i64 9), align 1, !dbg !3919
  %tobool426 = icmp eq i8 %40, 0, !dbg !3919
  br i1 %tobool426, label %cond.true427, label %cond.end429, !dbg !3919

cond.true427:                                     ; preds = %cond.end424
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 517, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3919
  br label %cond.end429, !dbg !3919

cond.end429:                                      ; preds = %cond.end424, %cond.true427
  %41 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 39, i64 10), align 2, !dbg !3920
  %tobool431 = icmp eq i8 %41, 0, !dbg !3920
  br i1 %tobool431, label %cond.true432, label %cond.end434, !dbg !3920

cond.true432:                                     ; preds = %cond.end429
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 518, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !3920
  br label %cond.end434, !dbg !3920

cond.end434:                                      ; preds = %cond.end429, %cond.true432
  ret void, !dbg !3921
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !3922 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3926, metadata !DIExpression()), !dbg !3927
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3928
  %bf.load = load i64, i64* %0, align 8, !dbg !3928
  %bf.cast = and i64 %bf.load, 65535, !dbg !3928
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 13, !dbg !3928
  %1 = load i8, i8* %arrayidx1, align 1, !dbg !3928
  %tobool = icmp eq i8 %1, 0, !dbg !3928
  br i1 %tobool, label %if.then, label %land.lhs.true, !dbg !3928

land.lhs.true:                                    ; preds = %entry
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3928
  %2 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !3928
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !3928
  br i1 %cmp, label %if.then, label %if.end, !dbg !3930

if.then:                                          ; preds = %land.lhs.true, %entry
  %3 = load void (%union.tree_node*)*, void (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 16), align 8, !dbg !3931
  tail call void %3(%union.tree_node* %decl) #7, !dbg !3932
  %assembler_name4.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3927
  %.pre = load %union.tree_node*, %union.tree_node** %assembler_name4.phi.trans.insert, align 8, !dbg !3933
  br label %if.end, !dbg !3932

if.end:                                           ; preds = %land.lhs.true, %if.then
  %4 = phi %union.tree_node* [ %2, %land.lhs.true ], [ %.pre, %if.then ], !dbg !3933
  ret %union.tree_node* %4, !dbg !3934
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @decl_assembler_name_equal(%union.tree_node* %decl, %union.tree_node* %asmname) local_unnamed_addr #5 !dbg !3935 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3939, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata %union.tree_node* %asmname, metadata !3940, metadata !DIExpression()), !dbg !3951
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #8, !dbg !3952
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3941, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8 0, metadata !3944, metadata !DIExpression()), !dbg !3951
  %cmp = icmp eq %union.tree_node* %call, %asmname, !dbg !3953
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3955

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3956
  %str = bitcast i32* %id to i8**, !dbg !3956
  %0 = load i8*, i8** %str, align 8, !dbg !3956
  call void @llvm.dbg.value(metadata i8* %0, metadata !3942, metadata !DIExpression()), !dbg !3951
  %id2 = getelementptr inbounds %union.tree_node, %union.tree_node* %asmname, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3957
  %str3 = bitcast i32* %id2 to i8**, !dbg !3957
  %1 = load i8*, i8** %str3, align 8, !dbg !3957
  call void @llvm.dbg.value(metadata i8* %1, metadata !3943, metadata !DIExpression()), !dbg !3951
  %2 = load i8, i8* %0, align 1, !dbg !3958
  %cmp4 = icmp eq i8 %2, 42, !dbg !3959
  br i1 %cmp4, label %if.then6, label %if.end19, !dbg !3960

if.then6:                                         ; preds = %if.end
  %3 = load i8*, i8** @user_label_prefix, align 8, !dbg !3961
  %call7 = tail call i64 @strlen(i8* %3) #7, !dbg !3962
  call void @llvm.dbg.value(metadata i64 %call7, metadata !3945, metadata !DIExpression()), !dbg !3963
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3964
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !3942, metadata !DIExpression()), !dbg !3951
  %cmp8 = icmp eq i64 %call7, 0, !dbg !3965
  br i1 %cmp8, label %if.end19, label %if.else, !dbg !3967

if.else:                                          ; preds = %if.then6
  %4 = load i8*, i8** @user_label_prefix, align 8, !dbg !3968
  %call11 = tail call i32 @strncmp(i8* nonnull %incdec.ptr, i8* %4, i64 %call7) #7, !dbg !3970
  %cmp12 = icmp eq i32 %call11, 0, !dbg !3971
  %add.ptr = getelementptr inbounds i8, i8* %incdec.ptr, i64 %call7, !dbg !3972
  %decl_str.0 = select i1 %cmp12, i8* %add.ptr, i8* %0, !dbg !3972
  %test.0 = zext i1 %cmp12 to i8, !dbg !3972
  br label %if.end19, !dbg !3972

if.end19:                                         ; preds = %if.then6, %if.else, %if.end
  %decl_str.2 = phi i8* [ %0, %if.end ], [ %incdec.ptr, %if.then6 ], [ %decl_str.0, %if.else ], !dbg !3951
  %test.2 = phi i8 [ 0, %if.end ], [ 1, %if.then6 ], [ %test.0, %if.else ], !dbg !3951
  call void @llvm.dbg.value(metadata i8 %test.2, metadata !3944, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8* %decl_str.2, metadata !3942, metadata !DIExpression()), !dbg !3951
  %5 = load i8, i8* %1, align 1, !dbg !3973
  %cmp22 = icmp eq i8 %5, 42, !dbg !3974
  br i1 %cmp22, label %if.then24, label %if.end41, !dbg !3975

if.then24:                                        ; preds = %if.end19
  %6 = load i8*, i8** @user_label_prefix, align 8, !dbg !3976
  %call26 = tail call i64 @strlen(i8* %6) #7, !dbg !3977
  call void @llvm.dbg.value(metadata i64 %call26, metadata !3948, metadata !DIExpression()), !dbg !3978
  %incdec.ptr27 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3979
  call void @llvm.dbg.value(metadata i8* %incdec.ptr27, metadata !3943, metadata !DIExpression()), !dbg !3951
  %cmp28 = icmp eq i64 %call26, 0, !dbg !3980
  br i1 %cmp28, label %if.end41, label %if.else31, !dbg !3982

if.else31:                                        ; preds = %if.then24
  %7 = load i8*, i8** @user_label_prefix, align 8, !dbg !3983
  %call32 = tail call i32 @strncmp(i8* nonnull %incdec.ptr27, i8* %7, i64 %call26) #7, !dbg !3985
  %cmp33 = icmp eq i32 %call32, 0, !dbg !3986
  %add.ptr36 = getelementptr inbounds i8, i8* %incdec.ptr27, i64 %call26, !dbg !3987
  %asmname_str.0 = select i1 %cmp33, i8* %add.ptr36, i8* %1, !dbg !3987
  %test.3 = select i1 %cmp33, i8 1, i8 %test.2, !dbg !3987
  br label %if.end41, !dbg !3987

if.end41:                                         ; preds = %if.then24, %if.else31, %if.end19
  %asmname_str.2 = phi i8* [ %1, %if.end19 ], [ %incdec.ptr27, %if.then24 ], [ %asmname_str.0, %if.else31 ], !dbg !3951
  %test.5 = phi i8 [ %test.2, %if.end19 ], [ 1, %if.then24 ], [ %test.3, %if.else31 ], !dbg !3951
  call void @llvm.dbg.value(metadata i8 %test.5, metadata !3944, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i8* %asmname_str.2, metadata !3943, metadata !DIExpression()), !dbg !3951
  %tobool = icmp eq i8 %test.5, 0, !dbg !3988
  br i1 %tobool, label %cleanup, label %if.end43, !dbg !3990

if.end43:                                         ; preds = %if.end41
  %call44 = tail call i32 @strcmp(i8* %decl_str.2, i8* %asmname_str.2) #7, !dbg !3991
  %cmp45 = icmp eq i32 %call44, 0, !dbg !3992
  %conv47 = zext i1 %cmp45 to i8, !dbg !3991
  br label %cleanup, !dbg !3993

cleanup:                                          ; preds = %if.end41, %entry, %if.end43
  %retval.0 = phi i8 [ %conv47, %if.end43 ], [ 1, %entry ], [ 0, %if.end41 ], !dbg !3951
  ret i8 %retval.0, !dbg !3994
}

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i32 @strncmp(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @decl_assembler_name_hash(%union.tree_node* %asmname) local_unnamed_addr #5 !dbg !3995 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %asmname, metadata !3999, metadata !DIExpression()), !dbg !4004
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %asmname, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4005
  %str = bitcast i32* %id to i8**, !dbg !4005
  %0 = load i8*, i8** %str, align 8, !dbg !4005
  %1 = load i8, i8* %0, align 1, !dbg !4005
  %cmp = icmp eq i8 %1, 42, !dbg !4006
  br i1 %cmp, label %if.then, label %if.end15, !dbg !4007

if.then:                                          ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4008
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !4000, metadata !DIExpression()), !dbg !4009
  %2 = load i8*, i8** @user_label_prefix, align 8, !dbg !4010
  %call = tail call i64 @strlen(i8* %2) #7, !dbg !4011
  call void @llvm.dbg.value(metadata i64 %call, metadata !4003, metadata !DIExpression()), !dbg !4009
  %cmp5 = icmp eq i64 %call, 0, !dbg !4012
  br i1 %cmp5, label %if.end13, label %if.else, !dbg !4014

if.else:                                          ; preds = %if.then
  %3 = load i8*, i8** @user_label_prefix, align 8, !dbg !4015
  %call8 = tail call i32 @strncmp(i8* nonnull %add.ptr, i8* %3, i64 %call) #7, !dbg !4017
  %cmp9 = icmp eq i32 %call8, 0, !dbg !4018
  %add.ptr12 = getelementptr inbounds i8, i8* %add.ptr, i64 %call, !dbg !4019
  %spec.select = select i1 %cmp9, i8* %add.ptr12, i8* %add.ptr, !dbg !4020
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !4000, metadata !DIExpression()), !dbg !4009
  br label %if.end13

if.end13:                                         ; preds = %if.then, %if.else
  %decl_str.1 = phi i8* [ %spec.select, %if.else ], [ %add.ptr, %if.then ], !dbg !4009
  call void @llvm.dbg.value(metadata i8* %decl_str.1, metadata !4000, metadata !DIExpression()), !dbg !4009
  %call14 = tail call i32 @htab_hash_string(i8* %decl_str.1) #7, !dbg !4021
  br label %return

if.end15:                                         ; preds = %entry
  %call19 = tail call i32 @htab_hash_string(i8* %0) #7, !dbg !4022
  br label %return, !dbg !4023

return:                                           ; preds = %if.end15, %if.end13
  %retval.0 = phi i32 [ %call14, %if.end13 ], [ %call19, %if.end15 ], !dbg !4004
  ret i32 %retval.0, !dbg !4024
}

declare dso_local i32 @htab_hash_string(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i64 @tree_code_size(i32 %code) local_unnamed_addr #5 !dbg !4025 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4029, metadata !DIExpression()), !dbg !4030
  %idxprom = sext i32 %code to i64, !dbg !4031
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !4031
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4031
  switch i32 %0, label %sw.default36 [
    i32 3, label %sw.bb
    i32 2, label %return
    i32 4, label %sw.bb11
    i32 10, label %sw.bb11
    i32 8, label %sw.bb11
    i32 5, label %sw.bb11
    i32 6, label %sw.bb11
    i32 7, label %sw.bb11
    i32 1, label %sw.bb15
    i32 0, label %sw.bb23
  ], !dbg !4032

sw.bb:                                            ; preds = %entry
  switch i32 %code, label %sw.default [
    i32 31, label %return
    i32 34, label %sw.bb2
    i32 32, label %sw.bb3
    i32 30, label %sw.bb4
    i32 36, label %sw.bb5
    i32 33, label %sw.bb6
    i32 35, label %sw.bb7
    i32 29, label %sw.bb8
    i32 37, label %sw.bb9
  ], !dbg !4033

sw.bb2:                                           ; preds = %sw.bb
  br label %return, !dbg !4036

sw.bb3:                                           ; preds = %sw.bb
  br label %return, !dbg !4038

sw.bb4:                                           ; preds = %sw.bb
  br label %return, !dbg !4039

sw.bb5:                                           ; preds = %sw.bb
  br label %return, !dbg !4040

sw.bb6:                                           ; preds = %sw.bb
  br label %return, !dbg !4041

sw.bb7:                                           ; preds = %sw.bb
  br label %return, !dbg !4042

sw.bb8:                                           ; preds = %sw.bb
  br label %return, !dbg !4043

sw.bb9:                                           ; preds = %sw.bb
  br label %return, !dbg !4044

sw.default:                                       ; preds = %sw.bb
  br label %return, !dbg !4045

sw.bb11:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %arrayidx13 = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !4046
  %1 = load i8, i8* %arrayidx13, align 1, !dbg !4046
  %conv = zext i8 %1 to i64, !dbg !4046
  %sub = shl nuw nsw i64 %conv, 3, !dbg !4047
  %add = add nuw nsw i64 %sub, 40, !dbg !4048
  br label %return, !dbg !4049

sw.bb15:                                          ; preds = %entry
  switch i32 %code, label %sw.default22 [
    i32 23, label %return
    i32 24, label %sw.bb17
    i32 25, label %sw.bb18
    i32 26, label %return
    i32 27, label %sw.bb20
    i32 28, label %sw.bb21
  ], !dbg !4050

sw.bb17:                                          ; preds = %sw.bb15
  br label %return, !dbg !4051

sw.bb18:                                          ; preds = %sw.bb15
  br label %return, !dbg !4053

sw.bb20:                                          ; preds = %sw.bb15
  br label %return, !dbg !4054

sw.bb21:                                          ; preds = %sw.bb15
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 706, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4055
  br label %sw.default22, !dbg !4055

sw.default22:                                     ; preds = %sw.bb15, %sw.bb21
  %2 = load i64 (i32)*, i64 (i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 3), align 8, !dbg !4056
  %call = tail call i64 %2(i32 %code) #7, !dbg !4057
  br label %return, !dbg !4058

sw.bb23:                                          ; preds = %entry
  switch i32 %code, label %sw.default34 [
    i32 1, label %sw.bb24
    i32 2, label %return
    i32 0, label %sw.bb26
    i32 62, label %sw.bb26
    i32 3, label %sw.bb27
    i32 163, label %sw.bb27
    i32 141, label %sw.bb28
    i32 147, label %return
    i32 4, label %sw.bb30
    i32 51, label %sw.bb31
    i32 186, label %sw.bb32
    i32 187, label %sw.bb33
  ], !dbg !4059

sw.bb24:                                          ; preds = %sw.bb23
  %3 = load i64, i64* getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 1), align 8, !dbg !4060
  br label %return, !dbg !4062

sw.bb26:                                          ; preds = %sw.bb23, %sw.bb23
  br label %return, !dbg !4063

sw.bb27:                                          ; preds = %sw.bb23, %sw.bb23
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 721, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4064
  br label %sw.bb28, !dbg !4064

sw.bb28:                                          ; preds = %sw.bb23, %sw.bb27
  br label %return, !dbg !4065

sw.bb30:                                          ; preds = %sw.bb23
  br label %return, !dbg !4066

sw.bb31:                                          ; preds = %sw.bb23
  br label %return, !dbg !4067

sw.bb32:                                          ; preds = %sw.bb23
  br label %return, !dbg !4068

sw.bb33:                                          ; preds = %sw.bb23
  br label %return, !dbg !4069

sw.default34:                                     ; preds = %sw.bb23
  %4 = load i64 (i32)*, i64 (i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 3), align 8, !dbg !4070
  %call35 = tail call i64 %4(i32 %code) #7, !dbg !4071
  br label %return, !dbg !4072

sw.default36:                                     ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 736, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4073
  br label %return, !dbg !4074

return:                                           ; preds = %sw.bb23, %sw.bb23, %sw.bb15, %sw.bb15, %entry, %sw.bb, %sw.default36, %sw.default34, %sw.bb33, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb24, %sw.default22, %sw.bb20, %sw.bb18, %sw.bb17, %sw.bb11, %sw.default, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2
  %retval.0 = phi i64 [ 0, %sw.default36 ], [ %call35, %sw.default34 ], [ 48, %sw.bb33 ], [ 208, %sw.bb32 ], [ 32, %sw.bb31 ], [ 88, %sw.bb30 ], [ 88, %sw.bb28 ], [ 24, %sw.bb26 ], [ %3, %sw.bb24 ], [ %call, %sw.default22 ], [ 32, %sw.bb20 ], [ 32, %sw.bb18 ], [ 32, %sw.bb17 ], [ %add, %sw.bb11 ], [ 184, %sw.default ], [ 120, %sw.bb9 ], [ 224, %sw.bb8 ], [ 184, %sw.bb7 ], [ 120, %sw.bb6 ], [ 128, %sw.bb5 ], [ 128, %sw.bb4 ], [ 160, %sw.bb3 ], [ 136, %sw.bb2 ], [ 152, %sw.bb ], [ 168, %entry ], [ 40, %sw.bb15 ], [ 40, %sw.bb15 ], [ 40, %sw.bb23 ], [ 40, %sw.bb23 ], !dbg !4030
  ret i64 %retval.0, !dbg !4075
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i64 @tree_size(%union.tree_node* %node) local_unnamed_addr #5 !dbg !4076 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !4080, metadata !DIExpression()), !dbg !4083
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4084
  %bf.load = load i64, i64* %0, align 8, !dbg !4084
  %1 = trunc i64 %bf.load to i32, !dbg !4084
  %bf.cast = and i32 %1, 65535, !dbg !4084
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4081, metadata !DIExpression()), !dbg !4083
  %trunc = trunc i64 %bf.load to i16, !dbg !4085
  switch i16 %trunc, label %sw.default [
    i16 149, label %sw.bb
    i16 3, label %sw.bb5
    i16 28, label %sw.bb7
    i16 163, label %sw.bb12
  ], !dbg !4085

sw.bb:                                            ; preds = %entry
  %base_binfos2 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !4086
  %base3 = bitcast %union.tree_node** %base_binfos2 to %struct.VEC_tree_base*, !dbg !4086
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* nonnull %base3) #8, !dbg !4086
  %call4 = tail call fastcc i64 @VEC_tree_base_embedded_size(i32 %call) #8, !dbg !4086
  %add = add i64 %call4, 88, !dbg !4088
  br label %cleanup, !dbg !4089

sw.bb5:                                           ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4090
  %3 = load i32, i32* %2, align 8, !dbg !4090
  %sub = add nsw i32 %3, -1, !dbg !4091
  %conv = sext i32 %sub to i64, !dbg !4092
  %mul = shl nsw i64 %conv, 3, !dbg !4093
  %add6 = add nsw i64 %mul, 40, !dbg !4094
  br label %cleanup, !dbg !4095

sw.bb7:                                           ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4096
  %5 = load i32, i32* %4, align 8, !dbg !4096
  %conv9 = sext i32 %5 to i64, !dbg !4096
  %add11 = add nsw i64 %conv9, 29, !dbg !4097
  br label %cleanup, !dbg !4098

sw.bb12:                                          ; preds = %entry
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4099
  %7 = load i32, i32* %6, align 4, !dbg !4099
  %idxprom = zext i32 %7 to i64, !dbg !4100
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @omp_clause_num_ops, i64 0, i64 %idxprom, !dbg !4100
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4100
  %conv14 = zext i8 %8 to i64, !dbg !4100
  %sub15 = shl nuw nsw i64 %conv14, 3, !dbg !4101
  %add18 = add nuw nsw i64 %sub15, 56, !dbg !4102
  br label %cleanup, !dbg !4103

sw.default:                                       ; preds = %entry
  %cmp = icmp eq i32 %bf.cast, 59, !dbg !4104
  br i1 %cmp, label %if.then, label %if.else, !dbg !4106

if.then:                                          ; preds = %sw.default
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4107
  %9 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !4107
  %10 = load %struct.tree_int_cst*, %struct.tree_int_cst** %9, align 8, !dbg !4107
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %10, i64 0, i32 1, i32 0, !dbg !4107
  %11 = load i64, i64* %low, align 8, !dbg !4107
  %sub25 = shl i64 %11, 32, !dbg !4108
  %sext = add i64 %sub25, -4294967296, !dbg !4108
  %mul27 = ashr exact i64 %sext, 29, !dbg !4109
  %add28 = add nsw i64 %mul27, 48, !dbg !4110
  br label %cleanup, !dbg !4111

if.else:                                          ; preds = %sw.default
  %call29 = tail call i64 @tree_code_size(i32 %bf.cast) #8, !dbg !4112
  br label %cleanup, !dbg !4113

cleanup:                                          ; preds = %if.else, %if.then, %sw.bb12, %sw.bb7, %sw.bb5, %sw.bb
  %retval.0 = phi i64 [ %add28, %if.then ], [ %call29, %if.else ], [ %add18, %sw.bb12 ], [ %add11, %sw.bb7 ], [ %add6, %sw.bb5 ], [ %add, %sw.bb ], !dbg !4114
  ret i64 %retval.0, !dbg !4115
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i64 @VEC_tree_base_embedded_size(i32 %alloc_) unnamed_addr #0 !dbg !4116 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4120, metadata !DIExpression()), !dbg !4121
  %conv = sext i32 %alloc_ to i64, !dbg !4122
  %mul = shl nsw i64 %conv, 3, !dbg !4122
  %add = add nsw i64 %mul, 8, !dbg !4122
  ret i64 %add, !dbg !4122
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4123 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4129, metadata !DIExpression()), !dbg !4130
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4131
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4131

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4131
  %0 = load i32, i32* %num, align 8, !dbg !4131
  br label %cond.end, !dbg !4131

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4131
  ret i32 %cond, !dbg !4131
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @copy_node_stat(%union.tree_node* %node) local_unnamed_addr #5 !dbg !4132 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !4134, metadata !DIExpression()), !dbg !4138
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4139
  %bf.load = load i64, i64* %0, align 8, !dbg !4139
  %1 = trunc i64 %bf.load to i32, !dbg !4139
  %bf.cast = and i32 %1, 65535, !dbg !4139
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4136, metadata !DIExpression()), !dbg !4138
  %cmp = icmp eq i32 %bf.cast, 147, !dbg !4140
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4140

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 955, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4140
  br label %cond.end, !dbg !4140

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call i64 @tree_size(%union.tree_node* %node) #8, !dbg !4141
  call void @llvm.dbg.value(metadata i64 %call, metadata !4137, metadata !DIExpression()), !dbg !4138
  %call1 = tail call i8* @ggc_alloc_stat(i64 %call) #7, !dbg !4142
  %2 = bitcast i8* %call1 to %union.tree_node*, !dbg !4143
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4135, metadata !DIExpression()), !dbg !4138
  %3 = bitcast %union.tree_node* %node to i8*, !dbg !4144
  %call2 = tail call i8* @memcpy(i8* %call1, i8* %3, i64 %call) #7, !dbg !4145
  %chain = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !4146
  %4 = bitcast i8* %chain to %union.tree_node**, !dbg !4146
  store %union.tree_node* null, %union.tree_node** %4, align 8, !dbg !4147
  %5 = bitcast i8* %call1 to i64*, !dbg !4148
  %bf.load4 = load i64, i64* %5, align 8, !dbg !4149
  %bf.clear8 = and i64 %bf.load4, -1099515822081, !dbg !4150
  store i64 %bf.clear8, i64* %5, align 8, !dbg !4150
  %trunc = trunc i64 %bf.load to i16, !dbg !4151
  switch i16 %trunc, label %if.end [
    i16 32, label %if.then
    i16 34, label %if.then
    i16 36, label %if.then
  ], !dbg !4151

if.then:                                          ; preds = %cond.end, %cond.end, %cond.end
  %bf.cast161 = and i64 %bf.load4, 65535, !dbg !4153
  %cmp17 = icmp eq i64 %bf.cast161, 32, !dbg !4153
  br i1 %cmp17, label %cond.true18, label %cond.false19, !dbg !4153

cond.true18:                                      ; preds = %if.then
  %ann = getelementptr inbounds i8, i8* %call1, i64 152, !dbg !4153
  %6 = bitcast i8* %ann to %struct.var_ann_d**, !dbg !4153
  br label %cond.end40, !dbg !4153

cond.false19:                                     ; preds = %if.then
  %cmp24 = icmp eq i64 %bf.cast161, 34, !dbg !4153
  br i1 %cmp24, label %cond.true25, label %cond.false27, !dbg !4153

cond.true25:                                      ; preds = %cond.false19
  %ann26 = getelementptr inbounds i8, i8* %call1, i64 128, !dbg !4153
  %7 = bitcast i8* %ann26 to %struct.var_ann_d**, !dbg !4153
  br label %cond.end40, !dbg !4153

cond.false27:                                     ; preds = %cond.false19
  %cmp32 = icmp eq i64 %bf.cast161, 36, !dbg !4153
  %ann34 = getelementptr inbounds i8, i8* %call1, i64 120, !dbg !4153
  %8 = bitcast i8* %ann34 to %struct.var_ann_d**, !dbg !4153
  %cond37 = select i1 %cmp32, %struct.var_ann_d** %8, %struct.var_ann_d** null, !dbg !4153
  br label %cond.end40, !dbg !4153

cond.end40:                                       ; preds = %cond.true25, %cond.false27, %cond.true18
  %cond41 = phi %struct.var_ann_d** [ %6, %cond.true18 ], [ %7, %cond.true25 ], [ %cond37, %cond.false27 ], !dbg !4153
  store %struct.var_ann_d* null, %struct.var_ann_d** %cond41, align 8, !dbg !4154
  br label %if.end, !dbg !4155

if.end:                                           ; preds = %cond.end, %cond.end40
  %idxprom = zext i32 %bf.cast to i64, !dbg !4156
  %9 = add nsw i64 %idxprom, -29, !dbg !4158
  %cmp42 = icmp ult i64 %9, 12, !dbg !4158
  br i1 %cmp42, label %if.then43, label %if.else88, !dbg !4159

if.then43:                                        ; preds = %if.end
  %cmp44 = icmp eq i32 %bf.cast, 37, !dbg !4160
  br i1 %cmp44, label %if.then45, label %if.else, !dbg !4163

if.then45:                                        ; preds = %if.then43
  %10 = load i32, i32* @next_debug_decl_uid, align 4, !dbg !4164
  %dec = add nsw i32 %10, -1, !dbg !4164
  store i32 %dec, i32* @next_debug_decl_uid, align 4, !dbg !4164
  %uid = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !4165
  %11 = bitcast i8* %uid to i32*, !dbg !4165
  store i32 %dec, i32* %11, align 4, !dbg !4166
  br label %if.end48, !dbg !4165

if.else:                                          ; preds = %if.then43
  %12 = load i32, i32* @next_decl_uid, align 4, !dbg !4167
  %inc = add nsw i32 %12, 1, !dbg !4167
  store i32 %inc, i32* @next_decl_uid, align 4, !dbg !4167
  %uid47 = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !4168
  %13 = bitcast i8* %uid47 to i32*, !dbg !4168
  store i32 %12, i32* %13, align 4, !dbg !4169
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then45
  %bf.load50 = load i64, i64* %0, align 8, !dbg !4170
  %bf.cast525 = and i64 %bf.load50, 65535, !dbg !4172
  %cmp53 = icmp eq i64 %bf.cast525, 34, !dbg !4172
  br i1 %cmp53, label %land.lhs.true, label %lor.lhs.false54, !dbg !4173

lor.lhs.false54:                                  ; preds = %if.end48
  %cmp59 = icmp eq i64 %bf.cast525, 32, !dbg !4174
  br i1 %cmp59, label %land.lhs.true, label %if.end69, !dbg !4175

land.lhs.true:                                    ; preds = %lor.lhs.false54, %if.end48
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4176
  %14 = bitcast i40* %decl_flag_2 to i64*, !dbg !4176
  %bf.load60 = load i64, i64* %14, align 8, !dbg !4176
  %bf.cast628 = and i64 %bf.load60, 67108864, !dbg !4176
  %tobool = icmp eq i64 %bf.cast628, 0, !dbg !4176
  br i1 %tobool, label %if.end69, label %if.then63, !dbg !4177

if.then63:                                        ; preds = %land.lhs.true
  %call64 = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %node) #8, !dbg !4178
  tail call void @decl_value_expr_insert(%union.tree_node* %2, %union.tree_node* %call64) #8, !dbg !4178
  %decl_flag_266 = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !4180
  %15 = bitcast i8* %decl_flag_266 to i64*, !dbg !4180
  %bf.load67 = load i64, i64* %15, align 8, !dbg !4181
  %bf.set = or i64 %bf.load67, 67108864, !dbg !4181
  store i64 %bf.set, i64* %15, align 8, !dbg !4181
  %bf.load71.pre = load i64, i64* %0, align 8, !dbg !4182
  br label %if.end69, !dbg !4184

if.end69:                                         ; preds = %land.lhs.true, %if.then63, %lor.lhs.false54
  %bf.load71 = phi i64 [ %bf.load50, %land.lhs.true ], [ %bf.load71.pre, %if.then63 ], [ %bf.load50, %lor.lhs.false54 ], !dbg !4182
  %bf.cast737 = and i64 %bf.load71, 65535, !dbg !4185
  %cmp74 = icmp eq i64 %bf.cast737, 32, !dbg !4185
  br i1 %cmp74, label %land.lhs.true75, label %if.end111, !dbg !4186

land.lhs.true75:                                  ; preds = %if.end69
  %init_priority_p = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4187
  %16 = bitcast i24* %init_priority_p to i32*, !dbg !4187
  %bf.load76 = load i32, i32* %16, align 8, !dbg !4187
  %bf.clear78 = and i32 %bf.load76, 65536, !dbg !4187
  %tobool79 = icmp eq i32 %bf.clear78, 0, !dbg !4187
  br i1 %tobool79, label %if.end111, label %if.then80, !dbg !4188

if.then80:                                        ; preds = %land.lhs.true75
  %call81 = tail call zeroext i16 @decl_init_priority_lookup(%union.tree_node* %node) #8, !dbg !4189
  tail call void @decl_init_priority_insert(%union.tree_node* %2, i16 zeroext %call81) #8, !dbg !4189
  %init_priority_p83 = getelementptr inbounds i8, i8* %call1, i64 144, !dbg !4191
  %17 = bitcast i8* %init_priority_p83 to i32*, !dbg !4191
  %bf.load84 = load i32, i32* %17, align 8, !dbg !4192
  %bf.set86 = or i32 %bf.load84, 65536, !dbg !4192
  store i32 %bf.set86, i32* %17, align 8, !dbg !4192
  br label %if.end111, !dbg !4193

if.else88:                                        ; preds = %if.end
  %18 = add nsw i64 %idxprom, -5, !dbg !4194
  %cmp91 = icmp ult i64 %18, 18, !dbg !4194
  br i1 %cmp91, label %if.then92, label %if.end111, !dbg !4196

if.then92:                                        ; preds = %if.else88
  %19 = load i32, i32* @next_type_uid, align 4, !dbg !4197
  %inc93 = add nsw i32 %19, 1, !dbg !4197
  store i32 %inc93, i32* @next_type_uid, align 4, !dbg !4197
  %uid94 = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !4199
  %20 = bitcast i8* %uid94 to i32*, !dbg !4199
  store i32 %19, i32* %20, align 8, !dbg !4200
  %symtab = getelementptr inbounds i8, i8* %call1, i64 88, !dbg !4201
  %pointer = bitcast i8* %symtab to i8**, !dbg !4201
  store i8* null, i8** %pointer, align 8, !dbg !4202
  %address = bitcast i8* %symtab to i32*, !dbg !4203
  store i32 0, i32* %address, align 8, !dbg !4204
  %bf.cast1024 = and i64 %bf.load4, 134217728, !dbg !4205
  %tobool103 = icmp eq i64 %bf.cast1024, 0, !dbg !4205
  br i1 %tobool103, label %if.end111, label %if.then104, !dbg !4207

if.then104:                                       ; preds = %if.then92
  %bf.clear107 = and i64 %bf.load4, -1099650039809, !dbg !4208
  store i64 %bf.clear107, i64* %5, align 8, !dbg !4208
  %values = getelementptr inbounds i8, i8* %call1, i64 24, !dbg !4210
  %21 = bitcast i8* %values to %union.tree_node**, !dbg !4210
  store %union.tree_node* null, %union.tree_node** %21, align 8, !dbg !4211
  br label %if.end111, !dbg !4212

if.end111:                                        ; preds = %land.lhs.true75, %if.then92, %if.else88, %if.then104, %if.end69, %if.then80
  ret %union.tree_node* %2, !dbg !4213
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @decl_value_expr_insert(%union.tree_node* %from, %union.tree_node* %to) local_unnamed_addr #5 !dbg !4214 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !4218, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata %union.tree_node* %to, metadata !4219, metadata !DIExpression()), !dbg !4222
  %call = tail call i8* @ggc_alloc_stat(i64 24) #7, !dbg !4223
  call void @llvm.dbg.value(metadata i8* %call, metadata !4220, metadata !DIExpression()), !dbg !4222
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !4224
  %1 = bitcast %union.tree_node* %from to i8*, !dbg !4225
  %call1 = tail call i32 %0(i8* %1) #7, !dbg !4224
  %hash = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4226
  %2 = bitcast i8* %hash to i32*, !dbg !4226
  store i32 %call1, i32* %2, align 8, !dbg !4227
  %from2 = bitcast i8* %call to %union.tree_node**, !dbg !4228
  store %union.tree_node* %from, %union.tree_node** %from2, align 8, !dbg !4229
  %to3 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4230
  %3 = bitcast i8* %to3 to %union.tree_node**, !dbg !4230
  store %union.tree_node* %to, %union.tree_node** %3, align 8, !dbg !4231
  %4 = load %struct.htab*, %struct.htab** @value_expr_for_decl, align 8, !dbg !4232
  %call5 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %4, i8* %call, i32 %call1, i32 1) #7, !dbg !4233
  call void @llvm.dbg.value(metadata i8** %call5, metadata !4221, metadata !DIExpression()), !dbg !4222
  store i8* %call, i8** %call5, align 8, !dbg !4234
  ret void, !dbg !4235
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %from) local_unnamed_addr #5 !dbg !4236 {
entry:
  %in = alloca %struct.tree_map, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !4238, metadata !DIExpression()), !dbg !4241
  %0 = bitcast %struct.tree_map* %in to i8*, !dbg !4242
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !4242
  %from1 = getelementptr inbounds %struct.tree_map, %struct.tree_map* %in, i64 0, i32 0, i32 0, !dbg !4243
  store %union.tree_node* %from, %union.tree_node** %from1, align 8, !dbg !4244
  %1 = load %struct.htab*, %struct.htab** @value_expr_for_decl, align 8, !dbg !4245
  %2 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !4246
  %3 = bitcast %union.tree_node* %from to i8*, !dbg !4247
  %call = tail call i32 %2(i8* %3) #7, !dbg !4246
  %call2 = call i8* @htab_find_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call) #7, !dbg !4248
  call void @llvm.dbg.value(metadata i8* %call2, metadata !4239, metadata !DIExpression()), !dbg !4241
  %tobool = icmp eq i8* %call2, null, !dbg !4249
  br i1 %tobool, label %cleanup, label %if.then, !dbg !4251

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call2, metadata !4239, metadata !DIExpression()), !dbg !4241
  %to = getelementptr inbounds i8, i8* %call2, i64 16, !dbg !4252
  %4 = bitcast i8* %to to %union.tree_node**, !dbg !4252
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4252
  br label %cleanup, !dbg !4253

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %5, %if.then ], [ null, %entry ], !dbg !4241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !4254
  ret %union.tree_node* %retval.0, !dbg !4254
}

; Function Attrs: nounwind uwtable
define dso_local void @decl_init_priority_insert(%union.tree_node* %decl, i16 zeroext %priority) local_unnamed_addr #5 !dbg !4255 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4259, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.value(metadata i16 %priority, metadata !4260, metadata !DIExpression()), !dbg !4262
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4263
  %bf.load = load i64, i64* %0, align 8, !dbg !4263
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4263
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4263
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !4263

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 29, !dbg !4263
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !4263

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5660, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4263
  br label %cond.end, !dbg !4263

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %call = tail call fastcc %struct.tree_priority_map* @decl_priority_info(%union.tree_node* %decl) #8, !dbg !4264
  call void @llvm.dbg.value(metadata %struct.tree_priority_map* %call, metadata !4261, metadata !DIExpression()), !dbg !4262
  %init = getelementptr inbounds %struct.tree_priority_map, %struct.tree_priority_map* %call, i64 0, i32 1, !dbg !4265
  store i16 %priority, i16* %init, align 8, !dbg !4266
  ret void, !dbg !4267
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i16 @decl_init_priority_lookup(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !4268 {
entry:
  %in = alloca %struct.tree_map_base, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4272, metadata !DIExpression()), !dbg !4275
  %0 = bitcast %struct.tree_map_base* %in to i8*, !dbg !4276
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4276
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4277
  %bf.load = load i64, i64* %1, align 8, !dbg !4277
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4277
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4277
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !4277

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 29, !dbg !4277
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !4277

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5607, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4277
  br label %cond.end, !dbg !4277

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %from = getelementptr inbounds %struct.tree_map_base, %struct.tree_map_base* %in, i64 0, i32 0, !dbg !4278
  store %union.tree_node* %decl, %union.tree_node** %from, align 8, !dbg !4279
  %2 = load %struct.htab*, %struct.htab** @init_priority_for_decl, align 8, !dbg !4280
  %call = call i8* @htab_find(%struct.htab* %2, i8* nonnull %0) #7, !dbg !4281
  call void @llvm.dbg.value(metadata i8* %call, metadata !4273, metadata !DIExpression()), !dbg !4275
  %tobool = icmp eq i8* %call, null, !dbg !4282
  br i1 %tobool, label %cond.end8, label %cond.true6, !dbg !4282

cond.true6:                                       ; preds = %cond.end
  call void @llvm.dbg.value(metadata i8* %call, metadata !4273, metadata !DIExpression()), !dbg !4275
  %init = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4283
  %3 = bitcast i8* %init to i16*, !dbg !4283
  %4 = load i16, i16* %3, align 8, !dbg !4283
  br label %cond.end8, !dbg !4282

cond.end8:                                        ; preds = %cond.end, %cond.true6
  %cond9 = phi i16 [ %4, %cond.true6 ], [ -1, %cond.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4284
  ret i16 %cond9, !dbg !4285
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @copy_list(%union.tree_node* %list) local_unnamed_addr #5 !dbg !4286 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !4288, metadata !DIExpression()), !dbg !4292
  %cmp = icmp eq %union.tree_node* %list, null, !dbg !4293
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4295

if.end:                                           ; preds = %entry
  %call = tail call %union.tree_node* @copy_node_stat(%union.tree_node* nonnull %list) #8, !dbg !4296
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4290, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4289, metadata !DIExpression()), !dbg !4292
  br label %while.cond, !dbg !4297

while.cond:                                       ; preds = %while.body, %if.end
  %prev.0 = phi %union.tree_node* [ %call, %if.end ], [ %call1, %while.body ], !dbg !4292
  %list.pn = phi %union.tree_node* [ %list, %if.end ], [ %next.0, %while.body ]
  %next.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %list.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4292
  %next.0 = load %union.tree_node*, %union.tree_node** %next.0.in, align 8, !dbg !4292
  call void @llvm.dbg.value(metadata %union.tree_node* %next.0, metadata !4291, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0, metadata !4290, metadata !DIExpression()), !dbg !4292
  %tobool = icmp eq %union.tree_node* %next.0, null, !dbg !4297
  br i1 %tobool, label %cleanup.loopexit, label %while.body, !dbg !4297

while.body:                                       ; preds = %while.cond
  %call1 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* nonnull %next.0) #8, !dbg !4298
  %chain3 = getelementptr inbounds %union.tree_node, %union.tree_node* %prev.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4300
  store %union.tree_node* %call1, %union.tree_node** %chain3, align 8, !dbg !4301
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4290, metadata !DIExpression()), !dbg !4292
  br label %while.cond, !dbg !4297, !llvm.loop !4302

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup, !dbg !4304

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %call, %cleanup.loopexit ], !dbg !4292
  ret %union.tree_node* %retval.0, !dbg !4304
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_int_cst(%union.tree_node* %type, i64 %low) local_unnamed_addr #5 !dbg !4305 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4309, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i64 %low, metadata !4310, metadata !DIExpression()), !dbg !4311
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !4312
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4314
  %spec.select = select i1 %tobool, %union.tree_node* %0, %union.tree_node* %type, !dbg !4315
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !4309, metadata !DIExpression()), !dbg !4311
  %low.lobit = ashr i64 %low, 63, !dbg !4316
  %call = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %spec.select, i64 %low, i64 %low.lobit) #8, !dbg !4317
  ret %union.tree_node* %call, !dbg !4318
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_int_cst_wide(%union.tree_node* %type, i64 %low, i64 %hi) local_unnamed_addr #5 !dbg !4319 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4323, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i64 %low, metadata !4324, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i64 %hi, metadata !4325, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i32 -1, metadata !4327, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i32 0, metadata !4328, metadata !DIExpression()), !dbg !4332
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !4333
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4333

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1123, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4333
  br label %cond.end, !dbg !4333

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4334
  %bf.load = load i64, i64* %0, align 8, !dbg !4334
  %1 = trunc i64 %bf.load to i16, !dbg !4334
  switch i16 %1, label %sw.default [
    i16 10, label %sw.bb
    i16 12, label %sw.bb
    i16 7, label %sw.bb3
    i16 8, label %sw.bb8
    i16 5, label %sw.bb8
    i16 6, label %sw.epilog
  ], !dbg !4335

sw.bb:                                            ; preds = %cond.end, %cond.end
  %2 = or i64 %hi, %low, !dbg !4336
  %3 = icmp ne i64 %2, 0, !dbg !4336
  %ix.0 = sext i1 %3 to i32, !dbg !4336
  %not. = xor i1 %3, true, !dbg !4336
  %limit.0 = zext i1 %not. to i32, !dbg !4336
  br label %sw.epilog, !dbg !4336

sw.bb3:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 2, metadata !4328, metadata !DIExpression()), !dbg !4332
  %tobool4 = icmp eq i64 %hi, 0, !dbg !4339
  %cmp = icmp ult i64 %low, 2, !dbg !4341
  %or.cond1 = and i1 %tobool4, %cmp, !dbg !4342
  %conv = trunc i64 %low to i32, !dbg !4342
  %ix.1 = select i1 %or.cond1, i32 %conv, i32 -1, !dbg !4342
  br label %sw.epilog, !dbg !4342

sw.bb8:                                           ; preds = %cond.end, %cond.end
  %bf.cast124 = and i64 %bf.load, 2097152, !dbg !4343
  %tobool13 = icmp eq i64 %bf.cast124, 0, !dbg !4343
  %4 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4345
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %4, i64 90, i32 1, !dbg !4345
  %5 = load i32, i32* %value, align 8, !dbg !4345
  br i1 %tobool13, label %if.else, label %if.then14, !dbg !4346

if.then14:                                        ; preds = %sw.bb8
  call void @llvm.dbg.value(metadata i32 %5, metadata !4328, metadata !DIExpression()), !dbg !4332
  %tobool15 = icmp eq i64 %hi, 0, !dbg !4347
  br i1 %tobool15, label %land.lhs.true16, label %sw.epilog, !dbg !4350

land.lhs.true16:                                  ; preds = %if.then14
  %conv19 = sext i32 %5 to i64, !dbg !4351
  %cmp20 = icmp ugt i64 %conv19, %low, !dbg !4352
  %conv23 = trunc i64 %low to i32, !dbg !4353
  %spec.select = select i1 %cmp20, i32 %conv23, i32 -1, !dbg !4354
  br label %sw.epilog, !dbg !4354

if.else:                                          ; preds = %sw.bb8
  %add = add nsw i32 %5, 1, !dbg !4355
  call void @llvm.dbg.value(metadata i32 %add, metadata !4328, metadata !DIExpression()), !dbg !4332
  switch i64 %hi, label %sw.epilog [
    i64 0, label %land.lhs.true28
    i64 -1, label %land.lhs.true40
  ], !dbg !4357

land.lhs.true28:                                  ; preds = %if.else
  %conv31 = sext i32 %5 to i64, !dbg !4359
  %cmp32 = icmp ugt i64 %conv31, %low, !dbg !4360
  br i1 %cmp32, label %if.then34, label %if.else37, !dbg !4361

if.then34:                                        ; preds = %land.lhs.true28
  %6 = trunc i64 %low to i32, !dbg !4362
  %conv36 = add i32 %6, 1, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %conv36, metadata !4327, metadata !DIExpression()), !dbg !4332
  br label %sw.epilog, !dbg !4363

if.else37:                                        ; preds = %land.lhs.true28
  br i1 false, label %if.else37.if.then43_crit_edge, label %sw.epilog, !dbg !4364

if.else37.if.then43_crit_edge:                    ; preds = %if.else37
  br label %if.then43, !dbg !4364

land.lhs.true40:                                  ; preds = %if.else
  %cmp41.old = icmp eq i64 %low, -1, !dbg !4366
  br i1 %cmp41.old, label %if.then43, label %sw.epilog, !dbg !4367

if.then43:                                        ; preds = %if.else37.if.then43_crit_edge, %land.lhs.true40
  call void @llvm.dbg.value(metadata i32 0, metadata !4327, metadata !DIExpression()), !dbg !4332
  br label %sw.epilog, !dbg !4368

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4369
  br label %sw.epilog, !dbg !4370

sw.epilog:                                        ; preds = %if.then14, %land.lhs.true16, %if.else37, %land.lhs.true40, %if.then43, %if.else, %if.then34, %sw.bb3, %sw.bb, %sw.default, %cond.end
  %ix.6 = phi i32 [ -1, %sw.default ], [ -1, %cond.end ], [ %ix.0, %sw.bb ], [ %ix.1, %sw.bb3 ], [ -1, %if.then14 ], [ %spec.select, %land.lhs.true16 ], [ %conv36, %if.then34 ], [ 0, %if.then43 ], [ -1, %land.lhs.true40 ], [ -1, %if.else37 ], [ -1, %if.else ], !dbg !4371
  %limit.2 = phi i32 [ 0, %sw.default ], [ 0, %cond.end ], [ %limit.0, %sw.bb ], [ 2, %sw.bb3 ], [ %5, %if.then14 ], [ %5, %land.lhs.true16 ], [ %add, %if.then34 ], [ %add, %if.then43 ], [ %add, %land.lhs.true40 ], [ %add, %if.else37 ], [ %add, %if.else ], !dbg !4332
  call void @llvm.dbg.value(metadata i32 %limit.2, metadata !4328, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i32 %ix.6, metadata !4327, metadata !DIExpression()), !dbg !4332
  %cmp47 = icmp sgt i32 %ix.6, -1, !dbg !4372
  br i1 %cmp47, label %if.then49, label %if.else107, !dbg !4373

if.then49:                                        ; preds = %sw.epilog
  %bf.load51 = load i64, i64* %0, align 8, !dbg !4374
  %bf.cast543 = and i64 %bf.load51, 134217728, !dbg !4374
  %tobool55 = icmp eq i64 %bf.cast543, 0, !dbg !4374
  br i1 %tobool55, label %if.then56, label %if.then49.if.end61_crit_edge, !dbg !4377

if.then49.if.end61_crit_edge:                     ; preds = %if.then49
  %values63.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4378
  %.phi.trans.insert = bitcast i32* %values63.phi.trans.insert to %struct.tree_vec**, !dbg !4378
  %.pre = load %struct.tree_vec*, %struct.tree_vec** %.phi.trans.insert, align 8, !dbg !4379
  br label %if.end61, !dbg !4377

if.then56:                                        ; preds = %if.then49
  %bf.set = or i64 %bf.load51, 134217728, !dbg !4380
  store i64 %bf.set, i64* %0, align 8, !dbg !4380
  %call = tail call %union.tree_node* @make_tree_vec_stat(i32 %limit.2) #8, !dbg !4382
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4383
  %7 = bitcast i32* %values to %union.tree_node**, !dbg !4383
  store %union.tree_node* %call, %union.tree_node** %7, align 8, !dbg !4384
  %8 = bitcast %union.tree_node* %call to %struct.tree_vec*, !dbg !4385
  %.pre6 = bitcast i32* %values to %struct.tree_vec**, !dbg !4379
  br label %if.end61, !dbg !4385

if.end61:                                         ; preds = %if.then49.if.end61_crit_edge, %if.then56
  %.pre-phi = phi %struct.tree_vec** [ %.phi.trans.insert, %if.then49.if.end61_crit_edge ], [ %.pre6, %if.then56 ], !dbg !4379
  %9 = phi %struct.tree_vec* [ %.pre, %if.then49.if.end61_crit_edge ], [ %8, %if.then56 ], !dbg !4379
  %idxprom = sext i32 %ix.6 to i64, !dbg !4379
  %arrayidx64 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %9, i64 0, i32 2, i64 %idxprom, !dbg !4379
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx64, align 8, !dbg !4379
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4326, metadata !DIExpression()), !dbg !4332
  %tobool65 = icmp eq %union.tree_node* %10, null, !dbg !4386
  br i1 %tobool65, label %if.else90, label %if.then66, !dbg !4388

if.then66:                                        ; preds = %if.end61
  %type67 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4389
  %11 = load %union.tree_node*, %union.tree_node** %type67, align 8, !dbg !4389
  %cmp68 = icmp eq %union.tree_node* %11, %type, !dbg !4389
  br i1 %cmp68, label %cond.end72, label %cond.true70, !dbg !4389

cond.true70:                                      ; preds = %if.then66
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4389
  br label %cond.end72, !dbg !4389

cond.end72:                                       ; preds = %if.then66, %cond.true70
  %int_cst74 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4391
  %low75 = bitcast i32* %int_cst74 to i64*, !dbg !4391
  %12 = load i64, i64* %low75, align 8, !dbg !4391
  %cmp76 = icmp eq i64 %12, %low, !dbg !4391
  br i1 %cmp76, label %cond.end80, label %cond.true78, !dbg !4391

cond.true78:                                      ; preds = %cond.end72
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4391
  br label %cond.end80, !dbg !4391

cond.end80:                                       ; preds = %cond.end72, %cond.true78
  %high = getelementptr inbounds i32, i32* %int_cst74, i64 2, !dbg !4392
  %13 = bitcast i32* %high to i64*, !dbg !4392
  %14 = load i64, i64* %13, align 8, !dbg !4392
  %cmp84 = icmp eq i64 %14, %hi, !dbg !4392
  br i1 %cmp84, label %if.end121, label %cond.true86, !dbg !4392

cond.true86:                                      ; preds = %cond.end80
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1186, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4392
  br label %if.end121, !dbg !4392

if.else90:                                        ; preds = %if.end61
  %call91 = tail call %union.tree_node* @make_node_stat(i32 23) #8, !dbg !4393
  call void @llvm.dbg.value(metadata %union.tree_node* %call91, metadata !4326, metadata !DIExpression()), !dbg !4332
  %int_cst93 = getelementptr inbounds %union.tree_node, %union.tree_node* %call91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4395
  %low94 = bitcast i32* %int_cst93 to i64*, !dbg !4395
  store i64 %low, i64* %low94, align 8, !dbg !4396
  %high97 = getelementptr inbounds i32, i32* %int_cst93, i64 2, !dbg !4397
  %15 = bitcast i32* %high97 to i64*, !dbg !4397
  store i64 %hi, i64* %15, align 8, !dbg !4398
  %type99 = getelementptr inbounds %union.tree_node, %union.tree_node* %call91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4399
  store %union.tree_node* %type, %union.tree_node** %type99, align 8, !dbg !4400
  %16 = load %struct.tree_vec*, %struct.tree_vec** %.pre-phi, align 8, !dbg !4401
  %arrayidx105 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %16, i64 0, i32 2, i64 %idxprom, !dbg !4401
  store %union.tree_node* %call91, %union.tree_node** %arrayidx105, align 8, !dbg !4402
  br label %if.end121

if.else107:                                       ; preds = %sw.epilog
  %17 = load %struct.tree_int_cst*, %struct.tree_int_cst** bitcast (%union.tree_node** @int_cst_node to %struct.tree_int_cst**), align 8, !dbg !4403
  %low110 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %17, i64 0, i32 1, i32 0, !dbg !4403
  store i64 %low, i64* %low110, align 8, !dbg !4404
  %high113 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %17, i64 0, i32 1, i32 1, !dbg !4405
  store i64 %hi, i64* %high113, align 8, !dbg !4406
  %type115 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %17, i64 0, i32 0, i32 2, !dbg !4407
  store %union.tree_node* %type, %union.tree_node** %type115, align 8, !dbg !4408
  %18 = load %struct.htab*, %struct.htab** @int_cst_hash_table, align 8, !dbg !4409
  %19 = bitcast %struct.tree_int_cst* %17 to i8*, !dbg !4410
  %call116 = tail call i8** @htab_find_slot(%struct.htab* %18, i8* %19, i32 1) #7, !dbg !4411
  call void @llvm.dbg.value(metadata i8** %call116, metadata !4329, metadata !DIExpression()), !dbg !4412
  %20 = bitcast i8** %call116 to %union.tree_node**, !dbg !4413
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !4413
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !4326, metadata !DIExpression()), !dbg !4332
  %tobool117 = icmp eq %union.tree_node* %21, null, !dbg !4414
  br i1 %tobool117, label %if.then118, label %if.end121, !dbg !4416

if.then118:                                       ; preds = %if.else107
  %22 = load %union.tree_node*, %union.tree_node** @int_cst_node, align 8, !dbg !4417
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !4326, metadata !DIExpression()), !dbg !4332
  store %union.tree_node* %22, %union.tree_node** %20, align 8, !dbg !4419
  %call119 = tail call %union.tree_node* @make_node_stat(i32 23) #8, !dbg !4420
  store %union.tree_node* %call119, %union.tree_node** @int_cst_node, align 8, !dbg !4421
  br label %if.end121, !dbg !4422

if.end121:                                        ; preds = %if.else107, %if.then118, %if.else90, %cond.end80, %cond.true86
  %t.2 = phi %union.tree_node* [ %call91, %if.else90 ], [ %10, %cond.end80 ], [ %10, %cond.true86 ], [ %21, %if.else107 ], [ %22, %if.then118 ], !dbg !4423
  call void @llvm.dbg.value(metadata %union.tree_node* %t.2, metadata !4326, metadata !DIExpression()), !dbg !4332
  ret %union.tree_node* %t.2, !dbg !4424
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_int_cstu(%union.tree_node* %type, i64 %low) local_unnamed_addr #5 !dbg !4425 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4429, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i64 %low, metadata !4430, metadata !DIExpression()), !dbg !4431
  %call = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %type, i64 %low, i64 0) #8, !dbg !4432
  ret %union.tree_node* %call, !dbg !4433
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_int_cst_type(%union.tree_node* %type, i64 %low) local_unnamed_addr #5 !dbg !4434 {
entry:
  %low1 = alloca i64, align 8
  %hi = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4436, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i64 %low, metadata !4437, metadata !DIExpression()), !dbg !4440
  %0 = bitcast i64* %low1 to i8*, !dbg !4441
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4441
  %1 = bitcast i64* %hi to i8*, !dbg !4442
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4442
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !4443
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4443

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1066, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4443
  br label %cond.end, !dbg !4443

cond.end:                                         ; preds = %entry, %cond.true
  %low.lobit = ashr i64 %low, 63, !dbg !4444
  call void @llvm.dbg.value(metadata i64* %low1, metadata !4438, metadata !DIExpression(DW_OP_deref)), !dbg !4440
  call void @llvm.dbg.value(metadata i64* %hi, metadata !4439, metadata !DIExpression(DW_OP_deref)), !dbg !4440
  %call = call i32 @fit_double_type(i64 %low, i64 %low.lobit, i64* nonnull %low1, i64* nonnull %hi, %union.tree_node* %type) #7, !dbg !4445
  %2 = load i64, i64* %low1, align 8, !dbg !4446
  call void @llvm.dbg.value(metadata i64 %2, metadata !4438, metadata !DIExpression()), !dbg !4440
  %3 = load i64, i64* %hi, align 8, !dbg !4447
  call void @llvm.dbg.value(metadata i64 %3, metadata !4439, metadata !DIExpression()), !dbg !4440
  %call2 = call %union.tree_node* @build_int_cst_wide(%union.tree_node* %type, i64 %2, i64 %3) #8, !dbg !4448
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4449
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4449
  ret %union.tree_node* %call2, !dbg !4450
}

declare dso_local i32 @fit_double_type(i64, i64, i64*, i64*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_int_cst_wide_type(%union.tree_node* %type, i64 %low, i64 %high) local_unnamed_addr #5 !dbg !4451 {
entry:
  %low.addr = alloca i64, align 8
  %high.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4453, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i64 %low, metadata !4454, metadata !DIExpression()), !dbg !4456
  store i64 %low, i64* %low.addr, align 8
  call void @llvm.dbg.value(metadata i64 %high, metadata !4455, metadata !DIExpression()), !dbg !4456
  store i64 %high, i64* %high.addr, align 8
  call void @llvm.dbg.value(metadata i64 %low, metadata !4454, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i64 %high, metadata !4455, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i64* %low.addr, metadata !4454, metadata !DIExpression(DW_OP_deref)), !dbg !4456
  call void @llvm.dbg.value(metadata i64* %high.addr, metadata !4455, metadata !DIExpression(DW_OP_deref)), !dbg !4456
  %call = call i32 @fit_double_type(i64 %low, i64 %high, i64* nonnull %low.addr, i64* nonnull %high.addr, %union.tree_node* %type) #7, !dbg !4457
  %0 = load i64, i64* %low.addr, align 8, !dbg !4458
  call void @llvm.dbg.value(metadata i64 %0, metadata !4454, metadata !DIExpression()), !dbg !4456
  %1 = load i64, i64* %high.addr, align 8, !dbg !4459
  call void @llvm.dbg.value(metadata i64 %1, metadata !4455, metadata !DIExpression()), !dbg !4456
  %call1 = call %union.tree_node* @build_int_cst_wide(%union.tree_node* %type, i64 %0, i64 %1) #8, !dbg !4460
  ret %union.tree_node* %call1, !dbg !4461
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @make_tree_vec_stat(i32 %len) local_unnamed_addr #5 !dbg !4462 {
entry:
  call void @llvm.dbg.value(metadata i32 %len, metadata !4466, metadata !DIExpression()), !dbg !4469
  %sub = shl i32 %len, 3, !dbg !4470
  %add = add i32 %sub, 32, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %add, metadata !4468, metadata !DIExpression()), !dbg !4469
  %conv2 = sext i32 %add to i64, !dbg !4472
  %call = tail call i8* @ggc_alloc_stat(i64 %conv2) #7, !dbg !4472
  %0 = bitcast i8* %call to %union.tree_node*, !dbg !4473
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4467, metadata !DIExpression()), !dbg !4469
  %call4 = tail call i8* @memset(i8* %call, i32 0, i64 %conv2) #7, !dbg !4474
  %1 = bitcast i8* %call to i64*, !dbg !4475
  %bf.load = load i64, i64* %1, align 8, !dbg !4475
  %bf.clear = and i64 %bf.load, -65536, !dbg !4475
  %bf.set = or i64 %bf.clear, 3, !dbg !4475
  store i64 %bf.set, i64* %1, align 8, !dbg !4475
  %length5 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4476
  %2 = bitcast i8* %length5 to i32*, !dbg !4476
  store i32 %len, i32* %2, align 8, !dbg !4477
  ret %union.tree_node* %0, !dbg !4478
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_low_bits_mask(%union.tree_node* %type, i32 %bits) local_unnamed_addr #5 !dbg !4479 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4483, metadata !DIExpression()), !dbg !4488
  call void @llvm.dbg.value(metadata i32 %bits, metadata !4484, metadata !DIExpression()), !dbg !4488
  call void @llvm.dbg.value(metadata i64 -1, metadata !4487, metadata !DIExpression()), !dbg !4488
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !4489
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i64 0, i32 6, !dbg !4489
  %bf.load = load i32, i32* %precision, align 4, !dbg !4489
  %bf.clear = and i32 %bf.load, 1023, !dbg !4489
  %cmp = icmp ult i32 %bf.clear, %bits, !dbg !4489
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4489

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4489
  %bf.load4.pre = load i32, i32* %precision, align 4, !dbg !4490
  br label %cond.end, !dbg !4489

cond.end:                                         ; preds = %entry, %cond.true
  %bf.load4 = phi i32 [ %bf.load, %entry ], [ %bf.load4.pre, %cond.true ], !dbg !4490
  %bf.clear5 = and i32 %bf.load4, 1023, !dbg !4490
  %cmp6 = icmp eq i32 %bf.clear5, %bits, !dbg !4492
  br i1 %cmp6, label %land.lhs.true, label %if.else, !dbg !4493

land.lhs.true:                                    ; preds = %cond.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4494
  %bf.load7 = load i64, i64* %0, align 8, !dbg !4494
  %bf.cast1 = and i64 %bf.load7, 2097152, !dbg !4494
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !4494
  br i1 %tobool, label %if.end16, label %if.else, !dbg !4495

if.else:                                          ; preds = %land.lhs.true, %cond.end
  %cmp9 = icmp ult i32 %bits, 65, !dbg !4496
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !4498

if.then10:                                        ; preds = %if.else
  %sub = sub i32 64, %bits, !dbg !4499
  %sh_prom = zext i32 %sub to i64, !dbg !4501
  %shr = lshr i64 -1, %sh_prom, !dbg !4501
  call void @llvm.dbg.value(metadata i64 %shr, metadata !4485, metadata !DIExpression()), !dbg !4488
  call void @llvm.dbg.value(metadata i64 0, metadata !4486, metadata !DIExpression()), !dbg !4488
  br label %if.end16, !dbg !4502

if.else11:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 %bits, metadata !4484, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !4488
  call void @llvm.dbg.value(metadata i64 -1, metadata !4485, metadata !DIExpression()), !dbg !4488
  %sub13 = sub i32 128, %bits, !dbg !4503
  %sh_prom14 = zext i32 %sub13 to i64, !dbg !4505
  %shr15 = lshr i64 -1, %sh_prom14, !dbg !4505
  call void @llvm.dbg.value(metadata i64 %shr15, metadata !4486, metadata !DIExpression()), !dbg !4488
  br label %if.end16

if.end16:                                         ; preds = %land.lhs.true, %if.then10, %if.else11
  %low.1 = phi i64 [ -1, %land.lhs.true ], [ %shr, %if.then10 ], [ -1, %if.else11 ], !dbg !4506
  %high.1 = phi i64 [ -1, %land.lhs.true ], [ 0, %if.then10 ], [ %shr15, %if.else11 ], !dbg !4506
  call void @llvm.dbg.value(metadata i64 %high.1, metadata !4486, metadata !DIExpression()), !dbg !4488
  call void @llvm.dbg.value(metadata i64 %low.1, metadata !4485, metadata !DIExpression()), !dbg !4488
  %call = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %type, i64 %low.1, i64 %high.1) #8, !dbg !4507
  ret %union.tree_node* %call, !dbg !4508
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @cst_and_fits_in_hwi(%union.tree_node* %x) local_unnamed_addr #5 !dbg !4509 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !4513, metadata !DIExpression()), !dbg !4514
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4515
  %bf.load = load i64, i64* %0, align 8, !dbg !4515
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4517
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !4517
  br i1 %cmp, label %if.end, label %return, !dbg !4518

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4519
  %1 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !4519
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !4519
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 6, !dbg !4519
  %bf.load2 = load i32, i32* %precision, align 4, !dbg !4519
  %bf.clear3 = and i32 %bf.load2, 1023, !dbg !4519
  %cmp4 = icmp ugt i32 %bf.clear3, 64, !dbg !4521
  br i1 %cmp4, label %return, label %if.end6, !dbg !4522

if.end6:                                          ; preds = %if.end
  %int_cst7 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4523
  %high = getelementptr inbounds i32, i32* %int_cst7, i64 2, !dbg !4523
  %3 = bitcast i32* %high to i64*, !dbg !4523
  %4 = load i64, i64* %3, align 8, !dbg !4523
  %cmp8 = icmp eq i64 %4, 0, !dbg !4524
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !4525

lor.rhs:                                          ; preds = %if.end6
  %cmp12 = icmp eq i64 %4, -1, !dbg !4526
  %phitmp = zext i1 %cmp12 to i8, !dbg !4525
  br label %lor.end, !dbg !4525

lor.end:                                          ; preds = %lor.rhs, %if.end6
  %5 = phi i8 [ 1, %if.end6 ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !4527

return:                                           ; preds = %entry, %if.end, %lor.end
  %retval.0 = phi i8 [ %5, %lor.end ], [ 0, %entry ], [ 0, %if.end ], !dbg !4514
  ret i8 %retval.0, !dbg !4528
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_vector(%union.tree_node* %type, %union.tree_node* %vals) local_unnamed_addr #5 !dbg !4529 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4533, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata %union.tree_node* %vals, metadata !4534, metadata !DIExpression()), !dbg !4542
  %call = tail call %union.tree_node* @make_node_stat(i32 27) #8, !dbg !4543
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4535, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 0, metadata !4536, metadata !DIExpression()), !dbg !4542
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4544
  %0 = bitcast i32* %elements to %union.tree_node**, !dbg !4544
  store %union.tree_node* %vals, %union.tree_node** %0, align 8, !dbg !4545
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4546
  store %union.tree_node* %type, %union.tree_node** %type1, align 8, !dbg !4547
  call void @llvm.dbg.value(metadata %union.tree_node* %vals, metadata !4537, metadata !DIExpression()), !dbg !4542
  br label %for.cond, !dbg !4548

for.cond:                                         ; preds = %cleanup, %entry
  %over.0 = phi i32 [ 0, %entry ], [ %over.1, %cleanup ], !dbg !4542
  %link.0 = phi %union.tree_node* [ %vals, %entry ], [ %6, %cleanup ], !dbg !4549
  call void @llvm.dbg.value(metadata %union.tree_node* %link.0, metadata !4537, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %over.0, metadata !4536, metadata !DIExpression()), !dbg !4542
  %tobool = icmp eq %union.tree_node* %link.0, null, !dbg !4550
  br i1 %tobool, label %for.end, label %for.body, !dbg !4550

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %link.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4551
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4551
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4538, metadata !DIExpression()), !dbg !4552
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4553
  %bf.load = load i64, i64* %3, align 8, !dbg !4553
  %bf.cast = and i64 %bf.load, 65535, !dbg !4553
  %4 = add nsw i64 %bf.cast, -23, !dbg !4553
  %cmp = icmp ult i64 %4, 6, !dbg !4553
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4555

if.end:                                           ; preds = %for.body
  %bf.lshr = lshr i64 %bf.load, 27, !dbg !4556
  %5 = trunc i64 %bf.lshr to i32, !dbg !4556
  %bf.cast6 = and i32 %5, 1, !dbg !4556
  %or = or i32 %over.0, %bf.cast6, !dbg !4557
  call void @llvm.dbg.value(metadata i32 %or, metadata !4536, metadata !DIExpression()), !dbg !4542
  br label %cleanup, !dbg !4558

cleanup:                                          ; preds = %for.body, %if.end
  %over.1 = phi i32 [ %or, %if.end ], [ %over.0, %for.body ], !dbg !4542
  call void @llvm.dbg.value(metadata i32 %over.1, metadata !4536, metadata !DIExpression()), !dbg !4542
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %link.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4559
  %6 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4559
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4537, metadata !DIExpression()), !dbg !4542
  br label %for.cond, !dbg !4560, !llvm.loop !4561

for.end:                                          ; preds = %for.cond
  %over.0.lcssa = phi i32 [ %over.0, %for.cond ], !dbg !4542
  call void @llvm.dbg.value(metadata i32 %over.0.lcssa, metadata !4536, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %over.0.lcssa, metadata !4536, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %over.0.lcssa, metadata !4536, metadata !DIExpression()), !dbg !4542
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4563
  %bf.load9 = load i64, i64* %7, align 8, !dbg !4564
  %8 = shl i32 %over.0.lcssa, 27, !dbg !4564
  %9 = and i32 %8, 134217728, !dbg !4564
  %bf.shl = zext i32 %9 to i64, !dbg !4564
  %bf.clear10 = and i64 %bf.load9, -134217729, !dbg !4564
  %bf.set = or i64 %bf.clear10, %bf.shl, !dbg !4564
  store i64 %bf.set, i64* %7, align 8, !dbg !4564
  ret %union.tree_node* %call, !dbg !4565
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_vector_from_ctor(%union.tree_node* %type, %struct.VEC_constructor_elt_gc* %v) local_unnamed_addr #5 !dbg !4566 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4570, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %v, metadata !4571, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4572, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i64 0, metadata !4573, metadata !DIExpression()), !dbg !4575
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %v, i64 0, i32 0, !dbg !4576
  br label %for.cond, !dbg !4579

for.cond:                                         ; preds = %for.body, %entry
  %list.0 = phi %union.tree_node* [ null, %entry ], [ %call16, %for.body ], !dbg !4575
  %idx.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !4580
  %value.0 = phi %union.tree_node* [ undef, %entry ], [ %value.1, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !4574, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !4573, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !4572, metadata !DIExpression()), !dbg !4575
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base) #8, !dbg !4581
  %conv = zext i32 %call to i64, !dbg !4581
  %cmp = icmp ult i64 %idx.0, %conv, !dbg !4581
  br i1 %cmp, label %cond.false3, label %cond.end13, !dbg !4581

cond.false3:                                      ; preds = %for.cond
  %conv10 = trunc i64 %idx.0 to i32, !dbg !4581
  %call11 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base, i32 %conv10) #8, !dbg !4581
  %value12 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call11, i64 0, i32 1, !dbg !4581
  %0 = load %union.tree_node*, %union.tree_node** %value12, align 8, !dbg !4581
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4574, metadata !DIExpression()), !dbg !4575
  br label %cond.end13, !dbg !4581

cond.end13:                                       ; preds = %for.cond, %cond.false3
  %value.1 = phi %union.tree_node* [ %0, %cond.false3 ], [ %value.0, %for.cond ]
  %cond14 = phi i1 [ true, %cond.false3 ], [ false, %for.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !4574, metadata !DIExpression()), !dbg !4575
  br i1 %cond14, label %for.body, label %for.end, !dbg !4579

for.body:                                         ; preds = %cond.end13
  %call16 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %value.1, %union.tree_node* %list.0) #8, !dbg !4582
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !4572, metadata !DIExpression()), !dbg !4575
  %inc = add i64 %idx.0, 1, !dbg !4581
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4573, metadata !DIExpression()), !dbg !4575
  br label %for.cond, !dbg !4581, !llvm.loop !4583

for.end:                                          ; preds = %cond.end13
  %list.0.lcssa = phi %union.tree_node* [ %list.0, %cond.end13 ], !dbg !4575
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !4572, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !4572, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !4572, metadata !DIExpression()), !dbg !4575
  %call17 = tail call %union.tree_node* @nreverse(%union.tree_node* %list.0.lcssa) #8, !dbg !4585
  %call18 = tail call %union.tree_node* @build_vector(%union.tree_node* %type, %union.tree_node* %call17) #8, !dbg !4586
  ret %union.tree_node* %call18, !dbg !4587
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !4588 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !4594, metadata !DIExpression()), !dbg !4595
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !4596
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4596

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !4596
  %0 = load i32, i32* %num, align 8, !dbg !4596
  br label %cond.end, !dbg !4596

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4596
  ret i32 %cond, !dbg !4596
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4597 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !4603, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4604, metadata !DIExpression()), !dbg !4605
  br label %land.end, !dbg !4606

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4606
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4606
  ret %struct.constructor_elt_d* %arrayidx, !dbg !4606
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @tree_cons_stat(%union.tree_node* %purpose, %union.tree_node* %value, %union.tree_node* %chain) local_unnamed_addr #5 !dbg !4607 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose, metadata !4611, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !4612, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata %union.tree_node* %chain, metadata !4613, metadata !DIExpression()), !dbg !4615
  %call = tail call i8* @ggc_alloc_stat(i64 40) #7, !dbg !4616
  %0 = bitcast i8* %call to %union.tree_node*, !dbg !4617
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4614, metadata !DIExpression()), !dbg !4615
  %call1 = tail call i8* @memset(i8* %call, i32 0, i64 24) #7, !dbg !4618
  %1 = bitcast i8* %call to i64*, !dbg !4619
  %bf.load = load i64, i64* %1, align 8, !dbg !4619
  %bf.clear = and i64 %bf.load, -65536, !dbg !4619
  %bf.set = or i64 %bf.clear, 2, !dbg !4619
  store i64 %bf.set, i64* %1, align 8, !dbg !4619
  %chain2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4620
  %2 = bitcast i8* %chain2 to %union.tree_node**, !dbg !4620
  store %union.tree_node* %chain, %union.tree_node** %2, align 8, !dbg !4621
  %purpose3 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4622
  %3 = bitcast i8* %purpose3 to %union.tree_node**, !dbg !4622
  store %union.tree_node* %purpose, %union.tree_node** %3, align 8, !dbg !4623
  %value5 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !4624
  %4 = bitcast i8* %value5 to %union.tree_node**, !dbg !4624
  store %union.tree_node* %value, %union.tree_node** %4, align 8, !dbg !4625
  ret %union.tree_node* %0, !dbg !4626
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @nreverse(%union.tree_node* %t) local_unnamed_addr #5 !dbg !4627 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4629, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4630, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4631, metadata !DIExpression()), !dbg !4633
  br label %for.cond, !dbg !4634

for.cond:                                         ; preds = %for.body, %entry
  %prev.0 = phi %union.tree_node* [ null, %entry ], [ %decl.0, %for.body ], !dbg !4633
  %decl.0 = phi %union.tree_node* [ %t, %entry ], [ %0, %for.body ], !dbg !4636
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !4631, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0, metadata !4630, metadata !DIExpression()), !dbg !4633
  %tobool = icmp eq %union.tree_node* %decl.0, null, !dbg !4637
  br i1 %tobool, label %for.end, label %for.body, !dbg !4637

for.body:                                         ; preds = %for.cond
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4638
  %0 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4638
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4632, metadata !DIExpression()), !dbg !4633
  store %union.tree_node* %prev.0, %union.tree_node** %chain, align 8, !dbg !4641
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !4630, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4631, metadata !DIExpression()), !dbg !4633
  br label %for.cond, !dbg !4642, !llvm.loop !4643

for.end:                                          ; preds = %for.cond
  %prev.0.lcssa = phi %union.tree_node* [ %prev.0, %for.cond ], !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !4630, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !4630, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !4630, metadata !DIExpression()), !dbg !4633
  ret %union.tree_node* %prev.0.lcssa, !dbg !4645
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_constructor(%union.tree_node* %type, %struct.VEC_constructor_elt_gc* %vals) local_unnamed_addr #5 !dbg !4646 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4648, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %vals, metadata !4649, metadata !DIExpression()), !dbg !4651
  %call = tail call %union.tree_node* @make_node_stat(i32 51) #8, !dbg !4652
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4650, metadata !DIExpression()), !dbg !4651
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4653
  store %union.tree_node* %type, %union.tree_node** %type1, align 8, !dbg !4654
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4655
  %0 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !4655
  store %struct.VEC_constructor_elt_gc* %vals, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !4656
  ret %union.tree_node* %call, !dbg !4657
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_constructor_single(%union.tree_node* %type, %union.tree_node* %index, %union.tree_node* %value) local_unnamed_addr #5 !dbg !4658 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4660, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.value(metadata %union.tree_node* %index, metadata !4661, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !4662, metadata !DIExpression()), !dbg !4666
  %call = tail call fastcc %struct.VEC_constructor_elt_gc* @VEC_constructor_elt_gc_alloc(i32 1) #8, !dbg !4667
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %call, metadata !4663, metadata !DIExpression()), !dbg !4666
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %call, i64 0, i32 0, !dbg !4668
  %call1 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %base, %struct.constructor_elt_d* null) #8, !dbg !4668
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call1, metadata !4664, metadata !DIExpression()), !dbg !4666
  %index2 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call1, i64 0, i32 0, !dbg !4669
  store %union.tree_node* %index, %union.tree_node** %index2, align 8, !dbg !4670
  %value3 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call1, i64 0, i32 1, !dbg !4671
  store %union.tree_node* %value, %union.tree_node** %value3, align 8, !dbg !4672
  %call4 = tail call %union.tree_node* @build_constructor(%union.tree_node* %type, %struct.VEC_constructor_elt_gc* %call) #8, !dbg !4673
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4665, metadata !DIExpression()), !dbg !4666
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4674
  %bf.load = load i64, i64* %0, align 8, !dbg !4674
  %bf.cast = and i64 %bf.load, 131072, !dbg !4674
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4675
  %bf.load7 = load i64, i64* %1, align 8, !dbg !4676
  %bf.clear8 = and i64 %bf.load7, -131073, !dbg !4676
  %bf.set = or i64 %bf.clear8, %bf.cast, !dbg !4676
  store i64 %bf.set, i64* %1, align 8, !dbg !4676
  ret %union.tree_node* %call4, !dbg !4677
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_constructor_elt_gc* @VEC_constructor_elt_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4678 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4682, metadata !DIExpression()), !dbg !4683
  %call = tail call i8* @vec_gc_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 16) #7, !dbg !4684
  %0 = bitcast i8* %call to %struct.VEC_constructor_elt_gc*, !dbg !4684
  ret %struct.VEC_constructor_elt_gc* %0, !dbg !4684
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %vec_, %struct.constructor_elt_d* %obj_) unnamed_addr #0 !dbg !4685 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !4691, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* null, metadata !4692, metadata !DIExpression()), !dbg !4694
  %num1 = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !4695
  %0 = load i32, i32* %num1, align 8, !dbg !4695
  %inc = add i32 %0, 1, !dbg !4695
  store i32 %inc, i32* %num1, align 8, !dbg !4695
  %idxprom = zext i32 %0 to i64, !dbg !4695
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4695
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %arrayidx, metadata !4693, metadata !DIExpression()), !dbg !4694
  ret %struct.constructor_elt_d* %arrayidx, !dbg !4695
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_constructor_from_list(%union.tree_node* %type, %union.tree_node* %vals) local_unnamed_addr #5 !dbg !4696 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4698, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %vals, metadata !4699, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* null, metadata !4702, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8 1, metadata !4703, metadata !DIExpression()), !dbg !4710
  %tobool = icmp eq %union.tree_node* %vals, null, !dbg !4711
  br i1 %tobool, label %if.end10, label %if.then, !dbg !4712

if.then:                                          ; preds = %entry
  %call = tail call i32 @list_length(%union.tree_node* nonnull %vals) #8, !dbg !4713
  %call1 = tail call fastcc %struct.VEC_constructor_elt_gc* @VEC_constructor_elt_gc_alloc(i32 %call) #8, !dbg !4713
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %call1, metadata !4702, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %vals, metadata !4700, metadata !DIExpression()), !dbg !4710
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %call1, i64 0, i32 0, !dbg !4714
  br label %for.cond, !dbg !4715

for.cond:                                         ; preds = %for.body, %if.then
  %t.0 = phi %union.tree_node* [ %vals, %if.then ], [ %6, %for.body ], !dbg !4716
  %constant_p.0 = phi i8 [ 1, %if.then ], [ %spec.select, %for.body ], !dbg !4717
  call void @llvm.dbg.value(metadata i8 %constant_p.0, metadata !4703, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !4700, metadata !DIExpression()), !dbg !4710
  %tobool2 = icmp eq %union.tree_node* %t.0, null, !dbg !4718
  br i1 %tobool2, label %if.end10.loopexit, label %for.body, !dbg !4718

for.body:                                         ; preds = %for.cond
  %call4 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %base, %struct.constructor_elt_d* null) #8, !dbg !4719
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call4, metadata !4704, metadata !DIExpression()), !dbg !4714
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4720
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4720
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4701, metadata !DIExpression()), !dbg !4710
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4721
  %2 = bitcast i32* %purpose to i64*, !dbg !4721
  %3 = load i64, i64* %2, align 8, !dbg !4721
  %4 = bitcast %struct.constructor_elt_d* %call4 to i64*, !dbg !4722
  store i64 %3, i64* %4, align 8, !dbg !4722
  %value6 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call4, i64 0, i32 1, !dbg !4723
  store %union.tree_node* %1, %union.tree_node** %value6, align 8, !dbg !4724
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4725
  %bf.load = load i64, i64* %5, align 8, !dbg !4725
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !4725
  %tobool8 = icmp eq i64 %bf.cast1, 0, !dbg !4725
  %spec.select = select i1 %tobool8, i8 0, i8 %constant_p.0, !dbg !4727
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !4703, metadata !DIExpression()), !dbg !4710
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4728
  %6 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4728
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4700, metadata !DIExpression()), !dbg !4710
  br label %for.cond, !dbg !4729, !llvm.loop !4730

if.end10.loopexit:                                ; preds = %for.cond
  %constant_p.0.lcssa = phi i8 [ %constant_p.0, %for.cond ], !dbg !4717
  call void @llvm.dbg.value(metadata i8 %constant_p.0.lcssa, metadata !4703, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8 %constant_p.0.lcssa, metadata !4703, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8 %constant_p.0.lcssa, metadata !4703, metadata !DIExpression()), !dbg !4710
  br label %if.end10, !dbg !4732

if.end10:                                         ; preds = %if.end10.loopexit, %entry
  %v.0 = phi %struct.VEC_constructor_elt_gc* [ null, %entry ], [ %call1, %if.end10.loopexit ], !dbg !4710
  %constant_p.2 = phi i8 [ 1, %entry ], [ %constant_p.0.lcssa, %if.end10.loopexit ], !dbg !4717
  call void @llvm.dbg.value(metadata i8 %constant_p.2, metadata !4703, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %v.0, metadata !4702, metadata !DIExpression()), !dbg !4710
  %call11 = tail call %union.tree_node* @build_constructor(%union.tree_node* %type, %struct.VEC_constructor_elt_gc* %v.0) #8, !dbg !4732
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !4700, metadata !DIExpression()), !dbg !4710
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4733
  %bf.load13 = load i64, i64* %7, align 8, !dbg !4734
  %8 = and i8 %constant_p.2, 1, !dbg !4734
  %bf.value = zext i8 %8 to i64, !dbg !4734
  %bf.shl = shl nuw nsw i64 %bf.value, 17, !dbg !4734
  %bf.clear14 = and i64 %bf.load13, -131073, !dbg !4734
  %bf.set = or i64 %bf.clear14, %bf.shl, !dbg !4734
  store i64 %bf.set, i64* %7, align 8, !dbg !4734
  ret %union.tree_node* %call11, !dbg !4735
}

; Function Attrs: nounwind uwtable
define dso_local i32 @list_length(%union.tree_node* %t) local_unnamed_addr #5 !dbg !4736 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4740, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4741, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 0, metadata !4742, metadata !DIExpression()), !dbg !4743
  br label %while.cond, !dbg !4744

while.cond:                                       ; preds = %while.body, %entry
  %p.0 = phi %union.tree_node* [ %t, %entry ], [ %0, %while.body ], !dbg !4743
  %len.0 = phi i32 [ 0, %entry ], [ %inc, %while.body ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !4742, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata %union.tree_node* %p.0, metadata !4741, metadata !DIExpression()), !dbg !4743
  %tobool = icmp eq %union.tree_node* %p.0, null, !dbg !4744
  br i1 %tobool, label %while.end, label %while.body, !dbg !4744

while.body:                                       ; preds = %while.cond
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %p.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4745
  %0 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4745
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4741, metadata !DIExpression()), !dbg !4743
  %inc = add nuw nsw i32 %len.0, 1, !dbg !4747
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4742, metadata !DIExpression()), !dbg !4743
  br label %while.cond, !dbg !4744, !llvm.loop !4748

while.end:                                        ; preds = %while.cond
  %len.0.lcssa = phi i32 [ %len.0, %while.cond ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !4742, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !4742, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %len.0.lcssa, metadata !4742, metadata !DIExpression()), !dbg !4743
  ret i32 %len.0.lcssa, !dbg !4750
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_fixed(%union.tree_node* %type, %struct.fixed_value* byval(%struct.fixed_value) align 8 %f) local_unnamed_addr #5 !dbg !4751 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4755, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.declare(metadata %struct.fixed_value* %f, metadata !4756, metadata !DIExpression()), !dbg !4760
  %call = tail call %union.tree_node* @make_node_stat(i32 25) #8, !dbg !4761
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4757, metadata !DIExpression()), !dbg !4759
  %call1 = tail call i8* @ggc_alloc_stat(i64 24) #7, !dbg !4762
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4758, metadata !DIExpression()), !dbg !4759
  %0 = bitcast %struct.fixed_value* %f to i8*, !dbg !4763
  %call2 = call i8* @memcpy(i8* %call1, i8* nonnull %0, i64 24) #7, !dbg !4764
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4765
  store %union.tree_node* %type, %union.tree_node** %type3, align 8, !dbg !4766
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4767
  %1 = bitcast i32* %fixed_cst_ptr to i8**, !dbg !4768
  store i8* %call1, i8** %1, align 8, !dbg !4768
  ret %union.tree_node* %call, !dbg !4769
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* byval(%struct.real_value) align 8 %d) local_unnamed_addr #5 !dbg !4770 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4774, metadata !DIExpression()), !dbg !4779
  call void @llvm.dbg.declare(metadata %struct.real_value* %d, metadata !4775, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 0, metadata !4778, metadata !DIExpression()), !dbg !4779
  %call = tail call %union.tree_node* @make_node_stat(i32 24) #8, !dbg !4781
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4776, metadata !DIExpression()), !dbg !4779
  %call1 = tail call i8* @ggc_alloc_stat(i64 32) #7, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4777, metadata !DIExpression()), !dbg !4779
  %0 = bitcast %struct.real_value* %d to i8*, !dbg !4783
  %call2 = call i8* @memcpy(i8* %call1, i8* nonnull %0, i64 32) #7, !dbg !4784
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4785
  store %union.tree_node* %type, %union.tree_node** %type3, align 8, !dbg !4786
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4787
  %1 = bitcast i32* %real_cst_ptr to i8**, !dbg !4788
  store i8* %call1, i8** %1, align 8, !dbg !4788
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4789
  %bf.load = load i64, i64* %2, align 8, !dbg !4790
  %bf.clear = and i64 %bf.load, -134217729, !dbg !4790
  store i64 %bf.clear, i64* %2, align 8, !dbg !4790
  ret %union.tree_node* %call, !dbg !4791
}

; Function Attrs: nounwind uwtable
define dso_local void @real_value_from_int_cst(%struct.real_value* noalias sret %agg.result, %union.tree_node* %type, %union.tree_node* %i) local_unnamed_addr #5 !dbg !4792 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4796, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata %union.tree_node* %i, metadata !4797, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.declare(metadata %struct.real_value* %agg.result, metadata !4798, metadata !DIExpression()), !dbg !4800
  %0 = bitcast %struct.real_value* %agg.result to i8*, !dbg !4801
  %call = tail call i8* @memset(i8* %0, i32 0, i64 32) #7, !dbg !4802
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !4803
  br i1 %tobool, label %cond.end7, label %cond.true, !dbg !4803

cond.true:                                        ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4804
  %bf.load = load i64, i64* %1, align 8, !dbg !4804
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4804
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !4804
  br i1 %cmp, label %cond.true1, label %cond.false, !dbg !4804

cond.true1:                                       ; preds = %cond.true
  %call2 = tail call i32 @vector_type_mode(%union.tree_node* nonnull %type) #7, !dbg !4804
  br label %cond.end7, !dbg !4804

cond.false:                                       ; preds = %cond.true
  %type3 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !4804
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i64 0, i32 6, !dbg !4804
  %bf.load4 = load i32, i32* %mode, align 4, !dbg !4804
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !4804
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !4804
  br label %cond.end7, !dbg !4804

cond.end7:                                        ; preds = %entry, %cond.true1, %cond.false
  %cond8 = phi i32 [ %call2, %cond.true1 ], [ %bf.clear5, %cond.false ], [ 0, %entry ], !dbg !4803
  %int_cst9 = getelementptr inbounds %union.tree_node, %union.tree_node* %i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4805
  %low = bitcast i32* %int_cst9 to i64*, !dbg !4805
  %2 = load i64, i64* %low, align 8, !dbg !4805
  %high = getelementptr inbounds i32, i32* %int_cst9, i64 2, !dbg !4806
  %3 = bitcast i32* %high to i64*, !dbg !4806
  %4 = load i64, i64* %3, align 8, !dbg !4806
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4807
  %5 = bitcast %union.tree_node** %type12 to i64**, !dbg !4807
  %6 = load i64*, i64** %5, align 8, !dbg !4807
  %bf.load14 = load i64, i64* %6, align 8, !dbg !4807
  %bf.lshr15 = lshr i64 %bf.load14, 21, !dbg !4807
  %7 = trunc i64 %bf.lshr15 to i32, !dbg !4807
  %bf.cast17 = and i32 %7, 1, !dbg !4807
  tail call void @real_from_integer(%struct.real_value* %agg.result, i32 %cond8, i64 %2, i64 %4, i32 %bf.cast17) #7, !dbg !4808
  ret void, !dbg !4809
}

declare dso_local void @real_from_integer(%struct.real_value*, i32, i64, i64, i32) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_real_from_int_cst(%union.tree_node* %type, %union.tree_node* %i) local_unnamed_addr #5 !dbg !4810 {
entry:
  %agg.tmp = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4814, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.value(metadata %union.tree_node* %i, metadata !4815, metadata !DIExpression()), !dbg !4818
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4819
  %bf.load = load i64, i64* %0, align 8, !dbg !4819
  call void @real_value_from_int_cst(%struct.real_value* nonnull sret %agg.tmp, %union.tree_node* %type, %union.tree_node* %i) #8, !dbg !4820
  %call = call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 %agg.tmp) #8, !dbg !4821
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4816, metadata !DIExpression()), !dbg !4818
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4822
  %bf.load2 = load i64, i64* %1, align 8, !dbg !4823
  %2 = and i64 %bf.load, 134217728, !dbg !4823
  %bf.set = or i64 %2, %bf.load2, !dbg !4823
  store i64 %bf.set, i64* %1, align 8, !dbg !4823
  ret %union.tree_node* %call, !dbg !4824
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_string(i32 %len, i8* %str) local_unnamed_addr #5 !dbg !4825 {
entry:
  call void @llvm.dbg.value(metadata i32 %len, metadata !4829, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i8* %str, metadata !4830, metadata !DIExpression()), !dbg !4833
  %conv = sext i32 %len to i64, !dbg !4834
  %add1 = add nsw i64 %conv, 29, !dbg !4835
  call void @llvm.dbg.value(metadata i64 %add1, metadata !4832, metadata !DIExpression()), !dbg !4833
  %call = tail call i8* @ggc_alloc_stat(i64 %add1) #7, !dbg !4836
  %0 = bitcast i8* %call to %union.tree_node*, !dbg !4836
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4831, metadata !DIExpression()), !dbg !4833
  %call2 = tail call i8* @memset(i8* %call, i32 0, i64 24) #7, !dbg !4837
  %1 = bitcast i8* %call to i64*, !dbg !4838
  %bf.load = load i64, i64* %1, align 8, !dbg !4838
  %bf.clear = and i64 %bf.load, -196608, !dbg !4838
  %bf.set6 = or i64 %bf.clear, 131100, !dbg !4839
  store i64 %bf.set6, i64* %1, align 8, !dbg !4839
  %length7 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4840
  %2 = bitcast i8* %length7 to i32*, !dbg !4840
  store i32 %len, i32* %2, align 8, !dbg !4841
  %str9 = getelementptr inbounds i8, i8* %call, i64 28, !dbg !4842
  %call11 = tail call i8* @memcpy(i8* nonnull %str9, i8* %str, i64 %conv) #7, !dbg !4843
  %arrayidx = getelementptr inbounds i8, i8* %str9, i64 %conv, !dbg !4844
  store i8 0, i8* %arrayidx, align 1, !dbg !4845
  ret %union.tree_node* %0, !dbg !4846
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_complex(%union.tree_node* %type, %union.tree_node* %real, %union.tree_node* %imag) local_unnamed_addr #5 !dbg !4847 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4849, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata %union.tree_node* %real, metadata !4850, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata %union.tree_node* %imag, metadata !4851, metadata !DIExpression()), !dbg !4853
  %call = tail call %union.tree_node* @make_node_stat(i32 26) #8, !dbg !4854
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4852, metadata !DIExpression()), !dbg !4853
  %real1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4855
  %0 = bitcast i32* %real1 to %union.tree_node**, !dbg !4855
  store %union.tree_node* %real, %union.tree_node** %0, align 8, !dbg !4856
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4857
  store %union.tree_node* %imag, %union.tree_node** %1, align 8, !dbg !4858
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !4859
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !4859

cond.false:                                       ; preds = %entry
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %real, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4860
  %2 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !4860
  %call5 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %2) #8, !dbg !4861
  br label %cond.end, !dbg !4859

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %call5, %cond.false ], [ %type, %entry ], !dbg !4859
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4862
  store %union.tree_node* %cond, %union.tree_node** %type7, align 8, !dbg !4863
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %real, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4864
  %bf.load = load i64, i64* %3, align 8, !dbg !4864
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %imag, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4865
  %bf.load9 = load i64, i64* %4, align 8, !dbg !4865
  %bf.lshr3 = or i64 %bf.load, %bf.load9, !dbg !4866
  %or = and i64 %bf.lshr3, 134217728, !dbg !4866
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4867
  %bf.load14 = load i64, i64* %5, align 8, !dbg !4868
  %bf.clear15 = and i64 %bf.load14, -134217729, !dbg !4868
  %bf.set = or i64 %bf.clear15, %or, !dbg !4868
  store i64 %bf.set, i64* %5, align 8, !dbg !4868
  ret %union.tree_node* %call, !dbg !4869
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_complex_type(%union.tree_node* %component_type) local_unnamed_addr #5 !dbg !4870 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %component_type, metadata !4872, metadata !DIExpression()), !dbg !4878
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %component_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4879
  %bf.load = load i64, i64* %0, align 8, !dbg !4879
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4879
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !4879
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !4879

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 7, !dbg !4879
  br i1 %cmp5, label %cond.end, label %lor.lhs.false6, !dbg !4879

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 8, !dbg !4879
  br i1 %cmp11, label %cond.end, label %lor.lhs.false12, !dbg !4879

lor.lhs.false12:                                  ; preds = %lor.lhs.false6
  %cmp17 = icmp eq i64 %bf.cast1, 9, !dbg !4879
  br i1 %cmp17, label %cond.end, label %lor.lhs.false18, !dbg !4879

lor.lhs.false18:                                  ; preds = %lor.lhs.false12
  %cmp23 = icmp eq i64 %bf.cast1, 11, !dbg !4879
  br i1 %cmp23, label %cond.end, label %cond.true, !dbg !4879

cond.true:                                        ; preds = %lor.lhs.false18
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 7457, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4879
  br label %cond.end, !dbg !4879

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false6, %lor.lhs.false12, %lor.lhs.false18, %cond.true
  %call = tail call %union.tree_node* @make_node_stat(i32 13) #8, !dbg !4880
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4873, metadata !DIExpression()), !dbg !4878
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %component_type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4881
  %2 = bitcast %union.tree_node** %1 to i64*, !dbg !4881
  %3 = load i64, i64* %2, align 8, !dbg !4881
  %type24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4882
  %4 = bitcast %union.tree_node** %type24 to i64*, !dbg !4883
  store i64 %3, i64* %4, align 8, !dbg !4883
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %component_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4884
  %5 = bitcast i40* %uid to i8*, !dbg !4884
  %call26 = tail call i32 @iterative_hash(i8* nonnull %5, i64 4, i32 0) #7, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %call26, metadata !4874, metadata !DIExpression()), !dbg !4878
  %call27 = tail call %union.tree_node* @type_hash_canon(i32 %call26, %union.tree_node* %call) #8, !dbg !4885
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !4873, metadata !DIExpression()), !dbg !4878
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4886
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !4886
  %cmp29 = icmp eq %union.tree_node* %7, null, !dbg !4886
  br i1 %cmp29, label %if.then, label %if.end, !dbg !4888

if.then:                                          ; preds = %cond.end
  tail call void @layout_type(%union.tree_node* %call27) #7, !dbg !4889
  br label %if.end, !dbg !4889

if.end:                                           ; preds = %cond.end, %if.then
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 1, !dbg !4890
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4890
  %cmp31 = icmp eq %union.tree_node* %9, %call27, !dbg !4892
  br i1 %cmp31, label %if.then32, label %if.end50, !dbg !4893

if.then32:                                        ; preds = %if.end
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %component_type, i64 0, i32 0, i32 0, i32 1, !dbg !4894
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !4894
  %cmp35 = icmp eq %union.tree_node* %11, null, !dbg !4894
  br i1 %cmp35, label %if.then36, label %if.else, !dbg !4897

if.then36:                                        ; preds = %if.then32
  store %union.tree_node* null, %union.tree_node** %8, align 8, !dbg !4898
  br label %if.end50, !dbg !4898

if.else:                                          ; preds = %if.then32
  %cmp41 = icmp eq %union.tree_node* %11, %component_type, !dbg !4899
  br i1 %cmp41, label %if.end50, label %if.then42, !dbg !4901

if.then42:                                        ; preds = %if.else
  %call45 = tail call %union.tree_node* @build_complex_type(%union.tree_node* nonnull %11) #8, !dbg !4902
  store %union.tree_node* %call45, %union.tree_node** %8, align 8, !dbg !4903
  br label %if.end50, !dbg !4904

if.end50:                                         ; preds = %if.else, %if.then36, %if.then42, %if.end
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4905
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !4905
  %tobool = icmp eq %union.tree_node* %13, null, !dbg !4905
  br i1 %tobool, label %if.then52, label %if.end105, !dbg !4906

if.then52:                                        ; preds = %if.end50
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !4907
  %cmp54 = icmp eq %union.tree_node* %14, %component_type, !dbg !4909
  br i1 %cmp54, label %if.end97, label %if.else56, !dbg !4910

if.else56:                                        ; preds = %if.then52
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !4911
  %cmp57 = icmp eq %union.tree_node* %15, %component_type, !dbg !4913
  br i1 %cmp57, label %if.end97, label %if.else59, !dbg !4914

if.else59:                                        ; preds = %if.else56
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !4915
  %cmp60 = icmp eq %union.tree_node* %16, %component_type, !dbg !4917
  br i1 %cmp60, label %if.end97, label %if.else62, !dbg !4918

if.else62:                                        ; preds = %if.else59
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !dbg !4919
  %cmp63 = icmp eq %union.tree_node* %17, %component_type, !dbg !4921
  br i1 %cmp63, label %if.end97, label %if.else65, !dbg !4922

if.else65:                                        ; preds = %if.else62
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !4923
  %cmp66 = icmp eq %union.tree_node* %18, %component_type, !dbg !4925
  br i1 %cmp66, label %if.end97, label %if.else68, !dbg !4926

if.else68:                                        ; preds = %if.else65
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4927
  %cmp69 = icmp eq %union.tree_node* %19, %component_type, !dbg !4929
  br i1 %cmp69, label %if.end97, label %if.else71, !dbg !4930

if.else71:                                        ; preds = %if.else68
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !4931
  %cmp72 = icmp eq %union.tree_node* %20, %component_type, !dbg !4933
  br i1 %cmp72, label %if.end97, label %if.else74, !dbg !4934

if.else74:                                        ; preds = %if.else71
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !4935
  %cmp75 = icmp eq %union.tree_node* %21, %component_type, !dbg !4937
  br i1 %cmp75, label %if.end97, label %if.else77, !dbg !4938

if.else77:                                        ; preds = %if.else74
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !4939
  %cmp78 = icmp eq %union.tree_node* %22, %component_type, !dbg !4941
  br i1 %cmp78, label %if.end97, label %if.else80, !dbg !4942

if.else80:                                        ; preds = %if.else77
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !4943
  %cmp81 = icmp eq %union.tree_node* %23, %component_type, !dbg !4945
  br i1 %cmp81, label %if.end97, label %if.else83, !dbg !4946

if.else83:                                        ; preds = %if.else80
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !4947
  %cmp84 = icmp eq %union.tree_node* %24, %component_type, !dbg !4949
  %. = select i1 %cmp84, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.236, i64 0, i64 0), i8* null
  call void @llvm.dbg.value(metadata i8* %., metadata !4875, metadata !DIExpression()), !dbg !4950
  br label %if.end97

if.end97:                                         ; preds = %if.else56, %if.else62, %if.else68, %if.else74, %if.else83, %if.else80, %if.else77, %if.else71, %if.else65, %if.else59, %if.then52
  %name53.10 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.226, i64 0, i64 0), %if.then52 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.227, i64 0, i64 0), %if.else56 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.228, i64 0, i64 0), %if.else59 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.229, i64 0, i64 0), %if.else62 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.230, i64 0, i64 0), %if.else65 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.231, i64 0, i64 0), %if.else68 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i64 0, i64 0), %if.else71 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.233, i64 0, i64 0), %if.else74 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.234, i64 0, i64 0), %if.else77 ], [ %., %if.else83 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.235, i64 0, i64 0), %if.else80 ], !dbg !4951
  call void @llvm.dbg.value(metadata i8* %name53.10, metadata !4875, metadata !DIExpression()), !dbg !4950
  %cmp98 = icmp eq i8* %name53.10, null, !dbg !4952
  br i1 %cmp98, label %if.end105, label %if.then99, !dbg !4954

if.then99:                                        ; preds = %if.end97
  %call100 = tail call %union.tree_node* @get_identifier(i8* nonnull %name53.10) #7, !dbg !4955
  %call101 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %call100, %union.tree_node* %call27) #8, !dbg !4955
  store %union.tree_node* %call101, %union.tree_node** %12, align 8, !dbg !4956
  br label %if.end105, !dbg !4957

if.end105:                                        ; preds = %if.end97, %if.end50, %if.then99
  %bf.load107 = load i64, i64* %0, align 8, !dbg !4958
  %bf.lshr = lshr i64 %bf.load107, 20, !dbg !4958
  %25 = trunc i64 %bf.lshr to i32, !dbg !4958
  %bf.cast109 = and i32 %25, 1, !dbg !4958
  %26 = lshr i64 %bf.load107, 18, !dbg !4958
  %27 = trunc i64 %26 to i32, !dbg !4958
  %mul115 = and i32 %27, 2, !dbg !4958
  %or = or i32 %bf.cast109, %mul115, !dbg !4958
  %type116 = bitcast %union.tree_node* %component_type to %struct.tree_type*, !dbg !4958
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type116, i64 0, i32 6, !dbg !4958
  %bf.load117 = load i32, i32* %restrict_flag, align 4, !dbg !4958
  %28 = lshr i32 %bf.load117, 11, !dbg !4958
  %mul120 = and i32 %28, 4, !dbg !4958
  %or121 = or i32 %or, %mul120, !dbg !4958
  %29 = lshr i64 %bf.load107, 48, !dbg !4958
  %30 = trunc i64 %29 to i32, !dbg !4958
  %shl = and i32 %30, 65280, !dbg !4958
  %or126 = or i32 %or121, %shl, !dbg !4958
  %call127 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %call27, i32 %or126) #8, !dbg !4959
  ret %union.tree_node* %call127, !dbg !4960
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_one_cst(%union.tree_node* %type) local_unnamed_addr #5 !dbg !4961 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4963, metadata !DIExpression()), !dbg !4969
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4970
  %bf.load = load i64, i64* %0, align 8, !dbg !4970
  %1 = trunc i64 %bf.load to i16, !dbg !4970
  switch i16 %1, label %sw.default [
    i16 8, label %sw.bb
    i16 6, label %sw.bb
    i16 7, label %sw.bb
    i16 10, label %sw.bb
    i16 12, label %sw.bb
    i16 5, label %sw.bb
    i16 9, label %sw.bb1
    i16 11, label %sw.bb3
    i16 14, label %sw.bb58
    i16 13, label %sw.bb69
  ], !dbg !4971

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* %type, i64 1) #8, !dbg !4972
  br label %return, !dbg !4973

sw.bb1:                                           ; preds = %entry
  %call2 = tail call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst1) #8, !dbg !4974
  br label %return, !dbg !4975

sw.bb3:                                           ; preds = %entry
  %bf.cast71 = and i64 %bf.load, 65535, !dbg !4976
  %cmp = icmp eq i64 %bf.cast71, 14, !dbg !4976
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4976

cond.true:                                        ; preds = %sw.bb3
  %call8 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !4976
  br label %cond.end, !dbg !4976

cond.false:                                       ; preds = %sw.bb3
  %type9 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !4976
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type9, i64 0, i32 6, !dbg !4976
  %bf.load10 = load i32, i32* %mode, align 4, !dbg !4976
  %bf.lshr = lshr i32 %bf.load10, 16, !dbg !4976
  %bf.clear11 = and i32 %bf.lshr, 255, !dbg !4976
  br label %cond.end, !dbg !4976

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call8, %cond.true ], [ %bf.clear11, %cond.false ], !dbg !4976
  %idxprom = zext i32 %cond to i64, !dbg !4976
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4976
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4976
  %cmp12 = icmp eq i8 %2, 6, !dbg !4976
  br i1 %cmp12, label %cond.end37, label %lor.lhs.false, !dbg !4976

lor.lhs.false:                                    ; preds = %cond.end
  %bf.load15 = load i64, i64* %0, align 8, !dbg !4976
  %bf.cast172 = and i64 %bf.load15, 65535, !dbg !4976
  %cmp18 = icmp eq i64 %bf.cast172, 14, !dbg !4976
  br i1 %cmp18, label %cond.true20, label %cond.false22, !dbg !4976

cond.true20:                                      ; preds = %lor.lhs.false
  %call21 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !4976
  br label %cond.end28, !dbg !4976

cond.false22:                                     ; preds = %lor.lhs.false
  %type23 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !4976
  %mode24 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i64 0, i32 6, !dbg !4976
  %bf.load25 = load i32, i32* %mode24, align 4, !dbg !4976
  %bf.lshr26 = lshr i32 %bf.load25, 16, !dbg !4976
  %bf.clear27 = and i32 %bf.lshr26, 255, !dbg !4976
  br label %cond.end28, !dbg !4976

cond.end28:                                       ; preds = %cond.false22, %cond.true20
  %cond29 = phi i32 [ %call21, %cond.true20 ], [ %bf.clear27, %cond.false22 ], !dbg !4976
  %idxprom30 = zext i32 %cond29 to i64, !dbg !4976
  %arrayidx31 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom30, !dbg !4976
  %3 = load i8, i8* %arrayidx31, align 1, !dbg !4976
  %cmp33 = icmp eq i8 %3, 7, !dbg !4976
  br i1 %cmp33, label %cond.end37, label %cond.true35, !dbg !4976

cond.true35:                                      ; preds = %cond.end28
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1514, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !4976
  br label %cond.end37, !dbg !4976

cond.end37:                                       ; preds = %cond.end, %cond.end28, %cond.true35
  %bf.load40 = load i64, i64* %0, align 8, !dbg !4977
  %bf.cast423 = and i64 %bf.load40, 65535, !dbg !4977
  %cmp43 = icmp eq i64 %bf.cast423, 14, !dbg !4977
  br i1 %cmp43, label %cond.true45, label %cond.false47, !dbg !4977

cond.true45:                                      ; preds = %cond.end37
  %call46 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !4977
  br label %cond.end53, !dbg !4977

cond.false47:                                     ; preds = %cond.end37
  %type48 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !4977
  %mode49 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type48, i64 0, i32 6, !dbg !4977
  %bf.load50 = load i32, i32* %mode49, align 4, !dbg !4977
  %bf.lshr51 = lshr i32 %bf.load50, 16, !dbg !4977
  %bf.clear52 = and i32 %bf.lshr51, 255, !dbg !4977
  br label %cond.end53, !dbg !4977

cond.end53:                                       ; preds = %cond.false47, %cond.true45
  %cond54 = phi i32 [ %call46, %cond.true45 ], [ %bf.clear52, %cond.false47 ], !dbg !4977
  %sub = add i32 %cond54, -30, !dbg !4977
  %idxprom55 = zext i32 %sub to i64, !dbg !4977
  %arrayidx56 = getelementptr inbounds [8 x %struct.fixed_value], [8 x %struct.fixed_value]* @fconst1, i64 0, i64 %idxprom55, !dbg !4977
  %call57 = tail call %union.tree_node* @build_fixed(%union.tree_node* %type, %struct.fixed_value* nonnull byval(%struct.fixed_value) align 8 %arrayidx56) #8, !dbg !4978
  br label %return, !dbg !4979

sw.bb58:                                          ; preds = %entry
  %type59 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4980
  %4 = load %union.tree_node*, %union.tree_node** %type59, align 8, !dbg !4980
  %call60 = tail call %union.tree_node* @build_one_cst(%union.tree_node* %4) #8, !dbg !4981
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !4964, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4967, metadata !DIExpression()), !dbg !4982
  %type61 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !4983
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type61, i64 0, i32 6, !dbg !4983
  %bf.load62 = load i32, i32* %precision, align 4, !dbg !4983
  %bf.clear63 = and i32 %bf.load62, 1023, !dbg !4983
  %sh_prom = zext i32 %bf.clear63 to i64, !dbg !4983
  %shl = shl i64 1, %sh_prom, !dbg !4983
  %conv64 = trunc i64 %shl to i32, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %conv64, metadata !4968, metadata !DIExpression()), !dbg !4982
  br label %for.cond, !dbg !4985

for.cond:                                         ; preds = %for.body, %sw.bb58
  %cst.0 = phi %union.tree_node* [ null, %sw.bb58 ], [ %call67, %for.body ], !dbg !4982
  %i.0 = phi i32 [ %conv64, %sw.bb58 ], [ %dec, %for.body ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4968, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata %union.tree_node* %cst.0, metadata !4967, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4968, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4982
  %cmp65 = icmp sgt i32 %i.0, 0, !dbg !4987
  br i1 %cmp65, label %for.body, label %for.end, !dbg !4989

for.body:                                         ; preds = %for.cond
  %dec = add nsw i32 %i.0, -1, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %dec, metadata !4968, metadata !DIExpression()), !dbg !4982
  %call67 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call60, %union.tree_node* %cst.0) #8, !dbg !4991
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !4967, metadata !DIExpression()), !dbg !4982
  br label %for.cond, !dbg !4992, !llvm.loop !4993

for.end:                                          ; preds = %for.cond
  %cst.0.lcssa = phi %union.tree_node* [ %cst.0, %for.cond ], !dbg !4982
  call void @llvm.dbg.value(metadata %union.tree_node* %cst.0.lcssa, metadata !4967, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata %union.tree_node* %cst.0.lcssa, metadata !4967, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata %union.tree_node* %cst.0.lcssa, metadata !4967, metadata !DIExpression()), !dbg !4982
  %call68 = tail call %union.tree_node* @build_vector(%union.tree_node* %type, %union.tree_node* %cst.0.lcssa) #8, !dbg !4995
  br label %return

sw.bb69:                                          ; preds = %entry
  %type71 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4996
  %5 = load %union.tree_node*, %union.tree_node** %type71, align 8, !dbg !4996
  %call72 = tail call %union.tree_node* @build_one_cst(%union.tree_node* %5) #8, !dbg !4997
  %6 = load %union.tree_node*, %union.tree_node** %type71, align 8, !dbg !4998
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !4998
  %call75 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %6, %union.tree_node* %7) #7, !dbg !4998
  %call76 = tail call %union.tree_node* @build_complex(%union.tree_node* %type, %union.tree_node* %call72, %union.tree_node* %call75) #8, !dbg !4999
  ret %union.tree_node* %call76, !dbg !5000

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1538, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !5001
  br label %return, !dbg !5002

return:                                           ; preds = %sw.default, %for.end, %cond.end53, %sw.bb1, %sw.bb
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %call68, %for.end ], [ %call57, %cond.end53 ], [ %call2, %sw.bb1 ], [ %call, %sw.bb ], !dbg !4969
  ret %union.tree_node* %retval.0, !dbg !5000
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @make_tree_binfo_stat(i32 %base_binfos) local_unnamed_addr #5 !dbg !5003 {
entry:
  call void @llvm.dbg.value(metadata i32 %base_binfos, metadata !5007, metadata !DIExpression()), !dbg !5010
  %call = tail call fastcc i64 @VEC_tree_base_embedded_size(i32 %base_binfos) #8, !dbg !5011
  %add = add i64 %call, 88, !dbg !5012
  call void @llvm.dbg.value(metadata i64 %add, metadata !5009, metadata !DIExpression()), !dbg !5010
  %call1 = tail call i8* @ggc_alloc_stat(i64 %add) #7, !dbg !5013
  %0 = bitcast i8* %call1 to %union.tree_node*, !dbg !5014
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5008, metadata !DIExpression()), !dbg !5010
  %call2 = tail call i8* @memset(i8* %call1, i32 0, i64 88) #7, !dbg !5015
  %1 = bitcast i8* %call1 to i64*, !dbg !5016
  %bf.load = load i64, i64* %1, align 8, !dbg !5016
  %bf.clear = and i64 %bf.load, -65536, !dbg !5016
  %bf.set = or i64 %bf.clear, 149, !dbg !5016
  store i64 %bf.set, i64* %1, align 8, !dbg !5016
  %base_binfos5 = getelementptr inbounds i8, i8* %call1, i64 88, !dbg !5017
  %base6 = bitcast i8* %base_binfos5 to %struct.VEC_tree_base*, !dbg !5017
  tail call fastcc void @VEC_tree_base_embedded_init(%struct.VEC_tree_base* nonnull %base6, i32 %base_binfos) #8, !dbg !5017
  ret %union.tree_node* %0, !dbg !5018
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_base_embedded_init(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5019 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5024, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5025, metadata !DIExpression()), !dbg !5026
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5027
  store i32 0, i32* %num, align 8, !dbg !5027
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !5027
  store i32 %alloc_, i32* %alloc, align 4, !dbg !5027
  ret void, !dbg !5027
}

; Function Attrs: nounwind uwtable
define dso_local i32 @integer_zerop(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5028 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5030, metadata !DIExpression()), !dbg !5031
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5032
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5030, metadata !DIExpression()), !dbg !5031
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5033
  %bf.load = load i64, i64* %0, align 8, !dbg !5033
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5034
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !5034
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !5035

land.lhs.true:                                    ; preds = %entry
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5036
  %low = bitcast i32* %int_cst1 to i64*, !dbg !5036
  %1 = load i64, i64* %low, align 8, !dbg !5036
  %cmp2 = icmp eq i64 %1, 0, !dbg !5037
  br i1 %cmp2, label %land.lhs.true3, label %lor.rhs, !dbg !5038

land.lhs.true3:                                   ; preds = %land.lhs.true
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !5039
  %2 = bitcast i32* %high to i64*, !dbg !5039
  %3 = load i64, i64* %2, align 8, !dbg !5039
  %cmp6 = icmp eq i64 %3, 0, !dbg !5040
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !5041

lor.rhs:                                          ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %cmp11 = icmp eq i64 %bf.cast1, 26, !dbg !5042
  br i1 %cmp11, label %land.lhs.true12, label %lor.end, !dbg !5043

land.lhs.true12:                                  ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5044
  %4 = bitcast i32* %real to %union.tree_node**, !dbg !5044
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5044
  %call13 = tail call i32 @integer_zerop(%union.tree_node* %5) #8, !dbg !5045
  %tobool = icmp eq i32 %call13, 0, !dbg !5045
  br i1 %tobool, label %lor.end, label %land.rhs, !dbg !5046

land.rhs:                                         ; preds = %land.lhs.true12
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5047
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5047
  %call15 = tail call i32 @integer_zerop(%union.tree_node* %7) #8, !dbg !5048
  %tobool16 = icmp ne i32 %call15, 0, !dbg !5046
  %phitmp = zext i1 %tobool16 to i32
  ret i32 %phitmp, !dbg !5049

lor.end:                                          ; preds = %land.lhs.true12, %lor.rhs, %land.lhs.true3
  %8 = phi i32 [ 1, %land.lhs.true3 ], [ 0, %land.lhs.true12 ], [ 0, %lor.rhs ]
  ret i32 %8, !dbg !5049
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !5050 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5052, metadata !DIExpression()), !dbg !5053
  br label %while.cond, !dbg !5054

while.cond:                                       ; preds = %while.body, %entry
  %exp.addr.0 = phi %union.tree_node* [ %exp, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !5052, metadata !DIExpression()), !dbg !5053
  %call = tail call fastcc zeroext i8 @tree_nop_conversion(%union.tree_node* %exp.addr.0) #8, !dbg !5055
  %tobool = icmp eq i8 %call, 0, !dbg !5054
  br i1 %tobool, label %while.end, label %while.body, !dbg !5054

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5056
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5056
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5052, metadata !DIExpression()), !dbg !5053
  br label %while.cond, !dbg !5054, !llvm.loop !5057

while.end:                                        ; preds = %while.cond
  %exp.addr.0.lcssa = phi %union.tree_node* [ %exp.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !5052, metadata !DIExpression()), !dbg !5053
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !5052, metadata !DIExpression()), !dbg !5053
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !5052, metadata !DIExpression()), !dbg !5053
  ret %union.tree_node* %exp.addr.0.lcssa, !dbg !5058
}

; Function Attrs: nounwind uwtable
define dso_local i32 @integer_onep(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5059 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5061, metadata !DIExpression()), !dbg !5062
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5063
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5061, metadata !DIExpression()), !dbg !5062
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5064
  %bf.load = load i64, i64* %0, align 8, !dbg !5064
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5065
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !5065
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !5066

land.lhs.true:                                    ; preds = %entry
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5067
  %low = bitcast i32* %int_cst1 to i64*, !dbg !5067
  %1 = load i64, i64* %low, align 8, !dbg !5067
  %cmp2 = icmp eq i64 %1, 1, !dbg !5068
  br i1 %cmp2, label %land.lhs.true3, label %lor.rhs, !dbg !5069

land.lhs.true3:                                   ; preds = %land.lhs.true
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !5070
  %2 = bitcast i32* %high to i64*, !dbg !5070
  %3 = load i64, i64* %2, align 8, !dbg !5070
  %cmp6 = icmp eq i64 %3, 0, !dbg !5071
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !5072

lor.rhs:                                          ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %cmp11 = icmp eq i64 %bf.cast1, 26, !dbg !5073
  br i1 %cmp11, label %land.lhs.true12, label %lor.end, !dbg !5074

land.lhs.true12:                                  ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5075
  %4 = bitcast i32* %real to %union.tree_node**, !dbg !5075
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5075
  %call13 = tail call i32 @integer_onep(%union.tree_node* %5) #8, !dbg !5076
  %tobool = icmp eq i32 %call13, 0, !dbg !5076
  br i1 %tobool, label %lor.end, label %land.rhs, !dbg !5077

land.rhs:                                         ; preds = %land.lhs.true12
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5078
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5078
  %call15 = tail call i32 @integer_zerop(%union.tree_node* %7) #8, !dbg !5079
  %tobool16 = icmp ne i32 %call15, 0, !dbg !5077
  %phitmp = zext i1 %tobool16 to i32
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true12, %lor.rhs, %land.rhs, %land.lhs.true3
  %8 = phi i32 [ 1, %land.lhs.true3 ], [ 0, %land.lhs.true12 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i32 %8, !dbg !5080
}

; Function Attrs: nounwind uwtable
define dso_local i32 @integer_all_onesp(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5081 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5083, metadata !DIExpression()), !dbg !5090
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5083, metadata !DIExpression()), !dbg !5090
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5092
  %bf.load = load i64, i64* %0, align 8, !dbg !5092
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5094
  %cmp = icmp eq i64 %bf.cast1, 26, !dbg !5094
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5095

land.lhs.true:                                    ; preds = %entry
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5096
  %1 = bitcast i32* %real to %union.tree_node**, !dbg !5096
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5096
  %call1 = tail call i32 @integer_all_onesp(%union.tree_node* %2) #8, !dbg !5097
  %tobool = icmp eq i32 %call1, 0, !dbg !5097
  br i1 %tobool, label %if.else, label %land.lhs.true2, !dbg !5098

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5099
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5099
  %call4 = tail call i32 @integer_zerop(%union.tree_node* %4) #8, !dbg !5100
  %tobool5 = icmp eq i32 %call4, 0, !dbg !5100
  br i1 %tobool5, label %if.else, label %cleanup, !dbg !5101

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %bf.load7 = load i64, i64* %0, align 8, !dbg !5102
  %bf.cast92 = and i64 %bf.load7, 65535, !dbg !5104
  %cmp10 = icmp eq i64 %bf.cast92, 23, !dbg !5104
  br i1 %cmp10, label %if.end12, label %cleanup, !dbg !5105

if.end12:                                         ; preds = %if.else
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5106
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !5106
  %6 = load i64*, i64** %5, align 8, !dbg !5106
  %bf.load14 = load i64, i64* %6, align 8, !dbg !5106
  %int_cst17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5107
  %low = bitcast i32* %int_cst17 to i64*, !dbg !5107
  %7 = load i64, i64* %low, align 8, !dbg !5107
  %cmp18 = icmp eq i64 %7, -1, !dbg !5109
  br i1 %cmp18, label %land.lhs.true19, label %if.end24, !dbg !5110

land.lhs.true19:                                  ; preds = %if.end12
  %high = getelementptr inbounds i32, i32* %int_cst17, i64 2, !dbg !5111
  %8 = bitcast i32* %high to i64*, !dbg !5111
  %9 = load i64, i64* %8, align 8, !dbg !5111
  %cmp22 = icmp eq i64 %9, -1, !dbg !5112
  br i1 %cmp22, label %cleanup, label %if.end24, !dbg !5113

if.end24:                                         ; preds = %land.lhs.true19, %if.end12
  %bf.cast163 = and i64 %bf.load14, 2097152, !dbg !5114
  %tobool25 = icmp eq i64 %bf.cast163, 0, !dbg !5114
  br i1 %tobool25, label %cleanup, label %if.end27, !dbg !5116

if.end27:                                         ; preds = %if.end24
  %bf.cast334 = and i64 %bf.load14, 65535, !dbg !5117
  %cmp34 = icmp eq i64 %bf.cast334, 14, !dbg !5117
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !5117

cond.true:                                        ; preds = %if.end27
  %.cast = bitcast i64* %6 to %union.tree_node*, !dbg !5117
  %call37 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !5117
  br label %cond.end, !dbg !5117

cond.false:                                       ; preds = %if.end27
  %type40 = bitcast i64* %6 to %struct.tree_type*, !dbg !5117
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type40, i64 0, i32 6, !dbg !5117
  %bf.load41 = load i32, i32* %mode, align 4, !dbg !5117
  %bf.lshr42 = lshr i32 %bf.load41, 16, !dbg !5117
  %bf.clear43 = and i32 %bf.lshr42, 255, !dbg !5117
  br label %cond.end, !dbg !5117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call37, %cond.true ], [ %bf.clear43, %cond.false ], !dbg !5117
  %idxprom = zext i32 %cond to i64, !dbg !5117
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5117
  %10 = load i8, i8* %arrayidx, align 1, !dbg !5117
  %conv44 = zext i8 %10 to i32, !dbg !5117
  %mul = shl nuw nsw i32 %conv44, 3, !dbg !5117
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5084, metadata !DIExpression()), !dbg !5090
  %cmp47 = icmp ugt i8 %10, 7, !dbg !5118
  br i1 %cmp47, label %if.then49, label %if.else72, !dbg !5119

if.then49:                                        ; preds = %cond.end
  %sub = add nsw i32 %mul, -64, !dbg !5120
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5089, metadata !DIExpression()), !dbg !5121
  %cmp50 = icmp slt i32 %sub, 65, !dbg !5122
  br i1 %cmp50, label %cond.end54, label %cond.true52, !dbg !5122

cond.true52:                                      ; preds = %if.then49
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 1663, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !5122
  br label %cond.end54, !dbg !5122

cond.end54:                                       ; preds = %if.then49, %cond.true52
  call void @llvm.dbg.value(metadata i64 undef, metadata !5086, metadata !DIExpression()), !dbg !5121
  %11 = load i64, i64* %low, align 8, !dbg !5123
  %cmp65 = icmp eq i64 %11, -1, !dbg !5124
  br i1 %cmp65, label %land.rhs, label %land.end, !dbg !5125

land.rhs:                                         ; preds = %cond.end54
  %cmp56 = icmp eq i32 %sub, 64, !dbg !5126
  %sh_prom = zext i32 %sub to i64, !dbg !5128
  %notmask5 = shl nsw i64 -1, %sh_prom, !dbg !5128
  %sub60 = xor i64 %notmask5, -1, !dbg !5128
  %high_value.0 = select i1 %cmp56, i64 -1, i64 %sub60, !dbg !5128
  call void @llvm.dbg.value(metadata i64 %high_value.0, metadata !5086, metadata !DIExpression()), !dbg !5121
  %high69 = getelementptr inbounds i32, i32* %int_cst17, i64 2, !dbg !5129
  %12 = bitcast i32* %high69 to i64*, !dbg !5129
  %13 = load i64, i64* %12, align 8, !dbg !5129
  %cmp70 = icmp eq i64 %13, %high_value.0, !dbg !5130
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end54
  %14 = phi i1 [ false, %cond.end54 ], [ %cmp70, %land.rhs ], !dbg !5121
  br label %cleanup

if.else72:                                        ; preds = %cond.end
  %15 = load i64, i64* %low, align 8, !dbg !5131
  %sh_prom76 = zext i32 %mul to i64, !dbg !5132
  %notmask = shl nsw i64 -1, %sh_prom76, !dbg !5133
  %sub78 = xor i64 %notmask, -1, !dbg !5133
  %cmp79 = icmp eq i64 %15, %sub78, !dbg !5134
  br label %cleanup, !dbg !5135

cleanup:                                          ; preds = %land.lhs.true2, %if.end24, %if.else, %land.lhs.true19, %if.else72, %land.end
  %retval.0.shrunk = phi i1 [ %14, %land.end ], [ %cmp79, %if.else72 ], [ true, %land.lhs.true2 ], [ false, %if.else ], [ true, %land.lhs.true19 ], [ false, %if.end24 ]
  %retval.0 = zext i1 %retval.0.shrunk to i32, !dbg !5090
  ret i32 %retval.0, !dbg !5136
}

; Function Attrs: nounwind uwtable
define dso_local i32 @integer_pow2p(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5137 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5139, metadata !DIExpression()), !dbg !5143
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5144
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5139, metadata !DIExpression()), !dbg !5143
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5145
  %bf.load = load i64, i64* %0, align 8, !dbg !5145
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5147
  %cmp = icmp eq i64 %bf.cast1, 26, !dbg !5147
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5148

land.lhs.true:                                    ; preds = %entry
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5149
  %1 = bitcast i32* %real to %union.tree_node**, !dbg !5149
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5149
  %call1 = tail call i32 @integer_pow2p(%union.tree_node* %2) #8, !dbg !5150
  %tobool = icmp eq i32 %call1, 0, !dbg !5150
  br i1 %tobool, label %if.end, label %land.lhs.true2, !dbg !5151

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5152
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5152
  %call4 = tail call i32 @integer_zerop(%union.tree_node* %4) #8, !dbg !5153
  %tobool5 = icmp eq i32 %call4, 0, !dbg !5153
  br i1 %tobool5, label %if.end, label %cleanup, !dbg !5154

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %bf.load7 = load i64, i64* %0, align 8, !dbg !5155
  %bf.cast92 = and i64 %bf.load7, 65535, !dbg !5157
  %cmp10 = icmp eq i64 %bf.cast92, 23, !dbg !5157
  br i1 %cmp10, label %if.end12, label %cleanup, !dbg !5158

if.end12:                                         ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5159
  %5 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5159
  %6 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !5159
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 6, !dbg !5159
  %bf.load14 = load i32, i32* %precision, align 4, !dbg !5159
  %bf.clear15 = and i32 %bf.load14, 1023, !dbg !5159
  call void @llvm.dbg.value(metadata i32 %bf.clear15, metadata !5140, metadata !DIExpression()), !dbg !5143
  %int_cst16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5160
  %high17 = getelementptr inbounds i32, i32* %int_cst16, i64 2, !dbg !5160
  %7 = bitcast i32* %high17 to i64*, !dbg !5160
  %8 = load i64, i64* %7, align 8, !dbg !5160
  call void @llvm.dbg.value(metadata i64 %8, metadata !5141, metadata !DIExpression()), !dbg !5143
  %low20 = bitcast i32* %int_cst16 to i64*, !dbg !5161
  %9 = load i64, i64* %low20, align 8, !dbg !5161
  call void @llvm.dbg.value(metadata i64 %9, metadata !5142, metadata !DIExpression()), !dbg !5143
  %cmp21 = icmp eq i32 %bf.clear15, 128, !dbg !5162
  br i1 %cmp21, label %if.end34, label %if.else, !dbg !5164

if.else:                                          ; preds = %if.end12
  %cmp23 = icmp ugt i32 %bf.clear15, 64, !dbg !5165
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !5167

if.then24:                                        ; preds = %if.else
  %sub = add nsw i32 %bf.clear15, -64, !dbg !5168
  %sh_prom = zext i32 %sub to i64, !dbg !5169
  %shl = shl i64 -1, %sh_prom, !dbg !5169
  %neg = xor i64 %shl, -1, !dbg !5170
  %and = and i64 %8, %neg, !dbg !5171
  call void @llvm.dbg.value(metadata i64 %and, metadata !5141, metadata !DIExpression()), !dbg !5143
  br label %if.end34, !dbg !5172

if.else25:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i64 0, metadata !5141, metadata !DIExpression()), !dbg !5143
  %cmp26 = icmp eq i32 %bf.clear15, 64, !dbg !5173
  br i1 %cmp26, label %if.end34, label %if.then27, !dbg !5176

if.then27:                                        ; preds = %if.else25
  %sh_prom28 = zext i32 %bf.clear15 to i64, !dbg !5177
  %shl29 = shl i64 -1, %sh_prom28, !dbg !5177
  %neg30 = xor i64 %shl29, -1, !dbg !5178
  %and31 = and i64 %9, %neg30, !dbg !5179
  call void @llvm.dbg.value(metadata i64 %and31, metadata !5142, metadata !DIExpression()), !dbg !5143
  br label %if.end34, !dbg !5180

if.end34:                                         ; preds = %if.else25, %if.then24, %if.then27, %if.end12
  %low.2 = phi i64 [ %9, %if.end12 ], [ %9, %if.then24 ], [ %and31, %if.then27 ], [ %9, %if.else25 ], !dbg !5181
  %high.1 = phi i64 [ %8, %if.end12 ], [ %and, %if.then24 ], [ 0, %if.then27 ], [ 0, %if.else25 ], !dbg !5143
  call void @llvm.dbg.value(metadata i64 %high.1, metadata !5141, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.value(metadata i64 %low.2, metadata !5142, metadata !DIExpression()), !dbg !5143
  %10 = or i64 %high.1, %low.2, !dbg !5182
  %11 = icmp eq i64 %10, 0, !dbg !5182
  br i1 %11, label %cleanup, label %if.end39, !dbg !5182

if.end39:                                         ; preds = %if.end34
  %cmp40 = icmp eq i64 %high.1, 0, !dbg !5184
  br i1 %cmp40, label %land.lhs.true41, label %lor.rhs, !dbg !5185

land.lhs.true41:                                  ; preds = %if.end39
  %12 = tail call i64 @llvm.ctpop.i64(i64 %low.2), !dbg !5186, !range !5187
  %cmp44 = icmp ult i64 %12, 2, !dbg !5186
  br i1 %cmp44, label %lor.end, label %lor.rhs, !dbg !5188

lor.rhs:                                          ; preds = %land.lhs.true41, %if.end39
  %cmp45 = icmp eq i64 %low.2, 0, !dbg !5189
  br i1 %cmp45, label %land.rhs, label %lor.end, !dbg !5190

land.rhs:                                         ; preds = %lor.rhs
  %13 = tail call i64 @llvm.ctpop.i64(i64 %high.1), !dbg !5191, !range !5187
  %cmp48 = icmp ult i64 %13, 2, !dbg !5191
  %phitmp = zext i1 %cmp48 to i32
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %land.lhs.true41
  %14 = phi i32 [ 1, %land.lhs.true41 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !5192

cleanup:                                          ; preds = %land.lhs.true2, %if.end, %if.end34, %lor.end
  %retval.0 = phi i32 [ %14, %lor.end ], [ 1, %land.lhs.true2 ], [ 0, %if.end ], [ 0, %if.end34 ], !dbg !5143
  ret i32 %retval.0, !dbg !5193
}

; Function Attrs: nounwind uwtable
define dso_local i32 @integer_nonzerop(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5194 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5196, metadata !DIExpression()), !dbg !5197
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5198
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5196, metadata !DIExpression()), !dbg !5197
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5199
  %bf.load = load i64, i64* %0, align 8, !dbg !5199
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5200
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !5200
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !5201

land.lhs.true:                                    ; preds = %entry
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5202
  %low = bitcast i32* %int_cst1 to i64*, !dbg !5202
  %1 = load i64, i64* %low, align 8, !dbg !5202
  %cmp2 = icmp eq i64 %1, 0, !dbg !5203
  br i1 %cmp2, label %lor.lhs.false, label %lor.end16, !dbg !5204

lor.lhs.false:                                    ; preds = %land.lhs.true
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !5205
  %2 = bitcast i32* %high to i64*, !dbg !5205
  %3 = load i64, i64* %2, align 8, !dbg !5205
  %cmp5 = icmp eq i64 %3, 0, !dbg !5206
  br i1 %cmp5, label %lor.rhs, label %lor.end16, !dbg !5207

lor.rhs:                                          ; preds = %lor.lhs.false, %entry
  %cmp10 = icmp eq i64 %bf.cast1, 26, !dbg !5208
  br i1 %cmp10, label %land.rhs, label %lor.end16, !dbg !5209

land.rhs:                                         ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5210
  %4 = bitcast i32* %real to %union.tree_node**, !dbg !5210
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5210
  %call11 = tail call i32 @integer_nonzerop(%union.tree_node* %5) #8, !dbg !5211
  %tobool = icmp eq i32 %call11, 0, !dbg !5211
  br i1 %tobool, label %lor.rhs12, label %lor.end16, !dbg !5212

lor.rhs12:                                        ; preds = %land.rhs
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5213
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5213
  %call14 = tail call i32 @integer_nonzerop(%union.tree_node* %7) #8, !dbg !5214
  %tobool15 = icmp ne i32 %call14, 0, !dbg !5212
  %phitmp = zext i1 %tobool15 to i32, !dbg !5212
  ret i32 %phitmp, !dbg !5215

lor.end16:                                        ; preds = %lor.lhs.false, %land.lhs.true, %land.rhs, %lor.rhs
  %8 = phi i32 [ 1, %lor.lhs.false ], [ 1, %land.lhs.true ], [ 0, %lor.rhs ], [ 1, %land.rhs ]
  ret i32 %8, !dbg !5215
}

; Function Attrs: nounwind uwtable
define dso_local i32 @fixed_zerop(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5216 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5218, metadata !DIExpression()), !dbg !5219
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5220
  %bf.load = load i64, i64* %0, align 8, !dbg !5220
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5221
  %cmp = icmp eq i64 %bf.cast1, 25, !dbg !5221
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5222

land.rhs:                                         ; preds = %entry
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5223
  %1 = bitcast i32* %fixed_cst_ptr to { i64, i64 }**, !dbg !5223
  %2 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !dbg !5223
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0, !dbg !5224
  %4 = load i64, i64* %3, align 8, !dbg !5224
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1, !dbg !5224
  %6 = load i64, i64* %5, align 8, !dbg !5224
  %call = tail call fastcc zeroext i8 @double_int_zero_p(i64 %4, i64 %6) #8, !dbg !5224
  %tobool = icmp ne i8 %call, 0, !dbg !5222
  %phitmp = zext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %7, !dbg !5225
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @double_int_zero_p(i64 %cst.coerce0, i64 %cst.coerce1) unnamed_addr #0 !dbg !5226 {
entry:
  %0 = or i64 %cst.coerce0, %cst.coerce1, !dbg !5231
  %1 = icmp eq i64 %0, 0, !dbg !5231
  %conv = zext i1 %1 to i8, !dbg !5232
  ret i8 %conv, !dbg !5233
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_log2(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5234 {
entry:
  br label %tailrecurse, !dbg !5240

tailrecurse:                                      ; preds = %if.then, %entry
  %expr.tr = phi %union.tree_node* [ %expr, %entry ], [ %2, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr, metadata !5236, metadata !DIExpression()), !dbg !5242
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr.tr) #8, !dbg !5243
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5236, metadata !DIExpression()), !dbg !5242
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5244
  %bf.load = load i64, i64* %0, align 8, !dbg !5244
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5245
  %cmp = icmp eq i64 %bf.cast1, 26, !dbg !5245
  br i1 %cmp, label %if.then, label %if.end, !dbg !5246

if.then:                                          ; preds = %tailrecurse
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5247
  %1 = bitcast i32* %real to %union.tree_node**, !dbg !5247
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5247
  br label %tailrecurse, !dbg !5240

if.end:                                           ; preds = %tailrecurse
  %call.lcssa = phi %union.tree_node* [ %call, %tailrecurse ], !dbg !5243
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5248
  %3 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5248
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !5248
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 6, !dbg !5248
  %bf.load3 = load i32, i32* %precision, align 4, !dbg !5248
  %bf.clear4 = and i32 %bf.load3, 1023, !dbg !5248
  call void @llvm.dbg.value(metadata i32 %bf.clear4, metadata !5237, metadata !DIExpression()), !dbg !5242
  %int_cst5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5249
  %high6 = getelementptr inbounds i32, i32* %int_cst5, i64 2, !dbg !5249
  %5 = bitcast i32* %high6 to i64*, !dbg !5249
  %6 = load i64, i64* %5, align 8, !dbg !5249
  call void @llvm.dbg.value(metadata i64 %6, metadata !5238, metadata !DIExpression()), !dbg !5242
  %low9 = bitcast i32* %int_cst5 to i64*, !dbg !5250
  %7 = load i64, i64* %low9, align 8, !dbg !5250
  call void @llvm.dbg.value(metadata i64 %7, metadata !5239, metadata !DIExpression()), !dbg !5242
  %cmp10 = icmp eq i32 %bf.clear4, 128, !dbg !5251
  br i1 %cmp10, label %if.end23, label %if.else, !dbg !5253

if.else:                                          ; preds = %if.end
  %cmp12 = icmp ugt i32 %bf.clear4, 64, !dbg !5254
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !5256

if.then13:                                        ; preds = %if.else
  %sub = add nsw i32 %bf.clear4, -64, !dbg !5257
  %sh_prom = zext i32 %sub to i64, !dbg !5258
  %shl = shl i64 -1, %sh_prom, !dbg !5258
  %neg = xor i64 %shl, -1, !dbg !5259
  %and = and i64 %6, %neg, !dbg !5260
  call void @llvm.dbg.value(metadata i64 %and, metadata !5238, metadata !DIExpression()), !dbg !5242
  br label %if.end23, !dbg !5261

if.else14:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i64 0, metadata !5238, metadata !DIExpression()), !dbg !5242
  %cmp15 = icmp eq i32 %bf.clear4, 64, !dbg !5262
  br i1 %cmp15, label %if.end23, label %if.then16, !dbg !5265

if.then16:                                        ; preds = %if.else14
  %sh_prom17 = zext i32 %bf.clear4 to i64, !dbg !5266
  %shl18 = shl i64 -1, %sh_prom17, !dbg !5266
  %neg19 = xor i64 %shl18, -1, !dbg !5267
  %and20 = and i64 %7, %neg19, !dbg !5268
  call void @llvm.dbg.value(metadata i64 %and20, metadata !5239, metadata !DIExpression()), !dbg !5242
  br label %if.end23, !dbg !5269

if.end23:                                         ; preds = %if.else14, %if.then13, %if.then16, %if.end
  %low.2 = phi i64 [ %7, %if.end ], [ %7, %if.then13 ], [ %and20, %if.then16 ], [ %7, %if.else14 ], !dbg !5270
  %high.1 = phi i64 [ %6, %if.end ], [ %and, %if.then13 ], [ 0, %if.then16 ], [ 0, %if.else14 ], !dbg !5242
  call void @llvm.dbg.value(metadata i64 %high.1, metadata !5238, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i64 %low.2, metadata !5239, metadata !DIExpression()), !dbg !5242
  %cmp24 = icmp eq i64 %high.1, 0, !dbg !5271
  br i1 %cmp24, label %cond.false, label %cond.true, !dbg !5272

cond.true:                                        ; preds = %if.end23
  %call25 = tail call i32 @exact_log2(i64 %high.1) #7, !dbg !5273
  %add = add nsw i32 %call25, 64, !dbg !5274
  br label %cleanup, !dbg !5272

cond.false:                                       ; preds = %if.end23
  %call26 = tail call i32 @exact_log2(i64 %low.2) #7, !dbg !5275
  br label %cleanup, !dbg !5272

cleanup:                                          ; preds = %cond.true, %cond.false
  %retval.0 = phi i32 [ %add, %cond.true ], [ %call26, %cond.false ], !dbg !5242
  ret i32 %retval.0, !dbg !5276
}

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_floor_log2(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5277 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5279, metadata !DIExpression()), !dbg !5283
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5284
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5279, metadata !DIExpression()), !dbg !5283
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5285
  %bf.load = load i64, i64* %0, align 8, !dbg !5285
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5287
  %cmp = icmp eq i64 %bf.cast1, 26, !dbg !5287
  br i1 %cmp, label %if.then, label %if.end, !dbg !5288

if.then:                                          ; preds = %entry
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5289
  %1 = bitcast i32* %real to %union.tree_node**, !dbg !5289
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5289
  %call1 = tail call i32 @tree_log2(%union.tree_node* %2) #8, !dbg !5290
  br label %cleanup, !dbg !5291

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5292
  %3 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5292
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !5292
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 6, !dbg !5292
  %bf.load3 = load i32, i32* %precision, align 4, !dbg !5292
  %bf.clear4 = and i32 %bf.load3, 1023, !dbg !5292
  call void @llvm.dbg.value(metadata i32 %bf.clear4, metadata !5280, metadata !DIExpression()), !dbg !5283
  %int_cst5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5293
  %high6 = getelementptr inbounds i32, i32* %int_cst5, i64 2, !dbg !5293
  %5 = bitcast i32* %high6 to i64*, !dbg !5293
  %6 = load i64, i64* %5, align 8, !dbg !5293
  call void @llvm.dbg.value(metadata i64 %6, metadata !5281, metadata !DIExpression()), !dbg !5283
  %low9 = bitcast i32* %int_cst5 to i64*, !dbg !5294
  %7 = load i64, i64* %low9, align 8, !dbg !5294
  call void @llvm.dbg.value(metadata i64 %7, metadata !5282, metadata !DIExpression()), !dbg !5283
  switch i32 %bf.clear4, label %if.else [
    i32 128, label %if.end24
    i32 0, label %if.end24
  ], !dbg !5295

if.else:                                          ; preds = %if.end
  %cmp13 = icmp ugt i32 %bf.clear4, 64, !dbg !5297
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !5299

if.then14:                                        ; preds = %if.else
  %sub = add nsw i32 %bf.clear4, -64, !dbg !5300
  %sh_prom = zext i32 %sub to i64, !dbg !5301
  %shl = shl i64 -1, %sh_prom, !dbg !5301
  %neg = xor i64 %shl, -1, !dbg !5302
  %and = and i64 %6, %neg, !dbg !5303
  call void @llvm.dbg.value(metadata i64 %and, metadata !5281, metadata !DIExpression()), !dbg !5283
  br label %if.end24, !dbg !5304

if.else15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i64 0, metadata !5281, metadata !DIExpression()), !dbg !5283
  %cmp16 = icmp eq i32 %bf.clear4, 64, !dbg !5305
  br i1 %cmp16, label %if.end24, label %if.then17, !dbg !5308

if.then17:                                        ; preds = %if.else15
  %sh_prom18 = zext i32 %bf.clear4 to i64, !dbg !5309
  %shl19 = shl i64 -1, %sh_prom18, !dbg !5309
  %neg20 = xor i64 %shl19, -1, !dbg !5310
  %and21 = and i64 %7, %neg20, !dbg !5311
  call void @llvm.dbg.value(metadata i64 %and21, metadata !5282, metadata !DIExpression()), !dbg !5283
  br label %if.end24, !dbg !5312

if.end24:                                         ; preds = %if.else15, %if.then14, %if.then17, %if.end, %if.end
  %low.2 = phi i64 [ %7, %if.end ], [ %7, %if.end ], [ %7, %if.then14 ], [ %and21, %if.then17 ], [ %7, %if.else15 ], !dbg !5313
  %high.1 = phi i64 [ %6, %if.end ], [ %6, %if.end ], [ %and, %if.then14 ], [ 0, %if.then17 ], [ 0, %if.else15 ], !dbg !5283
  call void @llvm.dbg.value(metadata i64 %high.1, metadata !5281, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i64 %low.2, metadata !5282, metadata !DIExpression()), !dbg !5283
  %cmp25 = icmp eq i64 %high.1, 0, !dbg !5314
  br i1 %cmp25, label %cond.false, label %cond.true, !dbg !5315

cond.true:                                        ; preds = %if.end24
  %call26 = tail call i32 @floor_log2(i64 %high.1) #7, !dbg !5316
  %add = add nsw i32 %call26, 64, !dbg !5317
  br label %cleanup, !dbg !5315

cond.false:                                       ; preds = %if.end24
  %call27 = tail call i32 @floor_log2(i64 %low.2) #7, !dbg !5318
  br label %cleanup, !dbg !5315

cleanup:                                          ; preds = %cond.true, %cond.false, %if.then
  %retval.0 = phi i32 [ %call1, %if.then ], [ %add, %cond.true ], [ %call27, %cond.false ], !dbg !5283
  ret i32 %retval.0, !dbg !5319
}

declare dso_local i32 @floor_log2(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @real_zerop(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5320 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5322, metadata !DIExpression()), !dbg !5323
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5324
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5322, metadata !DIExpression()), !dbg !5323
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5325
  %bf.load = load i64, i64* %0, align 8, !dbg !5325
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5326
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !5326
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !5327

land.lhs.true:                                    ; preds = %entry
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5328
  %1 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !5328
  %2 = load %struct.real_value*, %struct.real_value** %1, align 8, !dbg !5328
  %call1 = tail call zeroext i8 @real_compare(i32 101, %struct.real_value* %2, %struct.real_value* nonnull @dconst0) #7, !dbg !5328
  %tobool = icmp eq i8 %call1, 0, !dbg !5328
  br i1 %tobool, label %lor.rhs, label %land.lhs.true2, !dbg !5329

land.lhs.true2:                                   ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5330
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !5330
  %4 = load i64*, i64** %3, align 8, !dbg !5330
  %bf.load4 = load i64, i64* %4, align 8, !dbg !5330
  %bf.cast63 = and i64 %bf.load4, 65535, !dbg !5330
  %cmp7 = icmp eq i64 %bf.cast63, 14, !dbg !5330
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5330

cond.true:                                        ; preds = %land.lhs.true2
  %.cast = bitcast i64* %4 to %union.tree_node*, !dbg !5330
  %call11 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !5330
  br label %cond.end, !dbg !5330

cond.false:                                       ; preds = %land.lhs.true2
  %type14 = bitcast i64* %4 to %struct.tree_type*, !dbg !5330
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !5330
  %bf.load15 = load i32, i32* %mode, align 4, !dbg !5330
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !5330
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !5330
  br label %cond.end, !dbg !5330

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ %bf.clear16, %cond.false ], !dbg !5330
  %idxprom = zext i32 %cond to i64, !dbg !5330
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5330
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5330
  %cmp18 = icmp eq i8 %5, 9, !dbg !5330
  br i1 %cmp18, label %lor.rhs, label %lor.end, !dbg !5331

lor.rhs:                                          ; preds = %land.lhs.true, %cond.end, %entry
  %bf.load21 = load i64, i64* %0, align 8, !dbg !5332
  %bf.cast232 = and i64 %bf.load21, 65535, !dbg !5333
  %cmp24 = icmp eq i64 %bf.cast232, 26, !dbg !5333
  br i1 %cmp24, label %land.lhs.true26, label %lor.end, !dbg !5334

land.lhs.true26:                                  ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5335
  %6 = bitcast i32* %real to %union.tree_node**, !dbg !5335
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5335
  %call27 = tail call i32 @real_zerop(%union.tree_node* %7) #8, !dbg !5336
  %tobool28 = icmp eq i32 %call27, 0, !dbg !5336
  br i1 %tobool28, label %lor.end, label %land.rhs, !dbg !5337

land.rhs:                                         ; preds = %land.lhs.true26
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5338
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5338
  %call30 = tail call i32 @real_zerop(%union.tree_node* %9) #8, !dbg !5339
  %tobool31 = icmp ne i32 %call30, 0, !dbg !5337
  %phitmp = zext i1 %tobool31 to i32
  ret i32 %phitmp, !dbg !5340

lor.end:                                          ; preds = %land.lhs.true26, %lor.rhs, %cond.end
  %10 = phi i32 [ 1, %cond.end ], [ 0, %land.lhs.true26 ], [ 0, %lor.rhs ]
  ret i32 %10, !dbg !5340
}

declare dso_local zeroext i8 @real_compare(i32, %struct.real_value*, %struct.real_value*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @real_onep(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5341 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5343, metadata !DIExpression()), !dbg !5344
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5345
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5343, metadata !DIExpression()), !dbg !5344
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5346
  %bf.load = load i64, i64* %0, align 8, !dbg !5346
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5347
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !5347
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !5348

land.lhs.true:                                    ; preds = %entry
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5349
  %1 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !5349
  %2 = load %struct.real_value*, %struct.real_value** %1, align 8, !dbg !5349
  %call1 = tail call zeroext i8 @real_compare(i32 101, %struct.real_value* %2, %struct.real_value* nonnull @dconst1) #7, !dbg !5349
  %tobool = icmp eq i8 %call1, 0, !dbg !5349
  br i1 %tobool, label %lor.rhs, label %land.lhs.true2, !dbg !5350

land.lhs.true2:                                   ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5351
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !5351
  %4 = load i64*, i64** %3, align 8, !dbg !5351
  %bf.load4 = load i64, i64* %4, align 8, !dbg !5351
  %bf.cast63 = and i64 %bf.load4, 65535, !dbg !5351
  %cmp7 = icmp eq i64 %bf.cast63, 14, !dbg !5351
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5351

cond.true:                                        ; preds = %land.lhs.true2
  %.cast = bitcast i64* %4 to %union.tree_node*, !dbg !5351
  %call11 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !5351
  br label %cond.end, !dbg !5351

cond.false:                                       ; preds = %land.lhs.true2
  %type14 = bitcast i64* %4 to %struct.tree_type*, !dbg !5351
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !5351
  %bf.load15 = load i32, i32* %mode, align 4, !dbg !5351
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !5351
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !5351
  br label %cond.end, !dbg !5351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ %bf.clear16, %cond.false ], !dbg !5351
  %idxprom = zext i32 %cond to i64, !dbg !5351
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5351
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5351
  %cmp18 = icmp eq i8 %5, 9, !dbg !5351
  br i1 %cmp18, label %lor.rhs, label %lor.end, !dbg !5352

lor.rhs:                                          ; preds = %land.lhs.true, %cond.end, %entry
  %bf.load21 = load i64, i64* %0, align 8, !dbg !5353
  %bf.cast232 = and i64 %bf.load21, 65535, !dbg !5354
  %cmp24 = icmp eq i64 %bf.cast232, 26, !dbg !5354
  br i1 %cmp24, label %land.lhs.true26, label %lor.end, !dbg !5355

land.lhs.true26:                                  ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5356
  %6 = bitcast i32* %real to %union.tree_node**, !dbg !5356
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5356
  %call27 = tail call i32 @real_onep(%union.tree_node* %7) #8, !dbg !5357
  %tobool28 = icmp eq i32 %call27, 0, !dbg !5357
  br i1 %tobool28, label %lor.end, label %land.rhs, !dbg !5358

land.rhs:                                         ; preds = %land.lhs.true26
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5359
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5359
  %call30 = tail call i32 @real_zerop(%union.tree_node* %9) #8, !dbg !5360
  %tobool31 = icmp ne i32 %call30, 0, !dbg !5358
  %phitmp = zext i1 %tobool31 to i32
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true26, %lor.rhs, %land.rhs, %cond.end
  %10 = phi i32 [ 1, %cond.end ], [ 0, %land.lhs.true26 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i32 %10, !dbg !5361
}

; Function Attrs: nounwind uwtable
define dso_local i32 @real_twop(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5362 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5364, metadata !DIExpression()), !dbg !5365
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5366
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5364, metadata !DIExpression()), !dbg !5365
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5367
  %bf.load = load i64, i64* %0, align 8, !dbg !5367
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5368
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !5368
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !5369

land.lhs.true:                                    ; preds = %entry
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5370
  %1 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !5370
  %2 = load %struct.real_value*, %struct.real_value** %1, align 8, !dbg !5370
  %call1 = tail call zeroext i8 @real_compare(i32 101, %struct.real_value* %2, %struct.real_value* nonnull @dconst2) #7, !dbg !5370
  %tobool = icmp eq i8 %call1, 0, !dbg !5370
  br i1 %tobool, label %lor.rhs, label %land.lhs.true2, !dbg !5371

land.lhs.true2:                                   ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5372
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !5372
  %4 = load i64*, i64** %3, align 8, !dbg !5372
  %bf.load4 = load i64, i64* %4, align 8, !dbg !5372
  %bf.cast63 = and i64 %bf.load4, 65535, !dbg !5372
  %cmp7 = icmp eq i64 %bf.cast63, 14, !dbg !5372
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5372

cond.true:                                        ; preds = %land.lhs.true2
  %.cast = bitcast i64* %4 to %union.tree_node*, !dbg !5372
  %call11 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !5372
  br label %cond.end, !dbg !5372

cond.false:                                       ; preds = %land.lhs.true2
  %type14 = bitcast i64* %4 to %struct.tree_type*, !dbg !5372
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !5372
  %bf.load15 = load i32, i32* %mode, align 4, !dbg !5372
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !5372
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !5372
  br label %cond.end, !dbg !5372

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ %bf.clear16, %cond.false ], !dbg !5372
  %idxprom = zext i32 %cond to i64, !dbg !5372
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5372
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5372
  %cmp18 = icmp eq i8 %5, 9, !dbg !5372
  br i1 %cmp18, label %lor.rhs, label %lor.end, !dbg !5373

lor.rhs:                                          ; preds = %land.lhs.true, %cond.end, %entry
  %bf.load21 = load i64, i64* %0, align 8, !dbg !5374
  %bf.cast232 = and i64 %bf.load21, 65535, !dbg !5375
  %cmp24 = icmp eq i64 %bf.cast232, 26, !dbg !5375
  br i1 %cmp24, label %land.lhs.true26, label %lor.end, !dbg !5376

land.lhs.true26:                                  ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5377
  %6 = bitcast i32* %real to %union.tree_node**, !dbg !5377
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5377
  %call27 = tail call i32 @real_twop(%union.tree_node* %7) #8, !dbg !5378
  %tobool28 = icmp eq i32 %call27, 0, !dbg !5378
  br i1 %tobool28, label %lor.end, label %land.rhs, !dbg !5379

land.rhs:                                         ; preds = %land.lhs.true26
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5380
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5380
  %call30 = tail call i32 @real_zerop(%union.tree_node* %9) #8, !dbg !5381
  %tobool31 = icmp ne i32 %call30, 0, !dbg !5379
  %phitmp = zext i1 %tobool31 to i32
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true26, %lor.rhs, %land.rhs, %cond.end
  %10 = phi i32 [ 1, %cond.end ], [ 0, %land.lhs.true26 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i32 %10, !dbg !5382
}

; Function Attrs: nounwind uwtable
define dso_local i32 @real_minus_onep(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !5383 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5385, metadata !DIExpression()), !dbg !5386
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %expr) #8, !dbg !5387
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5385, metadata !DIExpression()), !dbg !5386
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5388
  %bf.load = load i64, i64* %0, align 8, !dbg !5388
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5389
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !5389
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !5390

land.lhs.true:                                    ; preds = %entry
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5391
  %1 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !5391
  %2 = load %struct.real_value*, %struct.real_value** %1, align 8, !dbg !5391
  %call1 = tail call zeroext i8 @real_compare(i32 101, %struct.real_value* %2, %struct.real_value* nonnull @dconstm1) #7, !dbg !5391
  %tobool = icmp eq i8 %call1, 0, !dbg !5391
  br i1 %tobool, label %lor.rhs, label %land.lhs.true2, !dbg !5392

land.lhs.true2:                                   ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5393
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !5393
  %4 = load i64*, i64** %3, align 8, !dbg !5393
  %bf.load4 = load i64, i64* %4, align 8, !dbg !5393
  %bf.cast63 = and i64 %bf.load4, 65535, !dbg !5393
  %cmp7 = icmp eq i64 %bf.cast63, 14, !dbg !5393
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5393

cond.true:                                        ; preds = %land.lhs.true2
  %.cast = bitcast i64* %4 to %union.tree_node*, !dbg !5393
  %call11 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !5393
  br label %cond.end, !dbg !5393

cond.false:                                       ; preds = %land.lhs.true2
  %type14 = bitcast i64* %4 to %struct.tree_type*, !dbg !5393
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !5393
  %bf.load15 = load i32, i32* %mode, align 4, !dbg !5393
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !5393
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !5393
  br label %cond.end, !dbg !5393

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ %bf.clear16, %cond.false ], !dbg !5393
  %idxprom = zext i32 %cond to i64, !dbg !5393
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5393
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5393
  %cmp18 = icmp eq i8 %5, 9, !dbg !5393
  br i1 %cmp18, label %lor.rhs, label %lor.end, !dbg !5394

lor.rhs:                                          ; preds = %land.lhs.true, %cond.end, %entry
  %bf.load21 = load i64, i64* %0, align 8, !dbg !5395
  %bf.cast232 = and i64 %bf.load21, 65535, !dbg !5396
  %cmp24 = icmp eq i64 %bf.cast232, 26, !dbg !5396
  br i1 %cmp24, label %land.lhs.true26, label %lor.end, !dbg !5397

land.lhs.true26:                                  ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5398
  %6 = bitcast i32* %real to %union.tree_node**, !dbg !5398
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5398
  %call27 = tail call i32 @real_minus_onep(%union.tree_node* %7) #8, !dbg !5399
  %tobool28 = icmp eq i32 %call27, 0, !dbg !5399
  br i1 %tobool28, label %lor.end, label %land.rhs, !dbg !5400

land.rhs:                                         ; preds = %land.lhs.true26
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5401
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5401
  %call30 = tail call i32 @real_zerop(%union.tree_node* %9) #8, !dbg !5402
  %tobool31 = icmp ne i32 %call30, 0, !dbg !5400
  %phitmp = zext i1 %tobool31 to i32
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true26, %lor.rhs, %land.rhs, %cond.end
  %10 = phi i32 [ 1, %cond.end ], [ 0, %land.lhs.true26 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i32 %10, !dbg !5403
}

; Function Attrs: nounwind uwtable
define dso_local i32 @really_constant_p(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !5404 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5406, metadata !DIExpression()), !dbg !5407
  br label %while.cond, !dbg !5408

while.cond:                                       ; preds = %while.body, %entry
  %exp.addr.0 = phi %union.tree_node* [ %exp, %entry ], [ %3, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !5406, metadata !DIExpression()), !dbg !5407
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5409
  %bf.load = load i64, i64* %0, align 8, !dbg !5409
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5409
  %cmp = icmp eq i64 %bf.cast2, 116, !dbg !5409
  br i1 %cmp, label %while.body, label %lor.lhs.false, !dbg !5409

lor.lhs.false:                                    ; preds = %while.cond
  %1 = or i64 %bf.cast2, 4, !dbg !5410
  %2 = icmp eq i64 %1, 117, !dbg !5410
  br i1 %2, label %while.body, label %while.end, !dbg !5410

while.body:                                       ; preds = %while.cond, %lor.lhs.false
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5411
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5411
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5406, metadata !DIExpression()), !dbg !5407
  br label %while.cond, !dbg !5408, !llvm.loop !5412

while.end:                                        ; preds = %lor.lhs.false
  %bf.load.lcssa = phi i64 [ %bf.load, %lor.lhs.false ], !dbg !5409
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !5406, metadata !DIExpression()), !dbg !5407
  %bf.lshr = lshr i64 %bf.load.lcssa, 17, !dbg !5413
  %4 = trunc i64 %bf.lshr to i32, !dbg !5413
  %bf.cast15 = and i32 %4, 1, !dbg !5413
  ret i32 %bf.cast15, !dbg !5414
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @value_member(%union.tree_node* %elem, %union.tree_node* %list) local_unnamed_addr #5 !dbg !5415 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %elem, metadata !5417, metadata !DIExpression()), !dbg !5419
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !5418, metadata !DIExpression()), !dbg !5419
  br label %while.cond, !dbg !5420

while.cond:                                       ; preds = %if.end, %entry
  %list.addr.0 = phi %union.tree_node* [ %list, %entry ], [ %2, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !5418, metadata !DIExpression()), !dbg !5419
  %tobool = icmp eq %union.tree_node* %list.addr.0, null, !dbg !5420
  br i1 %tobool, label %return, label %while.body, !dbg !5420

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %list.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5421
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5421
  %cmp = icmp eq %union.tree_node* %1, %elem, !dbg !5424
  br i1 %cmp, label %return, label %if.end, !dbg !5425

if.end:                                           ; preds = %while.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %list.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5426
  %2 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5426
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5418, metadata !DIExpression()), !dbg !5419
  br label %while.cond, !dbg !5420, !llvm.loop !5427

return:                                           ; preds = %while.cond, %while.body
  %retval.0 = phi %union.tree_node* [ %list.addr.0, %while.body ], [ null, %while.cond ], !dbg !5419
  ret %union.tree_node* %retval.0, !dbg !5429
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @purpose_member(%union.tree_node* %elem, %union.tree_node* %list) local_unnamed_addr #5 !dbg !5430 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %elem, metadata !5434, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !5435, metadata !DIExpression()), !dbg !5436
  br label %while.cond, !dbg !5437

while.cond:                                       ; preds = %if.end, %entry
  %list.addr.0 = phi %union.tree_node* [ %list, %entry ], [ %2, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !5435, metadata !DIExpression()), !dbg !5436
  %tobool = icmp eq %union.tree_node* %list.addr.0, null, !dbg !5437
  br i1 %tobool, label %return, label %while.body, !dbg !5437

while.body:                                       ; preds = %while.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %list.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5438
  %0 = bitcast i32* %purpose to %union.tree_node**, !dbg !5438
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5438
  %cmp = icmp eq %union.tree_node* %1, %elem, !dbg !5441
  br i1 %cmp, label %return, label %if.end, !dbg !5442

if.end:                                           ; preds = %while.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %list.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5443
  %2 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5443
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5435, metadata !DIExpression()), !dbg !5436
  br label %while.cond, !dbg !5437, !llvm.loop !5444

return:                                           ; preds = %while.cond, %while.body
  %retval.0 = phi %union.tree_node* [ %list.addr.0, %while.body ], [ null, %while.cond ], !dbg !5436
  ret %union.tree_node* %retval.0, !dbg !5446
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @chain_index(i32 %idx, %union.tree_node* %chain) local_unnamed_addr #5 !dbg !5447 {
entry:
  call void @llvm.dbg.value(metadata i32 %idx, metadata !5451, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.value(metadata %union.tree_node* %chain, metadata !5452, metadata !DIExpression()), !dbg !5453
  br label %for.cond, !dbg !5454

for.cond:                                         ; preds = %for.body, %entry
  %chain.addr.0 = phi %union.tree_node* [ %chain, %entry ], [ %0, %for.body ]
  %idx.addr.0 = phi i32 [ %idx, %entry ], [ %dec, %for.body ]
  call void @llvm.dbg.value(metadata i32 %idx.addr.0, metadata !5451, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0, metadata !5452, metadata !DIExpression()), !dbg !5453
  %tobool = icmp ne %union.tree_node* %chain.addr.0, null, !dbg !5455
  %cmp = icmp sgt i32 %idx.addr.0, 0, !dbg !5458
  %spec.select = and i1 %cmp, %tobool, !dbg !5459
  br i1 %spec.select, label %for.body, label %for.end, !dbg !5460

for.body:                                         ; preds = %for.cond
  %chain1 = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5461
  %0 = load %union.tree_node*, %union.tree_node** %chain1, align 8, !dbg !5461
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5452, metadata !DIExpression()), !dbg !5453
  %dec = add nsw i32 %idx.addr.0, -1, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %dec, metadata !5451, metadata !DIExpression()), !dbg !5453
  br label %for.cond, !dbg !5463, !llvm.loop !5464

for.end:                                          ; preds = %for.cond
  %chain.addr.0.lcssa = phi %union.tree_node* [ %chain.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0.lcssa, metadata !5452, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0.lcssa, metadata !5452, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0.lcssa, metadata !5452, metadata !DIExpression()), !dbg !5453
  ret %union.tree_node* %chain.addr.0.lcssa, !dbg !5466
}

; Function Attrs: nounwind uwtable
define dso_local i32 @chain_member(%union.tree_node* %elem, %union.tree_node* %chain) local_unnamed_addr #5 !dbg !5467 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %elem, metadata !5471, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.value(metadata %union.tree_node* %chain, metadata !5472, metadata !DIExpression()), !dbg !5473
  br label %while.cond, !dbg !5474

while.cond:                                       ; preds = %if.end, %entry
  %chain.addr.0 = phi %union.tree_node* [ %chain, %entry ], [ %0, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0, metadata !5472, metadata !DIExpression()), !dbg !5473
  %tobool = icmp eq %union.tree_node* %chain.addr.0, null, !dbg !5474
  br i1 %tobool, label %return, label %while.body, !dbg !5474

while.body:                                       ; preds = %while.cond
  %cmp = icmp eq %union.tree_node* %chain.addr.0, %elem, !dbg !5475
  br i1 %cmp, label %return, label %if.end, !dbg !5478

if.end:                                           ; preds = %while.body
  %chain1 = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5479
  %0 = load %union.tree_node*, %union.tree_node** %chain1, align 8, !dbg !5479
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5472, metadata !DIExpression()), !dbg !5473
  br label %while.cond, !dbg !5474, !llvm.loop !5480

return:                                           ; preds = %while.cond, %while.body
  %retval.0 = phi i32 [ 1, %while.body ], [ 0, %while.cond ], !dbg !5473
  ret i32 %retval.0, !dbg !5482
}

; Function Attrs: nounwind uwtable
define dso_local i32 @fields_length(%union.tree_node* %type) local_unnamed_addr #5 !dbg !5483 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5485, metadata !DIExpression()), !dbg !5488
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5489
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !5489
  call void @llvm.dbg.value(metadata i32 0, metadata !5487, metadata !DIExpression()), !dbg !5488
  br label %for.cond, !dbg !5490

for.cond:                                         ; preds = %for.body, %entry
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.body ]
  %count.0 = phi i32 [ 0, %entry ], [ %spec.select, %for.body ], !dbg !5488
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !5488
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5486, metadata !DIExpression()), !dbg !5488
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !5491
  br i1 %tobool, label %for.end, label %for.body, !dbg !5491

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5493
  %bf.load = load i64, i64* %1, align 8, !dbg !5493
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5496
  %cmp = icmp eq i64 %bf.cast1, 31, !dbg !5496
  %inc = zext i1 %cmp to i32, !dbg !5497
  %spec.select = add nuw nsw i32 %count.0, %inc, !dbg !5497
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5487, metadata !DIExpression()), !dbg !5488
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5498
  br label %for.cond, !dbg !5499, !llvm.loop !5500

for.end:                                          ; preds = %for.cond
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !5488
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5487, metadata !DIExpression()), !dbg !5488
  ret i32 %count.0.lcssa, !dbg !5502
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @first_field(%union.tree_node* %type) local_unnamed_addr #5 !dbg !5503 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5507, metadata !DIExpression()), !dbg !5509
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5510
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !5510
  br label %while.cond, !dbg !5511

while.cond:                                       ; preds = %while.body, %entry
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %while.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !5509
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5508, metadata !DIExpression()), !dbg !5509
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !5512
  br i1 %tobool, label %while.end, label %land.rhs, !dbg !5513

land.rhs:                                         ; preds = %while.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5514
  %bf.load = load i64, i64* %1, align 8, !dbg !5514
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5515
  %cmp = icmp eq i64 %bf.cast1, 31, !dbg !5515
  br i1 %cmp, label %while.end, label %while.body, !dbg !5511

while.body:                                       ; preds = %land.rhs
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5516
  br label %while.cond, !dbg !5511, !llvm.loop !5517

while.end:                                        ; preds = %land.rhs, %while.cond
  %t.0.lcssa = phi %union.tree_node* [ %t.0, %land.rhs ], [ %t.0, %while.cond ], !dbg !5509
  ret %union.tree_node* %t.0.lcssa, !dbg !5518
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @chainon(%union.tree_node* %op1, %union.tree_node* %op2) local_unnamed_addr #5 !dbg !5519 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !5521, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.value(metadata %union.tree_node* %op2, metadata !5522, metadata !DIExpression()), !dbg !5524
  %tobool = icmp eq %union.tree_node* %op1, null, !dbg !5525
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5527

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %union.tree_node* %op2, null, !dbg !5528
  br i1 %tobool1, label %cleanup, label %for.cond.preheader, !dbg !5530

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !5531

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %t1.0 = phi %union.tree_node* [ %0, %for.inc ], [ %op1, %for.cond.preheader ], !dbg !5533
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0, metadata !5523, metadata !DIExpression()), !dbg !5524
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5534
  %0 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5534
  %tobool4 = icmp eq %union.tree_node* %0, null, !dbg !5531
  br i1 %tobool4, label %for.end, label %for.inc, !dbg !5531

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5523, metadata !DIExpression()), !dbg !5524
  br label %for.cond, !dbg !5536, !llvm.loop !5537

for.end:                                          ; preds = %for.cond
  %chain.lcssa = phi %union.tree_node** [ %chain, %for.cond ], !dbg !5534
  store %union.tree_node* %op2, %union.tree_node** %chain.lcssa, align 8, !dbg !5539
  br label %cleanup, !dbg !5540

cleanup:                                          ; preds = %if.end, %entry, %for.end
  %retval.0 = phi %union.tree_node* [ %op1, %for.end ], [ %op2, %entry ], [ %op1, %if.end ], !dbg !5524
  ret %union.tree_node* %retval.0, !dbg !5541
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @tree_last(%union.tree_node* %chain) local_unnamed_addr #5 !dbg !5542 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chain, metadata !5544, metadata !DIExpression()), !dbg !5546
  %tobool = icmp eq %union.tree_node* %chain, null, !dbg !5547
  br i1 %tobool, label %if.end, label %while.cond.preheader, !dbg !5549

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !5550

while.cond:                                       ; preds = %while.cond.preheader, %while.cond
  %chain.addr.0 = phi %union.tree_node* [ %0, %while.cond ], [ %chain, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0, metadata !5544, metadata !DIExpression()), !dbg !5546
  %chain1 = getelementptr inbounds %union.tree_node, %union.tree_node* %chain.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5551
  %0 = load %union.tree_node*, %union.tree_node** %chain1, align 8, !dbg !5551
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5545, metadata !DIExpression()), !dbg !5546
  %tobool2 = icmp eq %union.tree_node* %0, null, !dbg !5550
  br i1 %tobool2, label %if.end.loopexit, label %while.cond, !dbg !5550, !llvm.loop !5552

if.end.loopexit:                                  ; preds = %while.cond
  %chain.addr.0.lcssa = phi %union.tree_node* [ %chain.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0.lcssa, metadata !5544, metadata !DIExpression()), !dbg !5546
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0.lcssa, metadata !5544, metadata !DIExpression()), !dbg !5546
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.0.lcssa, metadata !5544, metadata !DIExpression()), !dbg !5546
  br label %if.end, !dbg !5554

if.end:                                           ; preds = %if.end.loopexit, %entry
  %chain.addr.1 = phi %union.tree_node* [ null, %entry ], [ %chain.addr.0.lcssa, %if.end.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chain.addr.1, metadata !5544, metadata !DIExpression()), !dbg !5546
  ret %union.tree_node* %chain.addr.1, !dbg !5554
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_tree_list_stat(%union.tree_node* %parm, %union.tree_node* %value) local_unnamed_addr #5 !dbg !5555 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %parm, metadata !5557, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !5558, metadata !DIExpression()), !dbg !5560
  %call = tail call %union.tree_node* @make_node_stat(i32 2) #8, !dbg !5561
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5559, metadata !DIExpression()), !dbg !5560
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5562
  %0 = bitcast i32* %purpose to %union.tree_node**, !dbg !5562
  store %union.tree_node* %parm, %union.tree_node** %0, align 8, !dbg !5563
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5564
  store %union.tree_node* %value, %union.tree_node** %1, align 8, !dbg !5565
  ret %union.tree_node* %call, !dbg !5566
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_tree_list_vec_stat(%struct.VEC_tree_gc* %vec) local_unnamed_addr #5 !dbg !5567 {
entry:
  %ret = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %vec, metadata !5573, metadata !DIExpression()), !dbg !5578
  %0 = bitcast %union.tree_node** %ret to i8*, !dbg !5579
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5579
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5574, metadata !DIExpression()), !dbg !5578
  store %union.tree_node* null, %union.tree_node** %ret, align 8, !dbg !5580
  call void @llvm.dbg.value(metadata %union.tree_node** %ret, metadata !5575, metadata !DIExpression()), !dbg !5578
  %1 = bitcast %union.tree_node** %t to i8*, !dbg !5581
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5581
  call void @llvm.dbg.value(metadata i32 0, metadata !5576, metadata !DIExpression()), !dbg !5578
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %vec, i64 0, i32 0, !dbg !5582
  br label %for.cond, !dbg !5585

for.cond:                                         ; preds = %for.body, %entry
  %pp.0 = phi %union.tree_node** [ %ret, %entry ], [ %chain, %for.body ], !dbg !5578
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !5586
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5576, metadata !DIExpression()), !dbg !5578
  call void @llvm.dbg.value(metadata %union.tree_node** %pp.0, metadata !5575, metadata !DIExpression()), !dbg !5578
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !5577, metadata !DIExpression(DW_OP_deref)), !dbg !5578
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %t) #8, !dbg !5587
  %tobool1 = icmp eq i32 %call, 0, !dbg !5588
  br i1 %tobool1, label %for.end, label %for.body, !dbg !5588

for.body:                                         ; preds = %for.cond
  %2 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !5589
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5577, metadata !DIExpression()), !dbg !5578
  %call2 = call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %2) #8, !dbg !5591
  store %union.tree_node* %call2, %union.tree_node** %pp.0, align 8, !dbg !5592
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5593
  call void @llvm.dbg.value(metadata %union.tree_node** %chain, metadata !5575, metadata !DIExpression()), !dbg !5578
  %inc = add i32 %i.0, 1, !dbg !5594
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5576, metadata !DIExpression()), !dbg !5578
  br label %for.cond, !dbg !5595, !llvm.loop !5596

for.end:                                          ; preds = %for.cond
  %3 = load %union.tree_node*, %union.tree_node** %ret, align 8, !dbg !5598
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5574, metadata !DIExpression()), !dbg !5578
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5599
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5599
  ret %union.tree_node* %3, !dbg !5600
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !5601 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5605, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5606, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !5607, metadata !DIExpression()), !dbg !5608
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5609
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5609

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5609
  %0 = load i32, i32* %num, align 8, !dbg !5609
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5609
  br i1 %cmp, label %if.then, label %if.else, !dbg !5611

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5612
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5612
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5612
  br label %return, !dbg !5612

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5614

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !5616
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5616
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !5616
  ret i32 %retval.0, !dbg !5611
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @ctor_to_list(%union.tree_node* %ctor) local_unnamed_addr #5 !dbg !5617 {
entry:
  %list = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor, metadata !5619, metadata !DIExpression()), !dbg !5625
  %0 = bitcast %union.tree_node** %list to i8*, !dbg !5626
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5626
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5620, metadata !DIExpression()), !dbg !5625
  store %union.tree_node* null, %union.tree_node** %list, align 8, !dbg !5627
  call void @llvm.dbg.value(metadata %union.tree_node** %list, metadata !5621, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata i32 0, metadata !5622, metadata !DIExpression()), !dbg !5625
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5628
  %1 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !5628
  br label %for.cond, !dbg !5631

for.cond:                                         ; preds = %for.body, %entry
  %purpose.0 = phi %union.tree_node* [ undef, %entry ], [ %purpose.1, %for.body ]
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !5632
  %p.0 = phi %union.tree_node** [ %list, %entry ], [ %chain, %for.body ], !dbg !5625
  %val.0 = phi %union.tree_node* [ undef, %entry ], [ %val.1, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !5624, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0, metadata !5621, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !5622, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.0, metadata !5623, metadata !DIExpression()), !dbg !5625
  %2 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %1, align 8, !dbg !5633
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %2, null, !dbg !5633
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5633

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %2, i64 0, i32 0, !dbg !5633
  br label %cond.end, !dbg !5633

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !5633
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !5633
  %cmp = icmp ult i32 %ix.0, %call, !dbg !5633
  br i1 %cmp, label %cond.false4, label %cond.end27, !dbg !5633

cond.false4:                                      ; preds = %cond.end
  %3 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %1, align 8, !dbg !5633
  %tobool7 = icmp eq %struct.VEC_constructor_elt_gc* %3, null, !dbg !5633
  br i1 %tobool7, label %cond.end13, label %cond.true8, !dbg !5633

cond.true8:                                       ; preds = %cond.false4
  %base11 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %3, i64 0, i32 0, !dbg !5633
  br label %cond.end13, !dbg !5633

cond.end13:                                       ; preds = %cond.false4, %cond.true8
  %cond14 = phi %struct.VEC_constructor_elt_base* [ %base11, %cond.true8 ], [ null, %cond.false4 ], !dbg !5633
  %call15 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond14, i32 %ix.0) #8, !dbg !5633
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call15, i64 0, i32 1, !dbg !5633
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5633
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5624, metadata !DIExpression()), !dbg !5625
  %5 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %1, align 8, !dbg !5633
  %tobool18 = icmp eq %struct.VEC_constructor_elt_gc* %5, null, !dbg !5633
  br i1 %tobool18, label %cond.end24, label %cond.true19, !dbg !5633

cond.true19:                                      ; preds = %cond.end13
  %base22 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %5, i64 0, i32 0, !dbg !5633
  br label %cond.end24, !dbg !5633

cond.end24:                                       ; preds = %cond.end13, %cond.true19
  %cond25 = phi %struct.VEC_constructor_elt_base* [ %base22, %cond.true19 ], [ null, %cond.end13 ], !dbg !5633
  %call26 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond25, i32 %ix.0) #8, !dbg !5633
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call26, i64 0, i32 0, !dbg !5633
  %6 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !5633
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !5623, metadata !DIExpression()), !dbg !5625
  br label %cond.end27, !dbg !5633

cond.end27:                                       ; preds = %cond.end, %cond.end24
  %purpose.1 = phi %union.tree_node* [ %6, %cond.end24 ], [ %purpose.0, %cond.end ]
  %val.1 = phi %union.tree_node* [ %4, %cond.end24 ], [ %val.0, %cond.end ]
  %cond28 = phi i1 [ true, %cond.end24 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !5624, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.1, metadata !5623, metadata !DIExpression()), !dbg !5625
  br i1 %cond28, label %for.body, label %for.end, !dbg !5631

for.body:                                         ; preds = %cond.end27
  %call30 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* %purpose.1, %union.tree_node* %val.1) #8, !dbg !5634
  store %union.tree_node* %call30, %union.tree_node** %p.0, align 8, !dbg !5636
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5637
  call void @llvm.dbg.value(metadata %union.tree_node** %chain, metadata !5621, metadata !DIExpression()), !dbg !5625
  %inc = add i32 %ix.0, 1, !dbg !5633
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5622, metadata !DIExpression()), !dbg !5625
  br label %for.cond, !dbg !5633, !llvm.loop !5638

for.end:                                          ; preds = %cond.end27
  %7 = load %union.tree_node*, %union.tree_node** %list, align 8, !dbg !5640
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5620, metadata !DIExpression()), !dbg !5625
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5641
  ret %union.tree_node* %7, !dbg !5642
}

; Function Attrs: nounwind uwtable
define dso_local %struct.VEC_tree_gc* @ctor_to_vec(%union.tree_node* %ctor) local_unnamed_addr #5 !dbg !5643 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor, metadata !5647, metadata !DIExpression()), !dbg !5651
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5652
  %0 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !5652
  %1 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !5652
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %1, null, !dbg !5652
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5652

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %1, i64 0, i32 0, !dbg !5652
  br label %cond.end, !dbg !5652

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5652
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !5652
  %call3 = tail call fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %call) #8, !dbg !5652
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call3, metadata !5648, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.value(metadata i32 0, metadata !5649, metadata !DIExpression()), !dbg !5651
  %base33 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %call3, i64 0, i32 0, !dbg !5653
  br label %for.cond, !dbg !5656

for.cond:                                         ; preds = %for.body, %cond.end
  %ix.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !5657
  %val.0 = phi %union.tree_node* [ undef, %cond.end ], [ %val.1, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !5650, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !5649, metadata !DIExpression()), !dbg !5651
  %2 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !5658
  %tobool6 = icmp eq %struct.VEC_constructor_elt_gc* %2, null, !dbg !5658
  br i1 %tobool6, label %cond.end12, label %cond.true7, !dbg !5658

cond.true7:                                       ; preds = %for.cond
  %base10 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %2, i64 0, i32 0, !dbg !5658
  br label %cond.end12, !dbg !5658

cond.end12:                                       ; preds = %for.cond, %cond.true7
  %cond13 = phi %struct.VEC_constructor_elt_base* [ %base10, %cond.true7 ], [ null, %for.cond ], !dbg !5658
  %call14 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond13) #8, !dbg !5658
  %cmp = icmp ult i32 %ix.0, %call14, !dbg !5658
  br i1 %cmp, label %cond.false16, label %cond.end28, !dbg !5658

cond.false16:                                     ; preds = %cond.end12
  %3 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %0, align 8, !dbg !5658
  %tobool19 = icmp eq %struct.VEC_constructor_elt_gc* %3, null, !dbg !5658
  br i1 %tobool19, label %cond.end25, label %cond.true20, !dbg !5658

cond.true20:                                      ; preds = %cond.false16
  %base23 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %3, i64 0, i32 0, !dbg !5658
  br label %cond.end25, !dbg !5658

cond.end25:                                       ; preds = %cond.false16, %cond.true20
  %cond26 = phi %struct.VEC_constructor_elt_base* [ %base23, %cond.true20 ], [ null, %cond.false16 ], !dbg !5658
  %call27 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond26, i32 %ix.0) #8, !dbg !5658
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call27, i64 0, i32 1, !dbg !5658
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5658
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5650, metadata !DIExpression()), !dbg !5651
  br label %cond.end28, !dbg !5658

cond.end28:                                       ; preds = %cond.end12, %cond.end25
  %val.1 = phi %union.tree_node* [ %4, %cond.end25 ], [ %val.0, %cond.end12 ]
  %cond29 = phi i1 [ true, %cond.end25 ], [ false, %cond.end12 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !5650, metadata !DIExpression()), !dbg !5651
  br i1 %cond29, label %for.body, label %for.end, !dbg !5656

for.body:                                         ; preds = %cond.end28
  %call37 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base33, %union.tree_node* %val.1) #8, !dbg !5659
  %inc = add i32 %ix.0, 1, !dbg !5658
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5649, metadata !DIExpression()), !dbg !5651
  br label %for.cond, !dbg !5658, !llvm.loop !5660

for.end:                                          ; preds = %cond.end28
  ret %struct.VEC_tree_gc* %call3, !dbg !5662
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5663 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5667, metadata !DIExpression()), !dbg !5668
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 %alloc_) #7, !dbg !5669
  %0 = bitcast i8* %call to %struct.VEC_tree_gc*, !dbg !5669
  ret %struct.VEC_tree_gc* %0, !dbg !5669
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5670 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5674, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5675, metadata !DIExpression()), !dbg !5677
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5678
  %0 = load i32, i32* %num1, align 8, !dbg !5678
  %inc = add i32 %0, 1, !dbg !5678
  store i32 %inc, i32* %num1, align 8, !dbg !5678
  %idxprom = zext i32 %0 to i64, !dbg !5678
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5678
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5676, metadata !DIExpression()), !dbg !5677
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5678
  ret %union.tree_node** %arrayidx, !dbg !5678
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @size_in_bytes(%union.tree_node* %type) local_unnamed_addr #5 !dbg !5679 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5681, metadata !DIExpression()), !dbg !5683
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5684
  %cmp = icmp eq %union.tree_node* %0, %type, !dbg !5686
  br i1 %cmp, label %if.then, label %if.end, !dbg !5687

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !5688
  br label %cleanup, !dbg !5689

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5690
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5690
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5681, metadata !DIExpression()), !dbg !5683
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5691
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5691
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5682, metadata !DIExpression()), !dbg !5683
  %cmp3 = icmp eq %union.tree_node* %5, null, !dbg !5692
  br i1 %cmp3, label %if.then4, label %cleanup, !dbg !5694

if.then4:                                         ; preds = %if.end
  %6 = load void (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 8), align 8, !dbg !5695
  tail call void %6(%union.tree_node* null, %union.tree_node* %3) #7, !dbg !5697
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !5698
  br label %cleanup, !dbg !5699

cleanup:                                          ; preds = %if.end, %if.then4, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ %7, %if.then4 ], [ %5, %if.end ], !dbg !5683
  ret %union.tree_node* %retval.0, !dbg !5700
}

; Function Attrs: nounwind uwtable
define dso_local i64 @int_size_in_bytes(%union.tree_node* %type) local_unnamed_addr #5 !dbg !5701 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5705, metadata !DIExpression()), !dbg !5707
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5708
  %cmp = icmp eq %union.tree_node* %0, %type, !dbg !5710
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5711

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5712
  %2 = bitcast %union.tree_node** %1 to %struct.tree_type**, !dbg !5712
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !5712
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 3, !dbg !5713
  %4 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !5713
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5706, metadata !DIExpression()), !dbg !5707
  %cmp3 = icmp eq %union.tree_node* %4, null, !dbg !5714
  br i1 %cmp3, label %cleanup, label %lor.lhs.false, !dbg !5716

lor.lhs.false:                                    ; preds = %if.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5717
  %bf.load = load i64, i64* %5, align 8, !dbg !5717
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5718
  %cmp4 = icmp eq i64 %bf.cast1, 23, !dbg !5718
  br i1 %cmp4, label %lor.lhs.false5, label %cleanup, !dbg !5719

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %int_cst6 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5720
  %high = getelementptr inbounds i32, i32* %int_cst6, i64 2, !dbg !5720
  %6 = bitcast i32* %high to i64*, !dbg !5720
  %7 = load i64, i64* %6, align 8, !dbg !5720
  %cmp7 = icmp eq i64 %7, 0, !dbg !5721
  br i1 %cmp7, label %lor.lhs.false8, label %cleanup, !dbg !5722

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %low = bitcast i32* %int_cst6 to i64*, !dbg !5723
  %8 = load i64, i64* %low, align 8, !dbg !5723
  %cmp11 = icmp slt i64 %8, 0, !dbg !5724
  br i1 %cmp11, label %cleanup, label %if.end13, !dbg !5725

if.end13:                                         ; preds = %lor.lhs.false8
  br label %cleanup, !dbg !5726

cleanup:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end, %lor.lhs.false8, %entry, %if.end13
  %retval.0 = phi i64 [ %8, %if.end13 ], [ 0, %entry ], [ -1, %lor.lhs.false8 ], [ -1, %lor.lhs.false5 ], [ -1, %lor.lhs.false ], [ -1, %if.end ], !dbg !5707
  ret i64 %retval.0, !dbg !5727
}

; Function Attrs: nounwind uwtable
define dso_local i64 @max_int_size_in_bytes(%union.tree_node* %type) local_unnamed_addr #5 !dbg !5728 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5730, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata i64 -1, metadata !5731, metadata !DIExpression()), !dbg !5733
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5734
  %bf.load = load i64, i64* %0, align 8, !dbg !5734
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5736
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !5736
  br i1 %cmp, label %if.then, label %if.end5, !dbg !5737

if.then:                                          ; preds = %entry
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5738
  %1 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !5738
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5738
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5732, metadata !DIExpression()), !dbg !5733
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !5740
  br i1 %tobool, label %if.end5, label %land.lhs.true, !dbg !5742

land.lhs.true:                                    ; preds = %if.then
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %2, i32 1) #8, !dbg !5743
  %tobool2 = icmp eq i32 %call, 0, !dbg !5743
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !5744

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %2, i32 1) #8, !dbg !5745
  call void @llvm.dbg.value(metadata i64 %call4, metadata !5731, metadata !DIExpression()), !dbg !5733
  br label %if.end5, !dbg !5746

if.end5:                                          ; preds = %land.lhs.true, %if.then, %if.then3, %entry
  %size.1 = phi i64 [ -1, %entry ], [ %call4, %if.then3 ], [ -1, %land.lhs.true ], [ -1, %if.then ], !dbg !5733
  call void @llvm.dbg.value(metadata i64 %size.1, metadata !5731, metadata !DIExpression()), !dbg !5733
  %cmp6 = icmp eq i64 %size.1, -1, !dbg !5747
  br i1 %cmp6, label %if.then7, label %if.end16, !dbg !5749

if.then7:                                         ; preds = %if.end5
  %3 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 9), align 8, !dbg !5750
  %call8 = tail call %union.tree_node* %3(%union.tree_node* %type) #7, !dbg !5752
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5732, metadata !DIExpression()), !dbg !5733
  %tobool9 = icmp eq %union.tree_node* %call8, null, !dbg !5753
  br i1 %tobool9, label %if.end16, label %land.lhs.true10, !dbg !5755

land.lhs.true10:                                  ; preds = %if.then7
  %call11 = tail call i32 @host_integerp(%union.tree_node* nonnull %call8, i32 1) #8, !dbg !5756
  %tobool12 = icmp eq i32 %call11, 0, !dbg !5756
  br i1 %tobool12, label %if.end16, label %if.then13, !dbg !5757

if.then13:                                        ; preds = %land.lhs.true10
  %call14 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %call8, i32 1) #8, !dbg !5758
  call void @llvm.dbg.value(metadata i64 %call14, metadata !5731, metadata !DIExpression()), !dbg !5733
  br label %if.end16, !dbg !5759

if.end16:                                         ; preds = %land.lhs.true10, %if.then7, %if.then13, %if.end5
  %size.3 = phi i64 [ %size.1, %if.end5 ], [ %call14, %if.then13 ], [ -1, %land.lhs.true10 ], [ -1, %if.then7 ], !dbg !5733
  call void @llvm.dbg.value(metadata i64 %size.3, metadata !5731, metadata !DIExpression()), !dbg !5733
  ret i64 %size.3, !dbg !5760
}

; Function Attrs: nounwind uwtable
define dso_local i32 @host_integerp(%union.tree_node* %t, i32 %pos) local_unnamed_addr #5 !dbg !5761 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5765, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i32 %pos, metadata !5766, metadata !DIExpression()), !dbg !5767
  %cmp = icmp eq %union.tree_node* %t, null, !dbg !5768
  br i1 %cmp, label %return, label %if.end, !dbg !5770

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5771
  %bf.load = load i64, i64* %0, align 8, !dbg !5771
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5772
  %cmp1 = icmp eq i64 %bf.cast1, 23, !dbg !5772
  br i1 %cmp1, label %land.rhs, label %land.end45, !dbg !5773

land.rhs:                                         ; preds = %if.end
  %int_cst2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5774
  %high = getelementptr inbounds i32, i32* %int_cst2, i64 2, !dbg !5774
  %1 = bitcast i32* %high to i64*, !dbg !5774
  %2 = load i64, i64* %1, align 8, !dbg !5774
  %cmp3 = icmp eq i64 %2, 0, !dbg !5775
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false, !dbg !5776

land.lhs.true:                                    ; preds = %land.rhs
  %low = bitcast i32* %int_cst2 to i64*, !dbg !5777
  %3 = load i64, i64* %low, align 8, !dbg !5777
  %cmp6 = icmp sgt i64 %3, -1, !dbg !5778
  br i1 %cmp6, label %land.end45, label %lor.lhs.false, !dbg !5779

lor.lhs.false:                                    ; preds = %land.lhs.true, %land.rhs
  %cond = icmp eq i32 %pos, 0, !dbg !5780
  br i1 %cond, label %land.lhs.true7, label %land.rhs40, !dbg !5780

land.lhs.true7:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %2, -1, !dbg !5781
  br i1 %cmp11, label %land.lhs.true12, label %lor.rhs, !dbg !5782

land.lhs.true12:                                  ; preds = %land.lhs.true7
  %low15 = bitcast i32* %int_cst2 to i64*, !dbg !5783
  %4 = load i64, i64* %low15, align 8, !dbg !5783
  %cmp16 = icmp slt i64 %4, 0, !dbg !5784
  br i1 %cmp16, label %land.lhs.true17, label %lor.rhs, !dbg !5785

land.lhs.true17:                                  ; preds = %land.lhs.true12
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5786
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !5786
  %6 = load i64*, i64** %5, align 8, !dbg !5786
  %bf.load19 = load i64, i64* %6, align 8, !dbg !5786
  %bf.cast212 = and i64 %bf.load19, 2097152, !dbg !5786
  %tobool22 = icmp eq i64 %bf.cast212, 0, !dbg !5786
  %7 = bitcast i64* %6 to %struct.tree_type*, !dbg !5787
  br i1 %tobool22, label %land.end45, label %lor.lhs.false23, !dbg !5787

lor.lhs.false23:                                  ; preds = %land.lhs.true17
  %bf.cast293 = and i64 %bf.load19, 65535, !dbg !5788
  %cmp30 = icmp eq i64 %bf.cast293, 8, !dbg !5788
  br i1 %cmp30, label %land.lhs.true31, label %lor.rhs, !dbg !5789

land.lhs.true31:                                  ; preds = %lor.lhs.false23
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 6, !dbg !5790
  %bf.load35 = load i32, i32* %no_force_blk_flag, align 4, !dbg !5790
  %bf.clear37 = and i32 %bf.load35, 1024, !dbg !5790
  %tobool38 = icmp eq i32 %bf.clear37, 0, !dbg !5790
  br i1 %tobool38, label %lor.rhs, label %land.end45, !dbg !5791

lor.rhs:                                          ; preds = %land.lhs.true31, %lor.lhs.false23, %land.lhs.true12, %land.lhs.true7
  br i1 true, label %land.end45, label %lor.rhs.land.rhs40_crit_edge, !dbg !5792

lor.rhs.land.rhs40_crit_edge:                     ; preds = %lor.rhs
  br label %land.rhs40, !dbg !5792

land.rhs40:                                       ; preds = %lor.rhs.land.rhs40_crit_edge, %lor.lhs.false
  %phitmp = zext i1 %cmp3 to i32
  br label %land.end45

land.end45:                                       ; preds = %land.lhs.true31, %land.lhs.true17, %lor.rhs, %land.lhs.true, %land.rhs40, %if.end
  %8 = phi i32 [ 0, %if.end ], [ 1, %land.lhs.true31 ], [ 1, %land.lhs.true17 ], [ 1, %land.lhs.true ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs40 ]
  br label %return, !dbg !5793

return:                                           ; preds = %entry, %land.end45
  %retval.0 = phi i32 [ %8, %land.end45 ], [ 0, %entry ], !dbg !5767
  ret i32 %retval.0, !dbg !5794
}

; Function Attrs: nounwind uwtable
define dso_local i64 @tree_low_cst(%union.tree_node* %t, i32 %pos) local_unnamed_addr #5 !dbg !5795 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5799, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i32 %pos, metadata !5800, metadata !DIExpression()), !dbg !5801
  %call = tail call i32 @host_integerp(%union.tree_node* %t, i32 %pos) #8, !dbg !5802
  %tobool = icmp eq i32 %call, 0, !dbg !5802
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5802

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 6214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !5802
  br label %cond.end, !dbg !5802

cond.end:                                         ; preds = %entry, %cond.true
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5803
  %low = bitcast i32* %int_cst1 to i64*, !dbg !5803
  %0 = load i64, i64* %low, align 8, !dbg !5803
  ret i64 %0, !dbg !5804
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @tree_expr_size(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !5805 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5807, metadata !DIExpression()), !dbg !5808
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5809
  %bf.load = load i64, i64* %0, align 8, !dbg !5809
  %bf.cast = and i64 %bf.load, 65535, !dbg !5809
  %1 = add nsw i64 %bf.cast, -29, !dbg !5809
  %cmp = icmp ult i64 %1, 12, !dbg !5809
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5811

land.lhs.true:                                    ; preds = %entry
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5812
  %2 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !5812
  %cmp1 = icmp eq %union.tree_node* %2, null, !dbg !5813
  br i1 %cmp1, label %if.else, label %if.then, !dbg !5814

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !5815

if.else:                                          ; preds = %land.lhs.true, %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5816
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5816
  %call = tail call %union.tree_node* @size_in_bytes(%union.tree_node* %3) #8, !dbg !5817
  br label %return, !dbg !5818

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %union.tree_node* [ %2, %if.then ], [ %call, %if.else ], !dbg !5819
  ret %union.tree_node* %retval.0, !dbg !5820
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @bit_position(%union.tree_node* %field) local_unnamed_addr #5 !dbg !5821 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !5823, metadata !DIExpression()), !dbg !5824
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5825
  %0 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !5825
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5825
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !5826
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5826
  %call = tail call %union.tree_node* @bit_from_pos(%union.tree_node* %1, %union.tree_node* %3) #7, !dbg !5827
  ret %union.tree_node* %call, !dbg !5828
}

declare dso_local %union.tree_node* @bit_from_pos(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i64 @int_bit_position(%union.tree_node* %field) local_unnamed_addr #5 !dbg !5829 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !5831, metadata !DIExpression()), !dbg !5832
  %call = tail call %union.tree_node* @bit_position(%union.tree_node* %field) #8, !dbg !5833
  %call1 = tail call i64 @tree_low_cst(%union.tree_node* %call, i32 0) #8, !dbg !5834
  ret i64 %call1, !dbg !5835
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @byte_position(%union.tree_node* %field) local_unnamed_addr #5 !dbg !5836 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !5838, metadata !DIExpression()), !dbg !5839
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5840
  %0 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !5840
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5840
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !5841
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5841
  %call = tail call %union.tree_node* @byte_from_pos(%union.tree_node* %1, %union.tree_node* %3) #7, !dbg !5842
  ret %union.tree_node* %call, !dbg !5843
}

declare dso_local %union.tree_node* @byte_from_pos(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i64 @int_byte_position(%union.tree_node* %field) local_unnamed_addr #5 !dbg !5844 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !5846, metadata !DIExpression()), !dbg !5847
  %call = tail call %union.tree_node* @byte_position(%union.tree_node* %field) #8, !dbg !5848
  %call1 = tail call i64 @tree_low_cst(%union.tree_node* %call, i32 0) #8, !dbg !5849
  ret i64 %call1, !dbg !5850
}

; Function Attrs: nounwind uwtable
define dso_local i32 @expr_align(%union.tree_node* %t) local_unnamed_addr #5 !dbg !5851 {
entry:
  br label %tailrecurse, !dbg !5858

tailrecurse:                                      ; preds = %sw.bb2, %entry
  %t.tr = phi %union.tree_node* [ %t, %entry ], [ %6, %sw.bb2 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr, metadata !5855, metadata !DIExpression()), !dbg !5860
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5861
  %bf.load = load i64, i64* %0, align 8, !dbg !5861
  %1 = trunc i64 %bf.load to i16, !dbg !5861
  switch i16 %1, label %sw.epilog [
    i16 116, label %sw.bb
    i16 113, label %sw.bb
    i16 117, label %sw.bb
    i16 120, label %sw.bb2
    i16 52, label %sw.bb2
    i16 53, label %sw.bb2
    i16 54, label %sw.bb2
    i16 55, label %sw.bb2
    i16 60, label %sw.bb2
    i16 61, label %sw.bb2
    i16 56, label %sw.bb7
    i16 30, label %sw.bb21
    i16 33, label %sw.bb21
    i16 32, label %sw.bb21
    i16 34, label %sw.bb21
    i16 36, label %sw.bb21
    i16 29, label %sw.bb21
  ], !dbg !5862

sw.bb:                                            ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %t.tr.lcssa7 = phi %union.tree_node* [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa7, metadata !5855, metadata !DIExpression()), !dbg !5860
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5863
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5863
  %call = tail call i32 @expr_align(%union.tree_node* %2) #8, !dbg !5864
  call void @llvm.dbg.value(metadata i32 %call, metadata !5856, metadata !DIExpression()), !dbg !5860
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5865
  %3 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5865
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !5865
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 7, !dbg !5865
  %5 = load i32, i32* %align, align 8, !dbg !5865
  call void @llvm.dbg.value(metadata i32 %5, metadata !5857, metadata !DIExpression()), !dbg !5860
  %cmp = icmp ugt i32 %call, %5, !dbg !5866
  %call. = select i1 %cmp, i32 %call, i32 %5, !dbg !5866
  ret i32 %call., !dbg !5867

sw.bb2:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5868
  %6 = load %union.tree_node*, %union.tree_node** %operands4, align 8, !dbg !5868
  br label %tailrecurse, !dbg !5858

sw.bb7:                                           ; preds = %tailrecurse
  %t.tr.lcssa8 = phi %union.tree_node* [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa8, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa8, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa8, metadata !5855, metadata !DIExpression()), !dbg !5860
  %operands9 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5869
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands9, i64 1, !dbg !5869
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !5869
  %call11 = tail call i32 @expr_align(%union.tree_node* %7) #8, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %call11, metadata !5856, metadata !DIExpression()), !dbg !5860
  %arrayidx14 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands9, i64 2, !dbg !5871
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !5871
  %call15 = tail call i32 @expr_align(%union.tree_node* %8) #8, !dbg !5872
  call void @llvm.dbg.value(metadata i32 %call15, metadata !5857, metadata !DIExpression()), !dbg !5860
  %cmp16 = icmp ult i32 %call11, %call15, !dbg !5873
  %call11.call15 = select i1 %cmp16, i32 %call11, i32 %call15, !dbg !5873
  ret i32 %call11.call15, !dbg !5867

sw.bb21:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %t.tr.lcssa9 = phi %union.tree_node* [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa9, metadata !5855, metadata !DIExpression()), !dbg !5860
  %align22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5874
  %9 = load i32, i32* %align22, align 8, !dbg !5874
  %cmp23 = icmp eq i32 %9, 0, !dbg !5874
  br i1 %cmp23, label %cond.true24, label %cond.end26, !dbg !5874

cond.true24:                                      ; preds = %sw.bb21
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 2321, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !5874
  br label %cond.end26, !dbg !5874

cond.end26:                                       ; preds = %sw.bb21, %cond.true24
  br label %cleanup, !dbg !5875

sw.epilog:                                        ; preds = %tailrecurse
  %t.tr.lcssa = phi %union.tree_node* [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa, metadata !5855, metadata !DIExpression()), !dbg !5860
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5876
  %10 = bitcast %union.tree_node** %type31 to %struct.tree_type**, !dbg !5876
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !5876
  %align33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 7, !dbg !5876
  br label %cleanup, !dbg !5877

cleanup:                                          ; preds = %sw.epilog, %cond.end26
  %retval.0.in = phi i32* [ %align33, %sw.epilog ], [ %align22, %cond.end26 ]
  %retval.0 = load i32, i32* %retval.0.in, align 8, !dbg !5860
  ret i32 %retval.0, !dbg !5867
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @array_type_nelts(%union.tree_node* %type) local_unnamed_addr #5 !dbg !5878 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5880, metadata !DIExpression()), !dbg !5884
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5885
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !5885
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5885
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !5885
  br i1 %tobool, label %if.then, label %if.end, !dbg !5887

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5888
  br label %cleanup, !dbg !5889

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5881, metadata !DIExpression()), !dbg !5884
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !5890
  %3 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !5890
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5890
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5882, metadata !DIExpression()), !dbg !5884
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5891
  %5 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !5891
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !5891
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !5883, metadata !DIExpression()), !dbg !5884
  %call = tail call i32 @integer_zerop(%union.tree_node* %4) #8, !dbg !5892
  %tobool6 = icmp eq i32 %call, 0, !dbg !5892
  br i1 %tobool6, label %cond.false, label %cleanup, !dbg !5892

cond.false:                                       ; preds = %if.end
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5893
  %7 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !5893
  %call8 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %7, %union.tree_node* %6, %union.tree_node* %4) #7, !dbg !5893
  br label %cleanup, !dbg !5892

cleanup:                                          ; preds = %if.end, %cond.false, %if.then
  %retval.0 = phi %union.tree_node* [ %2, %if.then ], [ %call8, %cond.false ], [ %6, %if.end ], !dbg !5884
  ret %union.tree_node* %retval.0, !dbg !5894
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @staticp(%union.tree_node* %arg) local_unnamed_addr #5 !dbg !5895 {
entry:
  br label %tailrecurse, !dbg !5898

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %arg.tr = phi %union.tree_node* [ %arg, %entry ], [ %arg.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr, metadata !5897, metadata !DIExpression()), !dbg !5900
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5901
  %bf.load = load i64, i64* %0, align 8, !dbg !5901
  %1 = trunc i64 %bf.load to i16, !dbg !5901
  switch i16 %1, label %sw.default [
    i16 29, label %return.loopexit
    i16 32, label %sw.bb1
    i16 33, label %sw.bb20
    i16 51, label %sw.bb39
    i16 30, label %return.loopexit
    i16 28, label %return.loopexit
    i16 41, label %sw.bb51
    i16 42, label %sw.bb74
    i16 49, label %sw.bb75
    i16 48, label %sw.bb75
    i16 47, label %sw.bb75
    i16 45, label %sw.bb89
    i16 46, label %sw.bb89
    i16 119, label %sw.bb110
  ], !dbg !5902

sw.bb1:                                           ; preds = %tailrecurse
  %arg.tr.lcssa44 = phi %union.tree_node* [ %arg.tr, %tailrecurse ]
  %bf.load.lcssa37 = phi i64 [ %bf.load, %tailrecurse ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa44, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa44, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa44, metadata !5897, metadata !DIExpression()), !dbg !5900
  %bf.cast512 = and i64 %bf.load.lcssa37, 67108864, !dbg !5903
  %tobool = icmp eq i64 %bf.cast512, 0, !dbg !5903
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !5904

lor.lhs.false:                                    ; preds = %sw.bb1
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.lcssa44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5905
  %2 = bitcast i40* %decl_flag_1 to i64*, !dbg !5905
  %bf.load6 = load i64, i64* %2, align 8, !dbg !5905
  %bf.cast913 = and i64 %bf.load6, 33554432, !dbg !5905
  %tobool10 = icmp eq i64 %bf.cast913, 0, !dbg !5905
  br i1 %tobool10, label %cond.false, label %land.lhs.true, !dbg !5906

land.lhs.true:                                    ; preds = %lor.lhs.false, %sw.bb1
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.lcssa44, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5907
  %3 = bitcast i24* %tls_model to i32*, !dbg !5907
  %bf.load11 = load i32, i32* %3, align 8, !dbg !5907
  %bf.clear13 = and i32 %bf.load11, 49152, !dbg !5907
  %cmp = icmp eq i32 %bf.clear13, 0, !dbg !5907
  br i1 %cmp, label %land.lhs.true14, label %cond.false, !dbg !5908

land.lhs.true14:                                  ; preds = %land.lhs.true
  %bf.clear18 = and i32 %bf.load11, 32, !dbg !5909
  %tobool19 = icmp eq i32 %bf.clear18, 0, !dbg !5909
  br i1 %tobool19, label %return, label %cond.false, !dbg !5910

cond.false:                                       ; preds = %land.lhs.true14, %land.lhs.true, %lor.lhs.false
  br label %return, !dbg !5910

sw.bb20:                                          ; preds = %tailrecurse
  %arg.tr.lcssa45 = phi %union.tree_node* [ %arg.tr, %tailrecurse ]
  %bf.load.lcssa38 = phi i64 [ %bf.load, %tailrecurse ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa45, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa45, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa45, metadata !5897, metadata !DIExpression()), !dbg !5900
  %bf.cast2510 = and i64 %bf.load.lcssa38, 67108864, !dbg !5911
  %tobool26 = icmp eq i64 %bf.cast2510, 0, !dbg !5911
  br i1 %tobool26, label %lor.lhs.false27, label %return, !dbg !5912

lor.lhs.false27:                                  ; preds = %sw.bb20
  %decl_flag_129 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.lcssa45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5913
  %4 = bitcast i40* %decl_flag_129 to i64*, !dbg !5913
  %bf.load30 = load i64, i64* %4, align 8, !dbg !5913
  %bf.cast3311 = and i64 %bf.load30, 33554432, !dbg !5913
  %tobool34 = icmp eq i64 %bf.cast3311, 0, !dbg !5913
  %spec.select = select i1 %tobool34, %union.tree_node* null, %union.tree_node* %arg.tr.lcssa45, !dbg !5914
  ret %union.tree_node* %spec.select, !dbg !5914

sw.bb39:                                          ; preds = %tailrecurse
  %arg.tr.lcssa46 = phi %union.tree_node* [ %arg.tr, %tailrecurse ]
  %bf.load.lcssa39 = phi i64 [ %bf.load, %tailrecurse ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa46, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa46, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa46, metadata !5897, metadata !DIExpression()), !dbg !5900
  %bf.cast449 = and i64 %bf.load.lcssa39, 67108864, !dbg !5915
  %tobool45 = icmp eq i64 %bf.cast449, 0, !dbg !5915
  %arg. = select i1 %tobool45, %union.tree_node* null, %union.tree_node* %arg.tr.lcssa46, !dbg !5915
  br label %return, !dbg !5916

sw.bb51:                                          ; preds = %tailrecurse
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5917
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5917
  %5 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !5917
  %6 = load i64*, i64** %5, align 8, !dbg !5917
  %bf.load53 = load i64, i64* %6, align 8, !dbg !5917
  %bf.cast557 = and i64 %bf.load53, 65535, !dbg !5917
  %cmp56 = icmp eq i64 %bf.cast557, 31, !dbg !5917
  br i1 %cmp56, label %sw.bb51.cond.end59_crit_edge, label %cond.true57, !dbg !5917

sw.bb51.cond.end59_crit_edge:                     ; preds = %sw.bb51
  %7 = bitcast i64* %6 to %struct.tree_decl_common*, !dbg !5917
  br label %cond.end59, !dbg !5917

cond.true57:                                      ; preds = %sw.bb51
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 2389, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !5917
  %.phi.trans.insert = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_common**, !dbg !5918
  %.pre = load %struct.tree_decl_common*, %struct.tree_decl_common** %.phi.trans.insert, align 8, !dbg !5920
  br label %cond.end59, !dbg !5917

cond.end59:                                       ; preds = %sw.bb51.cond.end59_crit_edge, %cond.true57
  %8 = phi %struct.tree_decl_common* [ %7, %sw.bb51.cond.end59_crit_edge ], [ %.pre, %cond.true57 ], !dbg !5920
  %decl_flag_165 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %8, i64 0, i32 2, !dbg !5920
  %9 = bitcast i40* %decl_flag_165 to i64*, !dbg !5920
  %bf.load66 = load i64, i64* %9, align 8, !dbg !5920
  %bf.cast698 = and i64 %bf.load66, 33554432, !dbg !5920
  %tobool70 = icmp eq i64 %bf.cast698, 0, !dbg !5920
  br i1 %tobool70, label %if.end, label %return.loopexit, !dbg !5921

if.end:                                           ; preds = %cond.end59
  br label %tailrecurse.backedge, !dbg !5898

tailrecurse.backedge:                             ; preds = %if.end, %if.then105
  %arg.tr.be.in = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5922
  %arg.tr.be = load %union.tree_node*, %union.tree_node** %arg.tr.be.in, align 8, !dbg !5922
  br label %tailrecurse, !dbg !5900

sw.bb74:                                          ; preds = %tailrecurse
  br label %return, !dbg !5923

sw.bb75:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %arg.tr.lcssa48 = phi %union.tree_node* [ %arg.tr, %tailrecurse ], [ %arg.tr, %tailrecurse ], [ %arg.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa48, metadata !5897, metadata !DIExpression()), !dbg !5900
  %operands77 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.lcssa48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5924
  %10 = bitcast %union.tree_node** %operands77 to i64**, !dbg !5924
  %11 = load i64*, i64** %10, align 8, !dbg !5924
  %bf.load80 = load i64, i64* %11, align 8, !dbg !5924
  %bf.cast836 = and i64 %bf.load80, 131072, !dbg !5924
  %tobool84 = icmp eq i64 %bf.cast836, 0, !dbg !5924
  %arg.1 = select i1 %tobool84, %union.tree_node* null, %union.tree_node* %arg.tr.lcssa48, !dbg !5924
  br label %return, !dbg !5925

sw.bb89:                                          ; preds = %tailrecurse, %tailrecurse
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5926
  %12 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5926
  %13 = load %struct.tree_type*, %struct.tree_type** %12, align 8, !dbg !5926
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 2, !dbg !5926
  %14 = bitcast %union.tree_node** %size to i64**, !dbg !5926
  %15 = load i64*, i64** %14, align 8, !dbg !5926
  %bf.load92 = load i64, i64* %15, align 8, !dbg !5926
  %bf.cast944 = and i64 %bf.load92, 65535, !dbg !5928
  %cmp95 = icmp eq i64 %bf.cast944, 23, !dbg !5928
  br i1 %cmp95, label %land.lhs.true96, label %return.loopexit, !dbg !5929

land.lhs.true96:                                  ; preds = %sw.bb89
  %operands98 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5930
  %arrayidx99 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands98, i64 1, !dbg !5930
  %16 = bitcast %union.tree_node** %arrayidx99 to i64**, !dbg !5930
  %17 = load i64*, i64** %16, align 8, !dbg !5930
  %bf.load101 = load i64, i64* %17, align 8, !dbg !5930
  %bf.cast1035 = and i64 %bf.load101, 65535, !dbg !5931
  %cmp104 = icmp eq i64 %bf.cast1035, 23, !dbg !5931
  br i1 %cmp104, label %if.then105, label %return.loopexit, !dbg !5932

if.then105:                                       ; preds = %land.lhs.true96
  br label %tailrecurse.backedge, !dbg !5933

sw.bb110:                                         ; preds = %tailrecurse
  %arg.tr.lcssa49 = phi %union.tree_node* [ %arg.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa49, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa49, metadata !5897, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa49, metadata !5897, metadata !DIExpression()), !dbg !5900
  %operands112 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.lcssa49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5934
  %18 = bitcast %union.tree_node** %operands112 to %struct.tree_exp**, !dbg !5934
  %19 = load %struct.tree_exp*, %struct.tree_exp** %18, align 8, !dbg !5934
  %arrayidx116 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %19, i64 0, i32 3, i64 0, !dbg !5934
  %20 = bitcast %union.tree_node** %arrayidx116 to i64**, !dbg !5934
  %21 = load i64*, i64** %20, align 8, !dbg !5934
  %bf.load118 = load i64, i64* %21, align 8, !dbg !5934
  %bf.cast1213 = and i64 %bf.load118, 67108864, !dbg !5934
  %tobool122 = icmp eq i64 %bf.cast1213, 0, !dbg !5934
  %arg.2 = select i1 %tobool122, %union.tree_node* null, %union.tree_node* %arg.tr.lcssa49, !dbg !5934
  br label %return, !dbg !5935

sw.default:                                       ; preds = %tailrecurse
  br label %return, !dbg !5936

return.loopexit:                                  ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %land.lhs.true96, %sw.bb89, %cond.end59
  %retval.0.ph = phi %union.tree_node* [ null, %sw.bb89 ], [ null, %land.lhs.true96 ], [ null, %cond.end59 ], [ %arg.tr, %tailrecurse ], [ %arg.tr, %tailrecurse ], [ %arg.tr, %tailrecurse ]
  br label %return, !dbg !5937

return:                                           ; preds = %return.loopexit, %land.lhs.true14, %sw.bb20, %cond.false, %sw.default, %sw.bb110, %sw.bb75, %sw.bb74, %sw.bb39
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %arg.2, %sw.bb110 ], [ %arg.1, %sw.bb75 ], [ null, %sw.bb74 ], [ %arg., %sw.bb39 ], [ null, %cond.false ], [ %arg.tr.lcssa44, %land.lhs.true14 ], [ %arg.tr.lcssa45, %sw.bb20 ], [ %retval.0.ph, %return.loopexit ], !dbg !5922
  ret %union.tree_node* %retval.0, !dbg !5937
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @decl_address_invariant_p(%union.tree_node* %op) local_unnamed_addr #5 !dbg !5938 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5940, metadata !DIExpression()), !dbg !5941
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5942
  %bf.load = load i64, i64* %0, align 8, !dbg !5942
  %1 = trunc i64 %bf.load to i16, !dbg !5942
  switch i16 %1, label %sw.epilog [
    i16 34, label %return
    i16 36, label %return
    i16 30, label %return
    i16 29, label %return
    i16 32, label %sw.bb1
    i16 33, label %sw.bb24
  ], !dbg !5943

sw.bb1:                                           ; preds = %entry
  %bf.cast53 = and i64 %bf.load, 67108864, !dbg !5944
  %tobool = icmp eq i64 %bf.cast53, 0, !dbg !5944
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !5947

lor.lhs.false:                                    ; preds = %sw.bb1
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5948
  %2 = bitcast i40* %decl_flag_1 to i64*, !dbg !5948
  %bf.load6 = load i64, i64* %2, align 8, !dbg !5948
  %bf.cast94 = and i64 %bf.load6, 33554432, !dbg !5948
  %tobool10 = icmp eq i64 %bf.cast94, 0, !dbg !5948
  br i1 %tobool10, label %lor.lhs.false.lor.lhs.false15_crit_edge, label %land.lhs.true, !dbg !5949

lor.lhs.false.lor.lhs.false15_crit_edge:          ; preds = %lor.lhs.false
  %tls_model.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5950
  %.phi.trans.insert = bitcast i24* %tls_model.phi.trans.insert to i32*, !dbg !5950
  %bf.load17.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5951
  br label %lor.lhs.false15, !dbg !5949

land.lhs.true:                                    ; preds = %lor.lhs.false, %sw.bb1
  %dllimport_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5952
  %3 = bitcast i24* %dllimport_flag to i32*, !dbg !5952
  %bf.load11 = load i32, i32* %3, align 8, !dbg !5952
  %bf.clear13 = and i32 %bf.load11, 32, !dbg !5952
  %tobool14 = icmp eq i32 %bf.clear13, 0, !dbg !5952
  br i1 %tobool14, label %return, label %lor.lhs.false15, !dbg !5953

lor.lhs.false15:                                  ; preds = %lor.lhs.false.lor.lhs.false15_crit_edge, %land.lhs.true
  %bf.load17 = phi i32 [ %bf.load17.pre, %lor.lhs.false.lor.lhs.false15_crit_edge ], [ %bf.load11, %land.lhs.true ], !dbg !5951
  %bf.clear19 = and i32 %bf.load17, 49152, !dbg !5951
  %cmp = icmp eq i32 %bf.clear19, 0, !dbg !5951
  br i1 %cmp, label %lor.lhs.false20, label %return, !dbg !5954

lor.lhs.false20:                                  ; preds = %lor.lhs.false15
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5955
  %4 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !5955
  %5 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5956
  %cmp21 = icmp eq %union.tree_node* %4, %5, !dbg !5957
  br i1 %cmp21, label %return, label %lor.lhs.false22, !dbg !5958

lor.lhs.false22:                                  ; preds = %lor.lhs.false20
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %op) #8, !dbg !5959
  %6 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5960
  %cmp23 = icmp eq %union.tree_node* %call, %6, !dbg !5961
  br i1 %cmp23, label %return, label %sw.epilog, !dbg !5962

sw.bb24:                                          ; preds = %entry
  %bf.cast291 = and i64 %bf.load, 67108864, !dbg !5963
  %tobool30 = icmp eq i64 %bf.cast291, 0, !dbg !5963
  br i1 %tobool30, label %lor.lhs.false31, label %return, !dbg !5965

lor.lhs.false31:                                  ; preds = %sw.bb24
  %decl_flag_133 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5966
  %7 = bitcast i40* %decl_flag_133 to i64*, !dbg !5966
  %bf.load34 = load i64, i64* %7, align 8, !dbg !5966
  %bf.cast372 = and i64 %bf.load34, 33554432, !dbg !5966
  %tobool38 = icmp eq i64 %bf.cast372, 0, !dbg !5966
  br i1 %tobool38, label %lor.lhs.false39, label %return, !dbg !5967

lor.lhs.false39:                                  ; preds = %lor.lhs.false31
  %call40 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %op) #8, !dbg !5968
  %8 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5969
  %cmp41 = icmp eq %union.tree_node* %call40, %8, !dbg !5970
  br i1 %cmp41, label %return, label %sw.epilog, !dbg !5971

sw.epilog:                                        ; preds = %entry, %lor.lhs.false39, %lor.lhs.false22
  br label %return, !dbg !5972

return:                                           ; preds = %land.lhs.true, %lor.lhs.false15, %lor.lhs.false31, %sw.bb24, %lor.lhs.false39, %lor.lhs.false20, %lor.lhs.false22, %entry, %entry, %entry, %entry, %sw.epilog
  %retval.0 = phi i8 [ 0, %sw.epilog ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %lor.lhs.false22 ], [ 1, %lor.lhs.false20 ], [ 1, %lor.lhs.false15 ], [ 1, %land.lhs.true ], [ 1, %lor.lhs.false39 ], [ 1, %lor.lhs.false31 ], [ 1, %sw.bb24 ], !dbg !5941
  ret i8 %retval.0, !dbg !5973
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @decl_function_context(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !5974 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5976, metadata !DIExpression()), !dbg !5978
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5979
  %bf.load = load i64, i64* %0, align 8, !dbg !5979
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5981
  %cmp = icmp eq i64 %bf.cast1, 0, !dbg !5981
  br i1 %cmp, label %cleanup, label %if.else, !dbg !5982

if.else:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 29, !dbg !5983
  br i1 %cmp5, label %land.lhs.true, label %if.else11, !dbg !5985

land.lhs.true:                                    ; preds = %if.else
  %vindex = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 4, !dbg !5986
  %1 = load %union.tree_node*, %union.tree_node** %vindex, align 8, !dbg !5986
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !5986
  br i1 %tobool, label %if.else11, label %if.then6, !dbg !5987

if.then6:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5988
  %2 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5988
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !5988
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 1, !dbg !5988
  %4 = bitcast %union.tree_node** %values to %struct.tree_list**, !dbg !5988
  %5 = load %struct.tree_list*, %struct.tree_list** %4, align 8, !dbg !5988
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %5, i64 0, i32 2, !dbg !5988
  %6 = bitcast %union.tree_node** %value to %struct.tree_common**, !dbg !5988
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !5988
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !5988
  %8 = bitcast %union.tree_node** %type9 to %struct.tree_type**, !dbg !5988
  %9 = load %struct.tree_type*, %struct.tree_type** %8, align 8, !dbg !5988
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 16, !dbg !5988
  br label %if.end13, !dbg !5989

if.else11:                                        ; preds = %land.lhs.true, %if.else
  %context12 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5990
  br label %if.end13

if.end13:                                         ; preds = %if.then6, %if.else11
  %context.0.in = phi %union.tree_node** [ %main_variant, %if.then6 ], [ %context12, %if.else11 ]
  %context.0 = load %union.tree_node*, %union.tree_node** %context.0.in, align 8, !dbg !5991
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0, metadata !5977, metadata !DIExpression()), !dbg !5978
  br label %while.cond, !dbg !5992

while.cond:                                       ; preds = %if.end27, %if.end13
  %context.1 = phi %union.tree_node* [ %context.0, %if.end13 ], [ %context.2, %if.end27 ], !dbg !5978
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1, metadata !5977, metadata !DIExpression()), !dbg !5978
  %tobool14 = icmp eq %union.tree_node* %context.1, null, !dbg !5993
  br i1 %tobool14, label %cleanup.loopexit, label %land.rhs, !dbg !5994

land.rhs:                                         ; preds = %while.cond
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %context.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5995
  %bf.load16 = load i64, i64* %10, align 8, !dbg !5995
  %bf.cast183 = and i64 %bf.load16, 65535, !dbg !5996
  %cmp19 = icmp eq i64 %bf.cast183, 29, !dbg !5996
  br i1 %cmp19, label %cleanup.loopexit, label %while.body, !dbg !5992

while.body:                                       ; preds = %land.rhs
  %cmp24 = icmp eq i64 %bf.cast183, 4, !dbg !5997
  br i1 %cmp24, label %if.then25, label %if.else26, !dbg !6000

if.then25:                                        ; preds = %while.body
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %context.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6001
  %11 = bitcast i40* %supercontext to %union.tree_node**, !dbg !6001
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !6001
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !5977, metadata !DIExpression()), !dbg !5978
  br label %if.end27, !dbg !6002

if.else26:                                        ; preds = %while.body
  %call = tail call %union.tree_node* @get_containing_scope(%union.tree_node* nonnull %context.1) #8, !dbg !6003
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5977, metadata !DIExpression()), !dbg !5978
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.then25
  %context.2 = phi %union.tree_node* [ %12, %if.then25 ], [ %call, %if.else26 ], !dbg !6004
  call void @llvm.dbg.value(metadata %union.tree_node* %context.2, metadata !5977, metadata !DIExpression()), !dbg !5978
  br label %while.cond, !dbg !5992, !llvm.loop !6005

cleanup.loopexit:                                 ; preds = %while.cond, %land.rhs
  %context.1.lcssa = phi %union.tree_node* [ %context.1, %while.cond ], [ %context.1, %land.rhs ], !dbg !5978
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1.lcssa, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1.lcssa, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1.lcssa, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1.lcssa, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1.lcssa, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1.lcssa, metadata !5977, metadata !DIExpression()), !dbg !5978
  br label %cleanup, !dbg !6007

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %context.1.lcssa, %cleanup.loopexit ], !dbg !5978
  ret %union.tree_node* %retval.0, !dbg !6007
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @decl_address_ip_invariant_p(%union.tree_node* %op) local_unnamed_addr #5 !dbg !6008 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6010, metadata !DIExpression()), !dbg !6011
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6012
  %bf.load = load i64, i64* %0, align 8, !dbg !6012
  %1 = trunc i64 %bf.load to i16, !dbg !6012
  switch i16 %1, label %sw.epilog [
    i16 30, label %return
    i16 29, label %return
    i16 28, label %return
    i16 32, label %sw.bb1
    i16 33, label %sw.bb20
  ], !dbg !6013

sw.bb1:                                           ; preds = %entry
  %bf.cast53 = and i64 %bf.load, 67108864, !dbg !6014
  %tobool = icmp eq i64 %bf.cast53, 0, !dbg !6014
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !6017

lor.lhs.false:                                    ; preds = %sw.bb1
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6018
  %2 = bitcast i40* %decl_flag_1 to i64*, !dbg !6018
  %bf.load6 = load i64, i64* %2, align 8, !dbg !6018
  %bf.cast94 = and i64 %bf.load6, 33554432, !dbg !6018
  %tobool10 = icmp eq i64 %bf.cast94, 0, !dbg !6018
  br i1 %tobool10, label %lor.lhs.false.lor.lhs.false15_crit_edge, label %land.lhs.true, !dbg !6019

lor.lhs.false.lor.lhs.false15_crit_edge:          ; preds = %lor.lhs.false
  %tls_model.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6020
  %.phi.trans.insert = bitcast i24* %tls_model.phi.trans.insert to i32*, !dbg !6020
  %bf.load17.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !6021
  br label %lor.lhs.false15, !dbg !6019

land.lhs.true:                                    ; preds = %lor.lhs.false, %sw.bb1
  %dllimport_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6022
  %3 = bitcast i24* %dllimport_flag to i32*, !dbg !6022
  %bf.load11 = load i32, i32* %3, align 8, !dbg !6022
  %bf.clear13 = and i32 %bf.load11, 32, !dbg !6022
  %tobool14 = icmp eq i32 %bf.clear13, 0, !dbg !6022
  br i1 %tobool14, label %return, label %lor.lhs.false15, !dbg !6023

lor.lhs.false15:                                  ; preds = %lor.lhs.false.lor.lhs.false15_crit_edge, %land.lhs.true
  %bf.load17 = phi i32 [ %bf.load17.pre, %lor.lhs.false.lor.lhs.false15_crit_edge ], [ %bf.load11, %land.lhs.true ], !dbg !6021
  %bf.clear19 = and i32 %bf.load17, 49152, !dbg !6021
  %cmp = icmp eq i32 %bf.clear19, 0, !dbg !6021
  br i1 %cmp, label %sw.epilog, label %return, !dbg !6024

sw.bb20:                                          ; preds = %entry
  %bf.cast251 = and i64 %bf.load, 67108864, !dbg !6025
  %tobool26 = icmp eq i64 %bf.cast251, 0, !dbg !6025
  br i1 %tobool26, label %lor.lhs.false27, label %return, !dbg !6027

lor.lhs.false27:                                  ; preds = %sw.bb20
  %decl_flag_129 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6028
  %4 = bitcast i40* %decl_flag_129 to i64*, !dbg !6028
  %bf.load30 = load i64, i64* %4, align 8, !dbg !6028
  %bf.cast332 = and i64 %bf.load30, 33554432, !dbg !6028
  %tobool34 = icmp eq i64 %bf.cast332, 0, !dbg !6028
  br i1 %tobool34, label %sw.epilog, label %return, !dbg !6029

sw.epilog:                                        ; preds = %lor.lhs.false15, %lor.lhs.false27, %entry
  br label %return, !dbg !6030

return:                                           ; preds = %land.lhs.true, %lor.lhs.false15, %lor.lhs.false27, %sw.bb20, %entry, %entry, %entry, %sw.epilog
  %retval.0 = phi i8 [ 0, %sw.epilog ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %lor.lhs.false15 ], [ 1, %land.lhs.true ], [ 1, %lor.lhs.false27 ], [ 1, %sw.bb20 ], !dbg !6011
  ret i8 %retval.0, !dbg !6031
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @save_expr(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !6032 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6034, metadata !DIExpression()), !dbg !6037
  %call = tail call %union.tree_node* @fold(%union.tree_node* %expr) #7, !dbg !6038
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6035, metadata !DIExpression()), !dbg !6037
  %call1 = tail call %union.tree_node* @skip_simple_arithmetic(%union.tree_node* %call) #8, !dbg !6039
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6036, metadata !DIExpression()), !dbg !6037
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6040
  %bf.load = load i64, i64* %0, align 8, !dbg !6040
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6042
  %cmp = icmp eq i64 %bf.cast1, 0, !dbg !6042
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6043

if.end:                                           ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @tree_invariant_p_1(%union.tree_node* %call1) #8, !dbg !6044
  %tobool = icmp eq i8 %call2, 0, !dbg !6044
  br i1 %tobool, label %if.end4, label %cleanup, !dbg !6046

if.end4:                                          ; preds = %if.end
  %call5 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* %call1) #8, !dbg !6047
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6047
  br i1 %tobool6, label %if.end8, label %cleanup, !dbg !6049

if.end8:                                          ; preds = %if.end4
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6050
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6050
  %call9 = tail call %union.tree_node* @build1_stat(i32 120, %union.tree_node* %1, %union.tree_node* %call) #8, !dbg !6050
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6035, metadata !DIExpression()), !dbg !6037
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6051
  %bf.load11 = load i64, i64* %2, align 8, !dbg !6051
  %bf.cast13 = and i64 %bf.load11, 65535, !dbg !6051
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast13, !dbg !6051
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6051
  %cmp14 = icmp ugt i32 %3, 3, !dbg !6051
  br i1 %cmp14, label %land.lhs.true, label %cond.end, !dbg !6051

land.lhs.true:                                    ; preds = %if.end8
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6051
  %5 = load i32, i32* %4, align 8, !dbg !6051
  br label %cond.end, !dbg !6051

cond.end:                                         ; preds = %if.end8, %land.lhs.true
  %cond = phi i32 [ %5, %land.lhs.true ], [ 0, %if.end8 ], !dbg !6051
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6051
  store i32 %cond, i32* %6, align 8, !dbg !6051
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6052
  %bf.load25 = load i64, i64* %7, align 8, !dbg !6053
  %bf.set = or i64 %bf.load25, 65536, !dbg !6053
  store i64 %bf.set, i64* %7, align 8, !dbg !6053
  br label %cleanup, !dbg !6054

cleanup:                                          ; preds = %if.end4, %if.end, %entry, %cond.end
  %retval.0 = phi %union.tree_node* [ %call9, %cond.end ], [ %call1, %entry ], [ %call, %if.end ], [ %call, %if.end4 ], !dbg !6037
  ret %union.tree_node* %retval.0, !dbg !6055
}

declare dso_local %union.tree_node* @fold(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @skip_simple_arithmetic(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !6056 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6058, metadata !DIExpression()), !dbg !6060
  br label %while.cond, !dbg !6061

while.cond:                                       ; preds = %while.body, %entry
  %expr.addr.0 = phi %union.tree_node* [ %expr, %entry ], [ %1, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !6058, metadata !DIExpression()), !dbg !6060
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6062
  %bf.load = load i64, i64* %0, align 8, !dbg !6062
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6063
  %cmp = icmp eq i64 %bf.cast1, 117, !dbg !6063
  br i1 %cmp, label %while.body, label %while.cond1.preheader, !dbg !6061

while.cond1.preheader:                            ; preds = %while.cond
  %expr.addr.0.lcssa = phi %union.tree_node* [ %expr.addr.0, %while.cond ]
  %bf.load.lcssa = phi i64 [ %bf.load, %while.cond ], !dbg !6062
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa, metadata !6058, metadata !DIExpression()), !dbg !6060
  br label %while.cond1, !dbg !6064

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6065
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6065
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6058, metadata !DIExpression()), !dbg !6060
  br label %while.cond, !dbg !6061, !llvm.loop !6066

while.cond1:                                      ; preds = %while.cond1.preheader, %if.end41
  %bf.load13 = phi i64 [ %bf.load4.pre, %if.end41 ], [ %bf.load.lcssa, %while.cond1.preheader ], !dbg !6067
  %inner.0 = phi %union.tree_node* [ %inner.2, %if.end41 ], [ %expr.addr.0.lcssa, %while.cond1.preheader ], !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0, metadata !6059, metadata !DIExpression()), !dbg !6060
  %bf.cast6 = and i64 %bf.load13, 65535, !dbg !6067
  %arrayidx7 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast6, !dbg !6067
  %2 = load i32, i32* %arrayidx7, align 4, !dbg !6067
  %cmp8 = icmp eq i32 %2, 6, !dbg !6067
  br i1 %cmp8, label %if.then, label %if.else, !dbg !6070

if.then:                                          ; preds = %while.cond1
  %operands10 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6071
  %3 = load %union.tree_node*, %union.tree_node** %operands10, align 8, !dbg !6071
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6059, metadata !DIExpression()), !dbg !6060
  br label %if.end41, !dbg !6072

if.else:                                          ; preds = %while.cond1
  %cmp18 = icmp eq i32 %2, 7, !dbg !6073
  br i1 %cmp18, label %if.then19, label %while.end42, !dbg !6075

if.then19:                                        ; preds = %if.else
  %operands21 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6076
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands21, i64 1, !dbg !6076
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8, !dbg !6076
  %call = tail call fastcc zeroext i8 @tree_invariant_p(%union.tree_node* %4) #8, !dbg !6079
  %tobool = icmp eq i8 %call, 0, !dbg !6079
  %5 = load %union.tree_node*, %union.tree_node** %operands21, align 8, !dbg !6080
  br i1 %tobool, label %if.else27, label %if.end41, !dbg !6081

if.else27:                                        ; preds = %if.then19
  %call31 = tail call fastcc zeroext i8 @tree_invariant_p(%union.tree_node* %5) #8, !dbg !6082
  %tobool32 = icmp eq i8 %call31, 0, !dbg !6082
  br i1 %tobool32, label %while.end42, label %if.then33, !dbg !6084

if.then33:                                        ; preds = %if.else27
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8, !dbg !6085
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6059, metadata !DIExpression()), !dbg !6060
  br label %if.end41

if.end41:                                         ; preds = %if.then19, %if.then33, %if.then
  %inner.2 = phi %union.tree_node* [ %3, %if.then ], [ %6, %if.then33 ], [ %5, %if.then19 ], !dbg !6086
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.2, metadata !6059, metadata !DIExpression()), !dbg !6060
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6086
  %bf.load4.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !6067
  br label %while.cond1, !dbg !6064, !llvm.loop !6087

while.end42:                                      ; preds = %if.else27, %if.else
  %inner.0.lcssa = phi %union.tree_node* [ %inner.0, %if.else27 ], [ %inner.0, %if.else ], !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !6059, metadata !DIExpression()), !dbg !6060
  ret %union.tree_node* %inner.0.lcssa, !dbg !6089
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @tree_invariant_p_1(%union.tree_node* %t) unnamed_addr #5 !dbg !6090 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6094, metadata !DIExpression()), !dbg !6096
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6097
  %bf.load = load i64, i64* %0, align 8, !dbg !6097
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !6097
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6097
  br i1 %tobool, label %lor.lhs.false, label %cleanup, !dbg !6099

lor.lhs.false:                                    ; preds = %entry
  %bf.cast52 = and i64 %bf.load, 1048576, !dbg !6100
  %tobool6 = icmp eq i64 %bf.cast52, 0, !dbg !6100
  br i1 %tobool6, label %if.end, label %land.lhs.true, !dbg !6101

land.lhs.true:                                    ; preds = %lor.lhs.false
  %bf.cast113 = and i64 %bf.load, 65536, !dbg !6102
  %tobool12 = icmp eq i64 %bf.cast113, 0, !dbg !6102
  br i1 %tobool12, label %cleanup, label %if.end, !dbg !6103

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %1 = trunc i64 %bf.load to i16, !dbg !6104
  switch i16 %1, label %sw.epilog60 [
    i16 120, label %cleanup
    i16 121, label %sw.bb17
  ], !dbg !6105

sw.bb17:                                          ; preds = %if.end
  br label %while.cond, !dbg !6106

while.cond:                                       ; preds = %sw.epilog, %sw.bb17
  %t.pn = phi %union.tree_node* [ %t, %sw.bb17 ], [ %op.0, %sw.epilog ]
  %op.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %t.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6108
  %op.0 = load %union.tree_node*, %union.tree_node** %op.0.in, align 8, !dbg !6108
  call void @llvm.dbg.value(metadata %union.tree_node* %op.0, metadata !6095, metadata !DIExpression()), !dbg !6096
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %op.0) #8, !dbg !6109
  %tobool18 = icmp eq i8 %call, 0, !dbg !6106
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6108
  %bf.load20 = load i64, i64* %2, align 8, !dbg !6108
  br i1 %tobool18, label %while.end, label %while.body, !dbg !6106

while.body:                                       ; preds = %while.cond
  %trunc = trunc i64 %bf.load20 to i16, !dbg !6110
  switch i16 %trunc, label %sw.epilog [
    i16 45, label %sw.bb23
    i16 46, label %sw.bb23
    i16 41, label %sw.bb40
  ], !dbg !6110

sw.bb23:                                          ; preds = %while.body, %while.body
  %operands25 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6112
  %arrayidx26 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands25, i64 1, !dbg !6112
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8, !dbg !6112
  %call27 = tail call fastcc zeroext i8 @tree_invariant_p(%union.tree_node* %3) #8, !dbg !6115
  %tobool28 = icmp eq i8 %call27, 0, !dbg !6115
  br i1 %tobool28, label %cleanup.loopexit, label %lor.lhs.false29, !dbg !6116

lor.lhs.false29:                                  ; preds = %sw.bb23
  %arrayidx32 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands25, i64 2, !dbg !6117
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx32, align 8, !dbg !6117
  %cmp = icmp eq %union.tree_node* %4, null, !dbg !6118
  br i1 %cmp, label %lor.lhs.false33, label %cleanup.loopexit, !dbg !6119

lor.lhs.false33:                                  ; preds = %lor.lhs.false29
  %arrayidx36 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands25, i64 3, !dbg !6120
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx36, align 8, !dbg !6120
  %cmp37 = icmp eq %union.tree_node* %5, null, !dbg !6121
  br i1 %cmp37, label %sw.epilog, label %cleanup.loopexit, !dbg !6122

sw.bb40:                                          ; preds = %while.body
  %operands42 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6123
  %arrayidx43 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands42, i64 2, !dbg !6123
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx43, align 8, !dbg !6123
  %cmp44 = icmp eq %union.tree_node* %6, null, !dbg !6125
  br i1 %cmp44, label %sw.epilog, label %cleanup.loopexit, !dbg !6126

sw.epilog:                                        ; preds = %lor.lhs.false33, %sw.bb40, %while.body
  br label %while.cond, !dbg !6106, !llvm.loop !6127

while.end:                                        ; preds = %while.cond
  %op.0.lcssa = phi %union.tree_node* [ %op.0, %while.cond ], !dbg !6108
  %bf.load20.lcssa = phi i64 [ %bf.load20, %while.cond ], !dbg !6108
  %bf.cast22 = and i64 %bf.load20.lcssa, 65535, !dbg !6108
  %7 = add nsw i64 %bf.cast22, -23, !dbg !6129
  %cmp55 = icmp ult i64 %7, 6, !dbg !6129
  br i1 %cmp55, label %lor.end, label %lor.rhs, !dbg !6130

lor.rhs:                                          ; preds = %while.end
  %call56 = tail call zeroext i8 @decl_address_invariant_p(%union.tree_node* %op.0.lcssa) #8, !dbg !6131
  %tobool57 = icmp ne i8 %call56, 0, !dbg !6130
  %phitmp = zext i1 %tobool57 to i8, !dbg !6130
  br label %lor.end, !dbg !6130

lor.end:                                          ; preds = %lor.rhs, %while.end
  %8 = phi i8 [ 1, %while.end ], [ %phitmp, %lor.rhs ]
  br label %cleanup, !dbg !6132

sw.epilog60:                                      ; preds = %if.end
  br label %cleanup, !dbg !6133

cleanup.loopexit:                                 ; preds = %sw.bb40, %sw.bb23, %lor.lhs.false29, %lor.lhs.false33
  br label %cleanup, !dbg !6134

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %entry, %if.end, %sw.epilog60, %lor.end
  %retval.0 = phi i8 [ 0, %sw.epilog60 ], [ %8, %lor.end ], [ 1, %land.lhs.true ], [ 1, %entry ], [ 1, %if.end ], [ 0, %cleanup.loopexit ], !dbg !6096
  ret i8 %retval.0, !dbg !6134
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @contains_placeholder_p(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !6135 {
entry:
  %iter = alloca %struct.const_call_expr_arg_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6137, metadata !DIExpression()), !dbg !6150
  %tobool = icmp eq %union.tree_node* %exp, null, !dbg !6151
  br i1 %tobool, label %cleanup267, label %if.end, !dbg !6153

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6154
  %bf.load = load i64, i64* %0, align 8, !dbg !6154
  %1 = trunc i64 %bf.load to i32, !dbg !6154
  %bf.cast = and i32 %1, 65535, !dbg !6154
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6138, metadata !DIExpression()), !dbg !6150
  %cmp = icmp eq i32 %bf.cast, 62, !dbg !6155
  br i1 %cmp, label %cleanup267, label %if.end2, !dbg !6157

if.end2:                                          ; preds = %if.end
  %idxprom = zext i32 %bf.cast to i64, !dbg !6158
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !6158
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6158
  switch i32 %2, label %cleanup267 [
    i32 4, label %sw.bb
    i32 0, label %sw.bb19
    i32 6, label %sw.bb61
    i32 7, label %sw.bb61
    i32 5, label %sw.bb61
    i32 10, label %sw.bb61
    i32 9, label %sw.bb243
  ], !dbg !6159

sw.bb:                                            ; preds = %if.end2
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6160
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6160
  %cmp5 = icmp eq %union.tree_node* %3, null, !dbg !6160
  br i1 %cmp5, label %land.end, label %land.lhs.true, !dbg !6160

land.lhs.true:                                    ; preds = %sw.bb
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6160
  %bf.load10 = load i64, i64* %4, align 8, !dbg !6160
  %bf.cast1217 = and i64 %bf.load10, 131072, !dbg !6160
  %tobool13 = icmp eq i64 %bf.cast1217, 0, !dbg !6160
  br i1 %tobool13, label %land.rhs, label %land.end, !dbg !6160

land.rhs:                                         ; preds = %land.lhs.true
  %call = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %3) #8, !dbg !6160
  %tobool17 = icmp ne i8 %call, 0, !dbg !6160
  %phitmp16 = zext i1 %tobool17 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %sw.bb, %land.rhs
  %5 = phi i8 [ 0, %land.lhs.true ], [ 0, %sw.bb ], [ %phitmp16, %land.rhs ]
  br label %cleanup267, !dbg !6161

sw.bb19:                                          ; preds = %if.end2
  %cmp20 = icmp eq i32 %bf.cast, 2, !dbg !6162
  br i1 %cmp20, label %if.then22, label %cleanup267, !dbg !6164

if.then22:                                        ; preds = %sw.bb19
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6165
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !6165
  %cmp23 = icmp eq %union.tree_node* %7, null, !dbg !6165
  br i1 %cmp23, label %lor.rhs, label %land.lhs.true25, !dbg !6165

land.lhs.true25:                                  ; preds = %if.then22
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6165
  %bf.load29 = load i64, i64* %8, align 8, !dbg !6165
  %bf.cast3215 = and i64 %bf.load29, 131072, !dbg !6165
  %tobool33 = icmp eq i64 %bf.cast3215, 0, !dbg !6165
  br i1 %tobool33, label %land.lhs.true34, label %lor.rhs, !dbg !6165

land.lhs.true34:                                  ; preds = %land.lhs.true25
  %call37 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %7) #8, !dbg !6165
  %tobool39 = icmp eq i8 %call37, 0, !dbg !6165
  br i1 %tobool39, label %lor.rhs, label %lor.end, !dbg !6166

lor.rhs:                                          ; preds = %land.lhs.true34, %land.lhs.true25, %if.then22
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6167
  %9 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6167
  %cmp40 = icmp eq %union.tree_node* %9, null, !dbg !6167
  br i1 %cmp40, label %lor.end, label %land.lhs.true42, !dbg !6167

land.lhs.true42:                                  ; preds = %lor.rhs
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6167
  %bf.load46 = load i64, i64* %10, align 8, !dbg !6167
  %bf.cast4914 = and i64 %bf.load46, 131072, !dbg !6167
  %tobool50 = icmp eq i64 %bf.cast4914, 0, !dbg !6167
  br i1 %tobool50, label %land.rhs51, label %lor.end, !dbg !6167

land.rhs51:                                       ; preds = %land.lhs.true42
  %call54 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %9) #8, !dbg !6167
  %tobool56 = icmp ne i8 %call54, 0, !dbg !6167
  %phitmp13 = zext i1 %tobool56 to i8
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true34, %land.lhs.true42, %lor.rhs, %land.rhs51
  %11 = phi i8 [ 1, %land.lhs.true34 ], [ 0, %land.lhs.true42 ], [ 0, %lor.rhs ], [ %phitmp13, %land.rhs51 ]
  br label %cleanup267, !dbg !6168

sw.bb61:                                          ; preds = %if.end2, %if.end2, %if.end2, %if.end2
  %trunc = trunc i64 %bf.load to i16, !dbg !6169
  switch i16 %trunc, label %sw.epilog [
    i16 52, label %sw.bb62
    i16 56, label %sw.bb88
    i16 120, label %cleanup267
  ], !dbg !6169

sw.bb62:                                          ; preds = %sw.bb61
  %operands64 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6170
  %arrayidx65 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands64, i64 1, !dbg !6170
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx65, align 8, !dbg !6170
  %cmp66 = icmp eq %union.tree_node* %12, null, !dbg !6170
  br i1 %cmp66, label %land.end85, label %land.lhs.true68, !dbg !6170

land.lhs.true68:                                  ; preds = %sw.bb62
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6170
  %bf.load73 = load i64, i64* %13, align 8, !dbg !6170
  %bf.cast766 = and i64 %bf.load73, 131072, !dbg !6170
  %tobool77 = icmp eq i64 %bf.cast766, 0, !dbg !6170
  br i1 %tobool77, label %land.rhs78, label %land.end85, !dbg !6170

land.rhs78:                                       ; preds = %land.lhs.true68
  %call82 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %12) #8, !dbg !6170
  %tobool84 = icmp ne i8 %call82, 0, !dbg !6170
  %phitmp5 = zext i1 %tobool84 to i8
  br label %land.end85

land.end85:                                       ; preds = %land.lhs.true68, %sw.bb62, %land.rhs78
  %14 = phi i8 [ 0, %land.lhs.true68 ], [ 0, %sw.bb62 ], [ %phitmp5, %land.rhs78 ]
  br label %cleanup267, !dbg !6172

sw.bb88:                                          ; preds = %sw.bb61
  %operands90 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6173
  %15 = load %union.tree_node*, %union.tree_node** %operands90, align 8, !dbg !6173
  %cmp92 = icmp eq %union.tree_node* %15, null, !dbg !6173
  br i1 %cmp92, label %lor.lhs.false, label %land.lhs.true94, !dbg !6173

land.lhs.true94:                                  ; preds = %sw.bb88
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6173
  %bf.load99 = load i64, i64* %16, align 8, !dbg !6173
  %bf.cast1024 = and i64 %bf.load99, 131072, !dbg !6173
  %tobool103 = icmp eq i64 %bf.cast1024, 0, !dbg !6173
  br i1 %tobool103, label %land.lhs.true104, label %lor.lhs.false, !dbg !6173

land.lhs.true104:                                 ; preds = %land.lhs.true94
  %call108 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %15) #8, !dbg !6173
  %tobool110 = icmp eq i8 %call108, 0, !dbg !6173
  br i1 %tobool110, label %lor.lhs.false, label %lor.end158, !dbg !6174

lor.lhs.false:                                    ; preds = %land.lhs.true104, %land.lhs.true94, %sw.bb88
  %arrayidx113 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands90, i64 1, !dbg !6175
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx113, align 8, !dbg !6175
  %cmp114 = icmp eq %union.tree_node* %17, null, !dbg !6175
  br i1 %cmp114, label %lor.rhs133, label %land.lhs.true116, !dbg !6175

land.lhs.true116:                                 ; preds = %lor.lhs.false
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6175
  %bf.load121 = load i64, i64* %18, align 8, !dbg !6175
  %bf.cast1243 = and i64 %bf.load121, 131072, !dbg !6175
  %tobool125 = icmp eq i64 %bf.cast1243, 0, !dbg !6175
  br i1 %tobool125, label %land.lhs.true126, label %lor.rhs133, !dbg !6175

land.lhs.true126:                                 ; preds = %land.lhs.true116
  %call130 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %17) #8, !dbg !6175
  %tobool132 = icmp eq i8 %call130, 0, !dbg !6175
  br i1 %tobool132, label %lor.rhs133, label %lor.end158, !dbg !6176

lor.rhs133:                                       ; preds = %land.lhs.true126, %land.lhs.true116, %lor.lhs.false
  %arrayidx136 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands90, i64 2, !dbg !6177
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx136, align 8, !dbg !6177
  %cmp137 = icmp eq %union.tree_node* %19, null, !dbg !6177
  br i1 %cmp137, label %lor.end158, label %land.lhs.true139, !dbg !6177

land.lhs.true139:                                 ; preds = %lor.rhs133
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6177
  %bf.load144 = load i64, i64* %20, align 8, !dbg !6177
  %bf.cast1472 = and i64 %bf.load144, 131072, !dbg !6177
  %tobool148 = icmp eq i64 %bf.cast1472, 0, !dbg !6177
  br i1 %tobool148, label %land.rhs149, label %lor.end158, !dbg !6177

land.rhs149:                                      ; preds = %land.lhs.true139
  %call153 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %19) #8, !dbg !6177
  %tobool155 = icmp ne i8 %call153, 0, !dbg !6177
  %phitmp = zext i1 %tobool155 to i8
  br label %lor.end158

lor.end158:                                       ; preds = %land.lhs.true104, %land.lhs.true126, %land.lhs.true139, %lor.rhs133, %land.rhs149
  %21 = phi i8 [ 1, %land.lhs.true126 ], [ 1, %land.lhs.true104 ], [ 0, %land.lhs.true139 ], [ 0, %lor.rhs133 ], [ %phitmp, %land.rhs149 ]
  br label %cleanup267, !dbg !6178

sw.epilog:                                        ; preds = %sw.bb61
  %arrayidx163 = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !6179
  %22 = load i8, i8* %arrayidx163, align 1, !dbg !6179
  switch i8 %22, label %cleanup267 [
    i8 1, label %sw.bb165
    i8 2, label %sw.bb191
  ], !dbg !6180

sw.bb165:                                         ; preds = %sw.epilog
  %operands167 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6181
  %23 = load %union.tree_node*, %union.tree_node** %operands167, align 8, !dbg !6181
  %cmp169 = icmp eq %union.tree_node* %23, null, !dbg !6181
  br i1 %cmp169, label %land.end188, label %land.lhs.true171, !dbg !6181

land.lhs.true171:                                 ; preds = %sw.bb165
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6181
  %bf.load176 = load i64, i64* %24, align 8, !dbg !6181
  %bf.cast17912 = and i64 %bf.load176, 131072, !dbg !6181
  %tobool180 = icmp eq i64 %bf.cast17912, 0, !dbg !6181
  br i1 %tobool180, label %land.rhs181, label %land.end188, !dbg !6181

land.rhs181:                                      ; preds = %land.lhs.true171
  %call185 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %23) #8, !dbg !6181
  %tobool187 = icmp ne i8 %call185, 0, !dbg !6181
  %phitmp11 = zext i1 %tobool187 to i8
  br label %land.end188

land.end188:                                      ; preds = %land.lhs.true171, %sw.bb165, %land.rhs181
  %25 = phi i8 [ 0, %land.lhs.true171 ], [ 0, %sw.bb165 ], [ %phitmp11, %land.rhs181 ]
  br label %cleanup267, !dbg !6183

sw.bb191:                                         ; preds = %sw.epilog
  %operands193 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6184
  %26 = load %union.tree_node*, %union.tree_node** %operands193, align 8, !dbg !6184
  %cmp195 = icmp eq %union.tree_node* %26, null, !dbg !6184
  br i1 %cmp195, label %lor.rhs214, label %land.lhs.true197, !dbg !6184

land.lhs.true197:                                 ; preds = %sw.bb191
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6184
  %bf.load202 = load i64, i64* %27, align 8, !dbg !6184
  %bf.cast20510 = and i64 %bf.load202, 131072, !dbg !6184
  %tobool206 = icmp eq i64 %bf.cast20510, 0, !dbg !6184
  br i1 %tobool206, label %land.lhs.true207, label %lor.rhs214, !dbg !6184

land.lhs.true207:                                 ; preds = %land.lhs.true197
  %call211 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %26) #8, !dbg !6184
  %tobool213 = icmp eq i8 %call211, 0, !dbg !6184
  br i1 %tobool213, label %lor.rhs214, label %lor.end239, !dbg !6185

lor.rhs214:                                       ; preds = %land.lhs.true207, %land.lhs.true197, %sw.bb191
  %arrayidx217 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands193, i64 1, !dbg !6186
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx217, align 8, !dbg !6186
  %cmp218 = icmp eq %union.tree_node* %28, null, !dbg !6186
  br i1 %cmp218, label %lor.end239, label %land.lhs.true220, !dbg !6186

land.lhs.true220:                                 ; preds = %lor.rhs214
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6186
  %bf.load225 = load i64, i64* %29, align 8, !dbg !6186
  %bf.cast2289 = and i64 %bf.load225, 131072, !dbg !6186
  %tobool229 = icmp eq i64 %bf.cast2289, 0, !dbg !6186
  br i1 %tobool229, label %land.rhs230, label %lor.end239, !dbg !6186

land.rhs230:                                      ; preds = %land.lhs.true220
  %call234 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %28) #8, !dbg !6186
  %tobool236 = icmp ne i8 %call234, 0, !dbg !6186
  %phitmp8 = zext i1 %tobool236 to i8
  br label %lor.end239

lor.end239:                                       ; preds = %land.lhs.true207, %land.lhs.true220, %lor.rhs214, %land.rhs230
  %30 = phi i8 [ 1, %land.lhs.true207 ], [ 0, %land.lhs.true220 ], [ 0, %lor.rhs214 ], [ %phitmp8, %land.rhs230 ]
  br label %cleanup267, !dbg !6187

sw.bb243:                                         ; preds = %if.end2
  %cond = icmp eq i32 %bf.cast, 59, !dbg !6188
  br i1 %cond, label %sw.bb244, label %cleanup267, !dbg !6188

sw.bb244:                                         ; preds = %sw.bb243
  %31 = bitcast %struct.const_call_expr_arg_iterator_d* %iter to i8*, !dbg !6189
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #6, !dbg !6189
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6143, metadata !DIExpression(DW_OP_deref)), !dbg !6190
  %call245 = call fastcc %union.tree_node* @first_const_call_expr_arg(%union.tree_node* nonnull %exp, %struct.const_call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !6191
  call void @llvm.dbg.value(metadata %union.tree_node* %call245, metadata !6139, metadata !DIExpression()), !dbg !6190
  br label %for.cond, !dbg !6191

for.cond:                                         ; preds = %for.inc, %sw.bb244
  %arg.0 = phi %union.tree_node* [ %call245, %sw.bb244 ], [ %call262, %for.inc ], !dbg !6193
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !6139, metadata !DIExpression()), !dbg !6190
  %tobool246 = icmp eq %union.tree_node* %arg.0, null, !dbg !6191
  br i1 %tobool246, label %cleanup, label %land.lhs.true249, !dbg !6191

land.lhs.true249:                                 ; preds = %for.cond
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6194
  %bf.load251 = load i64, i64* %32, align 8, !dbg !6194
  %bf.cast2541 = and i64 %bf.load251, 131072, !dbg !6194
  %tobool255 = icmp eq i64 %bf.cast2541, 0, !dbg !6194
  br i1 %tobool255, label %land.lhs.true256, label %for.inc, !dbg !6194

land.lhs.true256:                                 ; preds = %land.lhs.true249
  %call257 = call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %arg.0) #8, !dbg !6194
  %tobool259 = icmp eq i8 %call257, 0, !dbg !6194
  br i1 %tobool259, label %for.inc, label %cleanup, !dbg !6197

for.inc:                                          ; preds = %land.lhs.true256, %land.lhs.true249
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6143, metadata !DIExpression(DW_OP_deref)), !dbg !6190
  %call262 = call fastcc %union.tree_node* @next_const_call_expr_arg(%struct.const_call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !6198
  call void @llvm.dbg.value(metadata %union.tree_node* %call262, metadata !6139, metadata !DIExpression()), !dbg !6190
  br label %for.cond, !dbg !6198, !llvm.loop !6199

cleanup:                                          ; preds = %land.lhs.true256, %for.cond
  %retval.0 = phi i8 [ 1, %land.lhs.true256 ], [ 0, %for.cond ], !dbg !6190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #6, !dbg !6201
  br label %cleanup267

cleanup267:                                       ; preds = %entry, %sw.bb19, %if.end2, %sw.bb243, %sw.epilog, %sw.bb61, %if.end, %cleanup, %lor.end239, %land.end188, %lor.end158, %land.end85, %lor.end, %land.end
  %retval.1 = phi i8 [ %retval.0, %cleanup ], [ %30, %lor.end239 ], [ %25, %land.end188 ], [ %21, %lor.end158 ], [ %14, %land.end85 ], [ %11, %lor.end ], [ %5, %land.end ], [ 0, %entry ], [ 1, %if.end ], [ 0, %sw.bb61 ], [ 0, %sw.epilog ], [ 0, %sw.bb243 ], [ 0, %if.end2 ], [ 0, %sw.bb19 ], !dbg !6150
  ret i8 %retval.1, !dbg !6202
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build1_stat(i32 %code, %union.tree_node* %type, %union.tree_node* %node) local_unnamed_addr #5 !dbg !6203 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6207, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6208, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !6209, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata i32 48, metadata !6210, metadata !DIExpression()), !dbg !6212
  %idxprom = sext i32 %code to i64, !dbg !6213
  %arrayidx = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !6213
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6213
  %cmp = icmp eq i8 %0, 1, !dbg !6213
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6213

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3602, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6213
  br label %cond.end, !dbg !6213

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call i8* @ggc_alloc_stat(i64 48) #7, !dbg !6214
  %1 = bitcast i8* %call to %union.tree_node*, !dbg !6215
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6211, metadata !DIExpression()), !dbg !6212
  %call3 = tail call i8* @memset(i8* %call, i32 0, i64 24) #7, !dbg !6216
  %2 = bitcast i8* %call to i64*, !dbg !6217
  %bf.load = load i64, i64* %2, align 8, !dbg !6217
  %3 = and i32 %code, 65535, !dbg !6217
  %bf.value = zext i32 %3 to i64, !dbg !6217
  %bf.clear = and i64 %bf.load, -65536, !dbg !6217
  %bf.set = or i64 %bf.clear, %bf.value, !dbg !6217
  store i64 %bf.set, i64* %2, align 8, !dbg !6217
  %type4 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6218
  %4 = bitcast i8* %type4 to %union.tree_node**, !dbg !6218
  store %union.tree_node* %type, %union.tree_node** %4, align 8, !dbg !6219
  %locus = getelementptr inbounds i8, i8* %call, i64 24, !dbg !6220
  %5 = bitcast i8* %locus to i32*, !dbg !6220
  store i32 0, i32* %5, align 8, !dbg !6220
  %operands = getelementptr inbounds i8, i8* %call, i64 40, !dbg !6221
  %arrayidx6 = bitcast i8* %operands to %union.tree_node**, !dbg !6221
  store %union.tree_node* %node, %union.tree_node** %arrayidx6, align 8, !dbg !6222
  %call7 = tail call %union.tree_node** @tree_block(%union.tree_node* %1) #8, !dbg !6223
  store %union.tree_node* null, %union.tree_node** %call7, align 8, !dbg !6224
  %tobool = icmp eq %union.tree_node* %node, null, !dbg !6225
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6227

land.lhs.true:                                    ; preds = %cond.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6228
  %bf.load9 = load i64, i64* %6, align 8, !dbg !6228
  %bf.cast = and i64 %bf.load9, 65535, !dbg !6228
  %7 = add nsw i64 %bf.cast, -5, !dbg !6228
  %cmp13 = icmp ult i64 %7, 18, !dbg !6228
  br i1 %cmp13, label %if.end, label %if.then, !dbg !6229

if.then:                                          ; preds = %land.lhs.true
  %bf.cast18 = and i64 %bf.load9, 65536, !dbg !6230
  %bf.load20 = load i64, i64* %2, align 8, !dbg !6232
  %bf.clear22 = and i64 %bf.load20, -65537, !dbg !6232
  %bf.set23 = or i64 %bf.clear22, %bf.cast18, !dbg !6232
  store i64 %bf.set23, i64* %2, align 8, !dbg !6232
  %bf.load26 = load i64, i64* %6, align 8, !dbg !6233
  %bf.cast29 = and i64 %bf.load26, 1048576, !dbg !6233
  %bf.clear34 = and i64 %bf.set23, -1048577, !dbg !6234
  %bf.set35 = or i64 %bf.clear34, %bf.cast29, !dbg !6234
  store i64 %bf.set35, i64* %2, align 8, !dbg !6234
  br label %if.end, !dbg !6235

if.end:                                           ; preds = %cond.end, %if.then, %land.lhs.true
  %arrayidx38 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !6236
  %8 = load i32, i32* %arrayidx38, align 4, !dbg !6236
  %cmp39 = icmp eq i32 %8, 8, !dbg !6238
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !6239

if.then41:                                        ; preds = %if.end
  %bf.load43 = load i64, i64* %2, align 8, !dbg !6240
  %bf.set45 = or i64 %bf.load43, 65536, !dbg !6240
  store i64 %bf.set45, i64* %2, align 8, !dbg !6240
  br label %if.end110, !dbg !6241

if.else:                                          ; preds = %if.end
  switch i32 %code, label %sw.default [
    i32 129, label %sw.bb
    i32 49, label %sw.bb53
    i32 48, label %sw.bb53
    i32 47, label %sw.bb53
    i32 121, label %sw.bb57
  ], !dbg !6242

sw.bb:                                            ; preds = %if.else
  %bf.load47 = load i64, i64* %2, align 8, !dbg !6243
  %bf.set49 = and i64 %bf.load47, -1114113, !dbg !6245
  %bf.clear52 = or i64 %bf.set49, 65536, !dbg !6245
  store i64 %bf.clear52, i64* %2, align 8, !dbg !6245
  br label %if.end110, !dbg !6246

sw.bb53:                                          ; preds = %if.else, %if.else, %if.else
  %bf.load55 = load i64, i64* %2, align 8, !dbg !6247
  %bf.clear56 = and i64 %bf.load55, -1048577, !dbg !6247
  store i64 %bf.clear56, i64* %2, align 8, !dbg !6247
  br label %if.end110, !dbg !6248

sw.bb57:                                          ; preds = %if.else
  br i1 %tobool, label %if.end110, label %if.then59, !dbg !6249

if.then59:                                        ; preds = %sw.bb57
  tail call void @recompute_tree_invariant_for_addr_expr(%union.tree_node* %1) #8, !dbg !6250
  br label %if.end110, !dbg !6250

sw.default:                                       ; preds = %if.else
  %cmp63 = icmp eq i32 %8, 6, !dbg !6252
  %cmp65 = icmp eq i32 %code, 118, !dbg !6254
  %or.cond = or i1 %cmp63, %cmp65, !dbg !6255
  %tobool68 = icmp ne %union.tree_node* %node, null, !dbg !6256
  %or.cond1 = and i1 %or.cond, %tobool68, !dbg !6255
  br i1 %or.cond1, label %land.lhs.true69, label %if.end90, !dbg !6255

land.lhs.true69:                                  ; preds = %sw.default
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6257
  %bf.load71 = load i64, i64* %9, align 8, !dbg !6257
  %bf.cast73 = and i64 %bf.load71, 65535, !dbg !6257
  %10 = add nsw i64 %bf.cast73, -5, !dbg !6257
  %cmp76 = icmp ult i64 %10, 18, !dbg !6257
  br i1 %cmp76, label %if.end90, label %land.lhs.true78, !dbg !6258

land.lhs.true78:                                  ; preds = %land.lhs.true69
  %bf.cast834 = and i64 %bf.load71, 131072, !dbg !6259
  %tobool84 = icmp eq i64 %bf.cast834, 0, !dbg !6259
  br i1 %tobool84, label %if.end90, label %if.then85, !dbg !6260

if.then85:                                        ; preds = %land.lhs.true78
  %bf.load87 = load i64, i64* %2, align 8, !dbg !6261
  %bf.set89 = or i64 %bf.load87, 131072, !dbg !6261
  store i64 %bf.set89, i64* %2, align 8, !dbg !6261
  br label %if.end90, !dbg !6262

if.end90:                                         ; preds = %land.lhs.true78, %sw.default, %if.then85, %land.lhs.true69
  %cmp93 = icmp eq i32 %8, 4, !dbg !6263
  %or.cond2 = and i1 %cmp93, %tobool68, !dbg !6265
  br i1 %or.cond2, label %land.lhs.true97, label %if.end110, !dbg !6265

land.lhs.true97:                                  ; preds = %if.end90
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6266
  %bf.load99 = load i64, i64* %11, align 8, !dbg !6266
  %bf.cast1023 = and i64 %bf.load99, 524288, !dbg !6266
  %tobool103 = icmp eq i64 %bf.cast1023, 0, !dbg !6266
  br i1 %tobool103, label %if.end110, label %if.then104, !dbg !6267

if.then104:                                       ; preds = %land.lhs.true97
  %bf.load106 = load i64, i64* %2, align 8, !dbg !6268
  %bf.set108 = or i64 %bf.load106, 524288, !dbg !6268
  store i64 %bf.set108, i64* %2, align 8, !dbg !6268
  br label %if.end110, !dbg !6269

if.end110:                                        ; preds = %land.lhs.true97, %sw.bb57, %sw.bb, %sw.bb53, %if.then59, %if.then104, %if.end90, %if.then41
  ret %union.tree_node* %1, !dbg !6270
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @tree_invariant_p(%union.tree_node* %t) unnamed_addr #5 !dbg !6271 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6273, metadata !DIExpression()), !dbg !6275
  %call = tail call %union.tree_node* @skip_simple_arithmetic(%union.tree_node* %t) #8, !dbg !6276
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6274, metadata !DIExpression()), !dbg !6275
  %call1 = tail call fastcc zeroext i8 @tree_invariant_p_1(%union.tree_node* %call) #8, !dbg !6277
  ret i8 %call1, !dbg !6278
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_node_structure(%union.tree_node* %t) local_unnamed_addr #5 !dbg !6279 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6283, metadata !DIExpression()), !dbg !6285
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6286
  %bf.load = load i64, i64* %0, align 8, !dbg !6286
  %1 = trunc i64 %bf.load to i32, !dbg !6286
  %bf.cast = and i32 %1, 65535, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6284, metadata !DIExpression()), !dbg !6285
  %call = tail call fastcc i32 @tree_node_structure_for_code(i32 %bf.cast) #8, !dbg !6287
  ret i32 %call, !dbg !6288
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_node_structure_for_code(i32 %code) unnamed_addr #0 !dbg !6289 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6293, metadata !DIExpression()), !dbg !6294
  %idxprom = sext i32 %code to i64, !dbg !6295
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !6295
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6295
  switch i32 %0, label %sw.epilog [
    i32 3, label %sw.bb
    i32 2, label %return
    i32 4, label %sw.bb11
    i32 5, label %sw.bb11
    i32 6, label %sw.bb11
    i32 7, label %sw.bb11
    i32 10, label %sw.bb11
    i32 8, label %sw.bb11
    i32 9, label %sw.bb11
  ], !dbg !6296

sw.bb:                                            ; preds = %entry
  switch i32 %code, label %sw.default [
    i32 31, label %return
    i32 34, label %sw.bb2
    i32 32, label %sw.bb3
    i32 30, label %sw.bb4
    i32 36, label %sw.bb5
    i32 37, label %sw.bb6
    i32 33, label %sw.bb7
    i32 35, label %sw.bb8
    i32 29, label %sw.bb9
  ], !dbg !6297

sw.bb2:                                           ; preds = %sw.bb
  br label %return, !dbg !6300

sw.bb3:                                           ; preds = %sw.bb
  br label %return, !dbg !6302

sw.bb4:                                           ; preds = %sw.bb
  br label %return, !dbg !6303

sw.bb5:                                           ; preds = %sw.bb
  br label %return, !dbg !6304

sw.bb6:                                           ; preds = %sw.bb
  br label %return, !dbg !6305

sw.bb7:                                           ; preds = %sw.bb
  br label %return, !dbg !6306

sw.bb8:                                           ; preds = %sw.bb
  br label %return, !dbg !6307

sw.bb9:                                           ; preds = %sw.bb
  br label %return, !dbg !6308

sw.default:                                       ; preds = %sw.bb
  br label %return, !dbg !6309

sw.bb11:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %return, !dbg !6310

sw.epilog:                                        ; preds = %entry
  switch i32 %code, label %sw.default32 [
    i32 23, label %return
    i32 24, label %sw.bb14
    i32 25, label %sw.bb15
    i32 26, label %sw.bb16
    i32 27, label %sw.bb17
    i32 28, label %sw.bb18
    i32 0, label %sw.bb19
    i32 1, label %sw.bb20
    i32 2, label %sw.bb21
    i32 3, label %sw.bb22
    i32 141, label %sw.bb23
    i32 62, label %sw.bb24
    i32 147, label %sw.bb25
    i32 4, label %sw.bb26
    i32 51, label %sw.bb27
    i32 149, label %sw.bb28
    i32 163, label %sw.bb29
    i32 186, label %sw.bb30
    i32 187, label %sw.bb31
  ], !dbg !6311

sw.bb14:                                          ; preds = %sw.epilog
  br label %return, !dbg !6312

sw.bb15:                                          ; preds = %sw.epilog
  br label %return, !dbg !6314

sw.bb16:                                          ; preds = %sw.epilog
  br label %return, !dbg !6315

sw.bb17:                                          ; preds = %sw.epilog
  br label %return, !dbg !6316

sw.bb18:                                          ; preds = %sw.epilog
  br label %return, !dbg !6317

sw.bb19:                                          ; preds = %sw.epilog
  br label %return, !dbg !6318

sw.bb20:                                          ; preds = %sw.epilog
  br label %return, !dbg !6319

sw.bb21:                                          ; preds = %sw.epilog
  br label %return, !dbg !6320

sw.bb22:                                          ; preds = %sw.epilog
  br label %return, !dbg !6321

sw.bb23:                                          ; preds = %sw.epilog
  br label %return, !dbg !6322

sw.bb24:                                          ; preds = %sw.epilog
  br label %return, !dbg !6323

sw.bb25:                                          ; preds = %sw.epilog
  br label %return, !dbg !6324

sw.bb26:                                          ; preds = %sw.epilog
  br label %return, !dbg !6325

sw.bb27:                                          ; preds = %sw.epilog
  br label %return, !dbg !6326

sw.bb28:                                          ; preds = %sw.epilog
  br label %return, !dbg !6327

sw.bb29:                                          ; preds = %sw.epilog
  br label %return, !dbg !6328

sw.bb30:                                          ; preds = %sw.epilog
  br label %return, !dbg !6329

sw.bb31:                                          ; preds = %sw.epilog
  br label %return, !dbg !6330

sw.default32:                                     ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 341, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6331
  br label %return, !dbg !6332

return:                                           ; preds = %sw.epilog, %entry, %sw.bb, %sw.default32, %sw.bb31, %sw.bb30, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb11, %sw.default, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2
  %retval.0 = phi i32 [ 0, %sw.default32 ], [ 33, %sw.bb31 ], [ 32, %sw.bb30 ], [ 31, %sw.bb29 ], [ 28, %sw.bb28 ], [ 30, %sw.bb27 ], [ 27, %sw.bb26 ], [ 29, %sw.bb25 ], [ 1, %sw.bb24 ], [ 26, %sw.bb23 ], [ 24, %sw.bb22 ], [ 23, %sw.bb21 ], [ 8, %sw.bb20 ], [ 1, %sw.bb19 ], [ 6, %sw.bb18 ], [ 5, %sw.bb17 ], [ 7, %sw.bb16 ], [ 4, %sw.bb15 ], [ 3, %sw.bb14 ], [ 25, %sw.bb11 ], [ 12, %sw.default ], [ 21, %sw.bb9 ], [ 20, %sw.bb8 ], [ 19, %sw.bb7 ], [ 11, %sw.bb6 ], [ 18, %sw.bb5 ], [ 17, %sw.bb4 ], [ 15, %sw.bb3 ], [ 16, %sw.bb2 ], [ 14, %sw.bb ], [ 22, %entry ], [ 2, %sw.epilog ], !dbg !6294
  ret i32 %retval.0, !dbg !6333
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @first_const_call_expr_arg(%union.tree_node* %exp, %struct.const_call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !6334 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6339, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6340, metadata !DIExpression()), !dbg !6341
  tail call fastcc void @init_const_call_expr_arg_iterator(%union.tree_node* %exp, %struct.const_call_expr_arg_iterator_d* %iter) #8, !dbg !6342
  %call = tail call fastcc %union.tree_node* @next_const_call_expr_arg(%struct.const_call_expr_arg_iterator_d* %iter) #8, !dbg !6343
  ret %union.tree_node* %call, !dbg !6344
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_const_call_expr_arg(%struct.const_call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !6345 {
entry:
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6349, metadata !DIExpression()), !dbg !6351
  %i = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !6352
  %0 = load i32, i32* %i, align 4, !dbg !6352
  %n = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !6354
  %1 = load i32, i32* %n, align 8, !dbg !6354
  %cmp = icmp slt i32 %0, %1, !dbg !6355
  br i1 %cmp, label %if.end, label %cleanup, !dbg !6356

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.const_call_expr_arg_iterator_d* %iter to %struct.tree_exp**, !dbg !6357
  %3 = load %struct.tree_exp*, %struct.tree_exp** %2, align 8, !dbg !6357
  %add = add nsw i32 %0, 3, !dbg !6357
  %idxprom = sext i32 %add to i64, !dbg !6357
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %3, i64 0, i32 3, i64 %idxprom, !dbg !6357
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6357
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6350, metadata !DIExpression()), !dbg !6351
  %inc = add nsw i32 %0, 1, !dbg !6358
  store i32 %inc, i32* %i, align 4, !dbg !6358
  br label %cleanup, !dbg !6359

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %4, %if.end ], [ null, %entry ], !dbg !6351
  ret %union.tree_node* %retval.0, !dbg !6360
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @type_contains_placeholder_p(%union.tree_node* %type) local_unnamed_addr #5 !dbg !6361 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6363, metadata !DIExpression()), !dbg !6365
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6366
  %contains_placeholder_bits = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i64 0, i32 6, !dbg !6366
  %bf.load = load i32, i32* %contains_placeholder_bits, align 4, !dbg !6366
  %bf.clear = and i32 %bf.load, 49152, !dbg !6366
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !6368
  br i1 %cmp, label %if.end, label %if.then, !dbg !6369

if.then:                                          ; preds = %entry
  %bf.lshr5 = lshr i32 %bf.load, 14, !dbg !6370
  %0 = trunc i32 %bf.lshr5 to i8, !dbg !6370
  %1 = and i8 %0, 3, !dbg !6370
  %conv = add nsw i8 %1, -1, !dbg !6370
  br label %cleanup, !dbg !6371

if.end:                                           ; preds = %entry
  %bf.clear10 = and i32 %bf.load, -49153, !dbg !6372
  %bf.set = or i32 %bf.clear10, 16384, !dbg !6372
  store i32 %bf.set, i32* %contains_placeholder_bits, align 4, !dbg !6372
  %call = tail call fastcc zeroext i8 @type_contains_placeholder_1(%union.tree_node* %type) #8, !dbg !6373
  call void @llvm.dbg.value(metadata i8 %call, metadata !6364, metadata !DIExpression()), !dbg !6365
  %bf.load14 = load i32, i32* %contains_placeholder_bits, align 4, !dbg !6374
  %2 = add i8 %call, 1, !dbg !6374
  %3 = and i8 %2, 3, !dbg !6374
  %bf.value = zext i8 %3 to i32, !dbg !6374
  %bf.shl = shl nuw nsw i32 %bf.value, 14, !dbg !6374
  %bf.clear15 = and i32 %bf.load14, -49153, !dbg !6374
  %bf.set16 = or i32 %bf.clear15, %bf.shl, !dbg !6374
  store i32 %bf.set16, i32* %contains_placeholder_bits, align 4, !dbg !6374
  br label %cleanup, !dbg !6375

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ %call, %if.end ], !dbg !6365
  ret i8 %retval.0, !dbg !6376
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @type_contains_placeholder_1(%union.tree_node* %type) unnamed_addr #5 !dbg !6377 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6379, metadata !DIExpression()), !dbg !6383
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6384
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6384
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !6384
  br i1 %cmp, label %lor.lhs.false, label %land.lhs.true, !dbg !6384

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6384
  %bf.load = load i64, i64* %2, align 8, !dbg !6384
  %bf.cast8 = and i64 %bf.load, 131072, !dbg !6384
  %tobool = icmp eq i64 %bf.cast8, 0, !dbg !6384
  br i1 %tobool, label %land.lhs.true4, label %lor.lhs.false, !dbg !6384

land.lhs.true4:                                   ; preds = %land.lhs.true
  %call = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %1) #8, !dbg !6384
  %tobool7 = icmp eq i8 %call, 0, !dbg !6384
  br i1 %tobool7, label %lor.lhs.false, label %return, !dbg !6386

lor.lhs.false:                                    ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6387
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !6387
  %cmp9 = icmp eq %union.tree_node* %4, null, !dbg !6387
  br i1 %cmp9, label %lor.lhs.false26, label %land.lhs.true11, !dbg !6387

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6387
  %bf.load15 = load i64, i64* %5, align 8, !dbg !6387
  %bf.cast187 = and i64 %bf.load15, 131072, !dbg !6387
  %tobool19 = icmp eq i64 %bf.cast187, 0, !dbg !6387
  br i1 %tobool19, label %land.lhs.true20, label %lor.lhs.false26, !dbg !6387

land.lhs.true20:                                  ; preds = %land.lhs.true11
  %call23 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %4) #8, !dbg !6387
  %tobool25 = icmp eq i8 %call23, 0, !dbg !6387
  br i1 %tobool25, label %lor.lhs.false26, label %return, !dbg !6388

lor.lhs.false26:                                  ; preds = %land.lhs.true20, %land.lhs.true11, %lor.lhs.false
  %type27 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6389
  %6 = load %union.tree_node*, %union.tree_node** %type27, align 8, !dbg !6389
  %cmp28 = icmp eq %union.tree_node* %6, null, !dbg !6390
  br i1 %cmp28, label %if.end, label %land.lhs.true30, !dbg !6391

land.lhs.true30:                                  ; preds = %lor.lhs.false26
  %call33 = tail call zeroext i8 @type_contains_placeholder_p(%union.tree_node* nonnull %6) #8, !dbg !6392
  %tobool35 = icmp eq i8 %call33, 0, !dbg !6392
  br i1 %tobool35, label %if.end, label %return, !dbg !6393

if.end:                                           ; preds = %land.lhs.true30, %lor.lhs.false26
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6394
  %bf.load37 = load i64, i64* %7, align 8, !dbg !6394
  %8 = trunc i64 %bf.load37 to i16, !dbg !6394
  switch i16 %8, label %sw.default [
    i16 19, label %return
    i16 13, label %return
    i16 6, label %return
    i16 7, label %return
    i16 10, label %return
    i16 5, label %return
    i16 12, label %return
    i16 21, label %return
    i16 20, label %return
    i16 14, label %return
    i16 8, label %sw.bb40
    i16 9, label %sw.bb40
    i16 11, label %sw.bb40
    i16 15, label %sw.bb77
    i16 16, label %sw.bb80
    i16 17, label %sw.bb80
    i16 18, label %sw.bb80
  ], !dbg !6395

sw.bb40:                                          ; preds = %if.end, %if.end, %if.end
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6396
  %9 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !6396
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !6396
  %cmp42 = icmp eq %union.tree_node* %10, null, !dbg !6396
  br i1 %cmp42, label %lor.rhs, label %land.lhs.true44, !dbg !6396

land.lhs.true44:                                  ; preds = %sw.bb40
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6396
  %bf.load48 = load i64, i64* %11, align 8, !dbg !6396
  %bf.cast516 = and i64 %bf.load48, 131072, !dbg !6396
  %tobool52 = icmp eq i64 %bf.cast516, 0, !dbg !6396
  br i1 %tobool52, label %land.lhs.true53, label %lor.rhs, !dbg !6396

land.lhs.true53:                                  ; preds = %land.lhs.true44
  %call56 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %10) #8, !dbg !6396
  %tobool58 = icmp eq i8 %call56, 0, !dbg !6396
  br i1 %tobool58, label %lor.rhs, label %lor.end, !dbg !6397

lor.rhs:                                          ; preds = %land.lhs.true53, %land.lhs.true44, %sw.bb40
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6398
  %12 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !6398
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !6398
  %cmp60 = icmp eq %union.tree_node* %13, null, !dbg !6398
  br i1 %cmp60, label %lor.end, label %land.lhs.true62, !dbg !6398

land.lhs.true62:                                  ; preds = %lor.rhs
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6398
  %bf.load66 = load i64, i64* %14, align 8, !dbg !6398
  %bf.cast695 = and i64 %bf.load66, 131072, !dbg !6398
  %tobool70 = icmp eq i64 %bf.cast695, 0, !dbg !6398
  br i1 %tobool70, label %land.rhs, label %lor.end, !dbg !6398

land.rhs:                                         ; preds = %land.lhs.true62
  %call73 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %13) #8, !dbg !6398
  %tobool75 = icmp ne i8 %call73, 0, !dbg !6398
  %phitmp = zext i1 %tobool75 to i8
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true53, %land.lhs.true62, %lor.rhs, %land.rhs
  %15 = phi i8 [ 1, %land.lhs.true53 ], [ 0, %land.lhs.true62 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !6399

sw.bb77:                                          ; preds = %if.end
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6400
  %16 = bitcast i32* %values to %union.tree_node**, !dbg !6400
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !6400
  %call79 = tail call zeroext i8 @type_contains_placeholder_p(%union.tree_node* %17) #8, !dbg !6401
  br label %return, !dbg !6402

sw.bb80:                                          ; preds = %if.end, %if.end, %if.end
  %values82 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6403
  %18 = bitcast i32* %values82 to %union.tree_node**, !dbg !6403
  br label %for.cond, !dbg !6405

for.cond:                                         ; preds = %for.inc, %sw.bb80
  %field.0.in = phi %union.tree_node** [ %18, %sw.bb80 ], [ %chain, %for.inc ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !6406
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !6380, metadata !DIExpression()), !dbg !6407
  %tobool83 = icmp eq %union.tree_node* %field.0, null, !dbg !6408
  br i1 %tobool83, label %return.loopexit, label %for.body, !dbg !6408

for.body:                                         ; preds = %for.cond
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6409
  %bf.load85 = load i64, i64* %19, align 8, !dbg !6409
  %bf.cast871 = and i64 %bf.load85, 65535, !dbg !6412
  %cmp88 = icmp eq i64 %bf.cast871, 31, !dbg !6412
  br i1 %cmp88, label %land.lhs.true90, label %for.inc, !dbg !6413

land.lhs.true90:                                  ; preds = %for.body
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6414
  %20 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !6414
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !6414
  %cmp91 = icmp eq %union.tree_node* %21, null, !dbg !6414
  br i1 %cmp91, label %lor.lhs.false108, label %land.lhs.true93, !dbg !6414

land.lhs.true93:                                  ; preds = %land.lhs.true90
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6414
  %bf.load97 = load i64, i64* %22, align 8, !dbg !6414
  %bf.cast1004 = and i64 %bf.load97, 131072, !dbg !6414
  %tobool101 = icmp eq i64 %bf.cast1004, 0, !dbg !6414
  br i1 %tobool101, label %land.lhs.true102, label %lor.lhs.false108, !dbg !6414

land.lhs.true102:                                 ; preds = %land.lhs.true93
  %call105 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %21) #8, !dbg !6414
  %tobool107 = icmp eq i8 %call105, 0, !dbg !6414
  br i1 %tobool107, label %lor.lhs.false108, label %return.loopexit, !dbg !6415

lor.lhs.false108:                                 ; preds = %land.lhs.true102, %land.lhs.true93, %land.lhs.true90
  %bf.load110 = load i64, i64* %7, align 8, !dbg !6416
  %bf.cast1122 = and i64 %bf.load110, 65535, !dbg !6417
  %cmp113 = icmp eq i64 %bf.cast1122, 18, !dbg !6417
  br i1 %cmp113, label %land.lhs.true115, label %lor.lhs.false134, !dbg !6418

land.lhs.true115:                                 ; preds = %lor.lhs.false108
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6419
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !6419
  %cmp117 = icmp eq %union.tree_node* %24, null, !dbg !6419
  br i1 %cmp117, label %lor.lhs.false134, label %land.lhs.true119, !dbg !6419

land.lhs.true119:                                 ; preds = %land.lhs.true115
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6419
  %bf.load123 = load i64, i64* %25, align 8, !dbg !6419
  %bf.cast1263 = and i64 %bf.load123, 131072, !dbg !6419
  %tobool127 = icmp eq i64 %bf.cast1263, 0, !dbg !6419
  br i1 %tobool127, label %land.lhs.true128, label %lor.lhs.false134, !dbg !6419

land.lhs.true128:                                 ; preds = %land.lhs.true119
  %call131 = tail call zeroext i8 @contains_placeholder_p(%union.tree_node* nonnull %24) #8, !dbg !6419
  %tobool133 = icmp eq i8 %call131, 0, !dbg !6419
  br i1 %tobool133, label %lor.lhs.false134, label %return.loopexit, !dbg !6420

lor.lhs.false134:                                 ; preds = %land.lhs.true128, %land.lhs.true119, %land.lhs.true115, %lor.lhs.false108
  %type136 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6421
  %26 = load %union.tree_node*, %union.tree_node** %type136, align 8, !dbg !6421
  %call137 = tail call zeroext i8 @type_contains_placeholder_p(%union.tree_node* %26) #8, !dbg !6422
  %tobool139 = icmp eq i8 %call137, 0, !dbg !6422
  br i1 %tobool139, label %for.inc, label %return.loopexit, !dbg !6423

for.inc:                                          ; preds = %lor.lhs.false134, %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6424
  br label %for.cond, !dbg !6425, !llvm.loop !6426

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 2848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6428
  br label %return, !dbg !6429

return.loopexit:                                  ; preds = %for.cond, %lor.lhs.false134, %land.lhs.true128, %land.lhs.true102
  %retval.1.ph = phi i8 [ 0, %for.cond ], [ 1, %land.lhs.true102 ], [ 1, %land.lhs.true128 ], [ 1, %lor.lhs.false134 ]
  br label %return, !dbg !6430

return:                                           ; preds = %return.loopexit, %land.lhs.true4, %land.lhs.true20, %land.lhs.true30, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.default, %sw.bb77, %lor.end
  %retval.1 = phi i8 [ 0, %sw.default ], [ %call79, %sw.bb77 ], [ %15, %lor.end ], [ 1, %land.lhs.true30 ], [ 1, %land.lhs.true20 ], [ 1, %land.lhs.true4 ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ %retval.1.ph, %return.loopexit ], !dbg !6383
  ret i8 %retval.1, !dbg !6430
}

; Function Attrs: nounwind uwtable
define dso_local void @find_placeholder_in_expr(%union.tree_node* %exp, %struct.VEC_tree_heap** %refs) local_unnamed_addr #5 !dbg !6431 {
entry:
  br label %tailrecurse, !dbg !6441

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %exp.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr, metadata !6436, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %refs, metadata !6437, metadata !DIExpression()), !dbg !6446
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6447
  %bf.load = load i64, i64* %0, align 8, !dbg !6447
  %trunc = trunc i64 %bf.load to i16, !dbg !6448
  switch i16 %trunc, label %if.else70 [
    i16 2, label %do.body
    i16 41, label %if.then29
  ], !dbg !6448

do.body:                                          ; preds = %tailrecurse
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6449
  %1 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6449
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !6449
  br i1 %tobool, label %do.body11, label %land.lhs.true, !dbg !6449

land.lhs.true:                                    ; preds = %do.body
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6449
  %bf.load4 = load i64, i64* %2, align 8, !dbg !6449
  %bf.cast64 = and i64 %bf.load4, 131072, !dbg !6449
  %tobool7 = icmp eq i64 %bf.cast64, 0, !dbg !6449
  br i1 %tobool7, label %if.then8, label %do.body11, !dbg !6452

if.then8:                                         ; preds = %land.lhs.true
  tail call void @find_placeholder_in_expr(%union.tree_node* nonnull %1, %struct.VEC_tree_heap** %refs) #8, !dbg !6449
  br label %do.body11, !dbg !6449

do.body11:                                        ; preds = %land.lhs.true, %do.body, %if.then8
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6441
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !6441
  %tobool12 = icmp eq %union.tree_node* %4, null, !dbg !6441
  br i1 %tobool12, label %if.end162.loopexit10, label %land.lhs.true13, !dbg !6441

land.lhs.true13:                                  ; preds = %do.body11
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6441
  %bf.load17 = load i64, i64* %5, align 8, !dbg !6441
  %bf.cast203 = and i64 %bf.load17, 131072, !dbg !6441
  %tobool21 = icmp eq i64 %bf.cast203, 0, !dbg !6441
  br i1 %tobool21, label %if.then22, label %if.end162.loopexit10, !dbg !6453

if.then22:                                        ; preds = %land.lhs.true13
  br label %tailrecurse.backedge, !dbg !6441

tailrecurse.backedge:                             ; preds = %if.then22, %if.then62
  %exp.tr.be = phi %union.tree_node* [ %4, %if.then22 ], [ %8, %if.then62 ], !dbg !6454
  br label %tailrecurse, !dbg !6446

if.then29:                                        ; preds = %tailrecurse
  br label %for.cond, !dbg !6455

for.cond:                                         ; preds = %for.inc, %if.then29
  %exp.pn = phi %union.tree_node* [ %exp.tr, %if.then29 ], [ %inner.0, %for.inc ]
  %inner.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6459
  %inner.0 = load %union.tree_node*, %union.tree_node** %inner.0.in, align 8, !dbg !6459
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0, metadata !6439, metadata !DIExpression()), !dbg !6446
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6460
  %bf.load32 = load i64, i64* %6, align 8, !dbg !6460
  %bf.cast34 = and i64 %bf.load32, 65535, !dbg !6460
  %arrayidx35 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast34, !dbg !6460
  %7 = load i32, i32* %arrayidx35, align 4, !dbg !6460
  %cmp36 = icmp eq i32 %7, 4, !dbg !6460
  br i1 %cmp36, label %for.inc, label %for.end, !dbg !6462

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !6463, !llvm.loop !6464

for.end:                                          ; preds = %for.cond
  %bf.cast34.lcssa = phi i64 [ %bf.cast34, %for.cond ], !dbg !6460
  %cmp44 = icmp eq i64 %bf.cast34.lcssa, 62, !dbg !6466
  br i1 %cmp44, label %if.then45, label %do.body47, !dbg !6468

if.then45:                                        ; preds = %for.end
  %exp.tr.lcssa25 = phi %union.tree_node* [ %exp.tr, %for.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !6436, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !6436, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !6436, metadata !DIExpression()), !dbg !6446
  tail call fastcc void @push_without_duplicates(%union.tree_node* %exp.tr.lcssa25, %struct.VEC_tree_heap** %refs) #8, !dbg !6469
  br label %if.end162, !dbg !6469

do.body47:                                        ; preds = %for.end
  %operands49 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6470
  %8 = load %union.tree_node*, %union.tree_node** %operands49, align 8, !dbg !6470
  %tobool51 = icmp eq %union.tree_node* %8, null, !dbg !6470
  br i1 %tobool51, label %if.end162.loopexit10, label %land.lhs.true52, !dbg !6470

land.lhs.true52:                                  ; preds = %do.body47
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6470
  %bf.load57 = load i64, i64* %9, align 8, !dbg !6470
  %bf.cast602 = and i64 %bf.load57, 131072, !dbg !6470
  %tobool61 = icmp eq i64 %bf.cast602, 0, !dbg !6470
  br i1 %tobool61, label %if.then62, label %if.end162.loopexit10, !dbg !6473

if.then62:                                        ; preds = %land.lhs.true52
  br label %tailrecurse.backedge, !dbg !6470

if.else70:                                        ; preds = %tailrecurse
  %exp.tr.lcssa = phi %union.tree_node* [ %exp.tr, %tailrecurse ]
  %bf.load.lcssa = phi i64 [ %bf.load, %tailrecurse ], !dbg !6447
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa, metadata !6436, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa, metadata !6436, metadata !DIExpression()), !dbg !6446
  %10 = trunc i64 %bf.load.lcssa to i32, !dbg !6447
  %bf.cast.le = and i32 %10, 65535, !dbg !6447
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa, metadata !6436, metadata !DIExpression()), !dbg !6446
  %idxprom71 = zext i32 %bf.cast.le to i64, !dbg !6474
  %arrayidx72 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom71, !dbg !6474
  %11 = load i32, i32* %arrayidx72, align 4, !dbg !6474
  switch i32 %11, label %sw.default [
    i32 1, label %if.end162
    i32 3, label %sw.bb
    i32 10, label %sw.bb81
    i32 0, label %sw.bb94
    i32 6, label %sw.bb94
    i32 7, label %sw.bb94
    i32 5, label %sw.bb94
    i32 4, label %sw.bb94
    i32 9, label %for.cond129.preheader
  ], !dbg !6475

for.cond129.preheader:                            ; preds = %if.else70
  %operands135 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6476
  br label %for.cond129, !dbg !6482

sw.bb:                                            ; preds = %if.else70
  %bf.cast778 = and i64 %bf.load.lcssa, 67108864, !dbg !6483
  %tobool78 = icmp eq i64 %bf.cast778, 0, !dbg !6483
  br i1 %tobool78, label %if.then79, label %if.end162, !dbg !6485

if.then79:                                        ; preds = %sw.bb
  tail call fastcc void @push_without_duplicates(%union.tree_node* %exp.tr.lcssa, %struct.VEC_tree_heap** %refs) #8, !dbg !6486
  br label %if.end162, !dbg !6486

sw.bb81:                                          ; preds = %if.else70
  %cmp82 = icmp eq i32 %bf.cast.le, 121, !dbg !6487
  br i1 %cmp82, label %land.lhs.true83, label %sw.bb94, !dbg !6489

land.lhs.true83:                                  ; preds = %sw.bb81
  %operands85 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6490
  %12 = bitcast %union.tree_node** %operands85 to i64**, !dbg !6490
  %13 = load i64*, i64** %12, align 8, !dbg !6490
  %bf.load88 = load i64, i64* %13, align 8, !dbg !6490
  %bf.cast907 = and i64 %bf.load88, 65535, !dbg !6491
  %cmp91 = icmp eq i64 %bf.cast907, 62, !dbg !6491
  br i1 %cmp91, label %if.then92, label %sw.bb94, !dbg !6492

if.then92:                                        ; preds = %land.lhs.true83
  tail call fastcc void @push_without_duplicates(%union.tree_node* %exp.tr.lcssa, %struct.VEC_tree_heap** %refs) #8, !dbg !6493
  br label %if.end162, !dbg !6495

sw.bb94:                                          ; preds = %sw.bb81, %land.lhs.true83, %if.else70, %if.else70, %if.else70, %if.else70, %if.else70
  call void @llvm.dbg.value(metadata i32 0, metadata !6440, metadata !DIExpression()), !dbg !6446
  %arrayidx97 = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom71, !dbg !6496
  %14 = load i8, i8* %arrayidx97, align 1, !dbg !6496
  %operands103 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6499
  %wide.trip.count = zext i8 %14 to i64, !dbg !6502
  br label %for.cond95, !dbg !6503

for.cond95:                                       ; preds = %for.inc126, %sw.bb94
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc126 ], [ 0, %sw.bb94 ], !dbg !6504
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6440, metadata !DIExpression()), !dbg !6446
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !6502
  br i1 %exitcond, label %if.end162.loopexit, label %do.body101, !dbg !6505

do.body101:                                       ; preds = %for.cond95
  %arrayidx105 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands103, i64 %indvars.iv, !dbg !6506
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx105, align 8, !dbg !6506
  %tobool106 = icmp eq %union.tree_node* %15, null, !dbg !6506
  br i1 %tobool106, label %for.inc126, label %land.lhs.true107, !dbg !6506

land.lhs.true107:                                 ; preds = %do.body101
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6506
  %bf.load113 = load i64, i64* %16, align 8, !dbg !6506
  %bf.cast1166 = and i64 %bf.load113, 131072, !dbg !6506
  %tobool117 = icmp eq i64 %bf.cast1166, 0, !dbg !6506
  br i1 %tobool117, label %if.then118, label %for.inc126, !dbg !6507

if.then118:                                       ; preds = %land.lhs.true107
  tail call void @find_placeholder_in_expr(%union.tree_node* nonnull %15, %struct.VEC_tree_heap** %refs) #8, !dbg !6506
  br label %for.inc126, !dbg !6506

for.inc126:                                       ; preds = %land.lhs.true107, %do.body101, %if.then118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6508
  call void @llvm.dbg.value(metadata i32 undef, metadata !6440, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6446
  br label %for.cond95, !dbg !6509, !llvm.loop !6510

for.cond129:                                      ; preds = %for.cond129.preheader, %for.inc158
  %indvars.iv21 = phi i64 [ 1, %for.cond129.preheader ], [ %indvars.iv.next22, %for.inc158 ], !dbg !6512
  call void @llvm.dbg.value(metadata i64 %indvars.iv21, metadata !6440, metadata !DIExpression()), !dbg !6446
  %call = tail call fastcc i32 @tree_operand_length(%union.tree_node* %exp.tr.lcssa) #8, !dbg !6513
  %17 = sext i32 %call to i64, !dbg !6514
  %cmp130 = icmp slt i64 %indvars.iv21, %17, !dbg !6514
  br i1 %cmp130, label %do.body133, label %if.end162.loopexit9, !dbg !6482

do.body133:                                       ; preds = %for.cond129
  %arrayidx137 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands135, i64 %indvars.iv21, !dbg !6515
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx137, align 8, !dbg !6515
  %tobool138 = icmp eq %union.tree_node* %18, null, !dbg !6515
  br i1 %tobool138, label %for.inc158, label %land.lhs.true139, !dbg !6515

land.lhs.true139:                                 ; preds = %do.body133
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6515
  %bf.load145 = load i64, i64* %19, align 8, !dbg !6515
  %bf.cast1485 = and i64 %bf.load145, 131072, !dbg !6515
  %tobool149 = icmp eq i64 %bf.cast1485, 0, !dbg !6515
  br i1 %tobool149, label %if.then150, label %for.inc158, !dbg !6516

if.then150:                                       ; preds = %land.lhs.true139
  tail call void @find_placeholder_in_expr(%union.tree_node* nonnull %18, %struct.VEC_tree_heap** %refs) #8, !dbg !6515
  br label %for.inc158, !dbg !6515

for.inc158:                                       ; preds = %land.lhs.true139, %do.body133, %if.then150
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !6517
  call void @llvm.dbg.value(metadata i32 undef, metadata !6440, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6446
  br label %for.cond129, !dbg !6518, !llvm.loop !6519

sw.default:                                       ; preds = %if.else70
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 2964, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6521
  br label %if.end162, !dbg !6522

if.end162.loopexit:                               ; preds = %for.cond95
  br label %if.end162, !dbg !6523

if.end162.loopexit9:                              ; preds = %for.cond129
  br label %if.end162, !dbg !6523

if.end162.loopexit10:                             ; preds = %do.body47, %land.lhs.true52, %do.body11, %land.lhs.true13
  br label %if.end162, !dbg !6523

if.end162:                                        ; preds = %if.end162.loopexit10, %if.end162.loopexit9, %if.end162.loopexit, %sw.bb, %if.then45, %if.then79, %sw.default, %if.then92, %if.else70
  ret void, !dbg !6523
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_without_duplicates(%union.tree_node* %exp, %struct.VEC_tree_heap** %queue) unnamed_addr #5 !dbg !6524 {
entry:
  %iter = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6526, metadata !DIExpression()), !dbg !6530
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %queue, metadata !6527, metadata !DIExpression()), !dbg !6530
  %0 = bitcast %union.tree_node** %iter to i8*, !dbg !6531
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6531
  call void @llvm.dbg.value(metadata i32 0, metadata !6528, metadata !DIExpression()), !dbg !6530
  br label %for.cond, !dbg !6532

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6534
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6528, metadata !DIExpression()), !dbg !6530
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %queue, align 8, !dbg !6535
  %tobool = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !6535
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6535

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !6535
  br label %cond.end, !dbg !6535

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !6535
  call void @llvm.dbg.value(metadata %union.tree_node** %iter, metadata !6529, metadata !DIExpression(DW_OP_deref)), !dbg !6530
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %iter) #8, !dbg !6535
  %tobool1 = icmp eq i32 %call, 0, !dbg !6537
  br i1 %tobool1, label %for.end, label %for.body, !dbg !6537

for.body:                                         ; preds = %cond.end
  %2 = load %union.tree_node*, %union.tree_node** %iter, align 8, !dbg !6538
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6529, metadata !DIExpression()), !dbg !6530
  %call2 = call i32 @simple_cst_equal(%union.tree_node* %2, %union.tree_node* %exp) #8, !dbg !6540
  %cmp = icmp eq i32 %call2, 1, !dbg !6541
  br i1 %cmp, label %for.end, label %for.inc, !dbg !6542

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !6543
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6528, metadata !DIExpression()), !dbg !6530
  br label %for.cond, !dbg !6544, !llvm.loop !6545

for.end:                                          ; preds = %cond.end, %for.body
  %3 = load %union.tree_node*, %union.tree_node** %iter, align 8, !dbg !6547
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6529, metadata !DIExpression()), !dbg !6530
  %tobool3 = icmp eq %union.tree_node* %3, null, !dbg !6547
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6549

if.then4:                                         ; preds = %for.end
  %call5 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %queue, %union.tree_node* %exp) #8, !dbg !6550
  br label %if.end6, !dbg !6550

if.end6:                                          ; preds = %for.end, %if.then4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6551
  ret void, !dbg !6551
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !6552 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !6554, metadata !DIExpression()), !dbg !6555
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6556
  %bf.load = load i64, i64* %0, align 8, !dbg !6556
  %bf.cast = and i64 %bf.load, 65535, !dbg !6556
  %cmp = icmp eq i64 %bf.cast, 59, !dbg !6556
  br i1 %cmp, label %if.then, label %if.else, !dbg !6558

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6559
  %1 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !6559
  %2 = load %struct.tree_int_cst*, %struct.tree_int_cst** %1, align 8, !dbg !6559
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %2, i64 0, i32 1, i32 0, !dbg !6559
  %3 = load i64, i64* %low, align 8, !dbg !6559
  %conv = trunc i64 %3 to i32, !dbg !6559
  br label %return, !dbg !6560

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !6561
  %4 = load i8, i8* %arrayidx8, align 1, !dbg !6561
  %conv9 = zext i8 %4 to i32, !dbg !6561
  br label %return, !dbg !6562

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !6563
  ret i32 %retval.0, !dbg !6564
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @substitute_in_expr(%union.tree_node* %exp, %union.tree_node* %f, %union.tree_node* %r) local_unnamed_addr #5 !dbg !6565 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6567, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata %union.tree_node* %f, metadata !6568, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata %union.tree_node* %r, metadata !6569, metadata !DIExpression()), !dbg !6591
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6592
  %bf.load = load i64, i64* %0, align 8, !dbg !6592
  %1 = trunc i64 %bf.load to i32, !dbg !6592
  %bf.cast = and i32 %1, 65535, !dbg !6592
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6570, metadata !DIExpression()), !dbg !6591
  %trunc = trunc i64 %bf.load to i16, !dbg !6593
  switch i16 %trunc, label %if.else108 [
    i16 2, label %if.then
    i16 41, label %if.then41
  ], !dbg !6593

if.then:                                          ; preds = %entry
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6594
  %2 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6594
  %cmp1 = icmp eq %union.tree_node* %2, null, !dbg !6594
  br i1 %cmp1, label %cond.true, label %lor.lhs.false, !dbg !6594

lor.lhs.false:                                    ; preds = %if.then
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6594
  %bf.load5 = load i64, i64* %3, align 8, !dbg !6594
  %bf.cast711 = and i64 %bf.load5, 131072, !dbg !6594
  %tobool = icmp eq i64 %bf.cast711, 0, !dbg !6594
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6594

cond.true:                                        ; preds = %lor.lhs.false, %if.then
  br label %cond.end, !dbg !6594

cond.false:                                       ; preds = %lor.lhs.false
  %call = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %2, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6594
  br label %cond.end, !dbg !6594

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %2, %cond.true ], [ %call, %cond.false ], !dbg !6594
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !6571, metadata !DIExpression()), !dbg !6591
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6596
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !6596
  %cmp12 = icmp eq %union.tree_node* %5, null, !dbg !6596
  br i1 %cmp12, label %cond.true22, label %lor.lhs.false13, !dbg !6596

lor.lhs.false13:                                  ; preds = %cond.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6596
  %bf.load17 = load i64, i64* %6, align 8, !dbg !6596
  %bf.cast2012 = and i64 %bf.load17, 131072, !dbg !6596
  %tobool21 = icmp eq i64 %bf.cast2012, 0, !dbg !6596
  br i1 %tobool21, label %cond.false25, label %cond.true22, !dbg !6596

cond.true22:                                      ; preds = %lor.lhs.false13, %cond.end
  br label %cond.end29, !dbg !6596

cond.false25:                                     ; preds = %lor.lhs.false13
  %call28 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %5, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6596
  br label %cond.end29, !dbg !6596

cond.end29:                                       ; preds = %cond.false25, %cond.true22
  %cond30 = phi %union.tree_node* [ %5, %cond.true22 ], [ %call28, %cond.false25 ], !dbg !6596
  call void @llvm.dbg.value(metadata %union.tree_node* %cond30, metadata !6572, metadata !DIExpression()), !dbg !6591
  %7 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6597
  %cmp33 = icmp eq %union.tree_node* %cond, %7, !dbg !6599
  br i1 %cmp33, label %land.lhs.true, label %if.end, !dbg !6600

land.lhs.true:                                    ; preds = %cond.end29
  %8 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !6601
  %cmp36 = icmp eq %union.tree_node* %cond30, %8, !dbg !6602
  br i1 %cmp36, label %cleanup568, label %if.end, !dbg !6603

if.end:                                           ; preds = %land.lhs.true, %cond.end29
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6604
  %9 = bitcast i32* %purpose to %union.tree_node**, !dbg !6604
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !6604
  %call39 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %10, %union.tree_node* %cond30, %union.tree_node* %cond) #8, !dbg !6604
  br label %cleanup568, !dbg !6605

if.then41:                                        ; preds = %entry
  br label %for.cond, !dbg !6606

for.cond:                                         ; preds = %for.inc, %if.then41
  %exp.pn = phi %union.tree_node* [ %exp, %if.then41 ], [ %inner.0, %for.inc ]
  %inner.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6608
  %inner.0 = load %union.tree_node*, %union.tree_node** %inner.0.in, align 8, !dbg !6608
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0, metadata !6576, metadata !DIExpression()), !dbg !6609
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6610
  %bf.load44 = load i64, i64* %11, align 8, !dbg !6610
  %bf.cast46 = and i64 %bf.load44, 65535, !dbg !6610
  %arrayidx47 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast46, !dbg !6610
  %12 = load i32, i32* %arrayidx47, align 4, !dbg !6610
  %cmp48 = icmp eq i32 %12, 4, !dbg !6610
  br i1 %cmp48, label %for.inc, label %for.end, !dbg !6612

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !6613, !llvm.loop !6614

for.end:                                          ; preds = %for.cond
  %inner.0.lcssa = phi %union.tree_node* [ %inner.0, %for.cond ], !dbg !6608
  %bf.cast46.lcssa = phi i64 [ %bf.cast46, %for.cond ], !dbg !6610
  %operands53 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6616
  %arrayidx54 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands53, i64 1, !dbg !6616
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx54, align 8, !dbg !6616
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !6572, metadata !DIExpression()), !dbg !6591
  %cmp59 = icmp eq i64 %bf.cast46.lcssa, 62, !dbg !6617
  %cmp61 = icmp eq %union.tree_node* %13, %f, !dbg !6619
  %or.cond = and i1 %cmp59, %cmp61, !dbg !6620
  br i1 %or.cond, label %cleanup, label %if.end63, !dbg !6620

if.end63:                                         ; preds = %for.end
  br i1 %cmp59, label %land.lhs.true69, label %if.end73, !dbg !6621

land.lhs.true69:                                  ; preds = %if.end63
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6623
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6623
  %tobool71 = icmp eq %union.tree_node* %14, null, !dbg !6623
  br i1 %tobool71, label %cleanup, label %if.end73, !dbg !6624

if.end73:                                         ; preds = %land.lhs.true69, %if.end63
  %15 = load %union.tree_node*, %union.tree_node** %operands53, align 8, !dbg !6625
  %cmp77 = icmp eq %union.tree_node* %15, null, !dbg !6625
  br i1 %cmp77, label %cond.true88, label %lor.lhs.false78, !dbg !6625

lor.lhs.false78:                                  ; preds = %if.end73
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6625
  %bf.load83 = load i64, i64* %16, align 8, !dbg !6625
  %bf.cast867 = and i64 %bf.load83, 131072, !dbg !6625
  %tobool87 = icmp eq i64 %bf.cast867, 0, !dbg !6625
  br i1 %tobool87, label %cond.false92, label %cond.true88, !dbg !6625

cond.true88:                                      ; preds = %lor.lhs.false78, %if.end73
  br label %cond.end97, !dbg !6625

cond.false92:                                     ; preds = %lor.lhs.false78
  %call96 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %15, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6625
  %.pre = load %union.tree_node*, %union.tree_node** %operands53, align 8, !dbg !6626
  br label %cond.end97, !dbg !6625

cond.end97:                                       ; preds = %cond.false92, %cond.true88
  %17 = phi %union.tree_node* [ %15, %cond.true88 ], [ %.pre, %cond.false92 ], !dbg !6626
  %cond98 = phi %union.tree_node* [ %15, %cond.true88 ], [ %call96, %cond.false92 ], !dbg !6625
  call void @llvm.dbg.value(metadata %union.tree_node* %cond98, metadata !6571, metadata !DIExpression()), !dbg !6591
  %cmp102 = icmp eq %union.tree_node* %cond98, %17, !dbg !6628
  br i1 %cmp102, label %cleanup, label %if.end104, !dbg !6629

if.end104:                                        ; preds = %cond.end97
  %type106 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6630
  %18 = load %union.tree_node*, %union.tree_node** %type106, align 8, !dbg !6630
  %call107 = tail call %union.tree_node* @fold_build3_stat_loc(i32 0, i32 41, %union.tree_node* %18, %union.tree_node* %cond98, %union.tree_node* %13, %union.tree_node* null) #7, !dbg !6630
  call void @llvm.dbg.value(metadata %union.tree_node* %call107, metadata !6575, metadata !DIExpression()), !dbg !6591
  br label %cleanup, !dbg !6631

cleanup:                                          ; preds = %land.lhs.true69, %cond.end97, %for.end, %if.end104
  %new_tree.0 = phi %union.tree_node* [ %call107, %if.end104 ], [ undef, %for.end ], [ undef, %land.lhs.true69 ], [ undef, %cond.end97 ]
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end104 ], [ false, %for.end ], [ false, %land.lhs.true69 ], [ false, %cond.end97 ]
  %retval.0 = phi %union.tree_node* [ undef, %if.end104 ], [ %r, %for.end ], [ %exp, %land.lhs.true69 ], [ %exp, %cond.end97 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.0, metadata !6575, metadata !DIExpression()), !dbg !6591
  br i1 %cleanup.dest.slot.0, label %if.end555, label %cleanup568

if.else108:                                       ; preds = %entry
  %idxprom109 = zext i32 %bf.cast to i64, !dbg !6632
  %arrayidx110 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom109, !dbg !6632
  %19 = load i32, i32* %arrayidx110, align 4, !dbg !6632
  switch i32 %19, label %sw.default552 [
    i32 1, label %cleanup568
    i32 3, label %sw.bb111
    i32 10, label %sw.bb115
    i32 0, label %sw.bb119
    i32 6, label %sw.bb119
    i32 7, label %sw.bb119
    i32 5, label %sw.bb119
    i32 4, label %sw.bb119
    i32 9, label %sw.bb464
  ], !dbg !6633

sw.bb111:                                         ; preds = %if.else108
  %cmp112 = icmp eq %union.tree_node* %exp, %f, !dbg !6634
  %r.exp = select i1 %cmp112, %union.tree_node* %r, %union.tree_node* %exp, !dbg !6636
  br label %cleanup568, !dbg !6636

sw.bb115:                                         ; preds = %if.else108
  %cmp116 = icmp eq %union.tree_node* %exp, %f, !dbg !6637
  br i1 %cmp116, label %cleanup568, label %sw.bb119, !dbg !6639

sw.bb119:                                         ; preds = %sw.bb115, %if.else108, %if.else108, %if.else108, %if.else108, %if.else108
  %arrayidx121 = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom109, !dbg !6640
  %20 = load i8, i8* %arrayidx121, align 1, !dbg !6640
  switch i8 %20, label %sw.default [
    i8 0, label %cleanup568
    i8 1, label %sw.bb123
    i8 2, label %sw.bb160
    i8 3, label %sw.bb229
    i8 4, label %sw.bb330
  ], !dbg !6641

sw.bb123:                                         ; preds = %sw.bb119
  %operands125 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6642
  %21 = load %union.tree_node*, %union.tree_node** %operands125, align 8, !dbg !6642
  %cmp127 = icmp eq %union.tree_node* %21, null, !dbg !6642
  br i1 %cmp127, label %cond.true139, label %lor.lhs.false129, !dbg !6642

lor.lhs.false129:                                 ; preds = %sw.bb123
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6642
  %bf.load134 = load i64, i64* %22, align 8, !dbg !6642
  %bf.cast13726 = and i64 %bf.load134, 131072, !dbg !6642
  %tobool138 = icmp eq i64 %bf.cast13726, 0, !dbg !6642
  br i1 %tobool138, label %cond.false143, label %cond.true139, !dbg !6642

cond.true139:                                     ; preds = %lor.lhs.false129, %sw.bb123
  br label %cond.end148, !dbg !6642

cond.false143:                                    ; preds = %lor.lhs.false129
  %call147 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %21, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6642
  %.pre27 = load %union.tree_node*, %union.tree_node** %operands125, align 8, !dbg !6644
  br label %cond.end148, !dbg !6642

cond.end148:                                      ; preds = %cond.false143, %cond.true139
  %23 = phi %union.tree_node* [ %21, %cond.true139 ], [ %.pre27, %cond.false143 ], !dbg !6644
  %cond149 = phi %union.tree_node* [ %21, %cond.true139 ], [ %call147, %cond.false143 ], !dbg !6642
  call void @llvm.dbg.value(metadata %union.tree_node* %cond149, metadata !6571, metadata !DIExpression()), !dbg !6591
  %cmp153 = icmp eq %union.tree_node* %cond149, %23, !dbg !6646
  br i1 %cmp153, label %cleanup568, label %if.end156, !dbg !6647

if.end156:                                        ; preds = %cond.end148
  %type158 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6648
  %24 = load %union.tree_node*, %union.tree_node** %type158, align 8, !dbg !6648
  %call159 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %24, %union.tree_node* %cond149) #7, !dbg !6648
  call void @llvm.dbg.value(metadata %union.tree_node* %call159, metadata !6575, metadata !DIExpression()), !dbg !6591
  br label %if.end555, !dbg !6649

sw.bb160:                                         ; preds = %sw.bb119
  %operands162 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6650
  %25 = load %union.tree_node*, %union.tree_node** %operands162, align 8, !dbg !6650
  %cmp164 = icmp eq %union.tree_node* %25, null, !dbg !6650
  br i1 %cmp164, label %cond.true176, label %lor.lhs.false166, !dbg !6650

lor.lhs.false166:                                 ; preds = %sw.bb160
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6650
  %bf.load171 = load i64, i64* %26, align 8, !dbg !6650
  %bf.cast17424 = and i64 %bf.load171, 131072, !dbg !6650
  %tobool175 = icmp eq i64 %bf.cast17424, 0, !dbg !6650
  br i1 %tobool175, label %cond.false180, label %cond.true176, !dbg !6650

cond.true176:                                     ; preds = %lor.lhs.false166, %sw.bb160
  br label %cond.end185, !dbg !6650

cond.false180:                                    ; preds = %lor.lhs.false166
  %call184 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %25, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6650
  br label %cond.end185, !dbg !6650

cond.end185:                                      ; preds = %cond.false180, %cond.true176
  %cond186 = phi %union.tree_node* [ %25, %cond.true176 ], [ %call184, %cond.false180 ], !dbg !6650
  call void @llvm.dbg.value(metadata %union.tree_node* %cond186, metadata !6571, metadata !DIExpression()), !dbg !6591
  %arrayidx189 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands162, i64 1, !dbg !6651
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx189, align 8, !dbg !6651
  %cmp190 = icmp eq %union.tree_node* %27, null, !dbg !6651
  br i1 %cmp190, label %cond.true202, label %lor.lhs.false192, !dbg !6651

lor.lhs.false192:                                 ; preds = %cond.end185
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6651
  %bf.load197 = load i64, i64* %28, align 8, !dbg !6651
  %bf.cast20025 = and i64 %bf.load197, 131072, !dbg !6651
  %tobool201 = icmp eq i64 %bf.cast20025, 0, !dbg !6651
  br i1 %tobool201, label %cond.false206, label %cond.true202, !dbg !6651

cond.true202:                                     ; preds = %lor.lhs.false192, %cond.end185
  br label %cond.end211, !dbg !6651

cond.false206:                                    ; preds = %lor.lhs.false192
  %call210 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %27, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6651
  br label %cond.end211, !dbg !6651

cond.end211:                                      ; preds = %cond.false206, %cond.true202
  %cond212 = phi %union.tree_node* [ %27, %cond.true202 ], [ %call210, %cond.false206 ], !dbg !6651
  call void @llvm.dbg.value(metadata %union.tree_node* %cond212, metadata !6572, metadata !DIExpression()), !dbg !6591
  %29 = load %union.tree_node*, %union.tree_node** %operands162, align 8, !dbg !6652
  %cmp216 = icmp eq %union.tree_node* %cond186, %29, !dbg !6654
  br i1 %cmp216, label %land.lhs.true218, label %if.end225, !dbg !6655

land.lhs.true218:                                 ; preds = %cond.end211
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx189, align 8, !dbg !6656
  %cmp222 = icmp eq %union.tree_node* %cond212, %30, !dbg !6657
  br i1 %cmp222, label %cleanup568, label %if.end225, !dbg !6658

if.end225:                                        ; preds = %land.lhs.true218, %cond.end211
  %type227 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6659
  %31 = load %union.tree_node*, %union.tree_node** %type227, align 8, !dbg !6659
  %call228 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %31, %union.tree_node* %cond186, %union.tree_node* %cond212) #7, !dbg !6659
  call void @llvm.dbg.value(metadata %union.tree_node* %call228, metadata !6575, metadata !DIExpression()), !dbg !6591
  br label %if.end555, !dbg !6660

sw.bb229:                                         ; preds = %sw.bb119
  %operands231 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6661
  %32 = load %union.tree_node*, %union.tree_node** %operands231, align 8, !dbg !6661
  %cmp233 = icmp eq %union.tree_node* %32, null, !dbg !6661
  br i1 %cmp233, label %cond.true245, label %lor.lhs.false235, !dbg !6661

lor.lhs.false235:                                 ; preds = %sw.bb229
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6661
  %bf.load240 = load i64, i64* %33, align 8, !dbg !6661
  %bf.cast24321 = and i64 %bf.load240, 131072, !dbg !6661
  %tobool244 = icmp eq i64 %bf.cast24321, 0, !dbg !6661
  br i1 %tobool244, label %cond.false249, label %cond.true245, !dbg !6661

cond.true245:                                     ; preds = %lor.lhs.false235, %sw.bb229
  br label %cond.end254, !dbg !6661

cond.false249:                                    ; preds = %lor.lhs.false235
  %call253 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %32, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6661
  br label %cond.end254, !dbg !6661

cond.end254:                                      ; preds = %cond.false249, %cond.true245
  %cond255 = phi %union.tree_node* [ %32, %cond.true245 ], [ %call253, %cond.false249 ], !dbg !6661
  call void @llvm.dbg.value(metadata %union.tree_node* %cond255, metadata !6571, metadata !DIExpression()), !dbg !6591
  %arrayidx258 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands231, i64 1, !dbg !6662
  %34 = load %union.tree_node*, %union.tree_node** %arrayidx258, align 8, !dbg !6662
  %cmp259 = icmp eq %union.tree_node* %34, null, !dbg !6662
  br i1 %cmp259, label %cond.true271, label %lor.lhs.false261, !dbg !6662

lor.lhs.false261:                                 ; preds = %cond.end254
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6662
  %bf.load266 = load i64, i64* %35, align 8, !dbg !6662
  %bf.cast26922 = and i64 %bf.load266, 131072, !dbg !6662
  %tobool270 = icmp eq i64 %bf.cast26922, 0, !dbg !6662
  br i1 %tobool270, label %cond.false275, label %cond.true271, !dbg !6662

cond.true271:                                     ; preds = %lor.lhs.false261, %cond.end254
  br label %cond.end280, !dbg !6662

cond.false275:                                    ; preds = %lor.lhs.false261
  %call279 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %34, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6662
  br label %cond.end280, !dbg !6662

cond.end280:                                      ; preds = %cond.false275, %cond.true271
  %cond281 = phi %union.tree_node* [ %34, %cond.true271 ], [ %call279, %cond.false275 ], !dbg !6662
  call void @llvm.dbg.value(metadata %union.tree_node* %cond281, metadata !6572, metadata !DIExpression()), !dbg !6591
  %arrayidx284 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands231, i64 2, !dbg !6663
  %36 = load %union.tree_node*, %union.tree_node** %arrayidx284, align 8, !dbg !6663
  %cmp285 = icmp eq %union.tree_node* %36, null, !dbg !6663
  br i1 %cmp285, label %cond.true297, label %lor.lhs.false287, !dbg !6663

lor.lhs.false287:                                 ; preds = %cond.end280
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6663
  %bf.load292 = load i64, i64* %37, align 8, !dbg !6663
  %bf.cast29523 = and i64 %bf.load292, 131072, !dbg !6663
  %tobool296 = icmp eq i64 %bf.cast29523, 0, !dbg !6663
  br i1 %tobool296, label %cond.false301, label %cond.true297, !dbg !6663

cond.true297:                                     ; preds = %lor.lhs.false287, %cond.end280
  br label %cond.end306, !dbg !6663

cond.false301:                                    ; preds = %lor.lhs.false287
  %call305 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %36, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6663
  br label %cond.end306, !dbg !6663

cond.end306:                                      ; preds = %cond.false301, %cond.true297
  %cond307 = phi %union.tree_node* [ %36, %cond.true297 ], [ %call305, %cond.false301 ], !dbg !6663
  call void @llvm.dbg.value(metadata %union.tree_node* %cond307, metadata !6573, metadata !DIExpression()), !dbg !6591
  %38 = load %union.tree_node*, %union.tree_node** %operands231, align 8, !dbg !6664
  %cmp311 = icmp eq %union.tree_node* %cond255, %38, !dbg !6666
  br i1 %cmp311, label %land.lhs.true313, label %if.end326, !dbg !6667

land.lhs.true313:                                 ; preds = %cond.end306
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx258, align 8, !dbg !6668
  %cmp317 = icmp eq %union.tree_node* %cond281, %39, !dbg !6669
  br i1 %cmp317, label %land.lhs.true319, label %if.end326, !dbg !6670

land.lhs.true319:                                 ; preds = %land.lhs.true313
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx284, align 8, !dbg !6671
  %cmp323 = icmp eq %union.tree_node* %cond307, %40, !dbg !6672
  br i1 %cmp323, label %cleanup568, label %if.end326, !dbg !6673

if.end326:                                        ; preds = %land.lhs.true319, %land.lhs.true313, %cond.end306
  %type328 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6674
  %41 = load %union.tree_node*, %union.tree_node** %type328, align 8, !dbg !6674
  %call329 = tail call %union.tree_node* @fold_build3_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %41, %union.tree_node* %cond255, %union.tree_node* %cond281, %union.tree_node* %cond307) #7, !dbg !6674
  call void @llvm.dbg.value(metadata %union.tree_node* %call329, metadata !6575, metadata !DIExpression()), !dbg !6591
  br label %if.end555, !dbg !6675

sw.bb330:                                         ; preds = %sw.bb119
  %operands332 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6676
  %42 = load %union.tree_node*, %union.tree_node** %operands332, align 8, !dbg !6676
  %cmp334 = icmp eq %union.tree_node* %42, null, !dbg !6676
  br i1 %cmp334, label %cond.true346, label %lor.lhs.false336, !dbg !6676

lor.lhs.false336:                                 ; preds = %sw.bb330
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6676
  %bf.load341 = load i64, i64* %43, align 8, !dbg !6676
  %bf.cast34417 = and i64 %bf.load341, 131072, !dbg !6676
  %tobool345 = icmp eq i64 %bf.cast34417, 0, !dbg !6676
  br i1 %tobool345, label %cond.false350, label %cond.true346, !dbg !6676

cond.true346:                                     ; preds = %lor.lhs.false336, %sw.bb330
  br label %cond.end355, !dbg !6676

cond.false350:                                    ; preds = %lor.lhs.false336
  %call354 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %42, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6676
  br label %cond.end355, !dbg !6676

cond.end355:                                      ; preds = %cond.false350, %cond.true346
  %cond356 = phi %union.tree_node* [ %42, %cond.true346 ], [ %call354, %cond.false350 ], !dbg !6676
  call void @llvm.dbg.value(metadata %union.tree_node* %cond356, metadata !6571, metadata !DIExpression()), !dbg !6591
  %arrayidx359 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands332, i64 1, !dbg !6677
  %44 = load %union.tree_node*, %union.tree_node** %arrayidx359, align 8, !dbg !6677
  %cmp360 = icmp eq %union.tree_node* %44, null, !dbg !6677
  br i1 %cmp360, label %cond.true372, label %lor.lhs.false362, !dbg !6677

lor.lhs.false362:                                 ; preds = %cond.end355
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6677
  %bf.load367 = load i64, i64* %45, align 8, !dbg !6677
  %bf.cast37018 = and i64 %bf.load367, 131072, !dbg !6677
  %tobool371 = icmp eq i64 %bf.cast37018, 0, !dbg !6677
  br i1 %tobool371, label %cond.false376, label %cond.true372, !dbg !6677

cond.true372:                                     ; preds = %lor.lhs.false362, %cond.end355
  br label %cond.end381, !dbg !6677

cond.false376:                                    ; preds = %lor.lhs.false362
  %call380 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %44, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6677
  br label %cond.end381, !dbg !6677

cond.end381:                                      ; preds = %cond.false376, %cond.true372
  %cond382 = phi %union.tree_node* [ %44, %cond.true372 ], [ %call380, %cond.false376 ], !dbg !6677
  call void @llvm.dbg.value(metadata %union.tree_node* %cond382, metadata !6572, metadata !DIExpression()), !dbg !6591
  %arrayidx385 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands332, i64 2, !dbg !6678
  %46 = load %union.tree_node*, %union.tree_node** %arrayidx385, align 8, !dbg !6678
  %cmp386 = icmp eq %union.tree_node* %46, null, !dbg !6678
  br i1 %cmp386, label %cond.true398, label %lor.lhs.false388, !dbg !6678

lor.lhs.false388:                                 ; preds = %cond.end381
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6678
  %bf.load393 = load i64, i64* %47, align 8, !dbg !6678
  %bf.cast39619 = and i64 %bf.load393, 131072, !dbg !6678
  %tobool397 = icmp eq i64 %bf.cast39619, 0, !dbg !6678
  br i1 %tobool397, label %cond.false402, label %cond.true398, !dbg !6678

cond.true398:                                     ; preds = %lor.lhs.false388, %cond.end381
  br label %cond.end407, !dbg !6678

cond.false402:                                    ; preds = %lor.lhs.false388
  %call406 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %46, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6678
  br label %cond.end407, !dbg !6678

cond.end407:                                      ; preds = %cond.false402, %cond.true398
  %cond408 = phi %union.tree_node* [ %46, %cond.true398 ], [ %call406, %cond.false402 ], !dbg !6678
  call void @llvm.dbg.value(metadata %union.tree_node* %cond408, metadata !6573, metadata !DIExpression()), !dbg !6591
  %arrayidx411 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands332, i64 3, !dbg !6679
  %48 = load %union.tree_node*, %union.tree_node** %arrayidx411, align 8, !dbg !6679
  %cmp412 = icmp eq %union.tree_node* %48, null, !dbg !6679
  br i1 %cmp412, label %cond.true424, label %lor.lhs.false414, !dbg !6679

lor.lhs.false414:                                 ; preds = %cond.end407
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6679
  %bf.load419 = load i64, i64* %49, align 8, !dbg !6679
  %bf.cast42220 = and i64 %bf.load419, 131072, !dbg !6679
  %tobool423 = icmp eq i64 %bf.cast42220, 0, !dbg !6679
  br i1 %tobool423, label %cond.false428, label %cond.true424, !dbg !6679

cond.true424:                                     ; preds = %lor.lhs.false414, %cond.end407
  br label %cond.end433, !dbg !6679

cond.false428:                                    ; preds = %lor.lhs.false414
  %call432 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %48, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6679
  br label %cond.end433, !dbg !6679

cond.end433:                                      ; preds = %cond.false428, %cond.true424
  %cond434 = phi %union.tree_node* [ %48, %cond.true424 ], [ %call432, %cond.false428 ], !dbg !6679
  call void @llvm.dbg.value(metadata %union.tree_node* %cond434, metadata !6574, metadata !DIExpression()), !dbg !6591
  %50 = load %union.tree_node*, %union.tree_node** %operands332, align 8, !dbg !6680
  %cmp438 = icmp eq %union.tree_node* %cond356, %50, !dbg !6682
  br i1 %cmp438, label %land.lhs.true440, label %if.end459, !dbg !6683

land.lhs.true440:                                 ; preds = %cond.end433
  %51 = load %union.tree_node*, %union.tree_node** %arrayidx359, align 8, !dbg !6684
  %cmp444 = icmp eq %union.tree_node* %cond382, %51, !dbg !6685
  br i1 %cmp444, label %land.lhs.true446, label %if.end459, !dbg !6686

land.lhs.true446:                                 ; preds = %land.lhs.true440
  %52 = load %union.tree_node*, %union.tree_node** %arrayidx385, align 8, !dbg !6687
  %cmp450 = icmp eq %union.tree_node* %cond408, %52, !dbg !6688
  br i1 %cmp450, label %land.lhs.true452, label %if.end459, !dbg !6689

land.lhs.true452:                                 ; preds = %land.lhs.true446
  %53 = load %union.tree_node*, %union.tree_node** %arrayidx411, align 8, !dbg !6690
  %cmp456 = icmp eq %union.tree_node* %cond434, %53, !dbg !6691
  br i1 %cmp456, label %cleanup568, label %if.end459, !dbg !6692

if.end459:                                        ; preds = %land.lhs.true452, %land.lhs.true446, %land.lhs.true440, %cond.end433
  %type461 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6693
  %54 = load %union.tree_node*, %union.tree_node** %type461, align 8, !dbg !6693
  %call462 = tail call %union.tree_node* @build4_stat(i32 %bf.cast, %union.tree_node* %54, %union.tree_node* %cond356, %union.tree_node* %cond382, %union.tree_node* %cond408, %union.tree_node* %cond434) #8, !dbg !6693
  %call463 = tail call %union.tree_node* @fold(%union.tree_node* %call462) #7, !dbg !6694
  call void @llvm.dbg.value(metadata %union.tree_node* %call463, metadata !6575, metadata !DIExpression()), !dbg !6591
  br label %if.end555, !dbg !6695

sw.default:                                       ; preds = %sw.bb119
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3094, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6696
  br label %if.end555, !dbg !6697

sw.bb464:                                         ; preds = %if.else108
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6575, metadata !DIExpression()), !dbg !6591
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %r, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6698
  %bf.load466 = load i64, i64* %55, align 8, !dbg !6698
  %bf.cast468 = and i64 %bf.load466, 65535, !dbg !6698
  %56 = add nsw i64 %bf.cast468, -23, !dbg !6698
  %cmp471 = icmp ult i64 %56, 6, !dbg !6698
  %cmp474 = icmp eq i32 %bf.cast, 59, !dbg !6699
  %or.cond4 = and i1 %cmp471, %cmp474, !dbg !6700
  br i1 %or.cond4, label %if.then476, label %if.end498, !dbg !6700

if.then476:                                       ; preds = %sw.bb464
  %call477 = tail call %union.tree_node* @maybe_inline_call_in_expr(%union.tree_node* %exp) #7, !dbg !6701
  call void @llvm.dbg.value(metadata %union.tree_node* %call477, metadata !6583, metadata !DIExpression()), !dbg !6702
  %tobool478 = icmp eq %union.tree_node* %call477, null, !dbg !6703
  br i1 %tobool478, label %cleanup495, label %lor.lhs.false482, !dbg !6705

lor.lhs.false482:                                 ; preds = %if.then476
  %57 = getelementptr inbounds %union.tree_node, %union.tree_node* %call477, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6706
  %bf.load484 = load i64, i64* %57, align 8, !dbg !6706
  %bf.cast48715 = and i64 %bf.load484, 131072, !dbg !6706
  %tobool488 = icmp eq i64 %bf.cast48715, 0, !dbg !6706
  br i1 %tobool488, label %cond.false490, label %cleanup495, !dbg !6706

cond.false490:                                    ; preds = %lor.lhs.false482
  %call491 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %call477, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6706
  br label %cleanup495, !dbg !6706

cleanup495:                                       ; preds = %lor.lhs.false482, %if.then476, %cond.false490
  %cleanup.dest.slot.1 = phi i32 [ 1, %lor.lhs.false482 ], [ 1, %cond.false490 ], [ 0, %if.then476 ]
  %retval.1 = phi %union.tree_node* [ %call477, %lor.lhs.false482 ], [ %call491, %cond.false490 ], [ undef, %if.then476 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end498, label %cleanup549

if.end498:                                        ; preds = %cleanup495, %sw.bb464
  %retval.2 = phi %union.tree_node* [ undef, %sw.bb464 ], [ %retval.1, %cleanup495 ]
  call void @llvm.dbg.value(metadata i32 1, metadata !6580, metadata !DIExpression()), !dbg !6707
  %operands505 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6708
  br label %for.cond499, !dbg !6709

for.cond499:                                      ; preds = %for.inc534, %if.end498
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc534 ], [ 1, %if.end498 ], !dbg !6710
  %new_tree.2 = phi %union.tree_node* [ %new_tree.4, %for.inc534 ], [ null, %if.end498 ], !dbg !6710
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6580, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.2, metadata !6575, metadata !DIExpression()), !dbg !6591
  %call500 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %exp) #8, !dbg !6711
  %58 = sext i32 %call500 to i64, !dbg !6712
  %cmp501 = icmp slt i64 %indvars.iv, %58, !dbg !6712
  br i1 %cmp501, label %for.body503, label %for.end535, !dbg !6713

for.body503:                                      ; preds = %for.cond499
  %arrayidx507 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands505, i64 %indvars.iv, !dbg !6714
  %59 = load %union.tree_node*, %union.tree_node** %arrayidx507, align 8, !dbg !6714
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !6586, metadata !DIExpression()), !dbg !6708
  %cmp508 = icmp eq %union.tree_node* %59, null, !dbg !6715
  br i1 %cmp508, label %cond.end520, label %lor.lhs.false510, !dbg !6715

lor.lhs.false510:                                 ; preds = %for.body503
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6715
  %bf.load512 = load i64, i64* %60, align 8, !dbg !6715
  %bf.cast51514 = and i64 %bf.load512, 131072, !dbg !6715
  %tobool516 = icmp eq i64 %bf.cast51514, 0, !dbg !6715
  br i1 %tobool516, label %cond.false518, label %cond.end520, !dbg !6715

cond.false518:                                    ; preds = %lor.lhs.false510
  %call519 = tail call %union.tree_node* @substitute_in_expr(%union.tree_node* nonnull %59, %union.tree_node* %f, %union.tree_node* %r) #8, !dbg !6715
  br label %cond.end520, !dbg !6715

cond.end520:                                      ; preds = %lor.lhs.false510, %for.body503, %cond.false518
  %cond521 = phi %union.tree_node* [ %call519, %cond.false518 ], [ %59, %lor.lhs.false510 ], [ null, %for.body503 ], !dbg !6715
  call void @llvm.dbg.value(metadata %union.tree_node* %cond521, metadata !6590, metadata !DIExpression()), !dbg !6708
  %cmp522 = icmp eq %union.tree_node* %cond521, %59, !dbg !6716
  br i1 %cmp522, label %for.inc534, label %if.then524, !dbg !6718

if.then524:                                       ; preds = %cond.end520
  %tobool525 = icmp eq %union.tree_node* %new_tree.2, null, !dbg !6719
  br i1 %tobool525, label %if.then526, label %if.end528, !dbg !6722

if.then526:                                       ; preds = %if.then524
  %call527 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %exp) #8, !dbg !6723
  call void @llvm.dbg.value(metadata %union.tree_node* %call527, metadata !6575, metadata !DIExpression()), !dbg !6591
  br label %if.end528, !dbg !6724

if.end528:                                        ; preds = %if.then524, %if.then526
  %new_tree.3 = phi %union.tree_node* [ %new_tree.2, %if.then524 ], [ %call527, %if.then526 ], !dbg !6707
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.3, metadata !6575, metadata !DIExpression()), !dbg !6591
  %operands530 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_tree.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6725
  %arrayidx532 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands530, i64 %indvars.iv, !dbg !6725
  store %union.tree_node* %cond521, %union.tree_node** %arrayidx532, align 8, !dbg !6726
  br label %for.inc534, !dbg !6727

for.inc534:                                       ; preds = %cond.end520, %if.end528
  %new_tree.4 = phi %union.tree_node* [ %new_tree.3, %if.end528 ], [ %new_tree.2, %cond.end520 ], !dbg !6710
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.4, metadata !6575, metadata !DIExpression()), !dbg !6591
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6728
  call void @llvm.dbg.value(metadata i32 undef, metadata !6580, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6707
  br label %for.cond499, !dbg !6729, !llvm.loop !6730

for.end535:                                       ; preds = %for.cond499
  %new_tree.2.lcssa = phi %union.tree_node* [ %new_tree.2, %for.cond499 ], !dbg !6710
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.2.lcssa, metadata !6575, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.2.lcssa, metadata !6575, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.2.lcssa, metadata !6575, metadata !DIExpression()), !dbg !6591
  %tobool536 = icmp eq %union.tree_node* %new_tree.2.lcssa, null, !dbg !6732
  br i1 %tobool536, label %cleanup549, label %if.then537, !dbg !6734

if.then537:                                       ; preds = %for.end535
  %call538 = tail call %union.tree_node* @fold(%union.tree_node* nonnull %new_tree.2.lcssa) #7, !dbg !6735
  call void @llvm.dbg.value(metadata %union.tree_node* %call538, metadata !6575, metadata !DIExpression()), !dbg !6591
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %call538, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6737
  %bf.load540 = load i64, i64* %61, align 8, !dbg !6737
  %bf.cast54213 = and i64 %bf.load540, 65535, !dbg !6739
  %cmp543 = icmp eq i64 %bf.cast54213, 59, !dbg !6739
  br i1 %cmp543, label %if.then545, label %cleanup549, !dbg !6740

if.then545:                                       ; preds = %if.then537
  tail call fastcc void @process_call_operands(%union.tree_node* %call538) #8, !dbg !6741
  br label %cleanup549, !dbg !6741

cleanup549:                                       ; preds = %for.end535, %if.then545, %if.then537, %cleanup495
  %new_tree.5 = phi %union.tree_node* [ null, %cleanup495 ], [ null, %for.end535 ], [ %call538, %if.then537 ], [ %call538, %if.then545 ], !dbg !6707
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup495 ], [ 1, %for.end535 ], [ 0, %if.then537 ], [ 0, %if.then545 ]
  %retval.3 = phi %union.tree_node* [ %retval.1, %cleanup495 ], [ %exp, %for.end535 ], [ %retval.2, %if.then537 ], [ %retval.2, %if.then545 ], !dbg !6707
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.5, metadata !6575, metadata !DIExpression()), !dbg !6591
  %cond1 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond1, label %if.end555, label %cleanup568

sw.default552:                                    ; preds = %if.else108
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6742
  br label %if.end555, !dbg !6743

if.end555:                                        ; preds = %cleanup, %cleanup549, %if.end156, %if.end225, %if.end326, %if.end459, %sw.default, %sw.default552
  %new_tree.7 = phi %union.tree_node* [ %new_tree.0, %cleanup ], [ undef, %sw.default552 ], [ undef, %sw.default ], [ %call463, %if.end459 ], [ %call329, %if.end326 ], [ %call228, %if.end225 ], [ %call159, %if.end156 ], [ %new_tree.5, %cleanup549 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.7, metadata !6575, metadata !DIExpression()), !dbg !6591
  %bf.load557 = load i64, i64* %0, align 8, !dbg !6744
  %62 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_tree.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6745
  %bf.load562 = load i64, i64* %62, align 8, !dbg !6746
  %63 = and i64 %bf.load557, 1048576, !dbg !6746
  %bf.set = or i64 %63, %bf.load562, !dbg !6746
  store i64 %bf.set, i64* %62, align 8, !dbg !6746
  br label %cleanup568, !dbg !6747

cleanup568:                                       ; preds = %land.lhs.true452, %land.lhs.true319, %land.lhs.true218, %cond.end148, %sw.bb119, %sw.bb115, %sw.bb111, %if.else108, %land.lhs.true, %cleanup, %cleanup549, %if.end555, %if.end
  %retval.4 = phi %union.tree_node* [ %call39, %if.end ], [ %retval.0, %cleanup ], [ %new_tree.7, %if.end555 ], [ %retval.3, %cleanup549 ], [ %exp, %land.lhs.true ], [ %exp, %if.else108 ], [ %r.exp, %sw.bb111 ], [ %r, %sw.bb115 ], [ %exp, %sw.bb119 ], [ %exp, %cond.end148 ], [ %exp, %land.lhs.true218 ], [ %exp, %land.lhs.true319 ], [ %exp, %land.lhs.true452 ], !dbg !6591
  ret %union.tree_node* %retval.4, !dbg !6748
}

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build4_stat(i32 %code, %union.tree_node* %tt, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %arg3) local_unnamed_addr #5 !dbg !6749 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6753, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata %union.tree_node* %tt, metadata !6754, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !6755, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !6756, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !6757, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata %union.tree_node* %arg3, metadata !6758, metadata !DIExpression()), !dbg !6763
  %idxprom = sext i32 %code to i64, !dbg !6764
  %arrayidx = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !6764
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6764
  %cmp = icmp eq i8 %0, 4, !dbg !6764
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6764

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3772, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !6764
  br label %cond.end, !dbg !6764

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %union.tree_node* @make_node_stat(i32 %code) #8, !dbg !6765
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6762, metadata !DIExpression()), !dbg !6763
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6766
  store %union.tree_node* %tt, %union.tree_node** %type, align 8, !dbg !6767
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6768
  %bf.load = load i64, i64* %1, align 8, !dbg !6768
  %bf.lshr = lshr i64 %bf.load, 16, !dbg !6768
  %2 = trunc i64 %bf.lshr to i8, !dbg !6768
  %bf.cast = and i8 %2, 1, !dbg !6768
  call void @llvm.dbg.value(metadata i8 %bf.cast, metadata !6761, metadata !DIExpression()), !dbg !6763
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6769
  store %union.tree_node* %arg0, %union.tree_node** %operands, align 8, !dbg !6769
  %tobool = icmp eq %union.tree_node* %arg0, null, !dbg !6771
  br i1 %tobool, label %do.body45, label %land.lhs.true, !dbg !6771

land.lhs.true:                                    ; preds = %cond.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6771
  %bf.load5 = load i64, i64* %3, align 8, !dbg !6771
  %bf.cast7 = and i64 %bf.load5, 65535, !dbg !6771
  %4 = add nsw i64 %bf.cast7, -5, !dbg !6771
  %cmp10 = icmp ult i64 %4, 18, !dbg !6771
  br i1 %cmp10, label %do.body45, label %if.then, !dbg !6769

if.then:                                          ; preds = %land.lhs.true
  %bf.cast167 = and i64 %bf.load5, 65536, !dbg !6773
  %tobool17 = icmp eq i64 %bf.cast167, 0, !dbg !6773
  %spec.select = select i1 %tobool17, i8 %bf.cast, i8 1, !dbg !6776
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !6761, metadata !DIExpression()), !dbg !6763
  br label %do.body45, !dbg !6776

do.body45:                                        ; preds = %cond.end, %land.lhs.true, %if.then
  %side_effects.1 = phi i8 [ %bf.cast, %land.lhs.true ], [ %spec.select, %if.then ], [ %bf.cast, %cond.end ], !dbg !6763
  call void @llvm.dbg.value(metadata i8 %side_effects.1, metadata !6761, metadata !DIExpression()), !dbg !6763
  %arrayidx48 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6777
  store %union.tree_node* %arg1, %union.tree_node** %arrayidx48, align 8, !dbg !6777
  %tobool49 = icmp eq %union.tree_node* %arg1, null, !dbg !6779
  br i1 %tobool49, label %do.body96, label %land.lhs.true50, !dbg !6779

land.lhs.true50:                                  ; preds = %do.body45
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6779
  %bf.load52 = load i64, i64* %5, align 8, !dbg !6779
  %bf.cast54 = and i64 %bf.load52, 65535, !dbg !6779
  %6 = add nsw i64 %bf.cast54, -5, !dbg !6779
  %cmp57 = icmp ult i64 %6, 18, !dbg !6779
  br i1 %cmp57, label %do.body96, label %if.then59, !dbg !6777

if.then59:                                        ; preds = %land.lhs.true50
  %bf.cast646 = and i64 %bf.load52, 65536, !dbg !6781
  %tobool65 = icmp eq i64 %bf.cast646, 0, !dbg !6781
  %spec.select1 = select i1 %tobool65, i8 %side_effects.1, i8 1, !dbg !6784
  call void @llvm.dbg.value(metadata i8 %spec.select1, metadata !6761, metadata !DIExpression()), !dbg !6763
  br label %do.body96, !dbg !6784

do.body96:                                        ; preds = %do.body45, %land.lhs.true50, %if.then59
  %side_effects.3 = phi i8 [ %side_effects.1, %land.lhs.true50 ], [ %spec.select1, %if.then59 ], [ %side_effects.1, %do.body45 ], !dbg !6763
  call void @llvm.dbg.value(metadata i8 %side_effects.3, metadata !6761, metadata !DIExpression()), !dbg !6763
  %arrayidx99 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6785
  store %union.tree_node* %arg2, %union.tree_node** %arrayidx99, align 8, !dbg !6785
  %tobool100 = icmp eq %union.tree_node* %arg2, null, !dbg !6787
  br i1 %tobool100, label %do.body147, label %land.lhs.true101, !dbg !6787

land.lhs.true101:                                 ; preds = %do.body96
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6787
  %bf.load103 = load i64, i64* %7, align 8, !dbg !6787
  %bf.cast105 = and i64 %bf.load103, 65535, !dbg !6787
  %8 = add nsw i64 %bf.cast105, -5, !dbg !6787
  %cmp108 = icmp ult i64 %8, 18, !dbg !6787
  br i1 %cmp108, label %do.body147, label %if.then110, !dbg !6785

if.then110:                                       ; preds = %land.lhs.true101
  %bf.cast1155 = and i64 %bf.load103, 65536, !dbg !6789
  %tobool116 = icmp eq i64 %bf.cast1155, 0, !dbg !6789
  %spec.select2 = select i1 %tobool116, i8 %side_effects.3, i8 1, !dbg !6792
  call void @llvm.dbg.value(metadata i8 %spec.select2, metadata !6761, metadata !DIExpression()), !dbg !6763
  br label %do.body147, !dbg !6792

do.body147:                                       ; preds = %do.body96, %land.lhs.true101, %if.then110
  %side_effects.5 = phi i8 [ %side_effects.3, %land.lhs.true101 ], [ %spec.select2, %if.then110 ], [ %side_effects.3, %do.body96 ], !dbg !6763
  call void @llvm.dbg.value(metadata i8 %side_effects.5, metadata !6761, metadata !DIExpression()), !dbg !6763
  %arrayidx150 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !6793
  store %union.tree_node* %arg3, %union.tree_node** %arrayidx150, align 8, !dbg !6793
  %tobool151 = icmp eq %union.tree_node* %arg3, null, !dbg !6795
  br i1 %tobool151, label %do.end197, label %land.lhs.true152, !dbg !6795

land.lhs.true152:                                 ; preds = %do.body147
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6795
  %bf.load154 = load i64, i64* %9, align 8, !dbg !6795
  %bf.cast156 = and i64 %bf.load154, 65535, !dbg !6795
  %10 = add nsw i64 %bf.cast156, -5, !dbg !6795
  %cmp159 = icmp ult i64 %10, 18, !dbg !6795
  br i1 %cmp159, label %do.end197, label %if.then161, !dbg !6793

if.then161:                                       ; preds = %land.lhs.true152
  %bf.cast1664 = and i64 %bf.load154, 65536, !dbg !6797
  %tobool167 = icmp eq i64 %bf.cast1664, 0, !dbg !6797
  %spec.select3 = select i1 %tobool167, i8 %side_effects.5, i8 1, !dbg !6800
  call void @llvm.dbg.value(metadata i8 %spec.select3, metadata !6761, metadata !DIExpression()), !dbg !6763
  br label %do.end197, !dbg !6800

do.end197:                                        ; preds = %do.body147, %if.then161, %land.lhs.true152
  %side_effects.7 = phi i8 [ %side_effects.5, %land.lhs.true152 ], [ %spec.select3, %if.then161 ], [ %side_effects.5, %do.body147 ], !dbg !6763
  call void @llvm.dbg.value(metadata i8 %side_effects.7, metadata !6761, metadata !DIExpression()), !dbg !6763
  %11 = and i8 %side_effects.7, 1, !dbg !6801
  %bf.value = zext i8 %11 to i64, !dbg !6801
  %bf.shl = shl nuw nsw i64 %bf.value, 16, !dbg !6801
  %bf.clear201 = and i64 %bf.load, -65537, !dbg !6801
  %bf.set = or i64 %bf.clear201, %bf.shl, !dbg !6801
  store i64 %bf.set, i64* %1, align 8, !dbg !6801
  %arrayidx203 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !6802
  %12 = load i32, i32* %arrayidx203, align 4, !dbg !6802
  %cmp204 = icmp eq i32 %12, 4, !dbg !6803
  %tobool207 = icmp ne %union.tree_node* %arg0, null, !dbg !6804
  %or.cond = and i1 %cmp204, %tobool207, !dbg !6805
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !6805

land.rhs:                                         ; preds = %do.end197
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6806
  %bf.load209 = load i64, i64* %13, align 8, !dbg !6806
  %bf.clear211 = and i64 %bf.load209, 524288, !dbg !6806
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end197
  %14 = phi i64 [ 0, %do.end197 ], [ %bf.clear211, %land.rhs ]
  %bf.clear218 = and i64 %bf.set, -524289, !dbg !6807
  %bf.set219 = or i64 %bf.clear218, %14, !dbg !6807
  store i64 %bf.set219, i64* %1, align 8, !dbg !6807
  ret %union.tree_node* %call, !dbg !6808
}

declare dso_local %union.tree_node* @maybe_inline_call_in_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @process_call_operands(%union.tree_node* %t) unnamed_addr #5 !dbg !6809 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6813, metadata !DIExpression()), !dbg !6822
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6823
  %bf.load = load i64, i64* %0, align 8, !dbg !6823
  %bf.lshr = lshr i64 %bf.load, 16, !dbg !6823
  %1 = trunc i64 %bf.lshr to i8, !dbg !6823
  %bf.cast = and i8 %1, 1, !dbg !6823
  call void @llvm.dbg.value(metadata i8 %bf.cast, metadata !6814, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 0, metadata !6815, metadata !DIExpression()), !dbg !6822
  %call = tail call i32 @call_expr_flags(%union.tree_node* %t) #7, !dbg !6824
  call void @llvm.dbg.value(metadata i32 %call, metadata !6816, metadata !DIExpression()), !dbg !6822
  %and = and i32 %call, 4, !dbg !6825
  %tobool = icmp eq i32 %and, 0, !dbg !6825
  %and1 = and i32 %call, 3, !dbg !6827
  %tobool2 = icmp ne i32 %and1, 0, !dbg !6827
  %or.cond = and i1 %tobool, %tobool2, !dbg !6828
  %side_effects.0 = select i1 %or.cond, i8 %bf.cast, i8 1, !dbg !6828
  call void @llvm.dbg.value(metadata i8 %side_effects.0, metadata !6814, metadata !DIExpression()), !dbg !6822
  %and3 = and i32 %call, 1, !dbg !6829
  %2 = trunc i32 %and3 to i8, !dbg !6831
  call void @llvm.dbg.value(metadata i8 %2, metadata !6815, metadata !DIExpression()), !dbg !6822
  %tobool7 = icmp eq i8 %side_effects.0, 0, !dbg !6832
  %tobool10 = icmp ne i32 %and3, 0, !dbg !6833
  %or.cond1 = or i1 %tobool7, %tobool10, !dbg !6834
  br i1 %or.cond1, label %for.cond.preheader, label %if.end42, !dbg !6834

for.cond.preheader:                               ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6835
  br label %for.cond, !dbg !6836

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 1, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !6837
  %read_only.1 = phi i8 [ %2, %for.cond.preheader ], [ %read_only.2, %for.inc ], !dbg !6837
  %side_effects.1 = phi i8 [ %side_effects.0, %for.cond.preheader ], [ %side_effects.2, %for.inc ], !dbg !6822
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6816, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 %side_effects.1, metadata !6814, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 %read_only.1, metadata !6815, metadata !DIExpression()), !dbg !6822
  %call12 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %t) #8, !dbg !6838
  %3 = sext i32 %call12 to i64, !dbg !6839
  %cmp = icmp slt i64 %indvars.iv, %3, !dbg !6839
  br i1 %cmp, label %for.body, label %if.end42.loopexit, !dbg !6836

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !6840
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6840
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6817, metadata !DIExpression()), !dbg !6835
  %tobool14 = icmp eq %union.tree_node* %4, null, !dbg !6841
  br i1 %tobool14, label %if.end22, label %land.lhs.true, !dbg !6843

land.lhs.true:                                    ; preds = %for.body
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6844
  %bf.load16 = load i64, i64* %5, align 8, !dbg !6844
  %bf.cast195 = and i64 %bf.load16, 65536, !dbg !6844
  %tobool20 = icmp eq i64 %bf.cast195, 0, !dbg !6844
  %spec.select2 = select i1 %tobool20, i8 %side_effects.1, i8 1, !dbg !6845
  br label %if.end22, !dbg !6845

if.end22:                                         ; preds = %for.body, %land.lhs.true
  %side_effects.2 = phi i8 [ %side_effects.1, %for.body ], [ %spec.select2, %land.lhs.true ], !dbg !6822
  call void @llvm.dbg.value(metadata i8 %side_effects.2, metadata !6814, metadata !DIExpression()), !dbg !6822
  br i1 %tobool14, label %for.inc, label %land.lhs.true24, !dbg !6846

land.lhs.true24:                                  ; preds = %if.end22
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6848
  %bf.load26 = load i64, i64* %6, align 8, !dbg !6848
  %bf.cast294 = and i64 %bf.load26, 1048576, !dbg !6848
  %tobool30 = icmp eq i64 %bf.cast294, 0, !dbg !6848
  br i1 %tobool30, label %land.lhs.true31, label %for.inc, !dbg !6849

land.lhs.true31:                                  ; preds = %land.lhs.true24
  %bf.cast35 = and i64 %bf.load26, 65535, !dbg !6850
  %7 = add nsw i64 %bf.cast35, -23, !dbg !6850
  %cmp38 = icmp ult i64 %7, 6, !dbg !6850
  %spec.select3 = select i1 %cmp38, i8 %read_only.1, i8 0, !dbg !6851
  br label %for.inc, !dbg !6851

for.inc:                                          ; preds = %land.lhs.true24, %if.end22, %land.lhs.true31
  %read_only.2 = phi i8 [ %read_only.1, %land.lhs.true24 ], [ %read_only.1, %if.end22 ], [ %spec.select3, %land.lhs.true31 ], !dbg !6822
  call void @llvm.dbg.value(metadata i8 %read_only.2, metadata !6815, metadata !DIExpression()), !dbg !6822
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6852
  call void @llvm.dbg.value(metadata i32 undef, metadata !6816, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6822
  br label %for.cond, !dbg !6853, !llvm.loop !6854

if.end42.loopexit:                                ; preds = %for.cond
  %read_only.1.lcssa = phi i8 [ %read_only.1, %for.cond ], !dbg !6837
  %side_effects.1.lcssa = phi i8 [ %side_effects.1, %for.cond ], !dbg !6822
  call void @llvm.dbg.value(metadata i8 %read_only.1.lcssa, metadata !6815, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 %side_effects.1.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 %read_only.1.lcssa, metadata !6815, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 %side_effects.1.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 %read_only.1.lcssa, metadata !6815, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 %side_effects.1.lcssa, metadata !6814, metadata !DIExpression()), !dbg !6822
  br label %if.end42, !dbg !6856

if.end42:                                         ; preds = %if.end42.loopexit, %entry
  %read_only.3 = phi i8 [ %2, %entry ], [ %read_only.1.lcssa, %if.end42.loopexit ], !dbg !6837
  %side_effects.3 = phi i8 [ %side_effects.0, %entry ], [ %side_effects.1.lcssa, %if.end42.loopexit ], !dbg !6857
  call void @llvm.dbg.value(metadata i8 %side_effects.3, metadata !6814, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i8 %read_only.3, metadata !6815, metadata !DIExpression()), !dbg !6822
  %bf.load45 = load i64, i64* %0, align 8, !dbg !6858
  %8 = and i8 %side_effects.3, 1, !dbg !6858
  %bf.value = zext i8 %8 to i64, !dbg !6858
  %bf.shl = shl nuw nsw i64 %bf.value, 16, !dbg !6858
  %bf.clear46 = and i64 %bf.load45, -1114113, !dbg !6858
  %bf.set = or i64 %bf.clear46, %bf.shl, !dbg !6858
  %9 = and i8 %read_only.3, 1, !dbg !6859
  %bf.value50 = zext i8 %9 to i64, !dbg !6859
  %bf.shl51 = shl nuw nsw i64 %bf.value50, 20, !dbg !6859
  %bf.set53 = or i64 %bf.set, %bf.shl51, !dbg !6859
  store i64 %bf.set53, i64* %0, align 8, !dbg !6859
  ret void, !dbg !6860
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* %exp, %union.tree_node* %obj) local_unnamed_addr #5 !dbg !6861 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6863, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.value(metadata %union.tree_node* %obj, metadata !6864, metadata !DIExpression()), !dbg !6884
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6885
  %bf.load = load i64, i64* %0, align 8, !dbg !6885
  %1 = trunc i64 %bf.load to i32, !dbg !6885
  %bf.cast = and i32 %1, 65535, !dbg !6885
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6865, metadata !DIExpression()), !dbg !6884
  %trunc = trunc i64 %bf.load to i16, !dbg !6886
  switch i16 %trunc, label %if.else209 [
    i16 62, label %if.then
    i16 2, label %if.then160
  ], !dbg !6886

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6887
  %2 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !6887
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !6887
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 16, !dbg !6887
  %4 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !6887
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6871, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata %union.tree_node* %obj, metadata !6874, metadata !DIExpression()), !dbg !6888
  br label %for.cond, !dbg !6889

for.cond:                                         ; preds = %cond.end63, %if.then
  %elt.0 = phi %union.tree_node* [ %obj, %if.then ], [ %cond64, %cond.end63 ], !dbg !6891
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.0, metadata !6874, metadata !DIExpression()), !dbg !6888
  %cmp2 = icmp eq %union.tree_node* %elt.0, null, !dbg !6892
  br i1 %cmp2, label %for.cond65.preheader, label %for.body, !dbg !6894

for.cond65.preheader:                             ; preds = %for.cond
  br label %for.cond65, !dbg !6895

for.body:                                         ; preds = %for.cond
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6897
  %5 = bitcast %union.tree_node** %type4 to %struct.tree_type**, !dbg !6897
  %6 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !6897
  %main_variant6 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 16, !dbg !6897
  %7 = load %union.tree_node*, %union.tree_node** %main_variant6, align 8, !dbg !6897
  %cmp7 = icmp eq %union.tree_node* %7, %4, !dbg !6899
  br i1 %cmp7, label %cleanup625.loopexit27, label %for.inc, !dbg !6900

for.inc:                                          ; preds = %for.body
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6901
  %bf.load10 = load i64, i64* %8, align 8, !dbg !6901
  %bf.cast129 = and i64 %bf.load10, 65535, !dbg !6902
  %cmp13 = icmp eq i64 %bf.cast129, 52, !dbg !6902
  br i1 %cmp13, label %cond.true, label %lor.lhs.false, !dbg !6903

lor.lhs.false:                                    ; preds = %for.inc
  %cmp18 = icmp eq i64 %bf.cast129, 56, !dbg !6904
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !6905

cond.true:                                        ; preds = %lor.lhs.false, %for.inc
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6906
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6906
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6906
  br label %cond.end63, !dbg !6905

cond.false:                                       ; preds = %lor.lhs.false
  %arrayidx24 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast129, !dbg !6907
  %10 = load i32, i32* %arrayidx24, align 4, !dbg !6907
  %cmp25 = icmp eq i32 %10, 4, !dbg !6907
  br i1 %cmp25, label %cond.true58, label %lor.lhs.false26, !dbg !6908

lor.lhs.false26:                                  ; preds = %cond.false
  %cmp33 = icmp eq i32 %10, 6, !dbg !6909
  br i1 %cmp33, label %cond.true58, label %lor.lhs.false34, !dbg !6910

lor.lhs.false34:                                  ; preds = %lor.lhs.false26
  %cmp41 = icmp eq i32 %10, 7, !dbg !6911
  br i1 %cmp41, label %cond.true58, label %lor.lhs.false42, !dbg !6912

lor.lhs.false42:                                  ; preds = %lor.lhs.false34
  %cmp49 = icmp eq i64 %bf.cast129, 59, !dbg !6913
  br i1 %cmp49, label %cond.true58, label %lor.lhs.false50, !dbg !6914

lor.lhs.false50:                                  ; preds = %lor.lhs.false42
  %cmp57 = icmp eq i32 %10, 10, !dbg !6915
  br i1 %cmp57, label %cond.true58, label %cond.end63, !dbg !6916

cond.true58:                                      ; preds = %lor.lhs.false50, %lor.lhs.false42, %lor.lhs.false34, %lor.lhs.false26, %cond.false
  %operands60 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6917
  %11 = load %union.tree_node*, %union.tree_node** %operands60, align 8, !dbg !6917
  br label %cond.end63, !dbg !6916

cond.end63:                                       ; preds = %cond.true58, %lor.lhs.false50, %cond.true
  %cond64 = phi %union.tree_node* [ %9, %cond.true ], [ %11, %cond.true58 ], [ null, %lor.lhs.false50 ], !dbg !6905
  call void @llvm.dbg.value(metadata %union.tree_node* %cond64, metadata !6874, metadata !DIExpression()), !dbg !6888
  br label %for.cond, !dbg !6918, !llvm.loop !6919

for.cond65:                                       ; preds = %for.cond65.preheader, %cond.end155
  %elt.1 = phi %union.tree_node* [ %cond156, %cond.end155 ], [ %obj, %for.cond65.preheader ], !dbg !6921
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.1, metadata !6874, metadata !DIExpression()), !dbg !6888
  %cmp66 = icmp eq %union.tree_node* %elt.1, null, !dbg !6922
  br i1 %cmp66, label %cleanup625.loopexit, label %for.body67, !dbg !6895

for.body67:                                       ; preds = %for.cond65
  %type69 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6924
  %12 = bitcast %union.tree_node** %type69 to i64**, !dbg !6924
  %13 = load i64*, i64** %12, align 8, !dbg !6924
  %bf.load71 = load i64, i64* %13, align 8, !dbg !6924
  %bf.cast734 = and i64 %bf.load71, 65535, !dbg !6924
  %cmp74 = icmp eq i64 %bf.cast734, 10, !dbg !6924
  br i1 %cmp74, label %land.lhs.true, label %lor.lhs.false75, !dbg !6924

lor.lhs.false75:                                  ; preds = %for.body67
  %cmp82 = icmp eq i64 %bf.cast734, 12, !dbg !6924
  br i1 %cmp82, label %land.lhs.true, label %for.inc92, !dbg !6926

land.lhs.true:                                    ; preds = %lor.lhs.false75, %for.body67
  %type86 = getelementptr inbounds i64, i64* %13, i64 2, !dbg !6927
  %14 = bitcast i64* %type86 to %struct.tree_type**, !dbg !6927
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !6927
  %main_variant88 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 16, !dbg !6927
  %16 = load %union.tree_node*, %union.tree_node** %main_variant88, align 8, !dbg !6927
  %cmp89 = icmp eq %union.tree_node* %16, %4, !dbg !6928
  br i1 %cmp89, label %if.then90, label %for.inc92, !dbg !6929

if.then90:                                        ; preds = %land.lhs.true
  %elt.1.lcssa33 = phi %union.tree_node* [ %elt.1, %land.lhs.true ], !dbg !6921
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.1.lcssa33, metadata !6874, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.1.lcssa33, metadata !6874, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.1.lcssa33, metadata !6874, metadata !DIExpression()), !dbg !6888
  %call = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 47, %union.tree_node* %4, %union.tree_node* nonnull %elt.1.lcssa33) #7, !dbg !6930
  br label %cleanup625, !dbg !6931

for.inc92:                                        ; preds = %lor.lhs.false75, %land.lhs.true
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6932
  %bf.load94 = load i64, i64* %17, align 8, !dbg !6932
  %bf.cast966 = and i64 %bf.load94, 65535, !dbg !6933
  %cmp97 = icmp eq i64 %bf.cast966, 52, !dbg !6933
  br i1 %cmp97, label %cond.true104, label %lor.lhs.false98, !dbg !6934

lor.lhs.false98:                                  ; preds = %for.inc92
  %cmp103 = icmp eq i64 %bf.cast966, 56, !dbg !6935
  br i1 %cmp103, label %cond.true104, label %cond.false108, !dbg !6936

cond.true104:                                     ; preds = %lor.lhs.false98, %for.inc92
  %operands106 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6937
  %arrayidx107 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands106, i64 1, !dbg !6937
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx107, align 8, !dbg !6937
  br label %cond.end155, !dbg !6936

cond.false108:                                    ; preds = %lor.lhs.false98
  %arrayidx114 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast966, !dbg !6938
  %19 = load i32, i32* %arrayidx114, align 4, !dbg !6938
  %cmp115 = icmp eq i32 %19, 4, !dbg !6938
  br i1 %cmp115, label %cond.true148, label %lor.lhs.false116, !dbg !6939

lor.lhs.false116:                                 ; preds = %cond.false108
  %cmp123 = icmp eq i32 %19, 6, !dbg !6940
  br i1 %cmp123, label %cond.true148, label %lor.lhs.false124, !dbg !6941

lor.lhs.false124:                                 ; preds = %lor.lhs.false116
  %cmp131 = icmp eq i32 %19, 7, !dbg !6942
  br i1 %cmp131, label %cond.true148, label %lor.lhs.false132, !dbg !6943

lor.lhs.false132:                                 ; preds = %lor.lhs.false124
  %cmp139 = icmp eq i64 %bf.cast966, 59, !dbg !6944
  br i1 %cmp139, label %cond.true148, label %lor.lhs.false140, !dbg !6945

lor.lhs.false140:                                 ; preds = %lor.lhs.false132
  %cmp147 = icmp eq i32 %19, 10, !dbg !6946
  br i1 %cmp147, label %cond.true148, label %cond.end155, !dbg !6947

cond.true148:                                     ; preds = %lor.lhs.false140, %lor.lhs.false132, %lor.lhs.false124, %lor.lhs.false116, %cond.false108
  %operands150 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6948
  %20 = load %union.tree_node*, %union.tree_node** %operands150, align 8, !dbg !6948
  br label %cond.end155, !dbg !6947

cond.end155:                                      ; preds = %cond.true148, %lor.lhs.false140, %cond.true104
  %cond156 = phi %union.tree_node* [ %18, %cond.true104 ], [ %20, %cond.true148 ], [ null, %lor.lhs.false140 ], !dbg !6936
  call void @llvm.dbg.value(metadata %union.tree_node* %cond156, metadata !6874, metadata !DIExpression()), !dbg !6888
  br label %for.cond65, !dbg !6949, !llvm.loop !6950

if.then160:                                       ; preds = %entry
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6952
  %21 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6952
  %cmp162 = icmp eq %union.tree_node* %21, null, !dbg !6952
  br i1 %cmp162, label %cond.true170, label %lor.lhs.false163, !dbg !6952

lor.lhs.false163:                                 ; preds = %if.then160
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6952
  %bf.load167 = load i64, i64* %22, align 8, !dbg !6952
  %bf.cast1692 = and i64 %bf.load167, 131072, !dbg !6952
  %tobool = icmp eq i64 %bf.cast1692, 0, !dbg !6952
  br i1 %tobool, label %cond.false173, label %cond.true170, !dbg !6952

cond.true170:                                     ; preds = %lor.lhs.false163, %if.then160
  br label %cond.end177, !dbg !6952

cond.false173:                                    ; preds = %lor.lhs.false163
  %call176 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %21, %union.tree_node* %obj) #8, !dbg !6952
  br label %cond.end177, !dbg !6952

cond.end177:                                      ; preds = %cond.false173, %cond.true170
  %cond178 = phi %union.tree_node* [ %21, %cond.true170 ], [ %call176, %cond.false173 ], !dbg !6952
  call void @llvm.dbg.value(metadata %union.tree_node* %cond178, metadata !6866, metadata !DIExpression()), !dbg !6884
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6954
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !6954
  %cmp179 = icmp eq %union.tree_node* %24, null, !dbg !6954
  br i1 %cmp179, label %cond.true189, label %lor.lhs.false180, !dbg !6954

lor.lhs.false180:                                 ; preds = %cond.end177
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6954
  %bf.load184 = load i64, i64* %25, align 8, !dbg !6954
  %bf.cast1873 = and i64 %bf.load184, 131072, !dbg !6954
  %tobool188 = icmp eq i64 %bf.cast1873, 0, !dbg !6954
  br i1 %tobool188, label %cond.false192, label %cond.true189, !dbg !6954

cond.true189:                                     ; preds = %lor.lhs.false180, %cond.end177
  br label %cond.end196, !dbg !6954

cond.false192:                                    ; preds = %lor.lhs.false180
  %call195 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %24, %union.tree_node* %obj) #8, !dbg !6954
  br label %cond.end196, !dbg !6954

cond.end196:                                      ; preds = %cond.false192, %cond.true189
  %cond197 = phi %union.tree_node* [ %24, %cond.true189 ], [ %call195, %cond.false192 ], !dbg !6954
  call void @llvm.dbg.value(metadata %union.tree_node* %cond197, metadata !6867, metadata !DIExpression()), !dbg !6884
  %26 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6955
  %cmp200 = icmp eq %union.tree_node* %cond178, %26, !dbg !6957
  br i1 %cmp200, label %land.lhs.true201, label %if.end206, !dbg !6958

land.lhs.true201:                                 ; preds = %cond.end196
  %27 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !6959
  %cmp204 = icmp eq %union.tree_node* %cond197, %27, !dbg !6960
  br i1 %cmp204, label %cleanup625, label %if.end206, !dbg !6961

if.end206:                                        ; preds = %land.lhs.true201, %cond.end196
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6962
  %28 = bitcast i32* %purpose to %union.tree_node**, !dbg !6962
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !6962
  %call208 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %29, %union.tree_node* %cond197, %union.tree_node* %cond178) #8, !dbg !6962
  br label %cleanup625, !dbg !6963

if.else209:                                       ; preds = %entry
  %idxprom210 = zext i32 %bf.cast to i64, !dbg !6964
  %arrayidx211 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom210, !dbg !6964
  %30 = load i32, i32* %arrayidx211, align 4, !dbg !6964
  switch i32 %30, label %sw.default609 [
    i32 1, label %cleanup625
    i32 3, label %cleanup625
    i32 0, label %sw.bb212
    i32 6, label %sw.bb212
    i32 7, label %sw.bb212
    i32 5, label %sw.bb212
    i32 10, label %sw.bb212
    i32 4, label %sw.bb212
    i32 8, label %sw.bb212
    i32 9, label %for.cond558.preheader
  ], !dbg !6965

for.cond558.preheader:                            ; preds = %if.else209
  %operands564 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6966
  br label %for.cond558, !dbg !6967

sw.bb212:                                         ; preds = %if.else209, %if.else209, %if.else209, %if.else209, %if.else209, %if.else209, %if.else209
  %arrayidx214 = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom210, !dbg !6968
  %31 = load i8, i8* %arrayidx214, align 1, !dbg !6968
  switch i8 %31, label %sw.default [
    i8 0, label %cleanup625
    i8 1, label %sw.bb216
    i8 2, label %sw.bb253
    i8 3, label %sw.bb322
    i8 4, label %sw.bb423
  ], !dbg !6969

sw.bb216:                                         ; preds = %sw.bb212
  %operands218 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6970
  %32 = load %union.tree_node*, %union.tree_node** %operands218, align 8, !dbg !6970
  %cmp220 = icmp eq %union.tree_node* %32, null, !dbg !6970
  br i1 %cmp220, label %cond.true232, label %lor.lhs.false222, !dbg !6970

lor.lhs.false222:                                 ; preds = %sw.bb216
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6970
  %bf.load227 = load i64, i64* %33, align 8, !dbg !6970
  %bf.cast23026 = and i64 %bf.load227, 131072, !dbg !6970
  %tobool231 = icmp eq i64 %bf.cast23026, 0, !dbg !6970
  br i1 %tobool231, label %cond.false236, label %cond.true232, !dbg !6970

cond.true232:                                     ; preds = %lor.lhs.false222, %sw.bb216
  br label %cond.end241, !dbg !6970

cond.false236:                                    ; preds = %lor.lhs.false222
  %call240 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %32, %union.tree_node* %obj) #8, !dbg !6970
  %.pre = load %union.tree_node*, %union.tree_node** %operands218, align 8, !dbg !6972
  br label %cond.end241, !dbg !6970

cond.end241:                                      ; preds = %cond.false236, %cond.true232
  %34 = phi %union.tree_node* [ %32, %cond.true232 ], [ %.pre, %cond.false236 ], !dbg !6972
  %cond242 = phi %union.tree_node* [ %32, %cond.true232 ], [ %call240, %cond.false236 ], !dbg !6970
  call void @llvm.dbg.value(metadata %union.tree_node* %cond242, metadata !6866, metadata !DIExpression()), !dbg !6884
  %cmp246 = icmp eq %union.tree_node* %cond242, %34, !dbg !6974
  br i1 %cmp246, label %cleanup625, label %if.end249, !dbg !6975

if.end249:                                        ; preds = %cond.end241
  %type251 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6976
  %35 = load %union.tree_node*, %union.tree_node** %type251, align 8, !dbg !6976
  %call252 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %35, %union.tree_node* %cond242) #7, !dbg !6976
  call void @llvm.dbg.value(metadata %union.tree_node* %call252, metadata !6870, metadata !DIExpression()), !dbg !6884
  br label %if.end612, !dbg !6977

sw.bb253:                                         ; preds = %sw.bb212
  %operands255 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6978
  %36 = load %union.tree_node*, %union.tree_node** %operands255, align 8, !dbg !6978
  %cmp257 = icmp eq %union.tree_node* %36, null, !dbg !6978
  br i1 %cmp257, label %cond.true269, label %lor.lhs.false259, !dbg !6978

lor.lhs.false259:                                 ; preds = %sw.bb253
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6978
  %bf.load264 = load i64, i64* %37, align 8, !dbg !6978
  %bf.cast26724 = and i64 %bf.load264, 131072, !dbg !6978
  %tobool268 = icmp eq i64 %bf.cast26724, 0, !dbg !6978
  br i1 %tobool268, label %cond.false273, label %cond.true269, !dbg !6978

cond.true269:                                     ; preds = %lor.lhs.false259, %sw.bb253
  br label %cond.end278, !dbg !6978

cond.false273:                                    ; preds = %lor.lhs.false259
  %call277 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %36, %union.tree_node* %obj) #8, !dbg !6978
  br label %cond.end278, !dbg !6978

cond.end278:                                      ; preds = %cond.false273, %cond.true269
  %cond279 = phi %union.tree_node* [ %36, %cond.true269 ], [ %call277, %cond.false273 ], !dbg !6978
  call void @llvm.dbg.value(metadata %union.tree_node* %cond279, metadata !6866, metadata !DIExpression()), !dbg !6884
  %arrayidx282 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands255, i64 1, !dbg !6979
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx282, align 8, !dbg !6979
  %cmp283 = icmp eq %union.tree_node* %38, null, !dbg !6979
  br i1 %cmp283, label %cond.true295, label %lor.lhs.false285, !dbg !6979

lor.lhs.false285:                                 ; preds = %cond.end278
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6979
  %bf.load290 = load i64, i64* %39, align 8, !dbg !6979
  %bf.cast29325 = and i64 %bf.load290, 131072, !dbg !6979
  %tobool294 = icmp eq i64 %bf.cast29325, 0, !dbg !6979
  br i1 %tobool294, label %cond.false299, label %cond.true295, !dbg !6979

cond.true295:                                     ; preds = %lor.lhs.false285, %cond.end278
  br label %cond.end304, !dbg !6979

cond.false299:                                    ; preds = %lor.lhs.false285
  %call303 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %38, %union.tree_node* %obj) #8, !dbg !6979
  br label %cond.end304, !dbg !6979

cond.end304:                                      ; preds = %cond.false299, %cond.true295
  %cond305 = phi %union.tree_node* [ %38, %cond.true295 ], [ %call303, %cond.false299 ], !dbg !6979
  call void @llvm.dbg.value(metadata %union.tree_node* %cond305, metadata !6867, metadata !DIExpression()), !dbg !6884
  %40 = load %union.tree_node*, %union.tree_node** %operands255, align 8, !dbg !6980
  %cmp309 = icmp eq %union.tree_node* %cond279, %40, !dbg !6982
  br i1 %cmp309, label %land.lhs.true311, label %if.end318, !dbg !6983

land.lhs.true311:                                 ; preds = %cond.end304
  %41 = load %union.tree_node*, %union.tree_node** %arrayidx282, align 8, !dbg !6984
  %cmp315 = icmp eq %union.tree_node* %cond305, %41, !dbg !6985
  br i1 %cmp315, label %cleanup625, label %if.end318, !dbg !6986

if.end318:                                        ; preds = %land.lhs.true311, %cond.end304
  %type320 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6987
  %42 = load %union.tree_node*, %union.tree_node** %type320, align 8, !dbg !6987
  %call321 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %42, %union.tree_node* %cond279, %union.tree_node* %cond305) #7, !dbg !6987
  call void @llvm.dbg.value(metadata %union.tree_node* %call321, metadata !6870, metadata !DIExpression()), !dbg !6884
  br label %if.end612, !dbg !6988

sw.bb322:                                         ; preds = %sw.bb212
  %operands324 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6989
  %43 = load %union.tree_node*, %union.tree_node** %operands324, align 8, !dbg !6989
  %cmp326 = icmp eq %union.tree_node* %43, null, !dbg !6989
  br i1 %cmp326, label %cond.true338, label %lor.lhs.false328, !dbg !6989

lor.lhs.false328:                                 ; preds = %sw.bb322
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6989
  %bf.load333 = load i64, i64* %44, align 8, !dbg !6989
  %bf.cast33621 = and i64 %bf.load333, 131072, !dbg !6989
  %tobool337 = icmp eq i64 %bf.cast33621, 0, !dbg !6989
  br i1 %tobool337, label %cond.false342, label %cond.true338, !dbg !6989

cond.true338:                                     ; preds = %lor.lhs.false328, %sw.bb322
  br label %cond.end347, !dbg !6989

cond.false342:                                    ; preds = %lor.lhs.false328
  %call346 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %43, %union.tree_node* %obj) #8, !dbg !6989
  br label %cond.end347, !dbg !6989

cond.end347:                                      ; preds = %cond.false342, %cond.true338
  %cond348 = phi %union.tree_node* [ %43, %cond.true338 ], [ %call346, %cond.false342 ], !dbg !6989
  call void @llvm.dbg.value(metadata %union.tree_node* %cond348, metadata !6866, metadata !DIExpression()), !dbg !6884
  %arrayidx351 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands324, i64 1, !dbg !6990
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx351, align 8, !dbg !6990
  %cmp352 = icmp eq %union.tree_node* %45, null, !dbg !6990
  br i1 %cmp352, label %cond.true364, label %lor.lhs.false354, !dbg !6990

lor.lhs.false354:                                 ; preds = %cond.end347
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6990
  %bf.load359 = load i64, i64* %46, align 8, !dbg !6990
  %bf.cast36222 = and i64 %bf.load359, 131072, !dbg !6990
  %tobool363 = icmp eq i64 %bf.cast36222, 0, !dbg !6990
  br i1 %tobool363, label %cond.false368, label %cond.true364, !dbg !6990

cond.true364:                                     ; preds = %lor.lhs.false354, %cond.end347
  br label %cond.end373, !dbg !6990

cond.false368:                                    ; preds = %lor.lhs.false354
  %call372 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %45, %union.tree_node* %obj) #8, !dbg !6990
  br label %cond.end373, !dbg !6990

cond.end373:                                      ; preds = %cond.false368, %cond.true364
  %cond374 = phi %union.tree_node* [ %45, %cond.true364 ], [ %call372, %cond.false368 ], !dbg !6990
  call void @llvm.dbg.value(metadata %union.tree_node* %cond374, metadata !6867, metadata !DIExpression()), !dbg !6884
  %arrayidx377 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands324, i64 2, !dbg !6991
  %47 = load %union.tree_node*, %union.tree_node** %arrayidx377, align 8, !dbg !6991
  %cmp378 = icmp eq %union.tree_node* %47, null, !dbg !6991
  br i1 %cmp378, label %cond.true390, label %lor.lhs.false380, !dbg !6991

lor.lhs.false380:                                 ; preds = %cond.end373
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6991
  %bf.load385 = load i64, i64* %48, align 8, !dbg !6991
  %bf.cast38823 = and i64 %bf.load385, 131072, !dbg !6991
  %tobool389 = icmp eq i64 %bf.cast38823, 0, !dbg !6991
  br i1 %tobool389, label %cond.false394, label %cond.true390, !dbg !6991

cond.true390:                                     ; preds = %lor.lhs.false380, %cond.end373
  br label %cond.end399, !dbg !6991

cond.false394:                                    ; preds = %lor.lhs.false380
  %call398 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %47, %union.tree_node* %obj) #8, !dbg !6991
  br label %cond.end399, !dbg !6991

cond.end399:                                      ; preds = %cond.false394, %cond.true390
  %cond400 = phi %union.tree_node* [ %47, %cond.true390 ], [ %call398, %cond.false394 ], !dbg !6991
  call void @llvm.dbg.value(metadata %union.tree_node* %cond400, metadata !6868, metadata !DIExpression()), !dbg !6884
  %49 = load %union.tree_node*, %union.tree_node** %operands324, align 8, !dbg !6992
  %cmp404 = icmp eq %union.tree_node* %cond348, %49, !dbg !6994
  br i1 %cmp404, label %land.lhs.true406, label %if.end419, !dbg !6995

land.lhs.true406:                                 ; preds = %cond.end399
  %50 = load %union.tree_node*, %union.tree_node** %arrayidx351, align 8, !dbg !6996
  %cmp410 = icmp eq %union.tree_node* %cond374, %50, !dbg !6997
  br i1 %cmp410, label %land.lhs.true412, label %if.end419, !dbg !6998

land.lhs.true412:                                 ; preds = %land.lhs.true406
  %51 = load %union.tree_node*, %union.tree_node** %arrayidx377, align 8, !dbg !6999
  %cmp416 = icmp eq %union.tree_node* %cond400, %51, !dbg !7000
  br i1 %cmp416, label %cleanup625, label %if.end419, !dbg !7001

if.end419:                                        ; preds = %land.lhs.true412, %land.lhs.true406, %cond.end399
  %type421 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7002
  %52 = load %union.tree_node*, %union.tree_node** %type421, align 8, !dbg !7002
  %call422 = tail call %union.tree_node* @fold_build3_stat_loc(i32 0, i32 %bf.cast, %union.tree_node* %52, %union.tree_node* %cond348, %union.tree_node* %cond374, %union.tree_node* %cond400) #7, !dbg !7002
  call void @llvm.dbg.value(metadata %union.tree_node* %call422, metadata !6870, metadata !DIExpression()), !dbg !6884
  br label %if.end612, !dbg !7003

sw.bb423:                                         ; preds = %sw.bb212
  %operands425 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7004
  %53 = load %union.tree_node*, %union.tree_node** %operands425, align 8, !dbg !7004
  %cmp427 = icmp eq %union.tree_node* %53, null, !dbg !7004
  br i1 %cmp427, label %cond.true439, label %lor.lhs.false429, !dbg !7004

lor.lhs.false429:                                 ; preds = %sw.bb423
  %54 = getelementptr inbounds %union.tree_node, %union.tree_node* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7004
  %bf.load434 = load i64, i64* %54, align 8, !dbg !7004
  %bf.cast43717 = and i64 %bf.load434, 131072, !dbg !7004
  %tobool438 = icmp eq i64 %bf.cast43717, 0, !dbg !7004
  br i1 %tobool438, label %cond.false443, label %cond.true439, !dbg !7004

cond.true439:                                     ; preds = %lor.lhs.false429, %sw.bb423
  br label %cond.end448, !dbg !7004

cond.false443:                                    ; preds = %lor.lhs.false429
  %call447 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %53, %union.tree_node* %obj) #8, !dbg !7004
  br label %cond.end448, !dbg !7004

cond.end448:                                      ; preds = %cond.false443, %cond.true439
  %cond449 = phi %union.tree_node* [ %53, %cond.true439 ], [ %call447, %cond.false443 ], !dbg !7004
  call void @llvm.dbg.value(metadata %union.tree_node* %cond449, metadata !6866, metadata !DIExpression()), !dbg !6884
  %arrayidx452 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands425, i64 1, !dbg !7005
  %55 = load %union.tree_node*, %union.tree_node** %arrayidx452, align 8, !dbg !7005
  %cmp453 = icmp eq %union.tree_node* %55, null, !dbg !7005
  br i1 %cmp453, label %cond.true465, label %lor.lhs.false455, !dbg !7005

lor.lhs.false455:                                 ; preds = %cond.end448
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7005
  %bf.load460 = load i64, i64* %56, align 8, !dbg !7005
  %bf.cast46318 = and i64 %bf.load460, 131072, !dbg !7005
  %tobool464 = icmp eq i64 %bf.cast46318, 0, !dbg !7005
  br i1 %tobool464, label %cond.false469, label %cond.true465, !dbg !7005

cond.true465:                                     ; preds = %lor.lhs.false455, %cond.end448
  br label %cond.end474, !dbg !7005

cond.false469:                                    ; preds = %lor.lhs.false455
  %call473 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %55, %union.tree_node* %obj) #8, !dbg !7005
  br label %cond.end474, !dbg !7005

cond.end474:                                      ; preds = %cond.false469, %cond.true465
  %cond475 = phi %union.tree_node* [ %55, %cond.true465 ], [ %call473, %cond.false469 ], !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %cond475, metadata !6867, metadata !DIExpression()), !dbg !6884
  %arrayidx478 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands425, i64 2, !dbg !7006
  %57 = load %union.tree_node*, %union.tree_node** %arrayidx478, align 8, !dbg !7006
  %cmp479 = icmp eq %union.tree_node* %57, null, !dbg !7006
  br i1 %cmp479, label %cond.true491, label %lor.lhs.false481, !dbg !7006

lor.lhs.false481:                                 ; preds = %cond.end474
  %58 = getelementptr inbounds %union.tree_node, %union.tree_node* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7006
  %bf.load486 = load i64, i64* %58, align 8, !dbg !7006
  %bf.cast48919 = and i64 %bf.load486, 131072, !dbg !7006
  %tobool490 = icmp eq i64 %bf.cast48919, 0, !dbg !7006
  br i1 %tobool490, label %cond.false495, label %cond.true491, !dbg !7006

cond.true491:                                     ; preds = %lor.lhs.false481, %cond.end474
  br label %cond.end500, !dbg !7006

cond.false495:                                    ; preds = %lor.lhs.false481
  %call499 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %57, %union.tree_node* %obj) #8, !dbg !7006
  br label %cond.end500, !dbg !7006

cond.end500:                                      ; preds = %cond.false495, %cond.true491
  %cond501 = phi %union.tree_node* [ %57, %cond.true491 ], [ %call499, %cond.false495 ], !dbg !7006
  call void @llvm.dbg.value(metadata %union.tree_node* %cond501, metadata !6868, metadata !DIExpression()), !dbg !6884
  %arrayidx504 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands425, i64 3, !dbg !7007
  %59 = load %union.tree_node*, %union.tree_node** %arrayidx504, align 8, !dbg !7007
  %cmp505 = icmp eq %union.tree_node* %59, null, !dbg !7007
  br i1 %cmp505, label %cond.true517, label %lor.lhs.false507, !dbg !7007

lor.lhs.false507:                                 ; preds = %cond.end500
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7007
  %bf.load512 = load i64, i64* %60, align 8, !dbg !7007
  %bf.cast51520 = and i64 %bf.load512, 131072, !dbg !7007
  %tobool516 = icmp eq i64 %bf.cast51520, 0, !dbg !7007
  br i1 %tobool516, label %cond.false521, label %cond.true517, !dbg !7007

cond.true517:                                     ; preds = %lor.lhs.false507, %cond.end500
  br label %cond.end526, !dbg !7007

cond.false521:                                    ; preds = %lor.lhs.false507
  %call525 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %59, %union.tree_node* %obj) #8, !dbg !7007
  br label %cond.end526, !dbg !7007

cond.end526:                                      ; preds = %cond.false521, %cond.true517
  %cond527 = phi %union.tree_node* [ %59, %cond.true517 ], [ %call525, %cond.false521 ], !dbg !7007
  call void @llvm.dbg.value(metadata %union.tree_node* %cond527, metadata !6869, metadata !DIExpression()), !dbg !6884
  %61 = load %union.tree_node*, %union.tree_node** %operands425, align 8, !dbg !7008
  %cmp531 = icmp eq %union.tree_node* %cond449, %61, !dbg !7010
  br i1 %cmp531, label %land.lhs.true533, label %if.end552, !dbg !7011

land.lhs.true533:                                 ; preds = %cond.end526
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx452, align 8, !dbg !7012
  %cmp537 = icmp eq %union.tree_node* %cond475, %62, !dbg !7013
  br i1 %cmp537, label %land.lhs.true539, label %if.end552, !dbg !7014

land.lhs.true539:                                 ; preds = %land.lhs.true533
  %63 = load %union.tree_node*, %union.tree_node** %arrayidx478, align 8, !dbg !7015
  %cmp543 = icmp eq %union.tree_node* %cond501, %63, !dbg !7016
  br i1 %cmp543, label %land.lhs.true545, label %if.end552, !dbg !7017

land.lhs.true545:                                 ; preds = %land.lhs.true539
  %64 = load %union.tree_node*, %union.tree_node** %arrayidx504, align 8, !dbg !7018
  %cmp549 = icmp eq %union.tree_node* %cond527, %64, !dbg !7019
  br i1 %cmp549, label %cleanup625, label %if.end552, !dbg !7020

if.end552:                                        ; preds = %land.lhs.true545, %land.lhs.true539, %land.lhs.true533, %cond.end526
  %type554 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7021
  %65 = load %union.tree_node*, %union.tree_node** %type554, align 8, !dbg !7021
  %call555 = tail call %union.tree_node* @build4_stat(i32 %bf.cast, %union.tree_node* %65, %union.tree_node* %cond449, %union.tree_node* %cond475, %union.tree_node* %cond501, %union.tree_node* %cond527) #8, !dbg !7021
  %call556 = tail call %union.tree_node* @fold(%union.tree_node* %call555) #7, !dbg !7022
  call void @llvm.dbg.value(metadata %union.tree_node* %call556, metadata !6870, metadata !DIExpression()), !dbg !6884
  br label %if.end612, !dbg !7023

sw.default:                                       ; preds = %sw.bb212
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3272, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7024
  br label %if.end612, !dbg !7025

for.cond558:                                      ; preds = %for.cond558.preheader, %for.inc593
  %indvars.iv = phi i64 [ 1, %for.cond558.preheader ], [ %indvars.iv.next, %for.inc593 ], !dbg !7026
  %new_tree.1 = phi %union.tree_node* [ null, %for.cond558.preheader ], [ %new_tree.3, %for.inc593 ], !dbg !7026
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6875, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.1, metadata !6870, metadata !DIExpression()), !dbg !6884
  %call559 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %exp) #8, !dbg !7028
  %66 = sext i32 %call559 to i64, !dbg !7029
  %cmp560 = icmp slt i64 %indvars.iv, %66, !dbg !7029
  br i1 %cmp560, label %for.body562, label %for.end594, !dbg !6967

for.body562:                                      ; preds = %for.cond558
  %arrayidx566 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands564, i64 %indvars.iv, !dbg !7030
  %67 = load %union.tree_node*, %union.tree_node** %arrayidx566, align 8, !dbg !7030
  call void @llvm.dbg.value(metadata %union.tree_node* %67, metadata !6879, metadata !DIExpression()), !dbg !6966
  %cmp567 = icmp eq %union.tree_node* %67, null, !dbg !7031
  br i1 %cmp567, label %cond.end579, label %lor.lhs.false569, !dbg !7031

lor.lhs.false569:                                 ; preds = %for.body562
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7031
  %bf.load571 = load i64, i64* %68, align 8, !dbg !7031
  %bf.cast57415 = and i64 %bf.load571, 131072, !dbg !7031
  %tobool575 = icmp eq i64 %bf.cast57415, 0, !dbg !7031
  br i1 %tobool575, label %cond.false577, label %cond.end579, !dbg !7031

cond.false577:                                    ; preds = %lor.lhs.false569
  %call578 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %67, %union.tree_node* %obj) #8, !dbg !7031
  br label %cond.end579, !dbg !7031

cond.end579:                                      ; preds = %lor.lhs.false569, %for.body562, %cond.false577
  %cond580 = phi %union.tree_node* [ %call578, %cond.false577 ], [ %67, %lor.lhs.false569 ], [ null, %for.body562 ], !dbg !7031
  call void @llvm.dbg.value(metadata %union.tree_node* %cond580, metadata !6883, metadata !DIExpression()), !dbg !6966
  %cmp581 = icmp eq %union.tree_node* %cond580, %67, !dbg !7032
  br i1 %cmp581, label %for.inc593, label %if.then583, !dbg !7034

if.then583:                                       ; preds = %cond.end579
  %tobool584 = icmp eq %union.tree_node* %new_tree.1, null, !dbg !7035
  br i1 %tobool584, label %if.then585, label %if.end587, !dbg !7038

if.then585:                                       ; preds = %if.then583
  %call586 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %exp) #8, !dbg !7039
  call void @llvm.dbg.value(metadata %union.tree_node* %call586, metadata !6870, metadata !DIExpression()), !dbg !6884
  br label %if.end587, !dbg !7040

if.end587:                                        ; preds = %if.then583, %if.then585
  %new_tree.2 = phi %union.tree_node* [ %new_tree.1, %if.then583 ], [ %call586, %if.then585 ], !dbg !7027
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.2, metadata !6870, metadata !DIExpression()), !dbg !6884
  %operands589 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_tree.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7041
  %arrayidx591 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands589, i64 %indvars.iv, !dbg !7041
  store %union.tree_node* %cond580, %union.tree_node** %arrayidx591, align 8, !dbg !7042
  br label %for.inc593, !dbg !7043

for.inc593:                                       ; preds = %cond.end579, %if.end587
  %new_tree.3 = phi %union.tree_node* [ %new_tree.2, %if.end587 ], [ %new_tree.1, %cond.end579 ], !dbg !7026
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.3, metadata !6870, metadata !DIExpression()), !dbg !6884
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7044
  call void @llvm.dbg.value(metadata i32 undef, metadata !6875, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7027
  br label %for.cond558, !dbg !7045, !llvm.loop !7046

for.end594:                                       ; preds = %for.cond558
  %new_tree.1.lcssa = phi %union.tree_node* [ %new_tree.1, %for.cond558 ], !dbg !7026
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.1.lcssa, metadata !6870, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.1.lcssa, metadata !6870, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.1.lcssa, metadata !6870, metadata !DIExpression()), !dbg !6884
  %tobool595 = icmp eq %union.tree_node* %new_tree.1.lcssa, null, !dbg !7048
  br i1 %tobool595, label %cleanup608, label %if.then596, !dbg !7050

if.then596:                                       ; preds = %for.end594
  %call597 = tail call %union.tree_node* @fold(%union.tree_node* nonnull %new_tree.1.lcssa) #7, !dbg !7051
  call void @llvm.dbg.value(metadata %union.tree_node* %call597, metadata !6870, metadata !DIExpression()), !dbg !6884
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call597, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7053
  %bf.load599 = load i64, i64* %69, align 8, !dbg !7053
  %bf.cast60114 = and i64 %bf.load599, 65535, !dbg !7055
  %cmp602 = icmp eq i64 %bf.cast60114, 59, !dbg !7055
  br i1 %cmp602, label %if.then604, label %cleanup608, !dbg !7056

if.then604:                                       ; preds = %if.then596
  tail call fastcc void @process_call_operands(%union.tree_node* %call597) #8, !dbg !7057
  br label %cleanup608, !dbg !7057

cleanup608:                                       ; preds = %for.end594, %if.then604, %if.then596
  %new_tree.4 = phi %union.tree_node* [ null, %for.end594 ], [ %call597, %if.then596 ], [ %call597, %if.then604 ], !dbg !7027
  %cleanup.dest.slot.0 = phi i1 [ false, %for.end594 ], [ true, %if.then596 ], [ true, %if.then604 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.4, metadata !6870, metadata !DIExpression()), !dbg !6884
  br i1 %cleanup.dest.slot.0, label %if.end612, label %cleanup625

sw.default609:                                    ; preds = %if.else209
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3306, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7058
  br label %if.end612, !dbg !7059

if.end612:                                        ; preds = %cleanup608, %if.end249, %if.end318, %if.end419, %if.end552, %sw.default, %sw.default609
  %new_tree.5 = phi %union.tree_node* [ undef, %sw.default609 ], [ undef, %sw.default ], [ %call556, %if.end552 ], [ %call422, %if.end419 ], [ %call321, %if.end318 ], [ %call252, %if.end249 ], [ %new_tree.4, %cleanup608 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree.5, metadata !6870, metadata !DIExpression()), !dbg !6884
  %bf.load614 = load i64, i64* %0, align 8, !dbg !7060
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_tree.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7061
  %bf.load619 = load i64, i64* %70, align 8, !dbg !7062
  %71 = and i64 %bf.load614, 1048576, !dbg !7062
  %bf.set = or i64 %71, %bf.load619, !dbg !7062
  store i64 %bf.set, i64* %70, align 8, !dbg !7062
  br label %cleanup625, !dbg !7063

cleanup625.loopexit:                              ; preds = %for.cond65
  br label %cleanup625, !dbg !7064

cleanup625.loopexit27:                            ; preds = %for.body
  %elt.0.lcssa34 = phi %union.tree_node* [ %elt.0, %for.body ], !dbg !6891
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.0.lcssa34, metadata !6874, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.0.lcssa34, metadata !6874, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.0.lcssa34, metadata !6874, metadata !DIExpression()), !dbg !6888
  br label %cleanup625, !dbg !7064

cleanup625:                                       ; preds = %cleanup625.loopexit27, %cleanup625.loopexit, %land.lhs.true545, %land.lhs.true412, %land.lhs.true311, %cond.end241, %sw.bb212, %if.else209, %if.else209, %land.lhs.true201, %if.then90, %cleanup608, %if.end612, %if.end206
  %retval.2 = phi %union.tree_node* [ %call208, %if.end206 ], [ %new_tree.5, %if.end612 ], [ %exp, %cleanup608 ], [ %call, %if.then90 ], [ %exp, %land.lhs.true201 ], [ %exp, %if.else209 ], [ %exp, %if.else209 ], [ %exp, %sw.bb212 ], [ %exp, %cond.end241 ], [ %exp, %land.lhs.true311 ], [ %exp, %land.lhs.true412 ], [ %exp, %land.lhs.true545 ], [ %exp, %cleanup625.loopexit ], [ %elt.0.lcssa34, %cleanup625.loopexit27 ]
  ret %union.tree_node* %retval.2, !dbg !7064
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @stabilize_reference(%union.tree_node* %ref) local_unnamed_addr #5 !dbg !7065 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !7067, metadata !DIExpression()), !dbg !7070
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7071
  %bf.load = load i64, i64* %0, align 8, !dbg !7071
  call void @llvm.dbg.value(metadata i32 undef, metadata !7069, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !7070
  %trunc = trunc i64 %bf.load to i16, !dbg !7072
  switch i16 %trunc, label %cleanup [
    i16 0, label %sw.bb66
    i16 52, label %sw.bb64
    i16 46, label %sw.bb48
    i16 116, label %sw.bb1
    i16 113, label %sw.bb1
    i16 78, label %sw.bb1
    i16 77, label %sw.bb1
    i16 47, label %sw.bb3
    i16 41, label %sw.bb9
    i16 42, label %sw.bb18
    i16 45, label %sw.bb32
  ], !dbg !7072

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry
  %1 = trunc i64 %bf.load to i32, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %1, metadata !7069, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !7070
  %bf.cast = and i32 %1, 65535, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7069, metadata !DIExpression()), !dbg !7070
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7073
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7073
  %call = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %2) #8, !dbg !7075
  %call2 = tail call %union.tree_node* (i32, ...) @build_nt(i32 %bf.cast, %union.tree_node* %call) #8, !dbg !7076
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7068, metadata !DIExpression()), !dbg !7070
  br label %sw.epilog, !dbg !7077

sw.bb3:                                           ; preds = %entry
  %operands5 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7078
  %3 = load %union.tree_node*, %union.tree_node** %operands5, align 8, !dbg !7078
  %call7 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %3) #8, !dbg !7079
  %call8 = tail call %union.tree_node* (i32, ...) @build_nt(i32 47, %union.tree_node* %call7) #8, !dbg !7080
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !7068, metadata !DIExpression()), !dbg !7070
  br label %sw.epilog, !dbg !7081

sw.bb9:                                           ; preds = %entry
  %operands11 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7082
  %4 = load %union.tree_node*, %union.tree_node** %operands11, align 8, !dbg !7082
  %call13 = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %4) #8, !dbg !7083
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands11, i64 1, !dbg !7084
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8, !dbg !7084
  %call17 = tail call %union.tree_node* (i32, ...) @build_nt(i32 41, %union.tree_node* %call13, %union.tree_node* %5, %union.tree_node* null) #8, !dbg !7085
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !7068, metadata !DIExpression()), !dbg !7070
  br label %sw.epilog, !dbg !7086

sw.bb18:                                          ; preds = %entry
  %operands20 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7087
  %6 = load %union.tree_node*, %union.tree_node** %operands20, align 8, !dbg !7087
  %call22 = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %6) #8, !dbg !7088
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands20, i64 1, !dbg !7089
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8, !dbg !7089
  %call26 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %7) #8, !dbg !7090
  %arrayidx29 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands20, i64 2, !dbg !7091
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8, !dbg !7091
  %call30 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %8) #8, !dbg !7092
  %call31 = tail call %union.tree_node* (i32, ...) @build_nt(i32 42, %union.tree_node* %call22, %union.tree_node* %call26, %union.tree_node* %call30) #8, !dbg !7093
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !7068, metadata !DIExpression()), !dbg !7070
  br label %sw.epilog, !dbg !7094

sw.bb32:                                          ; preds = %entry
  %operands34 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7095
  %9 = load %union.tree_node*, %union.tree_node** %operands34, align 8, !dbg !7095
  %call36 = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %9) #8, !dbg !7096
  %arrayidx39 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands34, i64 1, !dbg !7097
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx39, align 8, !dbg !7097
  %call40 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %10) #8, !dbg !7098
  %arrayidx43 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands34, i64 2, !dbg !7099
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx43, align 8, !dbg !7099
  %arrayidx46 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands34, i64 3, !dbg !7100
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx46, align 8, !dbg !7100
  %call47 = tail call %union.tree_node* (i32, ...) @build_nt(i32 45, %union.tree_node* %call36, %union.tree_node* %call40, %union.tree_node* %11, %union.tree_node* %12) #8, !dbg !7101
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !7068, metadata !DIExpression()), !dbg !7070
  br label %sw.epilog, !dbg !7102

sw.bb48:                                          ; preds = %entry
  %operands50 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7103
  %13 = load %union.tree_node*, %union.tree_node** %operands50, align 8, !dbg !7103
  %call52 = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %13) #8, !dbg !7104
  %arrayidx55 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands50, i64 1, !dbg !7105
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8, !dbg !7105
  %call56 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %14) #8, !dbg !7106
  %arrayidx59 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands50, i64 2, !dbg !7107
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx59, align 8, !dbg !7107
  %arrayidx62 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands50, i64 3, !dbg !7108
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx62, align 8, !dbg !7108
  %call63 = tail call %union.tree_node* (i32, ...) @build_nt(i32 46, %union.tree_node* %call52, %union.tree_node* %call56, %union.tree_node* %15, %union.tree_node* %16) #8, !dbg !7109
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !7068, metadata !DIExpression()), !dbg !7070
  br label %sw.epilog, !dbg !7110

sw.bb64:                                          ; preds = %entry
  %call65 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %ref) #8, !dbg !7111
  br label %cleanup, !dbg !7112

sw.bb66:                                          ; preds = %entry
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7113
  br label %cleanup, !dbg !7114

sw.epilog:                                        ; preds = %sw.bb48, %sw.bb32, %sw.bb18, %sw.bb9, %sw.bb3, %sw.bb1
  %result.0 = phi %union.tree_node* [ %call63, %sw.bb48 ], [ %call47, %sw.bb32 ], [ %call31, %sw.bb18 ], [ %call17, %sw.bb9 ], [ %call8, %sw.bb3 ], [ %call2, %sw.bb1 ], !dbg !7115
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !7068, metadata !DIExpression()), !dbg !7070
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7116
  %18 = bitcast %union.tree_node** %type to i64*, !dbg !7116
  %19 = load i64, i64* %18, align 8, !dbg !7116
  %type68 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7117
  %20 = bitcast %union.tree_node** %type68 to i64*, !dbg !7118
  store i64 %19, i64* %20, align 8, !dbg !7118
  %bf.load70 = load i64, i64* %0, align 8, !dbg !7119
  %bf.cast72 = and i64 %bf.load70, 1048576, !dbg !7119
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7120
  %bf.load74 = load i64, i64* %21, align 8, !dbg !7121
  %bf.clear75 = and i64 %bf.load74, -1048577, !dbg !7121
  %bf.set = or i64 %bf.clear75, %bf.cast72, !dbg !7121
  store i64 %bf.set, i64* %21, align 8, !dbg !7121
  %bf.load77 = load i64, i64* %0, align 8, !dbg !7122
  %bf.cast80 = and i64 %bf.load77, 65536, !dbg !7122
  %bf.clear85 = and i64 %bf.set, -65537, !dbg !7123
  %bf.set86 = or i64 %bf.clear85, %bf.cast80, !dbg !7123
  store i64 %bf.set86, i64* %21, align 8, !dbg !7123
  %bf.load89 = load i64, i64* %0, align 8, !dbg !7124
  %bf.cast92 = and i64 %bf.load89, 524288, !dbg !7124
  %bf.clear97 = and i64 %bf.set86, -524289, !dbg !7125
  %bf.set98 = or i64 %bf.clear97, %bf.cast92, !dbg !7125
  store i64 %bf.set98, i64* %21, align 8, !dbg !7125
  br label %cleanup, !dbg !7126

cleanup:                                          ; preds = %entry, %sw.epilog, %sw.bb66, %sw.bb64
  %retval.0 = phi %union.tree_node* [ %17, %sw.bb66 ], [ %call65, %sw.bb64 ], [ %result.0, %sw.epilog ], [ %ref, %entry ], !dbg !7070
  ret %union.tree_node* %retval.0, !dbg !7127
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_nt(i32 %code, ...) local_unnamed_addr #5 !dbg !7128 {
entry:
  %p = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i32 %code, metadata !7132, metadata !DIExpression()), !dbg !7143
  %0 = bitcast [1 x %struct.__va_list_tag]* %p to i8*, !dbg !7144
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !7144
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %p, metadata !7136, metadata !DIExpression()), !dbg !7145
  %cmp = icmp eq i32 %code, 59, !dbg !7146
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7146

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7146
  br label %cond.end, !dbg !7146

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.va_start(i8* %0), !dbg !7147
  %call = call %union.tree_node* @make_node_stat(i32 %code) #8, !dbg !7148
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7133, metadata !DIExpression()), !dbg !7143
  %idxprom2 = sext i32 %code to i64, !dbg !7149
  %arrayidx3 = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom2, !dbg !7149
  %1 = load i8, i8* %arrayidx3, align 1, !dbg !7149
  call void @llvm.dbg.value(metadata i8 %1, metadata !7134, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.value(metadata i32 0, metadata !7135, metadata !DIExpression()), !dbg !7143
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 0, !dbg !7150
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 2, !dbg !7150
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, i32 3, !dbg !7150
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7150
  %wide.trip.count = zext i8 %1 to i64, !dbg !7153
  br label %for.cond, !dbg !7154

for.cond:                                         ; preds = %vaarg.end, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %vaarg.end ], [ 0, %cond.end ], !dbg !7155
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7135, metadata !DIExpression()), !dbg !7143
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !7153
  br i1 %exitcond, label %for.end, label %for.body, !dbg !7156

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !7157
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !7157
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !7157

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %2, align 16, !dbg !7157
  %3 = sext i32 %gp_offset to i64, !dbg !7157
  %4 = getelementptr i8, i8* %reg_save_area, i64 %3, !dbg !7157
  %5 = add i32 %gp_offset, 8, !dbg !7157
  store i32 %5, i32* %gp_offset_p, align 16, !dbg !7157
  br label %vaarg.end, !dbg !7157

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !7157
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !7157
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !7157
  br label %vaarg.end, !dbg !7157

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %4, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %6 = bitcast i8* %vaarg.addr.in to i64*, !dbg !7157
  %7 = load i64, i64* %6, align 8, !dbg !7157
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !7158
  %8 = bitcast %union.tree_node** %arrayidx8 to i64*, !dbg !7159
  store i64 %7, i64* %8, align 8, !dbg !7159
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7160
  call void @llvm.dbg.value(metadata i32 undef, metadata !7135, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7143
  br label %for.cond, !dbg !7161, !llvm.loop !7162

for.end:                                          ; preds = %for.cond
  call void @llvm.va_end(i8* nonnull %0), !dbg !7164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !7165
  ret %union.tree_node* %call, !dbg !7166
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @stabilize_reference_1(%union.tree_node* %e) local_unnamed_addr #5 !dbg !7167 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %e, metadata !7169, metadata !DIExpression()), !dbg !7172
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %e, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7173
  %bf.load = load i64, i64* %0, align 8, !dbg !7173
  %1 = trunc i64 %bf.load to i32, !dbg !7173
  %bf.cast = and i32 %1, 65535, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7171, metadata !DIExpression()), !dbg !7172
  %call = tail call fastcc zeroext i8 @tree_invariant_p(%union.tree_node* %e) #8, !dbg !7174
  %tobool = icmp eq i8 %call, 0, !dbg !7174
  br i1 %tobool, label %if.end, label %cleanup, !dbg !7176

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %bf.cast to i64, !dbg !7177
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !7177
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7177
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 5, label %sw.bb
    i32 8, label %sw.bb
    i32 10, label %sw.bb
    i32 4, label %sw.bb
    i32 9, label %sw.bb
    i32 1, label %cleanup
    i32 7, label %sw.bb10
    i32 6, label %sw.bb34
  ], !dbg !7178

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %bf.load2 = load i64, i64* %0, align 8, !dbg !7179
  %bf.cast41 = and i64 %bf.load2, 65536, !dbg !7179
  %tobool5 = icmp eq i64 %bf.cast41, 0, !dbg !7179
  br i1 %tobool5, label %cleanup, label %if.then6, !dbg !7182

if.then6:                                         ; preds = %sw.bb
  %call7 = tail call %union.tree_node* @save_expr(%union.tree_node* %e) #8, !dbg !7183
  br label %cleanup, !dbg !7184

sw.bb10:                                          ; preds = %if.end
  %bf.cast.off = add nsw i32 %bf.cast, -67, !dbg !7185
  %switch = icmp ult i32 %bf.cast.off, 8, !dbg !7185
  br i1 %switch, label %if.then24, label %if.end26, !dbg !7185

if.then24:                                        ; preds = %sw.bb10
  %call25 = tail call %union.tree_node* @save_expr(%union.tree_node* %e) #8, !dbg !7187
  br label %cleanup, !dbg !7188

if.end26:                                         ; preds = %sw.bb10
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %e, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7189
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7189
  %call28 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %3) #8, !dbg !7190
  %arrayidx31 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7191
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8, !dbg !7191
  %call32 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %4) #8, !dbg !7192
  %call33 = tail call %union.tree_node* (i32, ...) @build_nt(i32 %bf.cast, %union.tree_node* %call28, %union.tree_node* %call32) #8, !dbg !7193
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !7170, metadata !DIExpression()), !dbg !7172
  br label %sw.epilog, !dbg !7194

sw.bb34:                                          ; preds = %if.end
  %operands36 = getelementptr inbounds %union.tree_node, %union.tree_node* %e, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7195
  %5 = load %union.tree_node*, %union.tree_node** %operands36, align 8, !dbg !7195
  %call38 = tail call %union.tree_node* @stabilize_reference_1(%union.tree_node* %5) #8, !dbg !7196
  %call39 = tail call %union.tree_node* (i32, ...) @build_nt(i32 %bf.cast, %union.tree_node* %call38) #8, !dbg !7197
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !7170, metadata !DIExpression()), !dbg !7172
  br label %sw.epilog, !dbg !7198

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3466, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7199
  br label %sw.epilog, !dbg !7200

sw.epilog:                                        ; preds = %sw.default, %sw.bb34, %if.end26
  %result.0 = phi %union.tree_node* [ undef, %sw.default ], [ %call39, %sw.bb34 ], [ %call33, %if.end26 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !7170, metadata !DIExpression()), !dbg !7172
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %e, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7201
  %6 = bitcast %union.tree_node** %type to i64*, !dbg !7201
  %7 = load i64, i64* %6, align 8, !dbg !7201
  %type41 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7202
  %8 = bitcast %union.tree_node** %type41 to i64*, !dbg !7203
  store i64 %7, i64* %8, align 8, !dbg !7203
  %bf.load43 = load i64, i64* %0, align 8, !dbg !7204
  %bf.cast46 = and i64 %bf.load43, 1048576, !dbg !7204
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7205
  %bf.load48 = load i64, i64* %9, align 8, !dbg !7206
  %bf.clear49 = and i64 %bf.load48, -1048577, !dbg !7206
  %bf.set = or i64 %bf.clear49, %bf.cast46, !dbg !7206
  store i64 %bf.set, i64* %9, align 8, !dbg !7206
  %bf.load51 = load i64, i64* %0, align 8, !dbg !7207
  %bf.cast54 = and i64 %bf.load51, 65536, !dbg !7207
  %bf.clear59 = and i64 %bf.set, -65537, !dbg !7208
  %bf.set60 = or i64 %bf.clear59, %bf.cast54, !dbg !7208
  store i64 %bf.set60, i64* %9, align 8, !dbg !7208
  %bf.load63 = load i64, i64* %0, align 8, !dbg !7209
  %bf.cast66 = and i64 %bf.load63, 524288, !dbg !7209
  %bf.clear71 = and i64 %bf.set60, -524289, !dbg !7210
  %bf.set72 = or i64 %bf.clear71, %bf.cast66, !dbg !7210
  store i64 %bf.set72, i64* %9, align 8, !dbg !7210
  br label %cleanup, !dbg !7211

cleanup:                                          ; preds = %sw.bb, %entry, %if.end, %sw.epilog, %if.then24, %if.then6
  %retval.0 = phi %union.tree_node* [ %result.0, %sw.epilog ], [ %call25, %if.then24 ], [ %call7, %if.then6 ], [ %e, %entry ], [ %e, %sw.bb ], [ %e, %if.end ], !dbg !7172
  ret %union.tree_node* %retval.0, !dbg !7212
}

; Function Attrs: nounwind uwtable
define dso_local void @recompute_tree_invariant_for_addr_expr(%union.tree_node* %t) local_unnamed_addr #5 !dbg !7213 {
entry:
  %tc = alloca i8, align 1
  %se = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7215, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.value(metadata i8* %tc, metadata !7217, metadata !DIExpression(DW_OP_deref)), !dbg !7243
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %tc) #6, !dbg !7244
  call void @llvm.dbg.value(metadata i8 1, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 1, i8* %tc, align 1, !dbg !7245
  call void @llvm.dbg.value(metadata i8* %se, metadata !7218, metadata !DIExpression(DW_OP_deref)), !dbg !7243
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %se) #6, !dbg !7244
  call void @llvm.dbg.value(metadata i8 0, metadata !7218, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %se, align 1, !dbg !7246
  br label %for.cond, !dbg !7247

for.cond:                                         ; preds = %for.inc, %entry
  %t.pn = phi %union.tree_node* [ %t, %entry ], [ %node.0, %for.inc ]
  %node.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %t.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7248
  %node.0 = load %union.tree_node*, %union.tree_node** %node.0.in, align 8, !dbg !7248
  call void @llvm.dbg.value(metadata %union.tree_node* %node.0, metadata !7216, metadata !DIExpression()), !dbg !7243
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %node.0) #8, !dbg !7249
  %tobool = icmp eq i8 %call, 0, !dbg !7250
  br i1 %tobool, label %for.end, label %for.body, !dbg !7250

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7251
  %bf.load = load i64, i64* %0, align 8, !dbg !7251
  %bf.cast14 = and i64 %bf.load, 65535, !dbg !7252
  %cmp = icmp eq i64 %bf.cast14, 45, !dbg !7252
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7253

lor.lhs.false:                                    ; preds = %for.body
  %cmp5 = icmp eq i64 %bf.cast14, 46, !dbg !7254
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !7255

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %operands7 = getelementptr inbounds %union.tree_node, %union.tree_node* %node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7256
  %1 = bitcast %union.tree_node** %operands7 to %struct.tree_common**, !dbg !7256
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !7256
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !7256
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !7256
  %4 = load i64*, i64** %3, align 8, !dbg !7256
  %bf.load10 = load i64, i64* %4, align 8, !dbg !7256
  %bf.cast1223 = and i64 %bf.load10, 65535, !dbg !7257
  %cmp13 = icmp eq i64 %bf.cast1223, 15, !dbg !7257
  br i1 %cmp13, label %do.body, label %if.else, !dbg !7258

do.body:                                          ; preds = %land.lhs.true
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands7, i64 1, !dbg !7259
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8, !dbg !7259
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7219, metadata !DIExpression()), !dbg !7260
  %cond = icmp eq %union.tree_node* %5, null, !dbg !7261
  br i1 %cond, label %do.end, label %land.lhs.true18, !dbg !7261

land.lhs.true18:                                  ; preds = %do.body
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7261
  %bf.load20 = load i64, i64* %6, align 8, !dbg !7261
  %bf.cast2224 = and i64 %bf.load20, 131072, !dbg !7261
  %tobool23 = icmp eq i64 %bf.cast2224, 0, !dbg !7261
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !7259

if.then24:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.value(metadata i8 0, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %tc, align 1, !dbg !7261
  br label %if.end, !dbg !7261

if.end:                                           ; preds = %land.lhs.true18, %if.then24
  %bf.cast3129 = and i64 %bf.load20, 65536, !dbg !7263
  %tobool32 = icmp eq i64 %bf.cast3129, 0, !dbg !7263
  br i1 %tobool32, label %do.end, label %if.then33, !dbg !7259

if.then33:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i8 1, metadata !7218, metadata !DIExpression()), !dbg !7243
  store i8 1, i8* %se, align 1, !dbg !7263
  br label %do.end, !dbg !7263

do.end:                                           ; preds = %if.end, %do.body, %if.then33
  %arrayidx37 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands7, i64 2, !dbg !7265
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx37, align 8, !dbg !7265
  %tobool38 = icmp eq %union.tree_node* %7, null, !dbg !7265
  br i1 %tobool38, label %if.end67, label %do.body40, !dbg !7266

do.body40:                                        ; preds = %do.end
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7226, metadata !DIExpression()), !dbg !7267
  br i1 false, label %do.body40.if.end67_crit_edge, label %land.lhs.true46, !dbg !7268

do.body40.if.end67_crit_edge:                     ; preds = %do.body40
  br label %if.end67, !dbg !7268

land.lhs.true46:                                  ; preds = %do.body40
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7268
  %bf.load48 = load i64, i64* %8, align 8, !dbg !7268
  %bf.cast5127 = and i64 %bf.load48, 131072, !dbg !7268
  %tobool52 = icmp eq i64 %bf.cast5127, 0, !dbg !7268
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !7270

if.then53:                                        ; preds = %land.lhs.true46
  call void @llvm.dbg.value(metadata i8 0, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %tc, align 1, !dbg !7268
  br label %if.end54, !dbg !7268

if.end54:                                         ; preds = %land.lhs.true46, %if.then53
  %bf.cast6128 = and i64 %bf.load48, 65536, !dbg !7271
  %tobool62 = icmp eq i64 %bf.cast6128, 0, !dbg !7271
  br i1 %tobool62, label %if.end67, label %if.then63, !dbg !7270

if.then63:                                        ; preds = %if.end54
  call void @llvm.dbg.value(metadata i8 1, metadata !7218, metadata !DIExpression()), !dbg !7243
  store i8 1, i8* %se, align 1, !dbg !7271
  br label %if.end67, !dbg !7271

if.end67:                                         ; preds = %do.body40.if.end67_crit_edge, %if.end54, %do.end, %if.then63
  %arrayidx70 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands7, i64 3, !dbg !7273
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx70, align 8, !dbg !7273
  %tobool71 = icmp eq %union.tree_node* %9, null, !dbg !7273
  br i1 %tobool71, label %for.inc, label %do.body73, !dbg !7274

do.body73:                                        ; preds = %if.end67
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7229, metadata !DIExpression()), !dbg !7275
  br i1 false, label %do.body73.for.inc_crit_edge, label %land.lhs.true79, !dbg !7276

do.body73.for.inc_crit_edge:                      ; preds = %do.body73
  br label %for.inc, !dbg !7276

land.lhs.true79:                                  ; preds = %do.body73
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7276
  %bf.load81 = load i64, i64* %10, align 8, !dbg !7276
  %bf.cast8425 = and i64 %bf.load81, 131072, !dbg !7276
  %tobool85 = icmp eq i64 %bf.cast8425, 0, !dbg !7276
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !7278

if.then86:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.value(metadata i8 0, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %tc, align 1, !dbg !7276
  br label %if.end87, !dbg !7276

if.end87:                                         ; preds = %land.lhs.true79, %if.then86
  %bf.cast9426 = and i64 %bf.load81, 65536, !dbg !7279
  %tobool95 = icmp eq i64 %bf.cast9426, 0, !dbg !7279
  br i1 %tobool95, label %for.inc, label %if.then96, !dbg !7278

if.then96:                                        ; preds = %if.end87
  call void @llvm.dbg.value(metadata i8 1, metadata !7218, metadata !DIExpression()), !dbg !7243
  store i8 1, i8* %se, align 1, !dbg !7279
  br label %for.inc, !dbg !7279

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %cmp105 = icmp eq i64 %bf.cast14, 41, !dbg !7281
  br i1 %cmp105, label %land.lhs.true106, label %if.else149, !dbg !7282

land.lhs.true106:                                 ; preds = %if.else
  %operands108 = getelementptr inbounds %union.tree_node, %union.tree_node* %node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7283
  %arrayidx109 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands108, i64 1, !dbg !7283
  %11 = bitcast %union.tree_node** %arrayidx109 to i64**, !dbg !7283
  %12 = load i64*, i64** %11, align 8, !dbg !7283
  %bf.load111 = load i64, i64* %12, align 8, !dbg !7283
  %bf.cast11320 = and i64 %bf.load111, 65535, !dbg !7284
  %cmp114 = icmp eq i64 %bf.cast11320, 31, !dbg !7284
  br i1 %cmp114, label %if.then115, label %if.else149, !dbg !7285

if.then115:                                       ; preds = %land.lhs.true106
  %arrayidx118 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands108, i64 2, !dbg !7286
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx118, align 8, !dbg !7286
  %tobool119 = icmp eq %union.tree_node* %13, null, !dbg !7286
  br i1 %tobool119, label %for.inc, label %do.body121, !dbg !7287

do.body121:                                       ; preds = %if.then115
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !7232, metadata !DIExpression()), !dbg !7288
  br i1 false, label %do.body121.for.inc_crit_edge, label %land.lhs.true127, !dbg !7289

do.body121.for.inc_crit_edge:                     ; preds = %do.body121
  br label %for.inc, !dbg !7289

land.lhs.true127:                                 ; preds = %do.body121
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7289
  %bf.load129 = load i64, i64* %14, align 8, !dbg !7289
  %bf.cast13221 = and i64 %bf.load129, 131072, !dbg !7289
  %tobool133 = icmp eq i64 %bf.cast13221, 0, !dbg !7289
  br i1 %tobool133, label %if.then134, label %if.end135, !dbg !7291

if.then134:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.value(metadata i8 0, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %tc, align 1, !dbg !7289
  br label %if.end135, !dbg !7289

if.end135:                                        ; preds = %land.lhs.true127, %if.then134
  %bf.cast14222 = and i64 %bf.load129, 65536, !dbg !7292
  %tobool143 = icmp eq i64 %bf.cast14222, 0, !dbg !7292
  br i1 %tobool143, label %for.inc, label %if.then144, !dbg !7291

if.then144:                                       ; preds = %if.end135
  call void @llvm.dbg.value(metadata i8 1, metadata !7218, metadata !DIExpression()), !dbg !7243
  store i8 1, i8* %se, align 1, !dbg !7292
  br label %for.inc, !dbg !7292

if.else149:                                       ; preds = %land.lhs.true106, %if.else
  %cmp154 = icmp eq i64 %bf.cast14, 42, !dbg !7294
  br i1 %cmp154, label %do.body156, label %for.inc, !dbg !7295

do.body156:                                       ; preds = %if.else149
  %operands159 = getelementptr inbounds %union.tree_node, %union.tree_node* %node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7296
  %arrayidx160 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands159, i64 2, !dbg !7296
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx160, align 8, !dbg !7296
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !7237, metadata !DIExpression()), !dbg !7297
  %cond9 = icmp eq %union.tree_node* %15, null, !dbg !7298
  br i1 %cond9, label %for.inc, label %land.lhs.true162, !dbg !7298

land.lhs.true162:                                 ; preds = %do.body156
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7298
  %bf.load164 = load i64, i64* %16, align 8, !dbg !7298
  %bf.cast16718 = and i64 %bf.load164, 131072, !dbg !7298
  %tobool168 = icmp eq i64 %bf.cast16718, 0, !dbg !7298
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !7296

if.then169:                                       ; preds = %land.lhs.true162
  call void @llvm.dbg.value(metadata i8 0, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %tc, align 1, !dbg !7298
  br label %if.end170, !dbg !7298

if.end170:                                        ; preds = %land.lhs.true162, %if.then169
  %bf.cast17719 = and i64 %bf.load164, 65536, !dbg !7300
  %tobool178 = icmp eq i64 %bf.cast17719, 0, !dbg !7300
  br i1 %tobool178, label %for.inc, label %if.then179, !dbg !7296

if.then179:                                       ; preds = %if.end170
  call void @llvm.dbg.value(metadata i8 1, metadata !7218, metadata !DIExpression()), !dbg !7243
  store i8 1, i8* %se, align 1, !dbg !7300
  br label %for.inc, !dbg !7300

for.inc:                                          ; preds = %do.body73.for.inc_crit_edge, %do.body121.for.inc_crit_edge, %if.end87, %if.end67, %if.end135, %if.then115, %if.end170, %do.body156, %if.then96, %if.else149, %if.then179, %if.then144
  br label %for.cond, !dbg !7302, !llvm.loop !7303

for.end:                                          ; preds = %for.cond
  %node.0.lcssa = phi %union.tree_node* [ %node.0, %for.cond ], !dbg !7248
  %17 = load %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* (%union.tree_node*, i8*, i8*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 44), align 8, !dbg !7305
  call void @llvm.dbg.value(metadata i8* %tc, metadata !7217, metadata !DIExpression(DW_OP_deref)), !dbg !7243
  call void @llvm.dbg.value(metadata i8* %se, metadata !7218, metadata !DIExpression(DW_OP_deref)), !dbg !7243
  %call189 = call %union.tree_node* %17(%union.tree_node* %node.0.lcssa, i8* nonnull %tc, i8* nonnull %se) #7, !dbg !7306
  call void @llvm.dbg.value(metadata %union.tree_node* %call189, metadata !7216, metadata !DIExpression()), !dbg !7243
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7307
  %bf.load191 = load i64, i64* %18, align 8, !dbg !7307
  %bf.cast19311 = and i64 %bf.load191, 65535, !dbg !7308
  %cmp194 = icmp eq i64 %bf.cast19311, 47, !dbg !7308
  br i1 %cmp194, label %do.body196, label %if.else223, !dbg !7309

do.body196:                                       ; preds = %for.end
  %operands199 = getelementptr inbounds %union.tree_node, %union.tree_node* %call189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7310
  %19 = load %union.tree_node*, %union.tree_node** %operands199, align 8, !dbg !7310
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !7240, metadata !DIExpression()), !dbg !7311
  %cond10 = icmp eq %union.tree_node* %19, null, !dbg !7312
  br i1 %cond10, label %if.end254, label %land.lhs.true202, !dbg !7312

land.lhs.true202:                                 ; preds = %do.body196
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7312
  %bf.load204 = load i64, i64* %20, align 8, !dbg !7312
  %bf.cast20712 = and i64 %bf.load204, 131072, !dbg !7312
  %tobool208 = icmp eq i64 %bf.cast20712, 0, !dbg !7312
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !7310

if.then209:                                       ; preds = %land.lhs.true202
  call void @llvm.dbg.value(metadata i8 0, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %tc, align 1, !dbg !7312
  br label %if.end210, !dbg !7312

if.end210:                                        ; preds = %land.lhs.true202, %if.then209
  %bf.cast21713 = and i64 %bf.load204, 65536, !dbg !7314
  %tobool218 = icmp eq i64 %bf.cast21713, 0, !dbg !7314
  br i1 %tobool218, label %if.end254, label %if.then219, !dbg !7310

if.then219:                                       ; preds = %if.end210
  call void @llvm.dbg.value(metadata i8 1, metadata !7218, metadata !DIExpression()), !dbg !7243
  store i8 1, i8* %se, align 1, !dbg !7314
  br label %if.end254, !dbg !7314

if.else223:                                       ; preds = %for.end
  %21 = add nsw i64 %bf.cast19311, -23, !dbg !7316
  %cmp229 = icmp ult i64 %21, 6, !dbg !7316
  br i1 %cmp229, label %if.end254, label %if.else231, !dbg !7318

if.else231:                                       ; preds = %if.else223
  %22 = add nsw i64 %bf.cast19311, -29, !dbg !7319
  %cmp238 = icmp ult i64 %22, 12, !dbg !7319
  br i1 %cmp238, label %if.then239, label %if.else244, !dbg !7321

if.then239:                                       ; preds = %if.else231
  %call240 = call %union.tree_node* @staticp(%union.tree_node* %call189) #8, !dbg !7322
  %cmp241 = icmp ne %union.tree_node* %call240, null, !dbg !7323
  %conv = zext i1 %cmp241 to i8, !dbg !7323
  %23 = load i8, i8* %tc, align 1, !dbg !7324
  call void @llvm.dbg.value(metadata i8 %23, metadata !7217, metadata !DIExpression()), !dbg !7243
  %and = and i8 %23, %conv, !dbg !7324
  call void @llvm.dbg.value(metadata i8 %and, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 %and, i8* %tc, align 1, !dbg !7324
  br label %if.end254, !dbg !7325

if.else244:                                       ; preds = %if.else231
  call void @llvm.dbg.value(metadata i8 0, metadata !7217, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %tc, align 1, !dbg !7326
  %bf.lshr247 = lshr i64 %bf.load191, 16, !dbg !7328
  %24 = trunc i64 %bf.lshr247 to i8, !dbg !7328
  %bf.cast249 = and i8 %24, 1, !dbg !7328
  %25 = load i8, i8* %se, align 1, !dbg !7329
  call void @llvm.dbg.value(metadata i8 %25, metadata !7218, metadata !DIExpression()), !dbg !7243
  %or = or i8 %bf.cast249, %25, !dbg !7329
  call void @llvm.dbg.value(metadata i8 %or, metadata !7218, metadata !DIExpression()), !dbg !7243
  store i8 %or, i8* %se, align 1, !dbg !7329
  br label %if.end254

if.end254:                                        ; preds = %if.end210, %do.body196, %if.else223, %if.else244, %if.then239, %if.then219
  %26 = load i8, i8* %tc, align 1, !dbg !7330
  call void @llvm.dbg.value(metadata i8 %26, metadata !7217, metadata !DIExpression()), !dbg !7243
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7331
  %bf.load257 = load i64, i64* %27, align 8, !dbg !7332
  %28 = and i8 %26, 1, !dbg !7332
  %bf.value = zext i8 %28 to i64, !dbg !7332
  %bf.shl = shl nuw nsw i64 %bf.value, 17, !dbg !7332
  %bf.clear258 = and i64 %bf.load257, -196609, !dbg !7332
  %bf.set = or i64 %bf.clear258, %bf.shl, !dbg !7332
  %29 = load i8, i8* %se, align 1, !dbg !7333
  call void @llvm.dbg.value(metadata i8 %29, metadata !7218, metadata !DIExpression()), !dbg !7243
  %30 = and i8 %29, 1, !dbg !7334
  %bf.value262 = zext i8 %30 to i64, !dbg !7334
  %bf.shl263 = shl nuw nsw i64 %bf.value262, 16, !dbg !7334
  %bf.set265 = or i64 %bf.set, %bf.shl263, !dbg !7334
  store i64 %bf.set265, i64* %27, align 8, !dbg !7334
  call void @llvm.dbg.value(metadata i8* %se, metadata !7218, metadata !DIExpression(DW_OP_deref)), !dbg !7243
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %se) #6, !dbg !7335
  call void @llvm.dbg.value(metadata i8* %tc, metadata !7217, metadata !DIExpression(DW_OP_deref)), !dbg !7243
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %tc) #6, !dbg !7335
  ret void, !dbg !7335
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !7336 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7338, metadata !DIExpression()), !dbg !7339
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7340
  %bf.load = load i64, i64* %0, align 8, !dbg !7340
  %1 = trunc i64 %bf.load to i16, !dbg !7340
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !7341

sw.default:                                       ; preds = %entry
  br label %return, !dbg !7342

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !7344
  ret i8 %retval.0, !dbg !7345
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build0_stat(i32 %code, %union.tree_node* %tt) local_unnamed_addr #5 !dbg !7346 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7350, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.value(metadata %union.tree_node* %tt, metadata !7351, metadata !DIExpression()), !dbg !7353
  %idxprom = sext i32 %code to i64, !dbg !7354
  %arrayidx = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !7354
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7354
  %cmp = icmp eq i8 %0, 0, !dbg !7354
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7354

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3567, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7354
  br label %cond.end, !dbg !7354

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %union.tree_node* @make_node_stat(i32 %code) #8, !dbg !7355
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7352, metadata !DIExpression()), !dbg !7353
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7356
  store %union.tree_node* %tt, %union.tree_node** %type, align 8, !dbg !7357
  ret %union.tree_node* %call, !dbg !7358
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node** @tree_block(%union.tree_node* %t) local_unnamed_addr #5 !dbg !7359 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7363, metadata !DIExpression()), !dbg !7365
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7366
  %bf.load = load i64, i64* %0, align 8, !dbg !7366
  %bf.cast = and i64 %bf.load, 65535, !dbg !7366
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7366
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7366
  %2 = trunc i32 %1 to i8, !dbg !7367
  %.off = add i8 %2, -4, !dbg !7367
  %3 = icmp ult i8 %.off, 7, !dbg !7367
  br i1 %3, label %if.then, label %if.end, !dbg !7367

if.then:                                          ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7369
  br label %cleanup, !dbg !7370

if.end:                                           ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 10311, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7371
  br label %cleanup, !dbg !7372

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %4, %if.then ], [ null, %if.end ], !dbg !7365
  ret %union.tree_node** %retval.0, !dbg !7373
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build2_stat(i32 %code, %union.tree_node* %tt, %union.tree_node* %arg0, %union.tree_node* %arg1) local_unnamed_addr #5 !dbg !7374 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7378, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata %union.tree_node* %tt, metadata !7379, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !7380, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !7381, metadata !DIExpression()), !dbg !7386
  %idxprom = sext i32 %code to i64, !dbg !7387
  %arrayidx = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !7387
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7387
  %cmp = icmp eq i8 %0, 2, !dbg !7387
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7387

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3679, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7387
  br label %cond.end, !dbg !7387

cond.end:                                         ; preds = %entry, %cond.true
  switch i32 %code, label %if.end124 [
    i32 64, label %land.lhs.true
    i32 63, label %land.lhs.true
    i32 65, label %land.lhs.true
    i32 66, label %land.lhs.true51
  ], !dbg !7388

land.lhs.true:                                    ; preds = %cond.end, %cond.end, %cond.end
  %tobool = icmp ne %union.tree_node* %arg0, null, !dbg !7390
  %tobool10 = icmp ne %union.tree_node* %arg1, null, !dbg !7391
  %or.cond = and i1 %tobool, %tobool10, !dbg !7392
  %tobool12 = icmp ne %union.tree_node* %tt, null, !dbg !7393
  %or.cond1 = and i1 %or.cond, %tobool12, !dbg !7392
  br i1 %or.cond1, label %land.lhs.true13, label %if.end, !dbg !7392

land.lhs.true13:                                  ; preds = %land.lhs.true
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %tt, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7394
  %bf.load = load i64, i64* %1, align 8, !dbg !7394
  %bf.cast29 = and i64 %bf.load, 65535, !dbg !7394
  %cmp14 = icmp eq i64 %bf.cast29, 10, !dbg !7394
  br i1 %cmp14, label %land.lhs.true23, label %lor.lhs.false16, !dbg !7394

lor.lhs.false16:                                  ; preds = %land.lhs.true13
  %cmp21 = icmp eq i64 %bf.cast29, 12, !dbg !7394
  br i1 %cmp21, label %land.lhs.true23, label %if.end, !dbg !7395

land.lhs.true23:                                  ; preds = %lor.lhs.false16, %land.lhs.true13
  %2 = load %struct.tree_type*, %struct.tree_type** bitcast ([4 x %union.tree_node*]* @sizetype_tab to %struct.tree_type**), align 16, !dbg !7396
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 6, !dbg !7396
  %bf.load24 = load i32, i32* %precision, align 4, !dbg !7396
  %type26 = bitcast %union.tree_node* %tt to %struct.tree_type*, !dbg !7397
  %precision27 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type26, i64 0, i32 6, !dbg !7397
  %bf.load28 = load i32, i32* %precision27, align 4, !dbg !7397
  %3 = xor i32 %bf.load24, %bf.load28, !dbg !7398
  %4 = and i32 %3, 1023, !dbg !7398
  %cmp30 = icmp eq i32 %4, 0, !dbg !7398
  br i1 %cmp30, label %if.then, label %if.end, !dbg !7399

if.then:                                          ; preds = %land.lhs.true23
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7400
  %bf.load33 = load i64, i64* %5, align 8, !dbg !7400
  %bf.cast3531 = and i64 %bf.load33, 65535, !dbg !7400
  %cmp36 = icmp eq i64 %bf.cast3531, 23, !dbg !7400
  br i1 %cmp36, label %land.lhs.true38, label %cond.true45, !dbg !7400

land.lhs.true38:                                  ; preds = %if.then
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7400
  %bf.load40 = load i64, i64* %6, align 8, !dbg !7400
  %bf.cast4232 = and i64 %bf.load40, 65535, !dbg !7400
  %cmp43 = icmp eq i64 %bf.cast4232, 23, !dbg !7400
  br i1 %cmp43, label %if.end, label %cond.true45, !dbg !7400

cond.true45:                                      ; preds = %land.lhs.true38, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3688, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7400
  br label %if.end, !dbg !7400

if.end:                                           ; preds = %cond.true45, %land.lhs.true38, %land.lhs.true23, %lor.lhs.false16, %land.lhs.true
  %cmp49 = icmp eq i32 %code, 66, !dbg !7401
  %or.cond2 = and i1 %cmp49, %tobool, !dbg !7403
  %or.cond3 = and i1 %or.cond2, %tobool10, !dbg !7403
  %or.cond6 = and i1 %or.cond3, %tobool12, !dbg !7403
  br i1 %or.cond6, label %if.then57, label %if.end124, !dbg !7403

land.lhs.true51:                                  ; preds = %cond.end
  %tobool52.old = icmp ne %union.tree_node* %arg0, null, !dbg !7404
  %tobool54.old = icmp ne %union.tree_node* %arg1, null, !dbg !7405
  %or.cond4 = and i1 %tobool52.old, %tobool54.old, !dbg !7406
  %tobool56 = icmp ne %union.tree_node* %tt, null, !dbg !7407
  %or.cond5 = and i1 %or.cond4, %tobool56, !dbg !7406
  br i1 %or.cond5, label %if.then57, label %if.end124, !dbg !7406

if.then57:                                        ; preds = %if.end, %land.lhs.true51
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %tt, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7408
  %bf.load59 = load i64, i64* %7, align 8, !dbg !7408
  %bf.cast6122 = and i64 %bf.load59, 65535, !dbg !7408
  %cmp62 = icmp eq i64 %bf.cast6122, 10, !dbg !7408
  br i1 %cmp62, label %land.lhs.true71, label %lor.lhs.false64, !dbg !7408

lor.lhs.false64:                                  ; preds = %if.then57
  %cmp69 = icmp eq i64 %bf.cast6122, 12, !dbg !7408
  br i1 %cmp69, label %land.lhs.true71, label %cond.true120, !dbg !7408

land.lhs.true71:                                  ; preds = %lor.lhs.false64, %if.then57
  %type72 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7408
  %8 = bitcast %union.tree_node** %type72 to i64**, !dbg !7408
  %9 = load i64*, i64** %8, align 8, !dbg !7408
  %bf.load74 = load i64, i64* %9, align 8, !dbg !7408
  %bf.cast7624 = and i64 %bf.load74, 65535, !dbg !7408
  %cmp77 = icmp eq i64 %bf.cast7624, 10, !dbg !7408
  br i1 %cmp77, label %land.lhs.true88, label %lor.lhs.false79, !dbg !7408

lor.lhs.false79:                                  ; preds = %land.lhs.true71
  %cmp86 = icmp eq i64 %bf.cast7624, 12, !dbg !7408
  br i1 %cmp86, label %land.lhs.true88, label %cond.true120, !dbg !7408

land.lhs.true88:                                  ; preds = %lor.lhs.false79, %land.lhs.true71
  %type90 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7408
  %10 = bitcast %union.tree_node** %type90 to i64**, !dbg !7408
  %11 = load i64*, i64** %10, align 8, !dbg !7408
  %bf.load92 = load i64, i64* %11, align 8, !dbg !7408
  %bf.cast9426 = and i64 %bf.load92, 65535, !dbg !7408
  %cmp95 = icmp eq i64 %bf.cast9426, 6, !dbg !7408
  %12 = bitcast i64* %11 to %union.tree_node*, !dbg !7408
  br i1 %cmp95, label %land.lhs.true115, label %lor.lhs.false97, !dbg !7408

lor.lhs.false97:                                  ; preds = %land.lhs.true88
  %cmp104 = icmp eq i64 %bf.cast9426, 7, !dbg !7408
  br i1 %cmp104, label %land.lhs.true115, label %lor.lhs.false106, !dbg !7408

lor.lhs.false106:                                 ; preds = %lor.lhs.false97
  %cmp113 = icmp eq i64 %bf.cast9426, 8, !dbg !7408
  br i1 %cmp113, label %land.lhs.true115, label %cond.true120, !dbg !7408

land.lhs.true115:                                 ; preds = %lor.lhs.false106, %lor.lhs.false97, %land.lhs.true88
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !7408
  %call = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %13, %union.tree_node* %12) #7, !dbg !7408
  %tobool119 = icmp eq i8 %call, 0, !dbg !7408
  br i1 %tobool119, label %cond.true120, label %if.end124, !dbg !7408

cond.true120:                                     ; preds = %land.lhs.true115, %lor.lhs.false106, %lor.lhs.false79, %lor.lhs.false64
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3693, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7408
  br label %if.end124, !dbg !7408

if.end124:                                        ; preds = %land.lhs.true115, %cond.true120, %cond.end, %land.lhs.true51, %if.end
  %call125 = tail call %union.tree_node* @make_node_stat(i32 %code) #8, !dbg !7409
  call void @llvm.dbg.value(metadata %union.tree_node* %call125, metadata !7385, metadata !DIExpression()), !dbg !7386
  %type127 = getelementptr inbounds %union.tree_node, %union.tree_node* %call125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7410
  store %union.tree_node* %tt, %union.tree_node** %type127, align 8, !dbg !7411
  %14 = add nsw i64 %idxprom, -97, !dbg !7412
  %cmp130 = icmp ult i64 %14, 14, !dbg !7412
  br i1 %cmp130, label %lor.end, label %lor.rhs, !dbg !7413

lor.rhs:                                          ; preds = %if.end124
  %arrayidx133 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !7414
  %15 = load i32, i32* %arrayidx133, align 4, !dbg !7414
  %cmp134 = icmp eq i32 %15, 7, !dbg !7415
  %phitmp = zext i1 %cmp134 to i8, !dbg !7413
  br label %lor.end, !dbg !7413

lor.end:                                          ; preds = %lor.rhs, %if.end124
  %16 = phi i8 [ 1, %if.end124 ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !7382, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i8 1, metadata !7383, metadata !DIExpression()), !dbg !7386
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7416
  %bf.load138 = load i64, i64* %17, align 8, !dbg !7416
  %bf.lshr = lshr i64 %bf.load138, 16, !dbg !7416
  %18 = trunc i64 %bf.lshr to i8, !dbg !7416
  %bf.cast140 = and i8 %18, 1, !dbg !7416
  call void @llvm.dbg.value(metadata i8 %bf.cast140, metadata !7384, metadata !DIExpression()), !dbg !7386
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7417
  store %union.tree_node* %arg0, %union.tree_node** %operands, align 8, !dbg !7417
  %tobool143 = icmp eq %union.tree_node* %arg0, null, !dbg !7419
  br i1 %tobool143, label %do.body188, label %land.lhs.true144, !dbg !7419

land.lhs.true144:                                 ; preds = %lor.end
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7419
  %bf.load146 = load i64, i64* %19, align 8, !dbg !7419
  %bf.cast148 = and i64 %bf.load146, 65535, !dbg !7419
  %20 = add nsw i64 %bf.cast148, -5, !dbg !7419
  %cmp151 = icmp ult i64 %20, 18, !dbg !7419
  br i1 %cmp151, label %do.body188, label %if.then153, !dbg !7417

if.then153:                                       ; preds = %land.lhs.true144
  %bf.cast15819 = and i64 %bf.load146, 65536, !dbg !7421
  %tobool159 = icmp eq i64 %bf.cast15819, 0, !dbg !7421
  %spec.select = select i1 %tobool159, i8 %bf.cast140, i8 1, !dbg !7424
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !7384, metadata !DIExpression()), !dbg !7386
  %bf.cast16620 = and i64 %bf.load146, 1048576, !dbg !7425
  %tobool167 = icmp eq i64 %bf.cast16620, 0, !dbg !7425
  br i1 %tobool167, label %land.lhs.true168, label %if.end178, !dbg !7425

land.lhs.true168:                                 ; preds = %if.then153
  %21 = add nsw i64 %bf.cast148, -23, !dbg !7425
  %cmp175 = icmp ult i64 %21, 6, !dbg !7425
  %spec.select7 = zext i1 %cmp175 to i8, !dbg !7424
  br label %if.end178, !dbg !7424

if.end178:                                        ; preds = %if.then153, %land.lhs.true168
  %read_only.0 = phi i8 [ 1, %if.then153 ], [ %spec.select7, %land.lhs.true168 ], !dbg !7386
  call void @llvm.dbg.value(metadata i8 %read_only.0, metadata !7383, metadata !DIExpression()), !dbg !7386
  %bf.cast18321 = and i64 %bf.load146, 131072, !dbg !7427
  %tobool184 = icmp eq i64 %bf.cast18321, 0, !dbg !7427
  %spec.select8 = select i1 %tobool184, i8 0, i8 %16, !dbg !7424
  call void @llvm.dbg.value(metadata i8 %spec.select8, metadata !7382, metadata !DIExpression()), !dbg !7386
  br label %do.body188, !dbg !7424

do.body188:                                       ; preds = %lor.end, %land.lhs.true144, %if.end178
  %constant.1 = phi i8 [ %16, %land.lhs.true144 ], [ %spec.select8, %if.end178 ], [ %16, %lor.end ], !dbg !7429
  %read_only.1 = phi i8 [ 1, %land.lhs.true144 ], [ %read_only.0, %if.end178 ], [ 1, %lor.end ], !dbg !7430
  %side_effects.1 = phi i8 [ %bf.cast140, %land.lhs.true144 ], [ %spec.select, %if.end178 ], [ %bf.cast140, %lor.end ], !dbg !7386
  call void @llvm.dbg.value(metadata i8 %side_effects.1, metadata !7384, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i8 %read_only.1, metadata !7383, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i8 %constant.1, metadata !7382, metadata !DIExpression()), !dbg !7386
  %arrayidx191 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7431
  store %union.tree_node* %arg1, %union.tree_node** %arrayidx191, align 8, !dbg !7431
  %tobool192 = icmp eq %union.tree_node* %arg1, null, !dbg !7433
  br i1 %tobool192, label %do.end238, label %land.lhs.true193, !dbg !7433

land.lhs.true193:                                 ; preds = %do.body188
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7433
  %bf.load195 = load i64, i64* %22, align 8, !dbg !7433
  %bf.cast197 = and i64 %bf.load195, 65535, !dbg !7433
  %23 = add nsw i64 %bf.cast197, -5, !dbg !7433
  %cmp200 = icmp ult i64 %23, 18, !dbg !7433
  br i1 %cmp200, label %do.end238, label %if.then202, !dbg !7431

if.then202:                                       ; preds = %land.lhs.true193
  %bf.cast20716 = and i64 %bf.load195, 65536, !dbg !7435
  %tobool208 = icmp eq i64 %bf.cast20716, 0, !dbg !7435
  %spec.select9 = select i1 %tobool208, i8 %side_effects.1, i8 1, !dbg !7438
  call void @llvm.dbg.value(metadata i8 %spec.select9, metadata !7384, metadata !DIExpression()), !dbg !7386
  %bf.cast21517 = and i64 %bf.load195, 1048576, !dbg !7439
  %tobool216 = icmp eq i64 %bf.cast21517, 0, !dbg !7439
  br i1 %tobool216, label %land.lhs.true217, label %if.end227, !dbg !7439

land.lhs.true217:                                 ; preds = %if.then202
  %24 = add nsw i64 %bf.cast197, -23, !dbg !7439
  %cmp224 = icmp ult i64 %24, 6, !dbg !7439
  %spec.select10 = select i1 %cmp224, i8 %read_only.1, i8 0, !dbg !7438
  br label %if.end227, !dbg !7438

if.end227:                                        ; preds = %if.then202, %land.lhs.true217
  %read_only.2 = phi i8 [ %read_only.1, %if.then202 ], [ %spec.select10, %land.lhs.true217 ], !dbg !7386
  call void @llvm.dbg.value(metadata i8 %read_only.2, metadata !7383, metadata !DIExpression()), !dbg !7386
  %bf.cast23218 = and i64 %bf.load195, 131072, !dbg !7441
  %tobool233 = icmp eq i64 %bf.cast23218, 0, !dbg !7441
  %spec.select11 = select i1 %tobool233, i8 0, i8 %constant.1, !dbg !7438
  call void @llvm.dbg.value(metadata i8 %spec.select11, metadata !7382, metadata !DIExpression()), !dbg !7386
  br label %do.end238, !dbg !7438

do.end238:                                        ; preds = %do.body188, %if.end227, %land.lhs.true193
  %constant.3 = phi i8 [ %constant.1, %land.lhs.true193 ], [ %spec.select11, %if.end227 ], [ %constant.1, %do.body188 ], !dbg !7429
  %read_only.3 = phi i8 [ %read_only.1, %land.lhs.true193 ], [ %read_only.2, %if.end227 ], [ %read_only.1, %do.body188 ], !dbg !7430
  %side_effects.3 = phi i8 [ %side_effects.1, %land.lhs.true193 ], [ %spec.select9, %if.end227 ], [ %side_effects.1, %do.body188 ], !dbg !7386
  call void @llvm.dbg.value(metadata i8 %side_effects.3, metadata !7384, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i8 %read_only.3, metadata !7383, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i8 %constant.3, metadata !7382, metadata !DIExpression()), !dbg !7386
  %25 = and i8 %read_only.3, 1, !dbg !7443
  %bf.value = zext i8 %25 to i64, !dbg !7443
  %bf.shl = shl nuw nsw i64 %bf.value, 20, !dbg !7443
  %bf.clear242 = and i64 %bf.load138, -1245185, !dbg !7443
  %bf.set = or i64 %bf.clear242, %bf.shl, !dbg !7443
  %26 = and i8 %constant.3, 1, !dbg !7444
  %bf.value246 = zext i8 %26 to i64, !dbg !7444
  %bf.shl247 = shl nuw nsw i64 %bf.value246, 17, !dbg !7444
  %bf.set249 = or i64 %bf.set, %bf.shl247, !dbg !7444
  %27 = and i8 %side_effects.3, 1, !dbg !7445
  %bf.value254 = zext i8 %27 to i64, !dbg !7445
  %bf.shl255 = shl nuw nsw i64 %bf.value254, 16, !dbg !7445
  %bf.set257 = or i64 %bf.set249, %bf.shl255, !dbg !7445
  store i64 %bf.set257, i64* %17, align 8, !dbg !7445
  %arrayidx260 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !7446
  %28 = load i32, i32* %arrayidx260, align 4, !dbg !7446
  %cmp261 = icmp eq i32 %28, 4, !dbg !7447
  %tobool264 = icmp ne %union.tree_node* %arg0, null, !dbg !7448
  %or.cond12 = and i1 %cmp261, %tobool264, !dbg !7449
  br i1 %or.cond12, label %land.rhs, label %land.end, !dbg !7449

land.rhs:                                         ; preds = %do.end238
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7450
  %bf.load266 = load i64, i64* %29, align 8, !dbg !7450
  %bf.clear268 = and i64 %bf.load266, 524288, !dbg !7450
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end238
  %30 = phi i64 [ 0, %do.end238 ], [ %bf.clear268, %land.rhs ]
  %bf.clear275 = and i64 %bf.set257, -524289, !dbg !7451
  %bf.set276 = or i64 %bf.clear275, %30, !dbg !7451
  store i64 %bf.set276, i64* %17, align 8, !dbg !7451
  ret %union.tree_node* %call125, !dbg !7452
}

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build3_stat(i32 %code, %union.tree_node* %tt, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2) local_unnamed_addr #5 !dbg !7453 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7457, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata %union.tree_node* %tt, metadata !7458, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !7459, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !7460, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !7461, metadata !DIExpression()), !dbg !7466
  %idxprom = sext i32 %code to i64, !dbg !7467
  %arrayidx = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !7467
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7467
  %cmp = icmp eq i8 %0, 3, !dbg !7467
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7467

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3731, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7467
  br label %cond.end, !dbg !7467

cond.end:                                         ; preds = %entry, %cond.true
  %cmp4 = icmp eq i32 %code, 59, !dbg !7468
  br i1 %cmp4, label %cond.true6, label %cond.end8, !dbg !7468

cond.true6:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3732, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7468
  br label %cond.end8, !dbg !7468

cond.end8:                                        ; preds = %cond.end, %cond.true6
  %call = tail call %union.tree_node* @make_node_stat(i32 %code) #8, !dbg !7469
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7465, metadata !DIExpression()), !dbg !7466
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7470
  store %union.tree_node* %tt, %union.tree_node** %type, align 8, !dbg !7471
  call void @llvm.dbg.value(metadata i8 1, metadata !7463, metadata !DIExpression()), !dbg !7466
  %cmp10 = icmp eq i32 %code, 56, !dbg !7472
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7474
  %cmp12 = icmp eq %union.tree_node* %1, %tt, !dbg !7475
  %or.cond = and i1 %cmp10, %cmp12, !dbg !7476
  %cmp15 = icmp eq %union.tree_node* %arg1, null, !dbg !7477
  %or.cond1 = and i1 %or.cond, %cmp15, !dbg !7476
  %cmp18 = icmp eq %union.tree_node* %arg2, null, !dbg !7478
  %or.cond2 = and i1 %or.cond1, %cmp18, !dbg !7476
  br i1 %or.cond2, label %do.body, label %if.else, !dbg !7476

if.else:                                          ; preds = %cond.end8
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7479
  %bf.load = load i64, i64* %2, align 8, !dbg !7479
  %bf.lshr = lshr i64 %bf.load, 16, !dbg !7479
  %3 = trunc i64 %bf.lshr to i8, !dbg !7479
  %bf.cast = and i8 %3, 1, !dbg !7479
  call void @llvm.dbg.value(metadata i8 %bf.cast, metadata !7464, metadata !DIExpression()), !dbg !7466
  br label %do.body

do.body:                                          ; preds = %if.else, %cond.end8
  %side_effects.0 = phi i8 [ %bf.cast, %if.else ], [ 1, %cond.end8 ], !dbg !7480
  call void @llvm.dbg.value(metadata i8 %side_effects.0, metadata !7464, metadata !DIExpression()), !dbg !7466
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7481
  store %union.tree_node* %arg0, %union.tree_node** %operands, align 8, !dbg !7481
  %tobool = icmp eq %union.tree_node* %arg0, null, !dbg !7483
  br i1 %tobool, label %do.body66, label %land.lhs.true22, !dbg !7483

land.lhs.true22:                                  ; preds = %do.body
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7483
  %bf.load24 = load i64, i64* %4, align 8, !dbg !7483
  %bf.cast26 = and i64 %bf.load24, 65535, !dbg !7483
  %5 = add nsw i64 %bf.cast26, -5, !dbg !7483
  %cmp29 = icmp ult i64 %5, 18, !dbg !7483
  br i1 %cmp29, label %do.body66, label %if.then31, !dbg !7481

if.then31:                                        ; preds = %land.lhs.true22
  %bf.cast3613 = and i64 %bf.load24, 65536, !dbg !7485
  %tobool37 = icmp eq i64 %bf.cast3613, 0, !dbg !7485
  %spec.select = select i1 %tobool37, i8 %side_effects.0, i8 1, !dbg !7488
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !7464, metadata !DIExpression()), !dbg !7466
  %bf.cast4414 = and i64 %bf.load24, 1048576, !dbg !7489
  %tobool45 = icmp eq i64 %bf.cast4414, 0, !dbg !7489
  br i1 %tobool45, label %land.lhs.true46, label %if.end56, !dbg !7489

land.lhs.true46:                                  ; preds = %if.then31
  %6 = add nsw i64 %bf.cast26, -23, !dbg !7489
  %cmp53 = icmp ult i64 %6, 6, !dbg !7489
  %spec.select3 = zext i1 %cmp53 to i8, !dbg !7488
  br label %if.end56, !dbg !7488

if.end56:                                         ; preds = %if.then31, %land.lhs.true46
  %read_only.0 = phi i8 [ 1, %if.then31 ], [ %spec.select3, %land.lhs.true46 ], !dbg !7466
  call void @llvm.dbg.value(metadata i8 %read_only.0, metadata !7463, metadata !DIExpression()), !dbg !7466
  br label %do.body66, !dbg !7488

do.body66:                                        ; preds = %do.body, %land.lhs.true22, %if.end56
  %read_only.1 = phi i8 [ 1, %land.lhs.true22 ], [ %read_only.0, %if.end56 ], [ 1, %do.body ], !dbg !7491
  %side_effects.2 = phi i8 [ %side_effects.0, %land.lhs.true22 ], [ %spec.select, %if.end56 ], [ %side_effects.0, %do.body ], !dbg !7466
  call void @llvm.dbg.value(metadata i8 %side_effects.2, metadata !7464, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i8 %read_only.1, metadata !7463, metadata !DIExpression()), !dbg !7466
  %arrayidx69 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7492
  store %union.tree_node* %arg1, %union.tree_node** %arrayidx69, align 8, !dbg !7492
  br i1 %cmp15, label %do.body117, label %land.lhs.true71, !dbg !7494

land.lhs.true71:                                  ; preds = %do.body66
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7494
  %bf.load73 = load i64, i64* %7, align 8, !dbg !7494
  %bf.cast75 = and i64 %bf.load73, 65535, !dbg !7494
  %8 = add nsw i64 %bf.cast75, -5, !dbg !7494
  %cmp78 = icmp ult i64 %8, 18, !dbg !7494
  br i1 %cmp78, label %do.body117, label %if.then80, !dbg !7492

if.then80:                                        ; preds = %land.lhs.true71
  %bf.cast8511 = and i64 %bf.load73, 65536, !dbg !7496
  %tobool86 = icmp eq i64 %bf.cast8511, 0, !dbg !7496
  %spec.select4 = select i1 %tobool86, i8 %side_effects.2, i8 1, !dbg !7499
  call void @llvm.dbg.value(metadata i8 %spec.select4, metadata !7464, metadata !DIExpression()), !dbg !7466
  %bf.cast9312 = and i64 %bf.load73, 1048576, !dbg !7500
  %tobool94 = icmp eq i64 %bf.cast9312, 0, !dbg !7500
  br i1 %tobool94, label %land.lhs.true95, label %if.end105, !dbg !7500

land.lhs.true95:                                  ; preds = %if.then80
  %9 = add nsw i64 %bf.cast75, -23, !dbg !7500
  %cmp102 = icmp ult i64 %9, 6, !dbg !7500
  %spec.select5 = select i1 %cmp102, i8 %read_only.1, i8 0, !dbg !7499
  br label %if.end105, !dbg !7499

if.end105:                                        ; preds = %if.then80, %land.lhs.true95
  %read_only.2 = phi i8 [ %read_only.1, %if.then80 ], [ %spec.select5, %land.lhs.true95 ], !dbg !7466
  call void @llvm.dbg.value(metadata i8 %read_only.2, metadata !7463, metadata !DIExpression()), !dbg !7466
  br label %do.body117, !dbg !7499

do.body117:                                       ; preds = %do.body66, %land.lhs.true71, %if.end105
  %read_only.3 = phi i8 [ %read_only.1, %land.lhs.true71 ], [ %read_only.2, %if.end105 ], [ %read_only.1, %do.body66 ], !dbg !7491
  %side_effects.4 = phi i8 [ %side_effects.2, %land.lhs.true71 ], [ %spec.select4, %if.end105 ], [ %side_effects.2, %do.body66 ], !dbg !7466
  call void @llvm.dbg.value(metadata i8 %side_effects.4, metadata !7464, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i8 %read_only.3, metadata !7463, metadata !DIExpression()), !dbg !7466
  %arrayidx120 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7502
  store %union.tree_node* %arg2, %union.tree_node** %arrayidx120, align 8, !dbg !7502
  br i1 %cmp18, label %do.end167, label %land.lhs.true122, !dbg !7504

land.lhs.true122:                                 ; preds = %do.body117
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7504
  %bf.load124 = load i64, i64* %10, align 8, !dbg !7504
  %bf.cast126 = and i64 %bf.load124, 65535, !dbg !7504
  %11 = add nsw i64 %bf.cast126, -5, !dbg !7504
  %cmp129 = icmp ult i64 %11, 18, !dbg !7504
  br i1 %cmp129, label %do.end167, label %if.then131, !dbg !7502

if.then131:                                       ; preds = %land.lhs.true122
  %bf.cast1369 = and i64 %bf.load124, 65536, !dbg !7506
  %tobool137 = icmp eq i64 %bf.cast1369, 0, !dbg !7506
  %spec.select6 = select i1 %tobool137, i8 %side_effects.4, i8 1, !dbg !7509
  call void @llvm.dbg.value(metadata i8 %spec.select6, metadata !7464, metadata !DIExpression()), !dbg !7466
  %bf.cast14410 = and i64 %bf.load124, 1048576, !dbg !7510
  %tobool145 = icmp eq i64 %bf.cast14410, 0, !dbg !7510
  br i1 %tobool145, label %land.lhs.true146, label %if.end156, !dbg !7510

land.lhs.true146:                                 ; preds = %if.then131
  %12 = add nsw i64 %bf.cast126, -23, !dbg !7510
  %cmp153 = icmp ult i64 %12, 6, !dbg !7510
  %spec.select7 = select i1 %cmp153, i8 %read_only.3, i8 0, !dbg !7509
  br label %if.end156, !dbg !7509

if.end156:                                        ; preds = %if.then131, %land.lhs.true146
  %read_only.4 = phi i8 [ %read_only.3, %if.then131 ], [ %spec.select7, %land.lhs.true146 ], !dbg !7466
  call void @llvm.dbg.value(metadata i8 %read_only.4, metadata !7463, metadata !DIExpression()), !dbg !7466
  br label %do.end167, !dbg !7509

do.end167:                                        ; preds = %do.body117, %if.end156, %land.lhs.true122
  %read_only.5 = phi i8 [ %read_only.3, %land.lhs.true122 ], [ %read_only.4, %if.end156 ], [ %read_only.3, %do.body117 ], !dbg !7491
  %side_effects.6 = phi i8 [ %side_effects.4, %land.lhs.true122 ], [ %spec.select6, %if.end156 ], [ %side_effects.4, %do.body117 ], !dbg !7466
  call void @llvm.dbg.value(metadata i8 %side_effects.6, metadata !7464, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i8 %read_only.5, metadata !7463, metadata !DIExpression()), !dbg !7466
  br i1 %cmp10, label %if.then170, label %do.end167.if.end175_crit_edge, !dbg !7512

do.end167.if.end175_crit_edge:                    ; preds = %do.end167
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7466
  %bf.load178.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !7513
  br label %if.end175, !dbg !7512

if.then170:                                       ; preds = %do.end167
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7514
  %bf.load173 = load i64, i64* %13, align 8, !dbg !7516
  %14 = and i8 %read_only.5, 1, !dbg !7516
  %bf.value = zext i8 %14 to i64, !dbg !7516
  %bf.shl = shl nuw nsw i64 %bf.value, 20, !dbg !7516
  %bf.clear174 = and i64 %bf.load173, -1048577, !dbg !7516
  %bf.set = or i64 %bf.clear174, %bf.shl, !dbg !7516
  store i64 %bf.set, i64* %13, align 8, !dbg !7516
  br label %if.end175, !dbg !7514

if.end175:                                        ; preds = %do.end167.if.end175_crit_edge, %if.then170
  %bf.load178 = phi i64 [ %bf.load178.pre, %do.end167.if.end175_crit_edge ], [ %bf.set, %if.then170 ], !dbg !7513
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7517
  %16 = and i8 %side_effects.6, 1, !dbg !7513
  %bf.value179 = zext i8 %16 to i64, !dbg !7513
  %bf.shl180 = shl nuw nsw i64 %bf.value179, 16, !dbg !7513
  %bf.clear181 = and i64 %bf.load178, -65537, !dbg !7513
  %bf.set182 = or i64 %bf.clear181, %bf.shl180, !dbg !7513
  store i64 %bf.set182, i64* %15, align 8, !dbg !7513
  %arrayidx185 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !7518
  %17 = load i32, i32* %arrayidx185, align 4, !dbg !7518
  %cmp186 = icmp eq i32 %17, 4, !dbg !7519
  %tobool189 = icmp ne %union.tree_node* %arg0, null, !dbg !7520
  %or.cond8 = and i1 %cmp186, %tobool189, !dbg !7521
  br i1 %or.cond8, label %land.rhs, label %land.end, !dbg !7521

land.rhs:                                         ; preds = %if.end175
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7522
  %bf.load191 = load i64, i64* %18, align 8, !dbg !7522
  %bf.clear193 = and i64 %bf.load191, 524288, !dbg !7522
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end175
  %19 = phi i64 [ 0, %if.end175 ], [ %bf.clear193, %land.rhs ]
  %bf.clear200 = and i64 %bf.set182, -524289, !dbg !7523
  %bf.set201 = or i64 %bf.clear200, %19, !dbg !7523
  store i64 %bf.set201, i64* %15, align 8, !dbg !7523
  ret %union.tree_node* %call, !dbg !7524
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build5_stat(i32 %code, %union.tree_node* %tt, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %arg3, %union.tree_node* %arg4) local_unnamed_addr #5 !dbg !7525 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7529, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata %union.tree_node* %tt, metadata !7530, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !7531, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !7532, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !7533, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata %union.tree_node* %arg3, metadata !7534, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata %union.tree_node* %arg4, metadata !7535, metadata !DIExpression()), !dbg !7540
  %cmp = icmp eq i32 %code, 140, !dbg !7541
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7541

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3799, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7541
  br label %cond.end, !dbg !7541

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %union.tree_node* @make_node_stat(i32 %code) #8, !dbg !7542
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7539, metadata !DIExpression()), !dbg !7540
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7543
  store %union.tree_node* %tt, %union.tree_node** %type, align 8, !dbg !7544
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7545
  %bf.load = load i64, i64* %0, align 8, !dbg !7545
  %bf.lshr = lshr i64 %bf.load, 16, !dbg !7545
  %1 = trunc i64 %bf.lshr to i8, !dbg !7545
  %bf.cast = and i8 %1, 1, !dbg !7545
  call void @llvm.dbg.value(metadata i8 %bf.cast, metadata !7538, metadata !DIExpression()), !dbg !7540
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7546
  store %union.tree_node* %arg0, %union.tree_node** %operands, align 8, !dbg !7546
  %tobool = icmp eq %union.tree_node* %arg0, null, !dbg !7548
  br i1 %tobool, label %do.body45, label %land.lhs.true, !dbg !7548

land.lhs.true:                                    ; preds = %cond.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7548
  %bf.load5 = load i64, i64* %2, align 8, !dbg !7548
  %bf.cast7 = and i64 %bf.load5, 65535, !dbg !7548
  %3 = add nsw i64 %bf.cast7, -5, !dbg !7548
  %cmp10 = icmp ult i64 %3, 18, !dbg !7548
  br i1 %cmp10, label %do.body45, label %if.then, !dbg !7546

if.then:                                          ; preds = %land.lhs.true
  %bf.cast169 = and i64 %bf.load5, 65536, !dbg !7550
  %tobool17 = icmp eq i64 %bf.cast169, 0, !dbg !7550
  %spec.select = select i1 %tobool17, i8 %bf.cast, i8 1, !dbg !7553
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !7538, metadata !DIExpression()), !dbg !7540
  br label %do.body45, !dbg !7553

do.body45:                                        ; preds = %cond.end, %land.lhs.true, %if.then
  %side_effects.1 = phi i8 [ %bf.cast, %land.lhs.true ], [ %spec.select, %if.then ], [ %bf.cast, %cond.end ], !dbg !7540
  call void @llvm.dbg.value(metadata i8 %side_effects.1, metadata !7538, metadata !DIExpression()), !dbg !7540
  %arrayidx48 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7554
  store %union.tree_node* %arg1, %union.tree_node** %arrayidx48, align 8, !dbg !7554
  %tobool49 = icmp eq %union.tree_node* %arg1, null, !dbg !7556
  br i1 %tobool49, label %do.body96, label %land.lhs.true50, !dbg !7556

land.lhs.true50:                                  ; preds = %do.body45
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7556
  %bf.load52 = load i64, i64* %4, align 8, !dbg !7556
  %bf.cast54 = and i64 %bf.load52, 65535, !dbg !7556
  %5 = add nsw i64 %bf.cast54, -5, !dbg !7556
  %cmp57 = icmp ult i64 %5, 18, !dbg !7556
  br i1 %cmp57, label %do.body96, label %if.then59, !dbg !7554

if.then59:                                        ; preds = %land.lhs.true50
  %bf.cast648 = and i64 %bf.load52, 65536, !dbg !7558
  %tobool65 = icmp eq i64 %bf.cast648, 0, !dbg !7558
  %spec.select1 = select i1 %tobool65, i8 %side_effects.1, i8 1, !dbg !7561
  call void @llvm.dbg.value(metadata i8 %spec.select1, metadata !7538, metadata !DIExpression()), !dbg !7540
  br label %do.body96, !dbg !7561

do.body96:                                        ; preds = %do.body45, %land.lhs.true50, %if.then59
  %side_effects.3 = phi i8 [ %side_effects.1, %land.lhs.true50 ], [ %spec.select1, %if.then59 ], [ %side_effects.1, %do.body45 ], !dbg !7540
  call void @llvm.dbg.value(metadata i8 %side_effects.3, metadata !7538, metadata !DIExpression()), !dbg !7540
  %arrayidx99 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7562
  store %union.tree_node* %arg2, %union.tree_node** %arrayidx99, align 8, !dbg !7562
  %tobool100 = icmp eq %union.tree_node* %arg2, null, !dbg !7564
  br i1 %tobool100, label %do.body147, label %land.lhs.true101, !dbg !7564

land.lhs.true101:                                 ; preds = %do.body96
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7564
  %bf.load103 = load i64, i64* %6, align 8, !dbg !7564
  %bf.cast105 = and i64 %bf.load103, 65535, !dbg !7564
  %7 = add nsw i64 %bf.cast105, -5, !dbg !7564
  %cmp108 = icmp ult i64 %7, 18, !dbg !7564
  br i1 %cmp108, label %do.body147, label %if.then110, !dbg !7562

if.then110:                                       ; preds = %land.lhs.true101
  %bf.cast1157 = and i64 %bf.load103, 65536, !dbg !7566
  %tobool116 = icmp eq i64 %bf.cast1157, 0, !dbg !7566
  %spec.select2 = select i1 %tobool116, i8 %side_effects.3, i8 1, !dbg !7569
  call void @llvm.dbg.value(metadata i8 %spec.select2, metadata !7538, metadata !DIExpression()), !dbg !7540
  br label %do.body147, !dbg !7569

do.body147:                                       ; preds = %do.body96, %land.lhs.true101, %if.then110
  %side_effects.5 = phi i8 [ %side_effects.3, %land.lhs.true101 ], [ %spec.select2, %if.then110 ], [ %side_effects.3, %do.body96 ], !dbg !7540
  call void @llvm.dbg.value(metadata i8 %side_effects.5, metadata !7538, metadata !DIExpression()), !dbg !7540
  %arrayidx150 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !7570
  store %union.tree_node* %arg3, %union.tree_node** %arrayidx150, align 8, !dbg !7570
  %tobool151 = icmp eq %union.tree_node* %arg3, null, !dbg !7572
  br i1 %tobool151, label %do.body198, label %land.lhs.true152, !dbg !7572

land.lhs.true152:                                 ; preds = %do.body147
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7572
  %bf.load154 = load i64, i64* %8, align 8, !dbg !7572
  %bf.cast156 = and i64 %bf.load154, 65535, !dbg !7572
  %9 = add nsw i64 %bf.cast156, -5, !dbg !7572
  %cmp159 = icmp ult i64 %9, 18, !dbg !7572
  br i1 %cmp159, label %do.body198, label %if.then161, !dbg !7570

if.then161:                                       ; preds = %land.lhs.true152
  %bf.cast1666 = and i64 %bf.load154, 65536, !dbg !7574
  %tobool167 = icmp eq i64 %bf.cast1666, 0, !dbg !7574
  %spec.select3 = select i1 %tobool167, i8 %side_effects.5, i8 1, !dbg !7577
  call void @llvm.dbg.value(metadata i8 %spec.select3, metadata !7538, metadata !DIExpression()), !dbg !7540
  br label %do.body198, !dbg !7577

do.body198:                                       ; preds = %do.body147, %land.lhs.true152, %if.then161
  %side_effects.7 = phi i8 [ %side_effects.5, %land.lhs.true152 ], [ %spec.select3, %if.then161 ], [ %side_effects.5, %do.body147 ], !dbg !7540
  call void @llvm.dbg.value(metadata i8 %side_effects.7, metadata !7538, metadata !DIExpression()), !dbg !7540
  %arrayidx201 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !7578
  store %union.tree_node* %arg4, %union.tree_node** %arrayidx201, align 8, !dbg !7578
  %tobool202 = icmp eq %union.tree_node* %arg4, null, !dbg !7580
  br i1 %tobool202, label %do.end248, label %land.lhs.true203, !dbg !7580

land.lhs.true203:                                 ; preds = %do.body198
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7580
  %bf.load205 = load i64, i64* %10, align 8, !dbg !7580
  %bf.cast207 = and i64 %bf.load205, 65535, !dbg !7580
  %11 = add nsw i64 %bf.cast207, -5, !dbg !7580
  %cmp210 = icmp ult i64 %11, 18, !dbg !7580
  br i1 %cmp210, label %do.end248, label %if.then212, !dbg !7578

if.then212:                                       ; preds = %land.lhs.true203
  %bf.cast2175 = and i64 %bf.load205, 65536, !dbg !7582
  %tobool218 = icmp eq i64 %bf.cast2175, 0, !dbg !7582
  %spec.select4 = select i1 %tobool218, i8 %side_effects.7, i8 1, !dbg !7585
  call void @llvm.dbg.value(metadata i8 %spec.select4, metadata !7538, metadata !DIExpression()), !dbg !7540
  br label %do.end248, !dbg !7585

do.end248:                                        ; preds = %do.body198, %if.then212, %land.lhs.true203
  %side_effects.9 = phi i8 [ %side_effects.7, %land.lhs.true203 ], [ %spec.select4, %if.then212 ], [ %side_effects.7, %do.body198 ], !dbg !7540
  call void @llvm.dbg.value(metadata i8 %side_effects.9, metadata !7538, metadata !DIExpression()), !dbg !7540
  %12 = and i8 %side_effects.9, 1, !dbg !7586
  %bf.value = zext i8 %12 to i64, !dbg !7586
  %bf.shl = shl nuw nsw i64 %bf.value, 16, !dbg !7586
  %bf.clear252 = and i64 %bf.load, -65537, !dbg !7586
  %bf.set = or i64 %bf.clear252, %bf.shl, !dbg !7586
  store i64 %bf.set, i64* %0, align 8, !dbg !7586
  %idxprom253 = sext i32 %code to i64, !dbg !7587
  %arrayidx254 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom253, !dbg !7587
  %13 = load i32, i32* %arrayidx254, align 4, !dbg !7587
  %cmp255 = icmp eq i32 %13, 4, !dbg !7588
  %tobool258 = icmp ne %union.tree_node* %arg0, null, !dbg !7589
  %or.cond = and i1 %cmp255, %tobool258, !dbg !7590
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !7590

land.rhs:                                         ; preds = %do.end248
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7591
  %bf.load260 = load i64, i64* %14, align 8, !dbg !7591
  %bf.clear262 = and i64 %bf.load260, 524288, !dbg !7591
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end248
  %15 = phi i64 [ 0, %do.end248 ], [ %bf.clear262, %land.rhs ]
  %bf.clear269 = and i64 %bf.set, -524289, !dbg !7592
  %bf.set270 = or i64 %bf.clear269, %15, !dbg !7592
  store i64 %bf.set270, i64* %0, align 8, !dbg !7592
  ret %union.tree_node* %call, !dbg !7593
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build6_stat(i32 %code, %union.tree_node* %tt, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %arg3, %union.tree_node* %arg4, %union.tree_node* %arg5) local_unnamed_addr #5 !dbg !7594 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7598, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %union.tree_node* %tt, metadata !7599, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !7600, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !7601, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !7602, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %union.tree_node* %arg3, metadata !7603, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %union.tree_node* %arg4, metadata !7604, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %union.tree_node* %arg5, metadata !7605, metadata !DIExpression()), !dbg !7610
  %cmp = icmp eq i32 %code, 152, !dbg !7611
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7611

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 3827, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7611
  br label %cond.end, !dbg !7611

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %union.tree_node* @make_node_stat(i32 %code) #8, !dbg !7612
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7609, metadata !DIExpression()), !dbg !7610
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7613
  store %union.tree_node* %tt, %union.tree_node** %type, align 8, !dbg !7614
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7615
  %bf.load = load i64, i64* %0, align 8, !dbg !7615
  %bf.lshr = lshr i64 %bf.load, 16, !dbg !7615
  %1 = trunc i64 %bf.lshr to i8, !dbg !7615
  %bf.cast = and i8 %1, 1, !dbg !7615
  call void @llvm.dbg.value(metadata i8 %bf.cast, metadata !7608, metadata !DIExpression()), !dbg !7610
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7616
  store %union.tree_node* %arg0, %union.tree_node** %operands, align 8, !dbg !7616
  %tobool = icmp eq %union.tree_node* %arg0, null, !dbg !7618
  br i1 %tobool, label %do.body41, label %land.lhs.true, !dbg !7618

land.lhs.true:                                    ; preds = %cond.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7618
  %bf.load2 = load i64, i64* %2, align 8, !dbg !7618
  %bf.cast4 = and i64 %bf.load2, 65535, !dbg !7618
  %3 = add nsw i64 %bf.cast4, -5, !dbg !7618
  %cmp6 = icmp ult i64 %3, 18, !dbg !7618
  br i1 %cmp6, label %do.body41, label %if.then, !dbg !7616

if.then:                                          ; preds = %land.lhs.true
  %bf.cast1212 = and i64 %bf.load2, 65536, !dbg !7620
  %tobool13 = icmp eq i64 %bf.cast1212, 0, !dbg !7620
  %spec.select = select i1 %tobool13, i8 %bf.cast, i8 1, !dbg !7623
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !7608, metadata !DIExpression()), !dbg !7610
  br label %do.body41, !dbg !7623

do.body41:                                        ; preds = %cond.end, %land.lhs.true, %if.then
  %side_effects.1 = phi i8 [ %bf.cast, %land.lhs.true ], [ %spec.select, %if.then ], [ %bf.cast, %cond.end ], !dbg !7610
  call void @llvm.dbg.value(metadata i8 %side_effects.1, metadata !7608, metadata !DIExpression()), !dbg !7610
  %arrayidx44 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7624
  store %union.tree_node* %arg1, %union.tree_node** %arrayidx44, align 8, !dbg !7624
  %tobool45 = icmp eq %union.tree_node* %arg1, null, !dbg !7626
  br i1 %tobool45, label %do.body92, label %land.lhs.true46, !dbg !7626

land.lhs.true46:                                  ; preds = %do.body41
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7626
  %bf.load48 = load i64, i64* %4, align 8, !dbg !7626
  %bf.cast50 = and i64 %bf.load48, 65535, !dbg !7626
  %5 = add nsw i64 %bf.cast50, -5, !dbg !7626
  %cmp53 = icmp ult i64 %5, 18, !dbg !7626
  br i1 %cmp53, label %do.body92, label %if.then55, !dbg !7624

if.then55:                                        ; preds = %land.lhs.true46
  %bf.cast6011 = and i64 %bf.load48, 65536, !dbg !7628
  %tobool61 = icmp eq i64 %bf.cast6011, 0, !dbg !7628
  %spec.select1 = select i1 %tobool61, i8 %side_effects.1, i8 1, !dbg !7631
  call void @llvm.dbg.value(metadata i8 %spec.select1, metadata !7608, metadata !DIExpression()), !dbg !7610
  br label %do.body92, !dbg !7631

do.body92:                                        ; preds = %do.body41, %land.lhs.true46, %if.then55
  %side_effects.3 = phi i8 [ %side_effects.1, %land.lhs.true46 ], [ %spec.select1, %if.then55 ], [ %side_effects.1, %do.body41 ], !dbg !7610
  call void @llvm.dbg.value(metadata i8 %side_effects.3, metadata !7608, metadata !DIExpression()), !dbg !7610
  %arrayidx95 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7632
  store %union.tree_node* %arg2, %union.tree_node** %arrayidx95, align 8, !dbg !7632
  %tobool96 = icmp eq %union.tree_node* %arg2, null, !dbg !7634
  br i1 %tobool96, label %do.body143, label %land.lhs.true97, !dbg !7634

land.lhs.true97:                                  ; preds = %do.body92
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7634
  %bf.load99 = load i64, i64* %6, align 8, !dbg !7634
  %bf.cast101 = and i64 %bf.load99, 65535, !dbg !7634
  %7 = add nsw i64 %bf.cast101, -5, !dbg !7634
  %cmp104 = icmp ult i64 %7, 18, !dbg !7634
  br i1 %cmp104, label %do.body143, label %if.then106, !dbg !7632

if.then106:                                       ; preds = %land.lhs.true97
  %bf.cast11110 = and i64 %bf.load99, 65536, !dbg !7636
  %tobool112 = icmp eq i64 %bf.cast11110, 0, !dbg !7636
  %spec.select2 = select i1 %tobool112, i8 %side_effects.3, i8 1, !dbg !7639
  call void @llvm.dbg.value(metadata i8 %spec.select2, metadata !7608, metadata !DIExpression()), !dbg !7610
  br label %do.body143, !dbg !7639

do.body143:                                       ; preds = %do.body92, %land.lhs.true97, %if.then106
  %side_effects.5 = phi i8 [ %side_effects.3, %land.lhs.true97 ], [ %spec.select2, %if.then106 ], [ %side_effects.3, %do.body92 ], !dbg !7610
  call void @llvm.dbg.value(metadata i8 %side_effects.5, metadata !7608, metadata !DIExpression()), !dbg !7610
  %arrayidx146 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !7640
  store %union.tree_node* %arg3, %union.tree_node** %arrayidx146, align 8, !dbg !7640
  %tobool147 = icmp eq %union.tree_node* %arg3, null, !dbg !7642
  br i1 %tobool147, label %do.body194, label %land.lhs.true148, !dbg !7642

land.lhs.true148:                                 ; preds = %do.body143
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7642
  %bf.load150 = load i64, i64* %8, align 8, !dbg !7642
  %bf.cast152 = and i64 %bf.load150, 65535, !dbg !7642
  %9 = add nsw i64 %bf.cast152, -5, !dbg !7642
  %cmp155 = icmp ult i64 %9, 18, !dbg !7642
  br i1 %cmp155, label %do.body194, label %if.then157, !dbg !7640

if.then157:                                       ; preds = %land.lhs.true148
  %bf.cast1629 = and i64 %bf.load150, 65536, !dbg !7644
  %tobool163 = icmp eq i64 %bf.cast1629, 0, !dbg !7644
  %spec.select3 = select i1 %tobool163, i8 %side_effects.5, i8 1, !dbg !7647
  call void @llvm.dbg.value(metadata i8 %spec.select3, metadata !7608, metadata !DIExpression()), !dbg !7610
  br label %do.body194, !dbg !7647

do.body194:                                       ; preds = %do.body143, %land.lhs.true148, %if.then157
  %side_effects.7 = phi i8 [ %side_effects.5, %land.lhs.true148 ], [ %spec.select3, %if.then157 ], [ %side_effects.5, %do.body143 ], !dbg !7610
  call void @llvm.dbg.value(metadata i8 %side_effects.7, metadata !7608, metadata !DIExpression()), !dbg !7610
  %arrayidx197 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !7648
  store %union.tree_node* %arg4, %union.tree_node** %arrayidx197, align 8, !dbg !7648
  %tobool198 = icmp eq %union.tree_node* %arg4, null, !dbg !7650
  br i1 %tobool198, label %do.end244, label %land.lhs.true199, !dbg !7650

land.lhs.true199:                                 ; preds = %do.body194
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7650
  %bf.load201 = load i64, i64* %10, align 8, !dbg !7650
  %bf.cast203 = and i64 %bf.load201, 65535, !dbg !7650
  %11 = add nsw i64 %bf.cast203, -5, !dbg !7650
  %cmp206 = icmp ult i64 %11, 18, !dbg !7650
  br i1 %cmp206, label %do.end244, label %if.then208, !dbg !7648

if.then208:                                       ; preds = %land.lhs.true199
  %bf.cast2138 = and i64 %bf.load201, 65536, !dbg !7652
  %tobool214 = icmp eq i64 %bf.cast2138, 0, !dbg !7652
  %spec.select4 = select i1 %tobool214, i8 %side_effects.7, i8 1, !dbg !7655
  call void @llvm.dbg.value(metadata i8 %spec.select4, metadata !7608, metadata !DIExpression()), !dbg !7610
  br label %do.end244, !dbg !7655

do.end244:                                        ; preds = %do.body194, %if.then208, %land.lhs.true199
  %side_effects.9 = phi i8 [ %side_effects.7, %land.lhs.true199 ], [ %spec.select4, %if.then208 ], [ %side_effects.7, %do.body194 ], !dbg !7610
  call void @llvm.dbg.value(metadata i8 %side_effects.9, metadata !7608, metadata !DIExpression()), !dbg !7610
  %spec.select5 = select i1 %cmp, i8 0, i8 %side_effects.9, !dbg !7656
  call void @llvm.dbg.value(metadata i8 %spec.select5, metadata !7608, metadata !DIExpression()), !dbg !7610
  %arrayidx252 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 5, !dbg !7657
  store %union.tree_node* %arg5, %union.tree_node** %arrayidx252, align 8, !dbg !7657
  %tobool253 = icmp eq %union.tree_node* %arg5, null, !dbg !7659
  br i1 %tobool253, label %do.end299, label %land.lhs.true254, !dbg !7659

land.lhs.true254:                                 ; preds = %do.end244
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7659
  %bf.load256 = load i64, i64* %12, align 8, !dbg !7659
  %bf.cast258 = and i64 %bf.load256, 65535, !dbg !7659
  %13 = add nsw i64 %bf.cast258, -5, !dbg !7659
  %cmp261 = icmp ult i64 %13, 18, !dbg !7659
  br i1 %cmp261, label %do.end299, label %if.then263, !dbg !7657

if.then263:                                       ; preds = %land.lhs.true254
  %bf.cast2687 = and i64 %bf.load256, 65536, !dbg !7661
  %tobool269 = icmp eq i64 %bf.cast2687, 0, !dbg !7661
  %spec.select6 = select i1 %tobool269, i8 %spec.select5, i8 1, !dbg !7664
  call void @llvm.dbg.value(metadata i8 %spec.select6, metadata !7608, metadata !DIExpression()), !dbg !7610
  br label %do.end299, !dbg !7664

do.end299:                                        ; preds = %do.end244, %if.then263, %land.lhs.true254
  %side_effects.12 = phi i8 [ %spec.select5, %land.lhs.true254 ], [ %spec.select6, %if.then263 ], [ %spec.select5, %do.end244 ], !dbg !7610
  call void @llvm.dbg.value(metadata i8 %side_effects.12, metadata !7608, metadata !DIExpression()), !dbg !7610
  %14 = and i8 %side_effects.12, 1, !dbg !7665
  %bf.value = zext i8 %14 to i64, !dbg !7665
  %bf.shl = shl nuw nsw i64 %bf.value, 16, !dbg !7665
  %bf.clear303 = and i64 %bf.load, -65537, !dbg !7665
  %bf.set = or i64 %bf.clear303, %bf.shl, !dbg !7665
  store i64 %bf.set, i64* %0, align 8, !dbg !7665
  %tobool307 = icmp ne %union.tree_node* %arg5, null, !dbg !7666
  %or.cond = and i1 %cmp, %tobool307, !dbg !7667
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !7667

land.rhs:                                         ; preds = %do.end299
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7668
  %bf.load309 = load i64, i64* %15, align 8, !dbg !7668
  %bf.clear311 = and i64 %bf.load309, 524288, !dbg !7668
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end299
  %16 = phi i64 [ 0, %do.end299 ], [ %bf.clear311, %land.rhs ]
  %bf.clear318 = and i64 %bf.set, -524289, !dbg !7669
  %bf.set319 = or i64 %bf.clear318, %16, !dbg !7669
  store i64 %bf.set319, i64* %0, align 8, !dbg !7669
  ret %union.tree_node* %call, !dbg !7670
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_nt_call_list(%union.tree_node* %fn, %union.tree_node* %arglist) local_unnamed_addr #5 !dbg !7671 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !7673, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist, metadata !7674, metadata !DIExpression()), !dbg !7677
  %call = tail call i32 @list_length(%union.tree_node* %arglist) #8, !dbg !7678
  %add = add nsw i32 %call, 3, !dbg !7678
  %call1 = tail call %union.tree_node* @build_vl_exp_stat(i32 59, i32 %add) #8, !dbg !7678
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7675, metadata !DIExpression()), !dbg !7677
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7679
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7679
  store %union.tree_node* %fn, %union.tree_node** %arrayidx, align 8, !dbg !7680
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7681
  store %union.tree_node* null, %union.tree_node** %arrayidx4, align 8, !dbg !7682
  call void @llvm.dbg.value(metadata i32 0, metadata !7676, metadata !DIExpression()), !dbg !7677
  br label %for.cond, !dbg !7683

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arglist.addr.0 = phi %union.tree_node* [ %5, %for.body ], [ %arglist, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7676, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.addr.0, metadata !7674, metadata !DIExpression()), !dbg !7677
  %tobool = icmp eq %union.tree_node* %arglist.addr.0, null, !dbg !7685
  br i1 %tobool, label %for.end, label %for.body, !dbg !7685

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arglist.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7686
  %1 = bitcast %union.tree_node** %0 to i64*, !dbg !7686
  %2 = load i64, i64* %1, align 8, !dbg !7686
  %3 = add nuw nsw i64 %indvars.iv, 3, !dbg !7688
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %3, !dbg !7688
  %4 = bitcast %union.tree_node** %arrayidx8 to i64*, !dbg !7689
  store i64 %2, i64* %4, align 8, !dbg !7689
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arglist.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7690
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !7690
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7674, metadata !DIExpression()), !dbg !7677
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !7691
  call void @llvm.dbg.value(metadata i32 undef, metadata !7676, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7677
  br label %for.cond, !dbg !7692, !llvm.loop !7693

for.end:                                          ; preds = %for.cond
  ret %union.tree_node* %call1, !dbg !7695
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_vl_exp_stat(i32 %code, i32 %len) local_unnamed_addr #5 !dbg !7696 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7700, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %len, metadata !7701, metadata !DIExpression()), !dbg !7704
  %sub = shl i32 %len, 3, !dbg !7705
  %add = add i32 %sub, 40, !dbg !7706
  call void @llvm.dbg.value(metadata i32 %add, metadata !7703, metadata !DIExpression()), !dbg !7704
  %cmp = icmp eq i32 %code, 59, !dbg !7707
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7707

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 9403, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7707
  br label %cond.end, !dbg !7707

cond.end:                                         ; preds = %entry, %cond.true
  %cmp3 = icmp sgt i32 %len, 0, !dbg !7708
  br i1 %cmp3, label %cond.end7, label %cond.true5, !dbg !7708

cond.true5:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 9404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !7708
  br label %cond.end7, !dbg !7708

cond.end7:                                        ; preds = %cond.end, %cond.true5
  %conv9 = sext i32 %add to i64, !dbg !7709
  %call = tail call i8* @ggc_alloc_stat(i64 %conv9) #7, !dbg !7709
  %0 = bitcast i8* %call to %union.tree_node*, !dbg !7710
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7702, metadata !DIExpression()), !dbg !7704
  %call11 = tail call i8* @memset(i8* %call, i32 0, i64 %conv9) #7, !dbg !7711
  %1 = bitcast i8* %call to i64*, !dbg !7712
  %bf.load = load i64, i64* %1, align 8, !dbg !7712
  %2 = and i32 %code, 65535, !dbg !7712
  %bf.value = zext i32 %2 to i64, !dbg !7712
  %bf.clear = and i64 %bf.load, -65536, !dbg !7712
  %bf.set = or i64 %bf.clear, %bf.value, !dbg !7712
  store i64 %bf.set, i64* %1, align 8, !dbg !7712
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !7713
  %conv12 = sext i32 %len to i64, !dbg !7714
  %call13 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %3, i64 %conv12) #8, !dbg !7715
  %operands = getelementptr inbounds i8, i8* %call, i64 40, !dbg !7716
  %arrayidx14 = bitcast i8* %operands to %union.tree_node**, !dbg !7717
  store %union.tree_node* %call13, %union.tree_node** %arrayidx14, align 8, !dbg !7718
  ret %union.tree_node* %0, !dbg !7719
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_nt_call_vec(%union.tree_node* %fn, %struct.VEC_tree_gc* %args) local_unnamed_addr #5 !dbg !7720 {
entry:
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !7724, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %args, metadata !7725, metadata !DIExpression()), !dbg !7729
  %0 = bitcast %union.tree_node** %t to i8*, !dbg !7730
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7730
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %args, i64 0, i32 0, !dbg !7731
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !7731
  %add = add i32 %call, 3, !dbg !7731
  %call1 = tail call %union.tree_node* @build_vl_exp_stat(i32 59, i32 %add) #8, !dbg !7731
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7726, metadata !DIExpression()), !dbg !7729
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7732
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7732
  store %union.tree_node* %fn, %union.tree_node** %arrayidx, align 8, !dbg !7733
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !7734
  store %union.tree_node* null, %union.tree_node** %arrayidx4, align 8, !dbg !7735
  call void @llvm.dbg.value(metadata i32 0, metadata !7728, metadata !DIExpression()), !dbg !7729
  %1 = bitcast %union.tree_node** %t to i64*, !dbg !7736
  br label %for.cond, !dbg !7739

for.cond:                                         ; preds = %for.body, %entry
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !7740
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !7728, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !7727, metadata !DIExpression(DW_OP_deref)), !dbg !7729
  %call11 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %ix.0, %union.tree_node** nonnull %t) #8, !dbg !7741
  %tobool12 = icmp eq i32 %call11, 0, !dbg !7742
  br i1 %tobool12, label %for.end, label %for.body, !dbg !7742

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %1, align 8, !dbg !7743
  %add15 = add i32 %ix.0, 3, !dbg !7744
  %idxprom = zext i32 %add15 to i64, !dbg !7744
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %idxprom, !dbg !7744
  %3 = bitcast %union.tree_node** %arrayidx16 to i64*, !dbg !7745
  store i64 %2, i64* %3, align 8, !dbg !7745
  %inc = add i32 %ix.0, 1, !dbg !7746
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7728, metadata !DIExpression()), !dbg !7729
  br label %for.cond, !dbg !7747, !llvm.loop !7748

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7750
  ret %union.tree_node* %call1, !dbg !7751
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_decl_stat(i32 %loc, i32 %code, %union.tree_node* %name, %union.tree_node* %type) local_unnamed_addr #5 !dbg !7752 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7756, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %code, metadata !7757, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !7758, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7759, metadata !DIExpression()), !dbg !7761
  %call = tail call %union.tree_node* @make_node_stat(i32 %code) #8, !dbg !7762
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7760, metadata !DIExpression()), !dbg !7761
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7763
  store i32 %loc, i32* %locus, align 8, !dbg !7764
  %name2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7765
  store %union.tree_node* %name, %union.tree_node** %name2, align 8, !dbg !7766
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7767
  store %union.tree_node* %type, %union.tree_node** %type3, align 8, !dbg !7768
  switch i32 %code, label %if.end [
    i32 32, label %if.then
    i32 34, label %if.then
    i32 36, label %if.then
  ], !dbg !7769

if.then:                                          ; preds = %entry, %entry, %entry
  tail call void @layout_decl(%union.tree_node* %call, i32 0) #7, !dbg !7771
  br label %if.end, !dbg !7771

if.end:                                           ; preds = %entry, %if.then
  ret %union.tree_node* %call, !dbg !7772
}

declare dso_local void @layout_decl(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_fn_decl(i8* %name, %union.tree_node* %type) local_unnamed_addr #5 !dbg !7773 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !7777, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7778, metadata !DIExpression()), !dbg !7781
  %call = tail call %union.tree_node* @get_identifier(i8* %name) #7, !dbg !7782
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7779, metadata !DIExpression()), !dbg !7781
  %0 = load i32, i32* @input_location, align 4, !dbg !7783
  %call1 = tail call %union.tree_node* @build_decl_stat(i32 %0, i32 29, %union.tree_node* %call, %union.tree_node* %type) #8, !dbg !7783
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7780, metadata !DIExpression()), !dbg !7781
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7784
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !7784
  %bf.load = load i64, i64* %1, align 8, !dbg !7785
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7786
  %bf.load2 = load i64, i64* %2, align 8, !dbg !7787
  %bf.set8 = or i64 %bf.load, 33558528, !dbg !7788
  store i64 %bf.set8, i64* %1, align 8, !dbg !7788
  %bf.set12 = or i64 %bf.load2, 167772160, !dbg !7789
  store i64 %bf.set12, i64* %2, align 8, !dbg !7789
  ret %union.tree_node* %call1, !dbg !7790
}

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_block(%union.tree_node* %vars, %union.tree_node* %subblocks, %union.tree_node* %supercontext, %union.tree_node* %chain) local_unnamed_addr #5 !dbg !7791 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %vars, metadata !7795, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata %union.tree_node* %subblocks, metadata !7796, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata %union.tree_node* %supercontext, metadata !7797, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata %union.tree_node* %chain, metadata !7798, metadata !DIExpression()), !dbg !7800
  %call = tail call %union.tree_node* @make_node_stat(i32 4) #8, !dbg !7801
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7799, metadata !DIExpression()), !dbg !7800
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7802
  store %union.tree_node* %vars, %union.tree_node** %0, align 8, !dbg !7803
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7804
  store %union.tree_node* %subblocks, %union.tree_node** %1, align 8, !dbg !7805
  %supercontext6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7806
  %2 = bitcast i40* %supercontext6 to %union.tree_node**, !dbg !7806
  store %union.tree_node* %supercontext, %union.tree_node** %2, align 8, !dbg !7807
  %chain7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7808
  store %union.tree_node* %chain, %union.tree_node** %chain7, align 8, !dbg !7809
  ret %union.tree_node* %call, !dbg !7810
}

; Function Attrs: nounwind uwtable
define dso_local void @expand_location(%struct.expanded_location* noalias sret %agg.result, i32 %loc) local_unnamed_addr #5 !dbg !7811 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7822, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.declare(metadata %struct.expanded_location* %agg.result, metadata !7823, metadata !DIExpression()), !dbg !7840
  %cmp = icmp ult i32 %loc, 2, !dbg !7841
  br i1 %cmp, label %if.then, label %if.else, !dbg !7842

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %loc, 0, !dbg !7843
  %cond = select i1 %cmp1, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.220, i64 0, i64 0), !dbg !7845
  %file = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %agg.result, i64 0, i32 0, !dbg !7846
  store i8* %cond, i8** %file, align 8, !dbg !7847
  %line = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %agg.result, i64 0, i32 1, !dbg !7848
  store i32 0, i32* %line, align 8, !dbg !7849
  %column = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %agg.result, i64 0, i32 2, !dbg !7850
  store i32 0, i32* %column, align 4, !dbg !7851
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %agg.result, i64 0, i32 3, !dbg !7852
  store i8 0, i8* %sysp, align 8, !dbg !7853
  br label %if.end, !dbg !7854

if.else:                                          ; preds = %entry
  %0 = load %struct.line_maps*, %struct.line_maps** @line_table, align 8, !dbg !7855
  %call = tail call %struct.line_map* @linemap_lookup(%struct.line_maps* %0, i32 %loc) #7, !dbg !7856
  call void @llvm.dbg.value(metadata %struct.line_map* %call, metadata !7824, metadata !DIExpression()), !dbg !7857
  %1 = bitcast %struct.line_map* %call to i64*, !dbg !7858
  %2 = load i64, i64* %1, align 8, !dbg !7858
  %3 = bitcast %struct.expanded_location* %agg.result to i64*, !dbg !7859
  store i64 %2, i64* %3, align 8, !dbg !7859
  %start_location = getelementptr inbounds %struct.line_map, %struct.line_map* %call, i64 0, i32 2, !dbg !7860
  %4 = load i32, i32* %start_location, align 4, !dbg !7860
  %sub = sub i32 %loc, %4, !dbg !7860
  %column_bits = getelementptr inbounds %struct.line_map, %struct.line_map* %call, i64 0, i32 6, !dbg !7860
  %bf.load = load i8, i8* %column_bits, align 2, !dbg !7860
  %bf.cast = zext i8 %bf.load to i32, !dbg !7860
  %shr = lshr i32 %sub, %bf.cast, !dbg !7860
  %to_line = getelementptr inbounds %struct.line_map, %struct.line_map* %call, i64 0, i32 1, !dbg !7860
  %5 = load i32, i32* %to_line, align 8, !dbg !7860
  %add = add i32 %shr, %5, !dbg !7860
  %line3 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %agg.result, i64 0, i32 1, !dbg !7861
  store i32 %add, i32* %line3, align 8, !dbg !7862
  %notmask = shl nsw i32 -1, %bf.cast, !dbg !7863
  %sub9 = xor i32 %notmask, -1, !dbg !7863
  %and = and i32 %sub, %sub9, !dbg !7863
  %column10 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %agg.result, i64 0, i32 2, !dbg !7864
  store i32 %and, i32* %column10, align 4, !dbg !7865
  %sysp11 = getelementptr inbounds %struct.line_map, %struct.line_map* %call, i64 0, i32 5, !dbg !7866
  %6 = load i8, i8* %sysp11, align 1, !dbg !7866
  %cmp12 = icmp ne i8 %6, 0, !dbg !7867
  %conv14 = zext i1 %cmp12 to i8, !dbg !7868
  %sysp15 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %agg.result, i64 0, i32 3, !dbg !7869
  store i8 %conv14, i8* %sysp15, align 8, !dbg !7870
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7871
}

declare dso_local %struct.line_map* @linemap_lookup(%struct.line_maps*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @protected_set_expr_location(%union.tree_node* %t, i32 %loc) local_unnamed_addr #5 !dbg !7872 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7876, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7877, metadata !DIExpression()), !dbg !7878
  %tobool = icmp eq %union.tree_node* %t, null, !dbg !7879
  br i1 %tobool, label %if.end, label %land.lhs.true2, !dbg !7881

land.lhs.true2:                                   ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7882
  %bf.load = load i64, i64* %0, align 8, !dbg !7882
  %bf.cast = and i64 %bf.load, 65535, !dbg !7882
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7882
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7882
  %cmp = icmp ugt i32 %1, 3, !dbg !7882
  br i1 %cmp, label %land.lhs.true3, label %if.end, !dbg !7882

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7883
  store i32 %loc, i32* %2, align 8, !dbg !7883
  br label %if.end, !dbg !7883

if.end:                                           ; preds = %entry, %land.lhs.true3, %land.lhs.true2
  ret void, !dbg !7884
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_decl_attribute_variant(%union.tree_node* %ddecl, %union.tree_node* %attribute) local_unnamed_addr #5 !dbg !7885 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ddecl, metadata !7887, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata %union.tree_node* %attribute, metadata !7888, metadata !DIExpression()), !dbg !7889
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %ddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7890
  store %union.tree_node* %attribute, %union.tree_node** %attributes, align 8, !dbg !7891
  ret %union.tree_node* %ddecl, !dbg !7892
}

; Function Attrs: nounwind uwtable
define dso_local i32 @iterative_hash_hashval_t(i32 %val, i32 %val2) local_unnamed_addr #5 !dbg !7893 {
entry:
  call void @llvm.dbg.value(metadata i32 %val, metadata !7897, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 %val2, metadata !7898, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 -1640531527, metadata !7899, metadata !DIExpression()), !dbg !7900
  %sub = sub i32 -1640531527, %val, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7899, metadata !DIExpression()), !dbg !7900
  %sub1 = sub i32 %sub, %val2, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub1, metadata !7899, metadata !DIExpression()), !dbg !7900
  %shr = lshr i32 %val2, 13, !dbg !7901
  %xor = xor i32 %sub1, %shr, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor, metadata !7899, metadata !DIExpression()), !dbg !7900
  %sub2 = sub i32 %val, %val2, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub2, metadata !7897, metadata !DIExpression()), !dbg !7900
  %sub3 = sub i32 %sub2, %xor, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub3, metadata !7897, metadata !DIExpression()), !dbg !7900
  %shl = shl i32 %xor, 8, !dbg !7901
  %xor4 = xor i32 %sub3, %shl, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor4, metadata !7897, metadata !DIExpression()), !dbg !7900
  %sub5 = sub i32 %val2, %xor, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub5, metadata !7898, metadata !DIExpression()), !dbg !7900
  %sub6 = sub i32 %sub5, %xor4, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub6, metadata !7898, metadata !DIExpression()), !dbg !7900
  %shr7 = lshr i32 %xor4, 13, !dbg !7901
  %xor8 = xor i32 %sub6, %shr7, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor8, metadata !7898, metadata !DIExpression()), !dbg !7900
  %sub9 = sub i32 %xor, %xor4, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub9, metadata !7899, metadata !DIExpression()), !dbg !7900
  %sub10 = sub i32 %sub9, %xor8, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub10, metadata !7899, metadata !DIExpression()), !dbg !7900
  %shr11 = lshr i32 %xor8, 12, !dbg !7901
  %xor12 = xor i32 %sub10, %shr11, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor12, metadata !7899, metadata !DIExpression()), !dbg !7900
  %sub13 = sub i32 %xor4, %xor8, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub13, metadata !7897, metadata !DIExpression()), !dbg !7900
  %sub14 = sub i32 %sub13, %xor12, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub14, metadata !7897, metadata !DIExpression()), !dbg !7900
  %shl15 = shl i32 %xor12, 16, !dbg !7901
  %xor16 = xor i32 %sub14, %shl15, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor16, metadata !7897, metadata !DIExpression()), !dbg !7900
  %sub17 = sub i32 %xor8, %xor12, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub17, metadata !7898, metadata !DIExpression()), !dbg !7900
  %sub18 = sub i32 %sub17, %xor16, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub18, metadata !7898, metadata !DIExpression()), !dbg !7900
  %shr19 = lshr i32 %xor16, 5, !dbg !7901
  %xor20 = xor i32 %sub18, %shr19, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor20, metadata !7898, metadata !DIExpression()), !dbg !7900
  %sub21 = sub i32 %xor12, %xor16, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub21, metadata !7899, metadata !DIExpression()), !dbg !7900
  %sub22 = sub i32 %sub21, %xor20, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub22, metadata !7899, metadata !DIExpression()), !dbg !7900
  %shr23 = lshr i32 %xor20, 3, !dbg !7901
  %xor24 = xor i32 %sub22, %shr23, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor24, metadata !7899, metadata !DIExpression()), !dbg !7900
  %sub25 = sub i32 %xor16, %xor20, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub25, metadata !7897, metadata !DIExpression()), !dbg !7900
  %sub26 = sub i32 %sub25, %xor24, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub26, metadata !7897, metadata !DIExpression()), !dbg !7900
  %shl27 = shl i32 %xor24, 10, !dbg !7901
  %xor28 = xor i32 %sub26, %shl27, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor28, metadata !7897, metadata !DIExpression()), !dbg !7900
  %sub29 = sub i32 %xor20, %xor24, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub29, metadata !7898, metadata !DIExpression()), !dbg !7900
  %sub30 = sub i32 %sub29, %xor28, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %sub30, metadata !7898, metadata !DIExpression()), !dbg !7900
  %shr31 = lshr i32 %xor28, 15, !dbg !7901
  %xor32 = xor i32 %sub30, %shr31, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %xor32, metadata !7898, metadata !DIExpression()), !dbg !7900
  ret i32 %xor32, !dbg !7903
}

; Function Attrs: nounwind uwtable
define dso_local i32 @iterative_hash_host_wide_int(i64 %val, i32 %val2) local_unnamed_addr #5 !dbg !7904 {
entry:
  call void @llvm.dbg.value(metadata i64 %val, metadata !7908, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i32 %val2, metadata !7909, metadata !DIExpression()), !dbg !7915
  %conv = trunc i64 %val to i32, !dbg !7916
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7910, metadata !DIExpression()), !dbg !7917
  call void @llvm.dbg.value(metadata i32 0, metadata !7913, metadata !DIExpression()), !dbg !7917
  %0 = lshr i64 %val, 32, !dbg !7918
  %conv2 = trunc i64 %0 to i32, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %conv2, metadata !7914, metadata !DIExpression()), !dbg !7917
  %sub = sub i32 %conv, %conv2, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7910, metadata !DIExpression()), !dbg !7917
  %sub3 = sub i32 %sub, %val2, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub3, metadata !7910, metadata !DIExpression()), !dbg !7917
  %shr4 = lshr i32 %val2, 13, !dbg !7920
  %xor = xor i32 %sub3, %shr4, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor, metadata !7910, metadata !DIExpression()), !dbg !7917
  %sub5 = sub i32 %conv2, %val2, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub5, metadata !7914, metadata !DIExpression()), !dbg !7917
  %sub6 = sub i32 %sub5, %xor, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub6, metadata !7914, metadata !DIExpression()), !dbg !7917
  %shl = shl i32 %xor, 8, !dbg !7920
  %xor7 = xor i32 %sub6, %shl, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor7, metadata !7914, metadata !DIExpression()), !dbg !7917
  %sub8 = sub i32 %val2, %xor, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub8, metadata !7909, metadata !DIExpression()), !dbg !7915
  %sub9 = sub i32 %sub8, %xor7, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub9, metadata !7909, metadata !DIExpression()), !dbg !7915
  %shr10 = lshr i32 %xor7, 13, !dbg !7920
  %xor11 = xor i32 %sub9, %shr10, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor11, metadata !7909, metadata !DIExpression()), !dbg !7915
  %sub12 = sub i32 %xor, %xor7, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub12, metadata !7910, metadata !DIExpression()), !dbg !7917
  %sub13 = sub i32 %sub12, %xor11, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub13, metadata !7910, metadata !DIExpression()), !dbg !7917
  %shr14 = lshr i32 %xor11, 12, !dbg !7920
  %xor15 = xor i32 %sub13, %shr14, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor15, metadata !7910, metadata !DIExpression()), !dbg !7917
  %sub16 = sub i32 %xor7, %xor11, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub16, metadata !7914, metadata !DIExpression()), !dbg !7917
  %sub17 = sub i32 %sub16, %xor15, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub17, metadata !7914, metadata !DIExpression()), !dbg !7917
  %shl18 = shl i32 %xor15, 16, !dbg !7920
  %xor19 = xor i32 %sub17, %shl18, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor19, metadata !7914, metadata !DIExpression()), !dbg !7917
  %sub20 = sub i32 %xor11, %xor15, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub20, metadata !7909, metadata !DIExpression()), !dbg !7915
  %sub21 = sub i32 %sub20, %xor19, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub21, metadata !7909, metadata !DIExpression()), !dbg !7915
  %shr22 = lshr i32 %xor19, 5, !dbg !7920
  %xor23 = xor i32 %sub21, %shr22, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor23, metadata !7909, metadata !DIExpression()), !dbg !7915
  %sub24 = sub i32 %xor15, %xor19, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub24, metadata !7910, metadata !DIExpression()), !dbg !7917
  %sub25 = sub i32 %sub24, %xor23, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub25, metadata !7910, metadata !DIExpression()), !dbg !7917
  %shr26 = lshr i32 %xor23, 3, !dbg !7920
  %xor27 = xor i32 %sub25, %shr26, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor27, metadata !7910, metadata !DIExpression()), !dbg !7917
  %sub28 = sub i32 %xor19, %xor23, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub28, metadata !7914, metadata !DIExpression()), !dbg !7917
  %sub29 = sub i32 %sub28, %xor27, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub29, metadata !7914, metadata !DIExpression()), !dbg !7917
  %shl30 = shl i32 %xor27, 10, !dbg !7920
  %xor31 = xor i32 %sub29, %shl30, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor31, metadata !7914, metadata !DIExpression()), !dbg !7917
  %sub32 = sub i32 %xor23, %xor27, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub32, metadata !7909, metadata !DIExpression()), !dbg !7915
  %sub33 = sub i32 %sub32, %xor31, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %sub33, metadata !7909, metadata !DIExpression()), !dbg !7915
  %shr34 = lshr i32 %xor31, 15, !dbg !7920
  %xor35 = xor i32 %sub33, %shr34, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %xor35, metadata !7909, metadata !DIExpression()), !dbg !7915
  ret i32 %xor35, !dbg !7922
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_type_attribute_qual_variant(%union.tree_node* %ttype, %union.tree_node* %attribute, i32 %quals) local_unnamed_addr #5 !dbg !7923 {
entry:
  %code = alloca i32, align 4
  %precision = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %ttype, metadata !7927, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata %union.tree_node* %attribute, metadata !7928, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 %quals, metadata !7929, metadata !DIExpression()), !dbg !7938
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ttype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7939
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !7939
  %call = tail call i32 @attribute_list_equal(%union.tree_node* %1, %union.tree_node* %attribute) #8, !dbg !7940
  %tobool = icmp eq i32 %call, 0, !dbg !7940
  br i1 %tobool, label %if.then, label %if.else94, !dbg !7941

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !7930, metadata !DIExpression()), !dbg !7942
  %2 = bitcast i32* %code to i8*, !dbg !7943
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #6, !dbg !7943
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %ttype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7944
  %bf.load = load i64, i64* %3, align 8, !dbg !7944
  %4 = trunc i64 %bf.load to i32, !dbg !7944
  %bf.cast = and i32 %4, 65535, !dbg !7944
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7934, metadata !DIExpression()), !dbg !7942
  store i32 %bf.cast, i32* %code, align 4, !dbg !7945
  %bf.cast41 = and i64 %bf.load, 65535, !dbg !7946
  %cmp = icmp eq i64 %bf.cast41, 16, !dbg !7946
  br i1 %cmp, label %if.then22, label %lor.lhs.false, !dbg !7948

lor.lhs.false:                                    ; preds = %if.then
  %cmp9 = icmp eq i64 %bf.cast41, 17, !dbg !7949
  br i1 %cmp9, label %if.then22, label %lor.lhs.false10, !dbg !7950

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %cmp15 = icmp eq i64 %bf.cast41, 18, !dbg !7951
  br i1 %cmp15, label %if.then22, label %lor.lhs.false16, !dbg !7952

lor.lhs.false16:                                  ; preds = %lor.lhs.false10
  %cmp21 = icmp eq i64 %bf.cast41, 6, !dbg !7953
  br i1 %cmp21, label %if.then22, label %if.end, !dbg !7954

if.then22:                                        ; preds = %lor.lhs.false16, %lor.lhs.false10, %lor.lhs.false, %if.then
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %ttype, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7955
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !7955
  %call24 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 45, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.221, i64 0, i64 0), %union.tree_node* %6) #7, !dbg !7957
  %call25 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %ttype, i32 %quals) #8, !dbg !7958
  br label %cleanup, !dbg !7959

if.end:                                           ; preds = %lor.lhs.false16
  %call26 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %ttype, i32 0) #8, !dbg !7960
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !7927, metadata !DIExpression()), !dbg !7938
  %call27 = tail call %union.tree_node* @build_distinct_type_copy(%union.tree_node* %call26) #8, !dbg !7961
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !7933, metadata !DIExpression()), !dbg !7942
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7962
  store %union.tree_node* %attribute, %union.tree_node** %7, align 8, !dbg !7963
  %call30 = call i32 @iterative_hash(i8* nonnull %2, i64 4, i32 0) #7, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %call30, metadata !7930, metadata !DIExpression()), !dbg !7942
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7965
  %8 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !7965
  %tobool32 = icmp eq %union.tree_node* %8, null, !dbg !7965
  br i1 %tobool32, label %if.end38, label %if.then33, !dbg !7967

if.then33:                                        ; preds = %if.end
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7968
  %9 = bitcast i40* %uid to i8*, !dbg !7968
  %call37 = call i32 @iterative_hash(i8* nonnull %9, i64 4, i32 %call30) #7, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %call37, metadata !7930, metadata !DIExpression()), !dbg !7942
  br label %if.end38, !dbg !7969

if.end38:                                         ; preds = %if.end, %if.then33
  %hashcode.0 = phi i32 [ %call37, %if.then33 ], [ %call30, %if.end ], !dbg !7942
  call void @llvm.dbg.value(metadata i32 %hashcode.0, metadata !7930, metadata !DIExpression()), !dbg !7942
  %call39 = call fastcc i32 @attribute_hash_list(%union.tree_node* %attribute, i32 %hashcode.0) #8, !dbg !7970
  call void @llvm.dbg.value(metadata i32 %call39, metadata !7930, metadata !DIExpression()), !dbg !7942
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7971
  %bf.load41 = load i64, i64* %10, align 8, !dbg !7971
  %11 = trunc i64 %bf.load41 to i16, !dbg !7971
  switch i16 %11, label %sw.epilog [
    i16 20, label %sw.bb
    i16 15, label %sw.bb46
    i16 8, label %sw.bb57
    i16 9, label %sw.bb66
    i16 11, label %sw.bb66
  ], !dbg !7972

sw.bb:                                            ; preds = %if.end38
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7973
  %12 = bitcast i32* %values to %union.tree_node**, !dbg !7973
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !7973
  %call45 = call fastcc i32 @type_hash_list(%union.tree_node* %13, i32 %call39) #8, !dbg !7974
  call void @llvm.dbg.value(metadata i32 %call45, metadata !7930, metadata !DIExpression()), !dbg !7942
  br label %sw.epilog, !dbg !7975

sw.bb46:                                          ; preds = %if.end38
  %values48 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7976
  %14 = bitcast i32* %values48 to %union.tree_node**, !dbg !7976
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !7976
  %tobool49 = icmp eq %union.tree_node* %15, null, !dbg !7976
  br i1 %tobool49, label %sw.epilog, label %if.then50, !dbg !7978

if.then50:                                        ; preds = %sw.bb46
  %uid54 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7979
  %16 = bitcast i40* %uid54 to i8*, !dbg !7979
  %call55 = call i32 @iterative_hash(i8* nonnull %16, i64 4, i32 %call39) #7, !dbg !7979
  call void @llvm.dbg.value(metadata i32 %call55, metadata !7930, metadata !DIExpression()), !dbg !7942
  br label %sw.epilog, !dbg !7980

sw.bb57:                                          ; preds = %if.end38
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7981
  %17 = bitcast %struct.rtx_def** %maxval to %struct.tree_int_cst**, !dbg !7981
  %18 = load %struct.tree_int_cst*, %struct.tree_int_cst** %17, align 8, !dbg !7981
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %18, i64 0, i32 1, i32 0, !dbg !7981
  %19 = bitcast i64* %low to i8*, !dbg !7981
  %call60 = call i32 @iterative_hash(i8* nonnull %19, i64 8, i32 %call39) #7, !dbg !7981
  call void @llvm.dbg.value(metadata i32 %call60, metadata !7930, metadata !DIExpression()), !dbg !7942
  %20 = load %struct.tree_int_cst*, %struct.tree_int_cst** %17, align 8, !dbg !7982
  %high = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %20, i64 0, i32 1, i32 1, !dbg !7982
  %21 = bitcast i64* %high to i8*, !dbg !7982
  %call65 = call i32 @iterative_hash(i8* nonnull %21, i64 8, i32 %call60) #7, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %call65, metadata !7930, metadata !DIExpression()), !dbg !7942
  br label %sw.epilog, !dbg !7983

sw.bb66:                                          ; preds = %if.end38, %if.end38
  %22 = bitcast i32* %precision to i8*, !dbg !7984
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #6, !dbg !7984
  %type67 = bitcast %union.tree_node* %call27 to %struct.tree_type*, !dbg !7985
  %precision68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type67, i64 0, i32 6, !dbg !7985
  %bf.load69 = load i32, i32* %precision68, align 4, !dbg !7985
  %bf.clear70 = and i32 %bf.load69, 1023, !dbg !7985
  call void @llvm.dbg.value(metadata i32 %bf.clear70, metadata !7935, metadata !DIExpression()), !dbg !7986
  store i32 %bf.clear70, i32* %precision, align 4, !dbg !7987
  %call71 = call i32 @iterative_hash(i8* nonnull %22, i64 4, i32 %call39) #7, !dbg !7988
  call void @llvm.dbg.value(metadata i32 %call71, metadata !7930, metadata !DIExpression()), !dbg !7942
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #6, !dbg !7989
  br label %sw.epilog, !dbg !7990

sw.epilog:                                        ; preds = %sw.bb46, %if.end38, %if.then50, %sw.bb66, %sw.bb57, %sw.bb
  %hashcode.2 = phi i32 [ %call71, %sw.bb66 ], [ %call65, %sw.bb57 ], [ %call45, %sw.bb ], [ %call55, %if.then50 ], [ %call39, %sw.bb46 ], [ %call39, %if.end38 ], !dbg !7942
  call void @llvm.dbg.value(metadata i32 %hashcode.2, metadata !7930, metadata !DIExpression()), !dbg !7942
  %call72 = call %union.tree_node* @type_hash_canon(i32 %hashcode.2, %union.tree_node* %call27) #8, !dbg !7991
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !7933, metadata !DIExpression()), !dbg !7942
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call26, i64 0, i32 0, i32 0, i32 1, !dbg !7992
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !7992
  %cmp74 = icmp eq %union.tree_node* %24, null, !dbg !7992
  br i1 %cmp74, label %if.then78, label %lor.lhs.false75, !dbg !7994

lor.lhs.false75:                                  ; preds = %sw.epilog
  %25 = load i32 (%union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 14), align 8, !dbg !7995
  %call76 = call i32 %25(%union.tree_node* %call72, %union.tree_node* %call26) #7, !dbg !7996
  %tobool77 = icmp eq i32 %call76, 0, !dbg !7996
  br i1 %tobool77, label %if.then78, label %if.else, !dbg !7997

if.then78:                                        ; preds = %lor.lhs.false75, %sw.epilog
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call72, i64 0, i32 0, i32 0, i32 1, !dbg !7998
  store %union.tree_node* null, %union.tree_node** %26, align 8, !dbg !7998
  br label %if.end90, !dbg !7998

if.else:                                          ; preds = %lor.lhs.false75
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call72, i64 0, i32 0, i32 0, i32 1, !dbg !7999
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !7999
  %cmp83 = icmp eq %union.tree_node* %28, %call72, !dbg !8001
  br i1 %cmp83, label %if.then84, label %if.end90, !dbg !8002

if.then84:                                        ; preds = %if.else
  %29 = bitcast %union.tree_node** %23 to i64*, !dbg !8003
  %30 = load i64, i64* %29, align 8, !dbg !8003
  %31 = bitcast %union.tree_node** %27 to i64*, !dbg !8004
  store i64 %30, i64* %31, align 8, !dbg !8004
  br label %if.end90, !dbg !8005

if.end90:                                         ; preds = %if.else, %if.then84, %if.then78
  %call91 = call %union.tree_node* @build_qualified_type(%union.tree_node* %call72, i32 %quals) #8, !dbg !8006
  call void @llvm.dbg.value(metadata %union.tree_node* %call91, metadata !7927, metadata !DIExpression()), !dbg !7938
  br label %cleanup, !dbg !8007

cleanup:                                          ; preds = %if.end90, %if.then22
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then22 ], [ true, %if.end90 ]
  %ttype.addr.0 = phi %union.tree_node* [ %ttype, %if.then22 ], [ %call91, %if.end90 ]
  %retval.0 = phi %union.tree_node* [ %call25, %if.then22 ], [ undef, %if.end90 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ttype.addr.0, metadata !7927, metadata !DIExpression()), !dbg !7938
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #6, !dbg !8007
  br i1 %cleanup.dest.slot.0, label %if.end120, label %return

if.else94:                                        ; preds = %entry
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %ttype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8008
  %bf.load96 = load i64, i64* %32, align 8, !dbg !8008
  %bf.lshr = lshr i64 %bf.load96, 20, !dbg !8008
  %33 = trunc i64 %bf.lshr to i32, !dbg !8008
  %bf.cast98 = and i32 %33, 1, !dbg !8008
  %34 = lshr i64 %bf.load96, 18, !dbg !8008
  %35 = trunc i64 %34 to i32, !dbg !8008
  %mul104 = and i32 %35, 2, !dbg !8008
  %or = or i32 %bf.cast98, %mul104, !dbg !8008
  %type105 = bitcast %union.tree_node* %ttype to %struct.tree_type*, !dbg !8008
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type105, i64 0, i32 6, !dbg !8008
  %bf.load106 = load i32, i32* %restrict_flag, align 4, !dbg !8008
  %36 = lshr i32 %bf.load106, 11, !dbg !8008
  %mul109 = and i32 %36, 4, !dbg !8008
  %or110 = or i32 %or, %mul109, !dbg !8008
  %37 = lshr i64 %bf.load96, 48, !dbg !8008
  %38 = trunc i64 %37 to i32, !dbg !8008
  %shl = and i32 %38, 65280, !dbg !8008
  %or115 = or i32 %or110, %shl, !dbg !8008
  %cmp116 = icmp eq i32 %or115, %quals, !dbg !8010
  br i1 %cmp116, label %if.end120, label %if.then117, !dbg !8011

if.then117:                                       ; preds = %if.else94
  %call118 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %ttype, i32 %quals) #8, !dbg !8012
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !7927, metadata !DIExpression()), !dbg !7938
  br label %if.end120, !dbg !8013

if.end120:                                        ; preds = %if.else94, %if.then117, %cleanup
  %ttype.addr.2 = phi %union.tree_node* [ %ttype.addr.0, %cleanup ], [ %call118, %if.then117 ], [ %ttype, %if.else94 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ttype.addr.2, metadata !7927, metadata !DIExpression()), !dbg !7938
  br label %return, !dbg !8014

return:                                           ; preds = %cleanup, %if.end120
  %retval.1 = phi %union.tree_node* [ %ttype.addr.2, %if.end120 ], [ %retval.0, %cleanup ], !dbg !7938
  ret %union.tree_node* %retval.1, !dbg !8015
}

; Function Attrs: nounwind uwtable
define dso_local i32 @attribute_list_equal(%union.tree_node* %l1, %union.tree_node* %l2) local_unnamed_addr #5 !dbg !8016 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %l1, metadata !8018, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %union.tree_node* %l2, metadata !8019, metadata !DIExpression()), !dbg !8020
  %call = tail call i32 @attribute_list_contained(%union.tree_node* %l1, %union.tree_node* %l2) #8, !dbg !8021
  %tobool = icmp eq i32 %call, 0, !dbg !8021
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !8022

land.rhs:                                         ; preds = %entry
  %call1 = tail call i32 @attribute_list_contained(%union.tree_node* %l2, %union.tree_node* %l1) #8, !dbg !8023
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8022
  %phitmp = zext i1 %tobool2 to i32
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %0, !dbg !8024
}

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_qualified_type(%union.tree_node* %type, i32 %type_quals) local_unnamed_addr #5 !dbg !8025 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8029, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %type_quals, metadata !8030, metadata !DIExpression()), !dbg !8032
  %call = tail call %union.tree_node* @get_qualified_type(%union.tree_node* %type, i32 %type_quals) #8, !dbg !8033
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8031, metadata !DIExpression()), !dbg !8032
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !8034
  br i1 %tobool, label %if.then, label %if.end19, !dbg !8036

if.then:                                          ; preds = %entry
  %call1 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %type) #8, !dbg !8037
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8031, metadata !DIExpression()), !dbg !8032
  tail call fastcc void @set_type_quals(%union.tree_node* %call1, i32 %type_quals) #8, !dbg !8039
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1, !dbg !8040
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8040
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !8040
  br i1 %cmp, label %if.then3, label %if.else, !dbg !8042

if.then3:                                         ; preds = %if.then
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 1, !dbg !8043
  store %union.tree_node* null, %union.tree_node** %2, align 8, !dbg !8043
  br label %if.end19, !dbg !8043

if.else:                                          ; preds = %if.then
  %cmp8 = icmp eq %union.tree_node* %1, %type, !dbg !8044
  br i1 %cmp8, label %if.else15, label %if.then9, !dbg !8046

if.then9:                                         ; preds = %if.else
  %call12 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* nonnull %1, i32 %type_quals) #8, !dbg !8047
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 1, !dbg !8048
  store %union.tree_node* %call12, %union.tree_node** %3, align 8, !dbg !8049
  ret %union.tree_node* %call1, !dbg !8050

if.else15:                                        ; preds = %if.else
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 1, !dbg !8051
  store %union.tree_node* %call1, %union.tree_node** %4, align 8, !dbg !8052
  br label %if.end19

if.end19:                                         ; preds = %entry, %if.then3, %if.else15
  %t.0 = phi %union.tree_node* [ %call, %entry ], [ %call1, %if.else15 ], [ %call1, %if.then3 ], !dbg !8032
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !8031, metadata !DIExpression()), !dbg !8032
  ret %union.tree_node* %t.0, !dbg !8050
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_distinct_type_copy(%union.tree_node* %type) local_unnamed_addr #5 !dbg !8053 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8055, metadata !DIExpression()), !dbg !8057
  %call = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %type) #8, !dbg !8058
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8056, metadata !DIExpression()), !dbg !8057
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8059
  store %union.tree_node* null, %union.tree_node** %0, align 8, !dbg !8060
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !8061
  store %union.tree_node* null, %union.tree_node** %1, align 8, !dbg !8062
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1, !dbg !8063
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !8063
  %cmp = icmp eq %union.tree_node* %3, null, !dbg !8063
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1, !dbg !8065
  br i1 %cmp, label %if.then, label %if.else, !dbg !8066

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !8067

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ %call, %if.else ], [ null, %if.then ], !dbg !8065
  store %union.tree_node* %storemerge, %union.tree_node** %4, align 8, !dbg !8065
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8068
  store %union.tree_node* %call, %union.tree_node** %5, align 8, !dbg !8069
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8070
  store %union.tree_node* null, %union.tree_node** %6, align 8, !dbg !8071
  ret %union.tree_node* %call, !dbg !8072
}

declare dso_local i32 @iterative_hash(i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @attribute_hash_list(%union.tree_node* %list, i32 %hashcode) unnamed_addr #5 !dbg !8073 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !8077, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i32 %hashcode, metadata !8078, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !8079, metadata !DIExpression()), !dbg !8080
  br label %for.cond, !dbg !8081

for.cond:                                         ; preds = %for.body, %entry
  %hashcode.addr.0 = phi i32 [ %hashcode, %entry ], [ %call, %for.body ]
  %tail.0 = phi %union.tree_node* [ %list, %entry ], [ %3, %for.body ], !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.0, metadata !8079, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.0, metadata !8078, metadata !DIExpression()), !dbg !8080
  %tobool = icmp eq %union.tree_node* %tail.0, null, !dbg !8084
  br i1 %tobool, label %for.end, label %for.body, !dbg !8084

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8085
  %0 = bitcast i32* %purpose to %struct.tree_identifier**, !dbg !8085
  %1 = load %struct.tree_identifier*, %struct.tree_identifier** %0, align 8, !dbg !8085
  %hash_value = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %1, i64 0, i32 1, i32 2, !dbg !8085
  %2 = bitcast i32* %hash_value to i8*, !dbg !8085
  %call = tail call i32 @iterative_hash(i8* nonnull %2, i64 4, i32 %hashcode.addr.0) #7, !dbg !8085
  call void @llvm.dbg.value(metadata i32 %call, metadata !8078, metadata !DIExpression()), !dbg !8080
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8087
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8087
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8079, metadata !DIExpression()), !dbg !8080
  br label %for.cond, !dbg !8088, !llvm.loop !8089

for.end:                                          ; preds = %for.cond
  %hashcode.addr.0.lcssa = phi i32 [ %hashcode.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.0.lcssa, metadata !8078, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.0.lcssa, metadata !8078, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.0.lcssa, metadata !8078, metadata !DIExpression()), !dbg !8080
  ret i32 %hashcode.addr.0.lcssa, !dbg !8091
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @type_hash_list(%union.tree_node* %list, i32 %hashcode) unnamed_addr #5 !dbg !8092 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !8094, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %hashcode, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !8096, metadata !DIExpression()), !dbg !8097
  br label %for.cond, !dbg !8098

for.cond:                                         ; preds = %for.inc, %entry
  %hashcode.addr.0 = phi i32 [ %hashcode, %entry ], [ %hashcode.addr.1, %for.inc ]
  %tail.0 = phi %union.tree_node* [ %list, %entry ], [ %4, %for.inc ], !dbg !8100
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.0, metadata !8096, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.0, metadata !8095, metadata !DIExpression()), !dbg !8097
  %tobool = icmp eq %union.tree_node* %tail.0, null, !dbg !8101
  br i1 %tobool, label %for.end, label %for.body, !dbg !8101

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8102
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8102
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8105
  %cmp = icmp eq %union.tree_node* %1, %2, !dbg !8106
  br i1 %cmp, label %for.inc, label %if.then, !dbg !8107

if.then:                                          ; preds = %for.body
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8108
  %3 = bitcast i40* %uid to i8*, !dbg !8108
  %call = tail call i32 @iterative_hash(i8* nonnull %3, i64 4, i32 %hashcode.addr.0) #7, !dbg !8108
  call void @llvm.dbg.value(metadata i32 %call, metadata !8095, metadata !DIExpression()), !dbg !8097
  br label %for.inc, !dbg !8109

for.inc:                                          ; preds = %for.body, %if.then
  %hashcode.addr.1 = phi i32 [ %call, %if.then ], [ %hashcode.addr.0, %for.body ]
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.1, metadata !8095, metadata !DIExpression()), !dbg !8097
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8110
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8110
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8096, metadata !DIExpression()), !dbg !8097
  br label %for.cond, !dbg !8111, !llvm.loop !8112

for.end:                                          ; preds = %for.cond
  %hashcode.addr.0.lcssa = phi i32 [ %hashcode.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.0.lcssa, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.0.lcssa, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %hashcode.addr.0.lcssa, metadata !8095, metadata !DIExpression()), !dbg !8097
  ret i32 %hashcode.addr.0.lcssa, !dbg !8114
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @type_hash_canon(i32 %hashcode, %union.tree_node* %type) local_unnamed_addr #5 !dbg !8115 {
entry:
  call void @llvm.dbg.value(metadata i32 %hashcode, metadata !8119, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8120, metadata !DIExpression()), !dbg !8122
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8123
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8123
  %cmp = icmp eq %union.tree_node* %1, %type, !dbg !8123
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8123

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5949, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !8123
  br label %cond.end, !dbg !8123

cond.end:                                         ; preds = %entry, %cond.true
  %2 = load i8, i8* getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 15), align 8, !dbg !8124
  %tobool = icmp eq i8 %2, 0, !dbg !8126
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8127

if.end:                                           ; preds = %cond.end
  %call = tail call %union.tree_node* @type_hash_lookup(i32 %hashcode, %union.tree_node* %type) #8, !dbg !8128
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8121, metadata !DIExpression()), !dbg !8122
  %cmp2 = icmp eq %union.tree_node* %call, null, !dbg !8129
  br i1 %cmp2, label %if.else, label %cleanup, !dbg !8131

if.else:                                          ; preds = %if.end
  tail call void @type_hash_add(i32 %hashcode, %union.tree_node* %type) #8, !dbg !8132
  br label %cleanup, !dbg !8134

cleanup:                                          ; preds = %if.end, %cond.end, %if.else
  %retval.0 = phi %union.tree_node* [ %type, %if.else ], [ %type, %cond.end ], [ %call, %if.end ], !dbg !8122
  ret %union.tree_node* %retval.0, !dbg !8135
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_type_attribute_variant(%union.tree_node* %ttype, %union.tree_node* %attribute) local_unnamed_addr #5 !dbg !8136 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ttype, metadata !8138, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata %union.tree_node* %attribute, metadata !8139, metadata !DIExpression()), !dbg !8140
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ttype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8141
  %bf.load = load i64, i64* %0, align 8, !dbg !8141
  %bf.lshr = lshr i64 %bf.load, 20, !dbg !8141
  %1 = trunc i64 %bf.lshr to i32, !dbg !8141
  %bf.cast = and i32 %1, 1, !dbg !8141
  %2 = lshr i64 %bf.load, 18, !dbg !8141
  %3 = trunc i64 %2 to i32, !dbg !8141
  %mul6 = and i32 %3, 2, !dbg !8141
  %or = or i32 %bf.cast, %mul6, !dbg !8141
  %type = bitcast %union.tree_node* %ttype to %struct.tree_type*, !dbg !8141
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !8141
  %bf.load7 = load i32, i32* %restrict_flag, align 4, !dbg !8141
  %4 = lshr i32 %bf.load7, 11, !dbg !8141
  %mul10 = and i32 %4, 4, !dbg !8141
  %or11 = or i32 %or, %mul10, !dbg !8141
  %5 = lshr i64 %bf.load, 48, !dbg !8141
  %6 = trunc i64 %5 to i32, !dbg !8141
  %shl = and i32 %6, 65280, !dbg !8141
  %or16 = or i32 %or11, %shl, !dbg !8141
  %call = tail call %union.tree_node* @build_type_attribute_qual_variant(%union.tree_node* %ttype, %union.tree_node* %attribute, i32 %or16) #8, !dbg !8142
  ret %union.tree_node* %call, !dbg !8143
}

; Function Attrs: nounwind uwtable
define dso_local void @assign_assembler_name_if_neeeded(%union.tree_node* %t) local_unnamed_addr #5 !dbg !8144 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !8146, metadata !DIExpression()), !dbg !8150
  %call = tail call fastcc zeroext i8 @need_assembler_name_p(%union.tree_node* %t) #8, !dbg !8151
  %tobool = icmp eq i8 %call, 0, !dbg !8151
  br i1 %tobool, label %if.end, label %if.then, !dbg !8152

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @input_location, align 4, !dbg !8153
  call void @llvm.dbg.value(metadata i32 %0, metadata !8147, metadata !DIExpression()), !dbg !8154
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8155
  %1 = load i32, i32* %locus, align 8, !dbg !8155
  store i32 %1, i32* @input_location, align 4, !dbg !8156
  %call1 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %t) #8, !dbg !8157
  store i32 %0, i32* @input_location, align 4, !dbg !8158
  br label %if.end, !dbg !8159

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !8160
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @need_assembler_name_p(%union.tree_node* %decl) unnamed_addr #0 !dbg !8161 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8163, metadata !DIExpression()), !dbg !8164
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8165
  %bf.load = load i64, i64* %0, align 8, !dbg !8165
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8167
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !8167
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !8168

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 32, !dbg !8169
  br i1 %cmp5, label %if.end, label %return, !dbg !8170

if.end:                                           ; preds = %land.lhs.true, %entry
  %arrayidx10 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast1, i64 13, !dbg !8171
  %1 = load i8, i8* %arrayidx10, align 1, !dbg !8171
  %tobool = icmp eq i8 %1, 0, !dbg !8171
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !8173

lor.lhs.false:                                    ; preds = %if.end
  br i1 false, label %lor.lhs.false.if.end23_crit_edge, label %land.lhs.true19, !dbg !8174

lor.lhs.false.if.end23_crit_edge:                 ; preds = %lor.lhs.false
  br label %if.end23, !dbg !8174

land.lhs.true19:                                  ; preds = %lor.lhs.false
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8174
  %2 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !8174
  %cmp20 = icmp eq %union.tree_node* %2, null, !dbg !8174
  br i1 %cmp20, label %if.end23, label %return, !dbg !8175

if.end23:                                         ; preds = %lor.lhs.false.if.end23_crit_edge, %land.lhs.true19
  %abstract_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8176
  %3 = bitcast i40* %abstract_flag to i64*, !dbg !8176
  %bf.load24 = load i64, i64* %3, align 8, !dbg !8176
  %bf.cast262 = and i64 %bf.load24, 2048, !dbg !8176
  %tobool27 = icmp eq i64 %bf.cast262, 0, !dbg !8176
  br i1 %tobool27, label %if.end29, label %return, !dbg !8178

if.end29:                                         ; preds = %if.end23
  %cmp34 = icmp eq i64 %bf.cast1, 32, !dbg !8179
  br i1 %cmp34, label %land.lhs.true36, label %if.end58, !dbg !8181

land.lhs.true36:                                  ; preds = %if.end29
  %bf.cast417 = and i64 %bf.load, 67108864, !dbg !8182
  %tobool42 = icmp eq i64 %bf.cast417, 0, !dbg !8182
  br i1 %tobool42, label %land.lhs.true43, label %if.end58, !dbg !8183

land.lhs.true43:                                  ; preds = %land.lhs.true36
  %bf.cast488 = and i64 %bf.load, 134217728, !dbg !8184
  %tobool49 = icmp eq i64 %bf.cast488, 0, !dbg !8184
  br i1 %tobool49, label %land.lhs.true50, label %if.end58, !dbg !8185

land.lhs.true50:                                  ; preds = %land.lhs.true43
  %bf.cast559 = and i64 %bf.load24, 33554432, !dbg !8186
  %tobool56 = icmp eq i64 %bf.cast559, 0, !dbg !8186
  br i1 %tobool56, label %return, label %if.end58, !dbg !8187

if.end58:                                         ; preds = %land.lhs.true50, %land.lhs.true43, %land.lhs.true36, %if.end29
  br i1 %cmp, label %if.then65, label %if.end100, !dbg !8188

if.then65:                                        ; preds = %if.end58
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !8189
  %bf.load66 = load i32, i32* %built_in_class, align 8, !dbg !8189
  %bf.clear68 = and i32 %bf.load66, 6144, !dbg !8189
  %cmp69 = icmp eq i32 %bf.clear68, 0, !dbg !8189
  br i1 %cmp69, label %if.end80, label %land.lhs.true71, !dbg !8193

land.lhs.true71:                                  ; preds = %if.then65
  %cmp77 = icmp eq i32 %bf.clear68, 2048, !dbg !8194
  br i1 %cmp77, label %if.end80, label %return, !dbg !8195

if.end80:                                         ; preds = %land.lhs.true71, %if.then65
  %call = tail call %struct.cgraph_node* @cgraph_get_node(%union.tree_node* %decl) #7, !dbg !8196
  %cmp81 = icmp eq %struct.cgraph_node* %call, null, !dbg !8198
  br i1 %cmp81, label %if.end84, label %return, !dbg !8199

if.end84:                                         ; preds = %if.end80
  %bf.load86 = load i64, i64* %0, align 8, !dbg !8200
  %bf.cast895 = and i64 %bf.load86, 16777216, !dbg !8200
  %tobool90 = icmp eq i64 %bf.cast895, 0, !dbg !8200
  br i1 %tobool90, label %land.lhs.true91, label %if.end100, !dbg !8202

land.lhs.true91:                                  ; preds = %if.end84
  %bf.cast966 = and i64 %bf.load86, 134217728, !dbg !8203
  %tobool97 = icmp eq i64 %bf.cast966, 0, !dbg !8203
  br i1 %tobool97, label %return, label %if.end100, !dbg !8204

if.end100:                                        ; preds = %land.lhs.true91, %if.end84, %if.end58
  br label %return, !dbg !8205

return:                                           ; preds = %land.lhs.true, %land.lhs.true19, %land.lhs.true50, %land.lhs.true71, %land.lhs.true91, %if.end80, %if.end23, %if.end, %if.end100
  %retval.0 = phi i8 [ 1, %if.end100 ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true19 ], [ 0, %if.end ], [ 0, %if.end23 ], [ 0, %land.lhs.true50 ], [ 0, %land.lhs.true71 ], [ 1, %if.end80 ], [ 0, %land.lhs.true91 ], !dbg !8164
  ret i8 %retval.0, !dbg !8206
}

; Function Attrs: nounwind uwtable
define internal i32 @free_lang_data() #5 !dbg !8207 {
entry:
  %0 = load i8, i8* @in_lto_p, align 1, !dbg !8210
  %tobool = icmp eq i8 %0, 0, !dbg !8210
  %1 = load i32, i32* @flag_generate_lto, align 4, !dbg !8212
  %tobool1 = icmp ne i32 %1, 0, !dbg !8212
  %or.cond = and i1 %tobool, %tobool1, !dbg !8213
  br i1 %or.cond, label %for.cond.preheader, label %cleanup, !dbg !8213

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !8214

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !8216
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8209, metadata !DIExpression()), !dbg !8217
  %exitcond = icmp eq i64 %indvars.iv, 11, !dbg !8218
  br i1 %exitcond, label %for.end, label %for.body, !dbg !8214

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 %indvars.iv, !dbg !8220
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8220
  %tobool3 = icmp eq %union.tree_node* %2, null, !dbg !8220
  br i1 %tobool3, label %for.inc, label %if.then4, !dbg !8222

if.then4:                                         ; preds = %for.body
  %call = tail call i32 @get_alias_set(%union.tree_node* nonnull %2) #7, !dbg !8223
  %3 = bitcast %union.tree_node** %arrayidx to %struct.tree_type**, !dbg !8224
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !8224
  %alias_set = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 8, !dbg !8224
  store i32 %call, i32* %alias_set, align 4, !dbg !8225
  br label %for.inc, !dbg !8224

for.inc:                                          ; preds = %for.body, %if.then4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8226
  call void @llvm.dbg.value(metadata i32 undef, metadata !8209, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8217
  br label %for.cond, !dbg !8227, !llvm.loop !8228

for.end:                                          ; preds = %for.cond
  tail call fastcc void @free_lang_data_in_cgraph() #8, !dbg !8230
  %5 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64*), align 8, !dbg !8231
  store i64 %5, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 43) to i64*), align 8, !dbg !8232
  %6 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39) to i64*), align 8, !dbg !8233
  store i64 %6, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 48) to i64*), align 16, !dbg !8234
  %7 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to i64**), align 8, !dbg !8235
  %bf.load = load i64, i64* %7, align 8, !dbg !8235
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8237
  %cmp10 = icmp eq i64 %bf.cast1, 7, !dbg !8237
  br i1 %cmp10, label %lor.lhs.false12, label %if.then39, !dbg !8238

lor.lhs.false12:                                  ; preds = %for.end
  br i1 false, label %cond.true, label %cond.false, !dbg !8239

cond.true:                                        ; preds = %lor.lhs.false12
  br label %cond.end, !dbg !8239

cond.false:                                       ; preds = %lor.lhs.false12
  %type20 = bitcast i64* %7 to %struct.tree_type*, !dbg !8239
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i64 0, i32 6, !dbg !8239
  %bf.load21 = load i32, i32* %mode, align 4, !dbg !8239
  %bf.lshr = lshr i32 %bf.load21, 16, !dbg !8239
  %bf.clear22 = and i32 %bf.lshr, 255, !dbg !8239
  br label %cond.end, !dbg !8239

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ undef, %cond.true ], [ %bf.clear22, %cond.false ], !dbg !8239
  %call23 = tail call i32 @mode_for_size(i32 8, i32 2, i32 0) #7, !dbg !8240
  %cmp24 = icmp eq i32 %cond, %call23, !dbg !8241
  br i1 %cmp24, label %lor.lhs.false26, label %if.then39, !dbg !8242

lor.lhs.false26:                                  ; preds = %cond.end
  %8 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to %struct.tree_type**), align 8, !dbg !8243
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 6, !dbg !8243
  %bf.load28 = load i32, i32* %precision, align 4, !dbg !8243
  %bf.clear29 = and i32 %bf.load28, 1023, !dbg !8243
  %cmp30 = icmp eq i32 %bf.clear29, 1, !dbg !8244
  br i1 %cmp30, label %lor.lhs.false32, label %if.then39, !dbg !8245

lor.lhs.false32:                                  ; preds = %lor.lhs.false26
  %9 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 0, i32 0, i32 0, !dbg !8245
  %bf.load34 = load i64, i64* %9, align 8, !dbg !8246
  %bf.cast373 = and i64 %bf.load34, 2097152, !dbg !8246
  %tobool38 = icmp eq i64 %bf.cast373, 0, !dbg !8246
  br i1 %tobool38, label %if.then39, label %if.end54, !dbg !8247

if.then39:                                        ; preds = %lor.lhs.false32, %lor.lhs.false26, %cond.end, %for.end
  %call40 = tail call %union.tree_node* @make_unsigned_type(i32 8) #7, !dbg !8248
  store %union.tree_node* %call40, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !8250
  %.cast4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8251
  %bf.load42 = load i64, i64* %.cast4, align 8, !dbg !8251
  %bf.clear43 = and i64 %bf.load42, -65536, !dbg !8251
  %bf.set = or i64 %bf.clear43, 7, !dbg !8251
  store i64 %bf.set, i64* %.cast4, align 8, !dbg !8251
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !8252
  %call44 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %10, i64 1) #8, !dbg !8253
  %11 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to %struct.tree_type**), align 8, !dbg !8254
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 14, !dbg !8254
  store %union.tree_node* %call44, %union.tree_node** %maxval, align 8, !dbg !8255
  %12 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to %struct.tree_type**), align 8, !dbg !8256
  %precision47 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 6, !dbg !8256
  %bf.load48 = load i32, i32* %precision47, align 4, !dbg !8257
  %bf.clear49 = and i32 %bf.load48, -1024, !dbg !8257
  %bf.set50 = or i32 %bf.clear49, 1, !dbg !8257
  store i32 %bf.set50, i32* %precision47, align 4, !dbg !8257
  %13 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to %struct.tree_type**), align 8, !dbg !8258
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 13, !dbg !8258
  %14 = bitcast %union.tree_node** %minval to i64*, !dbg !8258
  %15 = load i64, i64* %14, align 8, !dbg !8258
  store i64 %15, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25) to i64*), align 8, !dbg !8259
  %maxval53 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 14, !dbg !8260
  %16 = bitcast %union.tree_node** %maxval53 to i64*, !dbg !8260
  %17 = load i64, i64* %16, align 8, !dbg !8260
  store i64 %17, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26) to i64*), align 16, !dbg !8261
  br label %if.end54, !dbg !8262

if.end54:                                         ; preds = %lor.lhs.false32, %if.then39
  %18 = load i64*, i64** bitcast ([11 x %union.tree_node*]* @integer_types to i64**), align 16, !dbg !8263
  %bf.load56 = load i64, i64* %18, align 8, !dbg !8263
  %bf.cast595 = and i64 %bf.load56, 2097152, !dbg !8263
  %tobool60 = icmp eq i64 %bf.cast595, 0, !dbg !8263
  %.cast6 = ptrtoint i64* %18 to i64, !dbg !8265
  br i1 %tobool60, label %if.else, label %if.then61, !dbg !8266

if.then61:                                        ; preds = %if.end54
  store i64 %.cast6, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2) to i64*), align 16, !dbg !8267
  br label %if.end62, !dbg !8268

if.else:                                          ; preds = %if.end54
  store i64 %.cast6, i64* bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1) to i64*), align 8, !dbg !8269
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then61
  store %union.tree_node* (%union.tree_node**, i32*)* null, %union.tree_node* (%union.tree_node**, i32*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 31, i32 0), align 8, !dbg !8270
  store i8* (%union.tree_node*, i32)* @lhd_dwarf_name, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 23), align 8, !dbg !8271
  store i8* (%union.tree_node*, i32)* @gimple_decl_printable_name, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !8272
  store void (%union.tree_node*)* @lhd_set_decl_assembler_name, void (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 16), align 8, !dbg !8273
  store %union.tree_node* (%union.tree_node*, %union.tree_node*)* @gimple_fold_obj_type_ref, %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 40), align 8, !dbg !8274
  %19 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8, !dbg !8275
  %begin_diagnostic = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %19, i64 0, i32 7, !dbg !8275
  store void (%struct.diagnostic_context*, %struct.diagnostic_info*)* @default_diagnostic_starter, void (%struct.diagnostic_context*, %struct.diagnostic_info*)** %begin_diagnostic, align 8, !dbg !8276
  %end_diagnostic = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %19, i64 0, i32 8, !dbg !8277
  store void (%struct.diagnostic_context*, %struct.diagnostic_info*)* @default_diagnostic_finalizer, void (%struct.diagnostic_context*, %struct.diagnostic_info*)** %end_diagnostic, align 8, !dbg !8278
  %printer = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %19, i64 0, i32 0, !dbg !8279
  %20 = load %struct.pretty_print_info*, %struct.pretty_print_info** %printer, align 8, !dbg !8279
  %format_decoder = getelementptr inbounds %struct.pretty_print_info, %struct.pretty_print_info* %20, i64 0, i32 6, !dbg !8279
  store i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)* @default_tree_printer, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)** %format_decoder, align 8, !dbg !8280
  br label %cleanup, !dbg !8281

cleanup:                                          ; preds = %entry, %if.end62
  ret i32 0, !dbg !8282
}

; Function Attrs: nounwind uwtable
define dso_local i32 @is_attribute_p(i8* %attr, %union.tree_node* %ident) local_unnamed_addr #5 !dbg !8283 {
entry:
  call void @llvm.dbg.value(metadata i8* %attr, metadata !8287, metadata !DIExpression()), !dbg !8289
  call void @llvm.dbg.value(metadata %union.tree_node* %ident, metadata !8288, metadata !DIExpression()), !dbg !8289
  %call = tail call i64 @strlen(i8* %attr) #7, !dbg !8290
  %conv = trunc i64 %call to i32, !dbg !8290
  %call1 = tail call fastcc i32 @is_attribute_with_length_p(i8* %attr, i32 %conv, %union.tree_node* %ident) #8, !dbg !8291
  ret i32 %call1, !dbg !8292
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_attribute_with_length_p(i8* %attr, i32 %attr_len, %union.tree_node* %ident) unnamed_addr #5 !dbg !8293 {
entry:
  call void @llvm.dbg.value(metadata i8* %attr, metadata !8297, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.value(metadata i32 %attr_len, metadata !8298, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.value(metadata %union.tree_node* %ident, metadata !8299, metadata !DIExpression()), !dbg !8302
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ident, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8303
  %bf.load = load i64, i64* %0, align 8, !dbg !8303
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8305
  %cmp = icmp eq i64 %bf.cast1, 1, !dbg !8305
  br i1 %cmp, label %if.end, label %cleanup, !dbg !8306

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %ident, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8307
  %str = bitcast i32* %id to i8**, !dbg !8307
  %1 = load i8*, i8** %str, align 8, !dbg !8307
  call void @llvm.dbg.value(metadata i8* %1, metadata !8301, metadata !DIExpression()), !dbg !8302
  %2 = getelementptr inbounds i32, i32* %id, i64 2, !dbg !8308
  %3 = load i32, i32* %2, align 8, !dbg !8308
  call void @llvm.dbg.value(metadata i32 %3, metadata !8300, metadata !DIExpression()), !dbg !8302
  %cmp3 = icmp eq i32 %3, %attr_len, !dbg !8309
  br i1 %cmp3, label %land.lhs.true, label %if.end6, !dbg !8311

land.lhs.true:                                    ; preds = %if.end
  %call = tail call i32 @strcmp(i8* %attr, i8* %1) #7, !dbg !8312
  %cmp4 = icmp eq i32 %call, 0, !dbg !8313
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !8314

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %4 = load i8, i8* %attr, align 1, !dbg !8315
  %cmp7 = icmp eq i8 %4, 95, !dbg !8317
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !8318

if.then9:                                         ; preds = %if.end6
  %arrayidx10 = getelementptr inbounds i8, i8* %attr, i64 1, !dbg !8319
  %5 = load i8, i8* %arrayidx10, align 1, !dbg !8319
  %cmp12 = icmp eq i8 %5, 95, !dbg !8319
  br i1 %cmp12, label %cond.end, label %cond.true, !dbg !8319

cond.true:                                        ; preds = %if.then9
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5051, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !8319
  br label %cond.end, !dbg !8319

cond.end:                                         ; preds = %if.then9, %cond.true
  %sub = add nsw i32 %attr_len, -2, !dbg !8321
  %idxprom = sext i32 %sub to i64, !dbg !8321
  %arrayidx14 = getelementptr inbounds i8, i8* %attr, i64 %idxprom, !dbg !8321
  %6 = load i8, i8* %arrayidx14, align 1, !dbg !8321
  %cmp16 = icmp eq i8 %6, 95, !dbg !8321
  br i1 %cmp16, label %cond.end20, label %cond.true18, !dbg !8321

cond.true18:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5052, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !8321
  br label %cond.end20, !dbg !8321

cond.end20:                                       ; preds = %cond.end, %cond.true18
  %sub22 = add nsw i32 %attr_len, -1, !dbg !8322
  %idxprom23 = sext i32 %sub22 to i64, !dbg !8322
  %arrayidx24 = getelementptr inbounds i8, i8* %attr, i64 %idxprom23, !dbg !8322
  %7 = load i8, i8* %arrayidx24, align 1, !dbg !8322
  %cmp26 = icmp eq i8 %7, 95, !dbg !8322
  br i1 %cmp26, label %cond.end30, label %cond.true28, !dbg !8322

cond.true28:                                      ; preds = %cond.end20
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5053, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !8322
  br label %cond.end30, !dbg !8322

cond.end30:                                       ; preds = %cond.end20, %cond.true28
  %sub32 = add nsw i32 %attr_len, -4, !dbg !8323
  %cmp33 = icmp eq i32 %3, %sub32, !dbg !8325
  br i1 %cmp33, label %land.lhs.true35, label %if.end77, !dbg !8326

land.lhs.true35:                                  ; preds = %cond.end30
  %add.ptr = getelementptr inbounds i8, i8* %attr, i64 2, !dbg !8327
  %conv37 = sext i32 %3 to i64, !dbg !8328
  %call38 = tail call i32 @strncmp(i8* nonnull %add.ptr, i8* %1, i64 %conv37) #7, !dbg !8329
  %cmp39 = icmp eq i32 %call38, 0, !dbg !8330
  br i1 %cmp39, label %cleanup, label %if.end77, !dbg !8331

if.else:                                          ; preds = %if.end6
  %add = add nsw i32 %attr_len, 4, !dbg !8332
  %cmp43 = icmp eq i32 %3, %add, !dbg !8335
  br i1 %cmp43, label %land.lhs.true45, label %if.end77, !dbg !8336

land.lhs.true45:                                  ; preds = %if.else
  %8 = load i8, i8* %1, align 1, !dbg !8337
  %cmp48 = icmp eq i8 %8, 95, !dbg !8338
  br i1 %cmp48, label %land.lhs.true50, label %if.end77, !dbg !8339

land.lhs.true50:                                  ; preds = %land.lhs.true45
  %arrayidx51 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !8340
  %9 = load i8, i8* %arrayidx51, align 1, !dbg !8340
  %cmp53 = icmp eq i8 %9, 95, !dbg !8341
  br i1 %cmp53, label %land.lhs.true55, label %if.end77, !dbg !8342

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %sub56 = add nsw i32 %3, -2, !dbg !8343
  %idxprom57 = sext i32 %sub56 to i64, !dbg !8344
  %arrayidx58 = getelementptr inbounds i8, i8* %1, i64 %idxprom57, !dbg !8344
  %10 = load i8, i8* %arrayidx58, align 1, !dbg !8344
  %cmp60 = icmp eq i8 %10, 95, !dbg !8345
  br i1 %cmp60, label %land.lhs.true62, label %if.end77, !dbg !8346

land.lhs.true62:                                  ; preds = %land.lhs.true55
  %sub63 = add nsw i32 %3, -1, !dbg !8347
  %idxprom64 = sext i32 %sub63 to i64, !dbg !8348
  %arrayidx65 = getelementptr inbounds i8, i8* %1, i64 %idxprom64, !dbg !8348
  %11 = load i8, i8* %arrayidx65, align 1, !dbg !8348
  %cmp67 = icmp eq i8 %11, 95, !dbg !8349
  br i1 %cmp67, label %land.lhs.true69, label %if.end77, !dbg !8350

land.lhs.true69:                                  ; preds = %land.lhs.true62
  %add.ptr70 = getelementptr inbounds i8, i8* %1, i64 2, !dbg !8351
  %conv71 = sext i32 %attr_len to i64, !dbg !8352
  %call72 = tail call i32 @strncmp(i8* %attr, i8* nonnull %add.ptr70, i64 %conv71) #7, !dbg !8353
  %cmp73 = icmp eq i32 %call72, 0, !dbg !8354
  br i1 %cmp73, label %cleanup, label %if.end77, !dbg !8355

if.end77:                                         ; preds = %if.else, %land.lhs.true45, %land.lhs.true50, %land.lhs.true55, %land.lhs.true62, %land.lhs.true69, %cond.end30, %land.lhs.true35
  br label %cleanup, !dbg !8356

cleanup:                                          ; preds = %entry, %land.lhs.true69, %land.lhs.true35, %land.lhs.true, %if.end77
  %retval.0 = phi i32 [ 0, %if.end77 ], [ 0, %entry ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true35 ], [ 1, %land.lhs.true69 ], !dbg !8302
  ret i32 %retval.0, !dbg !8357
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @lookup_attribute(i8* %attr_name, %union.tree_node* %list) local_unnamed_addr #5 !dbg !8358 {
entry:
  call void @llvm.dbg.value(metadata i8* %attr_name, metadata !8360, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !8361, metadata !DIExpression()), !dbg !8364
  %call = tail call i64 @strlen(i8* %attr_name) #7, !dbg !8365
  call void @llvm.dbg.value(metadata i64 %call, metadata !8363, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !8362, metadata !DIExpression()), !dbg !8364
  %conv = trunc i64 %call to i32, !dbg !8366
  br label %for.cond, !dbg !8371

for.cond:                                         ; preds = %for.inc, %entry
  %l.0 = phi %union.tree_node* [ %list, %entry ], [ %4, %for.inc ], !dbg !8372
  call void @llvm.dbg.value(metadata %union.tree_node* %l.0, metadata !8362, metadata !DIExpression()), !dbg !8364
  %tobool = icmp eq %union.tree_node* %l.0, null, !dbg !8373
  br i1 %tobool, label %cleanup, label %for.body, !dbg !8373

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %l.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8374
  %0 = bitcast i32* %purpose to i64**, !dbg !8374
  %1 = load i64*, i64** %0, align 8, !dbg !8374
  %bf.load = load i64, i64* %1, align 8, !dbg !8374
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8374
  %cmp = icmp eq i64 %bf.cast1, 1, !dbg !8374
  br i1 %cmp, label %for.body.cond.end_crit_edge, label %cond.true, !dbg !8374

for.body.cond.end_crit_edge:                      ; preds = %for.body
  %2 = bitcast i64* %1 to %union.tree_node*, !dbg !8374
  br label %cond.end, !dbg !8374

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5095, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !8374
  %.phi.trans.insert = bitcast i32* %purpose to %union.tree_node**, !dbg !8366
  %.pre = load %union.tree_node*, %union.tree_node** %.phi.trans.insert, align 8, !dbg !8375
  br label %cond.end, !dbg !8374

cond.end:                                         ; preds = %for.body.cond.end_crit_edge, %cond.true
  %3 = phi %union.tree_node* [ %2, %for.body.cond.end_crit_edge ], [ %.pre, %cond.true ], !dbg !8375
  %call4 = tail call fastcc i32 @is_attribute_with_length_p(i8* %attr_name, i32 %conv, %union.tree_node* %3) #8, !dbg !8376
  %tobool5 = icmp eq i32 %call4, 0, !dbg !8376
  br i1 %tobool5, label %for.inc, label %cleanup, !dbg !8377

for.inc:                                          ; preds = %cond.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %l.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8378
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8378
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8362, metadata !DIExpression()), !dbg !8364
  br label %for.cond, !dbg !8379, !llvm.loop !8380

cleanup:                                          ; preds = %cond.end, %for.cond
  %retval.0 = phi %union.tree_node* [ %l.0, %cond.end ], [ null, %for.cond ], !dbg !8364
  ret %union.tree_node* %retval.0, !dbg !8382
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @remove_attribute(i8* %attr_name, %union.tree_node* %list) local_unnamed_addr #5 !dbg !8383 {
entry:
  %list.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i8* %attr_name, metadata !8385, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !8386, metadata !DIExpression()), !dbg !8393
  store %union.tree_node* %list, %union.tree_node** %list.addr, align 8
  %call = tail call i64 @strlen(i8* %attr_name) #7, !dbg !8394
  call void @llvm.dbg.value(metadata i64 %call, metadata !8388, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata %union.tree_node** %list.addr, metadata !8387, metadata !DIExpression()), !dbg !8393
  %conv = trunc i64 %call to i32, !dbg !8395
  br label %for.cond, !dbg !8397

for.cond:                                         ; preds = %if.end, %entry
  %0 = phi %union.tree_node* [ %list, %entry ], [ %.pre, %if.end ], !dbg !8398
  %p.0 = phi %union.tree_node** [ %list.addr, %entry ], [ %p.1, %if.end ], !dbg !8399
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0, metadata !8387, metadata !DIExpression()), !dbg !8393
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !8400
  br i1 %tobool, label %for.end, label %for.body, !dbg !8400

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8389, metadata !DIExpression()), !dbg !8401
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8402
  %1 = bitcast i32* %purpose to i64**, !dbg !8402
  %2 = load i64*, i64** %1, align 8, !dbg !8402
  %bf.load = load i64, i64* %2, align 8, !dbg !8402
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8402
  %cmp = icmp eq i64 %bf.cast1, 1, !dbg !8402
  br i1 %cmp, label %for.body.cond.end_crit_edge, label %cond.true, !dbg !8402

for.body.cond.end_crit_edge:                      ; preds = %for.body
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !8402
  br label %cond.end, !dbg !8402

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !8402
  %.phi.trans.insert = bitcast i32* %purpose to %union.tree_node**, !dbg !8395
  %.pre2 = load %union.tree_node*, %union.tree_node** %.phi.trans.insert, align 8, !dbg !8403
  br label %cond.end, !dbg !8402

cond.end:                                         ; preds = %for.body.cond.end_crit_edge, %cond.true
  %4 = phi %union.tree_node* [ %3, %for.body.cond.end_crit_edge ], [ %.pre2, %cond.true ], !dbg !8403
  %call4 = tail call fastcc i32 @is_attribute_with_length_p(i8* %attr_name, i32 %conv, %union.tree_node* %4) #8, !dbg !8404
  %tobool5 = icmp eq i32 %call4, 0, !dbg !8404
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8395
  br i1 %tobool5, label %cond.end.if.end_crit_edge, label %if.then, !dbg !8405

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  %.pre.pre = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8398
  br label %if.end, !dbg !8405

if.then:                                          ; preds = %cond.end
  %5 = bitcast %union.tree_node** %chain to i64*, !dbg !8406
  %6 = load i64, i64* %5, align 8, !dbg !8406
  %7 = bitcast %union.tree_node** %p.0 to i64*, !dbg !8407
  store i64 %6, i64* %7, align 8, !dbg !8407
  %8 = inttoptr i64 %6 to %union.tree_node*, !dbg !8408
  br label %if.end, !dbg !8408

if.end:                                           ; preds = %cond.end.if.end_crit_edge, %if.then
  %.pre = phi %union.tree_node* [ %8, %if.then ], [ %.pre.pre, %cond.end.if.end_crit_edge ], !dbg !8398
  %p.1 = phi %union.tree_node** [ %p.0, %if.then ], [ %chain, %cond.end.if.end_crit_edge ], !dbg !8409
  call void @llvm.dbg.value(metadata %union.tree_node** %p.1, metadata !8387, metadata !DIExpression()), !dbg !8393
  br label %for.cond, !dbg !8410, !llvm.loop !8411

for.end:                                          ; preds = %for.cond
  %9 = load %union.tree_node*, %union.tree_node** %list.addr, align 8, !dbg !8413
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !8386, metadata !DIExpression()), !dbg !8393
  ret %union.tree_node* %9, !dbg !8414
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @merge_attributes(%union.tree_node* %a1, %union.tree_node* %a2) local_unnamed_addr #5 !dbg !8415 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %a1, metadata !8417, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata %union.tree_node* %a2, metadata !8418, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata %union.tree_node* %a1, metadata !8419, metadata !DIExpression()), !dbg !8429
  %cmp = icmp eq %union.tree_node* %a1, null, !dbg !8430
  br i1 %cmp, label %if.end71, label %if.else, !dbg !8431

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq %union.tree_node* %a2, null, !dbg !8432
  br i1 %cmp1, label %if.end71, label %land.lhs.true, !dbg !8433

land.lhs.true:                                    ; preds = %if.else
  %call = tail call i32 @attribute_list_contained(%union.tree_node* nonnull %a1, %union.tree_node* nonnull %a2) #8, !dbg !8434
  %tobool = icmp eq i32 %call, 0, !dbg !8434
  br i1 %tobool, label %if.then2, label %if.end71, !dbg !8435

if.then2:                                         ; preds = %land.lhs.true
  %call3 = tail call i32 @attribute_list_contained(%union.tree_node* nonnull %a2, %union.tree_node* nonnull %a1) #8, !dbg !8436
  %tobool4 = icmp eq i32 %call3, 0, !dbg !8436
  br i1 %tobool4, label %if.else6, label %if.end71, !dbg !8437

if.else6:                                         ; preds = %if.then2
  %call7 = tail call i32 @list_length(%union.tree_node* nonnull %a1) #8, !dbg !8438
  %call8 = tail call i32 @list_length(%union.tree_node* nonnull %a2) #8, !dbg !8440
  %cmp9 = icmp slt i32 %call7, %call8, !dbg !8441
  %spec.select = select i1 %cmp9, %union.tree_node* %a2, %union.tree_node* %a1, !dbg !8442
  %spec.select1 = select i1 %cmp9, %union.tree_node* %a1, %union.tree_node* %a2, !dbg !8442
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select1, metadata !8418, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !8419, metadata !DIExpression()), !dbg !8429
  br label %for.cond, !dbg !8443

for.cond:                                         ; preds = %for.inc65, %if.else6
  %attributes.1 = phi %union.tree_node* [ %spec.select, %if.else6 ], [ %attributes.2, %for.inc65 ], !dbg !8444
  %a2.addr.1 = phi %union.tree_node* [ %spec.select1, %if.else6 ], [ %13, %for.inc65 ], !dbg !8444
  call void @llvm.dbg.value(metadata %union.tree_node* %a2.addr.1, metadata !8418, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes.1, metadata !8419, metadata !DIExpression()), !dbg !8429
  %cmp11 = icmp eq %union.tree_node* %a2.addr.1, null, !dbg !8445
  br i1 %cmp11, label %if.end71.loopexit, label %for.body, !dbg !8446

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %a2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8447
  %0 = bitcast i32* %purpose to %struct.tree_identifier**, !dbg !8447
  %1 = load %struct.tree_identifier*, %struct.tree_identifier** %0, align 8, !dbg !8447
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %1, i64 0, i32 1, i32 0, !dbg !8447
  %2 = load i8*, i8** %str, align 8, !dbg !8447
  %call12 = tail call %union.tree_node* @lookup_attribute(i8* %2, %union.tree_node* %attributes.1) #8, !dbg !8449
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !8420, metadata !DIExpression()), !dbg !8450
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %a2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8451
  br label %for.cond13, !dbg !8455

for.cond13:                                       ; preds = %for.inc, %for.body
  %a.0 = phi %union.tree_node* [ %call12, %for.body ], [ %call58, %for.inc ], !dbg !8456
  call void @llvm.dbg.value(metadata %union.tree_node* %a.0, metadata !8420, metadata !DIExpression()), !dbg !8450
  %cond = icmp eq %union.tree_node* %a.0, null, !dbg !8457
  br i1 %cond, label %if.then60.loopexit, label %for.body15, !dbg !8457

for.body15:                                       ; preds = %for.cond13
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8458
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !8458
  %cmp17 = icmp eq %union.tree_node* %5, null, !dbg !8459
  br i1 %cmp17, label %if.else43, label %land.lhs.true18, !dbg !8460

land.lhs.true18:                                  ; preds = %for.body15
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8460
  %bf.load = load i64, i64* %6, align 8, !dbg !8461
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8462
  %cmp21 = icmp eq i64 %bf.cast2, 2, !dbg !8462
  br i1 %cmp21, label %land.lhs.true22, label %if.else43, !dbg !8463

land.lhs.true22:                                  ; preds = %land.lhs.true18
  %7 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !8464
  %cmp25 = icmp eq %union.tree_node* %7, null, !dbg !8465
  br i1 %cmp25, label %if.else43, label %land.lhs.true26, !dbg !8466

land.lhs.true26:                                  ; preds = %land.lhs.true22
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8466
  %bf.load30 = load i64, i64* %8, align 8, !dbg !8467
  %bf.cast323 = and i64 %bf.load30, 65535, !dbg !8468
  %cmp33 = icmp eq i64 %bf.cast323, 2, !dbg !8468
  br i1 %cmp33, label %if.then34, label %if.else43, !dbg !8469

if.then34:                                        ; preds = %land.lhs.true26
  %call39 = tail call i32 @simple_cst_list_equal(%union.tree_node* nonnull %5, %union.tree_node* nonnull %7) #8, !dbg !8470
  %cmp40 = icmp eq i32 %call39, 1, !dbg !8473
  br i1 %cmp40, label %for.end, label %for.inc, !dbg !8474

if.else43:                                        ; preds = %land.lhs.true22, %for.body15, %land.lhs.true26, %land.lhs.true18
  %9 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !8475
  %call48 = tail call i32 @simple_cst_equal(%union.tree_node* %5, %union.tree_node* %9) #8, !dbg !8477
  %cmp49 = icmp eq i32 %call48, 1, !dbg !8478
  br i1 %cmp49, label %for.end, label %for.inc, !dbg !8479

for.inc:                                          ; preds = %if.then34, %if.else43
  %10 = load %struct.tree_identifier*, %struct.tree_identifier** %0, align 8, !dbg !8480
  %str57 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %10, i64 0, i32 1, i32 0, !dbg !8480
  %11 = load i8*, i8** %str57, align 8, !dbg !8480
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8481
  %12 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8481
  %call58 = tail call %union.tree_node* @lookup_attribute(i8* %11, %union.tree_node* %12) #8, !dbg !8482
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !8420, metadata !DIExpression()), !dbg !8450
  br label %for.cond13, !dbg !8483, !llvm.loop !8484

for.end:                                          ; preds = %if.else43, %if.then34
  br label %for.inc65, !dbg !8486

if.then60.loopexit:                               ; preds = %for.cond13
  %call61 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* nonnull %a2.addr.1) #8, !dbg !8487
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !8417, metadata !DIExpression()), !dbg !8429
  %chain63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8490
  store %union.tree_node* %attributes.1, %union.tree_node** %chain63, align 8, !dbg !8491
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !8419, metadata !DIExpression()), !dbg !8429
  br label %for.inc65, !dbg !8492

for.inc65:                                        ; preds = %for.end, %if.then60.loopexit
  %attributes.2 = phi %union.tree_node* [ %call61, %if.then60.loopexit ], [ %attributes.1, %for.end ], !dbg !8444
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes.2, metadata !8419, metadata !DIExpression()), !dbg !8429
  %chain67 = getelementptr inbounds %union.tree_node, %union.tree_node* %a2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8493
  %13 = load %union.tree_node*, %union.tree_node** %chain67, align 8, !dbg !8493
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !8418, metadata !DIExpression()), !dbg !8429
  br label %for.cond, !dbg !8494, !llvm.loop !8495

if.end71.loopexit:                                ; preds = %for.cond
  %attributes.1.lcssa = phi %union.tree_node* [ %attributes.1, %for.cond ], !dbg !8444
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes.1.lcssa, metadata !8419, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes.1.lcssa, metadata !8419, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes.1.lcssa, metadata !8419, metadata !DIExpression()), !dbg !8429
  br label %if.end71, !dbg !8497

if.end71:                                         ; preds = %if.end71.loopexit, %if.then2, %land.lhs.true, %if.else, %entry
  %attributes.5 = phi %union.tree_node* [ %a2, %entry ], [ %a1, %land.lhs.true ], [ %a1, %if.else ], [ %a2, %if.then2 ], [ %attributes.1.lcssa, %if.end71.loopexit ], !dbg !8498
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes.5, metadata !8419, metadata !DIExpression()), !dbg !8429
  ret %union.tree_node* %attributes.5, !dbg !8497
}

; Function Attrs: nounwind uwtable
define dso_local i32 @attribute_list_contained(%union.tree_node* %l1, %union.tree_node* %l2) local_unnamed_addr #5 !dbg !8499 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %l1, metadata !8501, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %l2, metadata !8502, metadata !DIExpression()), !dbg !8509
  %cmp = icmp eq %union.tree_node* %l1, %l2, !dbg !8510
  br i1 %cmp, label %cleanup80, label %for.cond.preheader, !dbg !8512

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !8513

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %t2.0 = phi %union.tree_node* [ %9, %for.inc ], [ %l2, %for.cond.preheader ], !dbg !8515
  %t1.0 = phi %union.tree_node* [ %8, %for.inc ], [ %l1, %for.cond.preheader ], !dbg !8515
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0, metadata !8504, metadata !DIExpression()), !dbg !8509
  %cmp1 = icmp ne %union.tree_node* %t1.0, null, !dbg !8516
  %cmp2 = icmp ne %union.tree_node* %t2.0, null, !dbg !8518
  %or.cond = and i1 %cmp1, %cmp2, !dbg !8519
  br i1 %or.cond, label %land.lhs.true3, label %for.end, !dbg !8519

land.lhs.true3:                                   ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8520
  %0 = bitcast i32* %purpose to %union.tree_node**, !dbg !8520
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8520
  %purpose5 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8521
  %2 = bitcast i32* %purpose5 to %union.tree_node**, !dbg !8521
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !8521
  %cmp6 = icmp eq %union.tree_node* %1, %3, !dbg !8522
  br i1 %cmp6, label %land.rhs, label %for.end, !dbg !8523

land.rhs:                                         ; preds = %land.lhs.true3
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8524
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !8524
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8525
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !8525
  %cmp10 = icmp eq %union.tree_node* %5, %7, !dbg !8526
  br i1 %cmp10, label %for.inc, label %for.end, !dbg !8513

for.inc:                                          ; preds = %land.rhs
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8527
  %8 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8527
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !8503, metadata !DIExpression()), !dbg !8509
  %chain12 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8528
  %9 = load %union.tree_node*, %union.tree_node** %chain12, align 8, !dbg !8528
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !8504, metadata !DIExpression()), !dbg !8509
  br label %for.cond, !dbg !8529, !llvm.loop !8530

for.end:                                          ; preds = %for.cond, %land.lhs.true3, %land.rhs
  %t2.0.lcssa = phi %union.tree_node* [ %t2.0, %for.cond ], [ %t2.0, %land.lhs.true3 ], [ %t2.0, %land.rhs ], !dbg !8515
  %t1.0.lcssa = phi %union.tree_node* [ %t1.0, %for.cond ], [ %t1.0, %land.lhs.true3 ], [ %t1.0, %land.rhs ], !dbg !8515
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !8503, metadata !DIExpression()), !dbg !8509
  %cmp13 = icmp eq %union.tree_node* %t1.0.lcssa, null, !dbg !8532
  %cmp15 = icmp eq %union.tree_node* %t2.0.lcssa, null, !dbg !8534
  %or.cond2 = and i1 %cmp13, %cmp15, !dbg !8535
  br i1 %or.cond2, label %cleanup80, label %for.cond18.preheader, !dbg !8535

for.cond18.preheader:                             ; preds = %for.end
  br label %for.cond18, !dbg !8536

for.cond18:                                       ; preds = %for.cond18.preheader, %for.inc76
  %t2.1 = phi %union.tree_node* [ %24, %for.inc76 ], [ %t2.0.lcssa, %for.cond18.preheader ], !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.1, metadata !8504, metadata !DIExpression()), !dbg !8509
  %cmp19 = icmp eq %union.tree_node* %t2.1, null, !dbg !8537
  br i1 %cmp19, label %cleanup80.loopexit, label %for.body20, !dbg !8536

for.body20:                                       ; preds = %for.cond18
  %purpose22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8538
  %10 = bitcast i32* %purpose22 to %struct.tree_identifier**, !dbg !8538
  %11 = load %struct.tree_identifier*, %struct.tree_identifier** %10, align 8, !dbg !8538
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %11, i64 0, i32 1, i32 0, !dbg !8538
  %12 = load i8*, i8** %str, align 8, !dbg !8538
  %call = tail call %union.tree_node* @lookup_attribute(i8* %12, %union.tree_node* %l1) #8, !dbg !8540
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8505, metadata !DIExpression()), !dbg !8541
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8542
  br label %for.cond23, !dbg !8546

for.cond23:                                       ; preds = %for.inc63, %for.body20
  %attr.0 = phi %union.tree_node* [ %call, %for.body20 ], [ %call71, %for.inc63 ], !dbg !8547
  call void @llvm.dbg.value(metadata %union.tree_node* %attr.0, metadata !8505, metadata !DIExpression()), !dbg !8541
  %cond3 = icmp eq %union.tree_node* %attr.0, null, !dbg !8548
  br i1 %cond3, label %cleanup.loopexit, label %for.body25, !dbg !8548

for.body25:                                       ; preds = %for.cond23
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !8549
  %cmp28 = icmp eq %union.tree_node* %14, null, !dbg !8550
  br i1 %cmp28, label %if.else, label %land.lhs.true29, !dbg !8551

land.lhs.true29:                                  ; preds = %for.body25
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8551
  %bf.load = load i64, i64* %15, align 8, !dbg !8552
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !8553
  %cmp32 = icmp eq i64 %bf.cast5, 2, !dbg !8553
  br i1 %cmp32, label %land.lhs.true33, label %if.else, !dbg !8554

land.lhs.true33:                                  ; preds = %land.lhs.true29
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %attr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8555
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !8555
  %cmp36 = icmp eq %union.tree_node* %17, null, !dbg !8556
  br i1 %cmp36, label %if.else, label %land.lhs.true37, !dbg !8557

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8557
  %bf.load41 = load i64, i64* %18, align 8, !dbg !8558
  %bf.cast436 = and i64 %bf.load41, 65535, !dbg !8559
  %cmp44 = icmp eq i64 %bf.cast436, 2, !dbg !8559
  br i1 %cmp44, label %if.then45, label %if.else, !dbg !8560

if.then45:                                        ; preds = %land.lhs.true37
  %call50 = tail call i32 @simple_cst_list_equal(%union.tree_node* nonnull %14, %union.tree_node* nonnull %17) #8, !dbg !8561
  %cmp51 = icmp eq i32 %call50, 1, !dbg !8564
  br i1 %cmp51, label %for.end72, label %for.inc63, !dbg !8565

if.else:                                          ; preds = %land.lhs.true33, %for.body25, %land.lhs.true37, %land.lhs.true29
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %attr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8566
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !8566
  %call58 = tail call i32 @simple_cst_equal(%union.tree_node* %14, %union.tree_node* %20) #8, !dbg !8568
  %cmp59 = icmp eq i32 %call58, 1, !dbg !8569
  br i1 %cmp59, label %for.end72, label %for.inc63, !dbg !8570

for.inc63:                                        ; preds = %if.then45, %if.else
  %21 = load %struct.tree_identifier*, %struct.tree_identifier** %10, align 8, !dbg !8571
  %str68 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %21, i64 0, i32 1, i32 0, !dbg !8571
  %22 = load i8*, i8** %str68, align 8, !dbg !8571
  %chain70 = getelementptr inbounds %union.tree_node, %union.tree_node* %attr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8572
  %23 = load %union.tree_node*, %union.tree_node** %chain70, align 8, !dbg !8572
  %call71 = tail call %union.tree_node* @lookup_attribute(i8* %22, %union.tree_node* %23) #8, !dbg !8573
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !8505, metadata !DIExpression()), !dbg !8541
  br label %for.cond23, !dbg !8574, !llvm.loop !8575

for.end72:                                        ; preds = %if.else, %if.then45
  br label %cleanup, !dbg !8577

cleanup.loopexit:                                 ; preds = %for.cond23
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %for.end72
  %cleanup.dest.slot.0 = phi i1 [ true, %for.end72 ], [ false, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %for.inc76, label %cleanup80.loopexit

for.inc76:                                        ; preds = %cleanup
  %chain78 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8578
  %24 = load %union.tree_node*, %union.tree_node** %chain78, align 8, !dbg !8578
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !8504, metadata !DIExpression()), !dbg !8509
  br label %for.cond18, !dbg !8579, !llvm.loop !8580

cleanup80.loopexit:                               ; preds = %cleanup, %for.cond18
  %retval.2.ph = phi i32 [ 1, %for.cond18 ], [ 0, %cleanup ]
  br label %cleanup80, !dbg !8582

cleanup80:                                        ; preds = %cleanup80.loopexit, %for.end, %entry
  %retval.2 = phi i32 [ 1, %entry ], [ 1, %for.end ], [ %retval.2.ph, %cleanup80.loopexit ], !dbg !8509
  ret i32 %retval.2, !dbg !8582
}

; Function Attrs: nounwind uwtable
define dso_local i32 @simple_cst_list_equal(%union.tree_node* %l1, %union.tree_node* %l2) local_unnamed_addr #5 !dbg !8583 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %l1, metadata !8585, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.value(metadata %union.tree_node* %l2, metadata !8586, metadata !DIExpression()), !dbg !8587
  br label %while.cond, !dbg !8588

while.cond:                                       ; preds = %if.end, %entry
  %l2.addr.0 = phi %union.tree_node* [ %l2, %entry ], [ %5, %if.end ]
  %l1.addr.0 = phi %union.tree_node* [ %l1, %entry ], [ %4, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %l1.addr.0, metadata !8585, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.value(metadata %union.tree_node* %l2.addr.0, metadata !8586, metadata !DIExpression()), !dbg !8587
  %cmp = icmp ne %union.tree_node* %l1.addr.0, null, !dbg !8589
  %cmp1 = icmp ne %union.tree_node* %l2.addr.0, null, !dbg !8590
  %spec.select = and i1 %cmp1, %cmp, !dbg !8591
  br i1 %spec.select, label %while.body, label %while.end, !dbg !8588

while.body:                                       ; preds = %while.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %l1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8592
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8592
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %l2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8595
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !8595
  %call = tail call i32 @simple_cst_equal(%union.tree_node* %1, %union.tree_node* %3) #8, !dbg !8596
  %cmp4 = icmp eq i32 %call, 1, !dbg !8597
  br i1 %cmp4, label %if.end, label %return.loopexit, !dbg !8598

if.end:                                           ; preds = %while.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %l1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8599
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !8599
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8585, metadata !DIExpression()), !dbg !8587
  %chain6 = getelementptr inbounds %union.tree_node, %union.tree_node* %l2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8600
  %5 = load %union.tree_node*, %union.tree_node** %chain6, align 8, !dbg !8600
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !8586, metadata !DIExpression()), !dbg !8587
  br label %while.cond, !dbg !8588, !llvm.loop !8601

while.end:                                        ; preds = %while.cond
  %l2.addr.0.lcssa = phi %union.tree_node* [ %l2.addr.0, %while.cond ]
  %l1.addr.0.lcssa = phi %union.tree_node* [ %l1.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %l2.addr.0.lcssa, metadata !8586, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.value(metadata %union.tree_node* %l1.addr.0.lcssa, metadata !8585, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.value(metadata %union.tree_node* %l2.addr.0.lcssa, metadata !8586, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.value(metadata %union.tree_node* %l1.addr.0.lcssa, metadata !8585, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.value(metadata %union.tree_node* %l2.addr.0.lcssa, metadata !8586, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.value(metadata %union.tree_node* %l1.addr.0.lcssa, metadata !8585, metadata !DIExpression()), !dbg !8587
  %cmp7 = icmp eq %union.tree_node* %l1.addr.0.lcssa, %l2.addr.0.lcssa, !dbg !8603
  %conv = zext i1 %cmp7 to i32, !dbg !8603
  br label %return, !dbg !8604

return.loopexit:                                  ; preds = %while.body
  br label %return, !dbg !8605

return:                                           ; preds = %return.loopexit, %while.end
  %retval.0 = phi i32 [ %conv, %while.end ], [ 0, %return.loopexit ], !dbg !8587
  ret i32 %retval.0, !dbg !8605
}

; Function Attrs: nounwind uwtable
define dso_local i32 @simple_cst_equal(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !8606 {
entry:
  %iter1 = alloca %struct.const_call_expr_arg_iterator_d, align 8
  %iter2 = alloca %struct.const_call_expr_arg_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !8608, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !8609, metadata !DIExpression()), !dbg !8624
  %cmp1 = icmp eq %union.tree_node* %t1, %t2, !dbg !8625
  br i1 %cmp1, label %cleanup356, label %if.end, !dbg !8627

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq %union.tree_node* %t1, null, !dbg !8628
  %cmp3 = icmp eq %union.tree_node* %t2, null, !dbg !8630
  %or.cond = or i1 %cmp2, %cmp3, !dbg !8631
  br i1 %or.cond, label %cleanup356, label %if.end5, !dbg !8631

if.end5:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8632
  %bf.load = load i64, i64* %0, align 8, !dbg !8632
  %1 = trunc i64 %bf.load to i32, !dbg !8632
  %bf.cast = and i32 %1, 65535, !dbg !8632
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !8610, metadata !DIExpression()), !dbg !8624
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8633
  %bf.load7 = load i64, i64* %2, align 8, !dbg !8633
  %3 = trunc i64 %bf.load7 to i32, !dbg !8633
  %bf.cast9 = and i32 %3, 65535, !dbg !8633
  call void @llvm.dbg.value(metadata i32 %bf.cast9, metadata !8611, metadata !DIExpression()), !dbg !8624
  %trunc = trunc i64 %bf.load to i16, !dbg !8634
  switch i16 %trunc, label %if.else29 [
    i16 116, label %if.then15
    i16 113, label %if.then15
    i16 117, label %if.then15
  ], !dbg !8634

if.then15:                                        ; preds = %if.end5, %if.end5, %if.end5
  %trunc1 = trunc i64 %bf.load7 to i16, !dbg !8636
  switch i16 %trunc1, label %if.else [
    i16 116, label %if.then21
    i16 113, label %if.then21
    i16 117, label %if.then21
  ], !dbg !8636

if.then21:                                        ; preds = %if.then15, %if.then15, %if.then15
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8639
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8639
  %operands23 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8640
  %5 = load %union.tree_node*, %union.tree_node** %operands23, align 8, !dbg !8640
  %call = tail call i32 @simple_cst_equal(%union.tree_node* %4, %union.tree_node* %5) #8, !dbg !8641
  br label %cleanup356, !dbg !8642

if.else:                                          ; preds = %if.then15
  %operands26 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8643
  %6 = load %union.tree_node*, %union.tree_node** %operands26, align 8, !dbg !8643
  %call28 = tail call i32 @simple_cst_equal(%union.tree_node* %6, %union.tree_node* %t2) #8, !dbg !8644
  br label %cleanup356, !dbg !8645

if.else29:                                        ; preds = %if.end5
  %trunc2 = trunc i64 %bf.load7 to i16, !dbg !8646
  switch i16 %trunc2, label %if.end41 [
    i16 116, label %if.then35
    i16 113, label %if.then35
    i16 117, label %if.then35
  ], !dbg !8646

if.then35:                                        ; preds = %if.else29, %if.else29, %if.else29
  %operands37 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8648
  %7 = load %union.tree_node*, %union.tree_node** %operands37, align 8, !dbg !8648
  %call39 = tail call i32 @simple_cst_equal(%union.tree_node* %t1, %union.tree_node* %7) #8, !dbg !8649
  br label %cleanup356, !dbg !8650

if.end41:                                         ; preds = %if.else29
  %cmp42 = icmp eq i32 %bf.cast, %bf.cast9, !dbg !8651
  br i1 %cmp42, label %if.end44, label %cleanup356, !dbg !8653

if.end44:                                         ; preds = %if.end41
  switch i16 %trunc, label %sw.epilog [
    i16 23, label %sw.bb
    i16 24, label %sw.bb56
    i16 25, label %sw.bb60
    i16 28, label %sw.bb65
    i16 51, label %sw.bb81
    i16 120, label %sw.bb131
    i16 59, label %sw.bb139
    i16 55, label %sw.bb194
    i16 60, label %sw.bb287
    i16 41, label %sw.bb306
    i16 32, label %cleanup356
    i16 34, label %cleanup356
    i16 33, label %cleanup356
    i16 29, label %cleanup356
  ], !dbg !8654

sw.bb:                                            ; preds = %if.end44
  %int_cst45 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8655
  %low = bitcast i32* %int_cst45 to i64*, !dbg !8655
  %8 = load i64, i64* %low, align 8, !dbg !8655
  %int_cst47 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8656
  %low48 = bitcast i32* %int_cst47 to i64*, !dbg !8656
  %9 = load i64, i64* %low48, align 8, !dbg !8656
  %cmp49 = icmp eq i64 %8, %9, !dbg !8657
  br i1 %cmp49, label %land.rhs, label %land.end, !dbg !8658

land.rhs:                                         ; preds = %sw.bb
  %high = getelementptr inbounds i32, i32* %int_cst45, i64 2, !dbg !8659
  %10 = bitcast i32* %high to i64*, !dbg !8659
  %11 = load i64, i64* %10, align 8, !dbg !8659
  %high54 = getelementptr inbounds i32, i32* %int_cst47, i64 2, !dbg !8660
  %12 = bitcast i32* %high54 to i64*, !dbg !8660
  %13 = load i64, i64* %12, align 8, !dbg !8660
  %cmp55 = icmp eq i64 %11, %13, !dbg !8661
  %phitmp6 = zext i1 %cmp55 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb
  %14 = phi i32 [ 0, %sw.bb ], [ %phitmp6, %land.rhs ]
  br label %cleanup356, !dbg !8662

sw.bb56:                                          ; preds = %if.end44
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8663
  %15 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !8663
  %16 = load %struct.real_value*, %struct.real_value** %15, align 8, !dbg !8663
  %real_cst_ptr58 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8663
  %17 = bitcast i32* %real_cst_ptr58 to %struct.real_value**, !dbg !8663
  %18 = load %struct.real_value*, %struct.real_value** %17, align 8, !dbg !8663
  %call59 = tail call zeroext i8 @real_identical(%struct.real_value* %16, %struct.real_value* %18) #7, !dbg !8663
  %conv = zext i8 %call59 to i32, !dbg !8663
  br label %cleanup356, !dbg !8664

sw.bb60:                                          ; preds = %if.end44
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8665
  %19 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !8665
  %20 = load %struct.fixed_value*, %struct.fixed_value** %19, align 8, !dbg !8665
  %fixed_cst_ptr62 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8665
  %21 = bitcast i32* %fixed_cst_ptr62 to %struct.fixed_value**, !dbg !8665
  %22 = load %struct.fixed_value*, %struct.fixed_value** %21, align 8, !dbg !8665
  %call63 = tail call zeroext i8 @fixed_identical(%struct.fixed_value* %20, %struct.fixed_value* %22) #7, !dbg !8665
  %conv64 = zext i8 %call63 to i32, !dbg !8665
  br label %cleanup356, !dbg !8666

sw.bb65:                                          ; preds = %if.end44
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8667
  %24 = load i32, i32* %23, align 8, !dbg !8667
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8668
  %26 = load i32, i32* %25, align 8, !dbg !8668
  %cmp68 = icmp eq i32 %24, %26, !dbg !8669
  br i1 %cmp68, label %land.rhs70, label %land.end79, !dbg !8670

land.rhs70:                                       ; preds = %sw.bb65
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8671
  %arraydecay = bitcast i32* %str to i8*, !dbg !8671
  %str73 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8672
  %arraydecay74 = bitcast i32* %str73 to i8*, !dbg !8672
  %conv77 = sext i32 %24 to i64, !dbg !8673
  %call78 = tail call i32 @memcmp(i8* nonnull %arraydecay, i8* nonnull %arraydecay74, i64 %conv77) #7, !dbg !8674
  %tobool = icmp eq i32 %call78, 0, !dbg !8675
  %phitmp = zext i1 %tobool to i32
  br label %land.end79

land.end79:                                       ; preds = %land.rhs70, %sw.bb65
  %27 = phi i32 [ 0, %sw.bb65 ], [ %phitmp, %land.rhs70 ]
  br label %cleanup356, !dbg !8676

sw.bb81:                                          ; preds = %if.end44
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8677
  %28 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !8677
  %29 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %28, align 8, !dbg !8677
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %29, metadata !8617, metadata !DIExpression()), !dbg !8678
  %elts83 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8679
  %30 = bitcast i32* %elts83 to %struct.VEC_constructor_elt_gc**, !dbg !8679
  %31 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %30, align 8, !dbg !8679
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %31, metadata !8618, metadata !DIExpression()), !dbg !8678
  %base85 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %29, i64 0, i32 0, !dbg !8680
  %call86 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base85) #8, !dbg !8680
  %base89 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %31, i64 0, i32 0, !dbg !8682
  %call93 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base89) #8, !dbg !8682
  %cmp94 = icmp eq i32 %call86, %call93, !dbg !8683
  br i1 %cmp94, label %for.cond.preheader, label %cleanup356, !dbg !8684

for.cond.preheader:                               ; preds = %sw.bb81
  br label %for.cond, !dbg !8685

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %idx.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !8687
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !8614, metadata !DIExpression()), !dbg !8678
  %call104 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base85) #8, !dbg !8688
  %conv105 = zext i32 %call104 to i64, !dbg !8688
  %cmp106 = icmp ult i64 %idx.0, %conv105, !dbg !8690
  br i1 %cmp106, label %for.body, label %cleanup356.loopexit7, !dbg !8685

for.body:                                         ; preds = %for.cond
  %conv114 = trunc i64 %idx.0 to i32, !dbg !8691
  %call115 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base85, i32 %conv114) #8, !dbg !8691
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call115, i64 0, i32 1, !dbg !8693
  %32 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8693
  %call123 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base89, i32 %conv114) #8, !dbg !8694
  %value124 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call123, i64 0, i32 1, !dbg !8695
  %33 = load %union.tree_node*, %union.tree_node** %value124, align 8, !dbg !8695
  %call125 = tail call i32 @simple_cst_equal(%union.tree_node* %32, %union.tree_node* %33) #8, !dbg !8696
  %tobool126 = icmp eq i32 %call125, 0, !dbg !8696
  br i1 %tobool126, label %cleanup356.loopexit7, label %for.inc, !dbg !8697

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i64 %idx.0, 1, !dbg !8698
  call void @llvm.dbg.value(metadata i64 %inc, metadata !8614, metadata !DIExpression()), !dbg !8678
  br label %for.cond, !dbg !8699, !llvm.loop !8700

sw.bb131:                                         ; preds = %if.end44
  %operands133 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8702
  %34 = load %union.tree_node*, %union.tree_node** %operands133, align 8, !dbg !8702
  %operands136 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8703
  %35 = load %union.tree_node*, %union.tree_node** %operands136, align 8, !dbg !8703
  %call138 = tail call i32 @simple_cst_equal(%union.tree_node* %34, %union.tree_node* %35) #8, !dbg !8704
  br label %cleanup356, !dbg !8705

sw.bb139:                                         ; preds = %if.end44
  %operands141 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8706
  %arrayidx142 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands141, i64 1, !dbg !8706
  %36 = load %union.tree_node*, %union.tree_node** %arrayidx142, align 8, !dbg !8706
  %operands144 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8707
  %arrayidx145 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands144, i64 1, !dbg !8707
  %37 = load %union.tree_node*, %union.tree_node** %arrayidx145, align 8, !dbg !8707
  %call146 = tail call i32 @simple_cst_equal(%union.tree_node* %36, %union.tree_node* %37) #8, !dbg !8708
  call void @llvm.dbg.value(metadata i32 %call146, metadata !8612, metadata !DIExpression()), !dbg !8624
  %cmp147 = icmp slt i32 %call146, 1, !dbg !8709
  br i1 %cmp147, label %cleanup356, label %if.end150, !dbg !8711

if.end150:                                        ; preds = %sw.bb139
  %38 = bitcast %union.tree_node** %operands141 to %struct.tree_int_cst**, !dbg !8712
  %39 = load %struct.tree_int_cst*, %struct.tree_int_cst** %38, align 8, !dbg !8712
  %low156 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %39, i64 0, i32 1, i32 0, !dbg !8712
  %40 = load i64, i64* %low156, align 8, !dbg !8712
  %conv157 = trunc i64 %40 to i32, !dbg !8712
  %41 = bitcast %union.tree_node** %operands144 to %struct.tree_int_cst**, !dbg !8714
  %42 = load %struct.tree_int_cst*, %struct.tree_int_cst** %41, align 8, !dbg !8714
  %low163 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %42, i64 0, i32 1, i32 0, !dbg !8714
  %43 = load i64, i64* %low163, align 8, !dbg !8714
  %conv164 = trunc i64 %43 to i32, !dbg !8714
  %cmp166 = icmp eq i32 %conv157, %conv164, !dbg !8715
  br i1 %cmp166, label %if.end169, label %cleanup356, !dbg !8716

if.end169:                                        ; preds = %if.end150
  %44 = bitcast %struct.const_call_expr_arg_iterator_d* %iter1 to i8*, !dbg !8717
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #6, !dbg !8717
  %45 = bitcast %struct.const_call_expr_arg_iterator_d* %iter2 to i8*, !dbg !8717
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #6, !dbg !8717
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter1, metadata !8622, metadata !DIExpression(DW_OP_deref)), !dbg !8718
  %call170 = call fastcc %union.tree_node* @first_const_call_expr_arg(%union.tree_node* %t1, %struct.const_call_expr_arg_iterator_d* nonnull %iter1) #8, !dbg !8719
  call void @llvm.dbg.value(metadata %union.tree_node* %call170, metadata !8619, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter2, metadata !8623, metadata !DIExpression(DW_OP_deref)), !dbg !8718
  %call171 = call fastcc %union.tree_node* @first_const_call_expr_arg(%union.tree_node* %t2, %struct.const_call_expr_arg_iterator_d* nonnull %iter2) #8, !dbg !8721
  call void @llvm.dbg.value(metadata %union.tree_node* %call171, metadata !8621, metadata !DIExpression()), !dbg !8718
  br label %for.cond172, !dbg !8722

for.cond172:                                      ; preds = %for.inc184, %if.end169
  %arg1.0 = phi %union.tree_node* [ %call170, %if.end169 ], [ %call185, %for.inc184 ], !dbg !8723
  %arg2.0 = phi %union.tree_node* [ %call171, %if.end169 ], [ %call186, %for.inc184 ], !dbg !8723
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2.0, metadata !8621, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1.0, metadata !8619, metadata !DIExpression()), !dbg !8718
  %tobool173 = icmp ne %union.tree_node* %arg1.0, null, !dbg !8724
  %tobool175 = icmp ne %union.tree_node* %arg2.0, null, !dbg !8726
  %spec.select = and i1 %tobool175, %tobool173, !dbg !8726
  br i1 %spec.select, label %for.body178, label %for.end187, !dbg !8727

for.body178:                                      ; preds = %for.cond172
  %call179 = call i32 @simple_cst_equal(%union.tree_node* nonnull %arg1.0, %union.tree_node* nonnull %arg2.0) #8, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %call179, metadata !8612, metadata !DIExpression()), !dbg !8624
  %cmp180 = icmp slt i32 %call179, 1, !dbg !8730
  br i1 %cmp180, label %cleanup190.loopexit, label %for.inc184, !dbg !8732

for.inc184:                                       ; preds = %for.body178
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter1, metadata !8622, metadata !DIExpression(DW_OP_deref)), !dbg !8718
  %call185 = call fastcc %union.tree_node* @next_const_call_expr_arg(%struct.const_call_expr_arg_iterator_d* nonnull %iter1) #8, !dbg !8733
  call void @llvm.dbg.value(metadata %union.tree_node* %call185, metadata !8619, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter2, metadata !8623, metadata !DIExpression(DW_OP_deref)), !dbg !8718
  %call186 = call fastcc %union.tree_node* @next_const_call_expr_arg(%struct.const_call_expr_arg_iterator_d* nonnull %iter2) #8, !dbg !8734
  call void @llvm.dbg.value(metadata %union.tree_node* %call186, metadata !8621, metadata !DIExpression()), !dbg !8718
  br label %for.cond172, !dbg !8735, !llvm.loop !8736

for.end187:                                       ; preds = %for.cond172
  %arg1.0.lcssa = phi %union.tree_node* [ %arg1.0, %for.cond172 ], !dbg !8723
  %arg2.0.lcssa = phi %union.tree_node* [ %arg2.0, %for.cond172 ], !dbg !8723
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1.0.lcssa, metadata !8619, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2.0.lcssa, metadata !8621, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1.0.lcssa, metadata !8619, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2.0.lcssa, metadata !8621, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1.0.lcssa, metadata !8619, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2.0.lcssa, metadata !8621, metadata !DIExpression()), !dbg !8718
  %cmp188 = icmp eq %union.tree_node* %arg1.0.lcssa, %arg2.0.lcssa, !dbg !8738
  %conv189 = zext i1 %cmp188 to i32, !dbg !8738
  br label %cleanup190, !dbg !8739

cleanup190.loopexit:                              ; preds = %for.body178
  %call179.lcssa = phi i32 [ %call179, %for.body178 ], !dbg !8728
  br label %cleanup190, !dbg !8740

cleanup190:                                       ; preds = %cleanup190.loopexit, %for.end187
  %retval.1 = phi i32 [ %conv189, %for.end187 ], [ %call179.lcssa, %cleanup190.loopexit ], !dbg !8718
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #6, !dbg !8740
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #6, !dbg !8740
  br label %cleanup356

sw.bb194:                                         ; preds = %if.end44
  %operands196 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8741
  %46 = bitcast %union.tree_node** %operands196 to i64**, !dbg !8741
  %47 = load i64*, i64** %46, align 8, !dbg !8741
  %bf.load199 = load i64, i64* %47, align 8, !dbg !8741
  %bf.cast2014 = and i64 %bf.load199, 65535, !dbg !8743
  %cmp202 = icmp eq i64 %bf.cast2014, 32, !dbg !8743
  %48 = bitcast i64* %47 to %union.tree_node*, !dbg !8744
  br i1 %cmp202, label %land.lhs.true, label %lor.lhs.false227, !dbg !8744

land.lhs.true:                                    ; preds = %sw.bb194
  %name = getelementptr inbounds i64, i64* %47, i64 4, !dbg !8745
  %49 = bitcast i64* %name to %union.tree_node**, !dbg !8745
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8, !dbg !8745
  %cmp207 = icmp eq %union.tree_node* %50, null, !dbg !8746
  br i1 %cmp207, label %land.lhs.true209, label %lor.lhs.false227, !dbg !8747

land.lhs.true209:                                 ; preds = %land.lhs.true
  %51 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !dbg !8748
  %tobool220 = icmp eq i8 %51, 0, !dbg !8748
  br i1 %tobool220, label %if.end275, label %land.lhs.true221, !dbg !8748

land.lhs.true221:                                 ; preds = %land.lhs.true209
  %rtl = getelementptr inbounds i64, i64* %47, i64 14, !dbg !8748
  %52 = bitcast i64* %rtl to %struct.rtx_def**, !dbg !8748
  %53 = load %struct.rtx_def*, %struct.rtx_def** %52, align 8, !dbg !8748
  %cmp225 = icmp eq %struct.rtx_def* %53, null, !dbg !8748
  br i1 %cmp225, label %if.end275, label %lor.lhs.false227, !dbg !8749

lor.lhs.false227:                                 ; preds = %land.lhs.true221, %land.lhs.true, %sw.bb194
  %operands229 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8750
  %54 = bitcast %union.tree_node** %operands229 to i64**, !dbg !8750
  %55 = load i64*, i64** %54, align 8, !dbg !8750
  %bf.load232 = load i64, i64* %55, align 8, !dbg !8750
  %bf.cast2345 = and i64 %bf.load232, 65535, !dbg !8751
  %cmp235 = icmp eq i64 %bf.cast2345, 32, !dbg !8751
  %56 = bitcast i64* %55 to %union.tree_node*, !dbg !8752
  br i1 %cmp235, label %land.lhs.true237, label %if.else267, !dbg !8752

land.lhs.true237:                                 ; preds = %lor.lhs.false227
  %name242 = getelementptr inbounds i64, i64* %55, i64 4, !dbg !8753
  %57 = bitcast i64* %name242 to %union.tree_node**, !dbg !8753
  %58 = load %union.tree_node*, %union.tree_node** %57, align 8, !dbg !8753
  %cmp243 = icmp eq %union.tree_node* %58, null, !dbg !8754
  br i1 %cmp243, label %land.lhs.true245, label %if.else267, !dbg !8755

land.lhs.true245:                                 ; preds = %land.lhs.true237
  %59 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !dbg !8756
  %tobool257 = icmp eq i8 %59, 0, !dbg !8756
  br i1 %tobool257, label %if.end275, label %land.lhs.true258, !dbg !8756

land.lhs.true258:                                 ; preds = %land.lhs.true245
  %rtl263 = getelementptr inbounds i64, i64* %55, i64 14, !dbg !8756
  %60 = bitcast i64* %rtl263 to %struct.rtx_def**, !dbg !8756
  %61 = load %struct.rtx_def*, %struct.rtx_def** %60, align 8, !dbg !8756
  %cmp264 = icmp eq %struct.rtx_def* %61, null, !dbg !8756
  br i1 %cmp264, label %if.end275, label %if.else267, !dbg !8757

if.else267:                                       ; preds = %land.lhs.true258, %land.lhs.true237, %lor.lhs.false227
  %call274 = tail call i32 @simple_cst_equal(%union.tree_node* %48, %union.tree_node* %56) #8, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %call274, metadata !8612, metadata !DIExpression()), !dbg !8624
  br label %if.end275

if.end275:                                        ; preds = %land.lhs.true221, %land.lhs.true209, %land.lhs.true258, %land.lhs.true245, %if.else267
  %cmp.0 = phi i32 [ %call274, %if.else267 ], [ 1, %land.lhs.true258 ], [ 1, %land.lhs.true245 ], [ 1, %land.lhs.true221 ], [ 1, %land.lhs.true209 ], !dbg !8759
  call void @llvm.dbg.value(metadata i32 %cmp.0, metadata !8612, metadata !DIExpression()), !dbg !8624
  %cmp276 = icmp slt i32 %cmp.0, 1, !dbg !8760
  br i1 %cmp276, label %cleanup356, label %if.end279, !dbg !8762

if.end279:                                        ; preds = %if.end275
  %arrayidx282 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands196, i64 1, !dbg !8763
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx282, align 8, !dbg !8763
  %operands284 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8764
  %arrayidx285 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands284, i64 1, !dbg !8764
  %63 = load %union.tree_node*, %union.tree_node** %arrayidx285, align 8, !dbg !8764
  %call286 = tail call i32 @simple_cst_equal(%union.tree_node* %62, %union.tree_node* %63) #8, !dbg !8765
  br label %cleanup356, !dbg !8766

sw.bb287:                                         ; preds = %if.end44
  %operands289 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8767
  %64 = load %union.tree_node*, %union.tree_node** %operands289, align 8, !dbg !8767
  %operands292 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8768
  %65 = load %union.tree_node*, %union.tree_node** %operands292, align 8, !dbg !8768
  %call294 = tail call i32 @simple_cst_equal(%union.tree_node* %64, %union.tree_node* %65) #8, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %call294, metadata !8612, metadata !DIExpression()), !dbg !8624
  %cmp295 = icmp slt i32 %call294, 1, !dbg !8770
  br i1 %cmp295, label %cleanup356, label %if.end298, !dbg !8772

if.end298:                                        ; preds = %sw.bb287
  %arrayidx301 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands289, i64 1, !dbg !8773
  %66 = load %union.tree_node*, %union.tree_node** %arrayidx301, align 8, !dbg !8773
  %call305 = tail call i32 @simple_cst_equal(%union.tree_node* %66, %union.tree_node* %66) #8, !dbg !8774
  br label %cleanup356, !dbg !8775

sw.bb306:                                         ; preds = %if.end44
  %operands308 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8776
  %arrayidx309 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands308, i64 1, !dbg !8776
  %67 = load %union.tree_node*, %union.tree_node** %arrayidx309, align 8, !dbg !8776
  %operands311 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8778
  %arrayidx312 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands311, i64 1, !dbg !8778
  %68 = load %union.tree_node*, %union.tree_node** %arrayidx312, align 8, !dbg !8778
  %cmp313 = icmp eq %union.tree_node* %67, %68, !dbg !8779
  br i1 %cmp313, label %if.then315, label %cleanup356, !dbg !8780

if.then315:                                       ; preds = %sw.bb306
  %69 = load %union.tree_node*, %union.tree_node** %operands308, align 8, !dbg !8781
  %70 = load %union.tree_node*, %union.tree_node** %operands311, align 8, !dbg !8782
  %call322 = tail call i32 @simple_cst_equal(%union.tree_node* %69, %union.tree_node* %70) #8, !dbg !8783
  br label %cleanup356, !dbg !8784

sw.epilog:                                        ; preds = %if.end44
  %cmp325 = icmp ugt i32 %bf.cast, 187, !dbg !8785
  br i1 %cmp325, label %cleanup356, label %if.end328, !dbg !8787

if.end328:                                        ; preds = %sw.epilog
  %idxprom329 = zext i32 %bf.cast to i64, !dbg !8788
  %arrayidx330 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom329, !dbg !8788
  %71 = load i32, i32* %arrayidx330, align 4, !dbg !8788
  switch i32 %71, label %cleanup356 [
    i32 6, label %sw.bb331
    i32 7, label %sw.bb331
    i32 5, label %sw.bb331
    i32 10, label %sw.bb331
    i32 4, label %sw.bb331
    i32 8, label %sw.bb331
  ], !dbg !8789

sw.bb331:                                         ; preds = %if.end328, %if.end328, %if.end328, %if.end328, %if.end328, %if.end328
  call void @llvm.dbg.value(metadata i32 1, metadata !8612, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.value(metadata i32 0, metadata !8613, metadata !DIExpression()), !dbg !8624
  %operands340 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8790
  %arrayidx334 = getelementptr inbounds [191 x i8], [191 x i8]* @tree_code_length, i64 0, i64 %idxprom329, !dbg !8795
  %72 = load i8, i8* %arrayidx334, align 1, !dbg !8795
  %operands344 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8796
  %wide.trip.count = zext i8 %72 to i64, !dbg !8797
  br label %for.cond332, !dbg !8798

for.cond332:                                      ; preds = %for.inc352, %sw.bb331
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc352 ], [ 0, %sw.bb331 ], !dbg !8799
  %cmp.1 = phi i32 [ %call347, %for.inc352 ], [ 1, %sw.bb331 ], !dbg !8800
  call void @llvm.dbg.value(metadata i32 %cmp.1, metadata !8612, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8613, metadata !DIExpression()), !dbg !8624
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !8797
  br i1 %exitcond, label %cleanup356.loopexit, label %for.body338, !dbg !8801

for.body338:                                      ; preds = %for.cond332
  %arrayidx342 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands340, i64 %indvars.iv, !dbg !8790
  %73 = load %union.tree_node*, %union.tree_node** %arrayidx342, align 8, !dbg !8790
  %arrayidx346 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands344, i64 %indvars.iv, !dbg !8802
  %74 = load %union.tree_node*, %union.tree_node** %arrayidx346, align 8, !dbg !8802
  %call347 = tail call i32 @simple_cst_equal(%union.tree_node* %73, %union.tree_node* %74) #8, !dbg !8803
  call void @llvm.dbg.value(metadata i32 %call347, metadata !8612, metadata !DIExpression()), !dbg !8624
  %cmp348 = icmp slt i32 %call347, 1, !dbg !8804
  br i1 %cmp348, label %cleanup356.loopexit, label %for.inc352, !dbg !8806

for.inc352:                                       ; preds = %for.body338
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8807
  call void @llvm.dbg.value(metadata i32 undef, metadata !8613, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8624
  br label %for.cond332, !dbg !8808, !llvm.loop !8809

cleanup356.loopexit:                              ; preds = %for.cond332, %for.body338
  %retval.2.ph = phi i32 [ %cmp.1, %for.cond332 ], [ %call347, %for.body338 ]
  br label %cleanup356, !dbg !8811

cleanup356.loopexit7:                             ; preds = %for.cond, %for.body
  %retval.2.ph8 = phi i32 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup356, !dbg !8811

cleanup356:                                       ; preds = %cleanup356.loopexit7, %cleanup356.loopexit, %sw.bb81, %if.end150, %if.end41, %if.end328, %sw.epilog, %if.end44, %if.end44, %if.end44, %if.end44, %sw.bb306, %sw.bb287, %if.end275, %sw.bb139, %if.end, %entry, %if.then315, %if.end298, %if.end279, %cleanup190, %sw.bb131, %land.end79, %sw.bb60, %sw.bb56, %land.end, %if.then35, %if.else, %if.then21
  %retval.2 = phi i32 [ %call, %if.then21 ], [ %call28, %if.else ], [ %call39, %if.then35 ], [ %call322, %if.then315 ], [ %call305, %if.end298 ], [ %call286, %if.end279 ], [ %retval.1, %cleanup190 ], [ %call138, %sw.bb131 ], [ %27, %land.end79 ], [ %conv64, %sw.bb60 ], [ %conv, %sw.bb56 ], [ %14, %land.end ], [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end41 ], [ 0, %sw.bb81 ], [ %call146, %sw.bb139 ], [ 0, %if.end150 ], [ %cmp.0, %if.end275 ], [ %call294, %sw.bb287 ], [ 0, %sw.bb306 ], [ 0, %if.end44 ], [ 0, %if.end44 ], [ 0, %if.end44 ], [ 0, %if.end44 ], [ -1, %sw.epilog ], [ -1, %if.end328 ], [ %retval.2.ph, %cleanup356.loopexit ], [ %retval.2.ph8, %cleanup356.loopexit7 ], !dbg !8624
  ret i32 %retval.2, !dbg !8811
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @merge_type_attributes(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !8812 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !8814, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !8815, metadata !DIExpression()), !dbg !8816
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8817
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8817
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8818
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !8818
  %call = tail call %union.tree_node* @merge_attributes(%union.tree_node* %1, %union.tree_node* %3) #8, !dbg !8819
  ret %union.tree_node* %call, !dbg !8820
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @merge_decl_attributes(%union.tree_node* %olddecl, %union.tree_node* %newdecl) local_unnamed_addr #5 !dbg !8821 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %olddecl, metadata !8823, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata %union.tree_node* %newdecl, metadata !8824, metadata !DIExpression()), !dbg !8825
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !8826
  %0 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !8826
  %attributes2 = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !8827
  %1 = load %union.tree_node*, %union.tree_node** %attributes2, align 8, !dbg !8827
  %call = tail call %union.tree_node* @merge_attributes(%union.tree_node* %0, %union.tree_node* %1) #8, !dbg !8828
  ret %union.tree_node* %call, !dbg !8829
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @check_qualified_type(%union.tree_node* %cand, %union.tree_node* %base, i32 %type_quals) local_unnamed_addr #5 !dbg !8830 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %cand, metadata !8834, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !8835, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 %type_quals, metadata !8836, metadata !DIExpression()), !dbg !8837
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %cand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8838
  %bf.load = load i64, i64* %0, align 8, !dbg !8838
  %bf.lshr = lshr i64 %bf.load, 20, !dbg !8838
  %1 = trunc i64 %bf.lshr to i32, !dbg !8838
  %bf.cast = and i32 %1, 1, !dbg !8838
  %2 = lshr i64 %bf.load, 18, !dbg !8838
  %3 = trunc i64 %2 to i32, !dbg !8838
  %mul7 = and i32 %3, 2, !dbg !8838
  %or = or i32 %bf.cast, %mul7, !dbg !8838
  %type = bitcast %union.tree_node* %cand to %struct.tree_type*, !dbg !8838
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !8838
  %bf.load8 = load i32, i32* %restrict_flag, align 4, !dbg !8838
  %4 = lshr i32 %bf.load8, 11, !dbg !8838
  %mul11 = and i32 %4, 4, !dbg !8838
  %or12 = or i32 %or, %mul11, !dbg !8838
  %5 = lshr i64 %bf.load, 48, !dbg !8838
  %6 = trunc i64 %5 to i32, !dbg !8838
  %shl = and i32 %6, 65280, !dbg !8838
  %or17 = or i32 %or12, %shl, !dbg !8838
  %cmp = icmp eq i32 %or17, %type_quals, !dbg !8839
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8840

land.lhs.true:                                    ; preds = %entry
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %cand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !8841
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !8841
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !8842
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !8842
  %cmp21 = icmp eq %union.tree_node* %8, %10, !dbg !8843
  br i1 %cmp21, label %land.lhs.true22, label %land.end, !dbg !8844

land.lhs.true22:                                  ; preds = %land.lhs.true
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %cand, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !8845
  %11 = bitcast i24* %context to %union.tree_node**, !dbg !8845
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !8845
  %context25 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !8846
  %13 = bitcast i24* %context25 to %union.tree_node**, !dbg !8846
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !8846
  %cmp26 = icmp eq %union.tree_node* %12, %14, !dbg !8847
  br i1 %cmp26, label %land.rhs, label %land.end, !dbg !8848

land.rhs:                                         ; preds = %land.lhs.true22
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %cand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8849
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !8849
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %base, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8850
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !8850
  %call = tail call i32 @attribute_list_equal(%union.tree_node* %16, %union.tree_node* %18) #8, !dbg !8851
  %tobool = icmp ne i32 %call, 0, !dbg !8848
  %phitmp = zext i1 %tobool to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true22, %land.lhs.true, %entry
  %19 = phi i8 [ 0, %land.lhs.true22 ], [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %19, !dbg !8852
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_qualified_type(%union.tree_node* %type, i32 %type_quals) local_unnamed_addr #5 !dbg !8853 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8855, metadata !DIExpression()), !dbg !8858
  call void @llvm.dbg.value(metadata i32 %type_quals, metadata !8856, metadata !DIExpression()), !dbg !8858
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8859
  %bf.load = load i64, i64* %0, align 8, !dbg !8859
  %bf.lshr = lshr i64 %bf.load, 20, !dbg !8859
  %1 = trunc i64 %bf.lshr to i32, !dbg !8859
  %bf.cast = and i32 %1, 1, !dbg !8859
  %2 = lshr i64 %bf.load, 18, !dbg !8859
  %3 = trunc i64 %2 to i32, !dbg !8859
  %mul6 = and i32 %3, 2, !dbg !8859
  %or = or i32 %bf.cast, %mul6, !dbg !8859
  %type7 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !8859
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i64 0, i32 6, !dbg !8859
  %bf.load8 = load i32, i32* %restrict_flag, align 4, !dbg !8859
  %4 = lshr i32 %bf.load8, 11, !dbg !8859
  %mul11 = and i32 %4, 4, !dbg !8859
  %or12 = or i32 %or, %mul11, !dbg !8859
  %5 = lshr i64 %bf.load, 48, !dbg !8859
  %6 = trunc i64 %5 to i32, !dbg !8859
  %shl = and i32 %6, 65280, !dbg !8859
  %or17 = or i32 %or12, %shl, !dbg !8859
  %cmp = icmp eq i32 %or17, %type_quals, !dbg !8861
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8862

if.end:                                           ; preds = %entry
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8863
  br label %for.cond, !dbg !8865

for.cond:                                         ; preds = %for.inc, %if.end
  %t.0.in = phi %union.tree_node** [ %7, %if.end ], [ %8, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !8866
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !8857, metadata !DIExpression()), !dbg !8858
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !8867
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !8867

for.body:                                         ; preds = %for.cond
  %call = tail call zeroext i8 @check_qualified_type(%union.tree_node* nonnull %t.0, %union.tree_node* %type, i32 %type_quals) #8, !dbg !8868
  %tobool19 = icmp eq i8 %call, 0, !dbg !8868
  br i1 %tobool19, label %for.inc, label %cleanup.loopexit, !dbg !8871

for.inc:                                          ; preds = %for.body
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8872
  br label %for.cond, !dbg !8873, !llvm.loop !8874

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi %union.tree_node* [ null, %for.cond ], [ %t.0, %for.body ]
  br label %cleanup, !dbg !8876

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi %union.tree_node* [ %type, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !8858
  ret %union.tree_node* %retval.0, !dbg !8876
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_variant_type_copy(%union.tree_node* %type) local_unnamed_addr #5 !dbg !8877 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8879, metadata !DIExpression()), !dbg !8882
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8883
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8883
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8881, metadata !DIExpression()), !dbg !8882
  %call = tail call %union.tree_node* @build_distinct_type_copy(%union.tree_node* %type) #8, !dbg !8884
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8880, metadata !DIExpression()), !dbg !8882
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1, !dbg !8885
  %3 = bitcast %union.tree_node** %2 to i64*, !dbg !8885
  %4 = load i64, i64* %3, align 8, !dbg !8885
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1, !dbg !8886
  %6 = bitcast %union.tree_node** %5 to i64*, !dbg !8887
  store i64 %4, i64* %6, align 8, !dbg !8887
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8888
  %8 = bitcast %union.tree_node** %7 to i64*, !dbg !8888
  %9 = load i64, i64* %8, align 8, !dbg !8888
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8889
  %11 = bitcast %union.tree_node** %10 to i64*, !dbg !8890
  store i64 %9, i64* %11, align 8, !dbg !8890
  store %union.tree_node* %call, %union.tree_node** %7, align 8, !dbg !8891
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8892
  store %union.tree_node* %1, %union.tree_node** %12, align 8, !dbg !8893
  ret %union.tree_node* %call, !dbg !8894
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_type_quals(%union.tree_node* %type, i32 %type_quals) unnamed_addr #5 !dbg !8895 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8899, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32 %type_quals, metadata !8900, metadata !DIExpression()), !dbg !8901
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8902
  %bf.load = load i64, i64* %0, align 8, !dbg !8903
  %1 = shl i32 %type_quals, 20, !dbg !8903
  %2 = and i32 %1, 1048576, !dbg !8903
  %bf.shl = zext i32 %2 to i64, !dbg !8903
  %bf.clear = and i64 %bf.load, 72057594036355071, !dbg !8903
  %bf.set = or i64 %bf.clear, %bf.shl, !dbg !8903
  %3 = shl i32 %type_quals, 18, !dbg !8904
  %4 = and i32 %3, 524288, !dbg !8904
  %bf.shl7 = zext i32 %4 to i64, !dbg !8904
  %bf.set9 = or i64 %bf.set, %bf.shl7, !dbg !8904
  %type14 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !8905
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !8905
  %bf.load15 = load i32, i32* %restrict_flag, align 4, !dbg !8906
  %5 = shl i32 %type_quals, 11, !dbg !8906
  %bf.shl17 = and i32 %5, 8192, !dbg !8906
  %bf.clear18 = and i32 %bf.load15, -8193, !dbg !8906
  %bf.set19 = or i32 %bf.clear18, %bf.shl17, !dbg !8906
  store i32 %bf.set19, i32* %restrict_flag, align 4, !dbg !8906
  %6 = lshr i32 %type_quals, 8, !dbg !8907
  %bf.value23 = zext i32 %6 to i64, !dbg !8908
  %bf.shl24 = shl i64 %bf.value23, 56, !dbg !8908
  %bf.set26 = or i64 %bf.set9, %bf.shl24, !dbg !8908
  store i64 %bf.set26, i64* %0, align 8, !dbg !8908
  ret void, !dbg !8909
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_map_base_marked_p(i8* %p) #5 !dbg !8910 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !8912, metadata !DIExpression()), !dbg !8913
  %0 = bitcast i8* %p to i8**, !dbg !8914
  %1 = load i8*, i8** %0, align 8, !dbg !8914
  %call = tail call i32 @ggc_marked_p(i8* %1) #7, !dbg !8915
  ret i32 %call, !dbg !8916
}

declare dso_local i32 @ggc_marked_p(i8*) #2

declare dso_local i8* @htab_find(%struct.htab*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i16 @decl_fini_priority_lookup(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !8917 {
entry:
  %in = alloca %struct.tree_map_base, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8919, metadata !DIExpression()), !dbg !8922
  %0 = bitcast %struct.tree_map_base* %in to i8*, !dbg !8923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !8923
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8924
  %bf.load = load i64, i64* %1, align 8, !dbg !8924
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8924
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !8924
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8924

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5621, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !8924
  br label %cond.end, !dbg !8924

cond.end:                                         ; preds = %entry, %cond.true
  %from = getelementptr inbounds %struct.tree_map_base, %struct.tree_map_base* %in, i64 0, i32 0, !dbg !8925
  store %union.tree_node* %decl, %union.tree_node** %from, align 8, !dbg !8926
  %2 = load %struct.htab*, %struct.htab** @init_priority_for_decl, align 8, !dbg !8927
  %call = call i8* @htab_find(%struct.htab* %2, i8* nonnull %0) #7, !dbg !8928
  call void @llvm.dbg.value(metadata i8* %call, metadata !8920, metadata !DIExpression()), !dbg !8922
  %tobool = icmp eq i8* %call, null, !dbg !8929
  br i1 %tobool, label %cond.end3, label %cond.true1, !dbg !8929

cond.true1:                                       ; preds = %cond.end
  call void @llvm.dbg.value(metadata i8* %call, metadata !8920, metadata !DIExpression()), !dbg !8922
  %fini = getelementptr inbounds i8, i8* %call, i64 10, !dbg !8930
  %3 = bitcast i8* %fini to i16*, !dbg !8930
  %4 = load i16, i16* %3, align 2, !dbg !8930
  br label %cond.end3, !dbg !8929

cond.end3:                                        ; preds = %cond.end, %cond.true1
  %cond4 = phi i16 [ %4, %cond.true1 ], [ -1, %cond.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !8931
  ret i16 %cond4, !dbg !8932
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.tree_priority_map* @decl_priority_info(%union.tree_node* %decl) unnamed_addr #5 !dbg !8933 {
entry:
  %in = alloca %struct.tree_priority_map, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8937, metadata !DIExpression()), !dbg !8941
  %0 = bitcast %struct.tree_priority_map* %in to i8*, !dbg !8942
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !8942
  %from = getelementptr inbounds %struct.tree_priority_map, %struct.tree_priority_map* %in, i64 0, i32 0, i32 0, !dbg !8943
  store %union.tree_node* %decl, %union.tree_node** %from, align 8, !dbg !8944
  %1 = load %struct.htab*, %struct.htab** @init_priority_for_decl, align 8, !dbg !8945
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #7, !dbg !8946
  call void @llvm.dbg.value(metadata i8** %call, metadata !8940, metadata !DIExpression()), !dbg !8941
  %2 = bitcast i8** %call to %struct.tree_priority_map**, !dbg !8947
  %3 = load %struct.tree_priority_map*, %struct.tree_priority_map** %2, align 8, !dbg !8947
  call void @llvm.dbg.value(metadata %struct.tree_priority_map* %3, metadata !8939, metadata !DIExpression()), !dbg !8941
  %tobool = icmp eq %struct.tree_priority_map* %3, null, !dbg !8948
  br i1 %tobool, label %if.then, label %if.end, !dbg !8950

if.then:                                          ; preds = %entry
  %call1 = call i8* @ggc_alloc_cleared_stat(i64 16) #7, !dbg !8951
  %4 = bitcast i8* %call1 to %struct.tree_priority_map*, !dbg !8951
  call void @llvm.dbg.value(metadata %struct.tree_priority_map* %4, metadata !8939, metadata !DIExpression()), !dbg !8941
  store i8* %call1, i8** %call, align 8, !dbg !8953
  %from3 = bitcast i8* %call1 to %union.tree_node**, !dbg !8954
  store %union.tree_node* %decl, %union.tree_node** %from3, align 8, !dbg !8955
  %init = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !8956
  %5 = bitcast i8* %init to i16*, !dbg !8956
  store i16 -1, i16* %5, align 8, !dbg !8957
  %fini = getelementptr inbounds i8, i8* %call1, i64 10, !dbg !8958
  %6 = bitcast i8* %fini to i16*, !dbg !8958
  store i16 -1, i16* %6, align 2, !dbg !8959
  br label %if.end, !dbg !8960

if.end:                                           ; preds = %entry, %if.then
  %h.0 = phi %struct.tree_priority_map* [ %3, %entry ], [ %4, %if.then ], !dbg !8941
  call void @llvm.dbg.value(metadata %struct.tree_priority_map* %h.0, metadata !8939, metadata !DIExpression()), !dbg !8941
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !8961
  ret %struct.tree_priority_map* %h.0, !dbg !8962
}

; Function Attrs: nounwind uwtable
define dso_local void @decl_fini_priority_insert(%union.tree_node* %decl, i16 zeroext %priority) local_unnamed_addr #5 !dbg !8963 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8965, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i16 %priority, metadata !8966, metadata !DIExpression()), !dbg !8968
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8969
  %bf.load = load i64, i64* %0, align 8, !dbg !8969
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8969
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !8969
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8969

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 5672, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !8969
  br label %cond.end, !dbg !8969

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %struct.tree_priority_map* @decl_priority_info(%union.tree_node* %decl) #8, !dbg !8970
  call void @llvm.dbg.value(metadata %struct.tree_priority_map* %call, metadata !8967, metadata !DIExpression()), !dbg !8968
  %fini = getelementptr inbounds %struct.tree_priority_map, %struct.tree_priority_map* %call, i64 0, i32 2, !dbg !8971
  store i16 %priority, i16* %fini, align 2, !dbg !8972
  ret void, !dbg !8973
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @decl_debug_expr_lookup(%union.tree_node* %from) local_unnamed_addr #5 !dbg !8974 {
entry:
  %in = alloca %struct.tree_map, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !8976, metadata !DIExpression()), !dbg !8979
  %0 = bitcast %struct.tree_map* %in to i8*, !dbg !8980
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !8980
  %from1 = getelementptr inbounds %struct.tree_map, %struct.tree_map* %in, i64 0, i32 0, i32 0, !dbg !8981
  store %union.tree_node* %from, %union.tree_node** %from1, align 8, !dbg !8982
  %1 = load %struct.htab*, %struct.htab** @debug_expr_for_decl, align 8, !dbg !8983
  %2 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !8984
  %3 = bitcast %union.tree_node* %from to i8*, !dbg !8985
  %call = tail call i32 %2(i8* %3) #7, !dbg !8984
  %call2 = call i8* @htab_find_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call) #7, !dbg !8986
  call void @llvm.dbg.value(metadata i8* %call2, metadata !8977, metadata !DIExpression()), !dbg !8979
  %tobool = icmp eq i8* %call2, null, !dbg !8987
  br i1 %tobool, label %cleanup, label %if.then, !dbg !8989

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call2, metadata !8977, metadata !DIExpression()), !dbg !8979
  %to = getelementptr inbounds i8, i8* %call2, i64 16, !dbg !8990
  %4 = bitcast i8* %to to %union.tree_node**, !dbg !8990
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !8990
  br label %cleanup, !dbg !8991

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %5, %if.then ], [ null, %entry ], !dbg !8979
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !8992
  ret %union.tree_node* %retval.0, !dbg !8992
}

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @decl_debug_expr_insert(%union.tree_node* %from, %union.tree_node* %to) local_unnamed_addr #5 !dbg !8993 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !8995, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata %union.tree_node* %to, metadata !8996, metadata !DIExpression()), !dbg !8999
  %call = tail call i8* @ggc_alloc_stat(i64 24) #7, !dbg !9000
  call void @llvm.dbg.value(metadata i8* %call, metadata !8997, metadata !DIExpression()), !dbg !8999
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !9001
  %1 = bitcast %union.tree_node* %from to i8*, !dbg !9002
  %call1 = tail call i32 %0(i8* %1) #7, !dbg !9001
  %hash = getelementptr inbounds i8, i8* %call, i64 8, !dbg !9003
  %2 = bitcast i8* %hash to i32*, !dbg !9003
  store i32 %call1, i32* %2, align 8, !dbg !9004
  %from2 = bitcast i8* %call to %union.tree_node**, !dbg !9005
  store %union.tree_node* %from, %union.tree_node** %from2, align 8, !dbg !9006
  %to3 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !9007
  %3 = bitcast i8* %to3 to %union.tree_node**, !dbg !9007
  store %union.tree_node* %to, %union.tree_node** %3, align 8, !dbg !9008
  %4 = load %struct.htab*, %struct.htab** @debug_expr_for_decl, align 8, !dbg !9009
  %call5 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %4, i8* %call, i32 %call1, i32 1) #7, !dbg !9010
  call void @llvm.dbg.value(metadata i8** %call5, metadata !8998, metadata !DIExpression()), !dbg !8999
  store i8* %call, i8** %call5, align 8, !dbg !9011
  ret void, !dbg !9012
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @type_hash_lookup(i32 %hashcode, %union.tree_node* %type) local_unnamed_addr #5 !dbg !9013 {
entry:
  %in = alloca %struct.type_hash, align 8
  call void @llvm.dbg.value(metadata i32 %hashcode, metadata !9017, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9018, metadata !DIExpression()), !dbg !9021
  %0 = bitcast %struct.type_hash* %in to i8*, !dbg !9022
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !9022
  tail call void @layout_type(%union.tree_node* %type) #7, !dbg !9023
  %conv = zext i32 %hashcode to i64, !dbg !9024
  %hash = getelementptr inbounds %struct.type_hash, %struct.type_hash* %in, i64 0, i32 0, !dbg !9025
  store i64 %conv, i64* %hash, align 8, !dbg !9026
  %type1 = getelementptr inbounds %struct.type_hash, %struct.type_hash* %in, i64 0, i32 1, !dbg !9027
  store %union.tree_node* %type, %union.tree_node** %type1, align 8, !dbg !9028
  %1 = load %struct.htab*, %struct.htab** @type_hash_table, align 8, !dbg !9029
  %call = call i8* @htab_find_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %hashcode) #7, !dbg !9030
  call void @llvm.dbg.value(metadata i8* %call, metadata !9019, metadata !DIExpression()), !dbg !9021
  %tobool = icmp eq i8* %call, null, !dbg !9031
  br i1 %tobool, label %cleanup, label %if.then, !dbg !9033

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call, metadata !9019, metadata !DIExpression()), !dbg !9021
  %type2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !9034
  %2 = bitcast i8* %type2 to %union.tree_node**, !dbg !9034
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !9034
  br label %cleanup, !dbg !9035

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ null, %entry ], !dbg !9021
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !9036
  ret %union.tree_node* %retval.0, !dbg !9036
}

declare dso_local void @layout_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @type_hash_add(i32 %hashcode, %union.tree_node* %type) local_unnamed_addr #5 !dbg !9037 {
entry:
  call void @llvm.dbg.value(metadata i32 %hashcode, metadata !9041, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9042, metadata !DIExpression()), !dbg !9045
  %call = tail call i8* @ggc_alloc_stat(i64 16) #7, !dbg !9046
  call void @llvm.dbg.value(metadata i8* %call, metadata !9043, metadata !DIExpression()), !dbg !9045
  %conv = zext i32 %hashcode to i64, !dbg !9047
  %hash = bitcast i8* %call to i64*, !dbg !9048
  store i64 %conv, i64* %hash, align 8, !dbg !9049
  %type1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !9050
  %0 = bitcast i8* %type1 to %union.tree_node**, !dbg !9050
  store %union.tree_node* %type, %union.tree_node** %0, align 8, !dbg !9051
  %1 = load %struct.htab*, %struct.htab** @type_hash_table, align 8, !dbg !9052
  %call2 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* %call, i32 %hashcode, i32 1) #7, !dbg !9053
  call void @llvm.dbg.value(metadata i8** %call2, metadata !9044, metadata !DIExpression()), !dbg !9045
  store i8* %call, i8** %call2, align 8, !dbg !9054
  ret void, !dbg !9055
}

; Function Attrs: nounwind uwtable
define dso_local i32 @type_list_equal(%union.tree_node* %l1, %union.tree_node* %l2) local_unnamed_addr #5 !dbg !9056 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %l1, metadata !9058, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %l2, metadata !9059, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %l1, metadata !9060, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %l2, metadata !9061, metadata !DIExpression()), !dbg !9062
  br label %for.cond, !dbg !9063

for.cond:                                         ; preds = %for.inc, %entry
  %t1.0 = phi %union.tree_node* [ %l1, %entry ], [ %14, %for.inc ], !dbg !9065
  %t2.0 = phi %union.tree_node* [ %l2, %entry ], [ %15, %for.inc ], !dbg !9065
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0, metadata !9061, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0, metadata !9060, metadata !DIExpression()), !dbg !9062
  %tobool = icmp ne %union.tree_node* %t1.0, null, !dbg !9066
  %tobool1 = icmp ne %union.tree_node* %t2.0, null, !dbg !9068
  %spec.select = and i1 %tobool1, %tobool, !dbg !9068
  br i1 %spec.select, label %for.body, label %for.end, !dbg !9069

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9070
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !9070
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9072
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !9072
  %cmp = icmp eq %union.tree_node* %1, %3, !dbg !9073
  br i1 %cmp, label %lor.lhs.false, label %cleanup.loopexit, !dbg !9074

lor.lhs.false:                                    ; preds = %for.body
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9075
  %4 = bitcast i32* %purpose to %union.tree_node**, !dbg !9075
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9075
  %purpose6 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9076
  %6 = bitcast i32* %purpose6 to %union.tree_node**, !dbg !9076
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !9076
  %cmp7 = icmp eq %union.tree_node* %5, %7, !dbg !9077
  br i1 %cmp7, label %for.inc, label %land.lhs.true, !dbg !9078

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call = tail call i32 @simple_cst_equal(%union.tree_node* %5, %union.tree_node* %7) #8, !dbg !9079
  %cmp12 = icmp eq i32 %call, 1, !dbg !9080
  br i1 %cmp12, label %land.lhs.true13, label %cleanup.loopexit, !dbg !9081

land.lhs.true13:                                  ; preds = %land.lhs.true
  %8 = bitcast i32* %purpose to %struct.tree_common**, !dbg !9082
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !9082
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !9082
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9082
  %11 = bitcast i32* %purpose6 to %struct.tree_common**, !dbg !9083
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !9083
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !9083
  %13 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !9083
  %cmp20 = icmp eq %union.tree_node* %10, %13, !dbg !9084
  br i1 %cmp20, label %for.inc, label %cleanup.loopexit, !dbg !9085

for.inc:                                          ; preds = %lor.lhs.false, %land.lhs.true13
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9086
  %14 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !9086
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !9060, metadata !DIExpression()), !dbg !9062
  %chain23 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9087
  %15 = load %union.tree_node*, %union.tree_node** %chain23, align 8, !dbg !9087
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !9061, metadata !DIExpression()), !dbg !9062
  br label %for.cond, !dbg !9088, !llvm.loop !9089

for.end:                                          ; preds = %for.cond
  %t1.0.lcssa = phi %union.tree_node* [ %t1.0, %for.cond ], !dbg !9065
  %t2.0.lcssa = phi %union.tree_node* [ %t2.0, %for.cond ], !dbg !9065
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !9060, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !9061, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !9060, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !9061, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0.lcssa, metadata !9060, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0.lcssa, metadata !9061, metadata !DIExpression()), !dbg !9062
  %cmp24 = icmp eq %union.tree_node* %t1.0.lcssa, %t2.0.lcssa, !dbg !9091
  %conv = zext i1 %cmp24 to i32, !dbg !9091
  br label %cleanup, !dbg !9092

cleanup.loopexit:                                 ; preds = %land.lhs.true13, %land.lhs.true, %for.body
  br label %cleanup, !dbg !9093

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %retval.0 = phi i32 [ %conv, %for.end ], [ 0, %cleanup.loopexit ], !dbg !9062
  ret i32 %retval.0, !dbg !9093
}

; Function Attrs: nounwind uwtable
define dso_local i32 @type_num_arguments(%union.tree_node* %type) local_unnamed_addr #5 !dbg !9094 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9096, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 0, metadata !9097, metadata !DIExpression()), !dbg !9099
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9100
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !9100
  br label %for.cond, !dbg !9102

for.cond:                                         ; preds = %if.else, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.else ], !dbg !9099
  %t.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %if.else ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !9103
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !9098, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9097, metadata !DIExpression()), !dbg !9099
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !9104
  br i1 %tobool, label %for.end, label %for.body, !dbg !9104

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9105
  %2 = bitcast %union.tree_node** %1 to i64**, !dbg !9105
  %3 = load i64*, i64** %2, align 8, !dbg !9105
  %bf.load = load i64, i64* %3, align 8, !dbg !9105
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9105
  %cmp = icmp eq i64 %bf.cast1, 19, !dbg !9105
  br i1 %cmp, label %for.end, label %if.else, !dbg !9108

if.else:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9097, metadata !DIExpression()), !dbg !9099
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9110
  br label %for.cond, !dbg !9111, !llvm.loop !9112

for.end:                                          ; preds = %for.cond, %for.body
  %i.0.lcssa = phi i32 [ %i.0, %for.cond ], [ %i.0, %for.body ], !dbg !9099
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !9097, metadata !DIExpression()), !dbg !9099
  ret i32 %i.0.lcssa, !dbg !9114
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_int_cst_equal(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !9115 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !9117, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !9118, metadata !DIExpression()), !dbg !9119
  %cmp = icmp eq %union.tree_node* %t1, %t2, !dbg !9120
  br i1 %cmp, label %return, label %if.end, !dbg !9122

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq %union.tree_node* %t1, null, !dbg !9123
  %cmp2 = icmp eq %union.tree_node* %t2, null, !dbg !9125
  %or.cond = or i1 %cmp1, %cmp2, !dbg !9126
  br i1 %or.cond, label %return, label %if.end4, !dbg !9126

if.end4:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9127
  %bf.load = load i64, i64* %0, align 8, !dbg !9127
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9129
  %cmp5 = icmp eq i64 %bf.cast1, 23, !dbg !9129
  br i1 %cmp5, label %land.lhs.true, label %if.end25, !dbg !9130

land.lhs.true:                                    ; preds = %if.end4
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9131
  %bf.load7 = load i64, i64* %1, align 8, !dbg !9131
  %bf.cast92 = and i64 %bf.load7, 65535, !dbg !9132
  %cmp10 = icmp eq i64 %bf.cast92, 23, !dbg !9132
  br i1 %cmp10, label %land.lhs.true11, label %if.end25, !dbg !9133

land.lhs.true11:                                  ; preds = %land.lhs.true
  %int_cst12 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9134
  %low = bitcast i32* %int_cst12 to i64*, !dbg !9134
  %2 = load i64, i64* %low, align 8, !dbg !9134
  %int_cst14 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9135
  %low15 = bitcast i32* %int_cst14 to i64*, !dbg !9135
  %3 = load i64, i64* %low15, align 8, !dbg !9135
  %cmp16 = icmp eq i64 %2, %3, !dbg !9136
  br i1 %cmp16, label %land.lhs.true17, label %if.end25, !dbg !9137

land.lhs.true17:                                  ; preds = %land.lhs.true11
  %high = getelementptr inbounds i32, i32* %int_cst12, i64 2, !dbg !9138
  %4 = bitcast i32* %high to i64*, !dbg !9138
  %5 = load i64, i64* %4, align 8, !dbg !9138
  %high22 = getelementptr inbounds i32, i32* %int_cst14, i64 2, !dbg !9139
  %6 = bitcast i32* %high22 to i64*, !dbg !9139
  %7 = load i64, i64* %6, align 8, !dbg !9139
  %cmp23 = icmp eq i64 %5, %7, !dbg !9140
  br i1 %cmp23, label %return, label %if.end25, !dbg !9141

if.end25:                                         ; preds = %land.lhs.true17, %land.lhs.true11, %land.lhs.true, %if.end4
  br label %return, !dbg !9142

return:                                           ; preds = %land.lhs.true17, %if.end, %entry, %if.end25
  %retval.0 = phi i32 [ 0, %if.end25 ], [ 1, %entry ], [ 0, %if.end ], [ 1, %land.lhs.true17 ], !dbg !9119
  ret i32 %retval.0, !dbg !9143
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_int_cst_lt(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !9144 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !9146, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !9147, metadata !DIExpression()), !dbg !9152
  %cmp = icmp eq %union.tree_node* %t1, %t2, !dbg !9153
  br i1 %cmp, label %return, label %if.end, !dbg !9155

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9156
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !9156
  %1 = load i64*, i64** %0, align 8, !dbg !9156
  %bf.load = load i64, i64* %1, align 8, !dbg !9156
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9157
  %2 = bitcast %union.tree_node** %type2 to i64**, !dbg !9157
  %3 = load i64*, i64** %2, align 8, !dbg !9157
  %bf.load4 = load i64, i64* %3, align 8, !dbg !9157
  %bf.lshr6 = xor i64 %bf.load, %bf.load4, !dbg !9158
  %4 = and i64 %bf.lshr6, 2097152, !dbg !9158
  %cmp8 = icmp eq i64 %4, 0, !dbg !9158
  br i1 %cmp8, label %if.else18, label %if.then9, !dbg !9159

if.then9:                                         ; preds = %if.end
  %call = tail call i32 @tree_int_cst_sgn(%union.tree_node* %t1) #8, !dbg !9160
  call void @llvm.dbg.value(metadata i32 %call, metadata !9148, metadata !DIExpression()), !dbg !9161
  %call10 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %t2) #8, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %call10, metadata !9151, metadata !DIExpression()), !dbg !9161
  %cmp11 = icmp slt i32 %call, %call10, !dbg !9163
  br i1 %cmp11, label %cleanup, label %if.else, !dbg !9165

if.else:                                          ; preds = %if.then9
  %cmp13 = icmp sle i32 %call, %call10, !dbg !9166
  br label %cleanup, !dbg !9168

cleanup:                                          ; preds = %if.else, %if.then9
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then9 ], [ %cmp13, %if.else ]
  %retval.0 = phi i32 [ 1, %if.then9 ], [ 0, %if.else ]
  br i1 %cleanup.dest.slot.0, label %if.end46, label %return

if.else18:                                        ; preds = %if.end
  %bf.cast252 = and i64 %bf.load, 2097152, !dbg !9169
  %tobool = icmp eq i64 %bf.cast252, 0, !dbg !9169
  br i1 %tobool, label %if.then26, label %if.end46, !dbg !9171

if.then26:                                        ; preds = %if.else18
  %int_cst27 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9172
  %high = getelementptr inbounds i32, i32* %int_cst27, i64 2, !dbg !9172
  %5 = bitcast i32* %high to i64*, !dbg !9172
  %6 = load i64, i64* %5, align 8, !dbg !9172
  %int_cst29 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9172
  %high30 = getelementptr inbounds i32, i32* %int_cst29, i64 2, !dbg !9172
  %7 = bitcast i32* %high30 to i64*, !dbg !9172
  %8 = load i64, i64* %7, align 8, !dbg !9172
  %cmp31 = icmp slt i64 %6, %8, !dbg !9172
  br i1 %cmp31, label %lor.end, label %lor.rhs, !dbg !9172

lor.rhs:                                          ; preds = %if.then26
  %cmp38 = icmp eq i64 %6, %8, !dbg !9172
  br i1 %cmp38, label %land.rhs, label %lor.end, !dbg !9172

land.rhs:                                         ; preds = %lor.rhs
  %low = bitcast i32* %int_cst27 to i64*, !dbg !9172
  %9 = load i64, i64* %low, align 8, !dbg !9172
  %low43 = bitcast i32* %int_cst29 to i64*, !dbg !9172
  %10 = load i64, i64* %low43, align 8, !dbg !9172
  %cmp44 = icmp ult i64 %9, %10, !dbg !9172
  %phitmp = zext i1 %cmp44 to i32
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %if.then26
  %11 = phi i32 [ 1, %if.then26 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !9173

if.end46:                                         ; preds = %if.else18, %cleanup
  %int_cst48 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9174
  %high49 = getelementptr inbounds i32, i32* %int_cst48, i64 2, !dbg !9174
  %12 = bitcast i32* %high49 to i64*, !dbg !9174
  %13 = load i64, i64* %12, align 8, !dbg !9174
  %int_cst51 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9174
  %high52 = getelementptr inbounds i32, i32* %int_cst51, i64 2, !dbg !9174
  %14 = bitcast i32* %high52 to i64*, !dbg !9174
  %15 = load i64, i64* %14, align 8, !dbg !9174
  %cmp53 = icmp ult i64 %13, %15, !dbg !9174
  br i1 %cmp53, label %lor.end71, label %lor.rhs54, !dbg !9174

lor.rhs54:                                        ; preds = %if.end46
  %cmp61 = icmp eq i64 %13, %15, !dbg !9174
  br i1 %cmp61, label %land.rhs62, label %lor.end71, !dbg !9174

land.rhs62:                                       ; preds = %lor.rhs54
  %low65 = bitcast i32* %int_cst48 to i64*, !dbg !9174
  %16 = load i64, i64* %low65, align 8, !dbg !9174
  %low68 = bitcast i32* %int_cst51 to i64*, !dbg !9174
  %17 = load i64, i64* %low68, align 8, !dbg !9174
  %cmp69 = icmp ult i64 %16, %17, !dbg !9174
  %phitmp3 = zext i1 %cmp69 to i32
  br label %lor.end71

lor.end71:                                        ; preds = %lor.rhs54, %land.rhs62, %if.end46
  %18 = phi i32 [ 1, %if.end46 ], [ 0, %lor.rhs54 ], [ %phitmp3, %land.rhs62 ]
  br label %return, !dbg !9175

return:                                           ; preds = %cleanup, %entry, %lor.end71, %lor.end
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ %18, %lor.end71 ], [ %11, %lor.end ], [ 0, %entry ], !dbg !9152
  ret i32 %retval.1, !dbg !9176
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_int_cst_sgn(%union.tree_node* %t) local_unnamed_addr #5 !dbg !9177 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !9179, metadata !DIExpression()), !dbg !9180
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9181
  %low = bitcast i32* %int_cst1 to i64*, !dbg !9181
  %0 = load i64, i64* %low, align 8, !dbg !9181
  %cmp = icmp eq i64 %0, 0, !dbg !9183
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9184

land.lhs.true:                                    ; preds = %entry
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !9185
  %1 = bitcast i32* %high to i64*, !dbg !9185
  %2 = load i64, i64* %1, align 8, !dbg !9185
  %cmp4 = icmp eq i64 %2, 0, !dbg !9186
  br i1 %cmp4, label %return, label %if.else, !dbg !9187

if.else:                                          ; preds = %land.lhs.true, %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9188
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !9188
  %4 = load i64*, i64** %3, align 8, !dbg !9188
  %bf.load = load i64, i64* %4, align 8, !dbg !9188
  %bf.cast1 = and i64 %bf.load, 2097152, !dbg !9188
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !9188
  br i1 %tobool, label %if.else6, label %return, !dbg !9190

if.else6:                                         ; preds = %if.else
  %high9 = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !9191
  %5 = bitcast i32* %high9 to i64*, !dbg !9191
  %6 = load i64, i64* %5, align 8, !dbg !9191
  %cmp10 = icmp slt i64 %6, 0, !dbg !9193
  %. = select i1 %cmp10, i32 -1, i32 1, !dbg !9194
  br label %return, !dbg !9194

return:                                           ; preds = %if.else, %if.else6, %land.lhs.true
  %retval.0 = phi i32 [ 0, %land.lhs.true ], [ 1, %if.else ], [ %., %if.else6 ], !dbg !9195
  ret i32 %retval.0, !dbg !9196
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_int_cst_compare(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !9197 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !9199, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !9200, metadata !DIExpression()), !dbg !9201
  %call = tail call i32 @tree_int_cst_lt(%union.tree_node* %t1, %union.tree_node* %t2) #8, !dbg !9202
  %tobool = icmp eq i32 %call, 0, !dbg !9202
  br i1 %tobool, label %if.else, label %return, !dbg !9204

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @tree_int_cst_lt(%union.tree_node* %t2, %union.tree_node* %t1) #8, !dbg !9205
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9205
  %. = zext i1 %tobool2 to i32, !dbg !9207
  br label %return, !dbg !9207

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi i32 [ -1, %entry ], [ %., %if.else ], !dbg !9208
  ret i32 %retval.0, !dbg !9209
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_int_cst_msb(%union.tree_node* %t) local_unnamed_addr #5 !dbg !9210 {
entry:
  %h = alloca i64, align 8
  %l = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !9212, metadata !DIExpression()), !dbg !9216
  %0 = bitcast i64* %h to i8*, !dbg !9217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9217
  %1 = bitcast i64* %l to i8*, !dbg !9218
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !9218
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9219
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !9219
  %3 = load i64*, i64** %2, align 8, !dbg !9219
  %bf.load = load i64, i64* %3, align 8, !dbg !9219
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9219
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !9219
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9219

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %3 to %union.tree_node*, !dbg !9219
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !9219
  br label %cond.end, !dbg !9219

cond.false:                                       ; preds = %entry
  %type5 = bitcast i64* %3 to %struct.tree_type*, !dbg !9219
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i64 0, i32 6, !dbg !9219
  %bf.load6 = load i32, i32* %mode, align 4, !dbg !9219
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !9219
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !9219
  br label %cond.end, !dbg !9219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear7, %cond.false ], !dbg !9219
  %idxprom = zext i32 %cond to i64, !dbg !9219
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9219
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9219
  %conv8 = zext i8 %4 to i32, !dbg !9219
  %mul = shl nuw nsw i32 %conv8, 3, !dbg !9219
  %sub = add nsw i32 %mul, -1, !dbg !9220
  call void @llvm.dbg.value(metadata i32 %sub, metadata !9213, metadata !DIExpression()), !dbg !9216
  %int_cst11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9221
  %low = bitcast i32* %int_cst11 to i64*, !dbg !9221
  %5 = load i64, i64* %low, align 8, !dbg !9221
  %high = getelementptr inbounds i32, i32* %int_cst11, i64 2, !dbg !9222
  %6 = bitcast i32* %high to i64*, !dbg !9222
  %7 = load i64, i64* %6, align 8, !dbg !9222
  %conv14 = sext i32 %sub to i64, !dbg !9223
  call void @llvm.dbg.value(metadata i64* %h, metadata !9214, metadata !DIExpression(DW_OP_deref)), !dbg !9216
  call void @llvm.dbg.value(metadata i64* %l, metadata !9215, metadata !DIExpression(DW_OP_deref)), !dbg !9216
  call void @rshift_double(i64 %5, i64 %7, i64 %conv14, i32 128, i64* nonnull %l, i64* nonnull %h, i32 0) #7, !dbg !9224
  %8 = load i64, i64* %l, align 8, !dbg !9225
  call void @llvm.dbg.value(metadata i64 %8, metadata !9215, metadata !DIExpression()), !dbg !9216
  %9 = trunc i64 %8 to i32, !dbg !9226
  %10 = and i32 %9, 1, !dbg !9226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !9227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9227
  ret i32 %10, !dbg !9228
}

declare dso_local void @rshift_double(i64, i64, i64, i32, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_int_cst_min_precision(%union.tree_node* %value, i8 zeroext %unsignedp) local_unnamed_addr #5 !dbg !9229 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !9233, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.value(metadata i8 %unsignedp, metadata !9234, metadata !DIExpression()), !dbg !9236
  %call = tail call i32 @tree_int_cst_sgn(%union.tree_node* %value) #8, !dbg !9237
  %cmp = icmp slt i32 %call, 0, !dbg !9239
  br i1 %cmp, label %if.then, label %if.end, !dbg !9240

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9241
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9241
  %call1 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 90, %union.tree_node* %0, %union.tree_node* %value) #7, !dbg !9241
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9233, metadata !DIExpression()), !dbg !9236
  br label %if.end, !dbg !9242

if.end:                                           ; preds = %if.then, %entry
  %value.addr.0 = phi %union.tree_node* [ %call1, %if.then ], [ %value, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0, metadata !9233, metadata !DIExpression()), !dbg !9236
  %call2 = tail call i32 @integer_zerop(%union.tree_node* %value.addr.0) #8, !dbg !9243
  %tobool = icmp eq i32 %call2, 0, !dbg !9243
  br i1 %tobool, label %if.else, label %if.end5, !dbg !9245

if.else:                                          ; preds = %if.end
  %call4 = tail call i32 @tree_floor_log2(%union.tree_node* %value.addr.0) #8, !dbg !9246
  call void @llvm.dbg.value(metadata i32 %call4, metadata !9235, metadata !DIExpression()), !dbg !9236
  %phitmp = add i32 %call4, 1
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.else
  %log.0 = phi i32 [ %phitmp, %if.else ], [ 1, %if.end ]
  %tobool6 = icmp eq i8 %unsignedp, 0, !dbg !9247
  %lnot.ext = zext i1 %tobool6 to i32, !dbg !9247
  %add7 = add nsw i32 %log.0, %lnot.ext, !dbg !9248
  ret i32 %add7, !dbg !9249
}

declare dso_local zeroext i8 @real_identical(%struct.real_value*, %struct.real_value*) local_unnamed_addr #2

declare dso_local zeroext i8 @fixed_identical(%struct.fixed_value*, %struct.fixed_value*) local_unnamed_addr #2

declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @compare_tree_int(%union.tree_node* %t, i64 %u) local_unnamed_addr #5 !dbg !9250 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !9254, metadata !DIExpression()), !dbg !9256
  call void @llvm.dbg.value(metadata i64 %u, metadata !9255, metadata !DIExpression()), !dbg !9256
  %call = tail call i32 @tree_int_cst_sgn(%union.tree_node* %t) #8, !dbg !9257
  %cmp = icmp slt i32 %call, 0, !dbg !9259
  br i1 %cmp, label %return, label %if.else, !dbg !9260

if.else:                                          ; preds = %entry
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9261
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !9261
  %0 = bitcast i32* %high to i64*, !dbg !9261
  %1 = load i64, i64* %0, align 8, !dbg !9261
  %cmp2 = icmp eq i64 %1, 0, !dbg !9263
  br i1 %cmp2, label %if.else4, label %return, !dbg !9264

if.else4:                                         ; preds = %if.else
  %low = bitcast i32* %int_cst1 to i64*, !dbg !9265
  %2 = load i64, i64* %low, align 8, !dbg !9265
  %cmp7 = icmp eq i64 %2, %u, !dbg !9267
  br i1 %cmp7, label %return, label %if.else9, !dbg !9268

if.else9:                                         ; preds = %if.else4
  %cmp13 = icmp ult i64 %2, %u, !dbg !9269
  %. = select i1 %cmp13, i32 -1, i32 1, !dbg !9271
  br label %return, !dbg !9271

return:                                           ; preds = %if.else, %if.else9, %if.else4, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ 1, %if.else ], [ 0, %if.else4 ], [ %., %if.else9 ], !dbg !9272
  ret i32 %retval.0, !dbg !9273
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @associative_tree_code(i32 %code) local_unnamed_addr #5 !dbg !9274 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !9278, metadata !DIExpression()), !dbg !9279
  switch i32 %code, label %sw.epilog [
    i32 87, label %return
    i32 89, label %return
    i32 88, label %return
    i32 63, label %return
    i32 65, label %return
    i32 80, label %return
    i32 81, label %return
  ], !dbg !9280

sw.epilog:                                        ; preds = %entry
  br label %return, !dbg !9281

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.epilog
  %retval.0 = phi i8 [ 0, %sw.epilog ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !9279
  ret i8 %retval.0, !dbg !9282
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @commutative_tree_code(i32 %code) local_unnamed_addr #5 !dbg !9283 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !9285, metadata !DIExpression()), !dbg !9286
  switch i32 %code, label %sw.epilog [
    i32 63, label %return
    i32 65, label %return
    i32 80, label %return
    i32 81, label %return
    i32 87, label %return
    i32 88, label %return
    i32 89, label %return
    i32 102, label %return
    i32 101, label %return
    i32 103, label %return
    i32 104, label %return
    i32 109, label %return
    i32 110, label %return
    i32 93, label %return
    i32 95, label %return
    i32 94, label %return
  ], !dbg !9287

sw.epilog:                                        ; preds = %entry
  br label %return, !dbg !9288

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.epilog
  %retval.0 = phi i8 [ 0, %sw.epilog ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !9286
  ret i8 %retval.0, !dbg !9289
}

; Function Attrs: nounwind uwtable
define dso_local i32 @iterative_hash_expr(%union.tree_node* %t, i32 %val) local_unnamed_addr #5 !dbg !9290 {
entry:
  %code = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !9294, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %val, metadata !9295, metadata !DIExpression()), !dbg !9316
  %0 = bitcast i32* %code to i8*, !dbg !9317
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !9317
  %cmp = icmp eq %union.tree_node* %t, null, !dbg !9318
  br i1 %cmp, label %if.then, label %if.end, !dbg !9320

if.then:                                          ; preds = %entry
  %call = tail call i32 @iterative_hash_hashval_t(i32 0, i32 %val) #8, !dbg !9321
  br label %cleanup, !dbg !9322

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9323
  %bf.load = load i64, i64* %1, align 8, !dbg !9323
  %2 = trunc i64 %bf.load to i32, !dbg !9323
  %bf.cast = and i32 %2, 65535, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !9297, metadata !DIExpression()), !dbg !9316
  store i32 %bf.cast, i32* %code, align 4, !dbg !9324
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !9297, metadata !DIExpression()), !dbg !9316
  %trunc = trunc i64 %bf.load to i16, !dbg !9325
  switch i16 %trunc, label %sw.default [
    i16 23, label %sw.bb
    i16 24, label %sw.bb6
    i16 25, label %sw.bb9
    i16 28, label %sw.bb13
    i16 26, label %sw.bb16
    i16 27, label %sw.bb20
    i16 141, label %sw.bb22
    i16 2, label %for.cond.preheader
    i16 51, label %for.cond29.preheader
    i16 29, label %sw.bb73
  ], !dbg !9325

for.cond29.preheader:                             ; preds = %if.end
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9326
  %3 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !9326
  br label %for.cond29, !dbg !9329

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !9330

sw.bb:                                            ; preds = %if.end
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9332
  %low = bitcast i32* %int_cst1 to i64*, !dbg !9332
  %4 = load i64, i64* %low, align 8, !dbg !9332
  %call2 = tail call i32 @iterative_hash_host_wide_int(i64 %4, i32 %val) #8, !dbg !9333
  call void @llvm.dbg.value(metadata i32 %call2, metadata !9295, metadata !DIExpression()), !dbg !9316
  %high = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !9334
  %5 = bitcast i32* %high to i64*, !dbg !9334
  %6 = load i64, i64* %5, align 8, !dbg !9334
  %call5 = tail call i32 @iterative_hash_host_wide_int(i64 %6, i32 %call2) #8, !dbg !9335
  br label %cleanup, !dbg !9336

sw.bb6:                                           ; preds = %if.end
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9337
  %7 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !9337
  %8 = load %struct.real_value*, %struct.real_value** %7, align 8, !dbg !9337
  %call7 = tail call i32 @real_hash(%struct.real_value* %8) #7, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %call7, metadata !9299, metadata !DIExpression()), !dbg !9339
  %call8 = tail call i32 @iterative_hash_hashval_t(i32 %call7, i32 %val) #8, !dbg !9340
  br label %cleanup

sw.bb9:                                           ; preds = %if.end
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9341
  %9 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !9341
  %10 = load %struct.fixed_value*, %struct.fixed_value** %9, align 8, !dbg !9341
  %call11 = tail call i32 @fixed_hash(%struct.fixed_value* %10) #7, !dbg !9342
  call void @llvm.dbg.value(metadata i32 %call11, metadata !9302, metadata !DIExpression()), !dbg !9343
  %call12 = tail call i32 @iterative_hash_hashval_t(i32 %call11, i32 %val) #8, !dbg !9344
  br label %cleanup

sw.bb13:                                          ; preds = %if.end
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9345
  %arraydecay = bitcast i32* %str to i8*, !dbg !9345
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9346
  %12 = load i32, i32* %11, align 8, !dbg !9346
  %conv = sext i32 %12 to i64, !dbg !9346
  %call15 = tail call i32 @iterative_hash(i8* nonnull %arraydecay, i64 %conv, i32 %val) #7, !dbg !9347
  br label %cleanup, !dbg !9348

sw.bb16:                                          ; preds = %if.end
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9349
  %13 = bitcast i32* %real to %union.tree_node**, !dbg !9349
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !9349
  %call17 = tail call i32 @iterative_hash_expr(%union.tree_node* %14, i32 %val) #8, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %call17, metadata !9295, metadata !DIExpression()), !dbg !9316
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9351
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !9351
  %call19 = tail call i32 @iterative_hash_expr(%union.tree_node* %16, i32 %call17) #8, !dbg !9352
  br label %cleanup, !dbg !9353

sw.bb20:                                          ; preds = %if.end
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9354
  %17 = bitcast i32* %elements to %union.tree_node**, !dbg !9354
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !9354
  %call21 = tail call i32 @iterative_hash_expr(%union.tree_node* %18, i32 %val) #8, !dbg !9355
  br label %cleanup, !dbg !9356

sw.bb22:                                          ; preds = %if.end
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9357
  %19 = bitcast %union.tree_node** %version to i32*, !dbg !9357
  %20 = load i32, i32* %19, align 8, !dbg !9357
  %conv23 = zext i32 %20 to i64, !dbg !9357
  %call24 = tail call i32 @iterative_hash_host_wide_int(i64 %conv23, i32 %val) #8, !dbg !9358
  br label %cleanup, !dbg !9359

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %val.addr.0 = phi i32 [ %call26, %for.body ], [ %val, %for.cond.preheader ]
  %t.addr.0 = phi %union.tree_node* [ %23, %for.body ], [ %t, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !9294, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %val.addr.0, metadata !9295, metadata !DIExpression()), !dbg !9316
  %tobool = icmp eq %union.tree_node* %t.addr.0, null, !dbg !9330
  br i1 %tobool, label %cleanup.loopexit4, label %for.body, !dbg !9330

for.body:                                         ; preds = %for.cond
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9360
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !9360
  %call26 = tail call i32 @iterative_hash_expr(%union.tree_node* %22, i32 %val.addr.0) #8, !dbg !9362
  call void @llvm.dbg.value(metadata i32 %call26, metadata !9295, metadata !DIExpression()), !dbg !9316
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9363
  %23 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !9363
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !9294, metadata !DIExpression()), !dbg !9316
  br label %for.cond, !dbg !9364, !llvm.loop !9365

for.cond29:                                       ; preds = %for.cond29.preheader, %for.body68
  %field.0 = phi %union.tree_node* [ %field.1, %for.body68 ], [ undef, %for.cond29.preheader ]
  %idx.0 = phi i64 [ %inc, %for.body68 ], [ 0, %for.cond29.preheader ], !dbg !9367
  %value28.0 = phi %union.tree_node* [ %value28.1, %for.body68 ], [ undef, %for.cond29.preheader ]
  %val.addr.1 = phi i32 [ %call70, %for.body68 ], [ %val, %for.cond29.preheader ]
  call void @llvm.dbg.value(metadata i32 %val.addr.1, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata %union.tree_node* %value28.0, metadata !9307, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !9304, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !9306, metadata !DIExpression()), !dbg !9368
  %24 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %3, align 8, !dbg !9369
  %tobool30 = icmp eq %struct.VEC_constructor_elt_gc* %24, null, !dbg !9369
  br i1 %tobool30, label %cond.end, label %cond.true, !dbg !9369

cond.true:                                        ; preds = %for.cond29
  %base33 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %24, i64 0, i32 0, !dbg !9369
  br label %cond.end, !dbg !9369

cond.end:                                         ; preds = %for.cond29, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base33, %cond.true ], [ null, %for.cond29 ], !dbg !9369
  %call34 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !9369
  %conv35 = zext i32 %call34 to i64, !dbg !9369
  %cmp36 = icmp ult i64 %idx.0, %conv35, !dbg !9369
  br i1 %cmp36, label %cond.false39, label %cond.end65, !dbg !9369

cond.false39:                                     ; preds = %cond.end
  %25 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %3, align 8, !dbg !9369
  %tobool42 = icmp eq %struct.VEC_constructor_elt_gc* %25, null, !dbg !9369
  br i1 %tobool42, label %cond.end48, label %cond.true43, !dbg !9369

cond.true43:                                      ; preds = %cond.false39
  %base46 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %25, i64 0, i32 0, !dbg !9369
  br label %cond.end48, !dbg !9369

cond.end48:                                       ; preds = %cond.false39, %cond.true43
  %cond49 = phi %struct.VEC_constructor_elt_base* [ %base46, %cond.true43 ], [ null, %cond.false39 ], !dbg !9369
  %conv50 = trunc i64 %idx.0 to i32, !dbg !9369
  %call51 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond49, i32 %conv50) #8, !dbg !9369
  %value52 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call51, i64 0, i32 1, !dbg !9369
  %26 = load %union.tree_node*, %union.tree_node** %value52, align 8, !dbg !9369
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !9307, metadata !DIExpression()), !dbg !9368
  %27 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %3, align 8, !dbg !9369
  %tobool55 = icmp eq %struct.VEC_constructor_elt_gc* %27, null, !dbg !9369
  br i1 %tobool55, label %cond.end61, label %cond.true56, !dbg !9369

cond.true56:                                      ; preds = %cond.end48
  %base59 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %27, i64 0, i32 0, !dbg !9369
  br label %cond.end61, !dbg !9369

cond.end61:                                       ; preds = %cond.end48, %cond.true56
  %cond62 = phi %struct.VEC_constructor_elt_base* [ %base59, %cond.true56 ], [ null, %cond.end48 ], !dbg !9369
  %call64 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond62, i32 %conv50) #8, !dbg !9369
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call64, i64 0, i32 0, !dbg !9369
  %28 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !9369
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !9306, metadata !DIExpression()), !dbg !9368
  br label %cond.end65, !dbg !9369

cond.end65:                                       ; preds = %cond.end, %cond.end61
  %field.1 = phi %union.tree_node* [ %28, %cond.end61 ], [ %field.0, %cond.end ]
  %value28.1 = phi %union.tree_node* [ %26, %cond.end61 ], [ %value28.0, %cond.end ]
  %cond66 = phi i1 [ true, %cond.end61 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value28.1, metadata !9307, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1, metadata !9306, metadata !DIExpression()), !dbg !9368
  br i1 %cond66, label %for.body68, label %cleanup.loopexit5, !dbg !9329

for.body68:                                       ; preds = %cond.end65
  %call69 = tail call i32 @iterative_hash_expr(%union.tree_node* %field.1, i32 %val.addr.1) #8, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %call69, metadata !9295, metadata !DIExpression()), !dbg !9316
  %call70 = tail call i32 @iterative_hash_expr(%union.tree_node* %value28.1, i32 %call69) #8, !dbg !9372
  call void @llvm.dbg.value(metadata i32 %call70, metadata !9295, metadata !DIExpression()), !dbg !9316
  %inc = add i64 %idx.0, 1, !dbg !9369
  call void @llvm.dbg.value(metadata i64 %inc, metadata !9304, metadata !DIExpression()), !dbg !9368
  br label %for.cond29, !dbg !9369, !llvm.loop !9373

sw.bb73:                                          ; preds = %if.end
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 5, !dbg !9375
  %bf.load74 = load i32, i32* %built_in_class, align 8, !dbg !9375
  %bf.clear75 = and i32 %bf.load74, 6144, !dbg !9375
  %cmp76 = icmp eq i32 %bf.clear75, 6144, !dbg !9377
  br i1 %cmp76, label %land.lhs.true, label %sw.default, !dbg !9378

land.lhs.true:                                    ; preds = %sw.bb73
  %bf.clear80 = and i32 %bf.load74, 2047, !dbg !9379
  %idxprom = zext i32 %bf.clear80 to i64, !dbg !9380
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %idxprom, !dbg !9380
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9380
  %tobool81 = icmp eq %union.tree_node* %29, null, !dbg !9380
  br i1 %tobool81, label %sw.default, label %if.then82, !dbg !9381

if.then82:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !9294, metadata !DIExpression()), !dbg !9316
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9382
  %bf.load90 = load i64, i64* %30, align 8, !dbg !9382
  %31 = trunc i64 %bf.load90 to i32, !dbg !9382
  %bf.cast92 = and i32 %31, 65535, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %bf.cast92, metadata !9297, metadata !DIExpression()), !dbg !9316
  store i32 %bf.cast92, i32* %code, align 4, !dbg !9384
  br label %sw.default, !dbg !9385

sw.default:                                       ; preds = %land.lhs.true, %sw.bb73, %if.then82, %if.end
  %32 = phi i32 [ %bf.cast, %if.end ], [ %bf.cast92, %if.then82 ], [ %bf.cast, %land.lhs.true ], [ %bf.cast, %sw.bb73 ], !dbg !9386
  %t.addr.2 = phi %union.tree_node* [ %t, %if.end ], [ %29, %if.then82 ], [ %t, %land.lhs.true ], [ %t, %sw.bb73 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.2, metadata !9294, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %32, metadata !9297, metadata !DIExpression()), !dbg !9316
  %idxprom94 = zext i32 %32 to i64, !dbg !9386
  call void @llvm.dbg.value(metadata i8 undef, metadata !9298, metadata !DIExpression()), !dbg !9316
  %33 = add nsw i64 %idxprom94, -29, !dbg !9387
  %cmp98 = icmp ult i64 %33, 12, !dbg !9387
  br i1 %cmp98, label %if.then100, label %if.else, !dbg !9388

if.then100:                                       ; preds = %sw.default
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9389
  %34 = load i32, i32* %uid, align 4, !dbg !9389
  %conv101 = zext i32 %34 to i64, !dbg !9389
  %call102 = tail call i32 @iterative_hash_host_wide_int(i64 %conv101, i32 %val) #8, !dbg !9391
  call void @llvm.dbg.value(metadata i32 %call102, metadata !9295, metadata !DIExpression()), !dbg !9316
  br label %cleanup, !dbg !9392

if.else:                                          ; preds = %sw.default
  %arrayidx95 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %idxprom94, !dbg !9386
  %35 = load i32, i32* %arrayidx95, align 4, !dbg !9386
  %36 = trunc i32 %35 to i8, !dbg !9393
  %.off = add i8 %36, -4, !dbg !9393
  %37 = icmp ult i8 %.off, 7, !dbg !9393
  br i1 %37, label %cond.end112, label %cond.true110, !dbg !9393

cond.true110:                                     ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 6628, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !9393
  br label %cond.end112, !dbg !9393

cond.end112:                                      ; preds = %if.else, %cond.true110
  %call114 = call i32 @iterative_hash(i8* nonnull %0, i64 4, i32 %val) #7, !dbg !9394
  call void @llvm.dbg.value(metadata i32 %call114, metadata !9295, metadata !DIExpression()), !dbg !9316
  %38 = load i32, i32* %code, align 4, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %38, metadata !9297, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %38, metadata !9297, metadata !DIExpression()), !dbg !9316
  %cmp117 = icmp eq i32 %38, 113, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %38, metadata !9297, metadata !DIExpression()), !dbg !9316
  %39 = or i32 %38, 1, !dbg !9395
  %40 = icmp eq i32 %39, 117, !dbg !9395
  %41 = or i1 %40, %cmp117, !dbg !9395
  br i1 %41, label %if.then122, label %if.else131, !dbg !9395

if.then122:                                       ; preds = %cond.end112
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9396
  %42 = bitcast %union.tree_node** %type to i64**, !dbg !9396
  %43 = load i64*, i64** %42, align 8, !dbg !9396
  %bf.load125 = load i64, i64* %43, align 8, !dbg !9396
  %bf.lshr126 = lshr i64 %bf.load125, 21, !dbg !9396
  %44 = trunc i64 %bf.lshr126 to i32, !dbg !9396
  %bf.cast128 = and i32 %44, 1, !dbg !9396
  %add = add i32 %call114, %bf.cast128, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %add, metadata !9295, metadata !DIExpression()), !dbg !9316
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9399
  %45 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9399
  %call130 = call i32 @iterative_hash_expr(%union.tree_node* %45, i32 %add) #8, !dbg !9400
  call void @llvm.dbg.value(metadata i32 %call130, metadata !9295, metadata !DIExpression()), !dbg !9316
  br label %cleanup, !dbg !9401

if.else131:                                       ; preds = %cond.end112
  call void @llvm.dbg.value(metadata i32 %38, metadata !9297, metadata !DIExpression()), !dbg !9316
  %call132 = call zeroext i8 @commutative_tree_code(i32 %38) #8, !dbg !9402
  %tobool133 = icmp eq i8 %call132, 0, !dbg !9402
  br i1 %tobool133, label %if.else150, label %if.then134, !dbg !9403

if.then134:                                       ; preds = %if.else131
  %operands136 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9404
  %46 = load %union.tree_node*, %union.tree_node** %operands136, align 8, !dbg !9404
  %call138 = call i32 @iterative_hash_expr(%union.tree_node* %46, i32 0) #8, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %call138, metadata !9308, metadata !DIExpression()), !dbg !9406
  %arrayidx141 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands136, i64 1, !dbg !9407
  %47 = load %union.tree_node*, %union.tree_node** %arrayidx141, align 8, !dbg !9407
  %call142 = call i32 @iterative_hash_expr(%union.tree_node* %47, i32 0) #8, !dbg !9408
  call void @llvm.dbg.value(metadata i32 %call142, metadata !9314, metadata !DIExpression()), !dbg !9406
  %cmp144 = icmp ugt i32 %call138, %call142, !dbg !9409
  %spec.select = select i1 %cmp144, i32 %call142, i32 %call138, !dbg !9411
  %spec.select3 = select i1 %cmp144, i32 %call138, i32 %call142, !dbg !9411
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !9314, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !9308, metadata !DIExpression()), !dbg !9406
  %call148 = call i32 @iterative_hash_hashval_t(i32 %spec.select, i32 %call114) #8, !dbg !9412
  call void @llvm.dbg.value(metadata i32 %call148, metadata !9295, metadata !DIExpression()), !dbg !9316
  %call149 = call i32 @iterative_hash_hashval_t(i32 %spec.select3, i32 %call148) #8, !dbg !9413
  call void @llvm.dbg.value(metadata i32 %call149, metadata !9295, metadata !DIExpression()), !dbg !9316
  br label %cleanup, !dbg !9414

if.else150:                                       ; preds = %if.else131
  %call151 = call fastcc i32 @tree_operand_length(%union.tree_node* %t.addr.2) #8, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %call151, metadata !9296, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9316
  %operands157 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9417
  %48 = sext i32 %call151 to i64, !dbg !9419
  br label %for.cond152, !dbg !9419

for.cond152:                                      ; preds = %for.body155, %if.else150
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body155 ], [ %48, %if.else150 ]
  %val.addr.2 = phi i32 [ %call160, %for.body155 ], [ %call114, %if.else150 ], !dbg !9420
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !9421
  call void @llvm.dbg.value(metadata i32 %val.addr.2, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 undef, metadata !9296, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9316
  %cmp153 = icmp sgt i64 %indvars.iv, 0, !dbg !9422
  br i1 %cmp153, label %for.body155, label %cleanup.loopexit, !dbg !9423

for.body155:                                      ; preds = %for.cond152
  %arrayidx159 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands157, i64 %indvars.iv.next, !dbg !9424
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx159, align 8, !dbg !9424
  %call160 = call i32 @iterative_hash_expr(%union.tree_node* %49, i32 %val.addr.2) #8, !dbg !9425
  call void @llvm.dbg.value(metadata i32 %call160, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 undef, metadata !9296, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9316
  br label %for.cond152, !dbg !9426, !llvm.loop !9427

cleanup.loopexit:                                 ; preds = %for.cond152
  %val.addr.2.lcssa = phi i32 [ %val.addr.2, %for.cond152 ], !dbg !9420
  call void @llvm.dbg.value(metadata i32 %val.addr.2.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %val.addr.2.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %val.addr.2.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  br label %cleanup, !dbg !9429

cleanup.loopexit4:                                ; preds = %for.cond
  %val.addr.0.lcssa = phi i32 [ %val.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata i32 %val.addr.0.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %val.addr.0.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %val.addr.0.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  br label %cleanup, !dbg !9429

cleanup.loopexit5:                                ; preds = %cond.end65
  %val.addr.1.lcssa = phi i32 [ %val.addr.1, %cond.end65 ]
  call void @llvm.dbg.value(metadata i32 %val.addr.1.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %val.addr.1.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %val.addr.1.lcssa, metadata !9295, metadata !DIExpression()), !dbg !9316
  br label %cleanup, !dbg !9429

cleanup:                                          ; preds = %cleanup.loopexit5, %cleanup.loopexit4, %cleanup.loopexit, %if.then100, %if.then134, %if.then122, %sw.bb22, %sw.bb20, %sw.bb16, %sw.bb13, %sw.bb9, %sw.bb6, %sw.bb, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call24, %sw.bb22 ], [ %call21, %sw.bb20 ], [ %call19, %sw.bb16 ], [ %call15, %sw.bb13 ], [ %call12, %sw.bb9 ], [ %call8, %sw.bb6 ], [ %call5, %sw.bb ], [ %call102, %if.then100 ], [ %call130, %if.then122 ], [ %call149, %if.then134 ], [ %val.addr.2.lcssa, %cleanup.loopexit ], [ %val.addr.0.lcssa, %cleanup.loopexit4 ], [ %val.addr.1.lcssa, %cleanup.loopexit5 ], !dbg !9316
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !9429
  ret i32 %retval.0, !dbg !9429
}

declare dso_local i32 @real_hash(%struct.real_value*) local_unnamed_addr #2

declare dso_local i32 @fixed_hash(%struct.fixed_value*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @iterative_hash_exprs_commutative(%union.tree_node* %t1, %union.tree_node* %t2, i32 %val) local_unnamed_addr #5 !dbg !9430 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !9434, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !9435, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata i32 %val, metadata !9436, metadata !DIExpression()), !dbg !9440
  %call = tail call i32 @iterative_hash_expr(%union.tree_node* %t1, i32 0) #8, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %call, metadata !9437, metadata !DIExpression()), !dbg !9440
  %call1 = tail call i32 @iterative_hash_expr(%union.tree_node* %t2, i32 0) #8, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %call1, metadata !9438, metadata !DIExpression()), !dbg !9440
  %cmp = icmp ugt i32 %call, %call1, !dbg !9443
  %spec.select = select i1 %cmp, i32 %call1, i32 %call, !dbg !9445
  %spec.select1 = select i1 %cmp, i32 %call, i32 %call1, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !9438, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !9437, metadata !DIExpression()), !dbg !9440
  %call2 = tail call i32 @iterative_hash_hashval_t(i32 %spec.select, i32 %val) #8, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %call2, metadata !9436, metadata !DIExpression()), !dbg !9440
  %call3 = tail call i32 @iterative_hash_hashval_t(i32 %spec.select1, i32 %call2) #8, !dbg !9447
  call void @llvm.dbg.value(metadata i32 %call3, metadata !9436, metadata !DIExpression()), !dbg !9440
  ret i32 %call3, !dbg !9448
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %to_type, i32 %mode, i8 zeroext %can_alias_all) local_unnamed_addr #5 !dbg !9449 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %to_type, metadata !9453, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9454, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i8 %can_alias_all, metadata !9455, metadata !DIExpression()), !dbg !9457
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9458
  %cmp = icmp eq %union.tree_node* %0, %to_type, !dbg !9460
  br i1 %cmp, label %if.then, label %if.end, !dbg !9461

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !9462

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9463
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !9463
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), %union.tree_node* %2) #8, !dbg !9465
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !9465
  %spec.select = select i1 %tobool, i8 %can_alias_all, i8 1, !dbg !9466
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !9455, metadata !DIExpression()), !dbg !9457
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9467
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !9467
  %cmp4 = icmp eq %union.tree_node* %4, null, !dbg !9469
  br i1 %cmp4, label %if.end11, label %land.lhs.true, !dbg !9470

land.lhs.true:                                    ; preds = %if.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9470
  %bf.load = load i64, i64* %5, align 8, !dbg !9471
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9472
  %cmp7 = icmp eq i64 %bf.cast2, 10, !dbg !9472
  br i1 %cmp7, label %if.end11, label %if.then8, !dbg !9473

if.then8:                                         ; preds = %land.lhs.true
  br label %cleanup, !dbg !9474

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %conv = zext i8 %spec.select to i32, !dbg !9475
  br label %for.cond, !dbg !9479

for.cond:                                         ; preds = %for.inc, %if.end11
  %t.0 = phi %union.tree_node* [ %4, %if.end11 ], [ %t.0.pre, %for.inc ], !dbg !9480
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !9456, metadata !DIExpression()), !dbg !9457
  %tobool14 = icmp eq %union.tree_node* %t.0, null, !dbg !9481
  br i1 %tobool14, label %for.end, label %for.body, !dbg !9481

for.body:                                         ; preds = %for.cond
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9482
  %bf.load16 = load i64, i64* %6, align 8, !dbg !9482
  %bf.cast181 = and i64 %bf.load16, 65535, !dbg !9482
  %cmp19 = icmp eq i64 %bf.cast181, 14, !dbg !9482
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !9482

cond.true:                                        ; preds = %for.body
  %call20 = tail call i32 @vector_type_mode(%union.tree_node* nonnull %t.0) #7, !dbg !9482
  br label %cond.end, !dbg !9482

cond.false:                                       ; preds = %for.body
  %type21 = bitcast %union.tree_node* %t.0 to %struct.tree_type*, !dbg !9482
  %mode22 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i64 0, i32 6, !dbg !9482
  %bf.load23 = load i32, i32* %mode22, align 4, !dbg !9482
  %bf.lshr = lshr i32 %bf.load23, 16, !dbg !9482
  %bf.clear24 = and i32 %bf.lshr, 255, !dbg !9482
  br label %cond.end, !dbg !9482

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call20, %cond.true ], [ %bf.clear24, %cond.false ], !dbg !9482
  %cmp25 = icmp eq i32 %cond, %mode, !dbg !9483
  br i1 %cmp25, label %land.lhs.true26, label %for.inc, !dbg !9484

land.lhs.true26:                                  ; preds = %cond.end
  %bf.load28 = load i64, i64* %6, align 8, !dbg !9485
  %bf.lshr29 = lshr i64 %bf.load28, 26, !dbg !9485
  %7 = trunc i64 %bf.lshr29 to i32, !dbg !9485
  %bf.cast31 = and i32 %7, 1, !dbg !9485
  %cmp32 = icmp eq i32 %bf.cast31, %conv, !dbg !9486
  br i1 %cmp32, label %cleanup.loopexit, label %for.inc, !dbg !9487

for.inc:                                          ; preds = %cond.end, %land.lhs.true26
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9488
  %8 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !9488
  %t.0.pre = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !9480
  br label %for.cond, !dbg !9489, !llvm.loop !9490

for.end:                                          ; preds = %for.cond
  %call37 = tail call %union.tree_node* @make_node_stat(i32 10) #8, !dbg !9492
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !9456, metadata !DIExpression()), !dbg !9457
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9493
  store %union.tree_node* %to_type, %union.tree_node** %type38, align 8, !dbg !9494
  %type39 = bitcast %union.tree_node* %call37 to %struct.tree_type*, !dbg !9495
  %mode40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type39, i64 0, i32 6, !dbg !9495
  %bf.load41 = load i32, i32* %mode40, align 4, !dbg !9495
  %bf.value = shl i32 %mode, 16, !dbg !9495
  %bf.shl = and i32 %bf.value, 16711680, !dbg !9495
  %bf.clear42 = and i32 %bf.load41, -16711681, !dbg !9495
  %bf.set = or i32 %bf.clear42, %bf.shl, !dbg !9495
  store i32 %bf.set, i32* %mode40, align 4, !dbg !9495
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9496
  %bf.load45 = load i64, i64* %9, align 8, !dbg !9497
  %10 = and i8 %spec.select, 1, !dbg !9497
  %bf.value46 = zext i8 %10 to i64, !dbg !9497
  %bf.shl47 = shl nuw nsw i64 %bf.value46, 26, !dbg !9497
  %bf.clear48 = and i64 %bf.load45, -67108865, !dbg !9497
  %bf.set49 = or i64 %bf.clear48, %bf.shl47, !dbg !9497
  store i64 %bf.set49, i64* %9, align 8, !dbg !9497
  %11 = bitcast %union.tree_node** %3 to i64*, !dbg !9498
  %12 = load i64, i64* %11, align 8, !dbg !9498
  %minval53 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9499
  %13 = bitcast %struct.lang_decl** %minval53 to i64*, !dbg !9500
  store i64 %12, i64* %13, align 8, !dbg !9500
  store %union.tree_node* %call37, %union.tree_node** %3, align 8, !dbg !9501
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_type, i64 0, i32 0, i32 0, i32 1, !dbg !9502
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !9502
  %cmp57 = icmp eq %union.tree_node* %15, null, !dbg !9502
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !9504

if.then59:                                        ; preds = %for.end
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 1, !dbg !9505
  store %union.tree_node* null, %union.tree_node** %16, align 8, !dbg !9505
  br label %if.end73, !dbg !9505

if.else:                                          ; preds = %for.end
  %cmp64 = icmp eq %union.tree_node* %15, %to_type, !dbg !9506
  br i1 %cmp64, label %if.end73, label %if.then66, !dbg !9508

if.then66:                                        ; preds = %if.else
  %call69 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* nonnull %15, i32 %mode, i8 zeroext %spec.select) #8, !dbg !9509
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 1, !dbg !9510
  store %union.tree_node* %call69, %union.tree_node** %17, align 8, !dbg !9511
  br label %if.end73, !dbg !9510

if.end73:                                         ; preds = %if.else, %if.then66, %if.then59
  tail call void @layout_type(%union.tree_node* %call37) #7, !dbg !9512
  br label %cleanup, !dbg !9513

cleanup.loopexit:                                 ; preds = %land.lhs.true26
  %t.0.lcssa6 = phi %union.tree_node* [ %t.0, %land.lhs.true26 ], !dbg !9480
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa6, metadata !9456, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa6, metadata !9456, metadata !DIExpression()), !dbg !9457
  br label %cleanup, !dbg !9514

cleanup:                                          ; preds = %cleanup.loopexit, %if.end73, %if.then8, %if.then
  %retval.0 = phi %union.tree_node* [ %to_type, %if.then ], [ %4, %if.then8 ], [ %call37, %if.end73 ], [ %t.0.lcssa6, %cleanup.loopexit ], !dbg !9457
  ret %union.tree_node* %retval.0, !dbg !9514
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_pointer_type(%union.tree_node* %to_type) local_unnamed_addr #5 !dbg !9515 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %to_type, metadata !9517, metadata !DIExpression()), !dbg !9521
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9522
  %cmp = icmp eq %union.tree_node* %0, %to_type, !dbg !9523
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !9524

cond.false:                                       ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9525
  %bf.load = load i64, i64* %1, align 8, !dbg !9525
  %bf.lshr = lshr i64 %bf.load, 56, !dbg !9525
  %phitmp = trunc i64 %bf.lshr to i8, !dbg !9524
  br label %cond.end, !dbg !9524

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %phitmp, %cond.false ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i8 %cond, metadata !9518, metadata !DIExpression()), !dbg !9521
  %2 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 0), align 8, !dbg !9526
  %call = tail call i32 %2(i8 zeroext %cond) #7, !dbg !9527
  call void @llvm.dbg.value(metadata i32 %call, metadata !9520, metadata !DIExpression()), !dbg !9521
  %call1 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %to_type, i32 %call, i8 zeroext 0) #8, !dbg !9528
  ret %union.tree_node* %call1, !dbg !9529
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_reference_type_for_mode(%union.tree_node* %to_type, i32 %mode, i8 zeroext %can_alias_all) local_unnamed_addr #5 !dbg !9530 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %to_type, metadata !9532, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9533, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i8 %can_alias_all, metadata !9534, metadata !DIExpression()), !dbg !9536
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9537
  %cmp = icmp eq %union.tree_node* %0, %to_type, !dbg !9539
  br i1 %cmp, label %if.then, label %if.end, !dbg !9540

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !9541

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9542
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !9542
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.223, i64 0, i64 0), %union.tree_node* %2) #8, !dbg !9544
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !9544
  %spec.select = select i1 %tobool, i8 %can_alias_all, i8 1, !dbg !9545
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !9534, metadata !DIExpression()), !dbg !9536
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !9546
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !9546
  %cmp4 = icmp eq %union.tree_node* %4, null, !dbg !9548
  br i1 %cmp4, label %if.end11, label %land.lhs.true, !dbg !9549

land.lhs.true:                                    ; preds = %if.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9549
  %bf.load = load i64, i64* %5, align 8, !dbg !9550
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9551
  %cmp7 = icmp eq i64 %bf.cast2, 12, !dbg !9551
  br i1 %cmp7, label %if.end11, label %if.then8, !dbg !9552

if.then8:                                         ; preds = %land.lhs.true
  br label %cleanup, !dbg !9553

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %conv = zext i8 %spec.select to i32, !dbg !9554
  br label %for.cond, !dbg !9558

for.cond:                                         ; preds = %for.inc, %if.end11
  %t.0 = phi %union.tree_node* [ %4, %if.end11 ], [ %t.0.pre, %for.inc ], !dbg !9559
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !9535, metadata !DIExpression()), !dbg !9536
  %tobool14 = icmp eq %union.tree_node* %t.0, null, !dbg !9560
  br i1 %tobool14, label %for.end, label %for.body, !dbg !9560

for.body:                                         ; preds = %for.cond
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9561
  %bf.load16 = load i64, i64* %6, align 8, !dbg !9561
  %bf.cast181 = and i64 %bf.load16, 65535, !dbg !9561
  %cmp19 = icmp eq i64 %bf.cast181, 14, !dbg !9561
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !9561

cond.true:                                        ; preds = %for.body
  %call20 = tail call i32 @vector_type_mode(%union.tree_node* nonnull %t.0) #7, !dbg !9561
  br label %cond.end, !dbg !9561

cond.false:                                       ; preds = %for.body
  %type21 = bitcast %union.tree_node* %t.0 to %struct.tree_type*, !dbg !9561
  %mode22 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i64 0, i32 6, !dbg !9561
  %bf.load23 = load i32, i32* %mode22, align 4, !dbg !9561
  %bf.lshr = lshr i32 %bf.load23, 16, !dbg !9561
  %bf.clear24 = and i32 %bf.lshr, 255, !dbg !9561
  br label %cond.end, !dbg !9561

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call20, %cond.true ], [ %bf.clear24, %cond.false ], !dbg !9561
  %cmp25 = icmp eq i32 %cond, %mode, !dbg !9562
  br i1 %cmp25, label %land.lhs.true26, label %for.inc, !dbg !9563

land.lhs.true26:                                  ; preds = %cond.end
  %bf.load28 = load i64, i64* %6, align 8, !dbg !9564
  %bf.lshr29 = lshr i64 %bf.load28, 26, !dbg !9564
  %7 = trunc i64 %bf.lshr29 to i32, !dbg !9564
  %bf.cast31 = and i32 %7, 1, !dbg !9564
  %cmp32 = icmp eq i32 %bf.cast31, %conv, !dbg !9565
  br i1 %cmp32, label %cleanup.loopexit, label %for.inc, !dbg !9566

for.inc:                                          ; preds = %cond.end, %land.lhs.true26
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9567
  %8 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !9567
  %t.0.pre = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !9559
  br label %for.cond, !dbg !9568, !llvm.loop !9569

for.end:                                          ; preds = %for.cond
  %call37 = tail call %union.tree_node* @make_node_stat(i32 12) #8, !dbg !9571
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !9535, metadata !DIExpression()), !dbg !9536
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9572
  store %union.tree_node* %to_type, %union.tree_node** %type38, align 8, !dbg !9573
  %type39 = bitcast %union.tree_node* %call37 to %struct.tree_type*, !dbg !9574
  %mode40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type39, i64 0, i32 6, !dbg !9574
  %bf.load41 = load i32, i32* %mode40, align 4, !dbg !9574
  %bf.value = shl i32 %mode, 16, !dbg !9574
  %bf.shl = and i32 %bf.value, 16711680, !dbg !9574
  %bf.clear42 = and i32 %bf.load41, -16711681, !dbg !9574
  %bf.set = or i32 %bf.clear42, %bf.shl, !dbg !9574
  store i32 %bf.set, i32* %mode40, align 4, !dbg !9574
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9575
  %bf.load45 = load i64, i64* %9, align 8, !dbg !9576
  %10 = and i8 %spec.select, 1, !dbg !9576
  %bf.value46 = zext i8 %10 to i64, !dbg !9576
  %bf.shl47 = shl nuw nsw i64 %bf.value46, 26, !dbg !9576
  %bf.clear48 = and i64 %bf.load45, -67108865, !dbg !9576
  %bf.set49 = or i64 %bf.clear48, %bf.shl47, !dbg !9576
  store i64 %bf.set49, i64* %9, align 8, !dbg !9576
  %11 = bitcast %union.tree_node** %3 to i64*, !dbg !9577
  %12 = load i64, i64* %11, align 8, !dbg !9577
  %minval53 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9578
  %13 = bitcast %struct.lang_decl** %minval53 to i64*, !dbg !9579
  store i64 %12, i64* %13, align 8, !dbg !9579
  store %union.tree_node* %call37, %union.tree_node** %3, align 8, !dbg !9580
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_type, i64 0, i32 0, i32 0, i32 1, !dbg !9581
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !9581
  %cmp57 = icmp eq %union.tree_node* %15, null, !dbg !9581
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !9583

if.then59:                                        ; preds = %for.end
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 1, !dbg !9584
  store %union.tree_node* null, %union.tree_node** %16, align 8, !dbg !9584
  br label %if.end73, !dbg !9584

if.else:                                          ; preds = %for.end
  %cmp64 = icmp eq %union.tree_node* %15, %to_type, !dbg !9585
  br i1 %cmp64, label %if.end73, label %if.then66, !dbg !9587

if.then66:                                        ; preds = %if.else
  %call69 = tail call %union.tree_node* @build_reference_type_for_mode(%union.tree_node* nonnull %15, i32 %mode, i8 zeroext %spec.select) #8, !dbg !9588
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 1, !dbg !9589
  store %union.tree_node* %call69, %union.tree_node** %17, align 8, !dbg !9590
  br label %if.end73, !dbg !9589

if.end73:                                         ; preds = %if.else, %if.then66, %if.then59
  tail call void @layout_type(%union.tree_node* %call37) #7, !dbg !9591
  br label %cleanup, !dbg !9592

cleanup.loopexit:                                 ; preds = %land.lhs.true26
  %t.0.lcssa6 = phi %union.tree_node* [ %t.0, %land.lhs.true26 ], !dbg !9559
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa6, metadata !9535, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa6, metadata !9535, metadata !DIExpression()), !dbg !9536
  br label %cleanup, !dbg !9593

cleanup:                                          ; preds = %cleanup.loopexit, %if.end73, %if.then8, %if.then
  %retval.0 = phi %union.tree_node* [ %to_type, %if.then ], [ %4, %if.then8 ], [ %call37, %if.end73 ], [ %t.0.lcssa6, %cleanup.loopexit ], !dbg !9536
  ret %union.tree_node* %retval.0, !dbg !9593
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_reference_type(%union.tree_node* %to_type) local_unnamed_addr #5 !dbg !9594 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %to_type, metadata !9596, metadata !DIExpression()), !dbg !9599
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9600
  %cmp = icmp eq %union.tree_node* %0, %to_type, !dbg !9601
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !9602

cond.false:                                       ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %to_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9603
  %bf.load = load i64, i64* %1, align 8, !dbg !9603
  %bf.lshr = lshr i64 %bf.load, 56, !dbg !9603
  %phitmp = trunc i64 %bf.lshr to i8, !dbg !9602
  br label %cond.end, !dbg !9602

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %phitmp, %cond.false ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i8 %cond, metadata !9597, metadata !DIExpression()), !dbg !9599
  %2 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 0), align 8, !dbg !9604
  %call = tail call i32 %2(i8 zeroext %cond) #7, !dbg !9605
  call void @llvm.dbg.value(metadata i32 %call, metadata !9598, metadata !DIExpression()), !dbg !9599
  %call1 = tail call %union.tree_node* @build_reference_type_for_mode(%union.tree_node* %to_type, i32 %call, i8 zeroext 0) #8, !dbg !9606
  ret %union.tree_node* %call1, !dbg !9607
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_type_no_quals(%union.tree_node* %t) local_unnamed_addr #5 !dbg !9608 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !9610, metadata !DIExpression()), !dbg !9611
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9612
  %bf.load = load i64, i64* %0, align 8, !dbg !9612
  %1 = trunc i64 %bf.load to i16, !dbg !9612
  switch i16 %1, label %sw.default [
    i16 10, label %sw.bb
    i16 12, label %sw.bb15
  ], !dbg !9613

sw.bb:                                            ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9614
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9614
  %call = tail call %union.tree_node* @build_type_no_quals(%union.tree_node* %2) #8, !dbg !9616
  %bf.load2 = load i64, i64* %0, align 8, !dbg !9617
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !9617
  %cmp = icmp eq i64 %bf.cast42, 14, !dbg !9617
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9617

cond.true:                                        ; preds = %sw.bb
  %call5 = tail call i32 @vector_type_mode(%union.tree_node* %t) #7, !dbg !9617
  %bf.load10.pre = load i64, i64* %0, align 8, !dbg !9618
  br label %cond.end, !dbg !9617

cond.false:                                       ; preds = %sw.bb
  %type6 = bitcast %union.tree_node* %t to %struct.tree_type*, !dbg !9617
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i64 0, i32 6, !dbg !9617
  %bf.load7 = load i32, i32* %mode, align 4, !dbg !9617
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !9617
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !9617
  br label %cond.end, !dbg !9617

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load10 = phi i64 [ %bf.load10.pre, %cond.true ], [ %bf.load2, %cond.false ], !dbg !9618
  %cond = phi i32 [ %call5, %cond.true ], [ %bf.clear8, %cond.false ], !dbg !9617
  %bf.lshr11 = lshr i64 %bf.load10, 26, !dbg !9618
  %3 = trunc i64 %bf.lshr11 to i8, !dbg !9618
  %bf.cast13 = and i8 %3, 1, !dbg !9618
  %call14 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %call, i32 %cond, i8 zeroext %bf.cast13) #8, !dbg !9619
  br label %return, !dbg !9620

sw.bb15:                                          ; preds = %entry
  %type17 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9621
  %4 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !9621
  %call18 = tail call %union.tree_node* @build_type_no_quals(%union.tree_node* %4) #8, !dbg !9622
  %bf.load20 = load i64, i64* %0, align 8, !dbg !9623
  %bf.cast221 = and i64 %bf.load20, 65535, !dbg !9623
  %cmp23 = icmp eq i64 %bf.cast221, 14, !dbg !9623
  br i1 %cmp23, label %cond.true25, label %cond.false27, !dbg !9623

cond.true25:                                      ; preds = %sw.bb15
  %call26 = tail call i32 @vector_type_mode(%union.tree_node* %t) #7, !dbg !9623
  %bf.load36.pre = load i64, i64* %0, align 8, !dbg !9624
  br label %cond.end33, !dbg !9623

cond.false27:                                     ; preds = %sw.bb15
  %type28 = bitcast %union.tree_node* %t to %struct.tree_type*, !dbg !9623
  %mode29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type28, i64 0, i32 6, !dbg !9623
  %bf.load30 = load i32, i32* %mode29, align 4, !dbg !9623
  %bf.lshr31 = lshr i32 %bf.load30, 16, !dbg !9623
  %bf.clear32 = and i32 %bf.lshr31, 255, !dbg !9623
  br label %cond.end33, !dbg !9623

cond.end33:                                       ; preds = %cond.false27, %cond.true25
  %bf.load36 = phi i64 [ %bf.load36.pre, %cond.true25 ], [ %bf.load20, %cond.false27 ], !dbg !9624
  %cond34 = phi i32 [ %call26, %cond.true25 ], [ %bf.clear32, %cond.false27 ], !dbg !9623
  %bf.lshr37 = lshr i64 %bf.load36, 26, !dbg !9624
  %5 = trunc i64 %bf.lshr37 to i8, !dbg !9624
  %bf.cast39 = and i8 %5, 1, !dbg !9624
  %call41 = tail call %union.tree_node* @build_reference_type_for_mode(%union.tree_node* %call18, i32 %cond34, i8 zeroext %bf.cast39) #8, !dbg !9625
  br label %return, !dbg !9626

sw.default:                                       ; preds = %entry
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9627
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !9627
  br label %return, !dbg !9628

return:                                           ; preds = %sw.default, %cond.end33, %cond.end
  %retval.0 = phi %union.tree_node* [ %7, %sw.default ], [ %call41, %cond.end33 ], [ %call14, %cond.end ], !dbg !9629
  ret %union.tree_node* %retval.0, !dbg !9630
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_index_type(%union.tree_node* %maxval) local_unnamed_addr #5 !dbg !9631 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval, metadata !9633, metadata !DIExpression()), !dbg !9635
  %call = tail call %union.tree_node* @make_node_stat(i32 8) #8, !dbg !9636
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9634, metadata !DIExpression()), !dbg !9635
  %0 = load i64, i64* bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64*), align 16, !dbg !9637
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9638
  %1 = bitcast %union.tree_node** %type to i64*, !dbg !9639
  store i64 %0, i64* %1, align 8, !dbg !9639
  %.cast = inttoptr i64 %0 to %struct.tree_type*, !dbg !9640
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast, i64 0, i32 6, !dbg !9640
  %bf.load = load i32, i32* %precision, align 4, !dbg !9640
  %bf.clear = and i32 %bf.load, 1023, !dbg !9640
  %type2 = bitcast %union.tree_node* %call to %struct.tree_type*, !dbg !9641
  %precision3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i64 0, i32 6, !dbg !9641
  %bf.load4 = load i32, i32* %precision3, align 4, !dbg !9642
  %bf.clear5 = and i32 %bf.load4, -1024, !dbg !9642
  %bf.set = or i32 %bf.clear5, %bf.clear, !dbg !9642
  store i32 %bf.set, i32* %precision3, align 4, !dbg !9642
  %2 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17) to i64*), align 8, !dbg !9643
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9644
  %3 = bitcast %struct.lang_decl** %minval to i64*, !dbg !9645
  store i64 %2, i64* %3, align 8, !dbg !9645
  %4 = inttoptr i64 %0 to %union.tree_node*, !dbg !9646
  %call7 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %4, %union.tree_node* %maxval) #7, !dbg !9646
  %maxval9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9647
  %5 = bitcast %struct.rtx_def** %maxval9 to %union.tree_node**, !dbg !9647
  store %union.tree_node* %call7, %union.tree_node** %5, align 8, !dbg !9648
  %6 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !9649
  %bf.load10 = load i64, i64* %6, align 8, !dbg !9649
  %bf.cast1 = and i64 %bf.load10, 65535, !dbg !9649
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !9649
  %7 = bitcast i64* %6 to %struct.tree_type*, !dbg !9649
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9649

cond.true:                                        ; preds = %entry
  %.cast2 = bitcast i64* %6 to %union.tree_node*, !dbg !9649
  %call12 = tail call i32 @vector_type_mode(%union.tree_node* %.cast2) #7, !dbg !9649
  %.pre = load %struct.tree_type*, %struct.tree_type** bitcast ([4 x %union.tree_node*]* @sizetype_tab to %struct.tree_type**), align 16, !dbg !9650
  br label %cond.end, !dbg !9649

cond.false:                                       ; preds = %entry
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 6, !dbg !9649
  %bf.load14 = load i32, i32* %mode, align 4, !dbg !9649
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !9649
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !9649
  br label %cond.end, !dbg !9649

cond.end:                                         ; preds = %cond.false, %cond.true
  %8 = phi %struct.tree_type* [ %.pre, %cond.true ], [ %7, %cond.false ], !dbg !9651
  %9 = phi %struct.tree_type* [ %.pre, %cond.true ], [ %7, %cond.false ], !dbg !9652
  %10 = phi %struct.tree_type* [ %.pre, %cond.true ], [ %7, %cond.false ], !dbg !9650
  %cond = phi i32 [ %call12, %cond.true ], [ %bf.clear15, %cond.false ], !dbg !9649
  %bf.load18 = load i32, i32* %precision3, align 4, !dbg !9649
  %bf.value19 = shl i32 %cond, 16, !dbg !9649
  %bf.shl = and i32 %bf.value19, 16711680, !dbg !9649
  %bf.clear20 = and i32 %bf.load18, -16711681, !dbg !9649
  %bf.set21 = or i32 %bf.clear20, %bf.shl, !dbg !9649
  store i32 %bf.set21, i32* %precision3, align 4, !dbg !9649
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %10, i64 0, i32 2, !dbg !9650
  %11 = bitcast %union.tree_node** %size to i64*, !dbg !9650
  %12 = load i64, i64* %11, align 8, !dbg !9650
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9653
  %14 = bitcast %union.tree_node** %13 to i64*, !dbg !9654
  store i64 %12, i64* %14, align 8, !dbg !9654
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 3, !dbg !9652
  %15 = bitcast %union.tree_node** %size_unit to i64*, !dbg !9652
  %16 = load i64, i64* %15, align 8, !dbg !9652
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9655
  %18 = bitcast %union.tree_node** %17 to i64*, !dbg !9656
  store i64 %16, i64* %18, align 8, !dbg !9656
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 7, !dbg !9651
  %19 = load i32, i32* %align, align 8, !dbg !9651
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9657
  store i32 %19, i32* %20, align 8, !dbg !9658
  %21 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 0, i32 0, i32 0, !dbg !9659
  %bf.load33 = load i64, i64* %21, align 8, !dbg !9659
  %bf.cast36 = and i64 %bf.load33, 4398046511104, !dbg !9659
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9660
  %bf.load39 = load i64, i64* %22, align 8, !dbg !9661
  %bf.clear42 = and i64 %bf.load39, -4398046511105, !dbg !9661
  %bf.set43 = or i64 %bf.clear42, %bf.cast36, !dbg !9661
  store i64 %bf.set43, i64* %22, align 8, !dbg !9661
  %call44 = tail call i32 @host_integerp(%union.tree_node* %maxval, i32 1) #8, !dbg !9662
  %tobool = icmp eq i32 %call44, 0, !dbg !9662
  br i1 %tobool, label %if.else, label %if.then, !dbg !9664

if.then:                                          ; preds = %cond.end
  %call45 = tail call i64 @tree_low_cst(%union.tree_node* %maxval, i32 1) #8, !dbg !9665
  %conv = trunc i64 %call45 to i32, !dbg !9665
  %call46 = tail call %union.tree_node* @type_hash_canon(i32 %conv, %union.tree_node* %call) #8, !dbg !9666
  br label %cleanup, !dbg !9667

if.else:                                          ; preds = %cond.end
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1, !dbg !9668
  store %union.tree_node* null, %union.tree_node** %23, align 8, !dbg !9668
  br label %cleanup, !dbg !9670

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi %union.tree_node* [ %call46, %if.then ], [ %call, %if.else ], !dbg !9671
  ret %union.tree_node* %retval.0, !dbg !9672
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_nonstandard_integer_type(i64 %precision, i32 %unsignedp) local_unnamed_addr #5 !dbg !9673 {
entry:
  call void @llvm.dbg.value(metadata i64 %precision, metadata !9677, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !9678, metadata !DIExpression()), !dbg !9680
  %call = tail call %union.tree_node* @make_node_stat(i32 8) #8, !dbg !9681
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9679, metadata !DIExpression()), !dbg !9680
  %conv = trunc i64 %precision to i32, !dbg !9682
  %type = bitcast %union.tree_node* %call to %struct.tree_type*, !dbg !9683
  %precision1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !9683
  %bf.load = load i32, i32* %precision1, align 4, !dbg !9684
  %bf.value = and i32 %conv, 1023, !dbg !9684
  %bf.clear = and i32 %bf.load, -1024, !dbg !9684
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !9684
  store i32 %bf.set, i32* %precision1, align 4, !dbg !9684
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !9685
  br i1 %tobool, label %if.else, label %if.then, !dbg !9687

if.then:                                          ; preds = %entry
  tail call void @fixup_unsigned_type(%union.tree_node* %call) #7, !dbg !9688
  br label %if.end, !dbg !9688

if.else:                                          ; preds = %entry
  tail call void @fixup_signed_type(%union.tree_node* %call) #7, !dbg !9689
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9690
  %0 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !9690
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !9690
  %call3 = tail call i32 @host_integerp(%union.tree_node* %1, i32 1) #8, !dbg !9692
  %tobool4 = icmp eq i32 %call3, 0, !dbg !9692
  br i1 %tobool4, label %cleanup, label %if.then5, !dbg !9693

if.then5:                                         ; preds = %if.end
  %2 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !9694
  %call8 = tail call i64 @tree_low_cst(%union.tree_node* %2, i32 1) #8, !dbg !9695
  %conv9 = trunc i64 %call8 to i32, !dbg !9695
  %call10 = tail call %union.tree_node* @type_hash_canon(i32 %conv9, %union.tree_node* %call) #8, !dbg !9696
  br label %cleanup, !dbg !9697

cleanup:                                          ; preds = %if.end, %if.then5
  %retval.0 = phi %union.tree_node* [ %call10, %if.then5 ], [ %call, %if.end ], !dbg !9680
  ret %union.tree_node* %retval.0, !dbg !9698
}

declare dso_local void @fixup_unsigned_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fixup_signed_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_range_type(%union.tree_node* %type, %union.tree_node* %lowval, %union.tree_node* %highval) local_unnamed_addr #5 !dbg !9699 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9701, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.value(metadata %union.tree_node* %lowval, metadata !9702, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.value(metadata %union.tree_node* %highval, metadata !9703, metadata !DIExpression()), !dbg !9705
  %call = tail call %union.tree_node* @make_node_stat(i32 8) #8, !dbg !9706
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9704, metadata !DIExpression()), !dbg !9705
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9707
  store %union.tree_node* %type, %union.tree_node** %type1, align 8, !dbg !9708
  %cmp = icmp eq %union.tree_node* %type, null, !dbg !9709
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !9711
  %spec.select = select i1 %cmp, %union.tree_node* %0, %union.tree_node* %type, !dbg !9712
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !9701, metadata !DIExpression()), !dbg !9705
  %call2 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %spec.select, %union.tree_node* %lowval) #7, !dbg !9713
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9714
  %1 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !9714
  store %union.tree_node* %call2, %union.tree_node** %1, align 8, !dbg !9715
  %tobool = icmp eq %union.tree_node* %highval, null, !dbg !9716
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9716

cond.true:                                        ; preds = %entry
  %call4 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %spec.select, %union.tree_node* nonnull %highval) #7, !dbg !9717
  br label %cond.end, !dbg !9716

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %call4, %cond.true ], [ null, %entry ], !dbg !9716
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9718
  %2 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !9718
  store %union.tree_node* %cond, %union.tree_node** %2, align 8, !dbg !9719
  %type6 = bitcast %union.tree_node* %spec.select to %struct.tree_type*, !dbg !9720
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i64 0, i32 6, !dbg !9720
  %bf.load = load i32, i32* %precision, align 4, !dbg !9720
  %bf.clear = and i32 %bf.load, 1023, !dbg !9720
  %type7 = bitcast %union.tree_node* %call to %struct.tree_type*, !dbg !9721
  %precision8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i64 0, i32 6, !dbg !9721
  %bf.load9 = load i32, i32* %precision8, align 4, !dbg !9722
  %bf.clear10 = and i32 %bf.load9, -1024, !dbg !9722
  %bf.set = or i32 %bf.clear10, %bf.clear, !dbg !9722
  store i32 %bf.set, i32* %precision8, align 4, !dbg !9722
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9723
  %bf.load11 = load i64, i64* %3, align 8, !dbg !9723
  %bf.cast1 = and i64 %bf.load11, 65535, !dbg !9723
  %cmp13 = icmp eq i64 %bf.cast1, 14, !dbg !9723
  br i1 %cmp13, label %cond.true14, label %cond.false16, !dbg !9723

cond.true14:                                      ; preds = %cond.end
  %call15 = tail call i32 @vector_type_mode(%union.tree_node* %spec.select) #7, !dbg !9723
  %bf.load24.pre = load i32, i32* %precision8, align 4, !dbg !9723
  br label %cond.end20, !dbg !9723

cond.false16:                                     ; preds = %cond.end
  %bf.load18 = load i32, i32* %precision, align 4, !dbg !9723
  %bf.lshr = lshr i32 %bf.load18, 16, !dbg !9723
  %bf.clear19 = and i32 %bf.lshr, 255, !dbg !9723
  br label %cond.end20, !dbg !9723

cond.end20:                                       ; preds = %cond.false16, %cond.true14
  %bf.load24 = phi i32 [ %bf.load24.pre, %cond.true14 ], [ %bf.set, %cond.false16 ], !dbg !9723
  %cond21 = phi i32 [ %call15, %cond.true14 ], [ %bf.clear19, %cond.false16 ], !dbg !9723
  %bf.value25 = shl i32 %cond21, 16, !dbg !9723
  %bf.shl = and i32 %bf.value25, 16711680, !dbg !9723
  %bf.clear26 = and i32 %bf.load24, -16711681, !dbg !9723
  %bf.set27 = or i32 %bf.clear26, %bf.shl, !dbg !9723
  store i32 %bf.set27, i32* %precision8, align 4, !dbg !9723
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9724
  %5 = bitcast %union.tree_node** %4 to i64*, !dbg !9724
  %6 = load i64, i64* %5, align 8, !dbg !9724
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9725
  %8 = bitcast %union.tree_node** %7 to i64*, !dbg !9726
  store i64 %6, i64* %8, align 8, !dbg !9726
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9727
  %10 = bitcast %union.tree_node** %9 to i64*, !dbg !9727
  %11 = load i64, i64* %10, align 8, !dbg !9727
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9728
  %13 = bitcast %union.tree_node** %12 to i64*, !dbg !9729
  store i64 %11, i64* %13, align 8, !dbg !9729
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9730
  %15 = load i32, i32* %14, align 8, !dbg !9730
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9731
  store i32 %15, i32* %16, align 8, !dbg !9732
  %bf.load39 = load i64, i64* %3, align 8, !dbg !9733
  %bf.cast42 = and i64 %bf.load39, 4398046511104, !dbg !9733
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9734
  %bf.load45 = load i64, i64* %17, align 8, !dbg !9735
  %bf.clear48 = and i64 %bf.load45, -4398046511105, !dbg !9735
  %bf.set49 = or i64 %bf.clear48, %bf.cast42, !dbg !9735
  store i64 %bf.set49, i64* %17, align 8, !dbg !9735
  %call50 = tail call i32 @host_integerp(%union.tree_node* %lowval, i32 0) #8, !dbg !9736
  %tobool51 = icmp ne i32 %call50, 0, !dbg !9736
  %cmp52 = icmp ne %union.tree_node* %highval, null, !dbg !9738
  %or.cond = and i1 %tobool51, %cmp52, !dbg !9739
  br i1 %or.cond, label %land.lhs.true53, label %cleanup, !dbg !9739

land.lhs.true53:                                  ; preds = %cond.end20
  %call54 = tail call i32 @host_integerp(%union.tree_node* nonnull %highval, i32 0) #8, !dbg !9740
  %tobool55 = icmp eq i32 %call54, 0, !dbg !9740
  br i1 %tobool55, label %cleanup, label %if.then56, !dbg !9741

if.then56:                                        ; preds = %land.lhs.true53
  %call57 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %highval, i32 0) #8, !dbg !9742
  %call58 = tail call i64 @tree_low_cst(%union.tree_node* %lowval, i32 0) #8, !dbg !9743
  %sub = sub nsw i64 %call57, %call58, !dbg !9744
  %conv = trunc i64 %sub to i32, !dbg !9742
  %call59 = tail call %union.tree_node* @type_hash_canon(i32 %conv, %union.tree_node* %call) #8, !dbg !9745
  br label %cleanup, !dbg !9746

cleanup:                                          ; preds = %land.lhs.true53, %cond.end20, %if.then56
  %retval.0 = phi %union.tree_node* [ %call59, %if.then56 ], [ %call, %land.lhs.true53 ], [ %call, %cond.end20 ], !dbg !9747
  ret %union.tree_node* %retval.0, !dbg !9748
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @subrange_type_for_debug_p(%union.tree_node* %type, %union.tree_node** %lowval, %union.tree_node** %highval) local_unnamed_addr #5 !dbg !9749 {
entry:
  %low = alloca %union.tree_node*, align 8
  %high = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9753, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata %union.tree_node** %lowval, metadata !9754, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata %union.tree_node** %highval, metadata !9755, metadata !DIExpression()), !dbg !9763
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9764
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !9764
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9756, metadata !DIExpression()), !dbg !9763
  %1 = bitcast %union.tree_node** %low to i8*, !dbg !9765
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !9765
  %2 = bitcast %union.tree_node** %high to i8*, !dbg !9765
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !9765
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9766
  %bf.load = load i64, i64* %3, align 8, !dbg !9766
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9766
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !9766
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !9766

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 7, !dbg !9766
  br i1 %cmp6, label %if.end, label %lor.lhs.false7, !dbg !9766

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i64 %bf.cast1, 8, !dbg !9766
  br i1 %cmp12, label %if.end, label %cleanup76, !dbg !9768

if.end:                                           ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  %4 = load void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 13), align 8, !dbg !9769
  %tobool = icmp eq void (%union.tree_node*, %union.tree_node**, %union.tree_node**)* %4, null, !dbg !9771
  br i1 %tobool, label %if.else, label %if.then13, !dbg !9772

if.then13:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node** %low, metadata !9757, metadata !DIExpression(DW_OP_deref)), !dbg !9763
  call void @llvm.dbg.value(metadata %union.tree_node** %high, metadata !9758, metadata !DIExpression(DW_OP_deref)), !dbg !9763
  call void %4(%union.tree_node* %type, %union.tree_node** nonnull %low, %union.tree_node** nonnull %high) #7, !dbg !9773
  br label %if.end16, !dbg !9773

if.else:                                          ; preds = %if.end
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9774
  %5 = bitcast %struct.lang_decl** %minval to i64*, !dbg !9774
  %6 = load i64, i64* %5, align 8, !dbg !9774
  %7 = bitcast %union.tree_node** %low to i64*, !dbg !9776
  store i64 %6, i64* %7, align 8, !dbg !9776
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9777
  %8 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !9777
  %9 = load i64, i64* %8, align 8, !dbg !9777
  %10 = bitcast %union.tree_node** %high to i64*, !dbg !9778
  store i64 %9, i64* %10, align 8, !dbg !9778
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13
  %bf.load18 = load i64, i64* %3, align 8, !dbg !9779
  %bf.cast204 = and i64 %bf.load18, 65535, !dbg !9780
  %cmp21 = icmp eq i64 %bf.cast204, 8, !dbg !9780
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false22, !dbg !9781

lor.lhs.false22:                                  ; preds = %if.end16
  %cmp27 = icmp eq i64 %bf.cast204, 7, !dbg !9782
  br i1 %cmp27, label %land.lhs.true, label %if.end69, !dbg !9783

land.lhs.true:                                    ; preds = %lor.lhs.false22, %if.end16
  %call = call i64 @int_size_in_bytes(%union.tree_node* %type) #8, !dbg !9784
  %call28 = call i64 @int_size_in_bytes(%union.tree_node* %0) #8, !dbg !9785
  %cmp29 = icmp eq i64 %call, %call28, !dbg !9786
  br i1 %cmp29, label %land.lhs.true30, label %if.end69, !dbg !9787

land.lhs.true30:                                  ; preds = %land.lhs.true
  %11 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !9788
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !9757, metadata !DIExpression()), !dbg !9763
  %minval32 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !9789
  %12 = bitcast %struct.lang_decl** %minval32 to %union.tree_node**, !dbg !9789
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !9789
  %call33 = call i32 @tree_int_cst_equal(%union.tree_node* %11, %union.tree_node* %13) #8, !dbg !9790
  %tobool34 = icmp eq i32 %call33, 0, !dbg !9790
  br i1 %tobool34, label %if.end69, label %land.lhs.true35, !dbg !9791

land.lhs.true35:                                  ; preds = %land.lhs.true30
  %14 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !9792
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !9758, metadata !DIExpression()), !dbg !9763
  %maxval37 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9793
  %15 = bitcast %struct.rtx_def** %maxval37 to %union.tree_node**, !dbg !9793
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !9793
  %call38 = call i32 @tree_int_cst_equal(%union.tree_node* %14, %union.tree_node* %16) #8, !dbg !9794
  %tobool39 = icmp eq i32 %call38, 0, !dbg !9794
  br i1 %tobool39, label %if.end69, label %if.then40, !dbg !9795

if.then40:                                        ; preds = %land.lhs.true35
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !9796
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !9796
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !9759, metadata !DIExpression()), !dbg !9797
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !9798
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !9798
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !9762, metadata !DIExpression()), !dbg !9797
  %tobool44 = icmp eq %union.tree_node* %18, null, !dbg !9799
  br i1 %tobool44, label %if.end53, label %land.lhs.true45, !dbg !9801

land.lhs.true45:                                  ; preds = %if.then40
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9802
  %bf.load47 = load i64, i64* %21, align 8, !dbg !9802
  %bf.cast497 = and i64 %bf.load47, 65535, !dbg !9803
  %cmp50 = icmp eq i64 %bf.cast497, 35, !dbg !9803
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !9804

if.then51:                                        ; preds = %land.lhs.true45
  %name52 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9805
  %22 = load %union.tree_node*, %union.tree_node** %name52, align 8, !dbg !9805
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !9759, metadata !DIExpression()), !dbg !9797
  br label %if.end53, !dbg !9806

if.end53:                                         ; preds = %if.then40, %if.then51, %land.lhs.true45
  %type_name.0 = phi %union.tree_node* [ %22, %if.then51 ], [ %18, %land.lhs.true45 ], [ null, %if.then40 ], !dbg !9797
  call void @llvm.dbg.value(metadata %union.tree_node* %type_name.0, metadata !9759, metadata !DIExpression()), !dbg !9797
  %tobool54 = icmp eq %union.tree_node* %20, null, !dbg !9807
  br i1 %tobool54, label %if.end64, label %land.lhs.true55, !dbg !9809

land.lhs.true55:                                  ; preds = %if.end53
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9810
  %bf.load57 = load i64, i64* %23, align 8, !dbg !9810
  %bf.cast596 = and i64 %bf.load57, 65535, !dbg !9811
  %cmp60 = icmp eq i64 %bf.cast596, 35, !dbg !9811
  br i1 %cmp60, label %if.then61, label %if.end64, !dbg !9812

if.then61:                                        ; preds = %land.lhs.true55
  %name63 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9813
  %24 = load %union.tree_node*, %union.tree_node** %name63, align 8, !dbg !9813
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !9762, metadata !DIExpression()), !dbg !9797
  br label %if.end64, !dbg !9814

if.end64:                                         ; preds = %if.end53, %if.then61, %land.lhs.true55
  %base_type_name.0 = phi %union.tree_node* [ %24, %if.then61 ], [ %20, %land.lhs.true55 ], [ null, %if.end53 ], !dbg !9797
  call void @llvm.dbg.value(metadata %union.tree_node* %base_type_name.0, metadata !9762, metadata !DIExpression()), !dbg !9797
  %cmp65 = icmp eq %union.tree_node* %type_name.0, %base_type_name.0, !dbg !9815
  br i1 %cmp65, label %cleanup76, label %if.end69

if.end69:                                         ; preds = %if.end64, %land.lhs.true35, %land.lhs.true30, %land.lhs.true, %lor.lhs.false22
  %tobool70 = icmp eq %union.tree_node** %lowval, null, !dbg !9817
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !9819

if.then71:                                        ; preds = %if.end69
  %25 = bitcast %union.tree_node** %low to i64*, !dbg !9820
  %26 = load i64, i64* %25, align 8, !dbg !9820
  %27 = bitcast %union.tree_node** %lowval to i64*, !dbg !9821
  store i64 %26, i64* %27, align 8, !dbg !9821
  br label %if.end72, !dbg !9822

if.end72:                                         ; preds = %if.end69, %if.then71
  %tobool73 = icmp eq %union.tree_node** %highval, null, !dbg !9823
  br i1 %tobool73, label %cleanup76, label %if.then74, !dbg !9825

if.then74:                                        ; preds = %if.end72
  %28 = bitcast %union.tree_node** %high to i64*, !dbg !9826
  %29 = load i64, i64* %28, align 8, !dbg !9826
  %30 = bitcast %union.tree_node** %highval to i64*, !dbg !9827
  store i64 %29, i64* %30, align 8, !dbg !9827
  br label %cleanup76, !dbg !9828

cleanup76:                                        ; preds = %if.end64, %if.end72, %if.then74, %lor.lhs.false7
  %retval.1 = phi i8 [ 0, %if.end64 ], [ 0, %lor.lhs.false7 ], [ 1, %if.then74 ], [ 1, %if.end72 ], !dbg !9763
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !9829
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !9829
  ret i8 %retval.1, !dbg !9829
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_index_2_type(%union.tree_node* %lowval, %union.tree_node* %highval) local_unnamed_addr #5 !dbg !9830 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %lowval, metadata !9832, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.value(metadata %union.tree_node* %highval, metadata !9833, metadata !DIExpression()), !dbg !9834
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !9835
  %call = tail call %union.tree_node* @build_range_type(%union.tree_node* %0, %union.tree_node* %lowval, %union.tree_node* %highval) #8, !dbg !9836
  ret %union.tree_node* %call, !dbg !9837
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_array_type(%union.tree_node* %elt_type, %union.tree_node* %index_type) local_unnamed_addr #5 !dbg !9838 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %elt_type, metadata !9840, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata %union.tree_node* %index_type, metadata !9841, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 0, metadata !9843, metadata !DIExpression()), !dbg !9844
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9845
  %bf.load = load i64, i64* %0, align 8, !dbg !9845
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9847
  %cmp = icmp eq i64 %bf.cast1, 20, !dbg !9847
  br i1 %cmp, label %if.then, label %if.end, !dbg !9848

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.224, i64 0, i64 0)) #7, !dbg !9849
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9851
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9840, metadata !DIExpression()), !dbg !9844
  br label %if.end, !dbg !9852

if.end:                                           ; preds = %if.then, %entry
  %elt_type.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %elt_type, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %elt_type.addr.0, metadata !9840, metadata !DIExpression()), !dbg !9844
  %call = tail call %union.tree_node* @make_node_stat(i32 15) #8, !dbg !9853
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9842, metadata !DIExpression()), !dbg !9844
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9854
  store %union.tree_node* %elt_type.addr.0, %union.tree_node** %type, align 8, !dbg !9855
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9856
  %2 = bitcast i32* %values to %union.tree_node**, !dbg !9856
  store %union.tree_node* %index_type, %union.tree_node** %2, align 8, !dbg !9857
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt_type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9858
  %bf.load3 = load i64, i64* %3, align 8, !dbg !9858
  %bf.lshr = and i64 %bf.load3, -72057594037927936, !dbg !9859
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9860
  %bf.load6 = load i64, i64* %4, align 8, !dbg !9859
  %bf.clear7 = and i64 %bf.load6, 72057594037927935, !dbg !9859
  %bf.set = or i64 %bf.clear7, %bf.lshr, !dbg !9859
  store i64 %bf.set, i64* %4, align 8, !dbg !9859
  tail call void @layout_type(%union.tree_node* %call) #7, !dbg !9861
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1, !dbg !9862
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !9862
  %cmp9 = icmp eq %union.tree_node* %6, null, !dbg !9862
  br i1 %cmp9, label %cleanup, label %if.end11, !dbg !9864

if.end11:                                         ; preds = %if.end
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %elt_type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9865
  %7 = bitcast i40* %uid to i8*, !dbg !9865
  %call13 = tail call i32 @iterative_hash(i8* nonnull %7, i64 4, i32 0) #7, !dbg !9865
  call void @llvm.dbg.value(metadata i32 %call13, metadata !9843, metadata !DIExpression()), !dbg !9844
  %tobool = icmp eq %union.tree_node* %index_type, null, !dbg !9866
  br i1 %tobool, label %if.end18, label %if.then14, !dbg !9868

if.then14:                                        ; preds = %if.end11
  %uid16 = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9869
  %8 = bitcast i40* %uid16 to i8*, !dbg !9869
  %call17 = tail call i32 @iterative_hash(i8* nonnull %8, i64 4, i32 %call13) #7, !dbg !9869
  call void @llvm.dbg.value(metadata i32 %call17, metadata !9843, metadata !DIExpression()), !dbg !9844
  br label %if.end18, !dbg !9870

if.end18:                                         ; preds = %if.end11, %if.then14
  %hashcode.0 = phi i32 [ %call17, %if.then14 ], [ %call13, %if.end11 ], !dbg !9844
  call void @llvm.dbg.value(metadata i32 %hashcode.0, metadata !9843, metadata !DIExpression()), !dbg !9844
  %call19 = tail call %union.tree_node* @type_hash_canon(i32 %hashcode.0, %union.tree_node* %call) #8, !dbg !9871
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !9842, metadata !DIExpression()), !dbg !9844
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 1, !dbg !9872
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !9872
  %cmp22 = icmp eq %union.tree_node* %10, %call19, !dbg !9874
  br i1 %cmp22, label %if.then23, label %cleanup, !dbg !9875

if.then23:                                        ; preds = %if.end18
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt_type.addr.0, i64 0, i32 0, i32 0, i32 1, !dbg !9876
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !9876
  %cmp26 = icmp eq %union.tree_node* %12, null, !dbg !9876
  br i1 %cmp26, label %if.then31, label %lor.lhs.false, !dbg !9879

lor.lhs.false:                                    ; preds = %if.then23
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !9880

land.lhs.true:                                    ; preds = %lor.lhs.false
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 1, !dbg !9881
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !9881
  %cmp30 = icmp eq %union.tree_node* %14, null, !dbg !9881
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !9882

if.then31:                                        ; preds = %land.lhs.true, %if.then23
  store %union.tree_node* null, %union.tree_node** %9, align 8, !dbg !9883
  br label %cleanup, !dbg !9883

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %cmp36 = icmp eq %union.tree_node* %12, %elt_type.addr.0, !dbg !9884
  br i1 %cmp36, label %lor.lhs.false37, label %if.then43, !dbg !9886

lor.lhs.false37:                                  ; preds = %if.else
  br i1 %tobool, label %cleanup, label %land.lhs.true39, !dbg !9887

land.lhs.true39:                                  ; preds = %lor.lhs.false37
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 1, !dbg !9888
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !9888
  %cmp42 = icmp eq %union.tree_node* %16, %index_type, !dbg !9889
  br i1 %cmp42, label %cleanup, label %if.then43, !dbg !9890

if.then43:                                        ; preds = %land.lhs.true39, %if.else
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9891

cond.true:                                        ; preds = %if.then43
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 1, !dbg !9892
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !9892
  br label %cond.end, !dbg !9891

cond.end:                                         ; preds = %if.then43, %cond.true
  %cond = phi %union.tree_node* [ %18, %cond.true ], [ null, %if.then43 ], !dbg !9891
  %call49 = tail call %union.tree_node* @build_array_type(%union.tree_node* nonnull %12, %union.tree_node* %cond) #8, !dbg !9893
  store %union.tree_node* %call49, %union.tree_node** %9, align 8, !dbg !9894
  ret %union.tree_node* %call19, !dbg !9895

cleanup:                                          ; preds = %land.lhs.true39, %lor.lhs.false37, %if.end18, %if.then31, %if.end
  %retval.0 = phi %union.tree_node* [ %call, %if.end ], [ %call19, %if.then31 ], [ %call19, %land.lhs.true39 ], [ %call19, %lor.lhs.false37 ], [ %call19, %if.end18 ], !dbg !9844
  ret %union.tree_node* %retval.0, !dbg !9895
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @strip_array_types(%union.tree_node* %type) local_unnamed_addr #5 !dbg !9896 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9898, metadata !DIExpression()), !dbg !9899
  br label %while.cond, !dbg !9900

while.cond:                                       ; preds = %while.body, %entry
  %type.addr.0 = phi %union.tree_node* [ %type, %entry ], [ %1, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !9898, metadata !DIExpression()), !dbg !9899
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9901
  %bf.load = load i64, i64* %0, align 8, !dbg !9901
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9902
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !9902
  br i1 %cmp, label %while.body, label %while.end, !dbg !9900

while.body:                                       ; preds = %while.cond
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9903
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !9903
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9898, metadata !DIExpression()), !dbg !9899
  br label %while.cond, !dbg !9900, !llvm.loop !9904

while.end:                                        ; preds = %while.cond
  %type.addr.0.lcssa = phi %union.tree_node* [ %type.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !9898, metadata !DIExpression()), !dbg !9899
  ret %union.tree_node* %type.addr.0.lcssa, !dbg !9905
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_function_type(%union.tree_node* %value_type, %union.tree_node* %arg_types) local_unnamed_addr #5 !dbg !9906 {
entry:
  %any_structural_p = alloca i8, align 1
  %any_noncanonical_p = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %value_type, metadata !9908, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata %union.tree_node* %arg_types, metadata !9909, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata i32 0, metadata !9911, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata i8* %any_structural_p, metadata !9912, metadata !DIExpression(DW_OP_deref)), !dbg !9915
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %any_structural_p) #6, !dbg !9916
  call void @llvm.dbg.value(metadata i8* %any_noncanonical_p, metadata !9913, metadata !DIExpression(DW_OP_deref)), !dbg !9915
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %any_noncanonical_p) #6, !dbg !9916
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %value_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9917
  %bf.load = load i64, i64* %0, align 8, !dbg !9917
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9919
  %cmp = icmp eq i64 %bf.cast1, 20, !dbg !9919
  br i1 %cmp, label %if.then, label %if.end, !dbg !9920

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.225, i64 0, i64 0)) #7, !dbg !9921
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9923
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9908, metadata !DIExpression()), !dbg !9915
  br label %if.end, !dbg !9924

if.end:                                           ; preds = %if.then, %entry
  %value_type.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %value_type, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value_type.addr.0, metadata !9908, metadata !DIExpression()), !dbg !9915
  %call = tail call %union.tree_node* @make_node_stat(i32 20) #8, !dbg !9925
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9910, metadata !DIExpression()), !dbg !9915
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9926
  store %union.tree_node* %value_type.addr.0, %union.tree_node** %type, align 8, !dbg !9927
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9928
  %2 = bitcast i32* %values to %union.tree_node**, !dbg !9928
  store %union.tree_node* %arg_types, %union.tree_node** %2, align 8, !dbg !9929
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %value_type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9930
  %3 = bitcast i40* %uid to i8*, !dbg !9930
  %call3 = tail call i32 @iterative_hash(i8* nonnull %3, i64 4, i32 0) #7, !dbg !9930
  call void @llvm.dbg.value(metadata i32 %call3, metadata !9911, metadata !DIExpression()), !dbg !9915
  %call4 = tail call fastcc i32 @type_hash_list(%union.tree_node* %arg_types, i32 %call3) #8, !dbg !9931
  call void @llvm.dbg.value(metadata i32 %call4, metadata !9911, metadata !DIExpression()), !dbg !9915
  %call5 = tail call %union.tree_node* @type_hash_canon(i32 %call4, %union.tree_node* %call) #8, !dbg !9932
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !9910, metadata !DIExpression()), !dbg !9915
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %value_type.addr.0, i64 0, i32 0, i32 0, i32 1, !dbg !9933
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9933
  %cmp7 = icmp eq %union.tree_node* %5, null, !dbg !9933
  %conv8 = zext i1 %cmp7 to i8, !dbg !9933
  call void @llvm.dbg.value(metadata i8 %conv8, metadata !9912, metadata !DIExpression()), !dbg !9915
  store i8 %conv8, i8* %any_structural_p, align 1, !dbg !9934
  %cmp11 = icmp ne %union.tree_node* %5, %value_type.addr.0, !dbg !9935
  %conv13 = zext i1 %cmp11 to i8, !dbg !9936
  call void @llvm.dbg.value(metadata i8 %conv13, metadata !9913, metadata !DIExpression()), !dbg !9915
  store i8 %conv13, i8* %any_noncanonical_p, align 1, !dbg !9937
  call void @llvm.dbg.value(metadata i8* %any_structural_p, metadata !9912, metadata !DIExpression(DW_OP_deref)), !dbg !9915
  call void @llvm.dbg.value(metadata i8* %any_noncanonical_p, metadata !9913, metadata !DIExpression(DW_OP_deref)), !dbg !9915
  %call14 = call fastcc %union.tree_node* @maybe_canonicalize_argtypes(%union.tree_node* %arg_types, i8* nonnull %any_structural_p, i8* nonnull %any_noncanonical_p) #8, !dbg !9938
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !9914, metadata !DIExpression()), !dbg !9915
  %6 = load i8, i8* %any_structural_p, align 1, !dbg !9939
  call void @llvm.dbg.value(metadata i8 %6, metadata !9912, metadata !DIExpression()), !dbg !9915
  %tobool = icmp eq i8 %6, 0, !dbg !9939
  br i1 %tobool, label %if.else, label %if.then15, !dbg !9941

if.then15:                                        ; preds = %if.end
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 1, !dbg !9942
  store %union.tree_node* null, %union.tree_node** %7, align 8, !dbg !9942
  br label %if.end26, !dbg !9942

if.else:                                          ; preds = %if.end
  %8 = load i8, i8* %any_noncanonical_p, align 1, !dbg !9943
  call void @llvm.dbg.value(metadata i8 %8, metadata !9913, metadata !DIExpression()), !dbg !9915
  %tobool18 = icmp eq i8 %8, 0, !dbg !9943
  br i1 %tobool18, label %if.end26, label %if.then19, !dbg !9945

if.then19:                                        ; preds = %if.else
  %9 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9946
  %call22 = call %union.tree_node* @build_function_type(%union.tree_node* %9, %union.tree_node* %call14) #8, !dbg !9947
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 1, !dbg !9948
  store %union.tree_node* %call22, %union.tree_node** %10, align 8, !dbg !9949
  br label %if.end26, !dbg !9948

if.end26:                                         ; preds = %if.else, %if.then19, %if.then15
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9950
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !9950
  %cmp28 = icmp eq %union.tree_node* %12, null, !dbg !9950
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !9952

if.then30:                                        ; preds = %if.end26
  call void @layout_type(%union.tree_node* %call5) #7, !dbg !9953
  br label %if.end31, !dbg !9953

if.end31:                                         ; preds = %if.end26, %if.then30
  call void @llvm.dbg.value(metadata i8* %any_noncanonical_p, metadata !9913, metadata !DIExpression(DW_OP_deref)), !dbg !9915
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %any_noncanonical_p) #6, !dbg !9954
  call void @llvm.dbg.value(metadata i8* %any_structural_p, metadata !9912, metadata !DIExpression(DW_OP_deref)), !dbg !9915
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %any_structural_p) #6, !dbg !9954
  ret %union.tree_node* %call5, !dbg !9955
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @maybe_canonicalize_argtypes(%union.tree_node* %argtypes, i8* %any_structural_p, i8* %any_noncanonical_p) unnamed_addr #5 !dbg !9956 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %argtypes, metadata !9960, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata i8* %any_structural_p, metadata !9961, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata i8* %any_noncanonical_p, metadata !9962, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata i8 0, metadata !9964, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata %union.tree_node* %argtypes, metadata !9963, metadata !DIExpression()), !dbg !9969
  br label %for.cond, !dbg !9970

for.cond:                                         ; preds = %for.inc, %entry
  %any_noncanonical_argtypes_p.0 = phi i8 [ 0, %entry ], [ %any_noncanonical_argtypes_p.3, %for.inc ], !dbg !9972
  %arg.0 = phi %union.tree_node* [ %argtypes, %entry ], [ %8, %for.inc ], !dbg !9973
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !9963, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata i8 %any_noncanonical_argtypes_p.0, metadata !9964, metadata !DIExpression()), !dbg !9969
  %tobool = icmp eq %union.tree_node* %arg.0, null, !dbg !9974
  br i1 %tobool, label %for.cond.for.end_crit_edge, label %land.rhs, !dbg !9976

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %any_noncanonical_argtypes_p.0.lcssa = phi i8 [ %any_noncanonical_argtypes_p.0, %for.cond ], !dbg !9972
  call void @llvm.dbg.value(metadata i8 %any_noncanonical_argtypes_p.0.lcssa, metadata !9964, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata i8 %any_noncanonical_argtypes_p.0.lcssa, metadata !9964, metadata !DIExpression()), !dbg !9969
  %.pre = load i8, i8* %any_structural_p, align 1, !dbg !9977
  br label %for.end, !dbg !9976

land.rhs:                                         ; preds = %for.cond
  %0 = load i8, i8* %any_structural_p, align 1, !dbg !9979
  %tobool1 = icmp eq i8 %0, 0, !dbg !9980
  br i1 %tobool1, label %for.body, label %for.end.loopexit, !dbg !9981

for.body:                                         ; preds = %land.rhs
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9982
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !9982
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !9982
  br i1 %tobool2, label %if.then, label %lor.lhs.false, !dbg !9985

lor.lhs.false:                                    ; preds = %for.body
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9986
  %cmp = icmp eq %union.tree_node* %2, %3, !dbg !9987
  br i1 %cmp, label %if.then, label %if.else, !dbg !9988

if.then:                                          ; preds = %for.body, %lor.lhs.false
  store i8 1, i8* %any_structural_p, align 1, !dbg !9989
  br label %for.inc, !dbg !9990

if.else:                                          ; preds = %lor.lhs.false
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1, !dbg !9991
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9991
  %cmp7 = icmp eq %union.tree_node* %5, null, !dbg !9991
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !9993

if.then8:                                         ; preds = %if.else
  store i8 1, i8* %any_structural_p, align 1, !dbg !9994
  br label %for.inc, !dbg !9995

if.else9:                                         ; preds = %if.else
  %cmp16 = icmp eq %union.tree_node* %5, %2, !dbg !9996
  br i1 %cmp16, label %lor.lhs.false17, label %if.then20, !dbg !9998

lor.lhs.false17:                                  ; preds = %if.else9
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9999
  %6 = bitcast i32* %purpose to %union.tree_node**, !dbg !9999
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !9999
  %tobool19 = icmp eq %union.tree_node* %7, null, !dbg !9999
  br i1 %tobool19, label %for.inc, label %if.then20, !dbg !10000

if.then20:                                        ; preds = %lor.lhs.false17, %if.else9
  call void @llvm.dbg.value(metadata i8 1, metadata !9964, metadata !DIExpression()), !dbg !9969
  br label %for.inc, !dbg !10001

for.inc:                                          ; preds = %lor.lhs.false17, %if.then, %if.then20, %if.then8
  %any_noncanonical_argtypes_p.3 = phi i8 [ %any_noncanonical_argtypes_p.0, %if.then ], [ %any_noncanonical_argtypes_p.0, %if.then8 ], [ 1, %if.then20 ], [ %any_noncanonical_argtypes_p.0, %lor.lhs.false17 ], !dbg !9972
  call void @llvm.dbg.value(metadata i8 %any_noncanonical_argtypes_p.3, metadata !9964, metadata !DIExpression()), !dbg !9969
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10002
  %8 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !10002
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !9963, metadata !DIExpression()), !dbg !9969
  br label %for.cond, !dbg !10003, !llvm.loop !10004

for.end.loopexit:                                 ; preds = %land.rhs
  %.lcssa = phi i8 [ %0, %land.rhs ], !dbg !9979
  %any_noncanonical_argtypes_p.0.lcssa3 = phi i8 [ %any_noncanonical_argtypes_p.0, %land.rhs ], !dbg !9972
  call void @llvm.dbg.value(metadata i8 %any_noncanonical_argtypes_p.0.lcssa3, metadata !9964, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata i8 %any_noncanonical_argtypes_p.0.lcssa3, metadata !9964, metadata !DIExpression()), !dbg !9969
  br label %for.end, !dbg !9977

for.end:                                          ; preds = %for.end.loopexit, %for.cond.for.end_crit_edge
  %any_noncanonical_argtypes_p.04 = phi i8 [ %any_noncanonical_argtypes_p.0.lcssa, %for.cond.for.end_crit_edge ], [ %any_noncanonical_argtypes_p.0.lcssa3, %for.end.loopexit ]
  %9 = phi i8 [ %.pre, %for.cond.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !9977
  call void @llvm.dbg.value(metadata i8 %any_noncanonical_argtypes_p.04, metadata !9964, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata i8 %any_noncanonical_argtypes_p.04, metadata !9964, metadata !DIExpression()), !dbg !9969
  %tobool23 = icmp eq i8 %9, 0, !dbg !9977
  %tobool26 = icmp ne i8 %any_noncanonical_argtypes_p.04, 0, !dbg !10006
  %or.cond = and i1 %tobool23, %tobool26, !dbg !10007
  br i1 %or.cond, label %for.cond28.preheader, label %cleanup, !dbg !10007

for.cond28.preheader:                             ; preds = %for.end
  br label %for.cond28, !dbg !10008

for.cond28:                                       ; preds = %for.cond28.preheader, %for.inc39
  %arg.1 = phi %union.tree_node* [ %15, %for.inc39 ], [ %argtypes, %for.cond28.preheader ], !dbg !10010
  %canon_argtypes.0 = phi %union.tree_node* [ %canon_argtypes.1, %for.inc39 ], [ null, %for.cond28.preheader ], !dbg !10011
  %is_void.0 = phi i8 [ %is_void.1, %for.inc39 ], [ 0, %for.cond28.preheader ], !dbg !10012
  call void @llvm.dbg.value(metadata i8 %is_void.0, metadata !9968, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata %union.tree_node* %canon_argtypes.0, metadata !9965, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.1, metadata !9963, metadata !DIExpression()), !dbg !9969
  %tobool29 = icmp eq %union.tree_node* %arg.1, null, !dbg !10008
  br i1 %tobool29, label %for.end42, label %for.body30, !dbg !10008

for.body30:                                       ; preds = %for.cond28
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !10013
  %cmp31 = icmp eq %union.tree_node* %arg.1, %10, !dbg !10017
  br i1 %cmp31, label %for.inc39, label %if.else33, !dbg !10018

if.else33:                                        ; preds = %for.body30
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10019
  %12 = bitcast %union.tree_node** %11 to %struct.tree_type**, !dbg !10019
  %13 = load %struct.tree_type*, %struct.tree_type** %12, align 8, !dbg !10019
  %canonical37 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 19, !dbg !10019
  %14 = load %union.tree_node*, %union.tree_node** %canonical37, align 8, !dbg !10019
  %call = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %14, %union.tree_node* %canon_argtypes.0) #8, !dbg !10019
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9965, metadata !DIExpression()), !dbg !10012
  br label %for.inc39

for.inc39:                                        ; preds = %if.else33, %for.body30
  %canon_argtypes.1 = phi %union.tree_node* [ %call, %if.else33 ], [ %canon_argtypes.0, %for.body30 ], !dbg !10012
  %is_void.1 = phi i8 [ %is_void.0, %if.else33 ], [ 1, %for.body30 ], !dbg !10012
  call void @llvm.dbg.value(metadata i8 %is_void.1, metadata !9968, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata %union.tree_node* %canon_argtypes.1, metadata !9965, metadata !DIExpression()), !dbg !10012
  %chain41 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10020
  %15 = load %union.tree_node*, %union.tree_node** %chain41, align 8, !dbg !10020
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !9963, metadata !DIExpression()), !dbg !9969
  br label %for.cond28, !dbg !10021, !llvm.loop !10022

for.end42:                                        ; preds = %for.cond28
  %canon_argtypes.0.lcssa = phi %union.tree_node* [ %canon_argtypes.0, %for.cond28 ], !dbg !10011
  %is_void.0.lcssa = phi i8 [ %is_void.0, %for.cond28 ], !dbg !10012
  call void @llvm.dbg.value(metadata %union.tree_node* %canon_argtypes.0.lcssa, metadata !9965, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i8 %is_void.0.lcssa, metadata !9968, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata %union.tree_node* %canon_argtypes.0.lcssa, metadata !9965, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i8 %is_void.0.lcssa, metadata !9968, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata %union.tree_node* %canon_argtypes.0.lcssa, metadata !9965, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i8 %is_void.0.lcssa, metadata !9968, metadata !DIExpression()), !dbg !10012
  %call43 = tail call %union.tree_node* @nreverse(%union.tree_node* %canon_argtypes.0.lcssa) #8, !dbg !10024
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !9965, metadata !DIExpression()), !dbg !10012
  %tobool44 = icmp eq i8 %is_void.0.lcssa, 0, !dbg !10025
  br i1 %tobool44, label %if.end47, label %if.then45, !dbg !10027

if.then45:                                        ; preds = %for.end42
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !10028
  %call46 = tail call %union.tree_node* @chainon(%union.tree_node* %call43, %union.tree_node* %16) #8, !dbg !10029
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !9965, metadata !DIExpression()), !dbg !10012
  br label %if.end47, !dbg !10030

if.end47:                                         ; preds = %for.end42, %if.then45
  %canon_argtypes.2 = phi %union.tree_node* [ %call46, %if.then45 ], [ %call43, %for.end42 ], !dbg !10012
  call void @llvm.dbg.value(metadata %union.tree_node* %canon_argtypes.2, metadata !9965, metadata !DIExpression()), !dbg !10012
  store i8 1, i8* %any_noncanonical_p, align 1, !dbg !10031
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end47
  %retval.0 = phi %union.tree_node* [ %canon_argtypes.2, %if.end47 ], [ %argtypes, %for.end ], !dbg !9969
  ret %union.tree_node* %retval.0, !dbg !10032
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_function_type_skip_args(%union.tree_node* %orig_type, %struct.bitmap_head_def* %args_to_skip) local_unnamed_addr #5 !dbg !10033 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type, metadata !10037, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %args_to_skip, metadata !10038, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10039, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10041, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata i32 0, metadata !10044, metadata !DIExpression()), !dbg !10045
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10046
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !10046
  br label %for.cond, !dbg !10048

for.cond:                                         ; preds = %for.inc, %entry
  %new_args.0 = phi %union.tree_node* [ null, %entry ], [ %new_args.1, %for.inc ], !dbg !10049
  %args.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !10045
  %args.0 = load %union.tree_node*, %union.tree_node** %args.0.in, align 8, !dbg !10050
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10044, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0, metadata !10040, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* %new_args.0, metadata !10041, metadata !DIExpression()), !dbg !10045
  %tobool = icmp ne %union.tree_node* %args.0, null, !dbg !10051
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !10053
  %cmp = icmp ne %union.tree_node* %args.0, %1, !dbg !10053
  %2 = and i1 %cmp, %tobool, !dbg !10053
  br i1 %2, label %for.body, label %for.end, !dbg !10054

for.body:                                         ; preds = %for.cond
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %args_to_skip, i32 %i.0) #7, !dbg !10055
  %tobool1 = icmp eq i32 %call, 0, !dbg !10055
  br i1 %tobool1, label %if.then, label %for.inc, !dbg !10057

if.then:                                          ; preds = %for.body
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10058
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !10058
  %call2 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %4, %union.tree_node* %new_args.0) #8, !dbg !10058
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !10041, metadata !DIExpression()), !dbg !10045
  br label %for.inc, !dbg !10059

for.inc:                                          ; preds = %for.body, %if.then
  %new_args.1 = phi %union.tree_node* [ %new_args.0, %for.body ], [ %call2, %if.then ], !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* %new_args.1, metadata !10041, metadata !DIExpression()), !dbg !10045
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10060
  %inc = add nuw nsw i32 %i.0, 1, !dbg !10061
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10044, metadata !DIExpression()), !dbg !10045
  br label %for.cond, !dbg !10062, !llvm.loop !10063

for.end:                                          ; preds = %for.cond
  %new_args.0.lcssa = phi %union.tree_node* [ %new_args.0, %for.cond ], !dbg !10049
  %args.0.lcssa = phi %union.tree_node* [ %args.0, %for.cond ], !dbg !10050
  call void @llvm.dbg.value(metadata %union.tree_node* %new_args.0.lcssa, metadata !10041, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* %new_args.0.lcssa, metadata !10041, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* %new_args.0.lcssa, metadata !10041, metadata !DIExpression()), !dbg !10045
  %call3 = tail call %union.tree_node* @nreverse(%union.tree_node* %new_args.0.lcssa) #8, !dbg !10065
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !10043, metadata !DIExpression()), !dbg !10045
  %tobool4 = icmp eq %union.tree_node* %args.0.lcssa, null, !dbg !10066
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !10068

if.then5:                                         ; preds = %for.end
  %tobool6 = icmp eq %union.tree_node* %call3, null, !dbg !10069
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !10072
  br i1 %tobool6, label %if.end11, label %if.then7, !dbg !10073

if.then7:                                         ; preds = %if.then5
  %chain9 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_args.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10074
  store %union.tree_node* %5, %union.tree_node** %chain9, align 8, !dbg !10075
  br label %if.end11, !dbg !10074

if.end11:                                         ; preds = %if.then5, %for.end, %if.then7
  %new_reversed.1 = phi %union.tree_node* [ %call3, %for.end ], [ %call3, %if.then7 ], [ %5, %if.then5 ], !dbg !10076
  call void @llvm.dbg.value(metadata %union.tree_node* %new_reversed.1, metadata !10043, metadata !DIExpression()), !dbg !10045
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10077
  %bf.load = load i64, i64* %6, align 8, !dbg !10077
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10079
  %cmp12 = icmp eq i64 %bf.cast1, 21, !dbg !10079
  br i1 %cmp12, label %lor.lhs.false, label %if.then15, !dbg !10080

lor.lhs.false:                                    ; preds = %if.end11
  %call13 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %args_to_skip, i32 0) #7, !dbg !10081
  %tobool14 = icmp eq i32 %call13, 0, !dbg !10081
  br i1 %tobool14, label %if.then15, label %if.else19, !dbg !10082

if.then15:                                        ; preds = %lor.lhs.false, %if.end11
  %call16 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %orig_type) #8, !dbg !10083
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !10039, metadata !DIExpression()), !dbg !10045
  %values18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10085
  %7 = bitcast i32* %values18 to %union.tree_node**, !dbg !10085
  store %union.tree_node* %new_reversed.1, %union.tree_node** %7, align 8, !dbg !10086
  br label %if.end27, !dbg !10087

if.else19:                                        ; preds = %lor.lhs.false
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10088
  %8 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !10088
  %call22 = tail call %union.tree_node* @build_function_type(%union.tree_node* %8, %union.tree_node* %new_reversed.1) #8, !dbg !10090
  %call23 = tail call %union.tree_node* @build_distinct_type_copy(%union.tree_node* %call22) #8, !dbg !10091
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !10039, metadata !DIExpression()), !dbg !10045
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !10092
  %9 = bitcast i24* %context to i64*, !dbg !10092
  %10 = load i64, i64* %9, align 8, !dbg !10092
  %context26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !10093
  %11 = bitcast i24* %context26 to i64*, !dbg !10094
  store i64 %10, i64* %11, align 8, !dbg !10094
  br label %if.end27

if.end27:                                         ; preds = %if.else19, %if.then15
  %new_type.0 = phi %union.tree_node* [ %call16, %if.then15 ], [ %call23, %if.else19 ], !dbg !10095
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type.0, metadata !10039, metadata !DIExpression()), !dbg !10045
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !10096
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !10096
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !10042, metadata !DIExpression()), !dbg !10045
  %cmp29 = icmp eq %union.tree_node* %13, %orig_type, !dbg !10097
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_type.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !10099
  br i1 %cmp29, label %if.else38, label %if.then30, !dbg !10100

if.then30:                                        ; preds = %if.end27
  store %union.tree_node* %13, %union.tree_node** %14, align 8, !dbg !10101
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !10103
  %16 = bitcast %union.tree_node** %15 to i64*, !dbg !10103
  %17 = load i64, i64* %16, align 8, !dbg !10103
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_type.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !10104
  %19 = bitcast %union.tree_node** %18 to i64*, !dbg !10105
  store i64 %17, i64* %19, align 8, !dbg !10105
  store %union.tree_node* %new_type.0, %union.tree_node** %15, align 8, !dbg !10106
  br label %if.end43, !dbg !10107

if.else38:                                        ; preds = %if.end27
  store %union.tree_node* %new_type.0, %union.tree_node** %14, align 8, !dbg !10108
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_type.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !10110
  store %union.tree_node* null, %union.tree_node** %20, align 8, !dbg !10111
  br label %if.end43

if.end43:                                         ; preds = %if.else38, %if.then30
  ret %union.tree_node* %new_type.0, !dbg !10112
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_function_decl_skip_args(%union.tree_node* %orig_decl, %struct.bitmap_head_def* %args_to_skip) local_unnamed_addr #5 !dbg !10113 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_decl, metadata !10115, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %args_to_skip, metadata !10116, metadata !DIExpression()), !dbg !10119
  %call = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %orig_decl) #8, !dbg !10120
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10117, metadata !DIExpression()), !dbg !10119
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10121
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10121
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10118, metadata !DIExpression()), !dbg !10119
  %call1 = tail call zeroext i8 @prototype_p(%union.tree_node* %0) #8, !dbg !10122
  %tobool = icmp eq i8 %call1, 0, !dbg !10122
  br i1 %tobool, label %if.end, label %if.then, !dbg !10124

if.then:                                          ; preds = %entry
  %call2 = tail call %union.tree_node* @build_function_type_skip_args(%union.tree_node* %0, %struct.bitmap_head_def* %args_to_skip) #8, !dbg !10125
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !10118, metadata !DIExpression()), !dbg !10119
  br label %if.end, !dbg !10126

if.end:                                           ; preds = %entry, %if.then
  %new_type.0 = phi %union.tree_node* [ %call2, %if.then ], [ %0, %entry ], !dbg !10119
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type.0, metadata !10118, metadata !DIExpression()), !dbg !10119
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10127
  store %union.tree_node* %new_type.0, %union.tree_node** %type4, align 8, !dbg !10128
  %call5 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %args_to_skip, i32 0) #7, !dbg !10129
  %tobool6 = icmp eq i32 %call5, 0, !dbg !10129
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10131

if.then7:                                         ; preds = %if.end
  %vindex = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 4, !dbg !10132
  store %union.tree_node* null, %union.tree_node** %vindex, align 8, !dbg !10133
  br label %if.end8, !dbg !10132

if.end8:                                          ; preds = %if.end, %if.then7
  ret %union.tree_node* %call, !dbg !10134
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @prototype_p(%union.tree_node* %fntype) local_unnamed_addr #5 !dbg !10135 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype, metadata !10137, metadata !DIExpression()), !dbg !10139
  %cmp = icmp eq %union.tree_node* %fntype, null, !dbg !10140
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !10140

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 10398, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !10140
  br label %cond.end, !dbg !10140

cond.end:                                         ; preds = %entry, %cond.true
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %fntype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10141
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !10141
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !10141
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !10138, metadata !DIExpression()), !dbg !10139
  %cmp1 = icmp ne %union.tree_node* %1, null, !dbg !10142
  %conv2 = zext i1 %cmp1 to i8, !dbg !10143
  ret i8 %conv2, !dbg !10144
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_function_type_list(%union.tree_node* %return_type, ...) local_unnamed_addr #5 !dbg !10145 {
entry:
  %p = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %return_type, metadata !10149, metadata !DIExpression()), !dbg !10152
  %0 = bitcast [1 x %struct.__va_list_tag]* %p to i8*, !dbg !10153
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !10153
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %p, metadata !10151, metadata !DIExpression()), !dbg !10154
  call void @llvm.va_start(i8* %0), !dbg !10155
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, !dbg !10156
  %call = call fastcc %union.tree_node* @build_function_type_list_1(i8 zeroext 0, %union.tree_node* %return_type, %struct.__va_list_tag* nonnull %arraydecay2) #8, !dbg !10157
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10150, metadata !DIExpression()), !dbg !10152
  call void @llvm.va_end(i8* nonnull %0), !dbg !10158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !10159
  ret %union.tree_node* %call, !dbg !10160
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @build_function_type_list_1(i8 zeroext %vaargs, %union.tree_node* %return_type, %struct.__va_list_tag* %argp) unnamed_addr #5 !dbg !10161 {
entry:
  call void @llvm.dbg.value(metadata i8 %vaargs, metadata !10165, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.value(metadata %union.tree_node* %return_type, metadata !10166, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %argp, metadata !10167, metadata !DIExpression()), !dbg !10171
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 0, !dbg !10172
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !10172
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !10172
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !10172

vaarg.in_reg:                                     ; preds = %entry
  %0 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 3, !dbg !10172
  %reg_save_area = load i8*, i8** %0, align 8, !dbg !10172
  %1 = sext i32 %gp_offset to i64, !dbg !10172
  %2 = getelementptr i8, i8* %reg_save_area, i64 %1, !dbg !10172
  %3 = add i32 %gp_offset, 8, !dbg !10172
  store i32 %3, i32* %gp_offset_p, align 8, !dbg !10172
  br label %vaarg.end, !dbg !10172

vaarg.in_mem:                                     ; preds = %entry
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 2, !dbg !10172
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !10172
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !10172
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !10172
  br label %vaarg.end, !dbg !10172

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %2, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10169, metadata !DIExpression()), !dbg !10171
  %overflow_arg_area_p7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 2, !dbg !10173
  %4 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 3, !dbg !10173
  br label %for.cond, !dbg !10176

for.cond:                                         ; preds = %vaarg.end10, %vaarg.end
  %t.0.in.in = phi i8* [ %vaarg.addr.in, %vaarg.end ], [ %vaarg.addr11.in, %vaarg.end10 ]
  %args.0 = phi %union.tree_node* [ null, %vaarg.end ], [ %call, %vaarg.end10 ], !dbg !10177
  %t.0.in = bitcast i8* %t.0.in.in to %union.tree_node**, !dbg !10171
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !10171
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0, metadata !10169, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !10168, metadata !DIExpression()), !dbg !10171
  %cmp = icmp eq %union.tree_node* %t.0, null, !dbg !10178
  br i1 %cmp, label %for.end, label %for.body, !dbg !10179

for.body:                                         ; preds = %for.cond
  %call = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* nonnull %t.0, %union.tree_node* %args.0) #8, !dbg !10180
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10169, metadata !DIExpression()), !dbg !10171
  %gp_offset2 = load i32, i32* %gp_offset_p, align 8, !dbg !10181
  %fits_in_gp3 = icmp ult i32 %gp_offset2, 41, !dbg !10181
  br i1 %fits_in_gp3, label %vaarg.in_reg4, label %vaarg.in_mem6, !dbg !10181

vaarg.in_reg4:                                    ; preds = %for.body
  %reg_save_area5 = load i8*, i8** %4, align 8, !dbg !10181
  %5 = sext i32 %gp_offset2 to i64, !dbg !10181
  %6 = getelementptr i8, i8* %reg_save_area5, i64 %5, !dbg !10181
  %7 = add i32 %gp_offset2, 8, !dbg !10181
  store i32 %7, i32* %gp_offset_p, align 8, !dbg !10181
  br label %vaarg.end10, !dbg !10181

vaarg.in_mem6:                                    ; preds = %for.body
  %overflow_arg_area8 = load i8*, i8** %overflow_arg_area_p7, align 8, !dbg !10181
  %overflow_arg_area.next9 = getelementptr i8, i8* %overflow_arg_area8, i64 8, !dbg !10181
  store i8* %overflow_arg_area.next9, i8** %overflow_arg_area_p7, align 8, !dbg !10181
  br label %vaarg.end10, !dbg !10181

vaarg.end10:                                      ; preds = %vaarg.in_mem6, %vaarg.in_reg4
  %vaarg.addr11.in = phi i8* [ %6, %vaarg.in_reg4 ], [ %overflow_arg_area8, %vaarg.in_mem6 ]
  br label %for.cond, !dbg !10182, !llvm.loop !10183

for.end:                                          ; preds = %for.cond
  %args.0.lcssa = phi %union.tree_node* [ %args.0, %for.cond ], !dbg !10177
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0.lcssa, metadata !10169, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0.lcssa, metadata !10169, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0.lcssa, metadata !10169, metadata !DIExpression()), !dbg !10171
  %tobool = icmp eq i8 %vaargs, 0, !dbg !10185
  br i1 %tobool, label %if.else, label %if.then, !dbg !10187

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0.lcssa, metadata !10170, metadata !DIExpression()), !dbg !10171
  %cmp12 = icmp eq %union.tree_node* %args.0.lcssa, null, !dbg !10188
  br i1 %cmp12, label %if.end, label %if.then13, !dbg !10191

if.then13:                                        ; preds = %if.then
  %call14 = tail call %union.tree_node* @nreverse(%union.tree_node* nonnull %args.0.lcssa) #8, !dbg !10192
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !10169, metadata !DIExpression()), !dbg !10171
  br label %if.end, !dbg !10193

if.end:                                           ; preds = %if.then, %if.then13
  %args.1 = phi %union.tree_node* [ %call14, %if.then13 ], [ null, %if.then ], !dbg !10171
  call void @llvm.dbg.value(metadata %union.tree_node* %args.1, metadata !10169, metadata !DIExpression()), !dbg !10171
  %cmp15 = icmp ne %union.tree_node* %args.1, null, !dbg !10194
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !10194
  %cmp16 = icmp ne %union.tree_node* %args.0.lcssa, %8, !dbg !10194
  %or.cond = and i1 %cmp15, %cmp16, !dbg !10194
  br i1 %or.cond, label %if.end22, label %cond.true, !dbg !10194

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 7286, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !10194
  br label %if.end22, !dbg !10194

if.else:                                          ; preds = %for.end
  %cmp17 = icmp eq %union.tree_node* %args.0.lcssa, null, !dbg !10195
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !10197

if.then18:                                        ; preds = %if.else
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !10198
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !10169, metadata !DIExpression()), !dbg !10171
  br label %if.end22, !dbg !10199

if.else19:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* %args.0.lcssa, metadata !10170, metadata !DIExpression()), !dbg !10171
  %call20 = tail call %union.tree_node* @nreverse(%union.tree_node* nonnull %args.0.lcssa) #8, !dbg !10200
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !10169, metadata !DIExpression()), !dbg !10171
  %10 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55) to i64*), align 8, !dbg !10202
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10203
  %11 = bitcast %union.tree_node** %chain to i64*, !dbg !10204
  store i64 %10, i64* %11, align 8, !dbg !10204
  br label %if.end22

if.end22:                                         ; preds = %if.then18, %if.else19, %cond.true, %if.end
  %args.3 = phi %union.tree_node* [ %args.1, %if.end ], [ %args.1, %cond.true ], [ %9, %if.then18 ], [ %call20, %if.else19 ], !dbg !10205
  call void @llvm.dbg.value(metadata %union.tree_node* %args.3, metadata !10169, metadata !DIExpression()), !dbg !10171
  %call23 = tail call %union.tree_node* @build_function_type(%union.tree_node* %return_type, %union.tree_node* %args.3) #8, !dbg !10206
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !10169, metadata !DIExpression()), !dbg !10171
  ret %union.tree_node* %call23, !dbg !10207
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_varargs_function_type_list(%union.tree_node* %return_type, ...) local_unnamed_addr #5 !dbg !10208 {
entry:
  %p = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %return_type, metadata !10210, metadata !DIExpression()), !dbg !10213
  %0 = bitcast [1 x %struct.__va_list_tag]* %p to i8*, !dbg !10214
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !10214
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %p, metadata !10212, metadata !DIExpression()), !dbg !10215
  call void @llvm.va_start(i8* %0), !dbg !10216
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %p, i64 0, i64 0, !dbg !10217
  %call = call fastcc %union.tree_node* @build_function_type_list_1(i8 zeroext 1, %union.tree_node* %return_type, %struct.__va_list_tag* nonnull %arraydecay2) #8, !dbg !10218
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10211, metadata !DIExpression()), !dbg !10213
  call void @llvm.va_end(i8* nonnull %0), !dbg !10219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !10220
  ret %union.tree_node* %call, !dbg !10221
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_method_type_directly(%union.tree_node* %basetype, %union.tree_node* %rettype, %union.tree_node* %argtypes) local_unnamed_addr #5 !dbg !10222 {
entry:
  %any_structural_p = alloca i8, align 1
  %any_noncanonical_p = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %basetype, metadata !10224, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata %union.tree_node* %rettype, metadata !10225, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata %union.tree_node* %argtypes, metadata !10226, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i32 0, metadata !10229, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i8* %any_structural_p, metadata !10230, metadata !DIExpression(DW_OP_deref)), !dbg !10233
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %any_structural_p) #6, !dbg !10234
  call void @llvm.dbg.value(metadata i8* %any_noncanonical_p, metadata !10231, metadata !DIExpression(DW_OP_deref)), !dbg !10233
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %any_noncanonical_p) #6, !dbg !10234
  %call = tail call %union.tree_node* @make_node_stat(i32 21) #8, !dbg !10235
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10227, metadata !DIExpression()), !dbg !10233
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %basetype, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !10236
  %1 = bitcast %union.tree_node** %0 to i64*, !dbg !10236
  %2 = load i64, i64* %1, align 8, !dbg !10236
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10237
  %3 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !10238
  store i64 %2, i64* %3, align 8, !dbg !10238
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10239
  store %union.tree_node* %rettype, %union.tree_node** %type2, align 8, !dbg !10240
  %call3 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %basetype) #8, !dbg !10241
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !10228, metadata !DIExpression()), !dbg !10233
  %call4 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call3, %union.tree_node* %argtypes) #8, !dbg !10242
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !10226, metadata !DIExpression()), !dbg !10233
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10243
  %4 = bitcast i32* %values to %union.tree_node**, !dbg !10243
  store %union.tree_node* %call4, %union.tree_node** %4, align 8, !dbg !10244
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %basetype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10245
  %5 = bitcast i40* %uid to i8*, !dbg !10245
  %call7 = tail call i32 @iterative_hash(i8* nonnull %5, i64 4, i32 0) #7, !dbg !10245
  call void @llvm.dbg.value(metadata i32 %call7, metadata !10229, metadata !DIExpression()), !dbg !10233
  %uid9 = getelementptr inbounds %union.tree_node, %union.tree_node* %rettype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10246
  %6 = bitcast i40* %uid9 to i8*, !dbg !10246
  %call10 = tail call i32 @iterative_hash(i8* nonnull %6, i64 4, i32 %call7) #7, !dbg !10246
  call void @llvm.dbg.value(metadata i32 %call10, metadata !10229, metadata !DIExpression()), !dbg !10233
  %call11 = tail call fastcc i32 @type_hash_list(%union.tree_node* %call4, i32 %call10) #8, !dbg !10247
  call void @llvm.dbg.value(metadata i32 %call11, metadata !10229, metadata !DIExpression()), !dbg !10233
  %call12 = tail call %union.tree_node* @type_hash_canon(i32 %call11, %union.tree_node* %call) #8, !dbg !10248
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !10227, metadata !DIExpression()), !dbg !10233
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %basetype, i64 0, i32 0, i32 0, i32 1, !dbg !10249
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !10249
  %cmp = icmp eq %union.tree_node* %8, null, !dbg !10249
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10250

lor.rhs:                                          ; preds = %entry
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %rettype, i64 0, i32 0, i32 0, i32 1, !dbg !10251
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !10251
  %cmp16 = icmp eq %union.tree_node* %10, null, !dbg !10251
  %phitmp = zext i1 %cmp16 to i8, !dbg !10250
  br label %lor.end, !dbg !10250

lor.end:                                          ; preds = %lor.rhs, %entry
  %11 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10230, metadata !DIExpression()), !dbg !10233
  store i8 %11, i8* %any_structural_p, align 1, !dbg !10252
  %cmp19 = icmp eq %union.tree_node* %8, %basetype, !dbg !10253
  br i1 %cmp19, label %lor.rhs21, label %lor.end26, !dbg !10254

lor.rhs21:                                        ; preds = %lor.end
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %rettype, i64 0, i32 0, i32 0, i32 1, !dbg !10255
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !10255
  %cmp24 = icmp ne %union.tree_node* %13, %rettype, !dbg !10256
  %phitmp1 = zext i1 %cmp24 to i8, !dbg !10254
  br label %lor.end26, !dbg !10254

lor.end26:                                        ; preds = %lor.end, %lor.rhs21
  %14 = phi i8 [ 1, %lor.end ], [ %phitmp1, %lor.rhs21 ]
  call void @llvm.dbg.value(metadata i8 %14, metadata !10231, metadata !DIExpression()), !dbg !10233
  store i8 %14, i8* %any_noncanonical_p, align 1, !dbg !10257
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10258
  %15 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !10258
  call void @llvm.dbg.value(metadata i8* %any_structural_p, metadata !10230, metadata !DIExpression(DW_OP_deref)), !dbg !10233
  call void @llvm.dbg.value(metadata i8* %any_noncanonical_p, metadata !10231, metadata !DIExpression(DW_OP_deref)), !dbg !10233
  %call30 = call fastcc %union.tree_node* @maybe_canonicalize_argtypes(%union.tree_node* %15, i8* nonnull %any_structural_p, i8* nonnull %any_noncanonical_p) #8, !dbg !10259
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !10232, metadata !DIExpression()), !dbg !10233
  %16 = load i8, i8* %any_structural_p, align 1, !dbg !10260
  call void @llvm.dbg.value(metadata i8 %16, metadata !10230, metadata !DIExpression()), !dbg !10233
  %tobool = icmp eq i8 %16, 0, !dbg !10260
  br i1 %tobool, label %if.else, label %if.then, !dbg !10262

if.then:                                          ; preds = %lor.end26
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 1, !dbg !10263
  store %union.tree_node* null, %union.tree_node** %17, align 8, !dbg !10263
  br label %if.end42, !dbg !10263

if.else:                                          ; preds = %lor.end26
  %18 = load i8, i8* %any_noncanonical_p, align 1, !dbg !10264
  call void @llvm.dbg.value(metadata i8 %18, metadata !10231, metadata !DIExpression()), !dbg !10233
  %tobool33 = icmp eq i8 %18, 0, !dbg !10264
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !10266

if.then34:                                        ; preds = %if.else
  %19 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !10267
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %rettype, i64 0, i32 0, i32 0, i32 1, !dbg !10268
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !10268
  %call39 = call %union.tree_node* @build_method_type_directly(%union.tree_node* %19, %union.tree_node* %21, %union.tree_node* %call30) #8, !dbg !10269
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 1, !dbg !10270
  store %union.tree_node* %call39, %union.tree_node** %22, align 8, !dbg !10271
  br label %if.end42, !dbg !10270

if.end42:                                         ; preds = %if.else, %if.then34, %if.then
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10272
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !10272
  %cmp44 = icmp eq %union.tree_node* %24, null, !dbg !10272
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10274

if.then46:                                        ; preds = %if.end42
  call void @layout_type(%union.tree_node* %call12) #7, !dbg !10275
  br label %if.end47, !dbg !10275

if.end47:                                         ; preds = %if.end42, %if.then46
  call void @llvm.dbg.value(metadata i8* %any_noncanonical_p, metadata !10231, metadata !DIExpression(DW_OP_deref)), !dbg !10233
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %any_noncanonical_p) #6, !dbg !10276
  call void @llvm.dbg.value(metadata i8* %any_structural_p, metadata !10230, metadata !DIExpression(DW_OP_deref)), !dbg !10233
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %any_structural_p) #6, !dbg !10276
  ret %union.tree_node* %call12, !dbg !10277
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_method_type(%union.tree_node* %basetype, %union.tree_node* %type) local_unnamed_addr #5 !dbg !10278 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %basetype, metadata !10280, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10281, metadata !DIExpression()), !dbg !10282
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10283
  %bf.load = load i64, i64* %0, align 8, !dbg !10283
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10283
  %cmp = icmp eq i64 %bf.cast1, 20, !dbg !10283
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10283

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 7401, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !10283
  br label %cond.end, !dbg !10283

cond.end:                                         ; preds = %entry, %cond.true
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10284
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !10284
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10285
  %2 = bitcast i32* %values to %union.tree_node**, !dbg !10285
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !10285
  %call = tail call %union.tree_node* @build_method_type_directly(%union.tree_node* %basetype, %union.tree_node* %1, %union.tree_node* %3) #8, !dbg !10286
  ret %union.tree_node* %call, !dbg !10287
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_offset_type(%union.tree_node* %basetype, %union.tree_node* %type) local_unnamed_addr #5 !dbg !10288 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %basetype, metadata !10290, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10291, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.value(metadata i32 0, metadata !10293, metadata !DIExpression()), !dbg !10294
  %call = tail call %union.tree_node* @make_node_stat(i32 5) #8, !dbg !10295
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10292, metadata !DIExpression()), !dbg !10294
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %basetype, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !10296
  %1 = bitcast %union.tree_node** %0 to i64*, !dbg !10296
  %2 = load i64, i64* %1, align 8, !dbg !10296
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10297
  %3 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !10298
  store i64 %2, i64* %3, align 8, !dbg !10298
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10299
  store %union.tree_node* %type, %union.tree_node** %type3, align 8, !dbg !10300
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %basetype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10301
  %4 = bitcast i40* %uid to i8*, !dbg !10301
  %call5 = tail call i32 @iterative_hash(i8* nonnull %4, i64 4, i32 0) #7, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %call5, metadata !10293, metadata !DIExpression()), !dbg !10294
  %uid7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10302
  %5 = bitcast i40* %uid7 to i8*, !dbg !10302
  %call8 = tail call i32 @iterative_hash(i8* nonnull %5, i64 4, i32 %call5) #7, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %call8, metadata !10293, metadata !DIExpression()), !dbg !10294
  %call9 = tail call %union.tree_node* @type_hash_canon(i32 %call8, %union.tree_node* %call) #8, !dbg !10303
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !10292, metadata !DIExpression()), !dbg !10294
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10304
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !10304
  %cmp = icmp eq %union.tree_node* %7, null, !dbg !10304
  br i1 %cmp, label %if.then, label %if.end, !dbg !10306

if.then:                                          ; preds = %entry
  tail call void @layout_type(%union.tree_node* %call9) #7, !dbg !10307
  br label %if.end, !dbg !10307

if.end:                                           ; preds = %entry, %if.then
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 1, !dbg !10308
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !10308
  %cmp12 = icmp eq %union.tree_node* %9, %call9, !dbg !10310
  br i1 %cmp12, label %if.then13, label %if.end44, !dbg !10311

if.then13:                                        ; preds = %if.end
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %basetype, i64 0, i32 0, i32 0, i32 1, !dbg !10312
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !10312
  %cmp16 = icmp eq %union.tree_node* %11, null, !dbg !10312
  br i1 %cmp16, label %if.then20, label %lor.lhs.false, !dbg !10315

lor.lhs.false:                                    ; preds = %if.then13
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1, !dbg !10316
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !10316
  %cmp19 = icmp eq %union.tree_node* %13, null, !dbg !10316
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !10317

if.then20:                                        ; preds = %lor.lhs.false, %if.then13
  store %union.tree_node* null, %union.tree_node** %8, align 8, !dbg !10318
  br label %if.end44, !dbg !10318

if.else:                                          ; preds = %lor.lhs.false
  %14 = bitcast %union.tree_node** %0 to %struct.tree_type**, !dbg !10319
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !10319
  %canonical26 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 19, !dbg !10319
  %16 = load %union.tree_node*, %union.tree_node** %canonical26, align 8, !dbg !10319
  %cmp27 = icmp eq %union.tree_node* %16, %basetype, !dbg !10321
  br i1 %cmp27, label %lor.lhs.false28, label %if.then32, !dbg !10322

lor.lhs.false28:                                  ; preds = %if.else
  %cmp31 = icmp eq %union.tree_node* %13, %type, !dbg !10323
  br i1 %cmp31, label %if.end44, label %if.then32, !dbg !10324

if.then32:                                        ; preds = %lor.lhs.false28, %if.else
  %call39 = tail call %union.tree_node* @build_offset_type(%union.tree_node* %16, %union.tree_node* nonnull %13) #8, !dbg !10325
  store %union.tree_node* %call39, %union.tree_node** %8, align 8, !dbg !10326
  ret %union.tree_node* %call9, !dbg !10327

if.end44:                                         ; preds = %lor.lhs.false28, %if.then20, %if.end
  ret %union.tree_node* %call9, !dbg !10327
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @excess_precision_type(%union.tree_node* %type) local_unnamed_addr #5 !dbg !10328 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10330, metadata !DIExpression()), !dbg !10334
  %0 = load i32, i32* @flag_excess_precision, align 4, !dbg !10335
  %cmp = icmp eq i32 %0, 1, !dbg !10336
  br i1 %cmp, label %if.end231, label %if.then, !dbg !10337

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @ix86_fpmath, align 4, !dbg !10338
  %and = and i32 %1, 3, !dbg !10338
  %cmp1 = icmp eq i32 %and, 3, !dbg !10338
  br i1 %cmp1, label %cond.end, label %cond.false, !dbg !10338

cond.false:                                       ; preds = %if.then
  %and2 = and i32 %1, 2, !dbg !10338
  %2 = xor i32 %and2, 2, !dbg !10338
  br label %cond.end, !dbg !10338

cond.end:                                         ; preds = %if.then, %cond.false
  %cond4 = phi i32 [ %2, %cond.false ], [ -1, %if.then ], !dbg !10338
  call void @llvm.dbg.value(metadata i32 %cond4, metadata !10331, metadata !DIExpression()), !dbg !10339
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10340
  %bf.load = load i64, i64* %3, align 8, !dbg !10340
  %4 = trunc i64 %bf.load to i16, !dbg !10340
  switch i16 %4, label %cleanup [
    i16 9, label %sw.bb
    i16 13, label %sw.bb100
  ], !dbg !10341

sw.bb:                                            ; preds = %cond.end
  switch i32 %cond4, label %sw.default [
    i32 1, label %sw.bb5
    i32 2, label %sw.bb35
  ], !dbg !10342

sw.bb5:                                           ; preds = %sw.bb
  %bf.cast922 = and i64 %bf.load, 65535, !dbg !10344
  %cmp10 = icmp eq i64 %bf.cast922, 14, !dbg !10344
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !10344

cond.true11:                                      ; preds = %sw.bb5
  %call = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !10344
  br label %cond.end16, !dbg !10344

cond.false12:                                     ; preds = %sw.bb5
  %type13 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !10344
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type13, i64 0, i32 6, !dbg !10344
  %bf.load14 = load i32, i32* %mode, align 4, !dbg !10344
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !10344
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !10344
  br label %cond.end16, !dbg !10344

cond.end16:                                       ; preds = %cond.false12, %cond.true11
  %cond17 = phi i32 [ %call, %cond.true11 ], [ %bf.clear15, %cond.false12 ], !dbg !10344
  %5 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31) to i64**), align 8, !dbg !10347
  %bf.load19 = load i64, i64* %5, align 8, !dbg !10347
  %bf.cast2123 = and i64 %bf.load19, 65535, !dbg !10347
  %cmp22 = icmp eq i64 %bf.cast2123, 14, !dbg !10347
  br i1 %cmp22, label %cond.true23, label %cond.false25, !dbg !10347

cond.true23:                                      ; preds = %cond.end16
  %.cast24 = bitcast i64* %5 to %union.tree_node*, !dbg !10347
  %call24 = tail call i32 @vector_type_mode(%union.tree_node* %.cast24) #7, !dbg !10347
  br label %cond.end31, !dbg !10347

cond.false25:                                     ; preds = %cond.end16
  %type26 = bitcast i64* %5 to %struct.tree_type*, !dbg !10347
  %mode27 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type26, i64 0, i32 6, !dbg !10347
  %bf.load28 = load i32, i32* %mode27, align 4, !dbg !10347
  %bf.lshr29 = lshr i32 %bf.load28, 16, !dbg !10347
  %bf.clear30 = and i32 %bf.lshr29, 255, !dbg !10347
  br label %cond.end31, !dbg !10347

cond.end31:                                       ; preds = %cond.false25, %cond.true23
  %cond32 = phi i32 [ %call24, %cond.true23 ], [ %bf.clear30, %cond.false25 ], !dbg !10347
  %cmp33 = icmp eq i32 %cond17, %cond32, !dbg !10348
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !10349
  br label %cleanup, !dbg !10350

sw.bb35:                                          ; preds = %sw.bb
  %bf.cast3916 = and i64 %bf.load, 65535, !dbg !10351
  %cmp40 = icmp eq i64 %bf.cast3916, 14, !dbg !10351
  br i1 %cmp40, label %cond.true41, label %cond.false43, !dbg !10351

cond.true41:                                      ; preds = %sw.bb35
  %call42 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !10351
  br label %cond.end49, !dbg !10351

cond.false43:                                     ; preds = %sw.bb35
  %type44 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !10351
  %mode45 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type44, i64 0, i32 6, !dbg !10351
  %bf.load46 = load i32, i32* %mode45, align 4, !dbg !10351
  %bf.lshr47 = lshr i32 %bf.load46, 16, !dbg !10351
  %bf.clear48 = and i32 %bf.lshr47, 255, !dbg !10351
  br label %cond.end49, !dbg !10351

cond.end49:                                       ; preds = %cond.false43, %cond.true41
  %cond50 = phi i32 [ %call42, %cond.true41 ], [ %bf.clear48, %cond.false43 ], !dbg !10351
  %7 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31) to i64**), align 8, !dbg !10353
  %bf.load52 = load i64, i64* %7, align 8, !dbg !10353
  %bf.cast5417 = and i64 %bf.load52, 65535, !dbg !10353
  %cmp55 = icmp eq i64 %bf.cast5417, 14, !dbg !10353
  br i1 %cmp55, label %cond.true56, label %cond.false58, !dbg !10353

cond.true56:                                      ; preds = %cond.end49
  %.cast18 = bitcast i64* %7 to %union.tree_node*, !dbg !10353
  %call57 = tail call i32 @vector_type_mode(%union.tree_node* %.cast18) #7, !dbg !10353
  br label %cond.end64, !dbg !10353

cond.false58:                                     ; preds = %cond.end49
  %type59 = bitcast i64* %7 to %struct.tree_type*, !dbg !10353
  %mode60 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i64 0, i32 6, !dbg !10353
  %bf.load61 = load i32, i32* %mode60, align 4, !dbg !10353
  %bf.lshr62 = lshr i32 %bf.load61, 16, !dbg !10353
  %bf.clear63 = and i32 %bf.lshr62, 255, !dbg !10353
  br label %cond.end64, !dbg !10353

cond.end64:                                       ; preds = %cond.false58, %cond.true56
  %cond65 = phi i32 [ %call57, %cond.true56 ], [ %bf.clear63, %cond.false58 ], !dbg !10353
  %cmp66 = icmp eq i32 %cond50, %cond65, !dbg !10354
  br i1 %cmp66, label %if.then98, label %lor.lhs.false, !dbg !10355

lor.lhs.false:                                    ; preds = %cond.end64
  %bf.load68 = load i64, i64* %3, align 8, !dbg !10356
  %bf.cast7019 = and i64 %bf.load68, 65535, !dbg !10356
  %cmp71 = icmp eq i64 %bf.cast7019, 14, !dbg !10356
  br i1 %cmp71, label %cond.true72, label %cond.false74, !dbg !10356

cond.true72:                                      ; preds = %lor.lhs.false
  %call73 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !10356
  br label %cond.end80, !dbg !10356

cond.false74:                                     ; preds = %lor.lhs.false
  %type75 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !10356
  %mode76 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i64 0, i32 6, !dbg !10356
  %bf.load77 = load i32, i32* %mode76, align 4, !dbg !10356
  %bf.lshr78 = lshr i32 %bf.load77, 16, !dbg !10356
  %bf.clear79 = and i32 %bf.lshr78, 255, !dbg !10356
  br label %cond.end80, !dbg !10356

cond.end80:                                       ; preds = %cond.false74, %cond.true72
  %cond81 = phi i32 [ %call73, %cond.true72 ], [ %bf.clear79, %cond.false74 ], !dbg !10356
  %8 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32) to i64**), align 16, !dbg !10357
  %bf.load83 = load i64, i64* %8, align 8, !dbg !10357
  %bf.cast8520 = and i64 %bf.load83, 65535, !dbg !10357
  %cmp86 = icmp eq i64 %bf.cast8520, 14, !dbg !10357
  br i1 %cmp86, label %cond.true87, label %cond.false89, !dbg !10357

cond.true87:                                      ; preds = %cond.end80
  %.cast21 = bitcast i64* %8 to %union.tree_node*, !dbg !10357
  %call88 = tail call i32 @vector_type_mode(%union.tree_node* %.cast21) #7, !dbg !10357
  br label %cond.end95, !dbg !10357

cond.false89:                                     ; preds = %cond.end80
  %type90 = bitcast i64* %8 to %struct.tree_type*, !dbg !10357
  %mode91 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type90, i64 0, i32 6, !dbg !10357
  %bf.load92 = load i32, i32* %mode91, align 4, !dbg !10357
  %bf.lshr93 = lshr i32 %bf.load92, 16, !dbg !10357
  %bf.clear94 = and i32 %bf.lshr93, 255, !dbg !10357
  br label %cond.end95, !dbg !10357

cond.end95:                                       ; preds = %cond.false89, %cond.true87
  %cond96 = phi i32 [ %call88, %cond.true87 ], [ %bf.clear94, %cond.false89 ], !dbg !10357
  %cmp97 = icmp eq i32 %cond81, %cond96, !dbg !10358
  br i1 %cmp97, label %if.then98, label %cleanup, !dbg !10359

if.then98:                                        ; preds = %cond.end95, %cond.end64
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !10360
  br label %cleanup, !dbg !10361

sw.default:                                       ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 7543, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !10362
  br label %cleanup, !dbg !10363

sw.bb100:                                         ; preds = %cond.end
  %type101 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10364
  %10 = bitcast %union.tree_node** %type101 to i64**, !dbg !10364
  %11 = load i64*, i64** %10, align 8, !dbg !10364
  %bf.load103 = load i64, i64* %11, align 8, !dbg !10364
  %bf.cast1054 = and i64 %bf.load103, 65535, !dbg !10366
  %cmp106 = icmp eq i64 %bf.cast1054, 9, !dbg !10366
  br i1 %cmp106, label %if.end108, label %cleanup, !dbg !10367

if.end108:                                        ; preds = %sw.bb100
  switch i32 %cond4, label %sw.default227 [
    i32 1, label %sw.bb109
    i32 2, label %sw.bb149
  ], !dbg !10368

sw.bb109:                                         ; preds = %if.end108
  br i1 false, label %cond.true117, label %cond.false121, !dbg !10369

cond.true117:                                     ; preds = %sw.bb109
  br label %cond.end129, !dbg !10369

cond.false121:                                    ; preds = %sw.bb109
  %type124 = bitcast i64* %11 to %struct.tree_type*, !dbg !10369
  %mode125 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type124, i64 0, i32 6, !dbg !10369
  %bf.load126 = load i32, i32* %mode125, align 4, !dbg !10369
  %bf.lshr127 = lshr i32 %bf.load126, 16, !dbg !10369
  %bf.clear128 = and i32 %bf.lshr127, 255, !dbg !10369
  %.pre26 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31) to i64**), align 8, !dbg !10372
  %bf.load132.pre = load i64, i64* %.pre26, align 8, !dbg !10372
  %phitmp29 = and i64 %bf.load132.pre, 65535, !dbg !10369
  %phitmp30 = icmp eq i64 %phitmp29, 14, !dbg !10369
  br label %cond.end129, !dbg !10369

cond.end129:                                      ; preds = %cond.false121, %cond.true117
  %bf.load132 = phi i1 [ false, %cond.true117 ], [ %phitmp30, %cond.false121 ]
  %12 = phi i64* [ undef, %cond.true117 ], [ %.pre26, %cond.false121 ], !dbg !10372
  %cond130 = phi i32 [ undef, %cond.true117 ], [ %bf.clear128, %cond.false121 ], !dbg !10369
  br i1 %bf.load132, label %cond.true136, label %cond.false138, !dbg !10372

cond.true136:                                     ; preds = %cond.end129
  %.cast15 = bitcast i64* %12 to %union.tree_node*, !dbg !10372
  %call137 = tail call i32 @vector_type_mode(%union.tree_node* %.cast15) #7, !dbg !10372
  br label %cond.end144, !dbg !10372

cond.false138:                                    ; preds = %cond.end129
  %type139 = bitcast i64* %12 to %struct.tree_type*, !dbg !10372
  %mode140 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type139, i64 0, i32 6, !dbg !10372
  %bf.load141 = load i32, i32* %mode140, align 4, !dbg !10372
  %bf.lshr142 = lshr i32 %bf.load141, 16, !dbg !10372
  %bf.clear143 = and i32 %bf.lshr142, 255, !dbg !10372
  br label %cond.end144, !dbg !10372

cond.end144:                                      ; preds = %cond.false138, %cond.true136
  %cond145 = phi i32 [ %call137, %cond.true136 ], [ %bf.clear143, %cond.false138 ], !dbg !10372
  %cmp146 = icmp eq i32 %cond130, %cond145, !dbg !10373
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 29), align 8, !dbg !10374
  br label %cleanup, !dbg !10375

sw.bb149:                                         ; preds = %if.end108
  br i1 false, label %cond.true157, label %cond.false161, !dbg !10376

cond.true157:                                     ; preds = %sw.bb149
  br label %cond.end169, !dbg !10376

cond.false161:                                    ; preds = %sw.bb149
  %type164 = bitcast i64* %11 to %struct.tree_type*, !dbg !10376
  %mode165 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type164, i64 0, i32 6, !dbg !10376
  %bf.load166 = load i32, i32* %mode165, align 4, !dbg !10376
  %bf.lshr167 = lshr i32 %bf.load166, 16, !dbg !10376
  %bf.clear168 = and i32 %bf.lshr167, 255, !dbg !10376
  %.pre = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31) to i64**), align 8, !dbg !10378
  %bf.load172.pre = load i64, i64* %.pre, align 8, !dbg !10378
  %phitmp = and i64 %bf.load172.pre, 65535, !dbg !10376
  %phitmp28 = icmp eq i64 %phitmp, 14, !dbg !10376
  br label %cond.end169, !dbg !10376

cond.end169:                                      ; preds = %cond.false161, %cond.true157
  %bf.load172 = phi i1 [ false, %cond.true157 ], [ %phitmp28, %cond.false161 ]
  %14 = phi i64* [ undef, %cond.true157 ], [ %.pre, %cond.false161 ], !dbg !10378
  %cond170 = phi i32 [ undef, %cond.true157 ], [ %bf.clear168, %cond.false161 ], !dbg !10376
  br i1 %bf.load172, label %cond.true176, label %cond.false178, !dbg !10378

cond.true176:                                     ; preds = %cond.end169
  %.cast7 = bitcast i64* %14 to %union.tree_node*, !dbg !10378
  %call177 = tail call i32 @vector_type_mode(%union.tree_node* %.cast7) #7, !dbg !10378
  br label %cond.end184, !dbg !10378

cond.false178:                                    ; preds = %cond.end169
  %type179 = bitcast i64* %14 to %struct.tree_type*, !dbg !10378
  %mode180 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type179, i64 0, i32 6, !dbg !10378
  %bf.load181 = load i32, i32* %mode180, align 4, !dbg !10378
  %bf.lshr182 = lshr i32 %bf.load181, 16, !dbg !10378
  %bf.clear183 = and i32 %bf.lshr182, 255, !dbg !10378
  br label %cond.end184, !dbg !10378

cond.end184:                                      ; preds = %cond.false178, %cond.true176
  %cond185 = phi i32 [ %call177, %cond.true176 ], [ %bf.clear183, %cond.false178 ], !dbg !10378
  %cmp186 = icmp eq i32 %cond170, %cond185, !dbg !10379
  br i1 %cmp186, label %if.then225, label %lor.lhs.false187, !dbg !10380

lor.lhs.false187:                                 ; preds = %cond.end184
  %15 = load i64*, i64** %10, align 8, !dbg !10381
  %bf.load191 = load i64, i64* %15, align 8, !dbg !10381
  %bf.cast1938 = and i64 %bf.load191, 65535, !dbg !10381
  %cmp194 = icmp eq i64 %bf.cast1938, 14, !dbg !10381
  br i1 %cmp194, label %cond.true195, label %cond.false199, !dbg !10381

cond.true195:                                     ; preds = %lor.lhs.false187
  %.cast9 = bitcast i64* %15 to %union.tree_node*, !dbg !10381
  %call198 = tail call i32 @vector_type_mode(%union.tree_node* %.cast9) #7, !dbg !10381
  br label %cond.end207, !dbg !10381

cond.false199:                                    ; preds = %lor.lhs.false187
  %type202 = bitcast i64* %15 to %struct.tree_type*, !dbg !10381
  %mode203 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type202, i64 0, i32 6, !dbg !10381
  %bf.load204 = load i32, i32* %mode203, align 4, !dbg !10381
  %bf.lshr205 = lshr i32 %bf.load204, 16, !dbg !10381
  %bf.clear206 = and i32 %bf.lshr205, 255, !dbg !10381
  br label %cond.end207, !dbg !10381

cond.end207:                                      ; preds = %cond.false199, %cond.true195
  %cond208 = phi i32 [ %call198, %cond.true195 ], [ %bf.clear206, %cond.false199 ], !dbg !10381
  %16 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32) to i64**), align 16, !dbg !10382
  %bf.load210 = load i64, i64* %16, align 8, !dbg !10382
  %bf.cast21210 = and i64 %bf.load210, 65535, !dbg !10382
  %cmp213 = icmp eq i64 %bf.cast21210, 14, !dbg !10382
  br i1 %cmp213, label %cond.true214, label %cond.false216, !dbg !10382

cond.true214:                                     ; preds = %cond.end207
  %.cast11 = bitcast i64* %16 to %union.tree_node*, !dbg !10382
  %call215 = tail call i32 @vector_type_mode(%union.tree_node* %.cast11) #7, !dbg !10382
  br label %cond.end222, !dbg !10382

cond.false216:                                    ; preds = %cond.end207
  %type217 = bitcast i64* %16 to %struct.tree_type*, !dbg !10382
  %mode218 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type217, i64 0, i32 6, !dbg !10382
  %bf.load219 = load i32, i32* %mode218, align 4, !dbg !10382
  %bf.lshr220 = lshr i32 %bf.load219, 16, !dbg !10382
  %bf.clear221 = and i32 %bf.lshr220, 255, !dbg !10382
  br label %cond.end222, !dbg !10382

cond.end222:                                      ; preds = %cond.false216, %cond.true214
  %cond223 = phi i32 [ %call215, %cond.true214 ], [ %bf.clear221, %cond.false216 ], !dbg !10382
  %cmp224 = icmp eq i32 %cond208, %cond223, !dbg !10383
  br i1 %cmp224, label %if.then225, label %cleanup, !dbg !10384

if.then225:                                       ; preds = %cond.end222, %cond.end184
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 30), align 16, !dbg !10385
  br label %cleanup, !dbg !10386

sw.default227:                                    ; preds = %if.end108
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 7562, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !10387
  br label %cleanup, !dbg !10388

cleanup:                                          ; preds = %sw.bb100, %cond.end144, %cond.end31, %cond.end95, %sw.default, %cond.end222, %sw.default227, %cond.end, %if.then225, %if.then98
  %cleanup.dest.slot.0.shrunk = phi i1 [ true, %if.then225 ], [ true, %if.then98 ], [ true, %sw.bb100 ], [ false, %cond.end ], [ false, %sw.default227 ], [ false, %cond.end222 ], [ false, %sw.default ], [ false, %cond.end95 ], [ %cmp33, %cond.end31 ], [ %cmp146, %cond.end144 ]
  %retval.0 = phi %union.tree_node* [ %17, %if.then225 ], [ %9, %if.then98 ], [ null, %sw.bb100 ], [ undef, %cond.end ], [ undef, %sw.default227 ], [ undef, %cond.end222 ], [ undef, %sw.default ], [ undef, %cond.end95 ], [ %6, %cond.end31 ], [ %13, %cond.end144 ]
  br i1 %cleanup.dest.slot.0.shrunk, label %return, label %if.end231

if.end231:                                        ; preds = %cleanup, %entry
  br label %return, !dbg !10389

return:                                           ; preds = %cleanup, %if.end231
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ null, %if.end231 ]
  ret %union.tree_node* %retval.1, !dbg !10390
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_unwidened(%union.tree_node* %op, %union.tree_node* %for_type) local_unnamed_addr #5 !dbg !10391 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !10393, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata %union.tree_node* %for_type, metadata !10394, metadata !DIExpression()), !dbg !10401
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10402
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !10402
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10395, metadata !DIExpression()), !dbg !10401
  %cmp = icmp eq %union.tree_node* %for_type, null, !dbg !10403
  %for_type. = select i1 %cmp, %union.tree_node* %0, %union.tree_node* %for_type, !dbg !10403
  %type2 = bitcast %union.tree_node* %for_type. to %struct.tree_type*, !dbg !10403
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i64 0, i32 6, !dbg !10403
  %bf.load = load i32, i32* %precision, align 4, !dbg !10403
  %bf.clear = and i32 %bf.load, 1023, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !10396, metadata !DIExpression()), !dbg !10401
  %cmp3 = icmp ne %union.tree_node* %for_type, null, !dbg !10404
  %cmp4 = icmp ne %union.tree_node* %0, %for_type, !dbg !10405
  %or.cond = and i1 %cmp3, %cmp4, !dbg !10406
  br i1 %or.cond, label %land.lhs.true5, label %land.end, !dbg !10406

land.lhs.true5:                                   ; preds = %entry
  %type6 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !10407
  %precision7 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i64 0, i32 6, !dbg !10407
  %bf.load8 = load i32, i32* %precision7, align 4, !dbg !10407
  %bf.clear9 = and i32 %bf.load8, 1023, !dbg !10407
  %cmp10 = icmp ugt i32 %bf.clear, %bf.clear9, !dbg !10408
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !10409

land.rhs:                                         ; preds = %land.lhs.true5
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10410
  %bf.load11 = load i64, i64* %1, align 8, !dbg !10410
  %bf.lshr = lshr i64 %bf.load11, 21, !dbg !10410
  %2 = trunc i64 %bf.lshr to i32, !dbg !10410
  %bf.cast = and i32 %2, 1, !dbg !10410
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true5, %entry
  %3 = phi i32 [ 0, %land.lhs.true5 ], [ 0, %entry ], [ %bf.cast, %land.rhs ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !10397, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !10398, metadata !DIExpression()), !dbg !10401
  br label %while.cond, !dbg !10411

while.cond:                                       ; preds = %cleanup, %land.end
  %uns.0 = phi i32 [ %3, %land.end ], [ %uns.3, %cleanup ], !dbg !10412
  %win.0 = phi %union.tree_node* [ %op, %land.end ], [ %win.4, %cleanup ], !dbg !10413
  %op.addr.0 = phi %union.tree_node* [ %op, %land.end ], [ %op.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0, metadata !10393, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata %union.tree_node* %win.0, metadata !10398, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %uns.0, metadata !10397, metadata !DIExpression()), !dbg !10401
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10414
  %bf.load14 = load i64, i64* %4, align 8, !dbg !10414
  %bf.cast162 = and i64 %bf.load14, 65535, !dbg !10414
  %cmp17 = icmp eq i64 %bf.cast162, 116, !dbg !10414
  %cmp22 = icmp eq i64 %bf.cast162, 113, !dbg !10414
  %or.cond9 = or i1 %cmp17, %cmp22, !dbg !10414
  br i1 %or.cond9, label %while.body, label %while.end, !dbg !10414

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10415
  %5 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !10415
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !10415
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !10415
  %7 = bitcast %union.tree_node** %type24 to i64**, !dbg !10415
  %8 = load i64*, i64** %7, align 8, !dbg !10415
  %bf.load26 = load i64, i64* %8, align 8, !dbg !10415
  %bf.cast285 = and i64 %bf.load26, 65535, !dbg !10417
  %cmp29 = icmp eq i64 %bf.cast285, 14, !dbg !10417
  %9 = bitcast %struct.tree_common* %6 to %union.tree_node*, !dbg !10418
  br i1 %cmp29, label %cleanup, label %if.end, !dbg !10418

if.end:                                           ; preds = %while.body
  %10 = bitcast i64* %8 to %struct.tree_type*, !dbg !10418
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10419
  %11 = bitcast %union.tree_node** %type31 to %struct.tree_type**, !dbg !10419
  %12 = load %struct.tree_type*, %struct.tree_type** %11, align 8, !dbg !10419
  %precision33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 6, !dbg !10419
  %bf.load34 = load i32, i32* %precision33, align 4, !dbg !10419
  %bf.clear35 = and i32 %bf.load34, 1023, !dbg !10419
  %precision42 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %10, i64 0, i32 6, !dbg !10420
  %bf.load43 = load i32, i32* %precision42, align 4, !dbg !10420
  %bf.clear44 = and i32 %bf.load43, 1023, !dbg !10420
  %sub = sub nsw i32 %bf.clear35, %bf.clear44, !dbg !10421
  call void @llvm.dbg.value(metadata i32 %sub, metadata !10399, metadata !DIExpression()), !dbg !10422
  %cmp45 = icmp slt i32 %sub, 0, !dbg !10423
  br i1 %cmp45, label %land.lhs.true46, label %if.end55, !dbg !10425

land.lhs.true46:                                  ; preds = %if.end
  %cmp53 = icmp ugt i32 %bf.clear, %bf.clear35, !dbg !10426
  br i1 %cmp53, label %cleanup, label %if.end55, !dbg !10427

if.end55:                                         ; preds = %land.lhs.true46, %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !10393, metadata !DIExpression()), !dbg !10401
  %cmp59 = icmp sgt i32 %sub, 0, !dbg !10428
  br i1 %cmp59, label %if.then60, label %cleanup, !dbg !10430

if.then60:                                        ; preds = %if.end55
  %tobool61 = icmp eq i32 %uns.0, 0, !dbg !10431
  br i1 %tobool61, label %if.then69, label %lor.lhs.false, !dbg !10434

lor.lhs.false:                                    ; preds = %if.then60
  %cmp68 = icmp ugt i32 %bf.clear, %bf.clear44, !dbg !10435
  br i1 %cmp68, label %if.end70, label %if.then69, !dbg !10436

if.then69:                                        ; preds = %lor.lhs.false, %if.then60
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !10398, metadata !DIExpression()), !dbg !10401
  br label %if.end70, !dbg !10437

if.end70:                                         ; preds = %lor.lhs.false, %if.then69
  %win.1 = phi %union.tree_node* [ %9, %if.then69 ], [ %win.0, %lor.lhs.false ], !dbg !10401
  call void @llvm.dbg.value(metadata %union.tree_node* %win.1, metadata !10398, metadata !DIExpression()), !dbg !10401
  br i1 %tobool61, label %lor.lhs.false72, label %land.lhs.true84, !dbg !10438

lor.lhs.false72:                                  ; preds = %if.end70
  %13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 0, i32 0, !dbg !10440
  %bf.load74 = load i64, i64* %13, align 8, !dbg !10440
  %bf.cast766 = and i64 %bf.load74, 65535, !dbg !10440
  %cmp77 = icmp eq i64 %bf.cast766, 116, !dbg !10440
  br i1 %cmp77, label %land.lhs.true84, label %lor.lhs.false78, !dbg !10440

lor.lhs.false78:                                  ; preds = %lor.lhs.false72
  %cmp83 = icmp eq i64 %bf.cast766, 113, !dbg !10440
  br i1 %cmp83, label %land.lhs.true84, label %cleanup, !dbg !10441

land.lhs.true84:                                  ; preds = %if.end70, %lor.lhs.false78, %lor.lhs.false72
  %bf.cast918 = and i64 %bf.load26, 2097152, !dbg !10442
  %tobool92 = icmp ne i64 %bf.cast918, 0, !dbg !10442
  %spec.select = select i1 %tobool92, i32 1, i32 %uns.0, !dbg !10443
  %spec.select1 = select i1 %tobool92, %union.tree_node* %9, %union.tree_node* %win.1, !dbg !10443
  br label %cleanup, !dbg !10443

cleanup:                                          ; preds = %land.lhs.true84, %if.end55, %lor.lhs.false78, %land.lhs.true46, %while.body
  %uns.3 = phi i32 [ %uns.0, %while.body ], [ %uns.0, %land.lhs.true46 ], [ %uns.0, %if.end55 ], [ 0, %lor.lhs.false78 ], [ %spec.select, %land.lhs.true84 ], !dbg !10401
  %win.4 = phi %union.tree_node* [ %win.0, %while.body ], [ %win.0, %land.lhs.true46 ], [ %win.0, %if.end55 ], [ %win.1, %lor.lhs.false78 ], [ %spec.select1, %land.lhs.true84 ], !dbg !10401
  %cleanup.dest.slot.0 = phi i1 [ false, %while.body ], [ false, %land.lhs.true46 ], [ true, %if.end55 ], [ true, %lor.lhs.false78 ], [ true, %land.lhs.true84 ]
  %op.addr.1 = phi %union.tree_node* [ %op.addr.0, %while.body ], [ %op.addr.0, %land.lhs.true46 ], [ %9, %if.end55 ], [ %9, %lor.lhs.false78 ], [ %9, %land.lhs.true84 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.1, metadata !10393, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata %union.tree_node* %win.4, metadata !10398, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %uns.3, metadata !10397, metadata !DIExpression()), !dbg !10401
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !10444

while.end:                                        ; preds = %while.cond, %cleanup
  %win.5 = phi %union.tree_node* [ %win.4, %cleanup ], [ %win.0, %while.cond ], !dbg !10413
  call void @llvm.dbg.value(metadata %union.tree_node* %win.5, metadata !10398, metadata !DIExpression()), !dbg !10401
  br i1 %cmp, label %if.end111, label %land.lhs.true97, !dbg !10446

land.lhs.true97:                                  ; preds = %while.end
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %win.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10448
  %bf.load99 = load i64, i64* %14, align 8, !dbg !10448
  %bf.cast1014 = and i64 %bf.load99, 65535, !dbg !10449
  %cmp102 = icmp eq i64 %bf.cast1014, 23, !dbg !10449
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !10450

land.lhs.true103:                                 ; preds = %land.lhs.true97
  %type105 = getelementptr inbounds %union.tree_node, %union.tree_node* %win.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10451
  %15 = load %union.tree_node*, %union.tree_node** %type105, align 8, !dbg !10451
  %cmp106 = icmp eq %union.tree_node* %15, %for_type, !dbg !10452
  br i1 %cmp106, label %if.end111, label %land.lhs.true107, !dbg !10453

land.lhs.true107:                                 ; preds = %land.lhs.true103
  %call = tail call i32 @int_fits_type_p(%union.tree_node* %win.5, %union.tree_node* nonnull %for_type) #8, !dbg !10454
  %tobool108 = icmp eq i32 %call, 0, !dbg !10454
  br i1 %tobool108, label %if.end111, label %if.then109, !dbg !10455

if.then109:                                       ; preds = %land.lhs.true107
  %call110 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* nonnull %for_type, %union.tree_node* %win.5) #7, !dbg !10456
  call void @llvm.dbg.value(metadata %union.tree_node* %call110, metadata !10398, metadata !DIExpression()), !dbg !10401
  br label %if.end111, !dbg !10457

if.end111:                                        ; preds = %land.lhs.true107, %land.lhs.true103, %while.end, %if.then109, %land.lhs.true97
  %win.6 = phi %union.tree_node* [ %call110, %if.then109 ], [ %win.5, %land.lhs.true107 ], [ %win.5, %land.lhs.true103 ], [ %win.5, %land.lhs.true97 ], [ %win.5, %while.end ], !dbg !10401
  call void @llvm.dbg.value(metadata %union.tree_node* %win.6, metadata !10398, metadata !DIExpression()), !dbg !10401
  ret %union.tree_node* %win.6, !dbg !10458
}

; Function Attrs: nounwind uwtable
define dso_local i32 @int_fits_type_p(%union.tree_node* %c, %union.tree_node* %type) local_unnamed_addr #5 !dbg !10459 {
entry:
  %dc = alloca %struct.double_int, align 8
  %dd = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  %tmp18 = alloca %struct.double_int, align 8
  %tmp36 = alloca %struct.double_int, align 8
  %tmp59 = alloca %struct.double_int, align 8
  %tmp120 = alloca %struct.double_int, align 8
  %tmp143 = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %c, metadata !10461, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10462, metadata !DIExpression()), !dbg !10486
  %0 = bitcast %struct.double_int* %dc to i8*, !dbg !10487
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !10487
  %1 = bitcast %struct.double_int* %dd to i8*, !dbg !10487
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #6, !dbg !10487
  %2 = bitcast %struct.double_int* %tmp to i8*, !dbg !10488
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #6, !dbg !10488
  %call = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* %c) #7, !dbg !10488
  %3 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !10488
  %4 = extractvalue { i64, i64 } %call, 0, !dbg !10488
  store i64 %4, i64* %3, align 8, !dbg !10488
  %5 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !10488
  %6 = extractvalue { i64, i64 } %call, 1, !dbg !10488
  store i64 %6, i64* %5, align 8, !dbg !10488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !10488
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #6, !dbg !10488
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %c, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10489
  %7 = bitcast %union.tree_node** %type1 to i64**, !dbg !10489
  %8 = load i64*, i64** %7, align 8, !dbg !10489
  %bf.load = load i64, i64* %8, align 8, !dbg !10489
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !10489
  %9 = trunc i64 %bf.lshr to i8, !dbg !10489
  %bf.cast = and i8 %9, 1, !dbg !10489
  call void @llvm.dbg.value(metadata i8 %bf.cast, metadata !10467, metadata !DIExpression()), !dbg !10486
  %bf.cast711 = and i64 %bf.load, 65535, !dbg !10490
  %cmp = icmp eq i64 %bf.cast711, 8, !dbg !10490
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge, !dbg !10492

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = bitcast %union.tree_node** %type1 to %struct.tree_type**, !dbg !10493
  br label %if.end, !dbg !10492

land.lhs.true:                                    ; preds = %entry
  %10 = bitcast i64* %8 to %struct.tree_type*, !dbg !10492
  %11 = bitcast %union.tree_node** %type1 to %struct.tree_type**, !dbg !10495
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %10, i64 0, i32 6, !dbg !10495
  %bf.load12 = load i32, i32* %no_force_blk_flag, align 4, !dbg !10495
  %bf.clear14 = and i32 %bf.load12, 1024, !dbg !10495
  %tobool = icmp ne i32 %bf.clear14, 0, !dbg !10495
  %tobool17 = icmp ne i8 %bf.cast, 0, !dbg !10496
  %or.cond = and i1 %tobool, %tobool17, !dbg !10497
  br i1 %or.cond, label %if.then, label %if.end, !dbg !10497

if.then:                                          ; preds = %land.lhs.true
  %12 = bitcast %struct.double_int* %tmp18 to i8*, !dbg !10498
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #6, !dbg !10498
  %bf.clear23 = and i32 %bf.load12, 1023, !dbg !10499
  %13 = getelementptr inbounds %struct.double_int, %struct.double_int* %dc, i64 0, i32 0, !dbg !10498
  %14 = load i64, i64* %13, align 8, !dbg !10498
  %15 = getelementptr inbounds %struct.double_int, %struct.double_int* %dc, i64 0, i32 1, !dbg !10498
  %16 = load i64, i64* %15, align 8, !dbg !10498
  %call24 = tail call { i64, i64 } @double_int_zext(i64 %14, i64 %16, i32 %bf.clear23) #7, !dbg !10498
  %17 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp18, i64 0, i32 0, !dbg !10498
  %18 = extractvalue { i64, i64 } %call24, 0, !dbg !10498
  store i64 %18, i64* %17, align 8, !dbg !10498
  %19 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp18, i64 0, i32 1, !dbg !10498
  %20 = extractvalue { i64, i64 } %call24, 1, !dbg !10498
  store i64 %20, i64* %19, align 8, !dbg !10498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %12, i64 16, i1 false), !dbg !10498
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #6, !dbg !10498
  br label %if.end, !dbg !10500

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then, %land.lhs.true
  %.pre-phi = phi %struct.tree_type** [ %.pre, %entry.if.end_crit_edge ], [ %11, %if.then ], [ %11, %land.lhs.true ], !dbg !10493
  %21 = bitcast %struct.double_int* %tmp36 to i8*, !dbg !10501
  %22 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp36, i64 0, i32 0, !dbg !10501
  %23 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp36, i64 0, i32 1, !dbg !10501
  %24 = bitcast %struct.double_int* %tmp59 to i8*, !dbg !10502
  %25 = getelementptr inbounds %struct.double_int, %struct.double_int* %dd, i64 0, i32 0, !dbg !10502
  %26 = getelementptr inbounds %struct.double_int, %struct.double_int* %dd, i64 0, i32 1, !dbg !10502
  %27 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp59, i64 0, i32 0, !dbg !10502
  %28 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp59, i64 0, i32 1, !dbg !10502
  %conv66 = zext i8 %bf.cast to i32, !dbg !10504
  %tobool77 = icmp eq i8 %bf.cast, 0, !dbg !10505
  %29 = getelementptr inbounds %struct.double_int, %struct.double_int* %dc, i64 0, i32 0, !dbg !10505
  %30 = getelementptr inbounds %struct.double_int, %struct.double_int* %dc, i64 0, i32 1, !dbg !10505
  %31 = bitcast %struct.double_int* %tmp120 to i8*, !dbg !10506
  %32 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp120, i64 0, i32 0, !dbg !10506
  %33 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp120, i64 0, i32 1, !dbg !10506
  %34 = bitcast %struct.double_int* %tmp143 to i8*, !dbg !10507
  %35 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp143, i64 0, i32 0, !dbg !10507
  %36 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp143, i64 0, i32 1, !dbg !10507
  %tobool219 = icmp ne i8 %bf.cast, 0, !dbg !10509
  br label %retry, !dbg !10496

retry:                                            ; preds = %if.then316, %if.end
  %type.addr.0 = phi %union.tree_node* [ %type, %if.end ], [ %99, %if.then316 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.label(metadata !10485), !dbg !10511
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !10512
  %37 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !10512
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8, !dbg !10512
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !10463, metadata !DIExpression()), !dbg !10486
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10513
  %39 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !10513
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8, !dbg !10513
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !10464, metadata !DIExpression()), !dbg !10486
  %tobool27 = icmp eq %union.tree_node* %38, null, !dbg !10514
  br i1 %tobool27, label %if.end110, label %land.lhs.true28, !dbg !10515

land.lhs.true28:                                  ; preds = %retry
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10516
  %bf.load30 = load i64, i64* %41, align 8, !dbg !10516
  %bf.cast3219 = and i64 %bf.load30, 65535, !dbg !10517
  %cmp33 = icmp eq i64 %bf.cast3219, 23, !dbg !10517
  br i1 %cmp33, label %if.then35, label %if.end110, !dbg !10518

if.then35:                                        ; preds = %land.lhs.true28
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #6, !dbg !10519
  %call37 = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* nonnull %38) #7, !dbg !10519
  %42 = extractvalue { i64, i64 } %call37, 0, !dbg !10519
  store i64 %42, i64* %22, align 8, !dbg !10519
  %43 = extractvalue { i64, i64 } %call37, 1, !dbg !10519
  store i64 %43, i64* %23, align 8, !dbg !10519
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %21, i64 16, i1 false), !dbg !10519
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #6, !dbg !10519
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10520
  %bf.load39 = load i64, i64* %44, align 8, !dbg !10520
  %bf.cast4120 = and i64 %bf.load39, 65535, !dbg !10521
  %cmp42 = icmp eq i64 %bf.cast4120, 8, !dbg !10521
  br i1 %cmp42, label %land.lhs.true44, label %if.end65, !dbg !10522

land.lhs.true44:                                  ; preds = %if.then35
  %type45 = bitcast %union.tree_node* %type.addr.0 to %struct.tree_type*, !dbg !10523
  %no_force_blk_flag46 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type45, i64 0, i32 6, !dbg !10523
  %bf.load47 = load i32, i32* %no_force_blk_flag46, align 4, !dbg !10523
  %bf.clear49 = and i32 %bf.load47, 1024, !dbg !10523
  %tobool50 = icmp eq i32 %bf.clear49, 0, !dbg !10523
  br i1 %tobool50, label %if.end65, label %land.lhs.true51, !dbg !10524

land.lhs.true51:                                  ; preds = %land.lhs.true44
  %bf.cast5621 = and i64 %bf.load39, 2097152, !dbg !10525
  %tobool57 = icmp eq i64 %bf.cast5621, 0, !dbg !10525
  br i1 %tobool57, label %if.end65, label %if.then58, !dbg !10526

if.then58:                                        ; preds = %land.lhs.true51
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #6, !dbg !10527
  %bf.clear63 = and i32 %bf.load47, 1023, !dbg !10528
  %45 = load i64, i64* %25, align 8, !dbg !10527
  %46 = load i64, i64* %26, align 8, !dbg !10527
  %call64 = tail call { i64, i64 } @double_int_zext(i64 %45, i64 %46, i32 %bf.clear63) #7, !dbg !10527
  %47 = extractvalue { i64, i64 } %call64, 0, !dbg !10527
  store i64 %47, i64* %27, align 8, !dbg !10527
  %48 = extractvalue { i64, i64 } %call64, 1, !dbg !10527
  store i64 %48, i64* %28, align 8, !dbg !10527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %24, i64 16, i1 false), !dbg !10527
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #6, !dbg !10527
  br label %if.end65, !dbg !10529

if.end65:                                         ; preds = %land.lhs.true51, %land.lhs.true44, %if.then58, %if.then35
  %type68 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10530
  %49 = bitcast %union.tree_node** %type68 to i64**, !dbg !10530
  %50 = load i64*, i64** %49, align 8, !dbg !10530
  %bf.load70 = load i64, i64* %50, align 8, !dbg !10530
  %bf.lshr71 = lshr i64 %bf.load70, 21, !dbg !10530
  %51 = trunc i64 %bf.lshr71 to i32, !dbg !10530
  %bf.cast73 = and i32 %51, 1, !dbg !10530
  %cmp74 = icmp eq i32 %bf.cast73, %conv66, !dbg !10531
  br i1 %cmp74, label %if.else, label %if.then76, !dbg !10532

if.then76:                                        ; preds = %if.end65
  br i1 %tobool77, label %land.rhs, label %land.end, !dbg !10533

land.rhs:                                         ; preds = %if.then76
  %52 = load i64, i64* %29, align 8, !dbg !10534
  %53 = load i64, i64* %30, align 8, !dbg !10534
  %call78 = tail call zeroext i8 @double_int_negative_p(i64 %52, i64 %53) #7, !dbg !10534
  %tobool80 = icmp ne i8 %call78, 0, !dbg !10533
  br label %land.end

land.end:                                         ; preds = %if.then76, %land.rhs
  %54 = phi i1 [ false, %if.then76 ], [ %tobool80, %land.rhs ], !dbg !10505
  call void @llvm.dbg.value(metadata i1 %54, metadata !10470, metadata !DIExpression()), !dbg !10505
  br i1 %tobool77, label %land.end87, label %land.rhs83, !dbg !10535

land.rhs83:                                       ; preds = %land.end
  %55 = load i64, i64* %25, align 8, !dbg !10536
  %56 = load i64, i64* %26, align 8, !dbg !10536
  %call84 = tail call zeroext i8 @double_int_negative_p(i64 %55, i64 %56) #7, !dbg !10536
  %tobool86 = icmp ne i8 %call84, 0, !dbg !10535
  br label %land.end87

land.end87:                                       ; preds = %land.end, %land.rhs83
  %57 = phi i1 [ false, %land.end ], [ %tobool86, %land.rhs83 ], !dbg !10505
  call void @llvm.dbg.value(metadata i1 %57, metadata !10475, metadata !DIExpression()), !dbg !10505
  %tobool89 = xor i1 %54, true, !dbg !10537
  %or.cond4 = or i1 %57, %tobool89, !dbg !10539
  br i1 %or.cond4, label %if.end93, label %cleanup, !dbg !10539

if.end93:                                         ; preds = %land.end87
  call void @llvm.dbg.value(metadata i1 %57, metadata !10475, metadata !DIExpression()), !dbg !10505
  %or.cond5 = and i1 %57, %tobool89, !dbg !10540
  br i1 %or.cond5, label %if.end101, label %land.lhs.true96, !dbg !10540

land.lhs.true96:                                  ; preds = %if.end93
  %58 = load i64, i64* %29, align 8, !dbg !10542
  %59 = load i64, i64* %30, align 8, !dbg !10542
  %60 = load i64, i64* %25, align 8, !dbg !10542
  %61 = load i64, i64* %26, align 8, !dbg !10542
  %call97 = tail call i32 @double_int_ucmp(i64 %58, i64 %59, i64 %60, i64 %61) #7, !dbg !10542
  %cmp98 = icmp slt i32 %call97, 0, !dbg !10543
  br i1 %cmp98, label %cleanup, label %if.end101, !dbg !10544

if.end101:                                        ; preds = %if.end93, %land.lhs.true96
  br label %cleanup, !dbg !10545

cleanup:                                          ; preds = %land.lhs.true96, %land.end87, %if.end101
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end101 ], [ false, %land.end87 ], [ false, %land.lhs.true96 ]
  br i1 %cleanup.dest.slot.0, label %if.end110, label %cleanup326.loopexit

if.else:                                          ; preds = %if.end65
  %62 = load i64, i64* %29, align 8, !dbg !10546
  %63 = load i64, i64* %30, align 8, !dbg !10546
  %64 = load i64, i64* %25, align 8, !dbg !10546
  %65 = load i64, i64* %26, align 8, !dbg !10546
  %call103 = tail call i32 @double_int_cmp(i64 %62, i64 %63, i64 %64, i64 %65, i8 zeroext %bf.cast) #7, !dbg !10546
  %cmp104 = icmp slt i32 %call103, 0, !dbg !10548
  br i1 %cmp104, label %cleanup326.loopexit, label %if.end110, !dbg !10549

if.end110:                                        ; preds = %retry, %land.lhs.true28, %cleanup, %if.else
  %ok_for_low_bound.0 = phi i32 [ 1, %if.else ], [ 1, %cleanup ], [ 0, %land.lhs.true28 ], [ 0, %retry ]
  %tobool111 = icmp eq %union.tree_node* %40, null, !dbg !10550
  br i1 %tobool111, label %if.end204, label %land.lhs.true112, !dbg !10551

land.lhs.true112:                                 ; preds = %if.end110
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10552
  %bf.load114 = load i64, i64* %66, align 8, !dbg !10552
  %bf.cast11616 = and i64 %bf.load114, 65535, !dbg !10553
  %cmp117 = icmp eq i64 %bf.cast11616, 23, !dbg !10553
  br i1 %cmp117, label %if.then119, label %if.end204, !dbg !10554

if.then119:                                       ; preds = %land.lhs.true112
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #6, !dbg !10555
  %call121 = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* nonnull %40) #7, !dbg !10555
  %67 = extractvalue { i64, i64 } %call121, 0, !dbg !10555
  store i64 %67, i64* %32, align 8, !dbg !10555
  %68 = extractvalue { i64, i64 } %call121, 1, !dbg !10555
  store i64 %68, i64* %33, align 8, !dbg !10555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %31, i64 16, i1 false), !dbg !10555
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #6, !dbg !10555
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10556
  %bf.load123 = load i64, i64* %69, align 8, !dbg !10556
  %bf.cast12517 = and i64 %bf.load123, 65535, !dbg !10557
  %cmp126 = icmp eq i64 %bf.cast12517, 8, !dbg !10557
  br i1 %cmp126, label %land.lhs.true128, label %if.end149, !dbg !10558

land.lhs.true128:                                 ; preds = %if.then119
  %type129 = bitcast %union.tree_node* %type.addr.0 to %struct.tree_type*, !dbg !10559
  %no_force_blk_flag130 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type129, i64 0, i32 6, !dbg !10559
  %bf.load131 = load i32, i32* %no_force_blk_flag130, align 4, !dbg !10559
  %bf.clear133 = and i32 %bf.load131, 1024, !dbg !10559
  %tobool134 = icmp eq i32 %bf.clear133, 0, !dbg !10559
  br i1 %tobool134, label %if.end149, label %land.lhs.true135, !dbg !10560

land.lhs.true135:                                 ; preds = %land.lhs.true128
  %bf.cast14018 = and i64 %bf.load123, 2097152, !dbg !10561
  %tobool141 = icmp eq i64 %bf.cast14018, 0, !dbg !10561
  br i1 %tobool141, label %if.end149, label %if.then142, !dbg !10562

if.then142:                                       ; preds = %land.lhs.true135
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #6, !dbg !10563
  %bf.clear147 = and i32 %bf.load131, 1023, !dbg !10564
  %70 = load i64, i64* %25, align 8, !dbg !10563
  %71 = load i64, i64* %26, align 8, !dbg !10563
  %call148 = tail call { i64, i64 } @double_int_zext(i64 %70, i64 %71, i32 %bf.clear147) #7, !dbg !10563
  %72 = extractvalue { i64, i64 } %call148, 0, !dbg !10563
  store i64 %72, i64* %35, align 8, !dbg !10563
  %73 = extractvalue { i64, i64 } %call148, 1, !dbg !10563
  store i64 %73, i64* %36, align 8, !dbg !10563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %34, i64 16, i1 false), !dbg !10563
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #6, !dbg !10563
  br label %if.end149, !dbg !10565

if.end149:                                        ; preds = %land.lhs.true135, %land.lhs.true128, %if.then142, %if.then119
  %type152 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10566
  %74 = bitcast %union.tree_node** %type152 to i64**, !dbg !10566
  %75 = load i64*, i64** %74, align 8, !dbg !10566
  %bf.load154 = load i64, i64* %75, align 8, !dbg !10566
  %bf.lshr155 = lshr i64 %bf.load154, 21, !dbg !10566
  %76 = trunc i64 %bf.lshr155 to i32, !dbg !10566
  %bf.cast157 = and i32 %76, 1, !dbg !10566
  %cmp158 = icmp eq i32 %bf.cast157, %conv66, !dbg !10567
  br i1 %cmp158, label %if.else196, label %if.then160, !dbg !10568

if.then160:                                       ; preds = %if.end149
  br i1 %tobool77, label %land.rhs163, label %land.end167, !dbg !10569

land.rhs163:                                      ; preds = %if.then160
  %77 = load i64, i64* %29, align 8, !dbg !10570
  %78 = load i64, i64* %30, align 8, !dbg !10570
  %call164 = tail call zeroext i8 @double_int_negative_p(i64 %77, i64 %78) #7, !dbg !10570
  %tobool166 = icmp ne i8 %call164, 0, !dbg !10569
  br label %land.end167

land.end167:                                      ; preds = %if.then160, %land.rhs163
  %79 = phi i1 [ false, %if.then160 ], [ %tobool166, %land.rhs163 ], !dbg !10571
  call void @llvm.dbg.value(metadata i1 %79, metadata !10476, metadata !DIExpression()), !dbg !10571
  br i1 %tobool77, label %land.end176, label %land.rhs172, !dbg !10572

land.rhs172:                                      ; preds = %land.end167
  %80 = load i64, i64* %25, align 8, !dbg !10573
  %81 = load i64, i64* %26, align 8, !dbg !10573
  %call173 = tail call zeroext i8 @double_int_negative_p(i64 %80, i64 %81) #7, !dbg !10573
  %tobool175 = icmp ne i8 %call173, 0, !dbg !10572
  br label %land.end176

land.end176:                                      ; preds = %land.end167, %land.rhs172
  %82 = phi i1 [ false, %land.end167 ], [ %tobool175, %land.rhs172 ], !dbg !10571
  call void @llvm.dbg.value(metadata i1 %82, metadata !10481, metadata !DIExpression()), !dbg !10571
  %tobool178 = xor i1 %82, true, !dbg !10574
  %or.cond6 = or i1 %79, %tobool178, !dbg !10576
  br i1 %or.cond6, label %if.end182, label %cleanup192, !dbg !10576

if.end182:                                        ; preds = %land.end176
  call void @llvm.dbg.value(metadata i1 %82, metadata !10481, metadata !DIExpression()), !dbg !10571
  %or.cond7 = and i1 %79, %tobool178, !dbg !10577
  br i1 %or.cond7, label %if.end191, label %land.lhs.true186, !dbg !10577

land.lhs.true186:                                 ; preds = %if.end182
  %83 = load i64, i64* %29, align 8, !dbg !10579
  %84 = load i64, i64* %30, align 8, !dbg !10579
  %85 = load i64, i64* %25, align 8, !dbg !10579
  %86 = load i64, i64* %26, align 8, !dbg !10579
  %call187 = tail call i32 @double_int_ucmp(i64 %83, i64 %84, i64 %85, i64 %86) #7, !dbg !10579
  %cmp188 = icmp sgt i32 %call187, 0, !dbg !10580
  br i1 %cmp188, label %cleanup192, label %if.end191, !dbg !10581

if.end191:                                        ; preds = %if.end182, %land.lhs.true186
  br label %cleanup192, !dbg !10582

cleanup192:                                       ; preds = %land.lhs.true186, %land.end176, %if.end191
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end191 ], [ false, %land.end176 ], [ false, %land.lhs.true186 ]
  br i1 %cleanup.dest.slot.1, label %if.end204, label %cleanup326.loopexit

if.else196:                                       ; preds = %if.end149
  %87 = load i64, i64* %29, align 8, !dbg !10583
  %88 = load i64, i64* %30, align 8, !dbg !10583
  %89 = load i64, i64* %25, align 8, !dbg !10583
  %90 = load i64, i64* %26, align 8, !dbg !10583
  %call197 = tail call i32 @double_int_cmp(i64 %87, i64 %88, i64 %89, i64 %90, i8 zeroext %bf.cast) #7, !dbg !10583
  %cmp198 = icmp sgt i32 %call197, 0, !dbg !10585
  br i1 %cmp198, label %cleanup326.loopexit, label %if.end204, !dbg !10586

if.end204:                                        ; preds = %if.end110, %land.lhs.true112, %cleanup192, %if.else196
  %ok_for_high_bound.0 = phi i1 [ true, %if.else196 ], [ true, %cleanup192 ], [ false, %land.lhs.true112 ], [ false, %if.end110 ]
  %tobool206 = icmp ne i32 %ok_for_low_bound.0, 0, !dbg !10587
  %or.cond8 = and i1 %tobool206, %ok_for_high_bound.0, !dbg !10589
  br i1 %or.cond8, label %cleanup326.loopexit, label %if.end211, !dbg !10589

if.end211:                                        ; preds = %if.end204
  %91 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10590
  %bf.load213 = load i64, i64* %91, align 8, !dbg !10590
  %bf.cast21612 = and i64 %bf.load213, 2097152, !dbg !10590
  %tobool217 = icmp eq i64 %bf.cast21612, 0, !dbg !10590
  %or.cond9 = or i1 %tobool217, %tobool219, !dbg !10591
  br i1 %or.cond9, label %if.end225, label %land.lhs.true220, !dbg !10591

land.lhs.true220:                                 ; preds = %if.end211
  %92 = load i64, i64* %29, align 8, !dbg !10592
  %93 = load i64, i64* %30, align 8, !dbg !10592
  %call221 = tail call zeroext i8 @double_int_negative_p(i64 %92, i64 %93) #7, !dbg !10592
  %tobool223 = icmp eq i8 %call221, 0, !dbg !10592
  br i1 %tobool223, label %if.end225, label %cleanup326.loopexit, !dbg !10593

if.end225:                                        ; preds = %land.lhs.true220, %if.end211
  %type226 = bitcast %union.tree_node* %type.addr.0 to %struct.tree_type*, !dbg !10594
  %precision227 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type226, i64 0, i32 6, !dbg !10594
  %bf.load228 = load i32, i32* %precision227, align 4, !dbg !10594
  %bf.clear229 = and i32 %bf.load228, 1023, !dbg !10594
  %94 = load %struct.tree_type*, %struct.tree_type** %.pre-phi, align 8, !dbg !10595
  %precision233 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %94, i64 0, i32 6, !dbg !10595
  %bf.load234 = load i32, i32* %precision233, align 4, !dbg !10595
  %bf.clear235 = and i32 %bf.load234, 1023, !dbg !10595
  %cmp236 = icmp ugt i32 %bf.clear229, %bf.clear235, !dbg !10596
  %95 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %94, i64 0, i32 0, i32 0, i32 0, !dbg !10597
  br i1 %cmp236, label %cleanup326.loopexit, label %if.end239, !dbg !10597

if.end239:                                        ; preds = %if.end225
  %bf.load241 = load i64, i64* %91, align 8, !dbg !10598
  %bf.cast24413 = and i64 %bf.load241, 2097152, !dbg !10598
  %tobool245 = icmp eq i64 %bf.cast24413, 0, !dbg !10598
  %or.cond10 = and i1 %tobool245, %tobool219, !dbg !10599
  br i1 %or.cond10, label %if.then249, label %if.end291, !dbg !10599

if.then249:                                       ; preds = %if.end239
  %bf.load253 = load i64, i64* %95, align 8, !dbg !10600
  %bf.cast25515 = and i64 %bf.load253, 65535, !dbg !10600
  %cmp256 = icmp eq i64 %bf.cast25515, 14, !dbg !10600
  br i1 %cmp256, label %cond.true, label %cond.false, !dbg !10600

cond.true:                                        ; preds = %if.then249
  %.cast = bitcast %struct.tree_type* %94 to %union.tree_node*, !dbg !10600
  %call260 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !10600
  br label %cond.end, !dbg !10600

cond.false:                                       ; preds = %if.then249
  %bf.lshr265 = lshr i32 %bf.load234, 16, !dbg !10600
  %bf.clear266 = and i32 %bf.lshr265, 255, !dbg !10600
  br label %cond.end, !dbg !10600

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call260, %cond.true ], [ %bf.clear266, %cond.false ], !dbg !10600
  %idxprom = zext i32 %cond to i64, !dbg !10600
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !10600
  %96 = load i8, i8* %arrayidx, align 1, !dbg !10600
  %conv268 = zext i8 %96 to i32, !dbg !10600
  %mul = shl nuw nsw i32 %conv268, 3, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %mul, metadata !10482, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10601
  %cmp271 = icmp ult i8 %96, 9, !dbg !10602
  br i1 %cmp271, label %if.then273, label %if.else278, !dbg !10604

if.then273:                                       ; preds = %cond.end
  %sub = add nsw i32 %mul, -1, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %sub, metadata !10482, metadata !DIExpression()), !dbg !10601
  %sh_prom = zext i32 %sub to i64, !dbg !10606
  %shl = shl i64 1, %sh_prom, !dbg !10606
  %97 = load i64, i64* %29, align 8, !dbg !10609
  %and = and i64 %shl, %97, !dbg !10610
  %cmp274 = icmp eq i64 %and, 0, !dbg !10611
  br i1 %cmp274, label %if.end287, label %cleanup288, !dbg !10612

if.else278:                                       ; preds = %cond.end
  %sub279 = add nsw i32 %mul, -65, !dbg !10613
  %sh_prom280 = zext i32 %sub279 to i64, !dbg !10615
  %shl281 = shl i64 1, %sh_prom280, !dbg !10615
  %98 = load i64, i64* %30, align 8, !dbg !10616
  %and282 = and i64 %shl281, %98, !dbg !10617
  %cmp283 = icmp eq i64 %and282, 0, !dbg !10618
  br i1 %cmp283, label %if.end287, label %cleanup288, !dbg !10619

if.end287:                                        ; preds = %if.then273, %if.else278
  br label %cleanup288, !dbg !10620

cleanup288:                                       ; preds = %if.then273, %if.else278, %if.end287
  %cleanup.dest.slot.2 = phi i1 [ true, %if.end287 ], [ false, %if.then273 ], [ false, %if.else278 ]
  br i1 %cleanup.dest.slot.2, label %cleanup288.if.end291_crit_edge, label %cleanup326.loopexit

cleanup288.if.end291_crit_edge:                   ; preds = %cleanup288
  %bf.load293.pre = load i64, i64* %91, align 8, !dbg !10621
  br label %if.end291

if.end291:                                        ; preds = %cleanup288.if.end291_crit_edge, %if.end239
  %bf.load293 = phi i64 [ %bf.load293.pre, %cleanup288.if.end291_crit_edge ], [ %bf.load241, %if.end239 ], !dbg !10621
  %bf.cast29514 = and i64 %bf.load293, 65535, !dbg !10623
  %cmp296 = icmp eq i64 %bf.cast29514, 8, !dbg !10623
  br i1 %cmp296, label %land.lhs.true298, label %if.end319, !dbg !10624

land.lhs.true298:                                 ; preds = %if.end291
  %type300 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10625
  %99 = load %union.tree_node*, %union.tree_node** %type300, align 8, !dbg !10625
  %cmp301 = icmp eq %union.tree_node* %99, null, !dbg !10626
  br i1 %cmp301, label %if.end319, label %land.lhs.true303, !dbg !10627

land.lhs.true303:                                 ; preds = %land.lhs.true298
  %100 = bitcast %union.tree_node* %99 to %struct.tree_type*, !dbg !10627
  %bf.load306 = load i32, i32* %precision227, align 4, !dbg !10628
  %precision311 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %100, i64 0, i32 6, !dbg !10629
  %bf.load312 = load i32, i32* %precision311, align 4, !dbg !10629
  %101 = xor i32 %bf.load306, %bf.load312, !dbg !10630
  %102 = and i32 %101, 1023, !dbg !10630
  %cmp314 = icmp eq i32 %102, 0, !dbg !10630
  br i1 %cmp314, label %if.then316, label %if.end319, !dbg !10631

if.then316:                                       ; preds = %land.lhs.true303
  call void @llvm.dbg.value(metadata %union.tree_node* %99, metadata !10462, metadata !DIExpression()), !dbg !10486
  br label %retry, !dbg !10632

if.end319:                                        ; preds = %land.lhs.true298, %land.lhs.true303, %if.end291
  %type.addr.0.lcssa26 = phi %union.tree_node* [ %type.addr.0, %land.lhs.true298 ], [ %type.addr.0, %land.lhs.true303 ], [ %type.addr.0, %if.end291 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa26, metadata !10462, metadata !DIExpression()), !dbg !10486
  %103 = load i64, i64* %29, align 8, !dbg !10634
  %104 = load i64, i64* %30, align 8, !dbg !10635
  %call324 = call i32 @fit_double_type(i64 %103, i64 %104, i64* nonnull %29, i64* nonnull %30, %union.tree_node* %type.addr.0.lcssa26) #7, !dbg !10636
  %tobool325 = icmp eq i32 %call324, 0, !dbg !10637
  %lnot.ext = zext i1 %tobool325 to i32, !dbg !10637
  br label %cleanup326, !dbg !10638

cleanup326.loopexit:                              ; preds = %cleanup288, %cleanup192, %cleanup, %if.else, %if.else196, %if.end204, %if.end225, %land.lhs.true220
  %retval.9.ph = phi i32 [ 1, %if.end225 ], [ 0, %land.lhs.true220 ], [ 1, %if.end204 ], [ 0, %if.else196 ], [ 0, %if.else ], [ 0, %cleanup288 ], [ 0, %cleanup192 ], [ 0, %cleanup ]
  br label %cleanup326, !dbg !10639

cleanup326:                                       ; preds = %cleanup326.loopexit, %if.end319
  %retval.9 = phi i32 [ %lnot.ext, %if.end319 ], [ %retval.9.ph, %cleanup326.loopexit ], !dbg !10486
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #6, !dbg !10639
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !10639
  ret i32 %retval.9, !dbg !10639
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_narrower(%union.tree_node* %op, i32* %unsignedp_ptr) local_unnamed_addr #5 !dbg !10640 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !10645, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32* %unsignedp_ptr, metadata !10646, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 0, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 1, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !10649, metadata !DIExpression()), !dbg !10658
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10659
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !10659
  %1 = load i64*, i64** %0, align 8, !dbg !10659
  %bf.load = load i64, i64* %1, align 8, !dbg !10659
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10659
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !10659
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !10659

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast1, 7, !dbg !10659
  br i1 %cmp7, label %lor.end, label %lor.rhs, !dbg !10659

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp14 = icmp eq i64 %bf.cast1, 8, !dbg !10659
  %phitmp15 = zext i1 %cmp14 to i32, !dbg !10659
  br label %lor.end, !dbg !10659

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i32 [ 1, %lor.lhs.false ], [ 1, %entry ], [ %phitmp15, %lor.rhs ]
  br label %while.cond, !dbg !10660

while.cond:                                       ; preds = %cleanup, %lor.end
  %win.0 = phi %union.tree_node* [ %op, %lor.end ], [ %win.1, %cleanup ], !dbg !10661
  %first.0 = phi i32 [ 1, %lor.end ], [ %first.2, %cleanup ], !dbg !10662
  %uns.0 = phi i32 [ 0, %lor.end ], [ %uns.4, %cleanup ], !dbg !10663
  %op.addr.0 = phi %union.tree_node* [ %op, %lor.end ], [ %op.addr.2, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0, metadata !10645, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.0, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %first.0, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %win.0, metadata !10649, metadata !DIExpression()), !dbg !10658
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10664
  %bf.load16 = load i64, i64* %3, align 8, !dbg !10664
  %bf.cast184 = and i64 %bf.load16, 65535, !dbg !10665
  %cmp19 = icmp eq i64 %bf.cast184, 116, !dbg !10665
  br i1 %cmp19, label %while.body, label %while.end.loopexit, !dbg !10660

while.body:                                       ; preds = %while.cond
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10666
  %4 = bitcast %union.tree_node** %type22 to %struct.tree_type**, !dbg !10666
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !10666
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !10666
  %bf.load24 = load i32, i32* %precision, align 4, !dbg !10666
  %bf.clear25 = and i32 %bf.load24, 1023, !dbg !10666
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10667
  %6 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !10667
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !10667
  %type27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !10667
  %8 = bitcast %union.tree_node** %type27 to %struct.tree_type**, !dbg !10667
  %9 = load %struct.tree_type*, %struct.tree_type** %8, align 8, !dbg !10667
  %precision29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 6, !dbg !10667
  %bf.load30 = load i32, i32* %precision29, align 4, !dbg !10667
  %bf.clear31 = and i32 %bf.load30, 1023, !dbg !10667
  %sub = sub nsw i32 %bf.clear25, %bf.clear31, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %sub, metadata !10651, metadata !DIExpression()), !dbg !10669
  %cmp32 = icmp slt i32 %sub, 0, !dbg !10670
  %10 = bitcast %struct.tree_common* %7 to %union.tree_node*, !dbg !10672
  %11 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 0, i32 0, i32 0, !dbg !10672
  %12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 0, i32 0, i32 0, !dbg !10672
  br i1 %cmp32, label %cleanup, label %if.end, !dbg !10672

if.end:                                           ; preds = %while.body
  %cmp34 = icmp eq i32 %sub, 0, !dbg !10673
  br i1 %cmp34, label %if.else59, label %if.then36, !dbg !10675

if.then36:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !10645, metadata !DIExpression()), !dbg !10658
  %tobool = icmp eq i32 %first.0, 0, !dbg !10676
  %bf.load44 = load i64, i64* %11, align 8, !dbg !10679
  %bf.lshr = lshr i64 %bf.load44, 21, !dbg !10679
  %13 = trunc i64 %bf.lshr to i32, !dbg !10679
  %bf.cast46 = and i32 %13, 1, !dbg !10679
  br i1 %tobool, label %if.else, label %if.end106, !dbg !10680

if.else:                                          ; preds = %if.then36
  %cmp54 = icmp eq i32 %uns.0, %bf.cast46, !dbg !10681
  br i1 %cmp54, label %if.end106, label %cleanup, !dbg !10683

if.else59:                                        ; preds = %if.end
  %tobool60 = icmp eq i32 %first.0, 0, !dbg !10684
  br i1 %tobool60, label %if.end69, label %if.then61, !dbg !10687

if.then61:                                        ; preds = %if.else59
  %bf.load65 = load i64, i64* %12, align 8, !dbg !10688
  %bf.lshr66 = lshr i64 %bf.load65, 21, !dbg !10688
  %14 = trunc i64 %bf.lshr66 to i32, !dbg !10688
  %bf.cast68 = and i32 %14, 1, !dbg !10688
  call void @llvm.dbg.value(metadata i32 %bf.cast68, metadata !10647, metadata !DIExpression()), !dbg !10658
  br label %if.end69, !dbg !10689

if.end69:                                         ; preds = %if.else59, %if.then61
  %uns.2 = phi i32 [ %bf.cast68, %if.then61 ], [ %uns.0, %if.else59 ], !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.2, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 0, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !10645, metadata !DIExpression()), !dbg !10658
  %bf.load76 = load i64, i64* %11, align 8, !dbg !10690
  %bf.cast7812 = and i64 %bf.load76, 65535, !dbg !10690
  %cmp79 = icmp eq i64 %bf.cast7812, 6, !dbg !10690
  br i1 %cmp79, label %lor.end99, label %lor.lhs.false81, !dbg !10690

lor.lhs.false81:                                  ; preds = %if.end69
  %cmp88 = icmp eq i64 %bf.cast7812, 7, !dbg !10690
  br i1 %cmp88, label %lor.end99, label %lor.rhs90, !dbg !10690

lor.rhs90:                                        ; preds = %lor.lhs.false81
  %cmp97 = icmp eq i64 %bf.cast7812, 8, !dbg !10690
  br label %lor.end99, !dbg !10690

lor.end99:                                        ; preds = %lor.rhs90, %lor.lhs.false81, %if.end69
  %15 = phi i1 [ true, %lor.lhs.false81 ], [ true, %if.end69 ], [ %cmp97, %lor.rhs90 ]
  %lor.ext100 = zext i1 %15 to i32, !dbg !10690
  %cmp102 = icmp eq i32 %2, %lor.ext100, !dbg !10692
  br i1 %cmp102, label %if.end106, label %cleanup, !dbg !10693, !llvm.loop !10694

if.end106:                                        ; preds = %if.else, %if.then36, %lor.end99
  %uns.3 = phi i32 [ %bf.cast46, %if.then36 ], [ %uns.0, %if.else ], [ %uns.2, %lor.end99 ], !dbg !10696
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !10645, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.3, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 0, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !10649, metadata !DIExpression()), !dbg !10658
  br label %cleanup, !dbg !10695

cleanup:                                          ; preds = %if.else, %lor.end99, %while.body, %if.end106
  %win.1 = phi %union.tree_node* [ %10, %if.end106 ], [ %win.0, %while.body ], [ %win.0, %if.else ], [ %win.0, %lor.end99 ], !dbg !10658
  %first.2 = phi i32 [ 0, %if.end106 ], [ %first.0, %while.body ], [ 0, %if.else ], [ 0, %lor.end99 ], !dbg !10658
  %uns.4 = phi i32 [ %uns.3, %if.end106 ], [ %uns.0, %while.body ], [ %uns.0, %if.else ], [ %uns.2, %lor.end99 ], !dbg !10658
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end106 ], [ true, %while.body ], [ true, %if.else ], [ false, %lor.end99 ]
  %op.addr.2 = phi %union.tree_node* [ %10, %if.end106 ], [ %op.addr.0, %while.body ], [ %10, %if.else ], [ %10, %lor.end99 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.2, metadata !10645, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.4, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %first.2, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %win.1, metadata !10649, metadata !DIExpression()), !dbg !10658
  br i1 %cleanup.dest.slot.0, label %cleanup.while.end_crit_edge, label %while.cond

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  %win.1.lcssa = phi %union.tree_node* [ %win.1, %cleanup ], !dbg !10658
  %first.2.lcssa = phi i32 [ %first.2, %cleanup ], !dbg !10658
  %uns.4.lcssa = phi i32 [ %uns.4, %cleanup ], !dbg !10658
  %op.addr.2.lcssa = phi %union.tree_node* [ %op.addr.2, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %win.1.lcssa, metadata !10649, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %first.2.lcssa, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.4.lcssa, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.2.lcssa, metadata !10645, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %win.1.lcssa, metadata !10649, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %first.2.lcssa, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.4.lcssa, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.2.lcssa, metadata !10645, metadata !DIExpression()), !dbg !10658
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10697
  %bf.load108.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !10698
  br label %while.end

while.end.loopexit:                               ; preds = %while.cond
  %win.0.lcssa = phi %union.tree_node* [ %win.0, %while.cond ], !dbg !10661
  %first.0.lcssa = phi i32 [ %first.0, %while.cond ], !dbg !10662
  %uns.0.lcssa = phi i32 [ %uns.0, %while.cond ], !dbg !10663
  %op.addr.0.lcssa = phi %union.tree_node* [ %op.addr.0, %while.cond ]
  %bf.load16.lcssa = phi i64 [ %bf.load16, %while.cond ], !dbg !10664
  call void @llvm.dbg.value(metadata %union.tree_node* %win.0.lcssa, metadata !10649, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %first.0.lcssa, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.0.lcssa, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0.lcssa, metadata !10645, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %win.0.lcssa, metadata !10649, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %first.0.lcssa, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.0.lcssa, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0.lcssa, metadata !10645, metadata !DIExpression()), !dbg !10658
  br label %while.end, !dbg !10699

while.end:                                        ; preds = %while.end.loopexit, %cleanup.while.end_crit_edge
  %bf.load108 = phi i64 [ %bf.load108.pre, %cleanup.while.end_crit_edge ], [ %bf.load16.lcssa, %while.end.loopexit ], !dbg !10698
  %win.2 = phi %union.tree_node* [ %win.1.lcssa, %cleanup.while.end_crit_edge ], [ %win.0.lcssa, %while.end.loopexit ], !dbg !10661
  %first.3 = phi i32 [ %first.2.lcssa, %cleanup.while.end_crit_edge ], [ %first.0.lcssa, %while.end.loopexit ], !dbg !10662
  %uns.5 = phi i32 [ %uns.4.lcssa, %cleanup.while.end_crit_edge ], [ %uns.0.lcssa, %while.end.loopexit ], !dbg !10663
  %op.addr.3 = phi %union.tree_node* [ %op.addr.2.lcssa, %cleanup.while.end_crit_edge ], [ %op.addr.0.lcssa, %while.end.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.3, metadata !10645, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.5, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %first.3, metadata !10648, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %win.2, metadata !10649, metadata !DIExpression()), !dbg !10658
  %bf.cast1105 = and i64 %bf.load108, 65535, !dbg !10699
  %cmp111 = icmp eq i64 %bf.cast1105, 41, !dbg !10699
  br i1 %cmp111, label %land.lhs.true, label %if.end225, !dbg !10700

land.lhs.true:                                    ; preds = %while.end
  %type114 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10701
  %16 = bitcast %union.tree_node** %type114 to i64**, !dbg !10701
  %17 = load i64*, i64** %16, align 8, !dbg !10701
  %bf.load116 = load i64, i64* %17, align 8, !dbg !10701
  %bf.cast1186 = and i64 %bf.load116, 65535, !dbg !10702
  %cmp119 = icmp eq i64 %bf.cast1186, 9, !dbg !10702
  br i1 %cmp119, label %if.end225, label %land.lhs.true121, !dbg !10703

land.lhs.true121:                                 ; preds = %land.lhs.true
  %cmp128 = icmp eq i64 %bf.cast1186, 11, !dbg !10704
  br i1 %cmp128, label %if.end225, label %land.lhs.true130, !dbg !10705

land.lhs.true130:                                 ; preds = %land.lhs.true121
  %operands132 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10706
  %arrayidx133 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands132, i64 1, !dbg !10706
  %18 = bitcast %union.tree_node** %arrayidx133 to %struct.tree_decl_common**, !dbg !10706
  %19 = load %struct.tree_decl_common*, %struct.tree_decl_common** %18, align 8, !dbg !10706
  %size = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %19, i64 0, i32 1, !dbg !10706
  %20 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !10706
  %cmp134 = icmp eq %union.tree_node* %20, null, !dbg !10707
  br i1 %cmp134, label %if.end225, label %land.lhs.true136, !dbg !10708

land.lhs.true136:                                 ; preds = %land.lhs.true130
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %20, i32 1) #8, !dbg !10709
  %tobool142 = icmp eq i32 %call, 0, !dbg !10709
  br i1 %tobool142, label %if.end225, label %if.then143, !dbg !10710

if.then143:                                       ; preds = %land.lhs.true136
  %21 = load %struct.tree_decl_common*, %struct.tree_decl_common** %18, align 8, !dbg !10711
  %size148 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %21, i64 0, i32 1, !dbg !10711
  %22 = load %union.tree_node*, %union.tree_node** %size148, align 8, !dbg !10711
  %call149 = tail call i64 @tree_low_cst(%union.tree_node* %22, i32 1) #8, !dbg !10712
  call void @llvm.dbg.value(metadata i64 %call149, metadata !10653, metadata !DIExpression()), !dbg !10713
  %23 = bitcast %union.tree_node** %arrayidx133 to i64**, !dbg !10714
  %24 = load i64*, i64** %23, align 8, !dbg !10714
  %bf.load154 = load i64, i64* %24, align 8, !dbg !10714
  %bf.cast1578 = and i64 %bf.load154, 2097152, !dbg !10714
  %tobool158 = icmp eq i64 %bf.cast1578, 0, !dbg !10714
  br i1 %tobool158, label %lor.rhs159, label %lor.end171, !dbg !10715

lor.rhs159:                                       ; preds = %if.then143
  %type164 = getelementptr inbounds i64, i64* %24, i64 2, !dbg !10716
  %25 = bitcast i64* %type164 to i64**, !dbg !10716
  %26 = load i64*, i64** %25, align 8, !dbg !10716
  %bf.load166 = load i64, i64* %26, align 8, !dbg !10716
  %bf.cast1699 = lshr i64 %bf.load166, 21, !dbg !10715
  %27 = trunc i64 %bf.cast1699 to i32, !dbg !10715
  %28 = and i32 %27, 1, !dbg !10715
  br label %lor.end171, !dbg !10715

lor.end171:                                       ; preds = %if.then143, %lor.rhs159
  %29 = phi i32 [ 1, %if.then143 ], [ %28, %lor.rhs159 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !10656, metadata !DIExpression()), !dbg !10713
  %30 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !10717
  %conv174 = trunc i64 %call149 to i32, !dbg !10718
  %call175 = tail call %union.tree_node* %30(i32 %conv174, i32 %29) #7, !dbg !10719
  call void @llvm.dbg.value(metadata %union.tree_node* %call175, metadata !10657, metadata !DIExpression()), !dbg !10713
  %31 = bitcast %union.tree_node** %type114 to %struct.tree_type**, !dbg !10720
  %32 = load %struct.tree_type*, %struct.tree_type** %31, align 8, !dbg !10720
  %precision179 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %32, i64 0, i32 6, !dbg !10720
  %bf.load180 = load i32, i32* %precision179, align 4, !dbg !10720
  %bf.clear181 = and i32 %bf.load180, 1023, !dbg !10720
  %conv182 = zext i32 %bf.clear181 to i64, !dbg !10720
  %cmp183 = icmp ult i64 %call149, %conv182, !dbg !10722
  br i1 %cmp183, label %land.lhs.true185, label %if.end225, !dbg !10723

land.lhs.true185:                                 ; preds = %lor.end171
  %33 = load %struct.tree_decl_common*, %struct.tree_decl_common** %18, align 8, !dbg !10724
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %33, i64 0, i32 2, !dbg !10724
  %34 = bitcast i40* %decl_flag_1 to i64*, !dbg !10724
  %bf.load190 = load i64, i64* %34, align 8, !dbg !10724
  %bf.cast19311 = and i64 %bf.load190, 33554432, !dbg !10724
  %tobool194 = icmp eq i64 %bf.cast19311, 0, !dbg !10724
  %35 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %33, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !10725
  br i1 %tobool194, label %land.lhs.true195, label %if.end225, !dbg !10725

land.lhs.true195:                                 ; preds = %land.lhs.true185
  %tobool196 = icmp eq i32 %first.3, 0, !dbg !10726
  br i1 %tobool196, label %lor.lhs.false197, label %land.lhs.true208, !dbg !10727

lor.lhs.false197:                                 ; preds = %land.lhs.true195
  %bf.load202 = load i64, i64* %35, align 8, !dbg !10728
  %bf.lshr203 = lshr i64 %bf.load202, 21, !dbg !10728
  %36 = trunc i64 %bf.lshr203 to i32, !dbg !10728
  %bf.cast205 = and i32 %36, 1, !dbg !10728
  %cmp206 = icmp eq i32 %uns.5, %bf.cast205, !dbg !10729
  %cmp209 = icmp ne %union.tree_node* %call175, null, !dbg !10730
  %or.cond = and i1 %cmp206, %cmp209, !dbg !10731
  br i1 %or.cond, label %if.then211, label %if.end225, !dbg !10731

land.lhs.true208:                                 ; preds = %land.lhs.true195
  %cmp209.old = icmp eq %union.tree_node* %call175, null, !dbg !10730
  br i1 %cmp209.old, label %if.end225, label %if.then211, !dbg !10732

if.then211:                                       ; preds = %land.lhs.true208, %lor.lhs.false197
  br i1 %tobool196, label %if.end222, label %if.then213, !dbg !10733

if.then213:                                       ; preds = %if.then211
  %bf.load218 = load i64, i64* %35, align 8, !dbg !10735
  %bf.lshr219 = lshr i64 %bf.load218, 21, !dbg !10735
  %37 = trunc i64 %bf.lshr219 to i32, !dbg !10735
  %bf.cast221 = and i32 %37, 1, !dbg !10735
  call void @llvm.dbg.value(metadata i32 %bf.cast221, metadata !10647, metadata !DIExpression()), !dbg !10658
  br label %if.end222, !dbg !10737

if.end222:                                        ; preds = %if.then211, %if.then213
  %uns.6 = phi i32 [ %bf.cast221, %if.then213 ], [ %uns.5, %if.then211 ], !dbg !10658
  call void @llvm.dbg.value(metadata i32 %uns.6, metadata !10647, metadata !DIExpression()), !dbg !10658
  %call223 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call175, %union.tree_node* %op.addr.3) #7, !dbg !10738
  call void @llvm.dbg.value(metadata %union.tree_node* %call223, metadata !10649, metadata !DIExpression()), !dbg !10658
  br label %if.end225, !dbg !10739

if.end225:                                        ; preds = %land.lhs.true208, %land.lhs.true185, %land.lhs.true136, %land.lhs.true130, %land.lhs.true121, %land.lhs.true, %lor.end171, %lor.lhs.false197, %if.end222, %while.end
  %win.4 = phi %union.tree_node* [ %win.2, %land.lhs.true136 ], [ %win.2, %land.lhs.true130 ], [ %win.2, %land.lhs.true121 ], [ %win.2, %land.lhs.true ], [ %win.2, %while.end ], [ %win.2, %land.lhs.true185 ], [ %call223, %if.end222 ], [ %win.2, %land.lhs.true208 ], [ %win.2, %lor.lhs.false197 ], [ %win.2, %lor.end171 ], !dbg !10661
  %uns.8 = phi i32 [ %uns.5, %land.lhs.true136 ], [ %uns.5, %land.lhs.true130 ], [ %uns.5, %land.lhs.true121 ], [ %uns.5, %land.lhs.true ], [ %uns.5, %while.end ], [ %uns.5, %land.lhs.true185 ], [ %uns.6, %if.end222 ], [ %uns.5, %land.lhs.true208 ], [ %uns.5, %lor.lhs.false197 ], [ %uns.5, %lor.end171 ], !dbg !10663
  call void @llvm.dbg.value(metadata i32 %uns.8, metadata !10647, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %union.tree_node* %win.4, metadata !10649, metadata !DIExpression()), !dbg !10658
  store i32 %uns.8, i32* %unsignedp_ptr, align 4, !dbg !10740
  ret %union.tree_node* %win.4, !dbg !10741
}

declare dso_local { i64, i64 } @tree_to_double_int(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local { i64, i64 } @double_int_zext(i64, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local zeroext i8 @double_int_negative_p(i64, i64) local_unnamed_addr #2

declare dso_local i32 @double_int_ucmp(i64, i64, i64, i64) local_unnamed_addr #2

declare dso_local i32 @double_int_cmp(i64, i64, i64, i64, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @get_type_static_bounds(%union.tree_node* %type, %struct.__mpz_struct* %min, %struct.__mpz_struct* %max) local_unnamed_addr #5 !dbg !10742 {
entry:
  %mn = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  %tmp33 = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10756, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %min, metadata !10757, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %max, metadata !10758, metadata !DIExpression()), !dbg !10764
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10765
  %bf.load = load i64, i64* %0, align 8, !dbg !10765
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10765
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !10765
  br i1 %cmp, label %if.else, label %lor.lhs.false, !dbg !10765

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 12, !dbg !10765
  br i1 %cmp5, label %if.else, label %land.lhs.true, !dbg !10766

land.lhs.true:                                    ; preds = %lor.lhs.false
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !10767
  %1 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !10767
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !10767
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !10767
  br i1 %tobool, label %if.else, label %land.lhs.true7, !dbg !10768

land.lhs.true7:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10768
  %bf.load11 = load i64, i64* %3, align 8, !dbg !10769
  %bf.cast138 = and i64 %bf.load11, 65535, !dbg !10770
  %cmp14 = icmp eq i64 %bf.cast138, 23, !dbg !10770
  br i1 %cmp14, label %if.then, label %if.else, !dbg !10771

if.then:                                          ; preds = %land.lhs.true7
  %call = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* nonnull %2) #7, !dbg !10772
  %4 = extractvalue { i64, i64 } %call, 0, !dbg !10772
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !10772
  %bf.load18 = load i64, i64* %0, align 8, !dbg !10773
  %bf.lshr = lshr i64 %bf.load18, 21, !dbg !10773
  %6 = trunc i64 %bf.lshr to i8, !dbg !10773
  %bf.cast20 = and i8 %6, 1, !dbg !10773
  tail call void @mpz_set_double_int(%struct.__mpz_struct* %min, i64 %4, i64 %5, i8 zeroext %bf.cast20) #7, !dbg !10774
  br label %if.end43, !dbg !10774

if.else:                                          ; preds = %land.lhs.true, %land.lhs.true7, %lor.lhs.false, %entry
  %bf.cast253 = and i64 %bf.load, 2097152, !dbg !10775
  %tobool26 = icmp eq i64 %bf.cast253, 0, !dbg !10775
  br i1 %tobool26, label %if.else28, label %if.then27, !dbg !10776

if.then27:                                        ; preds = %if.else
  tail call void @mpz_set_ui(%struct.__mpz_struct* %min, i64 0) #7, !dbg !10777
  br label %if.end43, !dbg !10777

if.else28:                                        ; preds = %if.else
  %7 = bitcast %struct.double_int* %mn to i8*, !dbg !10778
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6, !dbg !10778
  %8 = bitcast %struct.double_int* %tmp to i8*, !dbg !10779
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6, !dbg !10779
  %type29 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !10780
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type29, i64 0, i32 6, !dbg !10780
  %bf.load30 = load i32, i32* %precision, align 4, !dbg !10780
  %bf.clear31 = and i32 %bf.load30, 1023, !dbg !10780
  %sub = add nsw i32 %bf.clear31, -1, !dbg !10781
  %call32 = tail call { i64, i64 } @double_int_mask(i32 %sub) #7, !dbg !10779
  %9 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !10779
  %10 = extractvalue { i64, i64 } %call32, 0, !dbg !10779
  store i64 %10, i64* %9, align 8, !dbg !10779
  %11 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !10779
  %12 = extractvalue { i64, i64 } %call32, 1, !dbg !10779
  store i64 %12, i64* %11, align 8, !dbg !10779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !10779
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6, !dbg !10779
  %13 = bitcast %struct.double_int* %tmp33 to i8*, !dbg !10782
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6, !dbg !10782
  %call36 = tail call fastcc { i64, i64 } @shwi_to_double_int(i64 1) #8, !dbg !10783
  %14 = getelementptr inbounds %struct.double_int, %struct.double_int* %mn, i64 0, i32 0, !dbg !10784
  %15 = load i64, i64* %14, align 8, !dbg !10784
  %16 = getelementptr inbounds %struct.double_int, %struct.double_int* %mn, i64 0, i32 1, !dbg !10784
  %17 = load i64, i64* %16, align 8, !dbg !10784
  %call37 = tail call { i64, i64 } @double_int_add(i64 %15, i64 %17, i64 1, i64 0) #7, !dbg !10784
  %18 = extractvalue { i64, i64 } %call37, 0, !dbg !10784
  %19 = extractvalue { i64, i64 } %call37, 1, !dbg !10784
  %bf.load40 = load i32, i32* %precision, align 4, !dbg !10785
  %bf.clear41 = and i32 %bf.load40, 1023, !dbg !10785
  %call42 = tail call { i64, i64 } @double_int_sext(i64 %18, i64 %19, i32 %bf.clear41) #7, !dbg !10782
  %20 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp33, i64 0, i32 0, !dbg !10782
  %21 = extractvalue { i64, i64 } %call42, 0, !dbg !10782
  store i64 %21, i64* %20, align 8, !dbg !10782
  %22 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp33, i64 0, i32 1, !dbg !10782
  %23 = extractvalue { i64, i64 } %call42, 1, !dbg !10782
  store i64 %23, i64* %22, align 8, !dbg !10782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %13, i64 16, i1 false), !dbg !10782
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6, !dbg !10782
  %24 = load i64, i64* %14, align 8, !dbg !10786
  %25 = load i64, i64* %16, align 8, !dbg !10786
  tail call void @mpz_set_double_int(%struct.__mpz_struct* %min, i64 %24, i64 %25, i8 zeroext 0) #7, !dbg !10786
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6, !dbg !10787
  br label %if.end43

if.end43:                                         ; preds = %if.then27, %if.else28, %if.then
  %bf.load45 = load i64, i64* %0, align 8, !dbg !10788
  %bf.cast474 = and i64 %bf.load45, 65535, !dbg !10788
  %cmp48 = icmp eq i64 %bf.cast474, 10, !dbg !10788
  br i1 %cmp48, label %if.else80, label %lor.lhs.false50, !dbg !10788

lor.lhs.false50:                                  ; preds = %if.end43
  %cmp55 = icmp eq i64 %bf.cast474, 12, !dbg !10788
  br i1 %cmp55, label %if.else80, label %land.lhs.true57, !dbg !10790

land.lhs.true57:                                  ; preds = %lor.lhs.false50
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10791
  %26 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !10791
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !10791
  %tobool59 = icmp eq %union.tree_node* %27, null, !dbg !10791
  br i1 %tobool59, label %if.else80, label %land.lhs.true60, !dbg !10792

land.lhs.true60:                                  ; preds = %land.lhs.true57
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10792
  %bf.load64 = load i64, i64* %28, align 8, !dbg !10793
  %bf.cast667 = and i64 %bf.load64, 65535, !dbg !10794
  %cmp67 = icmp eq i64 %bf.cast667, 23, !dbg !10794
  br i1 %cmp67, label %if.then69, label %if.else80, !dbg !10795

if.then69:                                        ; preds = %land.lhs.true60
  %call73 = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* nonnull %27) #7, !dbg !10796
  %29 = extractvalue { i64, i64 } %call73, 0, !dbg !10796
  %30 = extractvalue { i64, i64 } %call73, 1, !dbg !10796
  %bf.load75 = load i64, i64* %0, align 8, !dbg !10797
  %bf.lshr76 = lshr i64 %bf.load75, 21, !dbg !10797
  %31 = trunc i64 %bf.lshr76 to i8, !dbg !10797
  %bf.cast78 = and i8 %31, 1, !dbg !10797
  tail call void @mpz_set_double_int(%struct.__mpz_struct* %max, i64 %29, i64 %30, i8 zeroext %bf.cast78) #7, !dbg !10798
  br label %if.end103, !dbg !10798

if.else80:                                        ; preds = %land.lhs.true57, %land.lhs.true60, %lor.lhs.false50, %if.end43
  %bf.cast856 = and i64 %bf.load45, 2097152, !dbg !10799
  %tobool86 = icmp eq i64 %bf.cast856, 0, !dbg !10799
  %type89 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !10802
  %precision90 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type89, i64 0, i32 6, !dbg !10802
  %bf.load91 = load i32, i32* %precision90, align 4, !dbg !10802
  %bf.clear92 = and i32 %bf.load91, 1023, !dbg !10802
  br i1 %tobool86, label %if.else94, label %if.then87, !dbg !10803

if.then87:                                        ; preds = %if.else80
  %call93 = tail call { i64, i64 } @double_int_mask(i32 %bf.clear92) #7, !dbg !10804
  %32 = extractvalue { i64, i64 } %call93, 0, !dbg !10804
  %33 = extractvalue { i64, i64 } %call93, 1, !dbg !10804
  tail call void @mpz_set_double_int(%struct.__mpz_struct* %max, i64 %32, i64 %33, i8 zeroext 1) #7, !dbg !10805
  br label %if.end103, !dbg !10805

if.else94:                                        ; preds = %if.else80
  %sub100 = add nsw i32 %bf.clear92, -1, !dbg !10806
  %call101 = tail call { i64, i64 } @double_int_mask(i32 %sub100) #7, !dbg !10807
  %34 = extractvalue { i64, i64 } %call101, 0, !dbg !10807
  %35 = extractvalue { i64, i64 } %call101, 1, !dbg !10807
  tail call void @mpz_set_double_int(%struct.__mpz_struct* %max, i64 %34, i64 %35, i8 zeroext 1) #7, !dbg !10808
  br label %if.end103

if.end103:                                        ; preds = %if.then87, %if.else94, %if.then69
  ret void, !dbg !10809
}

declare dso_local void @mpz_set_double_int(%struct.__mpz_struct*, i64, i64, i8 zeroext) local_unnamed_addr #2

declare dso_local void @mpz_set_ui(%struct.__mpz_struct*, i64) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_mask(i32) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_sext(i64, i64, i32) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_add(i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i64, i64 } @shwi_to_double_int(i64 %cst) unnamed_addr #0 !dbg !10810 {
entry:
  call void @llvm.dbg.value(metadata i64 1, metadata !10814, metadata !DIExpression()), !dbg !10816
  ret { i64, i64 } undef, !dbg !10817
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @auto_var_in_fn_p(%union.tree_node* %var, %union.tree_node* %fn) local_unnamed_addr #5 !dbg !10818 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !10822, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !10823, metadata !DIExpression()), !dbg !10824
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10825
  %bf.load = load i64, i64* %0, align 8, !dbg !10825
  %bf.cast = and i64 %bf.load, 65535, !dbg !10825
  %1 = add nsw i64 %bf.cast, -29, !dbg !10825
  %cmp = icmp ult i64 %1, 12, !dbg !10825
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !10826

land.lhs.true:                                    ; preds = %entry
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10827
  %2 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !10827
  %cmp1 = icmp eq %union.tree_node* %2, %fn, !dbg !10828
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !10829

land.rhs:                                         ; preds = %land.lhs.true
  %cmp6 = icmp eq i64 %bf.cast, 32, !dbg !10830
  br i1 %cmp6, label %land.lhs.true12, label %lor.lhs.false, !dbg !10831

lor.lhs.false:                                    ; preds = %land.rhs
  %cmp11 = icmp eq i64 %bf.cast, 34, !dbg !10832
  br i1 %cmp11, label %land.lhs.true12, label %lor.lhs.false17, !dbg !10833

land.lhs.true12:                                  ; preds = %lor.lhs.false, %land.rhs
  %bf.cast165 = and i64 %bf.load, 67108864, !dbg !10834
  %tobool = icmp eq i64 %bf.cast165, 0, !dbg !10834
  br i1 %tobool, label %land.end, label %lor.lhs.false17, !dbg !10835

lor.lhs.false17:                                  ; preds = %land.lhs.true12, %lor.lhs.false
  %cmp22 = icmp eq i64 %bf.cast, 30, !dbg !10836
  br i1 %cmp22, label %land.end, label %lor.rhs, !dbg !10837

lor.rhs:                                          ; preds = %lor.lhs.false17
  %cmp27 = icmp eq i64 %bf.cast, 36, !dbg !10838
  %phitmp = zext i1 %cmp27 to i8, !dbg !10837
  br label %land.end, !dbg !10837

land.end:                                         ; preds = %land.lhs.true12, %lor.lhs.false17, %lor.rhs, %land.lhs.true, %entry
  %3 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ 1, %lor.lhs.false17 ], [ 1, %land.lhs.true12 ], [ %phitmp, %lor.rhs ]
  ret i8 %3, !dbg !10839
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @variably_modified_type_p(%union.tree_node* %type, %union.tree_node* %fn) local_unnamed_addr #5 !dbg !10840 {
entry:
  %_t = alloca %union.tree_node*, align 8
  %_t11 = alloca %union.tree_node*, align 8
  %_t52 = alloca %union.tree_node*, align 8
  %_t76 = alloca %union.tree_node*, align 8
  %_t109 = alloca %union.tree_node*, align 8
  %_t132 = alloca %union.tree_node*, align 8
  %_t156 = alloca %union.tree_node*, align 8
  %_t187 = alloca %union.tree_node*, align 8
  %_t215 = alloca %union.tree_node*, align 8
  %_t242 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10844, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !10845, metadata !DIExpression()), !dbg !10873
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10874
  %cmp = icmp eq %union.tree_node* %0, %type, !dbg !10876
  br i1 %cmp, label %cleanup269, label %do.body, !dbg !10877

do.body:                                          ; preds = %entry
  %1 = bitcast %union.tree_node** %_t to i8*, !dbg !10878
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !10878
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10878
  %3 = bitcast %union.tree_node** %2 to i64*, !dbg !10878
  %4 = load i64, i64* %3, align 8, !dbg !10878
  %5 = bitcast %union.tree_node** %_t to i64*, !dbg !10878
  store i64 %4, i64* %5, align 8, !dbg !10878
  call void @llvm.dbg.value(metadata i64 %4, metadata !10847, metadata !DIExpression()), !dbg !10879
  %tobool = icmp eq i64 %4, 0, !dbg !10880
  %6 = inttoptr i64 %4 to i64*, !dbg !10880
  br i1 %tobool, label %if.end9, label %land.lhs.true, !dbg !10880

land.lhs.true:                                    ; preds = %do.body
  %7 = inttoptr i64 %4 to %union.tree_node*, !dbg !10880
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !10847, metadata !DIExpression()), !dbg !10879
  %cmp2 = icmp eq %union.tree_node* %0, %7, !dbg !10880
  br i1 %cmp2, label %if.end9, label %land.lhs.true3, !dbg !10880

land.lhs.true3:                                   ; preds = %land.lhs.true
  %bf.load = load i64, i64* %6, align 8, !dbg !10880
  %bf.cast21 = and i64 %bf.load, 65535, !dbg !10880
  %cmp4 = icmp eq i64 %bf.cast21, 23, !dbg !10880
  br i1 %cmp4, label %if.end9, label %land.lhs.true5, !dbg !10880

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %tobool6 = icmp eq %union.tree_node* %fn, null, !dbg !10880
  br i1 %tobool6, label %cleanup, label %lor.lhs.false, !dbg !10880

lor.lhs.false:                                    ; preds = %land.lhs.true5
  %8 = bitcast %union.tree_node* %fn to i8*, !dbg !10880
  call void @llvm.dbg.value(metadata %union.tree_node** %_t, metadata !10847, metadata !DIExpression(DW_OP_deref)), !dbg !10879
  %call = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %8, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10880
  %tobool7 = icmp eq %union.tree_node* %call, null, !dbg !10880
  br i1 %tobool7, label %if.end9, label %cleanup, !dbg !10878

if.end9:                                          ; preds = %lor.lhs.false, %land.lhs.true3, %land.lhs.true, %do.body
  br label %cleanup, !dbg !10882

cleanup:                                          ; preds = %lor.lhs.false, %land.lhs.true5, %if.end9
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end9 ], [ false, %lor.lhs.false ], [ false, %land.lhs.true5 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !10882
  br i1 %cleanup.dest.slot.0, label %do.body10, label %cleanup269

do.body10:                                        ; preds = %cleanup
  %9 = bitcast %union.tree_node** %_t11 to i8*, !dbg !10883
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !10883
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10883
  %11 = bitcast %union.tree_node** %10 to i64*, !dbg !10883
  %12 = load i64, i64* %11, align 8, !dbg !10883
  %13 = bitcast %union.tree_node** %_t11 to i64*, !dbg !10883
  store i64 %12, i64* %13, align 8, !dbg !10883
  call void @llvm.dbg.value(metadata i64 %12, metadata !10849, metadata !DIExpression()), !dbg !10884
  %tobool13 = icmp eq i64 %12, 0, !dbg !10885
  %14 = inttoptr i64 %12 to i64*, !dbg !10885
  br i1 %tobool13, label %if.end28, label %land.lhs.true14, !dbg !10885

land.lhs.true14:                                  ; preds = %do.body10
  %15 = inttoptr i64 %12 to %union.tree_node*, !dbg !10885
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !10849, metadata !DIExpression()), !dbg !10884
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10885
  %cmp15 = icmp eq %union.tree_node* %16, %15, !dbg !10885
  br i1 %cmp15, label %if.end28, label %land.lhs.true16, !dbg !10885

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %bf.load18 = load i64, i64* %14, align 8, !dbg !10885
  %bf.cast2020 = and i64 %bf.load18, 65535, !dbg !10885
  %cmp21 = icmp eq i64 %bf.cast2020, 23, !dbg !10885
  br i1 %cmp21, label %if.end28, label %land.lhs.true22, !dbg !10885

land.lhs.true22:                                  ; preds = %land.lhs.true16
  %tobool23 = icmp eq %union.tree_node* %fn, null, !dbg !10885
  br i1 %tobool23, label %cleanup29, label %lor.lhs.false24, !dbg !10885

lor.lhs.false24:                                  ; preds = %land.lhs.true22
  %17 = bitcast %union.tree_node* %fn to i8*, !dbg !10885
  call void @llvm.dbg.value(metadata %union.tree_node** %_t11, metadata !10849, metadata !DIExpression(DW_OP_deref)), !dbg !10884
  %call25 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t11, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %17, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10885
  %tobool26 = icmp eq %union.tree_node* %call25, null, !dbg !10885
  br i1 %tobool26, label %if.end28, label %cleanup29, !dbg !10883

if.end28:                                         ; preds = %lor.lhs.false24, %land.lhs.true16, %land.lhs.true14, %do.body10
  br label %cleanup29, !dbg !10887

cleanup29:                                        ; preds = %lor.lhs.false24, %land.lhs.true22, %if.end28
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end28 ], [ false, %lor.lhs.false24 ], [ false, %land.lhs.true22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !10887
  br i1 %cleanup.dest.slot.1, label %do.end33, label %cleanup269

do.end33:                                         ; preds = %cleanup29
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10888
  %bf.load35 = load i64, i64* %18, align 8, !dbg !10888
  %19 = trunc i64 %bf.load35 to i16, !dbg !10888
  switch i16 %19, label %sw.epilog [
    i16 10, label %sw.bb
    i16 12, label %sw.bb
    i16 14, label %sw.bb
    i16 20, label %sw.bb43
    i16 21, label %sw.bb43
    i16 8, label %do.body51
    i16 9, label %do.body51
    i16 11, label %do.body51
    i16 6, label %do.body51
    i16 7, label %do.body51
    i16 16, label %sw.bb99
    i16 17, label %sw.bb99
    i16 18, label %sw.bb99
    i16 15, label %do.body214
  ], !dbg !10889

sw.bb:                                            ; preds = %do.end33, %do.end33, %do.end33
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10890
  %20 = load %union.tree_node*, %union.tree_node** %type38, align 8, !dbg !10890
  %call39 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %20, %union.tree_node* %fn) #8, !dbg !10892
  %tobool40 = icmp eq i8 %call39, 0, !dbg !10892
  br i1 %tobool40, label %sw.epilog, label %cleanup269, !dbg !10893

sw.bb43:                                          ; preds = %do.end33, %do.end33
  %type45 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10894
  %21 = load %union.tree_node*, %union.tree_node** %type45, align 8, !dbg !10894
  %call46 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %21, %union.tree_node* %fn) #8, !dbg !10896
  %tobool47 = icmp eq i8 %call46, 0, !dbg !10896
  br i1 %tobool47, label %sw.epilog, label %cleanup269, !dbg !10897

do.body51:                                        ; preds = %do.end33, %do.end33, %do.end33, %do.end33, %do.end33
  %22 = bitcast %union.tree_node** %_t52 to i8*, !dbg !10898
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6, !dbg !10898
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !10898
  %23 = bitcast %struct.lang_decl** %minval to i64*, !dbg !10898
  %24 = load i64, i64* %23, align 8, !dbg !10898
  %25 = bitcast %union.tree_node** %_t52 to i64*, !dbg !10898
  store i64 %24, i64* %25, align 8, !dbg !10898
  call void @llvm.dbg.value(metadata i64 %24, metadata !10851, metadata !DIExpression()), !dbg !10899
  %tobool54 = icmp eq i64 %24, 0, !dbg !10900
  %26 = inttoptr i64 %24 to i64*, !dbg !10900
  br i1 %tobool54, label %if.end69, label %land.lhs.true55, !dbg !10900

land.lhs.true55:                                  ; preds = %do.body51
  %27 = inttoptr i64 %24 to %union.tree_node*, !dbg !10900
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !10851, metadata !DIExpression()), !dbg !10899
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10900
  %cmp56 = icmp eq %union.tree_node* %28, %27, !dbg !10900
  br i1 %cmp56, label %if.end69, label %land.lhs.true57, !dbg !10900

land.lhs.true57:                                  ; preds = %land.lhs.true55
  %bf.load59 = load i64, i64* %26, align 8, !dbg !10900
  %bf.cast6119 = and i64 %bf.load59, 65535, !dbg !10900
  %cmp62 = icmp eq i64 %bf.cast6119, 23, !dbg !10900
  br i1 %cmp62, label %if.end69, label %land.lhs.true63, !dbg !10900

land.lhs.true63:                                  ; preds = %land.lhs.true57
  %tobool64 = icmp eq %union.tree_node* %fn, null, !dbg !10900
  br i1 %tobool64, label %cleanup70, label %lor.lhs.false65, !dbg !10900

lor.lhs.false65:                                  ; preds = %land.lhs.true63
  %29 = bitcast %union.tree_node* %fn to i8*, !dbg !10900
  call void @llvm.dbg.value(metadata %union.tree_node** %_t52, metadata !10851, metadata !DIExpression(DW_OP_deref)), !dbg !10899
  %call66 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t52, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %29, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10900
  %tobool67 = icmp eq %union.tree_node* %call66, null, !dbg !10900
  br i1 %tobool67, label %if.end69, label %cleanup70, !dbg !10898

if.end69:                                         ; preds = %lor.lhs.false65, %land.lhs.true57, %land.lhs.true55, %do.body51
  br label %cleanup70, !dbg !10902

cleanup70:                                        ; preds = %lor.lhs.false65, %land.lhs.true63, %if.end69
  %cleanup.dest.slot.2 = phi i1 [ true, %if.end69 ], [ false, %lor.lhs.false65 ], [ false, %land.lhs.true63 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6, !dbg !10902
  br i1 %cleanup.dest.slot.2, label %do.body75, label %cleanup269

do.body75:                                        ; preds = %cleanup70
  %30 = bitcast %union.tree_node** %_t76 to i8*, !dbg !10903
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #6, !dbg !10903
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10903
  %31 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !10903
  %32 = load i64, i64* %31, align 8, !dbg !10903
  %33 = bitcast %union.tree_node** %_t76 to i64*, !dbg !10903
  store i64 %32, i64* %33, align 8, !dbg !10903
  call void @llvm.dbg.value(metadata i64 %32, metadata !10854, metadata !DIExpression()), !dbg !10904
  %tobool78 = icmp eq i64 %32, 0, !dbg !10905
  %34 = inttoptr i64 %32 to i64*, !dbg !10905
  br i1 %tobool78, label %if.end93, label %land.lhs.true79, !dbg !10905

land.lhs.true79:                                  ; preds = %do.body75
  %35 = inttoptr i64 %32 to %union.tree_node*, !dbg !10905
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !10854, metadata !DIExpression()), !dbg !10904
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10905
  %cmp80 = icmp eq %union.tree_node* %36, %35, !dbg !10905
  br i1 %cmp80, label %if.end93, label %land.lhs.true81, !dbg !10905

land.lhs.true81:                                  ; preds = %land.lhs.true79
  %bf.load83 = load i64, i64* %34, align 8, !dbg !10905
  %bf.cast8518 = and i64 %bf.load83, 65535, !dbg !10905
  %cmp86 = icmp eq i64 %bf.cast8518, 23, !dbg !10905
  br i1 %cmp86, label %if.end93, label %land.lhs.true87, !dbg !10905

land.lhs.true87:                                  ; preds = %land.lhs.true81
  %tobool88 = icmp eq %union.tree_node* %fn, null, !dbg !10905
  br i1 %tobool88, label %cleanup94, label %lor.lhs.false89, !dbg !10905

lor.lhs.false89:                                  ; preds = %land.lhs.true87
  %37 = bitcast %union.tree_node* %fn to i8*, !dbg !10905
  call void @llvm.dbg.value(metadata %union.tree_node** %_t76, metadata !10854, metadata !DIExpression(DW_OP_deref)), !dbg !10904
  %call90 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t76, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %37, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10905
  %tobool91 = icmp eq %union.tree_node* %call90, null, !dbg !10905
  br i1 %tobool91, label %if.end93, label %cleanup94, !dbg !10903

if.end93:                                         ; preds = %lor.lhs.false89, %land.lhs.true81, %land.lhs.true79, %do.body75
  br label %cleanup94, !dbg !10907

cleanup94:                                        ; preds = %lor.lhs.false89, %land.lhs.true87, %if.end93
  %cleanup.dest.slot.3 = phi i1 [ true, %if.end93 ], [ false, %lor.lhs.false89 ], [ false, %land.lhs.true87 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #6, !dbg !10907
  br i1 %cleanup.dest.slot.3, label %sw.epilog, label %cleanup269

sw.bb99:                                          ; preds = %do.end33, %do.end33, %do.end33
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10908
  %38 = bitcast i32* %values to %union.tree_node**, !dbg !10908
  %39 = bitcast %union.tree_node** %_t109 to i8*, !dbg !10909
  %40 = bitcast %union.tree_node** %_t109 to i64*, !dbg !10909
  %tobool120 = icmp eq %union.tree_node* %fn, null, !dbg !10910
  %41 = bitcast %union.tree_node* %fn to i8*, !dbg !10910
  %42 = bitcast %union.tree_node** %_t132 to i8*, !dbg !10912
  %43 = bitcast %union.tree_node** %_t132 to i64*, !dbg !10912
  %44 = bitcast %union.tree_node** %_t156 to i8*, !dbg !10913
  %45 = bitcast %union.tree_node** %_t156 to i64*, !dbg !10913
  %46 = bitcast %union.tree_node** %_t187 to i8*, !dbg !10914
  %47 = bitcast %union.tree_node** %_t187 to i64*, !dbg !10914
  br label %for.cond, !dbg !10915

for.cond:                                         ; preds = %for.inc, %sw.bb99
  %t.0.in = phi %union.tree_node** [ %38, %sw.bb99 ], [ %chain, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !10916
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !10846, metadata !DIExpression()), !dbg !10873
  %tobool101 = icmp eq %union.tree_node* %t.0, null, !dbg !10917
  br i1 %tobool101, label %sw.epilog.loopexit, label %for.body, !dbg !10917

for.body:                                         ; preds = %for.cond
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10918
  %bf.load103 = load i64, i64* %48, align 8, !dbg !10918
  %bf.cast10512 = and i64 %bf.load103, 65535, !dbg !10919
  %cmp106 = icmp eq i64 %bf.cast10512, 31, !dbg !10919
  br i1 %cmp106, label %do.body108, label %for.inc, !dbg !10920

do.body108:                                       ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6, !dbg !10921
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10921
  %49 = bitcast %struct.rtx_def** %offset to i64*, !dbg !10921
  %50 = load i64, i64* %49, align 8, !dbg !10921
  store i64 %50, i64* %40, align 8, !dbg !10921
  call void @llvm.dbg.value(metadata i64 %50, metadata !10856, metadata !DIExpression()), !dbg !10909
  %tobool110 = icmp eq i64 %50, 0, !dbg !10922
  %51 = inttoptr i64 %50 to i64*, !dbg !10922
  br i1 %tobool110, label %if.end125, label %land.lhs.true111, !dbg !10922

land.lhs.true111:                                 ; preds = %do.body108
  %52 = inttoptr i64 %50 to %union.tree_node*, !dbg !10922
  call void @llvm.dbg.value(metadata %union.tree_node* %52, metadata !10856, metadata !DIExpression()), !dbg !10909
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10922
  %cmp112 = icmp eq %union.tree_node* %53, %52, !dbg !10922
  br i1 %cmp112, label %if.end125, label %land.lhs.true113, !dbg !10922

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %bf.load115 = load i64, i64* %51, align 8, !dbg !10922
  %bf.cast11717 = and i64 %bf.load115, 65535, !dbg !10922
  %cmp118 = icmp eq i64 %bf.cast11717, 23, !dbg !10922
  br i1 %cmp118, label %if.end125, label %land.lhs.true119, !dbg !10922

land.lhs.true119:                                 ; preds = %land.lhs.true113
  br i1 %tobool120, label %cleanup126, label %lor.lhs.false121, !dbg !10922

lor.lhs.false121:                                 ; preds = %land.lhs.true119
  call void @llvm.dbg.value(metadata %union.tree_node** %_t109, metadata !10856, metadata !DIExpression(DW_OP_deref)), !dbg !10909
  %call122 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t109, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %41, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10922
  %tobool123 = icmp eq %union.tree_node* %call122, null, !dbg !10922
  br i1 %tobool123, label %if.end125, label %cleanup126, !dbg !10921

if.end125:                                        ; preds = %lor.lhs.false121, %land.lhs.true113, %land.lhs.true111, %do.body108
  br label %cleanup126, !dbg !10923

cleanup126:                                       ; preds = %lor.lhs.false121, %land.lhs.true119, %if.end125
  %cleanup.dest.slot.4 = phi i1 [ true, %if.end125 ], [ false, %lor.lhs.false121 ], [ false, %land.lhs.true119 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6, !dbg !10923
  br i1 %cleanup.dest.slot.4, label %do.body131, label %cleanup269.loopexit

do.body131:                                       ; preds = %cleanup126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6, !dbg !10924
  %size133 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10924
  %54 = bitcast %union.tree_node** %size133 to i64*, !dbg !10924
  %55 = load i64, i64* %54, align 8, !dbg !10924
  store i64 %55, i64* %43, align 8, !dbg !10924
  call void @llvm.dbg.value(metadata i64 %55, metadata !10862, metadata !DIExpression()), !dbg !10912
  %tobool134 = icmp eq i64 %55, 0, !dbg !10925
  %56 = inttoptr i64 %55 to i64*, !dbg !10925
  br i1 %tobool134, label %if.end149, label %land.lhs.true135, !dbg !10925

land.lhs.true135:                                 ; preds = %do.body131
  %57 = inttoptr i64 %55 to %union.tree_node*, !dbg !10925
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !10862, metadata !DIExpression()), !dbg !10912
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10925
  %cmp136 = icmp eq %union.tree_node* %58, %57, !dbg !10925
  br i1 %cmp136, label %if.end149, label %land.lhs.true137, !dbg !10925

land.lhs.true137:                                 ; preds = %land.lhs.true135
  %bf.load139 = load i64, i64* %56, align 8, !dbg !10925
  %bf.cast14116 = and i64 %bf.load139, 65535, !dbg !10925
  %cmp142 = icmp eq i64 %bf.cast14116, 23, !dbg !10925
  br i1 %cmp142, label %if.end149, label %land.lhs.true143, !dbg !10925

land.lhs.true143:                                 ; preds = %land.lhs.true137
  br i1 %tobool120, label %cleanup150, label %lor.lhs.false145, !dbg !10925

lor.lhs.false145:                                 ; preds = %land.lhs.true143
  call void @llvm.dbg.value(metadata %union.tree_node** %_t132, metadata !10862, metadata !DIExpression(DW_OP_deref)), !dbg !10912
  %call146 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t132, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %41, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10925
  %tobool147 = icmp eq %union.tree_node* %call146, null, !dbg !10925
  br i1 %tobool147, label %if.end149, label %cleanup150, !dbg !10924

if.end149:                                        ; preds = %lor.lhs.false145, %land.lhs.true137, %land.lhs.true135, %do.body131
  br label %cleanup150, !dbg !10927

cleanup150:                                       ; preds = %lor.lhs.false145, %land.lhs.true143, %if.end149
  %cleanup.dest.slot.5 = phi i1 [ true, %if.end149 ], [ false, %lor.lhs.false145 ], [ false, %land.lhs.true143 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6, !dbg !10927
  br i1 %cleanup.dest.slot.5, label %do.body155, label %cleanup269.loopexit

do.body155:                                       ; preds = %cleanup150
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #6, !dbg !10928
  %size_unit158 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10928
  %59 = bitcast %union.tree_node** %size_unit158 to i64*, !dbg !10928
  %60 = load i64, i64* %59, align 8, !dbg !10928
  store i64 %60, i64* %45, align 8, !dbg !10928
  call void @llvm.dbg.value(metadata i64 %60, metadata !10864, metadata !DIExpression()), !dbg !10913
  %tobool159 = icmp eq i64 %60, 0, !dbg !10929
  %61 = inttoptr i64 %60 to i64*, !dbg !10929
  br i1 %tobool159, label %if.end174, label %land.lhs.true160, !dbg !10929

land.lhs.true160:                                 ; preds = %do.body155
  %62 = inttoptr i64 %60 to %union.tree_node*, !dbg !10929
  call void @llvm.dbg.value(metadata %union.tree_node* %62, metadata !10864, metadata !DIExpression()), !dbg !10913
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10929
  %cmp161 = icmp eq %union.tree_node* %63, %62, !dbg !10929
  br i1 %cmp161, label %if.end174, label %land.lhs.true162, !dbg !10929

land.lhs.true162:                                 ; preds = %land.lhs.true160
  %bf.load164 = load i64, i64* %61, align 8, !dbg !10929
  %bf.cast16615 = and i64 %bf.load164, 65535, !dbg !10929
  %cmp167 = icmp eq i64 %bf.cast16615, 23, !dbg !10929
  br i1 %cmp167, label %if.end174, label %land.lhs.true168, !dbg !10929

land.lhs.true168:                                 ; preds = %land.lhs.true162
  br i1 %tobool120, label %cleanup175, label %lor.lhs.false170, !dbg !10929

lor.lhs.false170:                                 ; preds = %land.lhs.true168
  call void @llvm.dbg.value(metadata %union.tree_node** %_t156, metadata !10864, metadata !DIExpression(DW_OP_deref)), !dbg !10913
  %call171 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t156, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %41, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10929
  %tobool172 = icmp eq %union.tree_node* %call171, null, !dbg !10929
  br i1 %tobool172, label %if.end174, label %cleanup175, !dbg !10928

if.end174:                                        ; preds = %lor.lhs.false170, %land.lhs.true162, %land.lhs.true160, %do.body155
  br label %cleanup175, !dbg !10931

cleanup175:                                       ; preds = %lor.lhs.false170, %land.lhs.true168, %if.end174
  %cleanup.dest.slot.6 = phi i1 [ true, %if.end174 ], [ false, %lor.lhs.false170 ], [ false, %land.lhs.true168 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #6, !dbg !10931
  br i1 %cleanup.dest.slot.6, label %do.end179, label %cleanup269.loopexit

do.end179:                                        ; preds = %cleanup175
  %bf.load181 = load i64, i64* %18, align 8, !dbg !10932
  %bf.cast18313 = and i64 %bf.load181, 65535, !dbg !10933
  %cmp184 = icmp eq i64 %bf.cast18313, 18, !dbg !10933
  br i1 %cmp184, label %do.body186, label %for.inc, !dbg !10934

do.body186:                                       ; preds = %do.end179
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #6, !dbg !10935
  %64 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !10935
  %65 = bitcast %union.tree_node** %64 to i64*, !dbg !10935
  %66 = load i64, i64* %65, align 8, !dbg !10935
  store i64 %66, i64* %47, align 8, !dbg !10935
  call void @llvm.dbg.value(metadata i64 %66, metadata !10866, metadata !DIExpression()), !dbg !10914
  %tobool189 = icmp eq i64 %66, 0, !dbg !10936
  %67 = inttoptr i64 %66 to i64*, !dbg !10936
  br i1 %tobool189, label %if.end204, label %land.lhs.true190, !dbg !10936

land.lhs.true190:                                 ; preds = %do.body186
  %68 = inttoptr i64 %66 to %union.tree_node*, !dbg !10936
  call void @llvm.dbg.value(metadata %union.tree_node* %68, metadata !10866, metadata !DIExpression()), !dbg !10914
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10936
  %cmp191 = icmp eq %union.tree_node* %69, %68, !dbg !10936
  br i1 %cmp191, label %if.end204, label %land.lhs.true192, !dbg !10936

land.lhs.true192:                                 ; preds = %land.lhs.true190
  %bf.load194 = load i64, i64* %67, align 8, !dbg !10936
  %bf.cast19614 = and i64 %bf.load194, 65535, !dbg !10936
  %cmp197 = icmp eq i64 %bf.cast19614, 23, !dbg !10936
  br i1 %cmp197, label %if.end204, label %land.lhs.true198, !dbg !10936

land.lhs.true198:                                 ; preds = %land.lhs.true192
  br i1 %tobool120, label %cleanup205, label %lor.lhs.false200, !dbg !10936

lor.lhs.false200:                                 ; preds = %land.lhs.true198
  call void @llvm.dbg.value(metadata %union.tree_node** %_t187, metadata !10866, metadata !DIExpression(DW_OP_deref)), !dbg !10914
  %call201 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t187, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %41, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10936
  %tobool202 = icmp eq %union.tree_node* %call201, null, !dbg !10936
  br i1 %tobool202, label %if.end204, label %cleanup205, !dbg !10935

if.end204:                                        ; preds = %lor.lhs.false200, %land.lhs.true192, %land.lhs.true190, %do.body186
  br label %cleanup205, !dbg !10938

cleanup205:                                       ; preds = %lor.lhs.false200, %land.lhs.true198, %if.end204
  %cleanup.dest.slot.7 = phi i1 [ true, %if.end204 ], [ false, %lor.lhs.false200 ], [ false, %land.lhs.true198 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #6, !dbg !10938
  br i1 %cleanup.dest.slot.7, label %for.inc, label %cleanup269.loopexit

for.inc:                                          ; preds = %for.body, %cleanup205, %do.end179
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10939
  br label %for.cond, !dbg !10940, !llvm.loop !10941

do.body214:                                       ; preds = %do.end33
  %70 = bitcast %union.tree_node** %_t215 to i8*, !dbg !10943
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #6, !dbg !10943
  %type217 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10943
  %71 = bitcast %union.tree_node** %type217 to %struct.tree_type**, !dbg !10943
  %72 = load %struct.tree_type*, %struct.tree_type** %71, align 8, !dbg !10943
  %size219 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %72, i64 0, i32 2, !dbg !10943
  %73 = bitcast %union.tree_node** %size219 to i64*, !dbg !10943
  %74 = load i64, i64* %73, align 8, !dbg !10943
  %75 = bitcast %union.tree_node** %_t215 to i64*, !dbg !10943
  store i64 %74, i64* %75, align 8, !dbg !10943
  call void @llvm.dbg.value(metadata i64 %74, metadata !10869, metadata !DIExpression()), !dbg !10944
  %tobool220 = icmp eq i64 %74, 0, !dbg !10945
  %76 = inttoptr i64 %74 to i64*, !dbg !10945
  br i1 %tobool220, label %if.end235, label %land.lhs.true221, !dbg !10945

land.lhs.true221:                                 ; preds = %do.body214
  %77 = inttoptr i64 %74 to %union.tree_node*, !dbg !10945
  call void @llvm.dbg.value(metadata %union.tree_node* %77, metadata !10869, metadata !DIExpression()), !dbg !10944
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10945
  %cmp222 = icmp eq %union.tree_node* %78, %77, !dbg !10945
  br i1 %cmp222, label %if.end235, label %land.lhs.true223, !dbg !10945

land.lhs.true223:                                 ; preds = %land.lhs.true221
  %bf.load225 = load i64, i64* %76, align 8, !dbg !10945
  %bf.cast22711 = and i64 %bf.load225, 65535, !dbg !10945
  %cmp228 = icmp eq i64 %bf.cast22711, 23, !dbg !10945
  br i1 %cmp228, label %if.end235, label %land.lhs.true229, !dbg !10945

land.lhs.true229:                                 ; preds = %land.lhs.true223
  %tobool230 = icmp eq %union.tree_node* %fn, null, !dbg !10945
  br i1 %tobool230, label %cleanup236, label %lor.lhs.false231, !dbg !10945

lor.lhs.false231:                                 ; preds = %land.lhs.true229
  %79 = bitcast %union.tree_node* %fn to i8*, !dbg !10945
  call void @llvm.dbg.value(metadata %union.tree_node** %_t215, metadata !10869, metadata !DIExpression(DW_OP_deref)), !dbg !10944
  %call232 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t215, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %79, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10945
  %tobool233 = icmp eq %union.tree_node* %call232, null, !dbg !10945
  br i1 %tobool233, label %if.end235, label %cleanup236, !dbg !10943

if.end235:                                        ; preds = %lor.lhs.false231, %land.lhs.true223, %land.lhs.true221, %do.body214
  br label %cleanup236, !dbg !10947

cleanup236:                                       ; preds = %lor.lhs.false231, %land.lhs.true229, %if.end235
  %cleanup.dest.slot.8 = phi i1 [ true, %if.end235 ], [ false, %lor.lhs.false231 ], [ false, %land.lhs.true229 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #6, !dbg !10947
  br i1 %cleanup.dest.slot.8, label %do.body241, label %cleanup269

do.body241:                                       ; preds = %cleanup236
  %80 = bitcast %union.tree_node** %_t242 to i8*, !dbg !10948
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #6, !dbg !10948
  %81 = load %struct.tree_type*, %struct.tree_type** %71, align 8, !dbg !10948
  %size_unit246 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %81, i64 0, i32 3, !dbg !10948
  %82 = bitcast %union.tree_node** %size_unit246 to i64*, !dbg !10948
  %83 = load i64, i64* %82, align 8, !dbg !10948
  %84 = bitcast %union.tree_node** %_t242 to i64*, !dbg !10948
  store i64 %83, i64* %84, align 8, !dbg !10948
  call void @llvm.dbg.value(metadata i64 %83, metadata !10871, metadata !DIExpression()), !dbg !10949
  %tobool247 = icmp eq i64 %83, 0, !dbg !10950
  %85 = inttoptr i64 %83 to i64*, !dbg !10950
  br i1 %tobool247, label %if.end262, label %land.lhs.true248, !dbg !10950

land.lhs.true248:                                 ; preds = %do.body241
  %86 = inttoptr i64 %83 to %union.tree_node*, !dbg !10950
  call void @llvm.dbg.value(metadata %union.tree_node* %86, metadata !10871, metadata !DIExpression()), !dbg !10949
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10950
  %cmp249 = icmp eq %union.tree_node* %87, %86, !dbg !10950
  br i1 %cmp249, label %if.end262, label %land.lhs.true250, !dbg !10950

land.lhs.true250:                                 ; preds = %land.lhs.true248
  %bf.load252 = load i64, i64* %85, align 8, !dbg !10950
  %bf.cast25410 = and i64 %bf.load252, 65535, !dbg !10950
  %cmp255 = icmp eq i64 %bf.cast25410, 23, !dbg !10950
  br i1 %cmp255, label %if.end262, label %land.lhs.true256, !dbg !10950

land.lhs.true256:                                 ; preds = %land.lhs.true250
  %tobool257 = icmp eq %union.tree_node* %fn, null, !dbg !10950
  br i1 %tobool257, label %cleanup263, label %lor.lhs.false258, !dbg !10950

lor.lhs.false258:                                 ; preds = %land.lhs.true256
  %88 = bitcast %union.tree_node* %fn to i8*, !dbg !10950
  call void @llvm.dbg.value(metadata %union.tree_node** %_t242, metadata !10871, metadata !DIExpression(DW_OP_deref)), !dbg !10949
  %call259 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %_t242, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_var_from_fn, i8* nonnull %88, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !10950
  %tobool260 = icmp eq %union.tree_node* %call259, null, !dbg !10950
  br i1 %tobool260, label %if.end262, label %cleanup263, !dbg !10948

if.end262:                                        ; preds = %lor.lhs.false258, %land.lhs.true250, %land.lhs.true248, %do.body241
  br label %cleanup263, !dbg !10952

cleanup263:                                       ; preds = %lor.lhs.false258, %land.lhs.true256, %if.end262
  %cleanup.dest.slot.9 = phi i1 [ true, %if.end262 ], [ false, %lor.lhs.false258 ], [ false, %land.lhs.true256 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #6, !dbg !10952
  br i1 %cleanup.dest.slot.9, label %sw.epilog, label %cleanup269

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !10953

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb, %sw.bb43, %do.end33, %cleanup263, %cleanup94
  %89 = load i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 30, i32 0), align 8, !dbg !10953
  %call268 = call zeroext i8 %89(%union.tree_node* %type, %union.tree_node* %fn) #7, !dbg !10954
  br label %cleanup269, !dbg !10955

cleanup269.loopexit:                              ; preds = %cleanup126, %cleanup150, %cleanup175, %cleanup205
  br label %cleanup269, !dbg !10956

cleanup269:                                       ; preds = %cleanup269.loopexit, %sw.bb, %sw.bb43, %entry, %cleanup94, %cleanup70, %cleanup263, %cleanup236, %cleanup29, %cleanup, %sw.epilog
  %retval.13 = phi i8 [ 1, %cleanup ], [ 1, %cleanup29 ], [ %call268, %sw.epilog ], [ 1, %cleanup236 ], [ 1, %cleanup263 ], [ 1, %cleanup70 ], [ 1, %cleanup94 ], [ 0, %entry ], [ 1, %sw.bb ], [ 1, %sw.bb43 ], [ 1, %cleanup269.loopexit ], !dbg !10873
  ret i8 %retval.13, !dbg !10956
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @walk_tree_1(%union.tree_node** %tp, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) local_unnamed_addr #5 !dbg !10957 {
entry:
  %walk_subtrees = alloca i32, align 4
  %ce = alloca %struct.constructor_elt_d*, align 8
  %i = alloca %struct.tree_stmt_iterator, align 8
  %tmp = alloca %struct.tree_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !10969, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, metadata !10970, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata i8* %data, metadata !10971, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %pset, metadata !10972, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh, metadata !10973, metadata !DIExpression()), !dbg !11012
  %0 = bitcast i32* %walk_subtrees to i8*, !dbg !11013
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !11013
  %tobool1 = icmp eq %struct.pointer_set_t* %pset, null, !dbg !11014
  %tobool23 = icmp eq %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh, null, !dbg !11016
  br label %tail_recurse, !dbg !11018

tail_recurse:                                     ; preds = %tail_recurse.backedge, %entry
  %tp.addr.0 = phi %union.tree_node** [ %tp, %entry ], [ %tp.addr.0.be, %tail_recurse.backedge ]
  %retval.0 = phi %union.tree_node* [ undef, %entry ], [ %retval.0.be, %tail_recurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0, metadata !10969, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.label(metadata !11011), !dbg !11019
  %1 = load %union.tree_node*, %union.tree_node** %tp.addr.0, align 8, !dbg !11020
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !11020
  %2 = bitcast %union.tree_node* %1 to i8*, !dbg !11022
  br i1 %tobool, label %cleanup549.loopexit, label %if.end, !dbg !11022

if.end:                                           ; preds = %tail_recurse
  br i1 %tobool1, label %if.end4, label %land.lhs.true, !dbg !11023

land.lhs.true:                                    ; preds = %if.end
  %call = call i32 @pointer_set_insert(%struct.pointer_set_t* nonnull %pset, i8* nonnull %2) #7, !dbg !11024
  %tobool2 = icmp eq i32 %call, 0, !dbg !11024
  br i1 %tobool2, label %if.end4, label %cleanup549.loopexit, !dbg !11025

if.end4:                                          ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.value(metadata i32 1, metadata !10975, metadata !DIExpression()), !dbg !11012
  store i32 1, i32* %walk_subtrees, align 4, !dbg !11026
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !10975, metadata !DIExpression(DW_OP_deref)), !dbg !11012
  %call5 = call %union.tree_node* %func(%union.tree_node** %tp.addr.0, i32* nonnull %walk_subtrees, i8* %data) #7, !dbg !11027
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool6 = icmp eq %union.tree_node* %call5, null, !dbg !11028
  br i1 %tobool6, label %if.end8, label %cleanup549.loopexit, !dbg !11030

if.end8:                                          ; preds = %if.end4
  %3 = bitcast %union.tree_node** %tp.addr.0 to i64**, !dbg !11031
  %4 = load i64*, i64** %3, align 8, !dbg !11031
  %bf.load = load i64, i64* %4, align 8, !dbg !11031
  %bf.cast = and i64 %bf.load, 65535, !dbg !11031
  %5 = load i32, i32* %walk_subtrees, align 4, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %5, metadata !10975, metadata !DIExpression()), !dbg !11012
  %tobool9 = icmp eq i32 %5, 0, !dbg !11032
  br i1 %tobool9, label %if.then10, label %if.end22, !dbg !11034

if.then10:                                        ; preds = %if.end8
  %trunc = trunc i64 %bf.load to i16, !dbg !11035
  switch i16 %trunc, label %cleanup549.loopexit [
    i16 2, label %do.body
    i16 163, label %do.body14
  ], !dbg !11035

do.body:                                          ; preds = %if.then10
  %chain = getelementptr inbounds i64, i64* %4, i64 1, !dbg !11037
  %6 = bitcast i64* %chain to %union.tree_node**, !dbg !11037
  call void @llvm.dbg.value(metadata %union.tree_node** %6, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %tail_recurse.backedge, !dbg !11037

tail_recurse.backedge:                            ; preds = %do.body, %do.body14, %do.body39, %cleanup, %do.body71, %do.body95, %cleanup139, %do.body174, %do.body200, %cleanup230, %cleanup258, %cleanup298, %cleanup484, %cleanup531
  %tp.addr.0.be = phi %union.tree_node** [ %tp.addr.13, %cleanup531 ], [ %tp.addr.10, %cleanup484 ], [ %tp.addr.8, %cleanup298 ], [ %tp.addr.7, %cleanup258 ], [ %tp.addr.5, %cleanup230 ], [ %chain202, %do.body200 ], [ %chain176, %do.body174 ], [ %tp.addr.3, %cleanup139 ], [ %arrayidx96, %do.body95 ], [ %imag, %do.body71 ], [ %tp.addr.1, %cleanup ], [ %chain41, %do.body39 ], [ %6, %do.body ], [ %7, %do.body14 ]
  %retval.0.be = phi %union.tree_node* [ %retval.17, %cleanup531 ], [ %retval.14, %cleanup484 ], [ %retval.10, %cleanup298 ], [ %retval.9, %cleanup258 ], [ %retval.7, %cleanup230 ], [ %retval.0, %do.body200 ], [ %retval.0, %do.body174 ], [ %retval.4, %cleanup139 ], [ %retval.0, %do.body95 ], [ %retval.2, %do.body71 ], [ %retval.1, %cleanup ], [ %retval.0, %do.body39 ], [ %retval.0, %do.body ], [ %retval.0, %do.body14 ]
  br label %tail_recurse, !dbg !11012

do.body14:                                        ; preds = %if.then10
  %chain16 = getelementptr inbounds i64, i64* %4, i64 1, !dbg !11040
  %7 = bitcast i64* %chain16 to %union.tree_node**, !dbg !11040
  call void @llvm.dbg.value(metadata %union.tree_node** %7, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %tail_recurse.backedge, !dbg !11040

if.end22:                                         ; preds = %if.end8
  br i1 %tobool23, label %if.end30, label %if.then24, !dbg !11043

if.then24:                                        ; preds = %if.end22
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !10975, metadata !DIExpression(DW_OP_deref)), !dbg !11012
  %call25 = call %union.tree_node* %lh(%union.tree_node** %tp.addr.0, i32* nonnull %walk_subtrees, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset) #7, !dbg !11044
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool26 = icmp eq %union.tree_node* %call25, null, !dbg !11046
  %8 = load i32, i32* %walk_subtrees, align 4, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %8, metadata !10975, metadata !DIExpression()), !dbg !11012
  %tobool27 = icmp ne i32 %8, 0, !dbg !11048
  %or.cond = and i1 %tobool26, %tobool27, !dbg !11049
  br i1 %or.cond, label %if.end30, label %cleanup549.loopexit, !dbg !11049

if.end30:                                         ; preds = %if.end22, %if.then24
  %trunc5 = trunc i64 %bf.load to i16, !dbg !11050
  switch i16 %trunc5, label %sw.default488 [
    i16 0, label %sw.epilog548.loopexit
    i16 1, label %sw.epilog548.loopexit
    i16 23, label %sw.epilog548.loopexit
    i16 24, label %sw.epilog548.loopexit
    i16 25, label %sw.epilog548.loopexit
    i16 27, label %sw.epilog548.loopexit
    i16 28, label %sw.epilog548.loopexit
    i16 4, label %sw.epilog548.loopexit
    i16 62, label %sw.epilog548.loopexit
    i16 141, label %sw.epilog548.loopexit
    i16 31, label %sw.epilog548.loopexit
    i16 36, label %sw.epilog548.loopexit
    i16 2, label %do.body32
    i16 3, label %sw.bb44
    i16 26, label %do.body64
    i16 51, label %sw.bb75
    i16 120, label %do.body95
    i16 58, label %sw.bb99
    i16 147, label %sw.bb142
    i16 163, label %sw.bb161
    i16 55, label %sw.bb261
    i16 132, label %sw.bb302
  ], !dbg !11050

do.body32:                                        ; preds = %if.end30
  %9 = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_list**, !dbg !11051
  %10 = load %struct.tree_list*, %struct.tree_list** %9, align 8, !dbg !11051
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %10, i64 0, i32 2, !dbg !11051
  %call33 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %value, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11051
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool34 = icmp eq %union.tree_node* %call33, null, !dbg !11053
  br i1 %tobool34, label %do.body39, label %cleanup549.loopexit, !dbg !11051

do.body39:                                        ; preds = %do.body32
  %11 = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_common**, !dbg !11055
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !11055
  %chain41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 1, !dbg !11055
  call void @llvm.dbg.value(metadata %union.tree_node** %chain41, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %tail_recurse.backedge, !dbg !11055

sw.bb44:                                          ; preds = %if.end30
  %13 = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_vec**, !dbg !11057
  %14 = load %struct.tree_vec*, %struct.tree_vec** %13, align 8, !dbg !11057
  %length = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %14, i64 0, i32 1, !dbg !11057
  %15 = load i32, i32* %length, align 8, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %15, metadata !10977, metadata !DIExpression()), !dbg !11058
  %cmp45 = icmp eq i32 %15, 0, !dbg !11059
  br i1 %cmp45, label %cleanup, label %while.cond.preheader, !dbg !11061

while.cond.preheader:                             ; preds = %sw.bb44
  %16 = sext i32 %15 to i64, !dbg !11062
  br label %while.cond, !dbg !11062

while.cond:                                       ; preds = %do.body49.while.cond_crit_edge, %while.cond.preheader
  %indvars.iv66 = phi i64 [ %indvars.iv.next67, %do.body49.while.cond_crit_edge ], [ %16, %while.cond.preheader ], !dbg !11058
  %17 = phi %struct.tree_vec* [ %.pre39, %do.body49.while.cond_crit_edge ], [ %14, %while.cond.preheader ], !dbg !11058
  call void @llvm.dbg.value(metadata i64 %indvars.iv66, metadata !10977, metadata !DIExpression()), !dbg !11058
  %indvars.iv.next67 = add nsw i64 %indvars.iv66, -1, !dbg !11063
  call void @llvm.dbg.value(metadata i32 undef, metadata !10977, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11058
  %18 = trunc i64 %indvars.iv.next67 to i32, !dbg !11062
  %tobool48 = icmp eq i32 %18, 0, !dbg !11062
  br i1 %tobool48, label %do.body57, label %do.body49, !dbg !11062

do.body49:                                        ; preds = %while.cond
  %arrayidx = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %17, i64 0, i32 2, i64 %indvars.iv.next67, !dbg !11064
  %call51 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11064
  call void @llvm.dbg.value(metadata %union.tree_node* %call51, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool52 = icmp eq %union.tree_node* %call51, null, !dbg !11066
  br i1 %tobool52, label %do.body49.while.cond_crit_edge, label %cleanup.loopexit, !dbg !11064, !llvm.loop !11068

do.body49.while.cond_crit_edge:                   ; preds = %do.body49
  %.pre39 = load %struct.tree_vec*, %struct.tree_vec** %13, align 8, !dbg !11058
  br label %while.cond, !dbg !11064

do.body57:                                        ; preds = %while.cond
  %.lcssa75 = phi %struct.tree_vec* [ %17, %while.cond ], !dbg !11058
  %arrayidx60 = getelementptr inbounds %struct.tree_vec, %struct.tree_vec* %.lcssa75, i64 0, i32 2, i64 0, !dbg !11070
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx60, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %cleanup, !dbg !11070

cleanup.loopexit:                                 ; preds = %do.body49
  %call51.lcssa = phi %union.tree_node* [ %call51, %do.body49 ], !dbg !11064
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb44, %do.body57
  %cleanup.dest.slot.0 = phi i32 [ 2, %do.body57 ], [ 7, %sw.bb44 ], [ 1, %cleanup.loopexit ]
  %tp.addr.1 = phi %union.tree_node** [ %arrayidx60, %do.body57 ], [ %tp.addr.0, %sw.bb44 ], [ %tp.addr.0, %cleanup.loopexit ]
  %retval.1 = phi %union.tree_node* [ %retval.0, %do.body57 ], [ %retval.0, %sw.bb44 ], [ %call51.lcssa, %cleanup.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.1, metadata !10969, metadata !DIExpression()), !dbg !11012
  switch i32 %cleanup.dest.slot.0, label %cleanup549.loopexit [
    i32 0, label %do.body64
    i32 7, label %sw.epilog548.loopexit
    i32 2, label %tail_recurse.backedge
  ]

do.body64:                                        ; preds = %if.end30, %cleanup
  %tp.addr.2 = phi %union.tree_node** [ %tp.addr.0, %if.end30 ], [ %tp.addr.1, %cleanup ]
  %retval.2 = phi %union.tree_node* [ %retval.0, %if.end30 ], [ %retval.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.2, metadata !10969, metadata !DIExpression()), !dbg !11012
  %19 = bitcast %union.tree_node** %tp.addr.2 to %struct.tree_complex**, !dbg !11072
  %20 = load %struct.tree_complex*, %struct.tree_complex** %19, align 8, !dbg !11072
  %real = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %20, i64 0, i32 1, !dbg !11072
  %call65 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %real, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11072
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool66 = icmp eq %union.tree_node* %call65, null, !dbg !11074
  br i1 %tobool66, label %do.body71, label %cleanup549.loopexit, !dbg !11072

do.body71:                                        ; preds = %do.body64
  %21 = load %struct.tree_complex*, %struct.tree_complex** %19, align 8, !dbg !11076
  %imag = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %21, i64 0, i32 2, !dbg !11076
  call void @llvm.dbg.value(metadata %union.tree_node** %imag, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %tail_recurse.backedge, !dbg !11076

sw.bb75:                                          ; preds = %if.end30
  %tp.addr.0.lcssa85 = phi %union.tree_node** [ %tp.addr.0, %if.end30 ]
  %retval.0.lcssa80 = phi %union.tree_node* [ %retval.0, %if.end30 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa85, metadata !10969, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa85, metadata !10969, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.0.lcssa85, metadata !10969, metadata !DIExpression()), !dbg !11012
  %22 = bitcast %struct.constructor_elt_d** %ce to i8*, !dbg !11078
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6, !dbg !11078
  call void @llvm.dbg.value(metadata i64 0, metadata !10980, metadata !DIExpression()), !dbg !11079
  %23 = bitcast %union.tree_node** %tp.addr.0.lcssa85 to %struct.tree_constructor**, !dbg !11080
  br label %for.cond, !dbg !11083

for.cond:                                         ; preds = %for.inc, %sw.bb75
  %idx.0 = phi i64 [ 0, %sw.bb75 ], [ %inc, %for.inc ], !dbg !11084
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !10980, metadata !DIExpression()), !dbg !11079
  %24 = load %struct.tree_constructor*, %struct.tree_constructor** %23, align 8, !dbg !11085
  %elts = getelementptr inbounds %struct.tree_constructor, %struct.tree_constructor* %24, i64 0, i32 1, !dbg !11085
  %25 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %elts, align 8, !dbg !11085
  %tobool76 = icmp eq %struct.VEC_constructor_elt_gc* %25, null, !dbg !11085
  br i1 %tobool76, label %cond.end, label %cond.true, !dbg !11085

cond.true:                                        ; preds = %for.cond
  %base79 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %25, i64 0, i32 0, !dbg !11085
  br label %cond.end, !dbg !11085

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base79, %cond.true ], [ null, %for.cond ], !dbg !11085
  %conv = trunc i64 %idx.0 to i32, !dbg !11085
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !10982, metadata !DIExpression(DW_OP_deref)), !dbg !11079
  %call80 = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %cond, i32 %conv, %struct.constructor_elt_d** nonnull %ce) #8, !dbg !11085
  %tobool81 = icmp eq i32 %call80, 0, !dbg !11086
  br i1 %tobool81, label %cleanup90, label %do.body82, !dbg !11086

do.body82:                                        ; preds = %cond.end
  %26 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !11087
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %26, metadata !10982, metadata !DIExpression()), !dbg !11079
  %value83 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %26, i64 0, i32 1, !dbg !11087
  %call84 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %value83, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11087
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool85 = icmp eq %union.tree_node* %call84, null, !dbg !11089
  br i1 %tobool85, label %for.inc, label %cleanup90, !dbg !11087

for.inc:                                          ; preds = %do.body82
  %inc = add i64 %idx.0, 1, !dbg !11091
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10980, metadata !DIExpression()), !dbg !11079
  br label %for.cond, !dbg !11092, !llvm.loop !11093

cleanup90:                                        ; preds = %do.body82, %cond.end
  %cleanup.dest.slot.1 = phi i1 [ false, %do.body82 ], [ true, %cond.end ]
  %retval.3 = phi %union.tree_node* [ %call84, %do.body82 ], [ %retval.0.lcssa80, %cond.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6, !dbg !11095
  br i1 %cleanup.dest.slot.1, label %sw.epilog548, label %cleanup549

do.body95:                                        ; preds = %if.end30
  %27 = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_exp**, !dbg !11096
  %28 = load %struct.tree_exp*, %struct.tree_exp** %27, align 8, !dbg !11096
  %arrayidx96 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %28, i64 0, i32 3, i64 0, !dbg !11096
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx96, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %tail_recurse.backedge, !dbg !11096

sw.bb99:                                          ; preds = %if.end30
  %29 = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_exp**, !dbg !11098
  %30 = load %struct.tree_exp*, %struct.tree_exp** %29, align 8, !dbg !11098
  %arrayidx102 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %30, i64 0, i32 3, i64 0, !dbg !11098
  br label %for.cond103, !dbg !11100

for.cond103:                                      ; preds = %for.inc129, %sw.bb99
  %decl.0.in = phi %union.tree_node** [ %arrayidx102, %sw.bb99 ], [ %chain131, %for.inc129 ]
  %decl.0 = load %union.tree_node*, %union.tree_node** %decl.0.in, align 8, !dbg !11101
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !10983, metadata !DIExpression()), !dbg !11102
  %tobool104 = icmp eq %union.tree_node* %decl.0, null, !dbg !11103
  br i1 %tobool104, label %do.body133, label %do.body106, !dbg !11103

do.body106:                                       ; preds = %for.cond103
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11104
  %call107 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %initial, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11104
  call void @llvm.dbg.value(metadata %union.tree_node* %call107, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool108 = icmp eq %union.tree_node* %call107, null, !dbg !11108
  br i1 %tobool108, label %do.body113, label %cleanup139.loopexit, !dbg !11104

do.body113:                                       ; preds = %do.body106
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11110
  %call115 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %size, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11110
  call void @llvm.dbg.value(metadata %union.tree_node* %call115, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool116 = icmp eq %union.tree_node* %call115, null, !dbg !11112
  br i1 %tobool116, label %do.body121, label %cleanup139.loopexit, !dbg !11110

do.body121:                                       ; preds = %do.body113
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11114
  %call123 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %size_unit, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11114
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool124 = icmp eq %union.tree_node* %call123, null, !dbg !11116
  br i1 %tobool124, label %for.inc129, label %cleanup139.loopexit, !dbg !11114

for.inc129:                                       ; preds = %do.body121
  %chain131 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11118
  br label %for.cond103, !dbg !11119, !llvm.loop !11120

do.body133:                                       ; preds = %for.cond103
  %31 = load %struct.tree_exp*, %struct.tree_exp** %29, align 8, !dbg !11122
  %arrayidx136 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %31, i64 0, i32 3, i64 1, !dbg !11122
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx136, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %cleanup139, !dbg !11122

cleanup139.loopexit:                              ; preds = %do.body106, %do.body113, %do.body121
  %retval.4.ph = phi %union.tree_node* [ %call123, %do.body121 ], [ %call115, %do.body113 ], [ %call107, %do.body106 ]
  br label %cleanup139

cleanup139:                                       ; preds = %cleanup139.loopexit, %do.body133
  %cleanup.dest.slot.2 = phi i32 [ 2, %do.body133 ], [ 1, %cleanup139.loopexit ]
  %tp.addr.3 = phi %union.tree_node** [ %arrayidx136, %do.body133 ], [ %tp.addr.0, %cleanup139.loopexit ]
  %retval.4 = phi %union.tree_node* [ %retval.0, %do.body133 ], [ %retval.4.ph, %cleanup139.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.3, metadata !10969, metadata !DIExpression()), !dbg !11012
  switch i32 %cleanup.dest.slot.2, label %cleanup549.loopexit [
    i32 0, label %sw.bb142
    i32 2, label %tail_recurse.backedge
  ]

sw.bb142:                                         ; preds = %cleanup139, %if.end30
  %tp.addr.4 = phi %union.tree_node** [ %tp.addr.0, %if.end30 ], [ %tp.addr.3, %cleanup139 ]
  %retval.5 = phi %union.tree_node* [ %retval.0, %if.end30 ], [ %retval.4, %cleanup139 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.4, metadata !10969, metadata !DIExpression()), !dbg !11012
  %32 = bitcast %struct.tree_stmt_iterator* %i to i8*, !dbg !11124
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #6, !dbg !11124
  %33 = bitcast %struct.tree_stmt_iterator* %tmp to i8*, !dbg !11125
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #6, !dbg !11125
  %34 = load %union.tree_node*, %union.tree_node** %tp.addr.4, align 8, !dbg !11127
  %call143 = call fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_start(%union.tree_node* %34) #8, !dbg !11125
  %35 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp, i64 0, i32 0, !dbg !11125
  %36 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call143, 0, !dbg !11125
  store %struct.tree_statement_list_node* %36, %struct.tree_statement_list_node** %35, align 8, !dbg !11125
  %37 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp, i64 0, i32 1, !dbg !11125
  %38 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call143, 1, !dbg !11125
  store %union.tree_node* %38, %union.tree_node** %37, align 8, !dbg !11125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %33, i64 16, i1 false), !dbg !11125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #6, !dbg !11125
  %39 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 0, !dbg !11128
  %40 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 1, !dbg !11131
  br label %for.cond144, !dbg !11132

for.cond144:                                      ; preds = %for.inc156, %sw.bb142
  %41 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %39, align 8, !dbg !11133
  %42 = load %union.tree_node*, %union.tree_node** %40, align 8, !dbg !11133
  %call145 = call fastcc zeroext i8 @tsi_end_p(%struct.tree_statement_list_node* %41, %union.tree_node* %42) #8, !dbg !11133
  %tobool146 = icmp eq i8 %call145, 0, !dbg !11134
  br i1 %tobool146, label %do.body148, label %cleanup158, !dbg !11135

do.body148:                                       ; preds = %for.cond144
  %43 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %39, align 8, !dbg !11128
  %44 = load %union.tree_node*, %union.tree_node** %40, align 8, !dbg !11128
  %call149 = call fastcc %union.tree_node** @tsi_stmt_ptr(%struct.tree_statement_list_node* %43, %union.tree_node* %44) #8, !dbg !11128
  %call150 = call %union.tree_node* @walk_tree_1(%union.tree_node** %call149, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11128
  call void @llvm.dbg.value(metadata %union.tree_node* %call150, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool151 = icmp eq %union.tree_node* %call150, null, !dbg !11136
  br i1 %tobool151, label %for.inc156, label %cleanup158, !dbg !11128

for.inc156:                                       ; preds = %do.body148
  call void @llvm.dbg.value(metadata %struct.tree_stmt_iterator* %i, metadata !10985, metadata !DIExpression(DW_OP_deref)), !dbg !11138
  call fastcc void @tsi_next(%struct.tree_stmt_iterator* nonnull %i) #8, !dbg !11139
  br label %for.cond144, !dbg !11140, !llvm.loop !11141

cleanup158:                                       ; preds = %do.body148, %for.cond144
  %cleanup.dest.slot.3 = phi i1 [ false, %do.body148 ], [ true, %for.cond144 ]
  %retval.6 = phi %union.tree_node* [ %call150, %do.body148 ], [ %retval.5, %for.cond144 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #6, !dbg !11143
  br i1 %cleanup.dest.slot.3, label %sw.epilog548, label %cleanup549

sw.bb161:                                         ; preds = %if.end30
  %45 = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_omp_clause**, !dbg !11144
  %46 = load %struct.tree_omp_clause*, %struct.tree_omp_clause** %45, align 8, !dbg !11144
  %code162 = getelementptr inbounds %struct.tree_omp_clause, %struct.tree_omp_clause* %46, i64 0, i32 2, !dbg !11144
  %47 = load i32, i32* %code162, align 4, !dbg !11144
  %48 = getelementptr inbounds %struct.tree_omp_clause, %struct.tree_omp_clause* %46, i64 0, i32 0, !dbg !11145
  switch i32 %47, label %sw.default [
    i32 1, label %do.body164
    i32 2, label %do.body164
    i32 3, label %do.body164
    i32 6, label %do.body164
    i32 7, label %do.body164
    i32 8, label %do.body164
    i32 9, label %do.body164
    i32 10, label %do.body164
    i32 11, label %do.body174
    i32 12, label %do.body174
    i32 13, label %do.body174
    i32 15, label %do.body174
    i32 4, label %do.body180
    i32 14, label %for.cond207.preheader
    i32 5, label %sw.bb233
  ], !dbg !11145

for.cond207.preheader:                            ; preds = %sw.bb161
  %49 = bitcast %struct.tree_omp_clause* %46 to %union.tree_node*, !dbg !11145
  br label %for.cond207, !dbg !11146

do.body164:                                       ; preds = %sw.bb161, %sw.bb161, %sw.bb161, %sw.bb161, %sw.bb161, %sw.bb161, %sw.bb161, %sw.bb161
  %arrayidx166 = getelementptr inbounds %struct.tree_omp_clause, %struct.tree_omp_clause* %46, i64 0, i32 6, i64 0, !dbg !11148
  %call167 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx166, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11148
  call void @llvm.dbg.value(metadata %union.tree_node* %call167, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool168 = icmp eq %union.tree_node* %call167, null, !dbg !11150
  br i1 %tobool168, label %do.body164.do.body174_crit_edge, label %cleanup549.loopexit, !dbg !11148

do.body164.do.body174_crit_edge:                  ; preds = %do.body164
  %.phi.trans.insert = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_common**, !dbg !11152
  %.pre38 = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !11154
  br label %do.body174, !dbg !11148

do.body174:                                       ; preds = %do.body164.do.body174_crit_edge, %sw.bb161, %sw.bb161, %sw.bb161, %sw.bb161
  %50 = phi %struct.tree_common* [ %.pre38, %do.body164.do.body174_crit_edge ], [ %48, %sw.bb161 ], [ %48, %sw.bb161 ], [ %48, %sw.bb161 ], [ %48, %sw.bb161 ], !dbg !11154
  %chain176 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %50, i64 0, i32 1, !dbg !11154
  call void @llvm.dbg.value(metadata %union.tree_node** %chain176, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %tail_recurse.backedge, !dbg !11154

do.body180:                                       ; preds = %sw.bb161
  %arrayidx183 = getelementptr inbounds %struct.tree_omp_clause, %struct.tree_omp_clause* %46, i64 0, i32 6, i64 0, !dbg !11155
  %call184 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx183, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11155
  call void @llvm.dbg.value(metadata %union.tree_node* %call184, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool185 = icmp eq %union.tree_node* %call184, null, !dbg !11157
  br i1 %tobool185, label %do.body190, label %cleanup549.loopexit, !dbg !11155

do.body190:                                       ; preds = %do.body180
  %51 = load %struct.tree_omp_clause*, %struct.tree_omp_clause** %45, align 8, !dbg !11159
  %arrayidx193 = getelementptr inbounds %struct.tree_omp_clause, %struct.tree_omp_clause* %51, i64 0, i32 6, i64 1, !dbg !11159
  %call194 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx193, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11159
  call void @llvm.dbg.value(metadata %union.tree_node* %call194, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool195 = icmp eq %union.tree_node* %call194, null, !dbg !11161
  br i1 %tobool195, label %do.body200, label %cleanup549.loopexit, !dbg !11159

do.body200:                                       ; preds = %do.body190
  %52 = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_common**, !dbg !11163
  %53 = load %struct.tree_common*, %struct.tree_common** %52, align 8, !dbg !11163
  %chain202 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %53, i64 0, i32 1, !dbg !11163
  call void @llvm.dbg.value(metadata %union.tree_node** %chain202, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %tail_recurse.backedge, !dbg !11163

for.cond207:                                      ; preds = %for.cond207.preheader, %for.inc222
  %indvars.iv60 = phi i64 [ 0, %for.cond207.preheader ], [ %indvars.iv.next61, %for.inc222 ], !dbg !11165
  %54 = phi %union.tree_node* [ %49, %for.cond207.preheader ], [ %.pre37, %for.inc222 ], !dbg !11165
  call void @llvm.dbg.value(metadata i64 %indvars.iv60, metadata !10993, metadata !DIExpression()), !dbg !11165
  %exitcond62 = icmp eq i64 %indvars.iv60, 3, !dbg !11166
  br i1 %exitcond62, label %do.body225, label %do.body211, !dbg !11146

do.body211:                                       ; preds = %for.cond207
  %ops213 = getelementptr inbounds %union.tree_node, %union.tree_node* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11168
  %55 = bitcast i40* %ops213 to [1 x %union.tree_node*]*, !dbg !11168
  %arrayidx215 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %55, i64 0, i64 %indvars.iv60, !dbg !11168
  %call216 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx215, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11168
  call void @llvm.dbg.value(metadata %union.tree_node* %call216, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool217 = icmp eq %union.tree_node* %call216, null, !dbg !11170
  br i1 %tobool217, label %for.inc222, label %cleanup230.loopexit, !dbg !11168

for.inc222:                                       ; preds = %do.body211
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1, !dbg !11172
  call void @llvm.dbg.value(metadata i32 undef, metadata !10993, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11165
  %.pre37 = load %union.tree_node*, %union.tree_node** %tp.addr.0, align 8, !dbg !11165
  br label %for.cond207, !dbg !11173, !llvm.loop !11174

do.body225:                                       ; preds = %for.cond207
  %.lcssa71 = phi %union.tree_node* [ %54, %for.cond207 ], !dbg !11165
  %chain227 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11176
  call void @llvm.dbg.value(metadata %union.tree_node** %chain227, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %cleanup230, !dbg !11176

cleanup230.loopexit:                              ; preds = %do.body211
  %call216.lcssa = phi %union.tree_node* [ %call216, %do.body211 ], !dbg !11168
  br label %cleanup230

cleanup230:                                       ; preds = %cleanup230.loopexit, %do.body225
  %cleanup.dest.slot.4 = phi i32 [ 2, %do.body225 ], [ 1, %cleanup230.loopexit ]
  %tp.addr.5 = phi %union.tree_node** [ %chain227, %do.body225 ], [ %tp.addr.0, %cleanup230.loopexit ]
  %retval.7 = phi %union.tree_node* [ %retval.0, %do.body225 ], [ %call216.lcssa, %cleanup230.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.5, metadata !10969, metadata !DIExpression()), !dbg !11012
  switch i32 %cleanup.dest.slot.4, label %cleanup549.loopexit [
    i32 0, label %sw.bb233
    i32 2, label %tail_recurse.backedge
  ]

sw.bb233:                                         ; preds = %cleanup230, %sw.bb161
  %tp.addr.6 = phi %union.tree_node** [ %tp.addr.0, %sw.bb161 ], [ %tp.addr.5, %cleanup230 ]
  %retval.8 = phi %union.tree_node* [ %retval.0, %sw.bb161 ], [ %retval.7, %cleanup230 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.6, metadata !10969, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata i32 0, metadata !10996, metadata !DIExpression()), !dbg !11178
  br label %for.cond235, !dbg !11179

for.cond235:                                      ; preds = %for.inc250, %sw.bb233
  %indvars.iv63 = phi i64 [ %indvars.iv.next64, %for.inc250 ], [ 0, %sw.bb233 ], !dbg !11181
  call void @llvm.dbg.value(metadata i64 %indvars.iv63, metadata !10996, metadata !DIExpression()), !dbg !11178
  %56 = load %union.tree_node*, %union.tree_node** %tp.addr.6, align 8, !dbg !11178
  %exitcond65 = icmp eq i64 %indvars.iv63, 4, !dbg !11182
  br i1 %exitcond65, label %do.body253, label %do.body239, !dbg !11184

do.body239:                                       ; preds = %for.cond235
  %ops241 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11185
  %57 = bitcast i40* %ops241 to [1 x %union.tree_node*]*, !dbg !11185
  %arrayidx243 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %57, i64 0, i64 %indvars.iv63, !dbg !11185
  %call244 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx243, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11185
  call void @llvm.dbg.value(metadata %union.tree_node* %call244, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool245 = icmp eq %union.tree_node* %call244, null, !dbg !11187
  br i1 %tobool245, label %for.inc250, label %cleanup258.loopexit, !dbg !11185

for.inc250:                                       ; preds = %do.body239
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1, !dbg !11189
  call void @llvm.dbg.value(metadata i32 undef, metadata !10996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11178
  br label %for.cond235, !dbg !11190, !llvm.loop !11191

do.body253:                                       ; preds = %for.cond235
  %.lcssa73 = phi %union.tree_node* [ %56, %for.cond235 ], !dbg !11178
  %chain255 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11193
  call void @llvm.dbg.value(metadata %union.tree_node** %chain255, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %cleanup258, !dbg !11193

cleanup258.loopexit:                              ; preds = %do.body239
  %call244.lcssa = phi %union.tree_node* [ %call244, %do.body239 ], !dbg !11185
  br label %cleanup258

cleanup258:                                       ; preds = %cleanup258.loopexit, %do.body253
  %cleanup.dest.slot.5 = phi i32 [ 2, %do.body253 ], [ 1, %cleanup258.loopexit ]
  %tp.addr.7 = phi %union.tree_node** [ %chain255, %do.body253 ], [ %tp.addr.6, %cleanup258.loopexit ]
  %retval.9 = phi %union.tree_node* [ %retval.8, %do.body253 ], [ %call244.lcssa, %cleanup258.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.7, metadata !10969, metadata !DIExpression()), !dbg !11012
  switch i32 %cleanup.dest.slot.5, label %cleanup549.loopexit [
    i32 0, label %sw.default
    i32 2, label %tail_recurse.backedge
  ]

sw.default:                                       ; preds = %cleanup258, %sw.bb161
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 10174, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !11195
  br label %sw.epilog548, !dbg !11196

sw.bb261:                                         ; preds = %if.end30
  %58 = bitcast %union.tree_node** %tp.addr.0 to %struct.tree_exp**, !dbg !11197
  %59 = load %struct.tree_exp*, %struct.tree_exp** %58, align 8, !dbg !11197
  %arrayidx266 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %59, i64 0, i32 3, i64 3, !dbg !11197
  %60 = load %union.tree_node*, %union.tree_node** %arrayidx266, align 8, !dbg !11197
  %arrayidx269 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %59, i64 0, i32 3, i64 1, !dbg !11198
  %61 = load %union.tree_node*, %union.tree_node** %arrayidx269, align 8, !dbg !11198
  %cmp270 = icmp eq %union.tree_node* %60, %61, !dbg !11199
  %cond272 = select i1 %cmp270, i32 2, i32 3, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %cond272, metadata !11000, metadata !DIExpression()), !dbg !11201
  call void @llvm.dbg.value(metadata i32 0, metadata !10998, metadata !DIExpression()), !dbg !11201
  %wide.trip.count = zext i32 %cond272 to i64, !dbg !11202
  br label %for.cond273, !dbg !11205

for.cond273:                                      ; preds = %for.inc288, %sw.bb261
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc288 ], [ 0, %sw.bb261 ], !dbg !11201
  %62 = phi %struct.tree_exp* [ %.pre, %for.inc288 ], [ %59, %sw.bb261 ], !dbg !11201
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10998, metadata !DIExpression()), !dbg !11201
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !11202
  br i1 %exitcond, label %do.body291, label %do.body277, !dbg !11206

do.body277:                                       ; preds = %for.cond273
  %arrayidx281 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %62, i64 0, i32 3, i64 %indvars.iv, !dbg !11207
  %call282 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx281, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11207
  call void @llvm.dbg.value(metadata %union.tree_node* %call282, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool283 = icmp eq %union.tree_node* %call282, null, !dbg !11209
  br i1 %tobool283, label %for.inc288, label %cleanup298.loopexit, !dbg !11207

for.inc288:                                       ; preds = %do.body277
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11211
  call void @llvm.dbg.value(metadata i32 undef, metadata !10998, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11201
  %.pre = load %struct.tree_exp*, %struct.tree_exp** %58, align 8, !dbg !11201
  br label %for.cond273, !dbg !11212, !llvm.loop !11213

do.body291:                                       ; preds = %for.cond273
  %.lcssa = phi %struct.tree_exp* [ %62, %for.cond273 ], !dbg !11201
  %idxprom294 = zext i32 %cond272 to i64, !dbg !11215
  %arrayidx295 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %.lcssa, i64 0, i32 3, i64 %idxprom294, !dbg !11215
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx295, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %cleanup298, !dbg !11215

cleanup298.loopexit:                              ; preds = %do.body277
  %call282.lcssa = phi %union.tree_node* [ %call282, %do.body277 ], !dbg !11207
  br label %cleanup298

cleanup298:                                       ; preds = %cleanup298.loopexit, %do.body291
  %cleanup.dest.slot.6 = phi i32 [ 2, %do.body291 ], [ 1, %cleanup298.loopexit ]
  %tp.addr.8 = phi %union.tree_node** [ %arrayidx295, %do.body291 ], [ %tp.addr.0, %cleanup298.loopexit ]
  %retval.10 = phi %union.tree_node* [ %retval.0, %do.body291 ], [ %call282.lcssa, %cleanup298.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.8, metadata !10969, metadata !DIExpression()), !dbg !11012
  switch i32 %cleanup.dest.slot.6, label %cleanup549.loopexit [
    i32 0, label %sw.bb302
    i32 2, label %tail_recurse.backedge
  ]

sw.bb302:                                         ; preds = %cleanup298, %if.end30
  %tp.addr.9 = phi %union.tree_node** [ %tp.addr.0, %if.end30 ], [ %tp.addr.8, %cleanup298 ]
  %retval.11 = phi %union.tree_node* [ %retval.0, %if.end30 ], [ %retval.10, %cleanup298 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.9, metadata !10969, metadata !DIExpression()), !dbg !11012
  %63 = bitcast %union.tree_node** %tp.addr.9 to %struct.tree_exp**, !dbg !11217
  %64 = load %struct.tree_exp*, %struct.tree_exp** %63, align 8, !dbg !11217
  %arrayidx305 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %64, i64 0, i32 3, i64 0, !dbg !11217
  %65 = bitcast %union.tree_node** %arrayidx305 to i64**, !dbg !11217
  %66 = load i64*, i64** %65, align 8, !dbg !11217
  %bf.load307 = load i64, i64* %66, align 8, !dbg !11217
  %bf.cast3096 = and i64 %bf.load307, 65535, !dbg !11218
  %cmp310 = icmp eq i64 %bf.cast3096, 35, !dbg !11218
  br i1 %cmp310, label %if.then312, label %sw.default488, !dbg !11219

if.then312:                                       ; preds = %sw.bb302
  %type = getelementptr inbounds i64, i64* %66, i64 2, !dbg !11220
  %67 = bitcast i64* %type to %union.tree_node**, !dbg !11220
  call void @llvm.dbg.value(metadata %union.tree_node** %67, metadata !11001, metadata !DIExpression()), !dbg !11221
  %68 = bitcast i64* %type to i64**, !dbg !11222
  %69 = load i64*, i64** %68, align 8, !dbg !11222
  %bf.load318 = load i64, i64* %69, align 8, !dbg !11222
  %bf.cast3207 = and i64 %bf.load318, 65535, !dbg !11224
  %cmp321 = icmp eq i64 %bf.cast3207, 0, !dbg !11224
  br i1 %cmp321, label %cleanup484, label %if.end324, !dbg !11225

if.end324:                                        ; preds = %if.then312
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !10975, metadata !DIExpression(DW_OP_deref)), !dbg !11012
  %call325 = call %union.tree_node* %func(%union.tree_node** nonnull %67, i32* nonnull %walk_subtrees, i8* %data) #7, !dbg !11226
  call void @llvm.dbg.value(metadata %union.tree_node* %call325, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool326 = icmp eq %union.tree_node* %call325, null, !dbg !11227
  %70 = load i32, i32* %walk_subtrees, align 4, !dbg !11229
  call void @llvm.dbg.value(metadata i32 %70, metadata !10975, metadata !DIExpression()), !dbg !11012
  %tobool328 = icmp ne i32 %70, 0, !dbg !11229
  %or.cond4 = and i1 %tobool326, %tobool328, !dbg !11230
  br i1 %or.cond4, label %if.end330, label %cleanup484, !dbg !11230

if.end330:                                        ; preds = %if.end324
  %71 = load %union.tree_node*, %union.tree_node** %67, align 8, !dbg !11231
  %call331 = call fastcc %union.tree_node* @walk_type_fields(%union.tree_node* %71, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11232
  call void @llvm.dbg.value(metadata %union.tree_node* %call331, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool332 = icmp eq %union.tree_node* %call331, null, !dbg !11233
  br i1 %tobool332, label %if.end334, label %cleanup484, !dbg !11235

if.end334:                                        ; preds = %if.end330
  %72 = load i64*, i64** %68, align 8, !dbg !11236
  %bf.load336 = load i64, i64* %72, align 8, !dbg !11236
  %bf.cast3388 = and i64 %bf.load336, 65535, !dbg !11236
  %cmp339 = icmp eq i64 %bf.cast3388, 16, !dbg !11236
  br i1 %cmp339, label %if.then355, label %lor.lhs.false341, !dbg !11236

lor.lhs.false341:                                 ; preds = %if.end334
  %cmp346 = icmp eq i64 %bf.cast3388, 17, !dbg !11236
  br i1 %cmp346, label %if.then355, label %lor.lhs.false348, !dbg !11236

lor.lhs.false348:                                 ; preds = %lor.lhs.false341
  %cmp353 = icmp eq i64 %bf.cast3388, 18, !dbg !11236
  br i1 %cmp353, label %if.then355, label %if.else416, !dbg !11237

if.then355:                                       ; preds = %lor.lhs.false348, %lor.lhs.false341, %if.end334
  %73 = bitcast i64* %type to %struct.tree_type**, !dbg !11238
  %values = getelementptr inbounds i64, i64* %72, i64 3, !dbg !11238
  %74 = bitcast i64* %values to %union.tree_node**, !dbg !11238
  br label %for.cond357, !dbg !11240

for.cond357:                                      ; preds = %for.inc409, %if.then355
  %field.0.in = phi %union.tree_node** [ %74, %if.then355 ], [ %chain411, %for.inc409 ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !11241
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !11004, metadata !DIExpression()), !dbg !11242
  %tobool358 = icmp eq %union.tree_node* %field.0, null, !dbg !11243
  br i1 %tobool358, label %cleanup413, label %for.body359, !dbg !11243

for.body359:                                      ; preds = %for.cond357
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11244
  %bf.load361 = load i64, i64* %75, align 8, !dbg !11244
  %bf.cast36316 = and i64 %bf.load361, 65535, !dbg !11248
  %cmp364 = icmp eq i64 %bf.cast36316, 31, !dbg !11248
  br i1 %cmp364, label %do.body368, label %for.inc409, !dbg !11249

do.body368:                                       ; preds = %for.body359
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11250
  %76 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !11250
  %call369 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %76, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11250
  call void @llvm.dbg.value(metadata %union.tree_node* %call369, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool370 = icmp eq %union.tree_node* %call369, null, !dbg !11252
  br i1 %tobool370, label %do.body375, label %cleanup413, !dbg !11250

do.body375:                                       ; preds = %do.body368
  %size377 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11254
  %call378 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %size377, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11254
  call void @llvm.dbg.value(metadata %union.tree_node* %call378, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool379 = icmp eq %union.tree_node* %call378, null, !dbg !11256
  br i1 %tobool379, label %do.body384, label %cleanup413, !dbg !11254

do.body384:                                       ; preds = %do.body375
  %size_unit386 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11258
  %call387 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %size_unit386, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11258
  call void @llvm.dbg.value(metadata %union.tree_node* %call387, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool388 = icmp eq %union.tree_node* %call387, null, !dbg !11260
  br i1 %tobool388, label %do.end392, label %cleanup413, !dbg !11258

do.end392:                                        ; preds = %do.body384
  %77 = load i64*, i64** %68, align 8, !dbg !11262
  %bf.load394 = load i64, i64* %77, align 8, !dbg !11262
  %bf.cast39617 = and i64 %bf.load394, 65535, !dbg !11264
  %cmp397 = icmp eq i64 %bf.cast39617, 18, !dbg !11264
  br i1 %cmp397, label %do.body400, label %for.inc409, !dbg !11265

do.body400:                                       ; preds = %do.end392
  %78 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !11266
  %call402 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %78, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11266
  call void @llvm.dbg.value(metadata %union.tree_node* %call402, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool403 = icmp eq %union.tree_node* %call402, null, !dbg !11268
  br i1 %tobool403, label %for.inc409, label %cleanup413, !dbg !11266

for.inc409:                                       ; preds = %do.body400, %for.body359, %do.end392
  %chain411 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11270
  br label %for.cond357, !dbg !11271, !llvm.loop !11272

cleanup413:                                       ; preds = %do.body400, %do.body384, %do.body375, %do.body368, %for.cond357
  %cleanup.dest.slot.7 = phi i32 [ 1, %do.body368 ], [ 1, %do.body375 ], [ 1, %do.body384 ], [ 1, %do.body400 ], [ 0, %for.cond357 ]
  %retval.12 = phi %union.tree_node* [ %call369, %do.body368 ], [ %call378, %do.body375 ], [ %call387, %do.body384 ], [ %call402, %do.body400 ], [ %retval.11, %for.cond357 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.7, 0
  br i1 %cond1, label %do.body470, label %cleanup484

if.else416:                                       ; preds = %lor.lhs.false348
  %cmp421 = icmp eq i64 %bf.cast3388, 7, !dbg !11274
  br i1 %cmp421, label %do.body452, label %lor.lhs.false423, !dbg !11276

lor.lhs.false423:                                 ; preds = %if.else416
  %cmp428 = icmp eq i64 %bf.cast3388, 6, !dbg !11277
  br i1 %cmp428, label %do.body452, label %lor.lhs.false430, !dbg !11278

lor.lhs.false430:                                 ; preds = %lor.lhs.false423
  %cmp435 = icmp eq i64 %bf.cast3388, 8, !dbg !11279
  br i1 %cmp435, label %do.body452, label %lor.lhs.false437, !dbg !11280

lor.lhs.false437:                                 ; preds = %lor.lhs.false430
  %cmp442 = icmp eq i64 %bf.cast3388, 11, !dbg !11281
  br i1 %cmp442, label %do.body452, label %lor.lhs.false444, !dbg !11282

lor.lhs.false444:                                 ; preds = %lor.lhs.false437
  %cmp449 = icmp eq i64 %bf.cast3388, 9, !dbg !11283
  br i1 %cmp449, label %do.body452, label %lor.lhs.false444.do.body470_crit_edge, !dbg !11284

lor.lhs.false444.do.body470_crit_edge:            ; preds = %lor.lhs.false444
  %.pre40 = bitcast i64* %type to %struct.tree_type**, !dbg !11285
  br label %do.body470, !dbg !11284

do.body452:                                       ; preds = %if.else416, %lor.lhs.false423, %lor.lhs.false430, %lor.lhs.false437, %lor.lhs.false444
  %79 = bitcast i64* %type to %struct.tree_type**, !dbg !11287
  %minval = getelementptr inbounds i64, i64* %72, i64 13, !dbg !11287
  %80 = bitcast i64* %minval to %union.tree_node**, !dbg !11287
  %call454 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %80, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11287
  call void @llvm.dbg.value(metadata %union.tree_node* %call454, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool455 = icmp eq %union.tree_node* %call454, null, !dbg !11290
  br i1 %tobool455, label %do.body460, label %cleanup484, !dbg !11287

do.body460:                                       ; preds = %do.body452
  %81 = load %struct.tree_type*, %struct.tree_type** %79, align 8, !dbg !11292
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %81, i64 0, i32 14, !dbg !11292
  %call462 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %maxval, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11292
  call void @llvm.dbg.value(metadata %union.tree_node* %call462, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool463 = icmp eq %union.tree_node* %call462, null, !dbg !11294
  br i1 %tobool463, label %do.body470, label %cleanup484, !dbg !11292

do.body470:                                       ; preds = %lor.lhs.false444.do.body470_crit_edge, %do.body460, %cleanup413
  %.pre-phi = phi %struct.tree_type** [ %.pre40, %lor.lhs.false444.do.body470_crit_edge ], [ %79, %do.body460 ], [ %73, %cleanup413 ], !dbg !11285
  %retval.13 = phi %union.tree_node* [ %retval.11, %lor.lhs.false444.do.body470_crit_edge ], [ %retval.11, %do.body460 ], [ %retval.12, %cleanup413 ]
  %82 = load %struct.tree_type*, %struct.tree_type** %.pre-phi, align 8, !dbg !11285
  %size472 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %82, i64 0, i32 2, !dbg !11285
  %call473 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %size472, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11285
  call void @llvm.dbg.value(metadata %union.tree_node* %call473, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool474 = icmp eq %union.tree_node* %call473, null, !dbg !11296
  br i1 %tobool474, label %do.body479, label %cleanup484, !dbg !11285

do.body479:                                       ; preds = %do.body470
  %83 = load %struct.tree_type*, %struct.tree_type** %.pre-phi, align 8, !dbg !11298
  %size_unit481 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %83, i64 0, i32 3, !dbg !11298
  call void @llvm.dbg.value(metadata %union.tree_node** %size_unit481, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %cleanup484, !dbg !11298

cleanup484:                                       ; preds = %do.body460, %do.body452, %do.body470, %if.end330, %if.end324, %if.then312, %cleanup413, %do.body479
  %cleanup.dest.slot.8 = phi i32 [ %cleanup.dest.slot.7, %cleanup413 ], [ 2, %do.body479 ], [ 1, %if.then312 ], [ 1, %if.end324 ], [ 1, %if.end330 ], [ 1, %do.body452 ], [ 1, %do.body460 ], [ 1, %do.body470 ]
  %tp.addr.10 = phi %union.tree_node** [ %tp.addr.9, %cleanup413 ], [ %size_unit481, %do.body479 ], [ %tp.addr.9, %if.then312 ], [ %tp.addr.9, %if.end324 ], [ %tp.addr.9, %if.end330 ], [ %tp.addr.9, %do.body452 ], [ %tp.addr.9, %do.body460 ], [ %tp.addr.9, %do.body470 ]
  %retval.14 = phi %union.tree_node* [ %retval.12, %cleanup413 ], [ %retval.13, %do.body479 ], [ null, %if.then312 ], [ %call325, %if.end324 ], [ %call331, %if.end330 ], [ %call454, %do.body452 ], [ %call462, %do.body460 ], [ %call473, %do.body470 ], !dbg !11221
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.10, metadata !10969, metadata !DIExpression()), !dbg !11012
  switch i32 %cleanup.dest.slot.8, label %cleanup549.loopexit [
    i32 0, label %sw.default488
    i32 2, label %tail_recurse.backedge
  ]

sw.default488:                                    ; preds = %sw.bb302, %cleanup484, %if.end30
  %tp.addr.12 = phi %union.tree_node** [ %tp.addr.0, %if.end30 ], [ %tp.addr.9, %sw.bb302 ], [ %tp.addr.10, %cleanup484 ]
  %retval.16 = phi %union.tree_node* [ %retval.0, %if.end30 ], [ %retval.11, %sw.bb302 ], [ %retval.14, %cleanup484 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.12, metadata !10969, metadata !DIExpression()), !dbg !11012
  %arrayidx490 = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !11300
  %84 = load i32, i32* %arrayidx490, align 4, !dbg !11300
  %cmp491 = icmp ugt i32 %84, 3, !dbg !11300
  br i1 %cmp491, label %land.lhs.true493, label %if.else535, !dbg !11300

land.lhs.true493:                                 ; preds = %sw.default488
  %85 = load %union.tree_node*, %union.tree_node** %tp.addr.12, align 8, !dbg !11301
  %call501 = call fastcc i32 @tree_operand_length(%union.tree_node* %85) #8, !dbg !11301
  call void @llvm.dbg.value(metadata i32 %call501, metadata !11010, metadata !DIExpression()), !dbg !11302
  %tobool502 = icmp eq i32 %call501, 0, !dbg !11303
  br i1 %tobool502, label %cleanup531, label %for.cond504.preheader, !dbg !11305

for.cond504.preheader:                            ; preds = %land.lhs.true493
  %sub = add nsw i32 %call501, -1, !dbg !11306
  %86 = bitcast %union.tree_node** %tp.addr.12 to %struct.tree_exp**, !dbg !11310
  %87 = sext i32 %sub to i64, !dbg !11311
  br label %for.cond504, !dbg !11311

for.cond504:                                      ; preds = %for.cond504.preheader, %for.inc519
  %indvars.iv68 = phi i64 [ 0, %for.cond504.preheader ], [ %indvars.iv.next69, %for.inc519 ], !dbg !11312
  call void @llvm.dbg.value(metadata i64 %indvars.iv68, metadata !11007, metadata !DIExpression()), !dbg !11302
  %cmp505 = icmp slt i64 %indvars.iv68, %87, !dbg !11313
  %88 = load %struct.tree_exp*, %struct.tree_exp** %86, align 8, !dbg !11310
  br i1 %cmp505, label %do.body508, label %do.body522, !dbg !11311

do.body508:                                       ; preds = %for.cond504
  %arrayidx512 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %88, i64 0, i32 3, i64 %indvars.iv68, !dbg !11314
  %call513 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %arrayidx512, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11314
  call void @llvm.dbg.value(metadata %union.tree_node* %call513, metadata !10976, metadata !DIExpression()), !dbg !11012
  %tobool514 = icmp eq %union.tree_node* %call513, null, !dbg !11316
  br i1 %tobool514, label %for.inc519, label %cleanup531.loopexit, !dbg !11314

for.inc519:                                       ; preds = %do.body508
  %indvars.iv.next69 = add nuw nsw i64 %indvars.iv68, 1, !dbg !11318
  call void @llvm.dbg.value(metadata i32 undef, metadata !11007, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11302
  br label %for.cond504, !dbg !11319, !llvm.loop !11320

do.body522:                                       ; preds = %for.cond504
  %.lcssa77 = phi %struct.tree_exp* [ %88, %for.cond504 ], !dbg !11310
  %idxprom526 = sext i32 %sub to i64, !dbg !11322
  %arrayidx527 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %.lcssa77, i64 0, i32 3, i64 %idxprom526, !dbg !11322
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx527, metadata !10969, metadata !DIExpression()), !dbg !11012
  br label %cleanup531, !dbg !11322

cleanup531.loopexit:                              ; preds = %do.body508
  %call513.lcssa = phi %union.tree_node* [ %call513, %do.body508 ], !dbg !11314
  br label %cleanup531

cleanup531:                                       ; preds = %cleanup531.loopexit, %land.lhs.true493, %do.body522
  %cleanup.dest.slot.9 = phi i32 [ 2, %do.body522 ], [ 0, %land.lhs.true493 ], [ 1, %cleanup531.loopexit ]
  %tp.addr.13 = phi %union.tree_node** [ %arrayidx527, %do.body522 ], [ %tp.addr.12, %land.lhs.true493 ], [ %tp.addr.12, %cleanup531.loopexit ]
  %retval.17 = phi %union.tree_node* [ %retval.16, %do.body522 ], [ %retval.16, %land.lhs.true493 ], [ %call513.lcssa, %cleanup531.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.13, metadata !10969, metadata !DIExpression()), !dbg !11012
  switch i32 %cleanup.dest.slot.9, label %cleanup549.loopexit [
    i32 0, label %sw.epilog548.loopexit
    i32 2, label %tail_recurse.backedge
  ]

if.else535:                                       ; preds = %sw.default488
  %tp.addr.12.lcssa = phi %union.tree_node** [ %tp.addr.12, %sw.default488 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.12.lcssa, metadata !10969, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.12.lcssa, metadata !10969, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.12.lcssa, metadata !10969, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.addr.12.lcssa, metadata !10969, metadata !DIExpression()), !dbg !11012
  %89 = bitcast %union.tree_node** %tp.addr.12.lcssa to i64**, !dbg !11324
  %90 = load i64*, i64** %89, align 8, !dbg !11324
  %bf.load537 = load i64, i64* %90, align 8, !dbg !11324
  %bf.cast539 = and i64 %bf.load537, 65535, !dbg !11324
  %91 = add nsw i64 %bf.cast539, -5, !dbg !11324
  %cmp542 = icmp ult i64 %91, 18, !dbg !11324
  br i1 %cmp542, label %if.then544, label %sw.epilog548, !dbg !11326

if.then544:                                       ; preds = %if.else535
  %92 = bitcast i64* %90 to %union.tree_node*, !dbg !11326
  %call545 = call fastcc %union.tree_node* @walk_type_fields(%union.tree_node* %92, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !11327
  br label %cleanup549, !dbg !11328

sw.epilog548.loopexit:                            ; preds = %cleanup, %if.end30, %if.end30, %if.end30, %if.end30, %if.end30, %if.end30, %if.end30, %if.end30, %if.end30, %if.end30, %if.end30, %if.end30, %cleanup531
  br label %sw.epilog548, !dbg !11329

sw.epilog548:                                     ; preds = %sw.epilog548.loopexit, %if.else535, %cleanup158, %cleanup90, %sw.default
  br label %cleanup549, !dbg !11329

cleanup549.loopexit:                              ; preds = %cleanup, %cleanup139, %cleanup230, %cleanup258, %cleanup298, %cleanup484, %cleanup531, %if.then10, %if.then24, %tail_recurse, %if.end4, %do.body180, %do.body190, %do.body164, %do.body64, %do.body32, %land.lhs.true
  %retval.18.ph = phi %union.tree_node* [ %call194, %do.body190 ], [ %call184, %do.body180 ], [ %call167, %do.body164 ], [ %call65, %do.body64 ], [ %call33, %do.body32 ], [ %call25, %if.then24 ], [ null, %if.then10 ], [ %call5, %if.end4 ], [ null, %land.lhs.true ], [ null, %tail_recurse ], [ %retval.1, %cleanup ], [ %retval.4, %cleanup139 ], [ %retval.7, %cleanup230 ], [ %retval.9, %cleanup258 ], [ %retval.10, %cleanup298 ], [ %retval.14, %cleanup484 ], [ %retval.17, %cleanup531 ]
  br label %cleanup549, !dbg !11330

cleanup549:                                       ; preds = %cleanup549.loopexit, %cleanup90, %cleanup158, %sw.epilog548, %if.then544
  %retval.18 = phi %union.tree_node* [ null, %sw.epilog548 ], [ %call545, %if.then544 ], [ %retval.6, %cleanup158 ], [ %retval.3, %cleanup90 ], [ %retval.18.ph, %cleanup549.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !11330
  ret %union.tree_node* %retval.18, !dbg !11330
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @find_var_from_fn(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !11331 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !11333, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !11334, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i8* %data, metadata !11335, metadata !DIExpression()), !dbg !11337
  %0 = bitcast i8* %data to %union.tree_node*, !dbg !11338
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11336, metadata !DIExpression()), !dbg !11337
  %1 = bitcast %union.tree_node** %tp to i64**, !dbg !11339
  %2 = load i64*, i64** %1, align 8, !dbg !11339
  %bf.load = load i64, i64* %2, align 8, !dbg !11339
  %bf.cast = and i64 %bf.load, 65535, !dbg !11339
  %3 = add nsw i64 %bf.cast, -5, !dbg !11339
  %cmp = icmp ult i64 %3, 18, !dbg !11339
  %4 = bitcast i64* %2 to %union.tree_node*, !dbg !11341
  br i1 %cmp, label %if.then, label %if.else, !dbg !11341

if.then:                                          ; preds = %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !11342
  br label %cleanup, !dbg !11343

if.else:                                          ; preds = %entry
  %5 = add nsw i64 %bf.cast, -29, !dbg !11344
  %cmp7 = icmp ult i64 %5, 12, !dbg !11344
  br i1 %cmp7, label %land.lhs.true, label %cleanup, !dbg !11346

land.lhs.true:                                    ; preds = %if.else
  %call = tail call zeroext i8 @auto_var_in_fn_p(%union.tree_node* %4, %union.tree_node* %0) #8, !dbg !11347
  %tobool = icmp eq i8 %call, 0, !dbg !11347
  br i1 %tobool, label %cleanup, label %if.then8, !dbg !11348

if.then8:                                         ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !11349
  br label %cleanup, !dbg !11350

cleanup:                                          ; preds = %land.lhs.true, %if.then, %if.else, %if.then8
  %retval.0 = phi %union.tree_node* [ %6, %if.then8 ], [ null, %if.else ], [ null, %land.lhs.true ], [ null, %if.then ], !dbg !11337
  ret %union.tree_node* %retval.0, !dbg !11351
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_containing_scope(%union.tree_node* %t) local_unnamed_addr #5 !dbg !11352 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !11354, metadata !DIExpression()), !dbg !11355
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11356
  %bf.load = load i64, i64* %0, align 8, !dbg !11356
  %bf.cast = and i64 %bf.load, 65535, !dbg !11356
  %1 = add nsw i64 %bf.cast, -5, !dbg !11356
  %cmp = icmp ult i64 %1, 18, !dbg !11356
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11356

cond.true:                                        ; preds = %entry
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !11357
  %2 = bitcast i24* %context to %union.tree_node**, !dbg !11357
  br label %cond.end, !dbg !11356

cond.false:                                       ; preds = %entry
  %context1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11358
  br label %cond.end, !dbg !11356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %union.tree_node** [ %2, %cond.true ], [ %context1, %cond.false ]
  %cond = load %union.tree_node*, %union.tree_node** %cond.in, align 8, !dbg !11356
  ret %union.tree_node* %cond, !dbg !11359
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @decl_type_context(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !11360 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11362, metadata !DIExpression()), !dbg !11364
  %context1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11365
  %0 = load %union.tree_node*, %union.tree_node** %context1, align 8, !dbg !11365
  %1 = bitcast %union.tree_node* %0 to %struct.tree_block*, !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !11363, metadata !DIExpression()), !dbg !11364
  br label %while.cond, !dbg !11366

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = phi %struct.tree_block* [ %1, %entry ], [ %9, %sw.epilog ], !dbg !11367
  %context.0 = phi %union.tree_node* [ %0, %entry ], [ %context.1, %sw.epilog ], !dbg !11367
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0, metadata !11363, metadata !DIExpression()), !dbg !11364
  %tobool = icmp eq %union.tree_node* %context.0, null, !dbg !11366
  br i1 %tobool, label %cleanup.loopexit, label %while.body, !dbg !11366

while.body:                                       ; preds = %while.cond
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %context.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11368
  %bf.load = load i64, i64* %3, align 8, !dbg !11368
  %4 = trunc i64 %bf.load to i16, !dbg !11368
  switch i16 %4, label %sw.default [
    i16 38, label %cleanup.loopexit
    i16 40, label %cleanup.loopexit
    i16 16, label %sw.bb2
    i16 17, label %sw.bb2
    i16 18, label %sw.bb2
    i16 35, label %sw.bb3
    i16 29, label %sw.bb3
    i16 4, label %sw.bb6
  ], !dbg !11369

sw.bb2:                                           ; preds = %while.body, %while.body, %while.body
  %context.0.lcssa3 = phi %union.tree_node* [ %context.0, %while.body ], [ %context.0, %while.body ], [ %context.0, %while.body ], !dbg !11367
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.0.lcssa3, metadata !11363, metadata !DIExpression()), !dbg !11364
  br label %cleanup, !dbg !11370

sw.bb3:                                           ; preds = %while.body, %while.body
  %context5 = getelementptr inbounds %union.tree_node, %union.tree_node* %context.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11372
  %5 = load %union.tree_node*, %union.tree_node** %context5, align 8, !dbg !11372
  %6 = bitcast %union.tree_node* %5 to %struct.tree_block*, !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11363, metadata !DIExpression()), !dbg !11364
  br label %sw.epilog, !dbg !11373

sw.bb6:                                           ; preds = %while.body
  %supercontext = getelementptr inbounds %struct.tree_block, %struct.tree_block* %2, i64 0, i32 6, !dbg !11374
  %7 = load %union.tree_node*, %union.tree_node** %supercontext, align 8, !dbg !11374
  %8 = bitcast %union.tree_node* %7 to %struct.tree_block*, !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11363, metadata !DIExpression()), !dbg !11364
  br label %sw.epilog, !dbg !11375

sw.default:                                       ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 8134, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !11376
  br label %sw.epilog, !dbg !11377

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb3
  %9 = phi %struct.tree_block* [ %2, %sw.default ], [ %8, %sw.bb6 ], [ %6, %sw.bb3 ], !dbg !11364
  %context.1 = phi %union.tree_node* [ %context.0, %sw.default ], [ %7, %sw.bb6 ], [ %5, %sw.bb3 ], !dbg !11364
  call void @llvm.dbg.value(metadata %union.tree_node* %context.1, metadata !11363, metadata !DIExpression()), !dbg !11364
  br label %while.cond, !dbg !11366, !llvm.loop !11378

cleanup.loopexit:                                 ; preds = %while.body, %while.body, %while.cond
  br label %cleanup, !dbg !11380

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb2
  %retval.0 = phi %union.tree_node* [ %context.0.lcssa3, %sw.bb2 ], [ null, %cleanup.loopexit ], !dbg !11364
  ret %union.tree_node* %retval.0, !dbg !11380
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_callee_fndecl(%union.tree_node* %call) local_unnamed_addr #5 !dbg !11381 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11383, metadata !DIExpression()), !dbg !11385
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11386
  %cmp = icmp eq %union.tree_node* %0, %call, !dbg !11388
  br i1 %cmp, label %if.then, label %if.end, !dbg !11389

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !11390

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11391
  %bf.load = load i64, i64* %1, align 8, !dbg !11391
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11391
  %cmp1 = icmp eq i64 %bf.cast1, 59, !dbg !11391
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !11391

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 8154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !11391
  br label %cond.end, !dbg !11391

cond.end:                                         ; preds = %if.end, %cond.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11392
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !11392
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11392
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11384, metadata !DIExpression()), !dbg !11385
  %call2 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %2) #8, !dbg !11393
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !11384, metadata !DIExpression()), !dbg !11385
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11394
  %bf.load4 = load i64, i64* %3, align 8, !dbg !11394
  %bf.cast6 = and i64 %bf.load4, 65535, !dbg !11394
  %4 = add nsw i64 %bf.cast6, -29, !dbg !11394
  %cmp8 = icmp ult i64 %4, 12, !dbg !11394
  br i1 %cmp8, label %land.lhs.true, label %if.end31, !dbg !11396

land.lhs.true:                                    ; preds = %cond.end
  %cmp13 = icmp eq i64 %bf.cast6, 29, !dbg !11397
  br i1 %cmp13, label %if.end31, label %land.lhs.true14, !dbg !11398

land.lhs.true14:                                  ; preds = %land.lhs.true
  %bf.cast185 = and i64 %bf.load4, 1048576, !dbg !11399
  %tobool = icmp eq i64 %bf.cast185, 0, !dbg !11399
  br i1 %tobool, label %if.end31, label %land.lhs.true19, !dbg !11400

land.lhs.true19:                                  ; preds = %land.lhs.true14
  %bf.cast246 = and i64 %bf.load4, 524288, !dbg !11401
  %tobool25 = icmp eq i64 %bf.cast246, 0, !dbg !11401
  br i1 %tobool25, label %land.lhs.true26, label %if.end31, !dbg !11402

land.lhs.true26:                                  ; preds = %land.lhs.true19
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11403
  %5 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !11403
  %tobool27 = icmp eq %union.tree_node* %5, null, !dbg !11403
  br i1 %tobool27, label %if.end31, label %if.then28, !dbg !11404

if.then28:                                        ; preds = %land.lhs.true26
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11384, metadata !DIExpression()), !dbg !11385
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11405
  %bf.load33.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !11407
  br label %if.end31, !dbg !11408

if.end31:                                         ; preds = %land.lhs.true26, %land.lhs.true19, %land.lhs.true14, %land.lhs.true, %if.then28, %cond.end
  %bf.load33 = phi i64 [ %bf.load4, %land.lhs.true19 ], [ %bf.load33.pre, %if.then28 ], [ %bf.load4, %land.lhs.true26 ], [ %bf.load4, %land.lhs.true14 ], [ %bf.load4, %land.lhs.true ], [ %bf.load4, %cond.end ], !dbg !11407
  %addr.0 = phi %union.tree_node* [ %call2, %land.lhs.true19 ], [ %5, %if.then28 ], [ %call2, %land.lhs.true26 ], [ %call2, %land.lhs.true14 ], [ %call2, %land.lhs.true ], [ %call2, %cond.end ], !dbg !11385
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.0, metadata !11384, metadata !DIExpression()), !dbg !11385
  %bf.cast352 = and i64 %bf.load33, 65535, !dbg !11409
  %cmp36 = icmp eq i64 %bf.cast352, 121, !dbg !11409
  br i1 %cmp36, label %land.lhs.true37, label %cleanup, !dbg !11410

land.lhs.true37:                                  ; preds = %if.end31
  %operands39 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11411
  %6 = bitcast %union.tree_node** %operands39 to i64**, !dbg !11411
  %7 = load i64*, i64** %6, align 8, !dbg !11411
  %bf.load42 = load i64, i64* %7, align 8, !dbg !11411
  %bf.cast443 = and i64 %bf.load42, 65535, !dbg !11412
  %cmp45 = icmp eq i64 %bf.cast443, 29, !dbg !11412
  br i1 %cmp45, label %if.then46, label %cleanup, !dbg !11413

if.then46:                                        ; preds = %land.lhs.true37
  %8 = bitcast i64* %7 to %union.tree_node*, !dbg !11413
  br label %cleanup, !dbg !11414

cleanup:                                          ; preds = %if.end31, %land.lhs.true37, %if.then46, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %8, %if.then46 ], [ null, %land.lhs.true37 ], [ null, %if.end31 ], !dbg !11385
  ret %union.tree_node* %retval.0, !dbg !11415
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_tree_statistics() local_unnamed_addr #5 !dbg !11416 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !11417
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.237, i64 0, i64 0)) #7, !dbg !11418
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !11419
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.238, i64 0, i64 0)) #7, !dbg !11420
  tail call fastcc void @print_type_hash_statistics() #8, !dbg !11421
  tail call fastcc void @print_debug_expr_statistics() #8, !dbg !11422
  tail call fastcc void @print_value_expr_statistics() #8, !dbg !11423
  %2 = load void ()*, void ()** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 17), align 8, !dbg !11424
  tail call void %2() #7, !dbg !11425
  ret void, !dbg !11426
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @print_type_hash_statistics() unnamed_addr #5 !dbg !11427 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !11428
  %1 = load %struct.htab*, %struct.htab** @type_hash_table, align 8, !dbg !11429
  %call = tail call i64 @htab_size(%struct.htab* %1) #7, !dbg !11430
  %2 = load %struct.htab*, %struct.htab** @type_hash_table, align 8, !dbg !11431
  %call1 = tail call i64 @htab_elements(%struct.htab* %2) #7, !dbg !11432
  %3 = load %struct.htab*, %struct.htab** @type_hash_table, align 8, !dbg !11433
  %call2 = tail call double @htab_collisions(%struct.htab* %3) #7, !dbg !11434
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.279, i64 0, i64 0), i64 %call, i64 %call1, double %call2) #7, !dbg !11435
  ret void, !dbg !11436
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_debug_expr_statistics() unnamed_addr #5 !dbg !11437 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !11438
  %1 = load %struct.htab*, %struct.htab** @debug_expr_for_decl, align 8, !dbg !11439
  %call = tail call i64 @htab_size(%struct.htab* %1) #7, !dbg !11440
  %2 = load %struct.htab*, %struct.htab** @debug_expr_for_decl, align 8, !dbg !11441
  %call1 = tail call i64 @htab_elements(%struct.htab* %2) #7, !dbg !11442
  %3 = load %struct.htab*, %struct.htab** @debug_expr_for_decl, align 8, !dbg !11443
  %call2 = tail call double @htab_collisions(%struct.htab* %3) #7, !dbg !11444
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.280, i64 0, i64 0), i64 %call, i64 %call1, double %call2) #7, !dbg !11445
  ret void, !dbg !11446
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_value_expr_statistics() unnamed_addr #5 !dbg !11447 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !11448
  %1 = load %struct.htab*, %struct.htab** @value_expr_for_decl, align 8, !dbg !11449
  %call = tail call i64 @htab_size(%struct.htab* %1) #7, !dbg !11450
  %2 = load %struct.htab*, %struct.htab** @value_expr_for_decl, align 8, !dbg !11451
  %call1 = tail call i64 @htab_elements(%struct.htab* %2) #7, !dbg !11452
  %3 = load %struct.htab*, %struct.htab** @value_expr_for_decl, align 8, !dbg !11453
  %call2 = tail call double @htab_collisions(%struct.htab* %3) #7, !dbg !11454
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.281, i64 0, i64 0), i64 %call, i64 %call1, double %call2) #7, !dbg !11455
  ret void, !dbg !11456
}

; Function Attrs: nounwind uwtable
define dso_local i32 @crc32_string(i32 %chksum, i8* %string) local_unnamed_addr #5 !dbg !11457 {
entry:
  call void @llvm.dbg.value(metadata i32 %chksum, metadata !11461, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i8* %string, metadata !11462, metadata !DIExpression()), !dbg !11470
  br label %do.body, !dbg !11471

do.body:                                          ; preds = %do.cond, %entry
  %string.addr.0 = phi i8* [ %string, %entry ], [ %incdec.ptr, %do.cond ]
  %chksum.addr.0 = phi i32 [ %chksum, %entry ], [ %chksum.addr.1.lcssa, %do.cond ]
  call void @llvm.dbg.value(metadata i32 %chksum.addr.0, metadata !11461, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i8* %string.addr.0, metadata !11462, metadata !DIExpression()), !dbg !11470
  %0 = load i8, i8* %string.addr.0, align 1, !dbg !11472
  %conv1 = zext i8 %0 to i32, !dbg !11472
  %shl = shl nuw i32 %conv1, 24, !dbg !11473
  call void @llvm.dbg.value(metadata i32 %shl, metadata !11463, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i32 8, metadata !11465, metadata !DIExpression()), !dbg !11474
  br label %for.cond, !dbg !11475

for.cond:                                         ; preds = %for.body, %do.body
  %ix.0 = phi i32 [ 8, %do.body ], [ %dec, %for.body ], !dbg !11476
  %value.0 = phi i32 [ %shl, %do.body ], [ %shl4, %for.body ], !dbg !11474
  %chksum.addr.1 = phi i32 [ %chksum.addr.0, %do.body ], [ %xor3, %for.body ]
  call void @llvm.dbg.value(metadata i32 %chksum.addr.1, metadata !11461, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i32 %value.0, metadata !11463, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !11465, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !11465, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11474
  %tobool = icmp eq i32 %ix.0, 0, !dbg !11477
  br i1 %tobool, label %do.cond, label %for.body, !dbg !11477

for.body:                                         ; preds = %for.cond
  %dec = add nsw i32 %ix.0, -1, !dbg !11478
  call void @llvm.dbg.value(metadata i32 %dec, metadata !11465, metadata !DIExpression()), !dbg !11474
  %xor = xor i32 %value.0, %chksum.addr.1, !dbg !11479
  %tobool1 = icmp slt i32 %xor, 0, !dbg !11480
  %cond = select i1 %tobool1, i32 79764919, i32 0, !dbg !11480
  call void @llvm.dbg.value(metadata i32 %cond, metadata !11466, metadata !DIExpression()), !dbg !11481
  %shl2 = shl i32 %chksum.addr.1, 1, !dbg !11482
  call void @llvm.dbg.value(metadata i32 %shl2, metadata !11461, metadata !DIExpression()), !dbg !11470
  %xor3 = xor i32 %shl2, %cond, !dbg !11483
  call void @llvm.dbg.value(metadata i32 %xor3, metadata !11461, metadata !DIExpression()), !dbg !11470
  %shl4 = shl i32 %value.0, 1, !dbg !11484
  call void @llvm.dbg.value(metadata i32 %shl4, metadata !11463, metadata !DIExpression()), !dbg !11474
  br label %for.cond, !dbg !11485, !llvm.loop !11486

do.cond:                                          ; preds = %for.cond
  %chksum.addr.1.lcssa = phi i32 [ %chksum.addr.1, %for.cond ]
  call void @llvm.dbg.value(metadata i32 %chksum.addr.1.lcssa, metadata !11461, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i32 %chksum.addr.1.lcssa, metadata !11461, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i32 %chksum.addr.1.lcssa, metadata !11461, metadata !DIExpression()), !dbg !11470
  %incdec.ptr = getelementptr inbounds i8, i8* %string.addr.0, i64 1, !dbg !11488
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !11462, metadata !DIExpression()), !dbg !11470
  %tobool5 = icmp eq i8 %0, 0, !dbg !11489
  br i1 %tobool5, label %do.end, label %do.body, !dbg !11489, !llvm.loop !11490

do.end:                                           ; preds = %do.cond
  %chksum.addr.1.lcssa.lcssa = phi i32 [ %chksum.addr.1.lcssa, %do.cond ]
  call void @llvm.dbg.value(metadata i32 %chksum.addr.1.lcssa.lcssa, metadata !11461, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i32 %chksum.addr.1.lcssa.lcssa, metadata !11461, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i32 %chksum.addr.1.lcssa.lcssa, metadata !11461, metadata !DIExpression()), !dbg !11470
  ret i32 %chksum.addr.1.lcssa.lcssa, !dbg !11492
}

; Function Attrs: nounwind uwtable
define dso_local void @clean_symbol_name(i8* %p) local_unnamed_addr #5 !dbg !11493 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !11497, metadata !DIExpression()), !dbg !11498
  br label %for.cond, !dbg !11499

for.cond:                                         ; preds = %for.inc, %entry
  %p.addr.0 = phi i8* [ %p, %entry ], [ %incdec.ptr, %for.inc ]
  call void @llvm.dbg.value(metadata i8* %p.addr.0, metadata !11497, metadata !DIExpression()), !dbg !11498
  %0 = load i8, i8* %p.addr.0, align 1, !dbg !11500
  %tobool = icmp eq i8 %0, 0, !dbg !11503
  br i1 %tobool, label %for.end, label %for.body, !dbg !11503

for.body:                                         ; preds = %for.cond
  %idxprom = zext i8 %0 to i64, !dbg !11504
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !11504
  %1 = load i16, i16* %arrayidx, align 2, !dbg !11504
  %2 = and i16 %1, 140, !dbg !11504
  %tobool3 = icmp eq i16 %2, 0, !dbg !11504
  br i1 %tobool3, label %lor.lhs.false, label %for.inc, !dbg !11506

lor.lhs.false:                                    ; preds = %for.body
  %cmp = icmp eq i8 %0, 46, !dbg !11507
  br i1 %cmp, label %for.inc, label %if.then, !dbg !11508

if.then:                                          ; preds = %lor.lhs.false
  store i8 95, i8* %p.addr.0, align 1, !dbg !11509
  br label %for.inc, !dbg !11510

for.inc:                                          ; preds = %for.body, %lor.lhs.false, %if.then
  %incdec.ptr = getelementptr inbounds i8, i8* %p.addr.0, i64 1, !dbg !11511
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !11497, metadata !DIExpression()), !dbg !11498
  br label %for.cond, !dbg !11512, !llvm.loop !11513

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11515
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_file_function_name(i8* %type) local_unnamed_addr #5 !dbg !11516 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  %tmp28 = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata i8* %type, metadata !11520, metadata !DIExpression()), !dbg !11532
  %0 = load i8*, i8** @first_global_object_name, align 8, !dbg !11533
  %tobool = icmp eq i8* %0, null, !dbg !11533
  br i1 %tobool, label %if.else, label %if.then, !dbg !11534

if.then:                                          ; preds = %entry
  %1 = ptrtoint i8* %0 to i64, !dbg !11534
  store i64 %1, i64* bitcast (i8** @libiberty_optr to i64*), align 8, !dbg !11535
  %call = tail call i64 @strlen(i8* nonnull %0) #7, !dbg !11535
  %add = add i64 %call, 1, !dbg !11535
  store i64 %add, i64* @libiberty_len, align 8, !dbg !11535
  %2 = alloca i8, i64 %add, align 16, !dbg !11535
  store i8* %2, i8** @libiberty_nptr, align 8, !dbg !11535
  %3 = load i8*, i8** @libiberty_optr, align 8, !dbg !11535
  %call1 = call i8* @memcpy(i8* nonnull %2, i8* %3, i64 %add) #7, !dbg !11535
  call void @llvm.dbg.value(metadata i8* %call1, metadata !11523, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i8* %call1, metadata !11522, metadata !DIExpression()), !dbg !11532
  br label %if.end44, !dbg !11536

if.else:                                          ; preds = %entry
  %4 = load i8, i8* %type, align 1, !dbg !11537
  %cmp = icmp eq i8 %4, 73, !dbg !11538
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !11539

lor.lhs.false:                                    ; preds = %if.else
  %cmp5 = icmp eq i8 %4, 68, !dbg !11540
  br i1 %cmp5, label %land.lhs.true, label %if.else21, !dbg !11541

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else
  %5 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 112), align 1, !dbg !11542
  %tobool8 = icmp eq i8 %5, 0, !dbg !11543
  br i1 %tobool8, label %if.else21, label %if.then9, !dbg !11544

if.then9:                                         ; preds = %land.lhs.true
  %6 = load i8*, i8** @main_input_filename, align 8, !dbg !11545
  call void @llvm.dbg.value(metadata i8* %6, metadata !11524, metadata !DIExpression()), !dbg !11546
  %tobool10 = icmp eq i8* %6, null, !dbg !11547
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !11549

if.then11:                                        ; preds = %if.then9
  %7 = load i32, i32* @input_location, align 4, !dbg !11550
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %7) #8, !dbg !11550
  %file12 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 0, !dbg !11550
  %8 = load i8*, i8** %file12, align 8, !dbg !11550
  call void @llvm.dbg.value(metadata i8* %8, metadata !11524, metadata !DIExpression()), !dbg !11546
  br label %if.end, !dbg !11551

if.end:                                           ; preds = %if.then9, %if.then11
  %file.0 = phi i8* [ %6, %if.then9 ], [ %8, %if.then11 ], !dbg !11546
  call void @llvm.dbg.value(metadata i8* %file.0, metadata !11524, metadata !DIExpression()), !dbg !11546
  %call13 = call i8* @strrchr(i8* %file.0, i32 47) #7, !dbg !11552
  call void @llvm.dbg.value(metadata i8* %call13, metadata !11522, metadata !DIExpression()), !dbg !11532
  %tobool14 = icmp eq i8* %call13, null, !dbg !11553
  %incdec.ptr = getelementptr inbounds i8, i8* %call13, i64 1, !dbg !11555
  %p.0 = select i1 %tobool14, i8* %file.0, i8* %incdec.ptr, !dbg !11555
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !11522, metadata !DIExpression()), !dbg !11532
  store i8* %p.0, i8** @libiberty_optr, align 8, !dbg !11556
  %call18 = call i64 @strlen(i8* %p.0) #7, !dbg !11556
  %add19 = add i64 %call18, 1, !dbg !11556
  store i64 %add19, i64* @libiberty_len, align 8, !dbg !11556
  %9 = alloca i8, i64 %add19, align 16, !dbg !11556
  store i8* %9, i8** @libiberty_nptr, align 8, !dbg !11556
  %10 = load i8*, i8** @libiberty_optr, align 8, !dbg !11556
  %call20 = call i8* @memcpy(i8* nonnull %9, i8* %10, i64 %add19) #7, !dbg !11556
  call void @llvm.dbg.value(metadata i8* %call20, metadata !11523, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i8* %call20, metadata !11522, metadata !DIExpression()), !dbg !11532
  br label %if.end44, !dbg !11557

if.else21:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %11 = load i8*, i8** @weak_global_object_name, align 8, !dbg !11558
  call void @llvm.dbg.value(metadata i8* %11, metadata !11530, metadata !DIExpression()), !dbg !11559
  %12 = load i8*, i8** @main_input_filename, align 8, !dbg !11560
  call void @llvm.dbg.value(metadata i8* %12, metadata !11531, metadata !DIExpression()), !dbg !11559
  %tobool23 = icmp eq i8* %11, null, !dbg !11561
  %spec.select = select i1 %tobool23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.239, i64 0, i64 0), i8* %11, !dbg !11563
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !11530, metadata !DIExpression()), !dbg !11559
  %tobool26 = icmp eq i8* %12, null, !dbg !11564
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !11566

if.then27:                                        ; preds = %if.else21
  %13 = load i32, i32* @input_location, align 4, !dbg !11567
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp28, i32 %13) #8, !dbg !11567
  %file29 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp28, i64 0, i32 0, !dbg !11567
  %14 = load i8*, i8** %file29, align 8, !dbg !11567
  call void @llvm.dbg.value(metadata i8* %14, metadata !11531, metadata !DIExpression()), !dbg !11559
  br label %if.end30, !dbg !11568

if.end30:                                         ; preds = %if.else21, %if.then27
  %file22.0 = phi i8* [ %12, %if.else21 ], [ %14, %if.then27 ], !dbg !11559
  call void @llvm.dbg.value(metadata i8* %file22.0, metadata !11531, metadata !DIExpression()), !dbg !11559
  %call31 = call i64 @strlen(i8* %file22.0) #7, !dbg !11569
  %add34 = add i64 %call31, 19, !dbg !11570
  %conv35 = and i64 %add34, 4294967295, !dbg !11570
  %15 = alloca i8, i64 %conv35, align 16, !dbg !11570
  call void @llvm.dbg.value(metadata i8* %15, metadata !11523, metadata !DIExpression()), !dbg !11532
  %add36 = add i64 %call31, 1, !dbg !11571
  %conv37 = and i64 %add36, 4294967295, !dbg !11572
  %call38 = call i8* @memcpy(i8* nonnull %15, i8* %file22.0, i64 %conv37) #7, !dbg !11573
  %idx.ext = and i64 %call31, 4294967295, !dbg !11574
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !11574
  %call39 = call i32 @crc32_string(i32 0, i8* %spec.select) #8, !dbg !11575
  %call40 = call i8* @get_random_seed(i8 zeroext 0) #7, !dbg !11576
  %call41 = call i32 @crc32_string(i32 0, i8* %call40) #8, !dbg !11577
  %call42 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %add.ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.240, i64 0, i64 0), i32 %call39, i32 %call41) #7, !dbg !11578
  call void @llvm.dbg.value(metadata i8* %15, metadata !11522, metadata !DIExpression()), !dbg !11532
  br label %if.end44

if.end44:                                         ; preds = %if.end, %if.end30, %if.then
  %q.1 = phi i8* [ %call1, %if.then ], [ %call20, %if.end ], [ %15, %if.end30 ], !dbg !11579
  call void @llvm.dbg.value(metadata i8* %q.1, metadata !11522, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i8* %q.1, metadata !11523, metadata !DIExpression()), !dbg !11532
  call void @clean_symbol_name(i8* %q.1) #8, !dbg !11580
  %call45 = call i64 @strlen(i8* %q.1) #7, !dbg !11581
  %add46 = add i64 %call45, 15, !dbg !11581
  %call47 = call i64 @strlen(i8* %type) #7, !dbg !11581
  %add48 = add i64 %add46, %call47, !dbg !11581
  %16 = alloca i8, i64 %add48, align 16, !dbg !11581
  call void @llvm.dbg.value(metadata i8* %16, metadata !11521, metadata !DIExpression()), !dbg !11532
  %call49 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.241, i64 0, i64 0), i8* %type, i8* %q.1) #7, !dbg !11582
  %call50 = call %union.tree_node* @get_identifier(i8* nonnull %16) #7, !dbg !11583
  ret %union.tree_node* %call50, !dbg !11584
}

declare dso_local i8* @strrchr(i8*, i32) local_unnamed_addr #2

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @get_random_seed(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @build_common_tree_nodes(i8 zeroext %signed_char, i8 zeroext %signed_sizetype) local_unnamed_addr #5 !dbg !11585 {
entry:
  call void @llvm.dbg.value(metadata i8 %signed_char, metadata !11589, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.value(metadata i8 %signed_sizetype, metadata !11590, metadata !DIExpression()), !dbg !11591
  %call = tail call %union.tree_node* @make_node_stat(i32 0) #8, !dbg !11592
  store %union.tree_node* %call, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11593
  %.cast = ptrtoint %union.tree_node* %call to i64, !dbg !11594
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11595
  %0 = bitcast %union.tree_node** %type to i64*, !dbg !11596
  store i64 %.cast, i64* %0, align 8, !dbg !11596
  tail call void @initialize_sizetypes(i8 zeroext %signed_sizetype) #7, !dbg !11597
  %call1 = tail call %union.tree_node* @make_signed_type(i32 8) #7, !dbg !11598
  store %union.tree_node* %call1, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !11599
  %.cast2 = bitcast %union.tree_node* %call1 to %struct.tree_type*, !dbg !11600
  %string_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast2, i64 0, i32 6, !dbg !11600
  %bf.load = load i32, i32* %string_flag, align 4, !dbg !11601
  %bf.set = or i32 %bf.load, 16777216, !dbg !11601
  store i32 %bf.set, i32* %string_flag, align 4, !dbg !11601
  %call3 = tail call %union.tree_node* @make_unsigned_type(i32 8) #7, !dbg !11602
  store %union.tree_node* %call3, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !11603
  %.cast3 = bitcast %union.tree_node* %call3 to %struct.tree_type*, !dbg !11604
  %string_flag5 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast3, i64 0, i32 6, !dbg !11604
  %bf.load6 = load i32, i32* %string_flag5, align 4, !dbg !11605
  %bf.set8 = or i32 %bf.load6, 16777216, !dbg !11605
  store i32 %bf.set8, i32* %string_flag5, align 4, !dbg !11605
  %tobool = icmp eq i8 %signed_char, 0, !dbg !11606
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !11606

cond.true:                                        ; preds = %entry
  %call9 = tail call %union.tree_node* @make_signed_type(i32 8) #7, !dbg !11607
  br label %cond.end, !dbg !11606

cond.false:                                       ; preds = %entry
  %call10 = tail call %union.tree_node* @make_unsigned_type(i32 8) #7, !dbg !11608
  br label %cond.end, !dbg !11606

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %call9, %cond.true ], [ %call10, %cond.false ], !dbg !11606
  store %union.tree_node* %cond, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !11609
  %.cast4 = bitcast %union.tree_node* %cond to %struct.tree_type*, !dbg !11610
  %string_flag12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast4, i64 0, i32 6, !dbg !11610
  %bf.load13 = load i32, i32* %string_flag12, align 4, !dbg !11611
  %bf.set15 = or i32 %bf.load13, 16777216, !dbg !11611
  store i32 %bf.set15, i32* %string_flag12, align 4, !dbg !11611
  %call16 = tail call %union.tree_node* @make_signed_type(i32 16) #7, !dbg !11612
  store %union.tree_node* %call16, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !dbg !11613
  %call17 = tail call %union.tree_node* @make_unsigned_type(i32 16) #7, !dbg !11614
  store %union.tree_node* %call17, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !11615
  %call18 = tail call %union.tree_node* @make_signed_type(i32 32) #7, !dbg !11616
  store %union.tree_node* %call18, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11617
  %call19 = tail call %union.tree_node* @make_unsigned_type(i32 32) #7, !dbg !11618
  store %union.tree_node* %call19, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !11619
  %call20 = tail call %union.tree_node* @make_signed_type(i32 32) #7, !dbg !11620
  store %union.tree_node* %call20, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !11621
  %call21 = tail call %union.tree_node* @make_unsigned_type(i32 32) #7, !dbg !11622
  store %union.tree_node* %call21, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !11623
  %call22 = tail call %union.tree_node* @make_signed_type(i32 64) #7, !dbg !11624
  store %union.tree_node* %call22, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !11625
  %call23 = tail call %union.tree_node* @make_unsigned_type(i32 64) #7, !dbg !11626
  store %union.tree_node* %call23, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !11627
  %call24 = tail call %union.tree_node* @make_unsigned_type(i32 8) #7, !dbg !11628
  store %union.tree_node* %call24, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !11629
  %.cast5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11630
  %bf.load25 = load i64, i64* %.cast5, align 8, !dbg !11630
  %bf.clear26 = and i64 %bf.load25, -65536, !dbg !11630
  %bf.set27 = or i64 %bf.clear26, 7, !dbg !11630
  store i64 %bf.set27, i64* %.cast5, align 8, !dbg !11630
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !11631
  %call28 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %1, i64 1) #8, !dbg !11632
  %2 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to %struct.tree_type**), align 8, !dbg !11633
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 14, !dbg !11633
  store %union.tree_node* %call28, %union.tree_node** %maxval, align 8, !dbg !11634
  %3 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to %struct.tree_type**), align 8, !dbg !11635
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 6, !dbg !11635
  %bf.load31 = load i32, i32* %precision, align 4, !dbg !11636
  %bf.clear32 = and i32 %bf.load31, -1024, !dbg !11636
  %bf.set33 = or i32 %bf.clear32, 1, !dbg !11636
  store i32 %bf.set33, i32* %precision, align 4, !dbg !11636
  %4 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 14), align 2, !dbg !11637
  %conv35 = zext i8 %4 to i32, !dbg !11637
  %mul = shl nuw nsw i32 %conv35, 3, !dbg !11637
  %call38 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul, i32 0) #8, !dbg !11638
  store %union.tree_node* %call38, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 1), align 8, !dbg !11639
  %5 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 15), align 1, !dbg !11640
  %conv40 = zext i8 %5 to i32, !dbg !11640
  %mul41 = shl nuw nsw i32 %conv40, 3, !dbg !11640
  %call44 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul41, i32 0) #8, !dbg !11641
  store %union.tree_node* %call44, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 2), align 16, !dbg !11642
  %6 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !11643
  %conv46 = zext i8 %6 to i32, !dbg !11643
  %mul47 = shl nuw nsw i32 %conv46, 3, !dbg !11643
  %call50 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul47, i32 0) #8, !dbg !11644
  store %union.tree_node* %call50, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 3), align 8, !dbg !11645
  %7 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 17), align 1, !dbg !11646
  %conv52 = zext i8 %7 to i32, !dbg !11646
  %mul53 = shl nuw nsw i32 %conv52, 3, !dbg !11646
  %call56 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul53, i32 0) #8, !dbg !11647
  store %union.tree_node* %call56, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 4), align 16, !dbg !11648
  %8 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 18), align 2, !dbg !11649
  %conv58 = zext i8 %8 to i32, !dbg !11649
  %mul59 = shl nuw nsw i32 %conv58, 3, !dbg !11649
  %call62 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul59, i32 0) #8, !dbg !11650
  store %union.tree_node* %call62, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 5), align 8, !dbg !11651
  %9 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 14), align 2, !dbg !11652
  %conv64 = zext i8 %9 to i32, !dbg !11652
  %mul65 = shl nuw nsw i32 %conv64, 3, !dbg !11652
  %call68 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul65, i32 1) #8, !dbg !11653
  store %union.tree_node* %call68, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 6), align 16, !dbg !11654
  %10 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 15), align 1, !dbg !11655
  %conv70 = zext i8 %10 to i32, !dbg !11655
  %mul71 = shl nuw nsw i32 %conv70, 3, !dbg !11655
  %call74 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul71, i32 1) #8, !dbg !11656
  store %union.tree_node* %call74, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 7), align 8, !dbg !11657
  %11 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !11658
  %conv76 = zext i8 %11 to i32, !dbg !11658
  %mul77 = shl nuw nsw i32 %conv76, 3, !dbg !11658
  %call80 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul77, i32 1) #8, !dbg !11659
  store %union.tree_node* %call80, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 8), align 16, !dbg !11660
  %12 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 17), align 1, !dbg !11661
  %conv82 = zext i8 %12 to i32, !dbg !11661
  %mul83 = shl nuw nsw i32 %conv82, 3, !dbg !11661
  %call86 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul83, i32 1) #8, !dbg !11662
  store %union.tree_node* %call86, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 9), align 8, !dbg !11663
  %13 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 18), align 2, !dbg !11664
  %conv88 = zext i8 %13 to i32, !dbg !11664
  %mul89 = shl nuw nsw i32 %conv88, 3, !dbg !11664
  %call92 = tail call fastcc %union.tree_node* @make_or_reuse_type(i32 %mul89, i32 1) #8, !dbg !11665
  store %union.tree_node* %call92, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 10), align 16, !dbg !11666
  %call93 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.242, i64 0, i64 0)) #7, !dbg !11667
  store %union.tree_node* %call93, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 22), align 16, !dbg !11668
  %call94 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.243, i64 0, i64 0)) #7, !dbg !11669
  store %union.tree_node* %call94, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 23), align 8, !dbg !11670
  %call95 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.203, i64 0, i64 0)) #7, !dbg !11671
  store %union.tree_node* %call95, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 16, !dbg !11672
  ret void, !dbg !11673
}

declare dso_local void @initialize_sizetypes(i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_signed_type(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_unsigned_type(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @make_or_reuse_type(i32 %size, i32 %unsignedp) unnamed_addr #5 !dbg !11674 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !11678, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !11679, metadata !DIExpression()), !dbg !11680
  %0 = add i32 %size, -8, !dbg !11681
  %1 = lshr i32 %0, 3, !dbg !11681
  %2 = shl i32 %0, 29, !dbg !11681
  %3 = or i32 %1, %2, !dbg !11681
  switch i32 %3, label %if.end32 [
    i32 3, label %if.then
    i32 0, label %if.then2
    i32 1, label %if.then10
    i32 7, label %if.then26
  ], !dbg !11681

if.then:                                          ; preds = %entry
  %tobool = icmp eq i32 %unsignedp, 0, !dbg !11682
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !11682
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11682
  %cond = select i1 %tobool, %union.tree_node* %5, %union.tree_node* %4, !dbg !11682
  br label %return, !dbg !11682

if.then2:                                         ; preds = %entry
  %tobool3 = icmp eq i32 %unsignedp, 0, !dbg !11684
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !11684
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !11684
  %cond7 = select i1 %tobool3, %union.tree_node* %7, %union.tree_node* %6, !dbg !11684
  br label %return, !dbg !11684

if.then10:                                        ; preds = %entry
  %tobool11 = icmp eq i32 %unsignedp, 0, !dbg !11686
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 16, !dbg !11686
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !dbg !11686
  %cond15 = select i1 %tobool11, %union.tree_node* %9, %union.tree_node* %8, !dbg !11686
  br label %return, !dbg !11686

if.then26:                                        ; preds = %entry
  %tobool27 = icmp eq i32 %unsignedp, 0, !dbg !11688
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !11688
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !11688
  %cond31 = select i1 %tobool27, %union.tree_node* %11, %union.tree_node* %10, !dbg !11688
  br label %return, !dbg !11688

if.end32:                                         ; preds = %entry
  %tobool33 = icmp eq i32 %unsignedp, 0, !dbg !11690
  br i1 %tobool33, label %if.else, label %if.then34, !dbg !11692

if.then34:                                        ; preds = %if.end32
  %call = tail call %union.tree_node* @make_unsigned_type(i32 %size) #7, !dbg !11693
  br label %return, !dbg !11694

if.else:                                          ; preds = %if.end32
  %call35 = tail call %union.tree_node* @make_signed_type(i32 %size) #7, !dbg !11695
  br label %return, !dbg !11696

return:                                           ; preds = %if.then26, %if.then10, %if.then2, %if.then, %if.else, %if.then34
  %retval.0 = phi %union.tree_node* [ %call, %if.then34 ], [ %call35, %if.else ], [ %cond, %if.then ], [ %cond7, %if.then2 ], [ %cond15, %if.then10 ], [ %cond31, %if.then26 ], !dbg !11680
  ret %union.tree_node* %retval.0, !dbg !11697
}

; Function Attrs: nounwind uwtable
define dso_local void @build_common_tree_nodes_2(i32 %short_double) local_unnamed_addr #5 !dbg !11698 {
entry:
  call void @llvm.dbg.value(metadata i32 %short_double, metadata !11702, metadata !DIExpression()), !dbg !11705
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 0) #8, !dbg !11706
  store %union.tree_node* %call, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !11707
  %call1 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 1) #8, !dbg !11708
  store %union.tree_node* %call1, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !11709
  %call2 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 -1) #8, !dbg !11710
  store %union.tree_node* %call2, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !11711
  %call3 = tail call %union.tree_node* @size_int_kind(i64 0, i32 0) #7, !dbg !11712
  store %union.tree_node* %call3, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !11713
  %call4 = tail call %union.tree_node* @size_int_kind(i64 1, i32 0) #7, !dbg !11714
  store %union.tree_node* %call4, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !11715
  %call5 = tail call %union.tree_node* @size_int_kind(i64 0, i32 2) #7, !dbg !11716
  store %union.tree_node* %call5, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19), align 8, !dbg !11717
  %call6 = tail call %union.tree_node* @size_int_kind(i64 1, i32 2) #7, !dbg !11718
  store %union.tree_node* %call6, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 16, !dbg !11719
  %call7 = tail call %union.tree_node* @size_int_kind(i64 8, i32 2) #7, !dbg !11720
  store %union.tree_node* %call7, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 21), align 8, !dbg !11721
  %0 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47) to %struct.tree_type**), align 8, !dbg !11722
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %0, i64 0, i32 13, !dbg !11722
  %1 = bitcast %union.tree_node** %minval to i64*, !dbg !11722
  %2 = load i64, i64* %1, align 8, !dbg !11722
  store i64 %2, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 25) to i64*), align 8, !dbg !11723
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %0, i64 0, i32 14, !dbg !11724
  %3 = bitcast %union.tree_node** %maxval to i64*, !dbg !11724
  %4 = load i64, i64* %3, align 8, !dbg !11724
  store i64 %4, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26) to i64*), align 16, !dbg !11725
  %call9 = tail call %union.tree_node* @make_node_stat(i32 19) #8, !dbg !11726
  store %union.tree_node* %call9, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11727
  tail call void @layout_type(%union.tree_node* %call9) #7, !dbg !11728
  %5 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to %struct.tree_type**), align 16, !dbg !11729
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 7, !dbg !11729
  store i32 8, i32* %align, align 8, !dbg !11730
  %6 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to %struct.tree_common**), align 16, !dbg !11731
  %7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 0, i32 0, !dbg !11731
  %bf.load = load i64, i64* %7, align 8, !dbg !11732
  %bf.clear = and i64 %bf.load, -4398046511105, !dbg !11732
  store i64 %bf.clear, i64* %7, align 8, !dbg !11732
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11733
  %call11 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %8) #8, !dbg !11734
  %call12 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call11, i64 0) #8, !dbg !11735
  store %union.tree_node* %call12, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !11736
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11737
  %9 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !11737
  tail call void @layout_type(%union.tree_node* %9) #7, !dbg !11738
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11739
  %call15 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %10) #8, !dbg !11740
  store %union.tree_node* %call15, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11741
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11742
  %call16 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %11, i32 1) #8, !dbg !11742
  %call17 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call16) #8, !dbg !11743
  store %union.tree_node* %call17, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 40), align 16, !dbg !11744
  %12 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39) to i64*), align 8, !dbg !11745
  store i64 %12, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 48) to i64*), align 16, !dbg !11746
  %call18 = tail call %union.tree_node* @make_node_stat(i32 9) #8, !dbg !11747
  store %union.tree_node* %call18, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !11748
  %.cast = bitcast %union.tree_node* %call18 to %struct.tree_type*, !dbg !11749
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast, i64 0, i32 6, !dbg !11749
  %bf.load20 = load i32, i32* %precision, align 4, !dbg !11750
  %bf.clear21 = and i32 %bf.load20, -1024, !dbg !11750
  %bf.set = or i32 %bf.clear21, 32, !dbg !11750
  store i32 %bf.set, i32* %precision, align 4, !dbg !11750
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !11751
  tail call void @layout_type(%union.tree_node* %13) #7, !dbg !11752
  %call22 = tail call %union.tree_node* @make_node_stat(i32 9) #8, !dbg !11753
  store %union.tree_node* %call22, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !11754
  %tobool = icmp eq i32 %short_double, 0, !dbg !11755
  %.cast1 = bitcast %union.tree_node* %call22 to %struct.tree_type*, !dbg !11757
  %precision24 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast1, i64 0, i32 6, !dbg !11757
  %bf.load25 = load i32, i32* %precision24, align 4, !dbg !11757
  %bf.clear26 = and i32 %bf.load25, -1024, !dbg !11757
  br i1 %tobool, label %if.else, label %if.then, !dbg !11758

if.then:                                          ; preds = %entry
  %bf.set27 = or i32 %bf.clear26, 32, !dbg !11759
  br label %if.end, !dbg !11760

if.else:                                          ; preds = %entry
  %bf.set32 = or i32 %bf.clear26, 64, !dbg !11761
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ %bf.set32, %if.else ], [ %bf.set27, %if.then ], !dbg !11757
  store i32 %storemerge, i32* %precision24, align 4, !dbg !11757
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !11762
  tail call void @layout_type(%union.tree_node* %14) #7, !dbg !11763
  %call33 = tail call %union.tree_node* @make_node_stat(i32 9) #8, !dbg !11764
  store %union.tree_node* %call33, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !11765
  %.cast2 = bitcast %union.tree_node* %call33 to %struct.tree_type*, !dbg !11766
  %precision35 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast2, i64 0, i32 6, !dbg !11766
  %bf.load36 = load i32, i32* %precision35, align 4, !dbg !11767
  %bf.clear37 = and i32 %bf.load36, -1024, !dbg !11767
  %bf.set38 = or i32 %bf.clear37, 80, !dbg !11767
  store i32 %bf.set38, i32* %precision35, align 4, !dbg !11767
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !11768
  tail call void @layout_type(%union.tree_node* %15) #7, !dbg !11769
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !11770
  %call39 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %16) #8, !dbg !11771
  store %union.tree_node* %call39, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 34), align 16, !dbg !11772
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !11773
  %call40 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %17) #8, !dbg !11774
  store %union.tree_node* %call40, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 35), align 8, !dbg !11775
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !11776
  %call41 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %18) #8, !dbg !11777
  store %union.tree_node* %call41, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 36), align 16, !dbg !11778
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11779
  %call42 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %19) #8, !dbg !11780
  store %union.tree_node* %call42, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 37), align 8, !dbg !11781
  %call43 = tail call %union.tree_node* @build_nonstandard_integer_type(i64 32, i32 1) #8, !dbg !11782
  store %union.tree_node* %call43, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !dbg !11783
  %call44 = tail call %union.tree_node* @build_nonstandard_integer_type(i64 64, i32 1) #8, !dbg !11784
  store %union.tree_node* %call44, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 16, !dbg !11785
  %call45 = tail call %union.tree_node* @make_node_stat(i32 9) #8, !dbg !11786
  store %union.tree_node* %call45, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49), align 8, !dbg !11787
  %.cast3 = bitcast %union.tree_node* %call45 to %struct.tree_type*, !dbg !11788
  %precision47 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast3, i64 0, i32 6, !dbg !11788
  %bf.load48 = load i32, i32* %precision47, align 4, !dbg !11789
  %bf.clear49 = and i32 %bf.load48, -1024, !dbg !11789
  %bf.set50 = or i32 %bf.clear49, 32, !dbg !11789
  store i32 %bf.set50, i32* %precision47, align 4, !dbg !11789
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49), align 8, !dbg !11790
  tail call void @layout_type(%union.tree_node* %20) #7, !dbg !11791
  %21 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49) to %struct.tree_type**), align 8, !dbg !11792
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %21, i64 0, i32 6, !dbg !11792
  %bf.load52 = load i32, i32* %mode, align 4, !dbg !11792
  %bf.clear53 = and i32 %bf.load52, -16711681, !dbg !11792
  %bf.set54 = or i32 %bf.clear53, 2752512, !dbg !11792
  store i32 %bf.set54, i32* %mode, align 4, !dbg !11792
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49), align 8, !dbg !11793
  %call55 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %22) #8, !dbg !11794
  store %union.tree_node* %call55, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 52), align 16, !dbg !11795
  %call56 = tail call %union.tree_node* @make_node_stat(i32 9) #8, !dbg !11796
  store %union.tree_node* %call56, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 16, !dbg !11797
  %.cast4 = bitcast %union.tree_node* %call56 to %struct.tree_type*, !dbg !11798
  %precision58 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast4, i64 0, i32 6, !dbg !11798
  %bf.load59 = load i32, i32* %precision58, align 4, !dbg !11799
  %bf.clear60 = and i32 %bf.load59, -1024, !dbg !11799
  %bf.set61 = or i32 %bf.clear60, 64, !dbg !11799
  store i32 %bf.set61, i32* %precision58, align 4, !dbg !11799
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 16, !dbg !11800
  tail call void @layout_type(%union.tree_node* %23) #7, !dbg !11801
  %24 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50) to %struct.tree_type**), align 16, !dbg !11802
  %mode63 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 6, !dbg !11802
  %bf.load64 = load i32, i32* %mode63, align 4, !dbg !11802
  %bf.clear65 = and i32 %bf.load64, -16711681, !dbg !11802
  %bf.set66 = or i32 %bf.clear65, 2818048, !dbg !11802
  store i32 %bf.set66, i32* %mode63, align 4, !dbg !11802
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 16, !dbg !11803
  %call67 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %25) #8, !dbg !11804
  store %union.tree_node* %call67, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 53), align 8, !dbg !11805
  %call68 = tail call %union.tree_node* @make_node_stat(i32 9) #8, !dbg !11806
  store %union.tree_node* %call68, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51), align 8, !dbg !11807
  %.cast5 = bitcast %union.tree_node* %call68 to %struct.tree_type*, !dbg !11808
  %precision70 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %.cast5, i64 0, i32 6, !dbg !11808
  %bf.load71 = load i32, i32* %precision70, align 4, !dbg !11809
  %bf.clear72 = and i32 %bf.load71, -1024, !dbg !11809
  %bf.set73 = or i32 %bf.clear72, 128, !dbg !11809
  store i32 %bf.set73, i32* %precision70, align 4, !dbg !11809
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51), align 8, !dbg !11810
  tail call void @layout_type(%union.tree_node* %26) #7, !dbg !11811
  %27 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51) to %struct.tree_type**), align 8, !dbg !11812
  %mode75 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 6, !dbg !11812
  %bf.load76 = load i32, i32* %mode75, align 4, !dbg !11812
  %bf.clear77 = and i32 %bf.load76, -16711681, !dbg !11812
  %bf.set78 = or i32 %bf.clear77, 2883584, !dbg !11812
  store i32 %bf.set78, i32* %mode75, align 4, !dbg !11812
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51), align 8, !dbg !11813
  %call79 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %28) #8, !dbg !11814
  store %union.tree_node* %call79, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 54), align 16, !dbg !11815
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11816
  %call80 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %29) #8, !dbg !11817
  store %union.tree_node* %call80, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !dbg !11818
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !11819
  %call81 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %30) #8, !dbg !11820
  store %union.tree_node* %call81, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 16, !dbg !11821
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !11822
  %call82 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %31) #8, !dbg !11823
  store %union.tree_node* %call82, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 29), align 8, !dbg !11824
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !11825
  %call83 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %32) #8, !dbg !11826
  store %union.tree_node* %call83, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 30), align 16, !dbg !11827
  %call84 = tail call %union.tree_node* @make_fract_type(i32 8, i32 0, i32 1) #7, !dbg !11828
  store %union.tree_node* %call84, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 57), align 8, !dbg !11828
  %call85 = tail call %union.tree_node* @make_fract_type(i32 8, i32 1, i32 1) #7, !dbg !11828
  store %union.tree_node* %call85, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 61), align 8, !dbg !11828
  %call86 = tail call %union.tree_node* @make_fract_type(i32 8, i32 0, i32 0) #7, !dbg !11828
  store %union.tree_node* %call86, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 65), align 8, !dbg !11828
  %call87 = tail call %union.tree_node* @make_fract_type(i32 8, i32 1, i32 0) #7, !dbg !11828
  store %union.tree_node* %call87, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 69), align 8, !dbg !11828
  %call88 = tail call %union.tree_node* @make_fract_type(i32 16, i32 0, i32 1) #7, !dbg !11828
  store %union.tree_node* %call88, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 58), align 16, !dbg !11828
  %call89 = tail call %union.tree_node* @make_fract_type(i32 16, i32 1, i32 1) #7, !dbg !11828
  store %union.tree_node* %call89, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 62), align 16, !dbg !11828
  %call90 = tail call %union.tree_node* @make_fract_type(i32 16, i32 0, i32 0) #7, !dbg !11828
  store %union.tree_node* %call90, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 66), align 16, !dbg !11828
  %call91 = tail call %union.tree_node* @make_fract_type(i32 16, i32 1, i32 0) #7, !dbg !11828
  store %union.tree_node* %call91, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 70), align 16, !dbg !11828
  %call92 = tail call %union.tree_node* @make_fract_type(i32 32, i32 0, i32 1) #7, !dbg !11828
  store %union.tree_node* %call92, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 59), align 8, !dbg !11828
  %call93 = tail call %union.tree_node* @make_fract_type(i32 32, i32 1, i32 1) #7, !dbg !11828
  store %union.tree_node* %call93, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 63), align 8, !dbg !11828
  %call94 = tail call %union.tree_node* @make_fract_type(i32 32, i32 0, i32 0) #7, !dbg !11828
  store %union.tree_node* %call94, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 67), align 8, !dbg !11828
  %call95 = tail call %union.tree_node* @make_fract_type(i32 32, i32 1, i32 0) #7, !dbg !11828
  store %union.tree_node* %call95, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 71), align 8, !dbg !11828
  %call96 = tail call %union.tree_node* @make_fract_type(i32 64, i32 0, i32 1) #7, !dbg !11828
  store %union.tree_node* %call96, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 60), align 16, !dbg !11828
  %call97 = tail call %union.tree_node* @make_fract_type(i32 64, i32 1, i32 1) #7, !dbg !11828
  store %union.tree_node* %call97, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 64), align 16, !dbg !11828
  %call98 = tail call %union.tree_node* @make_fract_type(i32 64, i32 0, i32 0) #7, !dbg !11828
  store %union.tree_node* %call98, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 68), align 16, !dbg !11828
  %call99 = tail call %union.tree_node* @make_fract_type(i32 64, i32 1, i32 0) #7, !dbg !11828
  store %union.tree_node* %call99, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 72), align 16, !dbg !11828
  %call100 = tail call %union.tree_node* @make_accum_type(i32 16, i32 0, i32 1) #7, !dbg !11829
  store %union.tree_node* %call100, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 73), align 8, !dbg !11829
  %call101 = tail call %union.tree_node* @make_accum_type(i32 16, i32 1, i32 1) #7, !dbg !11829
  store %union.tree_node* %call101, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 77), align 8, !dbg !11829
  %call102 = tail call %union.tree_node* @make_accum_type(i32 16, i32 0, i32 0) #7, !dbg !11829
  store %union.tree_node* %call102, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 81), align 8, !dbg !11829
  %call103 = tail call %union.tree_node* @make_accum_type(i32 16, i32 1, i32 0) #7, !dbg !11829
  store %union.tree_node* %call103, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 85), align 8, !dbg !11829
  %call104 = tail call %union.tree_node* @make_accum_type(i32 32, i32 0, i32 1) #7, !dbg !11829
  store %union.tree_node* %call104, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 74), align 16, !dbg !11829
  %call105 = tail call %union.tree_node* @make_accum_type(i32 32, i32 1, i32 1) #7, !dbg !11829
  store %union.tree_node* %call105, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 78), align 16, !dbg !11829
  %call106 = tail call %union.tree_node* @make_accum_type(i32 32, i32 0, i32 0) #7, !dbg !11829
  store %union.tree_node* %call106, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 82), align 16, !dbg !11829
  %call107 = tail call %union.tree_node* @make_accum_type(i32 32, i32 1, i32 0) #7, !dbg !11829
  store %union.tree_node* %call107, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 86), align 16, !dbg !11829
  %call108 = tail call %union.tree_node* @make_accum_type(i32 64, i32 0, i32 1) #7, !dbg !11829
  store %union.tree_node* %call108, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 75), align 8, !dbg !11829
  %call109 = tail call %union.tree_node* @make_accum_type(i32 64, i32 1, i32 1) #7, !dbg !11829
  store %union.tree_node* %call109, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 79), align 8, !dbg !11829
  %call110 = tail call %union.tree_node* @make_accum_type(i32 64, i32 0, i32 0) #7, !dbg !11829
  store %union.tree_node* %call110, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 83), align 8, !dbg !11829
  %call111 = tail call %union.tree_node* @make_accum_type(i32 64, i32 1, i32 0) #7, !dbg !11829
  store %union.tree_node* %call111, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 87), align 8, !dbg !11829
  %call112 = tail call %union.tree_node* @make_accum_type(i32 128, i32 0, i32 1) #7, !dbg !11829
  store %union.tree_node* %call112, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 76), align 16, !dbg !11829
  %call113 = tail call %union.tree_node* @make_accum_type(i32 128, i32 1, i32 1) #7, !dbg !11829
  store %union.tree_node* %call113, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 80), align 16, !dbg !11829
  %call114 = tail call %union.tree_node* @make_accum_type(i32 128, i32 0, i32 0) #7, !dbg !11829
  store %union.tree_node* %call114, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 84), align 16, !dbg !11829
  %call115 = tail call %union.tree_node* @make_accum_type(i32 128, i32 1, i32 0) #7, !dbg !11829
  store %union.tree_node* %call115, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 88), align 16, !dbg !11829
  %33 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 20), align 4, !dbg !11830
  %conv116 = zext i8 %33 to i32, !dbg !11830
  %mul = shl nuw nsw i32 %conv116, 3, !dbg !11830
  %call119 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul, i32 0, i32 0) #8, !dbg !11830
  store %union.tree_node* %call119, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 89), align 8, !dbg !11830
  %34 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 25), align 1, !dbg !11830
  %conv121 = zext i8 %34 to i32, !dbg !11830
  %mul122 = shl nuw nsw i32 %conv121, 3, !dbg !11830
  %call125 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul122, i32 1, i32 0) #8, !dbg !11830
  store %union.tree_node* %call125, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 94), align 16, !dbg !11830
  %35 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 20), align 4, !dbg !11830
  %conv127 = zext i8 %35 to i32, !dbg !11830
  %mul128 = shl nuw nsw i32 %conv127, 3, !dbg !11830
  %call131 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul128, i32 0, i32 1) #8, !dbg !11830
  store %union.tree_node* %call131, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 99), align 8, !dbg !11830
  %36 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 25), align 1, !dbg !11830
  %conv133 = zext i8 %36 to i32, !dbg !11830
  %mul134 = shl nuw nsw i32 %conv133, 3, !dbg !11830
  %call137 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul134, i32 1, i32 1) #8, !dbg !11830
  store %union.tree_node* %call137, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 104), align 16, !dbg !11830
  %37 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 21), align 1, !dbg !11831
  %conv139 = zext i8 %37 to i32, !dbg !11831
  %mul140 = shl nuw nsw i32 %conv139, 3, !dbg !11831
  %call143 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul140, i32 0, i32 0) #8, !dbg !11831
  store %union.tree_node* %call143, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 90), align 16, !dbg !11831
  %38 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 26), align 2, !dbg !11831
  %conv145 = zext i8 %38 to i32, !dbg !11831
  %mul146 = shl nuw nsw i32 %conv145, 3, !dbg !11831
  %call149 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul146, i32 1, i32 0) #8, !dbg !11831
  store %union.tree_node* %call149, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 95), align 8, !dbg !11831
  %39 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 21), align 1, !dbg !11831
  %conv151 = zext i8 %39 to i32, !dbg !11831
  %mul152 = shl nuw nsw i32 %conv151, 3, !dbg !11831
  %call155 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul152, i32 0, i32 1) #8, !dbg !11831
  store %union.tree_node* %call155, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 100), align 16, !dbg !11831
  %40 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 26), align 2, !dbg !11831
  %conv157 = zext i8 %40 to i32, !dbg !11831
  %mul158 = shl nuw nsw i32 %conv157, 3, !dbg !11831
  %call161 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul158, i32 1, i32 1) #8, !dbg !11831
  store %union.tree_node* %call161, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 105), align 8, !dbg !11831
  %41 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 22), align 2, !dbg !11832
  %conv163 = zext i8 %41 to i32, !dbg !11832
  %mul164 = shl nuw nsw i32 %conv163, 3, !dbg !11832
  %call167 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul164, i32 0, i32 0) #8, !dbg !11832
  store %union.tree_node* %call167, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 91), align 8, !dbg !11832
  %42 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 27), align 1, !dbg !11832
  %conv169 = zext i8 %42 to i32, !dbg !11832
  %mul170 = shl nuw nsw i32 %conv169, 3, !dbg !11832
  %call173 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul170, i32 1, i32 0) #8, !dbg !11832
  store %union.tree_node* %call173, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 96), align 16, !dbg !11832
  %43 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 22), align 2, !dbg !11832
  %conv175 = zext i8 %43 to i32, !dbg !11832
  %mul176 = shl nuw nsw i32 %conv175, 3, !dbg !11832
  %call179 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul176, i32 0, i32 1) #8, !dbg !11832
  store %union.tree_node* %call179, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 101), align 8, !dbg !11832
  %44 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 27), align 1, !dbg !11832
  %conv181 = zext i8 %44 to i32, !dbg !11832
  %mul182 = shl nuw nsw i32 %conv181, 3, !dbg !11832
  %call185 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul182, i32 1, i32 1) #8, !dbg !11832
  store %union.tree_node* %call185, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 106), align 16, !dbg !11832
  %45 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 23), align 1, !dbg !11833
  %conv187 = zext i8 %45 to i32, !dbg !11833
  %mul188 = shl nuw nsw i32 %conv187, 3, !dbg !11833
  %call191 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul188, i32 0, i32 0) #8, !dbg !11833
  store %union.tree_node* %call191, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 92), align 16, !dbg !11833
  %46 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 28), align 4, !dbg !11833
  %conv193 = zext i8 %46 to i32, !dbg !11833
  %mul194 = shl nuw nsw i32 %conv193, 3, !dbg !11833
  %call197 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul194, i32 1, i32 0) #8, !dbg !11833
  store %union.tree_node* %call197, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 97), align 8, !dbg !11833
  %47 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 23), align 1, !dbg !11833
  %conv199 = zext i8 %47 to i32, !dbg !11833
  %mul200 = shl nuw nsw i32 %conv199, 3, !dbg !11833
  %call203 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul200, i32 0, i32 1) #8, !dbg !11833
  store %union.tree_node* %call203, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 102), align 16, !dbg !11833
  %48 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 28), align 4, !dbg !11833
  %conv205 = zext i8 %48 to i32, !dbg !11833
  %mul206 = shl nuw nsw i32 %conv205, 3, !dbg !11833
  %call209 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul206, i32 1, i32 1) #8, !dbg !11833
  store %union.tree_node* %call209, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 107), align 8, !dbg !11833
  %49 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 24), align 8, !dbg !11834
  %conv211 = zext i8 %49 to i32, !dbg !11834
  %mul212 = shl nuw nsw i32 %conv211, 3, !dbg !11834
  %call215 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul212, i32 0, i32 0) #8, !dbg !11834
  store %union.tree_node* %call215, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 93), align 8, !dbg !11834
  %50 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 29), align 1, !dbg !11834
  %conv217 = zext i8 %50 to i32, !dbg !11834
  %mul218 = shl nuw nsw i32 %conv217, 3, !dbg !11834
  %call221 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul218, i32 1, i32 0) #8, !dbg !11834
  store %union.tree_node* %call221, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 98), align 16, !dbg !11834
  %51 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 24), align 8, !dbg !11834
  %conv223 = zext i8 %51 to i32, !dbg !11834
  %mul224 = shl nuw nsw i32 %conv223, 3, !dbg !11834
  %call227 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul224, i32 0, i32 1) #8, !dbg !11834
  store %union.tree_node* %call227, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 103), align 8, !dbg !11834
  %52 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 29), align 1, !dbg !11834
  %conv229 = zext i8 %52 to i32, !dbg !11834
  %mul230 = shl nuw nsw i32 %conv229, 3, !dbg !11834
  %call233 = tail call fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %mul230, i32 1, i32 1) #8, !dbg !11834
  store %union.tree_node* %call233, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 108), align 16, !dbg !11834
  %53 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 30), align 2, !dbg !11835
  %conv235 = zext i8 %53 to i32, !dbg !11835
  %mul236 = shl nuw nsw i32 %conv235, 3, !dbg !11835
  %call239 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul236, i32 0, i32 0) #8, !dbg !11835
  store %union.tree_node* %call239, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 109), align 8, !dbg !11835
  %54 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 34), align 2, !dbg !11835
  %conv241 = zext i8 %54 to i32, !dbg !11835
  %mul242 = shl nuw nsw i32 %conv241, 3, !dbg !11835
  %call245 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul242, i32 1, i32 0) #8, !dbg !11835
  store %union.tree_node* %call245, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 113), align 8, !dbg !11835
  %55 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 30), align 2, !dbg !11835
  %conv247 = zext i8 %55 to i32, !dbg !11835
  %mul248 = shl nuw nsw i32 %conv247, 3, !dbg !11835
  %call251 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul248, i32 0, i32 1) #8, !dbg !11835
  store %union.tree_node* %call251, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 117), align 8, !dbg !11835
  %56 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 34), align 2, !dbg !11835
  %conv253 = zext i8 %56 to i32, !dbg !11835
  %mul254 = shl nuw nsw i32 %conv253, 3, !dbg !11835
  %call257 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul254, i32 1, i32 1) #8, !dbg !11835
  store %union.tree_node* %call257, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 121), align 8, !dbg !11835
  %57 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 31), align 1, !dbg !11836
  %conv259 = zext i8 %57 to i32, !dbg !11836
  %mul260 = shl nuw nsw i32 %conv259, 3, !dbg !11836
  %call263 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul260, i32 0, i32 0) #8, !dbg !11836
  store %union.tree_node* %call263, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 110), align 16, !dbg !11836
  %58 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 35), align 1, !dbg !11836
  %conv265 = zext i8 %58 to i32, !dbg !11836
  %mul266 = shl nuw nsw i32 %conv265, 3, !dbg !11836
  %call269 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul266, i32 1, i32 0) #8, !dbg !11836
  store %union.tree_node* %call269, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 114), align 16, !dbg !11836
  %59 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 31), align 1, !dbg !11836
  %conv271 = zext i8 %59 to i32, !dbg !11836
  %mul272 = shl nuw nsw i32 %conv271, 3, !dbg !11836
  %call275 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul272, i32 0, i32 1) #8, !dbg !11836
  store %union.tree_node* %call275, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 118), align 16, !dbg !11836
  %60 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 35), align 1, !dbg !11836
  %conv277 = zext i8 %60 to i32, !dbg !11836
  %mul278 = shl nuw nsw i32 %conv277, 3, !dbg !11836
  %call281 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul278, i32 1, i32 1) #8, !dbg !11836
  store %union.tree_node* %call281, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 122), align 16, !dbg !11836
  %61 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 32), align 16, !dbg !11837
  %conv283 = zext i8 %61 to i32, !dbg !11837
  %mul284 = shl nuw nsw i32 %conv283, 3, !dbg !11837
  %call287 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul284, i32 0, i32 0) #8, !dbg !11837
  store %union.tree_node* %call287, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 111), align 8, !dbg !11837
  %62 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 36), align 4, !dbg !11837
  %conv289 = zext i8 %62 to i32, !dbg !11837
  %mul290 = shl nuw nsw i32 %conv289, 3, !dbg !11837
  %call293 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul290, i32 1, i32 0) #8, !dbg !11837
  store %union.tree_node* %call293, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 115), align 8, !dbg !11837
  %63 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 32), align 16, !dbg !11837
  %conv295 = zext i8 %63 to i32, !dbg !11837
  %mul296 = shl nuw nsw i32 %conv295, 3, !dbg !11837
  %call299 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul296, i32 0, i32 1) #8, !dbg !11837
  store %union.tree_node* %call299, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 119), align 8, !dbg !11837
  %64 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 36), align 4, !dbg !11837
  %conv301 = zext i8 %64 to i32, !dbg !11837
  %mul302 = shl nuw nsw i32 %conv301, 3, !dbg !11837
  %call305 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul302, i32 1, i32 1) #8, !dbg !11837
  store %union.tree_node* %call305, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 123), align 8, !dbg !11837
  %65 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 33), align 1, !dbg !11838
  %conv307 = zext i8 %65 to i32, !dbg !11838
  %mul308 = shl nuw nsw i32 %conv307, 3, !dbg !11838
  %call311 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul308, i32 0, i32 0) #8, !dbg !11838
  store %union.tree_node* %call311, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 112), align 16, !dbg !11838
  %66 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 37), align 1, !dbg !11838
  %conv313 = zext i8 %66 to i32, !dbg !11838
  %mul314 = shl nuw nsw i32 %conv313, 3, !dbg !11838
  %call317 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul314, i32 1, i32 0) #8, !dbg !11838
  store %union.tree_node* %call317, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 116), align 16, !dbg !11838
  %67 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 33), align 1, !dbg !11838
  %conv319 = zext i8 %67 to i32, !dbg !11838
  %mul320 = shl nuw nsw i32 %conv319, 3, !dbg !11838
  %call323 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul320, i32 0, i32 1) #8, !dbg !11838
  store %union.tree_node* %call323, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 120), align 16, !dbg !11838
  %68 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 37), align 1, !dbg !11838
  %conv325 = zext i8 %68 to i32, !dbg !11838
  %mul326 = shl nuw nsw i32 %conv325, 3, !dbg !11838
  %call329 = tail call fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %mul326, i32 1, i32 1) #8, !dbg !11838
  store %union.tree_node* %call329, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 124), align 16, !dbg !11838
  %69 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 69), align 8, !dbg !11839
  %call330 = tail call %union.tree_node* %69() #7, !dbg !11840
  call void @llvm.dbg.value(metadata %union.tree_node* %call330, metadata !11703, metadata !DIExpression()), !dbg !11841
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %call330, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11842
  %bf.load332 = load i64, i64* %70, align 8, !dbg !11842
  %bf.cast6 = and i64 %bf.load332, 65535, !dbg !11844
  %cmp = icmp eq i64 %bf.cast6, 16, !dbg !11844
  br i1 %cmp, label %if.end337, label %if.then335, !dbg !11845

if.then335:                                       ; preds = %if.end
  %call336 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %call330) #8, !dbg !11846
  call void @llvm.dbg.value(metadata %union.tree_node* %call336, metadata !11703, metadata !DIExpression()), !dbg !11841
  br label %if.end337, !dbg !11847

if.end337:                                        ; preds = %if.end, %if.then335
  %t.0 = phi %union.tree_node* [ %call336, %if.then335 ], [ %call330, %if.end ], !dbg !11841
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !11703, metadata !DIExpression()), !dbg !11841
  store %union.tree_node* %t.0, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 44), align 16, !dbg !11848
  ret void, !dbg !11849
}

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_fract_type(i32, i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_accum_type(i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @make_or_reuse_fract_type(i32 %size, i32 %unsignedp, i32 %satp) unnamed_addr #5 !dbg !11850 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !11854, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !11855, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata i32 %satp, metadata !11856, metadata !DIExpression()), !dbg !11857
  %tobool = icmp eq i32 %satp, 0, !dbg !11858
  %cmp = icmp eq i32 %size, 8, !dbg !11860
  br i1 %tobool, label %if.else, label %if.then, !dbg !11861

if.then:                                          ; preds = %entry
  br i1 %cmp, label %if.then1, label %if.end, !dbg !11862

if.then1:                                         ; preds = %if.then
  %tobool2 = icmp eq i32 %unsignedp, 0, !dbg !11864
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 61), align 8, !dbg !11864
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 57), align 8, !dbg !11864
  %cond = select i1 %tobool2, %union.tree_node* %1, %union.tree_node* %0, !dbg !11864
  br label %return, !dbg !11864

if.end:                                           ; preds = %if.then
  switch i32 %size, label %if.end59 [
    i32 16, label %if.then4
    i32 32, label %if.then12
    i32 64, label %if.then20
  ], !dbg !11866

if.then4:                                         ; preds = %if.end
  %tobool5 = icmp eq i32 %unsignedp, 0, !dbg !11867
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 62), align 16, !dbg !11867
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 58), align 16, !dbg !11867
  %cond9 = select i1 %tobool5, %union.tree_node* %3, %union.tree_node* %2, !dbg !11867
  br label %return, !dbg !11867

if.then12:                                        ; preds = %if.end
  %tobool13 = icmp eq i32 %unsignedp, 0, !dbg !11869
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 63), align 8, !dbg !11869
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 59), align 8, !dbg !11869
  %cond17 = select i1 %tobool13, %union.tree_node* %5, %union.tree_node* %4, !dbg !11869
  br label %return, !dbg !11869

if.then20:                                        ; preds = %if.end
  %tobool21 = icmp eq i32 %unsignedp, 0, !dbg !11871
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 64), align 16, !dbg !11871
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 60), align 16, !dbg !11871
  %cond25 = select i1 %tobool21, %union.tree_node* %7, %union.tree_node* %6, !dbg !11871
  br label %return, !dbg !11871

if.else:                                          ; preds = %entry
  br i1 %cmp, label %if.then28, label %if.end34, !dbg !11873

if.then28:                                        ; preds = %if.else
  %tobool29 = icmp eq i32 %unsignedp, 0, !dbg !11875
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 69), align 8, !dbg !11875
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 65), align 8, !dbg !11875
  %cond33 = select i1 %tobool29, %union.tree_node* %9, %union.tree_node* %8, !dbg !11875
  br label %return, !dbg !11875

if.end34:                                         ; preds = %if.else
  switch i32 %size, label %if.end59 [
    i32 16, label %if.then36
    i32 32, label %if.then44
    i32 64, label %if.then52
  ], !dbg !11877

if.then36:                                        ; preds = %if.end34
  %tobool37 = icmp eq i32 %unsignedp, 0, !dbg !11878
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 70), align 16, !dbg !11878
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 66), align 16, !dbg !11878
  %cond41 = select i1 %tobool37, %union.tree_node* %11, %union.tree_node* %10, !dbg !11878
  br label %return, !dbg !11878

if.then44:                                        ; preds = %if.end34
  %tobool45 = icmp eq i32 %unsignedp, 0, !dbg !11880
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 71), align 8, !dbg !11880
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 67), align 8, !dbg !11880
  %cond49 = select i1 %tobool45, %union.tree_node* %13, %union.tree_node* %12, !dbg !11880
  br label %return, !dbg !11880

if.then52:                                        ; preds = %if.end34
  %tobool53 = icmp eq i32 %unsignedp, 0, !dbg !11882
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 72), align 16, !dbg !11882
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 68), align 16, !dbg !11882
  %cond57 = select i1 %tobool53, %union.tree_node* %15, %union.tree_node* %14, !dbg !11882
  br label %return, !dbg !11882

if.end59:                                         ; preds = %if.end34, %if.end
  %call = tail call %union.tree_node* @make_fract_type(i32 %size, i32 %unsignedp, i32 %satp) #7, !dbg !11884
  br label %return, !dbg !11885

return:                                           ; preds = %if.then52, %if.then44, %if.then36, %if.then28, %if.then20, %if.then12, %if.then4, %if.then1, %if.end59
  %retval.0 = phi %union.tree_node* [ %call, %if.end59 ], [ %cond, %if.then1 ], [ %cond9, %if.then4 ], [ %cond17, %if.then12 ], [ %cond25, %if.then20 ], [ %cond33, %if.then28 ], [ %cond41, %if.then36 ], [ %cond49, %if.then44 ], [ %cond57, %if.then52 ], !dbg !11857
  ret %union.tree_node* %retval.0, !dbg !11886
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @make_or_reuse_accum_type(i32 %size, i32 %unsignedp, i32 %satp) unnamed_addr #5 !dbg !11887 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !11889, metadata !DIExpression()), !dbg !11892
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !11890, metadata !DIExpression()), !dbg !11892
  call void @llvm.dbg.value(metadata i32 %satp, metadata !11891, metadata !DIExpression()), !dbg !11892
  %tobool = icmp eq i32 %satp, 0, !dbg !11893
  %cmp = icmp eq i32 %size, 16, !dbg !11895
  br i1 %tobool, label %if.else, label %if.then, !dbg !11896

if.then:                                          ; preds = %entry
  br i1 %cmp, label %if.then1, label %if.end, !dbg !11897

if.then1:                                         ; preds = %if.then
  %tobool2 = icmp eq i32 %unsignedp, 0, !dbg !11899
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 77), align 8, !dbg !11899
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 73), align 8, !dbg !11899
  %cond = select i1 %tobool2, %union.tree_node* %1, %union.tree_node* %0, !dbg !11899
  br label %return, !dbg !11899

if.end:                                           ; preds = %if.then
  switch i32 %size, label %if.end59 [
    i32 32, label %if.then4
    i32 64, label %if.then12
    i32 128, label %if.then20
  ], !dbg !11901

if.then4:                                         ; preds = %if.end
  %tobool5 = icmp eq i32 %unsignedp, 0, !dbg !11902
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 78), align 16, !dbg !11902
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 74), align 16, !dbg !11902
  %cond9 = select i1 %tobool5, %union.tree_node* %3, %union.tree_node* %2, !dbg !11902
  br label %return, !dbg !11902

if.then12:                                        ; preds = %if.end
  %tobool13 = icmp eq i32 %unsignedp, 0, !dbg !11904
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 79), align 8, !dbg !11904
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 75), align 8, !dbg !11904
  %cond17 = select i1 %tobool13, %union.tree_node* %5, %union.tree_node* %4, !dbg !11904
  br label %return, !dbg !11904

if.then20:                                        ; preds = %if.end
  %tobool21 = icmp eq i32 %unsignedp, 0, !dbg !11906
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 80), align 16, !dbg !11906
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 76), align 16, !dbg !11906
  %cond25 = select i1 %tobool21, %union.tree_node* %7, %union.tree_node* %6, !dbg !11906
  br label %return, !dbg !11906

if.else:                                          ; preds = %entry
  br i1 %cmp, label %if.then28, label %if.end34, !dbg !11908

if.then28:                                        ; preds = %if.else
  %tobool29 = icmp eq i32 %unsignedp, 0, !dbg !11910
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 85), align 8, !dbg !11910
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 81), align 8, !dbg !11910
  %cond33 = select i1 %tobool29, %union.tree_node* %9, %union.tree_node* %8, !dbg !11910
  br label %return, !dbg !11910

if.end34:                                         ; preds = %if.else
  switch i32 %size, label %if.end59 [
    i32 32, label %if.then36
    i32 64, label %if.then44
    i32 128, label %if.then52
  ], !dbg !11912

if.then36:                                        ; preds = %if.end34
  %tobool37 = icmp eq i32 %unsignedp, 0, !dbg !11913
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 86), align 16, !dbg !11913
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 82), align 16, !dbg !11913
  %cond41 = select i1 %tobool37, %union.tree_node* %11, %union.tree_node* %10, !dbg !11913
  br label %return, !dbg !11913

if.then44:                                        ; preds = %if.end34
  %tobool45 = icmp eq i32 %unsignedp, 0, !dbg !11915
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 87), align 8, !dbg !11915
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 83), align 8, !dbg !11915
  %cond49 = select i1 %tobool45, %union.tree_node* %13, %union.tree_node* %12, !dbg !11915
  br label %return, !dbg !11915

if.then52:                                        ; preds = %if.end34
  %tobool53 = icmp eq i32 %unsignedp, 0, !dbg !11917
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 88), align 16, !dbg !11917
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 84), align 16, !dbg !11917
  %cond57 = select i1 %tobool53, %union.tree_node* %15, %union.tree_node* %14, !dbg !11917
  br label %return, !dbg !11917

if.end59:                                         ; preds = %if.end34, %if.end
  %call = tail call %union.tree_node* @make_accum_type(i32 %size, i32 %unsignedp, i32 %satp) #7, !dbg !11919
  br label %return, !dbg !11920

return:                                           ; preds = %if.then52, %if.then44, %if.then36, %if.then28, %if.then20, %if.then12, %if.then4, %if.then1, %if.end59
  %retval.0 = phi %union.tree_node* [ %call, %if.end59 ], [ %cond, %if.then1 ], [ %cond9, %if.then4 ], [ %cond17, %if.then12 ], [ %cond25, %if.then20 ], [ %cond33, %if.then28 ], [ %cond41, %if.then36 ], [ %cond49, %if.then44 ], [ %cond57, %if.then52 ], !dbg !11892
  ret %union.tree_node* %retval.0, !dbg !11921
}

; Function Attrs: nounwind uwtable
define dso_local void @build_common_builtin_nodes() local_unnamed_addr #5 !dbg !11922 {
entry:
  %mode_name_buf = alloca [4 x i8], align 1
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 330), align 16, !dbg !11939
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !11941
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 331), align 8, !dbg !11942
  %cmp1 = icmp eq %union.tree_node* %1, null, !dbg !11943
  %or.cond = or i1 %cmp, %cmp1, !dbg !11944
  br i1 %or.cond, label %if.then, label %if.end10, !dbg !11944

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !11945
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !11945
  %call = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %2, %union.tree_node* %3) #8, !dbg !11945
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11924, metadata !DIExpression()), !dbg !11947
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 40), align 16, !dbg !11948
  %call2 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %4, %union.tree_node* %call) #8, !dbg !11948
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !11924, metadata !DIExpression()), !dbg !11947
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11949
  %call3 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %5, %union.tree_node* %call2) #8, !dbg !11949
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !11924, metadata !DIExpression()), !dbg !11947
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11950
  %call4 = tail call %union.tree_node* @build_function_type(%union.tree_node* %6, %union.tree_node* %call3) #8, !dbg !11951
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !11926, metadata !DIExpression()), !dbg !11947
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 330), align 16, !dbg !11952
  %cmp5 = icmp eq %union.tree_node* %7, null, !dbg !11954
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11955

if.then6:                                         ; preds = %if.then
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.244, i64 0, i64 0), %union.tree_node* %call4, i32 330, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.245, i64 0, i64 0), i32 64) #8, !dbg !11956
  br label %if.end, !dbg !11956

if.end:                                           ; preds = %if.then6, %if.then
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 331), align 8, !dbg !11957
  %cmp7 = icmp eq %union.tree_node* %8, null, !dbg !11959
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !11960

if.then8:                                         ; preds = %if.end
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.246, i64 0, i64 0), %union.tree_node* %call4, i32 331, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.247, i64 0, i64 0), i32 64) #8, !dbg !11961
  br label %if.end10, !dbg !11961

if.end10:                                         ; preds = %if.end, %if.then8, %entry
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 329), align 8, !dbg !11962
  %cmp11 = icmp eq %union.tree_node* %9, null, !dbg !11964
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !11965

if.then12:                                        ; preds = %if.end10
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !11966
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !11966
  %call13 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %10, %union.tree_node* %11) #8, !dbg !11966
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !11924, metadata !DIExpression()), !dbg !11947
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 40), align 16, !dbg !11968
  %call14 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %12, %union.tree_node* %call13) #8, !dbg !11968
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !11924, metadata !DIExpression()), !dbg !11947
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 40), align 16, !dbg !11969
  %call15 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %13, %union.tree_node* %call14) #8, !dbg !11969
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !11924, metadata !DIExpression()), !dbg !11947
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11970
  %call16 = tail call %union.tree_node* @build_function_type(%union.tree_node* %14, %union.tree_node* %call15) #8, !dbg !11971
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.248, i64 0, i64 0), %union.tree_node* %call16, i32 329, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.249, i64 0, i64 0), i32 66) #8, !dbg !11972
  br label %if.end17, !dbg !11973

if.end17:                                         ; preds = %if.then12, %if.end10
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 333), align 8, !dbg !11974
  %cmp18 = icmp eq %union.tree_node* %15, null, !dbg !11976
  br i1 %cmp18, label %if.then19, label %if.end24, !dbg !11977

if.then19:                                        ; preds = %if.end17
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !11978
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !11978
  %call20 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %16, %union.tree_node* %17) #8, !dbg !11978
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !11924, metadata !DIExpression()), !dbg !11947
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11980
  %call21 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %18, %union.tree_node* %call20) #8, !dbg !11980
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !11924, metadata !DIExpression()), !dbg !11947
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11981
  %call22 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %19, %union.tree_node* %call21) #8, !dbg !11981
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !11924, metadata !DIExpression()), !dbg !11947
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11982
  %call23 = tail call %union.tree_node* @build_function_type(%union.tree_node* %20, %union.tree_node* %call22) #8, !dbg !11983
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.250, i64 0, i64 0), %union.tree_node* %call23, i32 333, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i64 0, i64 0), i32 64) #8, !dbg !11984
  br label %if.end24, !dbg !11985

if.end24:                                         ; preds = %if.then19, %if.end17
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 415), align 8, !dbg !11986
  %cmp25 = icmp eq %union.tree_node* %21, null, !dbg !11988
  br i1 %cmp25, label %if.then26, label %if.end29, !dbg !11989

if.then26:                                        ; preds = %if.end24
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !11990
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !11990
  %call27 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %22, %union.tree_node* %23) #8, !dbg !11990
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !11924, metadata !DIExpression()), !dbg !11947
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11992
  %call28 = tail call %union.tree_node* @build_function_type(%union.tree_node* %24, %union.tree_node* %call27) #8, !dbg !11993
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !11926, metadata !DIExpression()), !dbg !11947
  %25 = load i32, i32* @flag_stack_check, align 4, !dbg !11994
  %tobool = icmp eq i32 %25, 0, !dbg !11994
  %or = select i1 %tobool, i32 80, i32 16, !dbg !11995
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.252, i64 0, i64 0), %union.tree_node* %call28, i32 415, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.253, i64 0, i64 0), i32 %or) #8, !dbg !11996
  br label %if.end29, !dbg !11997

if.end29:                                         ; preds = %if.then26, %if.end24
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11998
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !11998
  %call30 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %26, %union.tree_node* %27) #8, !dbg !11998
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !11924, metadata !DIExpression()), !dbg !11947
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !11999
  %call31 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %28, %union.tree_node* %call30) #8, !dbg !11999
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !11924, metadata !DIExpression()), !dbg !11947
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12000
  %call32 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %29, %union.tree_node* %call31) #8, !dbg !12000
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !11924, metadata !DIExpression()), !dbg !11947
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12001
  %call33 = tail call %union.tree_node* @build_function_type(%union.tree_node* %30, %union.tree_node* %call32) #8, !dbg !12002
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.254, i64 0, i64 0), %union.tree_node* %call33, i32 520, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.254, i64 0, i64 0), i32 64) #8, !dbg !12003
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12004
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12004
  %call34 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %31, %union.tree_node* %32) #8, !dbg !12004
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !11924, metadata !DIExpression()), !dbg !11947
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12005
  %call35 = tail call %union.tree_node* @build_function_type(%union.tree_node* %33, %union.tree_node* %call34) #8, !dbg !12006
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.255, i64 0, i64 0), %union.tree_node* %call35, i32 521, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.255, i64 0, i64 0), i32 65) #8, !dbg !12007
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12008
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12008
  %call36 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %34, %union.tree_node* %35) #8, !dbg !12008
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !11924, metadata !DIExpression()), !dbg !11947
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12009
  %call37 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %36, %union.tree_node* %call36) #8, !dbg !12009
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !11924, metadata !DIExpression()), !dbg !11947
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12010
  %call38 = tail call %union.tree_node* @build_function_type(%union.tree_node* %37, %union.tree_node* %call37) #8, !dbg !12011
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.256, i64 0, i64 0), %union.tree_node* %call38, i32 522, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.256, i64 0, i64 0), i32 72) #8, !dbg !12012
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12013
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12013
  %call39 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %38, %union.tree_node* %39) #8, !dbg !12013
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !11924, metadata !DIExpression()), !dbg !11947
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12014
  %call40 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %40, %union.tree_node* %call39) #8, !dbg !12014
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !11924, metadata !DIExpression()), !dbg !11947
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12015
  %call41 = tail call %union.tree_node* @build_function_type(%union.tree_node* %41, %union.tree_node* %call40) #8, !dbg !12016
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.257, i64 0, i64 0), %union.tree_node* %call41, i32 523, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.257, i64 0, i64 0), i32 64) #8, !dbg !12017
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12018
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12018
  %call42 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %42, %union.tree_node* %43) #8, !dbg !12018
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !11924, metadata !DIExpression()), !dbg !11947
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12019
  %call43 = tail call %union.tree_node* @build_function_type(%union.tree_node* %44, %union.tree_node* %call42) #8, !dbg !12020
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.258, i64 0, i64 0), %union.tree_node* %call43, i32 524, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.258, i64 0, i64 0), i32 66) #8, !dbg !12021
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12022
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12022
  %call44 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %45, %union.tree_node* %46) #8, !dbg !12022
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !11924, metadata !DIExpression()), !dbg !11947
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12023
  %call45 = tail call %union.tree_node* @build_function_type(%union.tree_node* %47, %union.tree_node* %call44) #8, !dbg !12024
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.259, i64 0, i64 0), %union.tree_node* %call45, i32 525, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.259, i64 0, i64 0), i32 64) #8, !dbg !12025
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12026
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12027
  %call46 = tail call %union.tree_node* @build_function_type(%union.tree_node* %48, %union.tree_node* %49) #8, !dbg !12028
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.260, i64 0, i64 0), %union.tree_node* %call46, i32 526, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.260, i64 0, i64 0), i32 64) #8, !dbg !12029
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12030
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12030
  %call47 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %50, %union.tree_node* %51) #8, !dbg !12030
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !11924, metadata !DIExpression()), !dbg !11947
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12031
  %call48 = tail call %union.tree_node* @build_function_type(%union.tree_node* %52, %union.tree_node* %call47) #8, !dbg !12032
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.261, i64 0, i64 0), %union.tree_node* %call48, i32 527, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.261, i64 0, i64 0), i32 64) #8, !dbg !12033
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12034
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12035
  %call49 = tail call %union.tree_node* @build_function_type(%union.tree_node* %53, %union.tree_node* %54) #8, !dbg !12036
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i64 0, i64 0), %union.tree_node* %call49, i32 546, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.263, i64 0, i64 0), i32 0) #8, !dbg !12037
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.264, i64 0, i64 0), %union.tree_node* %call49, i32 547, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.265, i64 0, i64 0), i32 0) #8, !dbg !12038
  %55 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !12039
  %tobool50 = icmp eq i8 %55, 0, !dbg !12041
  br i1 %tobool50, label %if.end53, label %if.then51, !dbg !12042

if.then51:                                        ; preds = %if.end29
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12043
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12045
  %call52 = tail call %union.tree_node* @build_function_type(%union.tree_node* %56, %union.tree_node* %57) #8, !dbg !12046
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.266, i64 0, i64 0), %union.tree_node* %call52, i32 551, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.267, i64 0, i64 0), i32 8) #8, !dbg !12047
  br label %if.end53, !dbg !12048

if.end53:                                         ; preds = %if.end29, %if.then51
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12049
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12049
  %call54 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %58, %union.tree_node* %59) #8, !dbg !12049
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !11924, metadata !DIExpression()), !dbg !11947
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12050
  %call55 = tail call %union.tree_node* @build_function_type(%union.tree_node* %60, %union.tree_node* %call54) #8, !dbg !12051
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.268, i64 0, i64 0), %union.tree_node* %call55, i32 550, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.269, i64 0, i64 0), i32 8) #8, !dbg !12052
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !12053
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12053
  %call56 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %61, %union.tree_node* %62) #8, !dbg !12053
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !11924, metadata !DIExpression()), !dbg !11947
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12054
  %call57 = tail call %union.tree_node* @build_function_type(%union.tree_node* %63, %union.tree_node* %call56) #8, !dbg !12055
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.270, i64 0, i64 0), %union.tree_node* %call57, i32 552, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.270, i64 0, i64 0), i32 66) #8, !dbg !12056
  %64 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !12057
  %65 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 7), align 8, !dbg !12058
  %call58 = tail call i32 %65() #7, !dbg !12059
  %call59 = tail call %union.tree_node* %64(i32 %call58, i32 0) #7, !dbg !12060
  call void @llvm.dbg.value(metadata %union.tree_node* %call59, metadata !11925, metadata !DIExpression()), !dbg !11947
  %call60 = tail call %union.tree_node* @build_function_type(%union.tree_node* %call59, %union.tree_node* %call56) #8, !dbg !12061
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.271, i64 0, i64 0), %union.tree_node* %call60, i32 553, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.271, i64 0, i64 0), i32 66) #8, !dbg !12062
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !12063
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12063
  %call61 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %66, %union.tree_node* %67) #8, !dbg !12063
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !11924, metadata !DIExpression()), !dbg !11947
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !12064
  %call62 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %68, %union.tree_node* %call61) #8, !dbg !12064
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !11924, metadata !DIExpression()), !dbg !11947
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12065
  %call63 = tail call %union.tree_node* @build_function_type(%union.tree_node* %69, %union.tree_node* %call62) #8, !dbg !12066
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !11926, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @local_define_builtin(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.272, i64 0, i64 0), %union.tree_node* %call63, i32 554, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.272, i64 0, i64 0), i32 64) #8, !dbg !12067
  call void @llvm.dbg.value(metadata i32 51, metadata !11927, metadata !DIExpression()), !dbg !12068
  %70 = getelementptr inbounds [4 x i8], [4 x i8]* %mode_name_buf, i64 0, i64 0, !dbg !12069
  br label %for.cond, !dbg !12070

for.cond:                                         ; preds = %cleanup, %if.end53
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup ], [ 51, %if.end53 ], !dbg !12071
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11927, metadata !DIExpression()), !dbg !12068
  %exitcond = icmp eq i64 %indvars.iv, 55, !dbg !12072
  br i1 %exitcond, label %for.end106, label %for.body, !dbg !12073

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #6, !dbg !12074
  call void @llvm.dbg.declare(metadata [4 x i8]* %mode_name_buf, metadata !11929, metadata !DIExpression()), !dbg !12075
  %71 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !12076
  %72 = trunc i64 %indvars.iv to i32, !dbg !12077
  %call65 = call %union.tree_node* %71(i32 %72, i32 0) #7, !dbg !12077
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !11937, metadata !DIExpression()), !dbg !12069
  %cmp66 = icmp eq %union.tree_node* %call65, null, !dbg !12078
  br i1 %cmp66, label %cleanup, label %if.end68, !dbg !12080

if.end68:                                         ; preds = %for.body
  %type69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12081
  %73 = load %union.tree_node*, %union.tree_node** %type69, align 8, !dbg !12081
  call void @llvm.dbg.value(metadata %union.tree_node* %73, metadata !11938, metadata !DIExpression()), !dbg !12069
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !12082
  %call70 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %73, %union.tree_node* %74) #8, !dbg !12082
  call void @llvm.dbg.value(metadata %union.tree_node* %call70, metadata !11924, metadata !DIExpression()), !dbg !11947
  %call71 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %73, %union.tree_node* %call70) #8, !dbg !12083
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !11924, metadata !DIExpression()), !dbg !11947
  %call72 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %73, %union.tree_node* %call71) #8, !dbg !12084
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !11924, metadata !DIExpression()), !dbg !11947
  %call73 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %73, %union.tree_node* %call72) #8, !dbg !12085
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !11924, metadata !DIExpression()), !dbg !11947
  %call74 = call %union.tree_node* @build_function_type(%union.tree_node* nonnull %call65, %union.tree_node* %call73) #8, !dbg !12086
  call void @llvm.dbg.value(metadata %union.tree_node* %call74, metadata !11926, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 undef, metadata !11935, metadata !DIExpression(DW_OP_plus_uconst, 662, DW_OP_stack_value)), !dbg !12069
  call void @llvm.dbg.value(metadata i32 undef, metadata !11936, metadata !DIExpression(DW_OP_plus_uconst, 666, DW_OP_stack_value)), !dbg !12069
  %arrayidx = getelementptr inbounds [87 x i8*], [87 x i8*]* @mode_name, i64 0, i64 %indvars.iv, !dbg !12087
  %75 = load i8*, i8** %arrayidx, align 8, !dbg !12087
  call void @llvm.dbg.value(metadata i8* %75, metadata !11934, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i8* %70, metadata !11933, metadata !DIExpression()), !dbg !12069
  br label %for.cond77, !dbg !12089

for.cond77:                                       ; preds = %for.body79, %if.end68
  %p.0 = phi i8* [ %75, %if.end68 ], [ %incdec.ptr, %for.body79 ], !dbg !12090
  %q.0 = phi i8* [ %70, %if.end68 ], [ %incdec.ptr82, %for.body79 ], !dbg !12090
  call void @llvm.dbg.value(metadata i8* %q.0, metadata !11933, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !11934, metadata !DIExpression()), !dbg !12069
  %76 = load i8, i8* %p.0, align 1, !dbg !12091
  %tobool78 = icmp eq i8 %76, 0, !dbg !12093
  br i1 %tobool78, label %for.end, label %for.body79, !dbg !12093

for.body79:                                       ; preds = %for.cond77
  %idxprom80 = zext i8 %76 to i64, !dbg !12094
  %arrayidx81 = getelementptr inbounds [256 x i8], [256 x i8]* @_sch_tolower, i64 0, i64 %idxprom80, !dbg !12094
  %77 = load i8, i8* %arrayidx81, align 1, !dbg !12094
  store i8 %77, i8* %q.0, align 1, !dbg !12095
  %incdec.ptr = getelementptr inbounds i8, i8* %p.0, i64 1, !dbg !12096
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !11934, metadata !DIExpression()), !dbg !12069
  %incdec.ptr82 = getelementptr inbounds i8, i8* %q.0, i64 1, !dbg !12097
  call void @llvm.dbg.value(metadata i8* %incdec.ptr82, metadata !11933, metadata !DIExpression()), !dbg !12069
  br label %for.cond77, !dbg !12098, !llvm.loop !12099

for.end:                                          ; preds = %for.cond77
  %q.0.lcssa = phi i8* [ %q.0, %for.cond77 ], !dbg !12090
  %78 = add nuw nsw i64 %indvars.iv, 662, !dbg !12101
  call void @llvm.dbg.value(metadata i8* %q.0.lcssa, metadata !11933, metadata !DIExpression()), !dbg !12069
  %79 = add nuw nsw i64 %indvars.iv, 666, !dbg !12102
  call void @llvm.dbg.value(metadata i8* %q.0.lcssa, metadata !11933, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i8* %q.0.lcssa, metadata !11933, metadata !DIExpression()), !dbg !12069
  store i8 0, i8* %q.0.lcssa, align 1, !dbg !12103
  %call84 = call i8* (i8*, ...) @concat(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.273, i64 0, i64 0), i8* nonnull %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.274, i64 0, i64 0), i8* null) #7, !dbg !12104
  %arrayidx86 = getelementptr inbounds [721 x i8*], [721 x i8*]* @built_in_names, i64 0, i64 %78, !dbg !12105
  store i8* %call84, i8** %arrayidx86, align 8, !dbg !12106
  %80 = trunc i64 %78 to i32, !dbg !12107
  call fastcc void @local_define_builtin(i8* %call84, %union.tree_node* %call74, i32 %80, i8* %call84, i32 65) #8, !dbg !12107
  %call92 = call i8* (i8*, ...) @concat(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.275, i64 0, i64 0), i8* nonnull %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.274, i64 0, i64 0), i8* null) #7, !dbg !12108
  %arrayidx94 = getelementptr inbounds [721 x i8*], [721 x i8*]* @built_in_names, i64 0, i64 %79, !dbg !12109
  store i8* %call92, i8** %arrayidx94, align 8, !dbg !12110
  %81 = trunc i64 %79 to i32, !dbg !12111
  call fastcc void @local_define_builtin(i8* %call92, %union.tree_node* %call74, i32 %81, i8* %call92, i32 65) #8, !dbg !12111
  br label %cleanup, !dbg !12112

cleanup:                                          ; preds = %for.body, %for.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #6, !dbg !12112
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12113
  call void @llvm.dbg.value(metadata i32 undef, metadata !11927, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12068
  br label %for.cond, !dbg !12114, !llvm.loop !12115

for.end106:                                       ; preds = %for.cond
  ret void, !dbg !12117
}

; Function Attrs: nounwind uwtable
define internal fastcc void @local_define_builtin(i8* %name, %union.tree_node* %type, i32 %code, i8* %library_name, i32 %ecf_flags) unnamed_addr #5 !dbg !12118 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !12122, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !12123, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i32 %code, metadata !12124, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8* %library_name, metadata !12125, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i32 %ecf_flags, metadata !12126, metadata !DIExpression()), !dbg !12128
  %call = tail call %union.tree_node* @add_builtin_function(i8* %name, %union.tree_node* %type, i32 %code, i32 3, i8* %library_name, %union.tree_node* null) #7, !dbg !12129
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12127, metadata !DIExpression()), !dbg !12128
  %and = and i32 %ecf_flags, 1, !dbg !12130
  %tobool = icmp eq i32 %and, 0, !dbg !12130
  br i1 %tobool, label %if.end, label %if.then, !dbg !12132

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12133
  %bf.load = load i64, i64* %0, align 8, !dbg !12134
  %bf.set = or i64 %bf.load, 1048576, !dbg !12134
  store i64 %bf.set, i64* %0, align 8, !dbg !12134
  br label %if.end, !dbg !12133

if.end:                                           ; preds = %entry, %if.then
  %and1 = and i32 %ecf_flags, 2, !dbg !12135
  %tobool2 = icmp eq i32 %and1, 0, !dbg !12135
  br i1 %tobool2, label %if.end7, label %if.then3, !dbg !12137

if.then3:                                         ; preds = %if.end
  %pure_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !12138
  %bf.load4 = load i32, i32* %pure_flag, align 8, !dbg !12139
  %bf.set6 = or i32 %bf.load4, 134217728, !dbg !12139
  store i32 %bf.set6, i32* %pure_flag, align 8, !dbg !12139
  br label %if.end7, !dbg !12138

if.end7:                                          ; preds = %if.end, %if.then3
  %and8 = and i32 %ecf_flags, 4, !dbg !12140
  %tobool9 = icmp eq i32 %and8, 0, !dbg !12140
  br i1 %tobool9, label %if.end15, label %if.then10, !dbg !12142

if.then10:                                        ; preds = %if.end7
  %looping_const_or_pure_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !12143
  %bf.load12 = load i32, i32* %looping_const_or_pure_flag, align 8, !dbg !12144
  %bf.set14 = or i32 %bf.load12, 268435456, !dbg !12144
  store i32 %bf.set14, i32* %looping_const_or_pure_flag, align 8, !dbg !12144
  br label %if.end15, !dbg !12143

if.end15:                                         ; preds = %if.end7, %if.then10
  %and16 = and i32 %ecf_flags, 8, !dbg !12145
  %tobool17 = icmp eq i32 %and16, 0, !dbg !12145
  br i1 %tobool17, label %if.end23, label %if.then18, !dbg !12147

if.then18:                                        ; preds = %if.end15
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12148
  %bf.load20 = load i64, i64* %1, align 8, !dbg !12149
  %bf.set22 = or i64 %bf.load20, 524288, !dbg !12149
  store i64 %bf.set22, i64* %1, align 8, !dbg !12149
  br label %if.end23, !dbg !12148

if.end23:                                         ; preds = %if.end15, %if.then18
  %and24 = and i32 %ecf_flags, 64, !dbg !12150
  %tobool25 = icmp eq i32 %and24, 0, !dbg !12150
  br i1 %tobool25, label %if.end31, label %if.then26, !dbg !12152

if.then26:                                        ; preds = %if.end23
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12153
  %bf.load28 = load i64, i64* %2, align 8, !dbg !12154
  %bf.set30 = or i64 %bf.load28, 33554432, !dbg !12154
  store i64 %bf.set30, i64* %2, align 8, !dbg !12154
  br label %if.end31, !dbg !12153

if.end31:                                         ; preds = %if.end23, %if.then26
  %and32 = and i32 %ecf_flags, 16, !dbg !12155
  %tobool33 = icmp eq i32 %and32, 0, !dbg !12155
  br i1 %tobool33, label %if.end39, label %if.then34, !dbg !12157

if.then34:                                        ; preds = %if.end31
  %malloc_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !12158
  %bf.load36 = load i32, i32* %malloc_flag, align 8, !dbg !12159
  %bf.set38 = or i32 %bf.load36, 524288, !dbg !12159
  store i32 %bf.set38, i32* %malloc_flag, align 8, !dbg !12159
  br label %if.end39, !dbg !12158

if.end39:                                         ; preds = %if.end31, %if.then34
  %idxprom = zext i32 %code to i64, !dbg !12160
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %idxprom, !dbg !12160
  store %union.tree_node* %call, %union.tree_node** %arrayidx, align 8, !dbg !12161
  %arrayidx41 = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 %idxprom, !dbg !12162
  store %union.tree_node* %call, %union.tree_node** %arrayidx41, align 8, !dbg !12163
  ret void, !dbg !12164
}

declare dso_local i8* @concat(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @reconstruct_complex_type(%union.tree_node* %type, %union.tree_node* %bottom) local_unnamed_addr #5 !dbg !12165 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !12167, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata %union.tree_node* %bottom, metadata !12168, metadata !DIExpression()), !dbg !12171
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12172
  %bf.load = load i64, i64* %0, align 8, !dbg !12172
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12174
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !12174
  br i1 %cmp, label %if.then, label %if.else, !dbg !12175

if.then:                                          ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12176
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !12176
  %call = tail call %union.tree_node* @reconstruct_complex_type(%union.tree_node* %1, %union.tree_node* %bottom) #8, !dbg !12178
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12169, metadata !DIExpression()), !dbg !12171
  %bf.load3 = load i64, i64* %0, align 8, !dbg !12179
  %bf.cast511 = and i64 %bf.load3, 65535, !dbg !12179
  %cmp6 = icmp eq i64 %bf.cast511, 14, !dbg !12179
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !12179

cond.true:                                        ; preds = %if.then
  %call7 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !12179
  %bf.load12.pre = load i64, i64* %0, align 8, !dbg !12180
  br label %cond.end, !dbg !12179

cond.false:                                       ; preds = %if.then
  %type8 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !12179
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type8, i64 0, i32 6, !dbg !12179
  %bf.load9 = load i32, i32* %mode, align 4, !dbg !12179
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !12179
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !12179
  br label %cond.end, !dbg !12179

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load12 = phi i64 [ %bf.load12.pre, %cond.true ], [ %bf.load3, %cond.false ], !dbg !12180
  %cond = phi i32 [ %call7, %cond.true ], [ %bf.clear10, %cond.false ], !dbg !12179
  %bf.lshr13 = lshr i64 %bf.load12, 26, !dbg !12180
  %2 = trunc i64 %bf.lshr13 to i8, !dbg !12180
  %bf.cast15 = and i8 %2, 1, !dbg !12180
  %call16 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %call, i32 %cond, i8 zeroext %bf.cast15) #8, !dbg !12181
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !12170, metadata !DIExpression()), !dbg !12171
  br label %if.end114, !dbg !12182

if.else:                                          ; preds = %entry
  %cmp21 = icmp eq i64 %bf.cast1, 12, !dbg !12183
  br i1 %cmp21, label %if.then23, label %if.else50, !dbg !12185

if.then23:                                        ; preds = %if.else
  %type25 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12186
  %3 = load %union.tree_node*, %union.tree_node** %type25, align 8, !dbg !12186
  %call26 = tail call %union.tree_node* @reconstruct_complex_type(%union.tree_node* %3, %union.tree_node* %bottom) #8, !dbg !12188
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !12169, metadata !DIExpression()), !dbg !12171
  %bf.load28 = load i64, i64* %0, align 8, !dbg !12189
  %bf.cast3010 = and i64 %bf.load28, 65535, !dbg !12189
  %cmp31 = icmp eq i64 %bf.cast3010, 14, !dbg !12189
  br i1 %cmp31, label %cond.true33, label %cond.false35, !dbg !12189

cond.true33:                                      ; preds = %if.then23
  %call34 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !12189
  %bf.load44.pre = load i64, i64* %0, align 8, !dbg !12190
  br label %cond.end41, !dbg !12189

cond.false35:                                     ; preds = %if.then23
  %type36 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !12189
  %mode37 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type36, i64 0, i32 6, !dbg !12189
  %bf.load38 = load i32, i32* %mode37, align 4, !dbg !12189
  %bf.lshr39 = lshr i32 %bf.load38, 16, !dbg !12189
  %bf.clear40 = and i32 %bf.lshr39, 255, !dbg !12189
  br label %cond.end41, !dbg !12189

cond.end41:                                       ; preds = %cond.false35, %cond.true33
  %bf.load44 = phi i64 [ %bf.load44.pre, %cond.true33 ], [ %bf.load28, %cond.false35 ], !dbg !12190
  %cond42 = phi i32 [ %call34, %cond.true33 ], [ %bf.clear40, %cond.false35 ], !dbg !12189
  %bf.lshr45 = lshr i64 %bf.load44, 26, !dbg !12190
  %4 = trunc i64 %bf.lshr45 to i8, !dbg !12190
  %bf.cast47 = and i8 %4, 1, !dbg !12190
  %call49 = tail call %union.tree_node* @build_reference_type_for_mode(%union.tree_node* %call26, i32 %cond42, i8 zeroext %bf.cast47) #8, !dbg !12191
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !12170, metadata !DIExpression()), !dbg !12171
  br label %if.end114, !dbg !12192

if.else50:                                        ; preds = %if.else
  %cmp55 = icmp eq i64 %bf.cast1, 15, !dbg !12193
  br i1 %cmp55, label %if.then57, label %if.else63, !dbg !12195

if.then57:                                        ; preds = %if.else50
  %type59 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12196
  %5 = load %union.tree_node*, %union.tree_node** %type59, align 8, !dbg !12196
  %call60 = tail call %union.tree_node* @reconstruct_complex_type(%union.tree_node* %5, %union.tree_node* %bottom) #8, !dbg !12198
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !12169, metadata !DIExpression()), !dbg !12171
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12199
  %6 = bitcast i32* %values to %union.tree_node**, !dbg !12199
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !12199
  %call62 = tail call %union.tree_node* @build_array_type(%union.tree_node* %call60, %union.tree_node* %7) #8, !dbg !12200
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !12170, metadata !DIExpression()), !dbg !12171
  br label %if.end114, !dbg !12201

if.else63:                                        ; preds = %if.else50
  %cmp68 = icmp eq i64 %bf.cast1, 20, !dbg !12202
  br i1 %cmp68, label %if.then70, label %if.else77, !dbg !12204

if.then70:                                        ; preds = %if.else63
  %type72 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12205
  %8 = load %union.tree_node*, %union.tree_node** %type72, align 8, !dbg !12205
  %call73 = tail call %union.tree_node* @reconstruct_complex_type(%union.tree_node* %8, %union.tree_node* %bottom) #8, !dbg !12207
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !12169, metadata !DIExpression()), !dbg !12171
  %values75 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12208
  %9 = bitcast i32* %values75 to %union.tree_node**, !dbg !12208
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !12208
  %call76 = tail call %union.tree_node* @build_function_type(%union.tree_node* %call73, %union.tree_node* %10) #8, !dbg !12209
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !12170, metadata !DIExpression()), !dbg !12171
  br label %if.end114, !dbg !12210

if.else77:                                        ; preds = %if.else63
  %cmp82 = icmp eq i64 %bf.cast1, 21, !dbg !12211
  br i1 %cmp82, label %if.then84, label %if.else96, !dbg !12213

if.then84:                                        ; preds = %if.else77
  %type86 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12214
  %11 = load %union.tree_node*, %union.tree_node** %type86, align 8, !dbg !12214
  %call87 = tail call %union.tree_node* @reconstruct_complex_type(%union.tree_node* %11, %union.tree_node* %bottom) #8, !dbg !12216
  call void @llvm.dbg.value(metadata %union.tree_node* %call87, metadata !12169, metadata !DIExpression()), !dbg !12171
  %values89 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12217
  %12 = bitcast i32* %values89 to %struct.tree_list**, !dbg !12217
  %13 = load %struct.tree_list*, %struct.tree_list** %12, align 8, !dbg !12217
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %13, i64 0, i32 2, !dbg !12217
  %14 = bitcast %union.tree_node** %value to %struct.tree_common**, !dbg !12217
  %15 = load %struct.tree_common*, %struct.tree_common** %14, align 8, !dbg !12217
  %type91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !12217
  %16 = load %union.tree_node*, %union.tree_node** %type91, align 8, !dbg !12217
  %chain = getelementptr inbounds %struct.tree_list, %struct.tree_list* %13, i64 0, i32 0, i32 1, !dbg !12218
  %17 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !12218
  %call95 = tail call %union.tree_node* @build_method_type_directly(%union.tree_node* %16, %union.tree_node* %call87, %union.tree_node* %17) #8, !dbg !12219
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !12170, metadata !DIExpression()), !dbg !12171
  br label %if.end114, !dbg !12220

if.else96:                                        ; preds = %if.else77
  %cmp101 = icmp eq i64 %bf.cast1, 5, !dbg !12221
  br i1 %cmp101, label %if.then103, label %cleanup, !dbg !12223

if.then103:                                       ; preds = %if.else96
  %type105 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12224
  %18 = load %union.tree_node*, %union.tree_node** %type105, align 8, !dbg !12224
  %call106 = tail call %union.tree_node* @reconstruct_complex_type(%union.tree_node* %18, %union.tree_node* %bottom) #8, !dbg !12226
  call void @llvm.dbg.value(metadata %union.tree_node* %call106, metadata !12169, metadata !DIExpression()), !dbg !12171
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12227
  %19 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !12227
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !12227
  %call108 = tail call %union.tree_node* @build_offset_type(%union.tree_node* %20, %union.tree_node* %call106) #8, !dbg !12228
  call void @llvm.dbg.value(metadata %union.tree_node* %call108, metadata !12170, metadata !DIExpression()), !dbg !12171
  br label %if.end114

if.end114:                                        ; preds = %cond.end41, %if.then70, %if.then103, %if.then84, %if.then57, %cond.end
  %outer.4 = phi %union.tree_node* [ %call16, %cond.end ], [ %call49, %cond.end41 ], [ %call62, %if.then57 ], [ %call76, %if.then70 ], [ %call95, %if.then84 ], [ %call108, %if.then103 ], !dbg !12229
  call void @llvm.dbg.value(metadata %union.tree_node* %outer.4, metadata !12170, metadata !DIExpression()), !dbg !12171
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12230
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !12230
  %bf.load117 = load i64, i64* %0, align 8, !dbg !12231
  %bf.lshr118 = lshr i64 %bf.load117, 20, !dbg !12231
  %23 = trunc i64 %bf.lshr118 to i32, !dbg !12231
  %bf.cast120 = and i32 %23, 1, !dbg !12231
  %24 = lshr i64 %bf.load117, 18, !dbg !12231
  %25 = trunc i64 %24 to i32, !dbg !12231
  %mul126 = and i32 %25, 2, !dbg !12231
  %or = or i32 %bf.cast120, %mul126, !dbg !12231
  %type127 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !12231
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type127, i64 0, i32 6, !dbg !12231
  %bf.load128 = load i32, i32* %restrict_flag, align 4, !dbg !12231
  %26 = lshr i32 %bf.load128, 11, !dbg !12231
  %mul131 = and i32 %26, 4, !dbg !12231
  %or132 = or i32 %or, %mul131, !dbg !12231
  %27 = lshr i64 %bf.load117, 48, !dbg !12231
  %28 = trunc i64 %27 to i32, !dbg !12231
  %shl = and i32 %28, 65280, !dbg !12231
  %or137 = or i32 %or132, %shl, !dbg !12231
  %call138 = tail call %union.tree_node* @build_type_attribute_qual_variant(%union.tree_node* %outer.4, %union.tree_node* %22, i32 %or137) #8, !dbg !12232
  br label %cleanup, !dbg !12233

cleanup:                                          ; preds = %if.else96, %if.end114
  %retval.0 = phi %union.tree_node* [ %call138, %if.end114 ], [ %bottom, %if.else96 ], !dbg !12171
  ret %union.tree_node* %retval.0, !dbg !12234
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_vector_type_for_mode(%union.tree_node* %innertype, i32 %mode) local_unnamed_addr #5 !dbg !12235 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %innertype, metadata !12239, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.value(metadata i32 %mode, metadata !12240, metadata !DIExpression()), !dbg !12242
  %idxprom = zext i32 %mode to i64, !dbg !12243
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !12243
  %0 = load i8, i8* %arrayidx, align 1, !dbg !12243
  switch i8 %0, label %sw.default [
    i8 12, label %sw.bb
    i8 17, label %sw.bb
    i8 13, label %sw.bb
    i8 14, label %sw.bb
    i8 15, label %sw.bb
    i8 16, label %sw.bb
    i8 2, label %sw.bb4
  ], !dbg !12244

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom, !dbg !12245
  %1 = load i8, i8* %arrayidx2, align 1, !dbg !12245
  %conv3 = zext i8 %1 to i32, !dbg !12245
  call void @llvm.dbg.value(metadata i32 %conv3, metadata !12241, metadata !DIExpression()), !dbg !12242
  br label %sw.epilog, !dbg !12247

sw.bb4:                                           ; preds = %entry
  %arrayidx6 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !12248
  %2 = load i8, i8* %arrayidx6, align 1, !dbg !12248
  %conv8 = zext i8 %2 to i64, !dbg !12248
  %mul = shl nuw nsw i64 %conv8, 3, !dbg !12248
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %innertype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12248
  %4 = bitcast %union.tree_node** %3 to %struct.tree_int_cst**, !dbg !12248
  %5 = load %struct.tree_int_cst*, %struct.tree_int_cst** %4, align 8, !dbg !12248
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %5, i64 0, i32 1, i32 0, !dbg !12248
  %6 = load i64, i64* %low, align 8, !dbg !12248
  %rem = urem i64 %mul, %6, !dbg !12248
  %cmp = icmp eq i64 %rem, 0, !dbg !12248
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !12248

cond.true:                                        ; preds = %sw.bb4
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 9268, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !12248
  %.pre = load i8, i8* %arrayidx6, align 1, !dbg !12249
  %.pre1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %4, align 8, !dbg !12250
  %low24.phi.trans.insert = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %.pre1, i64 0, i32 1, i32 0, !dbg !12251
  %.pre2 = load i64, i64* %low24.phi.trans.insert, align 8, !dbg !12250
  %.pre3 = zext i8 %.pre to i64, !dbg !12249
  %.pre4 = shl nuw nsw i64 %.pre3, 3, !dbg !12249
  br label %cond.end, !dbg !12248

cond.end:                                         ; preds = %sw.bb4, %cond.true
  %mul17.pre-phi = phi i64 [ %mul, %sw.bb4 ], [ %.pre4, %cond.true ], !dbg !12249
  %7 = phi i64 [ %6, %sw.bb4 ], [ %.pre2, %cond.true ], !dbg !12250
  %div = udiv i64 %mul17.pre-phi, %7, !dbg !12252
  %conv25 = trunc i64 %div to i32, !dbg !12249
  call void @llvm.dbg.value(metadata i32 %conv25, metadata !12241, metadata !DIExpression()), !dbg !12242
  br label %sw.epilog, !dbg !12253

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 9275, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !12254
  br label %sw.epilog, !dbg !12255

sw.epilog:                                        ; preds = %sw.default, %cond.end, %sw.bb
  %nunits.0 = phi i32 [ undef, %sw.default ], [ %conv25, %cond.end ], [ %conv3, %sw.bb ]
  call void @llvm.dbg.value(metadata i32 %nunits.0, metadata !12241, metadata !DIExpression()), !dbg !12242
  %call = tail call fastcc %union.tree_node* @make_vector_type(%union.tree_node* %innertype, i32 %nunits.0, i32 %mode) #8, !dbg !12256
  ret %union.tree_node* %call, !dbg !12257
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @make_vector_type(%union.tree_node* %innertype, i32 %nunits, i32 %mode) unnamed_addr #5 !dbg !12258 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %innertype, metadata !12262, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %nunits, metadata !12263, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %mode, metadata !12264, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 0, metadata !12266, metadata !DIExpression()), !dbg !12271
  %call = tail call %union.tree_node* @make_node_stat(i32 14) #8, !dbg !12272
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12265, metadata !DIExpression()), !dbg !12271
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %innertype, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !12273
  %1 = bitcast %union.tree_node** %0 to i64*, !dbg !12273
  %2 = load i64, i64* %1, align 8, !dbg !12273
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12274
  %3 = bitcast %union.tree_node** %type1 to i64*, !dbg !12275
  store i64 %2, i64* %3, align 8, !dbg !12275
  %conv = sext i32 %nunits to i64, !dbg !12276
  %call2 = tail call i32 @exact_log2(i64 %conv) #7, !dbg !12276
  %type3 = bitcast %union.tree_node* %call to %struct.tree_type*, !dbg !12276
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i64 0, i32 6, !dbg !12276
  %bf.load = load i32, i32* %precision, align 4, !dbg !12276
  %bf.value = and i32 %call2, 1023, !dbg !12276
  %bf.clear = and i32 %bf.load, -16712704, !dbg !12276
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !12276
  %bf.value7 = shl i32 %mode, 16, !dbg !12277
  %bf.shl = and i32 %bf.value7, 16711680, !dbg !12277
  %bf.set9 = or i32 %bf.set, %bf.shl, !dbg !12277
  store i32 %bf.set9, i32* %precision, align 4, !dbg !12277
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %innertype, i64 0, i32 0, i32 0, i32 1, !dbg !12278
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !12278
  %cmp = icmp eq %union.tree_node* %5, null, !dbg !12278
  br i1 %cmp, label %if.then, label %if.else, !dbg !12280

if.then:                                          ; preds = %entry
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1, !dbg !12281
  store %union.tree_node* null, %union.tree_node** %6, align 8, !dbg !12281
  br label %if.end26, !dbg !12281

if.else:                                          ; preds = %entry
  %cmp16 = icmp ne %union.tree_node* %5, %innertype, !dbg !12282
  %cmp18 = icmp ne i32 %mode, 0, !dbg !12284
  %or.cond = or i1 %cmp16, %cmp18, !dbg !12285
  br i1 %or.cond, label %if.then20, label %if.end26, !dbg !12285

if.then20:                                        ; preds = %if.else
  %call23 = tail call fastcc %union.tree_node* @make_vector_type(%union.tree_node* nonnull %5, i32 %nunits, i32 0) #8, !dbg !12286
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1, !dbg !12287
  store %union.tree_node* %call23, %union.tree_node** %7, align 8, !dbg !12288
  br label %if.end26, !dbg !12287

if.end26:                                         ; preds = %if.then20, %if.else, %if.then
  tail call void @layout_type(%union.tree_node* %call) #7, !dbg !12289
  %sub = add nsw i32 %nunits, -1, !dbg !12290
  %conv27 = sext i32 %sub to i64, !dbg !12291
  %call28 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv27) #8, !dbg !12292
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !12267, metadata !DIExpression()), !dbg !12293
  %8 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !12294
  %call31 = tail call %union.tree_node* @build_index_type(%union.tree_node* %call28) #8, !dbg !12295
  %call32 = tail call %union.tree_node* @build_array_type(%union.tree_node* %8, %union.tree_node* %call31) #8, !dbg !12296
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !12269, metadata !DIExpression()), !dbg !12293
  %call33 = tail call %union.tree_node* @make_node_stat(i32 16) #8, !dbg !12297
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !12270, metadata !DIExpression()), !dbg !12293
  %call34 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.282, i64 0, i64 0)) #7, !dbg !12298
  %call35 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 31, %union.tree_node* %call34, %union.tree_node* %call32) #8, !dbg !12298
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12299
  %9 = bitcast i32* %values to %union.tree_node**, !dbg !12299
  store %union.tree_node* %call35, %union.tree_node** %9, align 8, !dbg !12300
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12301
  store %union.tree_node* %call33, %union.tree_node** %context, align 8, !dbg !12302
  tail call void @layout_type(%union.tree_node* %call33) #7, !dbg !12303
  %values40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12304
  %10 = bitcast i32* %values40 to %union.tree_node**, !dbg !12304
  store %union.tree_node* %call33, %union.tree_node** %10, align 8, !dbg !12305
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12306
  %11 = bitcast i40* %uid to i32*, !dbg !12306
  %12 = load i32, i32* %11, align 8, !dbg !12306
  %uid43 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12307
  %13 = bitcast i40* %uid43 to i32*, !dbg !12307
  store i32 %12, i32* %13, align 8, !dbg !12308
  %call44 = tail call i32 @iterative_hash_host_wide_int(i64 14, i32 0) #8, !dbg !12309
  call void @llvm.dbg.value(metadata i32 %call44, metadata !12266, metadata !DIExpression()), !dbg !12271
  %call46 = tail call i32 @iterative_hash_host_wide_int(i64 %conv, i32 %call44) #8, !dbg !12310
  call void @llvm.dbg.value(metadata i32 %call46, metadata !12266, metadata !DIExpression()), !dbg !12271
  %conv47 = zext i32 %mode to i64, !dbg !12311
  %call48 = tail call i32 @iterative_hash_host_wide_int(i64 %conv47, i32 %call46) #8, !dbg !12312
  call void @llvm.dbg.value(metadata i32 %call48, metadata !12266, metadata !DIExpression()), !dbg !12271
  %14 = bitcast %union.tree_node** %type1 to %struct.tree_type**, !dbg !12313
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !12313
  %uid52 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 5, !dbg !12313
  %16 = bitcast i32* %uid52 to i8*, !dbg !12313
  %call53 = tail call i32 @iterative_hash(i8* nonnull %16, i64 4, i32 %call48) #7, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %call53, metadata !12266, metadata !DIExpression()), !dbg !12271
  %call54 = tail call %union.tree_node* @type_hash_canon(i32 %call53, %union.tree_node* %call) #8, !dbg !12314
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !12265, metadata !DIExpression()), !dbg !12271
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %innertype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12315
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !12315
  %tobool = icmp eq %union.tree_node* %18, null, !dbg !12315
  br i1 %tobool, label %lor.lhs.false56, label %land.lhs.true, !dbg !12317

lor.lhs.false56:                                  ; preds = %if.end26
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %innertype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12318
  %bf.load57 = load i64, i64* %19, align 8, !dbg !12318
  %bf.lshr = lshr i64 %bf.load57, 20, !dbg !12318
  %20 = trunc i64 %bf.lshr to i32, !dbg !12318
  %bf.cast = and i32 %20, 1, !dbg !12318
  %21 = lshr i64 %bf.load57, 18, !dbg !12318
  %22 = trunc i64 %21 to i32, !dbg !12318
  %mul64 = and i32 %22, 2, !dbg !12318
  %or = or i32 %bf.cast, %mul64, !dbg !12318
  %type65 = bitcast %union.tree_node* %innertype to %struct.tree_type*, !dbg !12318
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type65, i64 0, i32 6, !dbg !12318
  %bf.load66 = load i32, i32* %restrict_flag, align 4, !dbg !12318
  %23 = lshr i32 %bf.load66, 11, !dbg !12318
  %mul69 = and i32 %23, 4, !dbg !12318
  %or70 = or i32 %or, %mul69, !dbg !12318
  %24 = lshr i64 %bf.load57, 48, !dbg !12318
  %25 = trunc i64 %24 to i32, !dbg !12318
  %shl = and i32 %25, 65280, !dbg !12318
  %or75 = or i32 %or70, %shl, !dbg !12318
  %tobool76 = icmp eq i32 %or75, 0, !dbg !12318
  br i1 %tobool76, label %cleanup, label %land.lhs.true, !dbg !12319

land.lhs.true:                                    ; preds = %lor.lhs.false56, %if.end26
  %type78 = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12320
  %26 = load %union.tree_node*, %union.tree_node** %type78, align 8, !dbg !12320
  %cmp79 = icmp eq %union.tree_node* %26, %innertype, !dbg !12321
  br i1 %cmp79, label %cleanup, label %if.then81, !dbg !12322

if.then81:                                        ; preds = %land.lhs.true
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %innertype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12323
  %bf.load85 = load i64, i64* %27, align 8, !dbg !12323
  %bf.lshr86 = lshr i64 %bf.load85, 20, !dbg !12323
  %28 = trunc i64 %bf.lshr86 to i32, !dbg !12323
  %bf.cast88 = and i32 %28, 1, !dbg !12323
  %29 = lshr i64 %bf.load85, 18, !dbg !12323
  %30 = trunc i64 %29 to i32, !dbg !12323
  %mul95 = and i32 %30, 2, !dbg !12323
  %or96 = or i32 %bf.cast88, %mul95, !dbg !12323
  %type97 = bitcast %union.tree_node* %innertype to %struct.tree_type*, !dbg !12323
  %restrict_flag98 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type97, i64 0, i32 6, !dbg !12323
  %bf.load99 = load i32, i32* %restrict_flag98, align 4, !dbg !12323
  %31 = lshr i32 %bf.load99, 11, !dbg !12323
  %mul102 = and i32 %31, 4, !dbg !12323
  %or103 = or i32 %or96, %mul102, !dbg !12323
  %32 = lshr i64 %bf.load85, 48, !dbg !12323
  %33 = trunc i64 %32 to i32, !dbg !12323
  %shl109 = and i32 %33, 65280, !dbg !12323
  %or110 = or i32 %or103, %shl109, !dbg !12323
  %call111 = tail call %union.tree_node* @build_type_attribute_qual_variant(%union.tree_node* %call54, %union.tree_node* %18, i32 %or110) #8, !dbg !12324
  br label %cleanup, !dbg !12325

cleanup:                                          ; preds = %land.lhs.true, %lor.lhs.false56, %if.then81
  %retval.0 = phi %union.tree_node* [ %call111, %if.then81 ], [ %call54, %land.lhs.true ], [ %call54, %lor.lhs.false56 ], !dbg !12271
  ret %union.tree_node* %retval.0, !dbg !12326
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_vector_type(%union.tree_node* %innertype, i32 %nunits) local_unnamed_addr #5 !dbg !12327 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %innertype, metadata !12329, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 %nunits, metadata !12330, metadata !DIExpression()), !dbg !12331
  %call = tail call fastcc %union.tree_node* @make_vector_type(%union.tree_node* %innertype, i32 %nunits, i32 0) #8, !dbg !12332
  ret %union.tree_node* %call, !dbg !12333
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_opaque_vector_type(%union.tree_node* %innertype, i32 %nunits) local_unnamed_addr #5 !dbg !12334 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %innertype, metadata !12336, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.value(metadata i32 %nunits, metadata !12337, metadata !DIExpression()), !dbg !12339
  %call = tail call %union.tree_node* @build_distinct_type_copy(%union.tree_node* %innertype) #8, !dbg !12340
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12336, metadata !DIExpression()), !dbg !12339
  %call1 = tail call fastcc %union.tree_node* @make_vector_type(%union.tree_node* %call, i32 %nunits, i32 0) #8, !dbg !12341
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !12338, metadata !DIExpression()), !dbg !12339
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12342
  %bf.load = load i64, i64* %0, align 8, !dbg !12343
  %bf.set = or i64 %bf.load, 4294967296, !dbg !12343
  store i64 %bf.set, i64* %0, align 8, !dbg !12343
  ret %union.tree_node* %call1, !dbg !12344
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @initializer_zerop(%union.tree_node* %init) local_unnamed_addr #5 !dbg !12345 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %init, metadata !12347, metadata !DIExpression()), !dbg !12352
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %init) #8, !dbg !12353
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12347, metadata !DIExpression()), !dbg !12352
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12354
  %bf.load = load i64, i64* %0, align 8, !dbg !12354
  %1 = trunc i64 %bf.load to i16, !dbg !12354
  switch i16 %1, label %cleanup67 [
    i16 23, label %sw.bb
    i16 24, label %sw.bb2
    i16 25, label %sw.bb7
    i16 26, label %sw.bb10
    i16 27, label %sw.bb29
    i16 51, label %for.cond34.preheader
  ], !dbg !12355

for.cond34.preheader:                             ; preds = %entry
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12356
  %2 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !12356
  br label %for.cond34, !dbg !12359

sw.bb:                                            ; preds = %entry
  %call1 = tail call i32 @integer_zerop(%union.tree_node* %call) #8, !dbg !12360
  %conv = trunc i32 %call1 to i8, !dbg !12360
  br label %cleanup67, !dbg !12361

sw.bb2:                                           ; preds = %entry
  %call3 = tail call i32 @real_zerop(%union.tree_node* %call) #8, !dbg !12362
  %tobool = icmp eq i32 %call3, 0, !dbg !12362
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !12363

land.rhs:                                         ; preds = %sw.bb2
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12364
  %3 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !12364
  %4 = load %struct.real_value*, %struct.real_value** %3, align 8, !dbg !12364
  %call4 = tail call zeroext i8 @real_isnegzero(%struct.real_value* %4) #7, !dbg !12364
  %tobool5 = icmp eq i8 %call4, 0, !dbg !12365
  %phitmp1 = zext i1 %tobool5 to i8
  br label %land.end

land.end:                                         ; preds = %sw.bb2, %land.rhs
  %5 = phi i8 [ 0, %sw.bb2 ], [ %phitmp1, %land.rhs ]
  br label %cleanup67, !dbg !12366

sw.bb7:                                           ; preds = %entry
  %call8 = tail call i32 @fixed_zerop(%union.tree_node* %call) #8, !dbg !12367
  %conv9 = trunc i32 %call8 to i8, !dbg !12367
  br label %cleanup67, !dbg !12368

sw.bb10:                                          ; preds = %entry
  %call11 = tail call i32 @integer_zerop(%union.tree_node* %call) #8, !dbg !12369
  %tobool12 = icmp eq i32 %call11, 0, !dbg !12369
  br i1 %tobool12, label %lor.rhs, label %lor.end, !dbg !12370

lor.rhs:                                          ; preds = %sw.bb10
  %call13 = tail call i32 @real_zerop(%union.tree_node* %call) #8, !dbg !12371
  %tobool14 = icmp eq i32 %call13, 0, !dbg !12371
  br i1 %tobool14, label %lor.end, label %land.lhs.true, !dbg !12372

land.lhs.true:                                    ; preds = %lor.rhs
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12373
  %6 = bitcast i32* %real to %struct.tree_real_cst**, !dbg !12373
  %7 = load %struct.tree_real_cst*, %struct.tree_real_cst** %6, align 8, !dbg !12373
  %real_cst_ptr16 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %7, i64 0, i32 1, !dbg !12373
  %8 = load %struct.real_value*, %struct.real_value** %real_cst_ptr16, align 8, !dbg !12373
  %call17 = tail call zeroext i8 @real_isnegzero(%struct.real_value* %8) #7, !dbg !12373
  %tobool18 = icmp eq i8 %call17, 0, !dbg !12373
  br i1 %tobool18, label %land.rhs19, label %lor.end, !dbg !12374

land.rhs19:                                       ; preds = %land.lhs.true
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12375
  %10 = bitcast %union.tree_node** %9 to %struct.tree_real_cst**, !dbg !12375
  %11 = load %struct.tree_real_cst*, %struct.tree_real_cst** %10, align 8, !dbg !12375
  %real_cst_ptr22 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %11, i64 0, i32 1, !dbg !12375
  %12 = load %struct.real_value*, %struct.real_value** %real_cst_ptr22, align 8, !dbg !12375
  %call23 = tail call zeroext i8 @real_isnegzero(%struct.real_value* %12) #7, !dbg !12375
  %tobool24 = icmp eq i8 %call23, 0, !dbg !12376
  %phitmp = zext i1 %tobool24 to i8
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %lor.rhs, %sw.bb10, %land.rhs19
  %13 = phi i8 [ 1, %sw.bb10 ], [ 0, %land.lhs.true ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs19 ]
  br label %cleanup67, !dbg !12377

sw.bb29:                                          ; preds = %entry
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12378
  %14 = bitcast i32* %elements to %union.tree_node**, !dbg !12378
  br label %for.cond, !dbg !12380

for.cond:                                         ; preds = %for.inc, %sw.bb29
  %elt.0.in = phi %union.tree_node** [ %14, %sw.bb29 ], [ %chain, %for.inc ]
  %elt.0 = load %union.tree_node*, %union.tree_node** %elt.0.in, align 8, !dbg !12381
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.0, metadata !12348, metadata !DIExpression()), !dbg !12352
  %tobool30 = icmp eq %union.tree_node* %elt.0, null, !dbg !12382
  br i1 %tobool30, label %cleanup67.loopexit, label %for.body, !dbg !12382

for.body:                                         ; preds = %for.cond
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12383
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !12383
  %call31 = tail call zeroext i8 @initializer_zerop(%union.tree_node* %16) #8, !dbg !12386
  %tobool32 = icmp eq i8 %call31, 0, !dbg !12386
  br i1 %tobool32, label %cleanup67.loopexit, label %for.inc, !dbg !12387

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12388
  br label %for.cond, !dbg !12389, !llvm.loop !12390

for.cond34:                                       ; preds = %for.cond34.preheader, %for.inc65
  %idx.0 = phi i64 [ %inc, %for.inc65 ], [ 0, %for.cond34.preheader ], !dbg !12392
  %elt.1 = phi %union.tree_node* [ %elt.2, %for.inc65 ], [ undef, %for.cond34.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.1, metadata !12348, metadata !DIExpression()), !dbg !12352
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !12349, metadata !DIExpression()), !dbg !12393
  %17 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !12394
  %tobool35 = icmp eq %struct.VEC_constructor_elt_gc* %17, null, !dbg !12394
  br i1 %tobool35, label %cond.end, label %cond.true, !dbg !12394

cond.true:                                        ; preds = %for.cond34
  %base38 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %17, i64 0, i32 0, !dbg !12394
  br label %cond.end, !dbg !12394

cond.end:                                         ; preds = %for.cond34, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base38, %cond.true ], [ null, %for.cond34 ], !dbg !12394
  %call39 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !12394
  %conv40 = zext i32 %call39 to i64, !dbg !12394
  %cmp = icmp ult i64 %idx.0, %conv40, !dbg !12394
  br i1 %cmp, label %cond.false43, label %cond.end57, !dbg !12394

cond.false43:                                     ; preds = %cond.end
  %18 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !12394
  %tobool46 = icmp eq %struct.VEC_constructor_elt_gc* %18, null, !dbg !12394
  br i1 %tobool46, label %cond.end52, label %cond.true47, !dbg !12394

cond.true47:                                      ; preds = %cond.false43
  %base50 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %18, i64 0, i32 0, !dbg !12394
  br label %cond.end52, !dbg !12394

cond.end52:                                       ; preds = %cond.false43, %cond.true47
  %cond53 = phi %struct.VEC_constructor_elt_base* [ %base50, %cond.true47 ], [ null, %cond.false43 ], !dbg !12394
  %conv54 = trunc i64 %idx.0 to i32, !dbg !12394
  %call55 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond53, i32 %conv54) #8, !dbg !12394
  %value56 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call55, i64 0, i32 1, !dbg !12394
  %19 = load %union.tree_node*, %union.tree_node** %value56, align 8, !dbg !12394
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !12348, metadata !DIExpression()), !dbg !12352
  br label %cond.end57, !dbg !12394

cond.end57:                                       ; preds = %cond.end, %cond.end52
  %elt.2 = phi %union.tree_node* [ %19, %cond.end52 ], [ %elt.1, %cond.end ]
  %cond58 = phi i1 [ true, %cond.end52 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.2, metadata !12348, metadata !DIExpression()), !dbg !12352
  br i1 %cond58, label %for.body60, label %cleanup67.loopexit2, !dbg !12359

for.body60:                                       ; preds = %cond.end57
  %call61 = tail call zeroext i8 @initializer_zerop(%union.tree_node* %elt.2) #8, !dbg !12395
  %tobool62 = icmp eq i8 %call61, 0, !dbg !12395
  br i1 %tobool62, label %cleanup67.loopexit2, label %for.inc65, !dbg !12397

for.inc65:                                        ; preds = %for.body60
  %inc = add i64 %idx.0, 1, !dbg !12394
  call void @llvm.dbg.value(metadata i64 %inc, metadata !12349, metadata !DIExpression()), !dbg !12393
  br label %for.cond34, !dbg !12394, !llvm.loop !12398

cleanup67.loopexit:                               ; preds = %for.cond, %for.body
  %retval.1.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup67, !dbg !12400

cleanup67.loopexit2:                              ; preds = %cond.end57, %for.body60
  %retval.1.ph3 = phi i8 [ 1, %cond.end57 ], [ 0, %for.body60 ]
  br label %cleanup67, !dbg !12400

cleanup67:                                        ; preds = %cleanup67.loopexit2, %cleanup67.loopexit, %entry, %lor.end, %sw.bb7, %land.end, %sw.bb
  %retval.1 = phi i8 [ %13, %lor.end ], [ %conv9, %sw.bb7 ], [ %5, %land.end ], [ %conv, %sw.bb ], [ 0, %entry ], [ %retval.1.ph, %cleanup67.loopexit ], [ %retval.1.ph3, %cleanup67.loopexit2 ], !dbg !12401
  ret i8 %retval.1, !dbg !12400
}

declare dso_local zeroext i8 @real_isnegzero(%struct.real_value*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_empty_stmt(i32 %loc) local_unnamed_addr #5 !dbg !12402 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12406, metadata !DIExpression()), !dbg !12408
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12409
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !12409
  %call = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %0, %union.tree_node* %1) #8, !dbg !12409
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12407, metadata !DIExpression()), !dbg !12408
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12410
  store i32 %loc, i32* %2, align 8, !dbg !12410
  ret %union.tree_node* %call, !dbg !12411
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_omp_clause(i32 %loc, i32 %code) local_unnamed_addr #5 !dbg !12412 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12416, metadata !DIExpression()), !dbg !12421
  call void @llvm.dbg.value(metadata i32 %code, metadata !12417, metadata !DIExpression()), !dbg !12421
  %idxprom = zext i32 %code to i64, !dbg !12422
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* @omp_clause_num_ops, i64 0, i64 %idxprom, !dbg !12422
  %0 = load i8, i8* %arrayidx, align 1, !dbg !12422
  %conv = zext i8 %0 to i64, !dbg !12422
  call void @llvm.dbg.value(metadata i8 %0, metadata !12420, metadata !DIExpression()), !dbg !12421
  %sub = shl nuw nsw i64 %conv, 3, !dbg !12423
  %conv2 = add nuw nsw i64 %sub, 56, !dbg !12424
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !12419, metadata !DIExpression()), !dbg !12421
  %call = tail call i8* @ggc_alloc_stat(i64 %conv2) #7, !dbg !12425
  %1 = bitcast i8* %call to %union.tree_node*, !dbg !12425
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !12418, metadata !DIExpression()), !dbg !12421
  %call5 = tail call i8* @memset(i8* %call, i32 0, i64 %conv2) #7, !dbg !12426
  %2 = bitcast i8* %call to i64*, !dbg !12427
  %bf.load = load i64, i64* %2, align 8, !dbg !12427
  %bf.clear = and i64 %bf.load, -65536, !dbg !12427
  %bf.set = or i64 %bf.clear, 163, !dbg !12427
  store i64 %bf.set, i64* %2, align 8, !dbg !12427
  %code6 = getelementptr inbounds i8, i8* %call, i64 28, !dbg !12428
  %3 = bitcast i8* %code6 to i32*, !dbg !12428
  store i32 %code, i32* %3, align 4, !dbg !12428
  %locus = getelementptr inbounds i8, i8* %call, i64 24, !dbg !12429
  %4 = bitcast i8* %locus to i32*, !dbg !12429
  store i32 %loc, i32* %4, align 8, !dbg !12430
  ret %union.tree_node* %1, !dbg !12431
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_call_list(%union.tree_node* %return_type, %union.tree_node* %fn, %union.tree_node* %arglist) local_unnamed_addr #5 !dbg !12432 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %return_type, metadata !12434, metadata !DIExpression()), !dbg !12439
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !12435, metadata !DIExpression()), !dbg !12439
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist, metadata !12436, metadata !DIExpression()), !dbg !12439
  %call = tail call i32 @list_length(%union.tree_node* %arglist) #8, !dbg !12440
  %add = add nsw i32 %call, 3, !dbg !12440
  %call1 = tail call %union.tree_node* @build_vl_exp_stat(i32 59, i32 %add) #8, !dbg !12440
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !12437, metadata !DIExpression()), !dbg !12439
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12441
  store %union.tree_node* %return_type, %union.tree_node** %type, align 8, !dbg !12442
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12443
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12443
  store %union.tree_node* %fn, %union.tree_node** %arrayidx, align 8, !dbg !12444
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !12445
  store %union.tree_node* null, %union.tree_node** %arrayidx4, align 8, !dbg !12446
  call void @llvm.dbg.value(metadata i32 0, metadata !12438, metadata !DIExpression()), !dbg !12439
  br label %for.cond, !dbg !12447

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arglist.addr.0 = phi %union.tree_node* [ %5, %for.body ], [ %arglist, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12438, metadata !DIExpression()), !dbg !12439
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.addr.0, metadata !12436, metadata !DIExpression()), !dbg !12439
  %tobool = icmp eq %union.tree_node* %arglist.addr.0, null, !dbg !12449
  br i1 %tobool, label %for.end, label %for.body, !dbg !12449

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arglist.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12450
  %1 = bitcast %union.tree_node** %0 to i64*, !dbg !12450
  %2 = load i64, i64* %1, align 8, !dbg !12450
  %3 = add nuw nsw i64 %indvars.iv, 3, !dbg !12452
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %3, !dbg !12452
  %4 = bitcast %union.tree_node** %arrayidx8 to i64*, !dbg !12453
  store i64 %2, i64* %4, align 8, !dbg !12453
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arglist.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12454
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !12454
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !12436, metadata !DIExpression()), !dbg !12439
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !12455
  call void @llvm.dbg.value(metadata i32 undef, metadata !12438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12439
  br label %for.cond, !dbg !12456, !llvm.loop !12457

for.end:                                          ; preds = %for.cond
  tail call fastcc void @process_call_operands(%union.tree_node* %call1) #8, !dbg !12459
  ret %union.tree_node* %call1, !dbg !12460
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_call_nary(%union.tree_node* %return_type, %union.tree_node* %fn, i32 %nargs, ...) local_unnamed_addr #5 !dbg !12461 {
entry:
  %args = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %return_type, metadata !12465, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !12466, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !12467, metadata !DIExpression()), !dbg !12470
  %0 = bitcast [1 x %struct.__va_list_tag]* %args to i8*, !dbg !12471
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !12471
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !12469, metadata !DIExpression()), !dbg !12472
  call void @llvm.va_start(i8* %0), !dbg !12473
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !12474
  %call = call %union.tree_node* @build_call_valist(%union.tree_node* %return_type, %union.tree_node* %fn, i32 %nargs, %struct.__va_list_tag* nonnull %arraydecay2) #8, !dbg !12475
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12468, metadata !DIExpression()), !dbg !12470
  call void @llvm.va_end(i8* nonnull %0), !dbg !12476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !12477
  ret %union.tree_node* %call, !dbg !12478
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_call_valist(%union.tree_node* %return_type, %union.tree_node* %fn, i32 %nargs, %struct.__va_list_tag* %args) local_unnamed_addr #5 !dbg !12479 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %return_type, metadata !12483, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !12484, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !12485, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %args, metadata !12486, metadata !DIExpression()), !dbg !12489
  %add = add nsw i32 %nargs, 3, !dbg !12490
  %call = tail call %union.tree_node* @build_vl_exp_stat(i32 59, i32 %add) #8, !dbg !12490
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12487, metadata !DIExpression()), !dbg !12489
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12491
  store %union.tree_node* %return_type, %union.tree_node** %type, align 8, !dbg !12492
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12493
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12493
  store %union.tree_node* %fn, %union.tree_node** %arrayidx, align 8, !dbg !12494
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !12495
  store %union.tree_node* null, %union.tree_node** %arrayidx3, align 8, !dbg !12496
  call void @llvm.dbg.value(metadata i32 0, metadata !12488, metadata !DIExpression()), !dbg !12489
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %args, i64 0, i32 0, !dbg !12497
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %args, i64 0, i32 2, !dbg !12497
  %0 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %args, i64 0, i32 3, !dbg !12497
  %1 = sext i32 %nargs to i64, !dbg !12500
  br label %for.cond, !dbg !12500

for.cond:                                         ; preds = %vaarg.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %vaarg.end ], [ 0, %entry ], !dbg !12501
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12488, metadata !DIExpression()), !dbg !12489
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !12502
  br i1 %cmp, label %for.body, label %for.end, !dbg !12503

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !12504
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !12504
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !12504

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %0, align 8, !dbg !12504
  %2 = sext i32 %gp_offset to i64, !dbg !12504
  %3 = getelementptr i8, i8* %reg_save_area, i64 %2, !dbg !12504
  %4 = add i32 %gp_offset, 8, !dbg !12504
  store i32 %4, i32* %gp_offset_p, align 8, !dbg !12504
  br label %vaarg.end, !dbg !12504

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !12504
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !12504
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !12504
  br label %vaarg.end, !dbg !12504

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %3, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %5 = bitcast i8* %vaarg.addr.in to i64*, !dbg !12504
  %6 = load i64, i64* %5, align 8, !dbg !12504
  %7 = add nuw nsw i64 %indvars.iv, 3, !dbg !12505
  %arrayidx7 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %7, !dbg !12505
  %8 = bitcast %union.tree_node** %arrayidx7 to i64*, !dbg !12506
  store i64 %6, i64* %8, align 8, !dbg !12506
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12507
  call void @llvm.dbg.value(metadata i32 undef, metadata !12488, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12489
  br label %for.cond, !dbg !12508, !llvm.loop !12509

for.end:                                          ; preds = %for.cond
  tail call fastcc void @process_call_operands(%union.tree_node* %call) #8, !dbg !12511
  ret %union.tree_node* %call, !dbg !12512
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_call_array_loc(i32 %loc, %union.tree_node* %return_type, %union.tree_node* %fn, i32 %nargs, %union.tree_node** %args) local_unnamed_addr #5 !dbg !12513 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12519, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata %union.tree_node* %return_type, metadata !12520, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !12521, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !12522, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata %union.tree_node** %args, metadata !12523, metadata !DIExpression()), !dbg !12526
  %add = add nsw i32 %nargs, 3, !dbg !12527
  %call = tail call %union.tree_node* @build_vl_exp_stat(i32 59, i32 %add) #8, !dbg !12527
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12524, metadata !DIExpression()), !dbg !12526
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12528
  store %union.tree_node* %return_type, %union.tree_node** %type, align 8, !dbg !12529
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12530
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12530
  store %union.tree_node* %fn, %union.tree_node** %arrayidx, align 8, !dbg !12531
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !12532
  store %union.tree_node* null, %union.tree_node** %arrayidx3, align 8, !dbg !12533
  call void @llvm.dbg.value(metadata i32 0, metadata !12525, metadata !DIExpression()), !dbg !12526
  %0 = sext i32 %nargs to i64, !dbg !12534
  br label %for.cond, !dbg !12534

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !12536
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12525, metadata !DIExpression()), !dbg !12526
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !12537
  br i1 %cmp, label %for.body, label %for.end, !dbg !12539

for.body:                                         ; preds = %for.cond
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 %indvars.iv, !dbg !12540
  %1 = bitcast %union.tree_node** %arrayidx4 to i64*, !dbg !12540
  %2 = load i64, i64* %1, align 8, !dbg !12540
  %3 = add nuw nsw i64 %indvars.iv, 3, !dbg !12541
  %arrayidx9 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %3, !dbg !12541
  %4 = bitcast %union.tree_node** %arrayidx9 to i64*, !dbg !12542
  store i64 %2, i64* %4, align 8, !dbg !12542
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !12543
  call void @llvm.dbg.value(metadata i32 undef, metadata !12525, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12526
  br label %for.cond, !dbg !12544, !llvm.loop !12545

for.end:                                          ; preds = %for.cond
  tail call fastcc void @process_call_operands(%union.tree_node* %call) #8, !dbg !12547
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12548
  store i32 %loc, i32* %5, align 8, !dbg !12548
  ret %union.tree_node* %call, !dbg !12549
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_call_vec(%union.tree_node* %return_type, %union.tree_node* %fn, %struct.VEC_tree_gc* %args) local_unnamed_addr #5 !dbg !12550 {
entry:
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %return_type, metadata !12554, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !12555, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %args, metadata !12556, metadata !DIExpression()), !dbg !12560
  %0 = bitcast %union.tree_node** %t to i8*, !dbg !12561
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !12561
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %args, i64 0, i32 0, !dbg !12562
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !12562
  %add = add i32 %call, 3, !dbg !12562
  %call1 = tail call %union.tree_node* @build_vl_exp_stat(i32 59, i32 %add) #8, !dbg !12562
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !12557, metadata !DIExpression()), !dbg !12560
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12563
  store %union.tree_node* %return_type, %union.tree_node** %type, align 8, !dbg !12564
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12565
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12565
  store %union.tree_node* %fn, %union.tree_node** %arrayidx, align 8, !dbg !12566
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !12567
  store %union.tree_node* null, %union.tree_node** %arrayidx4, align 8, !dbg !12568
  call void @llvm.dbg.value(metadata i32 0, metadata !12559, metadata !DIExpression()), !dbg !12560
  %1 = bitcast %union.tree_node** %t to i64*, !dbg !12569
  br label %for.cond, !dbg !12572

for.cond:                                         ; preds = %for.body, %entry
  %ix.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !12573
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !12559, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !12558, metadata !DIExpression(DW_OP_deref)), !dbg !12560
  %call11 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %ix.0, %union.tree_node** nonnull %t) #8, !dbg !12574
  %tobool12 = icmp eq i32 %call11, 0, !dbg !12575
  br i1 %tobool12, label %for.end, label %for.body, !dbg !12575

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %1, align 8, !dbg !12576
  %add15 = add i32 %ix.0, 3, !dbg !12577
  %idxprom = zext i32 %add15 to i64, !dbg !12577
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %idxprom, !dbg !12577
  %3 = bitcast %union.tree_node** %arrayidx16 to i64*, !dbg !12578
  store i64 %2, i64* %3, align 8, !dbg !12578
  %inc = add i32 %ix.0, 1, !dbg !12579
  call void @llvm.dbg.value(metadata i32 %inc, metadata !12559, metadata !DIExpression()), !dbg !12560
  br label %for.cond, !dbg !12580, !llvm.loop !12581

for.end:                                          ; preds = %for.cond
  call fastcc void @process_call_operands(%union.tree_node* %call1) #8, !dbg !12583
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !12584
  ret %union.tree_node* %call1, !dbg !12585
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @in_array_bounds_p(%union.tree_node* %ref) local_unnamed_addr #5 !dbg !12586 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !12588, metadata !DIExpression()), !dbg !12592
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12593
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12593
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !12593
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12589, metadata !DIExpression()), !dbg !12592
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12594
  %bf.load = load i64, i64* %1, align 8, !dbg !12594
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12596
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !12596
  br i1 %cmp, label %if.end, label %cleanup, !dbg !12597

if.end:                                           ; preds = %entry
  %call = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %ref) #7, !dbg !12598
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12590, metadata !DIExpression()), !dbg !12592
  %call1 = tail call %union.tree_node* @array_ref_up_bound(%union.tree_node* %ref) #7, !dbg !12599
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !12591, metadata !DIExpression()), !dbg !12592
  %tobool = icmp ne %union.tree_node* %call, null, !dbg !12600
  %tobool2 = icmp ne %union.tree_node* %call1, null, !dbg !12602
  %or.cond = and i1 %tobool, %tobool2, !dbg !12603
  br i1 %or.cond, label %lor.lhs.false3, label %cleanup, !dbg !12603

lor.lhs.false3:                                   ; preds = %if.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12604
  %bf.load5 = load i64, i64* %2, align 8, !dbg !12604
  %bf.cast72 = and i64 %bf.load5, 65535, !dbg !12605
  %cmp8 = icmp eq i64 %bf.cast72, 23, !dbg !12605
  br i1 %cmp8, label %lor.lhs.false9, label %cleanup, !dbg !12606

lor.lhs.false9:                                   ; preds = %lor.lhs.false3
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12607
  %bf.load11 = load i64, i64* %3, align 8, !dbg !12607
  %bf.cast133 = and i64 %bf.load11, 65535, !dbg !12608
  %cmp14 = icmp eq i64 %bf.cast133, 23, !dbg !12608
  br i1 %cmp14, label %if.end16, label %cleanup, !dbg !12609

if.end16:                                         ; preds = %lor.lhs.false9
  %call17 = tail call i32 @tree_int_cst_lt(%union.tree_node* %0, %union.tree_node* nonnull %call) #8, !dbg !12610
  %tobool18 = icmp eq i32 %call17, 0, !dbg !12610
  br i1 %tobool18, label %lor.lhs.false19, label %cleanup, !dbg !12612

lor.lhs.false19:                                  ; preds = %if.end16
  %call20 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %call1, %union.tree_node* %0) #8, !dbg !12613
  %tobool21 = icmp eq i32 %call20, 0, !dbg !12613
  %spec.select = zext i1 %tobool21 to i8, !dbg !12614
  ret i8 %spec.select, !dbg !12614

cleanup:                                          ; preds = %if.end16, %lor.lhs.false9, %lor.lhs.false3, %entry, %if.end
  ret i8 0, !dbg !12615
}

declare dso_local %union.tree_node* @array_ref_low_bound(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @array_ref_up_bound(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @range_in_array_bounds_p(%union.tree_node* %ref) local_unnamed_addr #5 !dbg !12616 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !12618, metadata !DIExpression()), !dbg !12624
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12625
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !12625
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !12625
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !12625
  %2 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !12625
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !12619, metadata !DIExpression()), !dbg !12624
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12626
  %3 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !12626
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !12626
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !12620, metadata !DIExpression()), !dbg !12624
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12627
  %5 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !12627
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !12627
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !12621, metadata !DIExpression()), !dbg !12624
  %tobool = icmp ne %union.tree_node* %4, null, !dbg !12628
  %tobool4 = icmp ne %union.tree_node* %6, null, !dbg !12630
  %or.cond = and i1 %tobool, %tobool4, !dbg !12631
  br i1 %or.cond, label %lor.lhs.false5, label %cleanup, !dbg !12631

lor.lhs.false5:                                   ; preds = %entry
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12632
  %bf.load = load i64, i64* %7, align 8, !dbg !12632
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !12633
  %cmp = icmp eq i64 %bf.cast2, 23, !dbg !12633
  br i1 %cmp, label %lor.lhs.false6, label %cleanup, !dbg !12634

lor.lhs.false6:                                   ; preds = %lor.lhs.false5
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12635
  %bf.load8 = load i64, i64* %8, align 8, !dbg !12635
  %bf.cast103 = and i64 %bf.load8, 65535, !dbg !12636
  %cmp11 = icmp eq i64 %bf.cast103, 23, !dbg !12636
  br i1 %cmp11, label %if.end, label %cleanup, !dbg !12637

if.end:                                           ; preds = %lor.lhs.false6
  %call = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %ref) #7, !dbg !12638
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12622, metadata !DIExpression()), !dbg !12624
  %call12 = tail call %union.tree_node* @array_ref_up_bound(%union.tree_node* %ref) #7, !dbg !12639
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !12623, metadata !DIExpression()), !dbg !12624
  %tobool13 = icmp ne %union.tree_node* %call, null, !dbg !12640
  %tobool15 = icmp ne %union.tree_node* %call12, null, !dbg !12642
  %or.cond1 = and i1 %tobool13, %tobool15, !dbg !12643
  br i1 %or.cond1, label %lor.lhs.false16, label %cleanup, !dbg !12643

lor.lhs.false16:                                  ; preds = %if.end
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12644
  %bf.load18 = load i64, i64* %9, align 8, !dbg !12644
  %bf.cast204 = and i64 %bf.load18, 65535, !dbg !12645
  %cmp21 = icmp eq i64 %bf.cast204, 23, !dbg !12645
  br i1 %cmp21, label %lor.lhs.false22, label %cleanup, !dbg !12646

lor.lhs.false22:                                  ; preds = %lor.lhs.false16
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12647
  %bf.load24 = load i64, i64* %10, align 8, !dbg !12647
  %bf.cast265 = and i64 %bf.load24, 65535, !dbg !12648
  %cmp27 = icmp eq i64 %bf.cast265, 23, !dbg !12648
  br i1 %cmp27, label %if.end29, label %cleanup, !dbg !12649

if.end29:                                         ; preds = %lor.lhs.false22
  %call30 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %4, %union.tree_node* nonnull %call) #8, !dbg !12650
  %tobool31 = icmp eq i32 %call30, 0, !dbg !12650
  br i1 %tobool31, label %lor.lhs.false32, label %cleanup, !dbg !12652

lor.lhs.false32:                                  ; preds = %if.end29
  %call33 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %call12, %union.tree_node* nonnull %6) #8, !dbg !12653
  %tobool34 = icmp eq i32 %call33, 0, !dbg !12653
  %spec.select = zext i1 %tobool34 to i8, !dbg !12654
  ret i8 %spec.select, !dbg !12654

cleanup:                                          ; preds = %if.end29, %lor.lhs.false22, %lor.lhs.false16, %lor.lhs.false6, %lor.lhs.false5, %if.end, %entry
  ret i8 0, !dbg !12655
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @needs_to_live_in_memory(%union.tree_node* %t) local_unnamed_addr #5 !dbg !12656 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !12658, metadata !DIExpression()), !dbg !12659
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12660
  %bf.load = load i64, i64* %0, align 8, !dbg !12660
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12662
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !12662
  br i1 %cmp, label %if.then, label %if.end, !dbg !12663

if.then:                                          ; preds = %entry
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12664
  %1 = bitcast i32* %var to %union.tree_node**, !dbg !12664
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !12664
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !12658, metadata !DIExpression()), !dbg !12659
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12659
  %bf.load2.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !12665
  br label %if.end, !dbg !12666

if.end:                                           ; preds = %if.then, %entry
  %bf.load2 = phi i64 [ %bf.load2.pre, %if.then ], [ %bf.load, %entry ], !dbg !12665
  %t.addr.0 = phi %union.tree_node* [ %2, %if.then ], [ %t, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !12658, metadata !DIExpression()), !dbg !12659
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12665
  %bf.cast42 = and i64 %bf.load2, 262144, !dbg !12665
  %tobool = icmp eq i64 %bf.cast42, 0, !dbg !12665
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !12667

lor.lhs.false:                                    ; preds = %if.end
  %call = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %t.addr.0) #8, !dbg !12668
  %tobool5 = icmp eq i8 %call, 0, !dbg !12668
  br i1 %tobool5, label %lor.rhs, label %lor.end, !dbg !12669

lor.rhs:                                          ; preds = %lor.lhs.false
  %bf.load7 = load i64, i64* %3, align 8, !dbg !12670
  %bf.cast93 = and i64 %bf.load7, 65535, !dbg !12671
  %cmp10 = icmp eq i64 %bf.cast93, 36, !dbg !12671
  br i1 %cmp10, label %land.rhs, label %lor.end, !dbg !12672

land.rhs:                                         ; preds = %lor.rhs
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !12673
  %call12 = tail call i32 @aggregate_value_p(%union.tree_node* %t.addr.0, %union.tree_node* %4) #7, !dbg !12674
  %tobool13 = icmp ne i32 %call12, 0, !dbg !12672
  %phitmp = zext i1 %tobool13 to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false, %if.end, %lor.rhs, %land.rhs
  %5 = phi i8 [ 1, %lor.lhs.false ], [ 1, %if.end ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %5, !dbg !12675
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_global_var(%union.tree_node* %t) unnamed_addr #0 !dbg !12676 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !12679, metadata !DIExpression()), !dbg !12680
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12681
  %bf.load = load i64, i64* %0, align 8, !dbg !12681
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !12681
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !12681
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !12682

lor.rhs:                                          ; preds = %entry
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12683
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !12683
  %bf.load1 = load i64, i64* %1, align 8, !dbg !12683
  %bf.cast42 = lshr i64 %bf.load1, 25, !dbg !12682
  %2 = trunc i64 %bf.cast42 to i8, !dbg !12682
  %3 = and i8 %2, 1, !dbg !12682
  br label %lor.end, !dbg !12682

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i8 [ 1, %entry ], [ %3, %lor.rhs ]
  ret i8 %4, !dbg !12684
}

declare dso_local i32 @aggregate_value_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @fields_compatible_p(%union.tree_node* %f1, %union.tree_node* %f2) local_unnamed_addr #5 !dbg !12685 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %f1, metadata !12687, metadata !DIExpression()), !dbg !12689
  call void @llvm.dbg.value(metadata %union.tree_node* %f2, metadata !12688, metadata !DIExpression()), !dbg !12689
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %f1, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !12690
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !12690
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %f2, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !12692
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !12692
  %call = tail call i32 @operand_equal_p(%union.tree_node* %1, %union.tree_node* %3, i32 1) #7, !dbg !12693
  %tobool = icmp eq i32 %call, 0, !dbg !12693
  br i1 %tobool, label %return, label %if.end, !dbg !12694

if.end:                                           ; preds = %entry
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %f1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12695
  %4 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !12695
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !12695
  %offset5 = getelementptr inbounds %union.tree_node, %union.tree_node* %f2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12697
  %6 = bitcast %struct.rtx_def** %offset5 to %union.tree_node**, !dbg !12697
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !12697
  %call6 = tail call i32 @operand_equal_p(%union.tree_node* %5, %union.tree_node* %7, i32 1) #7, !dbg !12698
  %tobool7 = icmp eq i32 %call6, 0, !dbg !12698
  br i1 %tobool7, label %return, label %if.end9, !dbg !12699

if.end9:                                          ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %f1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12700
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !12700
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %f2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12702
  %9 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !12702
  %call12 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %8, %union.tree_node* %9) #7, !dbg !12703
  %tobool13 = icmp ne i8 %call12, 0, !dbg !12703
  %. = zext i1 %tobool13 to i8, !dbg !12689
  br label %return, !dbg !12689

return:                                           ; preds = %if.end, %entry, %if.end9
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ %., %if.end9 ], !dbg !12689
  ret i8 %retval.0, !dbg !12704
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @find_compatible_field(%union.tree_node* %record, %union.tree_node* %orig_field) local_unnamed_addr #5 !dbg !12705 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %record, metadata !12707, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_field, metadata !12708, metadata !DIExpression()), !dbg !12710
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %record, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12711
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !12711
  br label %for.cond, !dbg !12713

for.cond:                                         ; preds = %for.inc, %entry
  %f.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %f.0 = load %union.tree_node*, %union.tree_node** %f.0.in, align 8, !dbg !12714
  call void @llvm.dbg.value(metadata %union.tree_node* %f.0, metadata !12709, metadata !DIExpression()), !dbg !12710
  %tobool = icmp eq %union.tree_node* %f.0, null, !dbg !12715
  br i1 %tobool, label %for.end, label %for.body, !dbg !12715

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12716
  %bf.load = load i64, i64* %1, align 8, !dbg !12716
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !12719
  %cmp = icmp eq i64 %bf.cast2, 31, !dbg !12719
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !12720

land.lhs.true:                                    ; preds = %for.body
  %call = tail call zeroext i8 @fields_compatible_p(%union.tree_node* nonnull %f.0, %union.tree_node* %orig_field) #8, !dbg !12721
  %tobool1 = icmp eq i8 %call, 0, !dbg !12721
  br i1 %tobool1, label %for.inc, label %cleanup.loopexit, !dbg !12722

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12723
  br label %for.cond, !dbg !12724, !llvm.loop !12725

for.end:                                          ; preds = %for.cond
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %record, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !12727
  %2 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !12727
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !12727
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !12709, metadata !DIExpression()), !dbg !12710
  %tobool3 = icmp eq %union.tree_node* %3, null, !dbg !12728
  br i1 %tobool3, label %if.end16, label %land.lhs.true4, !dbg !12730

land.lhs.true4:                                   ; preds = %for.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12731
  %bf.load6 = load i64, i64* %4, align 8, !dbg !12731
  %bf.cast81 = and i64 %bf.load6, 65535, !dbg !12732
  %cmp9 = icmp eq i64 %bf.cast81, 31, !dbg !12732
  br i1 %cmp9, label %land.lhs.true11, label %if.end16, !dbg !12733

land.lhs.true11:                                  ; preds = %land.lhs.true4
  %call12 = tail call zeroext i8 @fields_compatible_p(%union.tree_node* nonnull %3, %union.tree_node* %orig_field) #8, !dbg !12734
  %tobool14 = icmp eq i8 %call12, 0, !dbg !12734
  br i1 %tobool14, label %if.end16, label %cleanup, !dbg !12735

if.end16:                                         ; preds = %land.lhs.true11, %for.end, %land.lhs.true4
  br label %cleanup, !dbg !12736

cleanup.loopexit:                                 ; preds = %land.lhs.true
  %f.0.lcssa5 = phi %union.tree_node* [ %f.0, %land.lhs.true ], !dbg !12714
  br label %cleanup, !dbg !12737

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true11, %if.end16
  %retval.0 = phi %union.tree_node* [ %orig_field, %if.end16 ], [ %3, %land.lhs.true11 ], [ %f.0.lcssa5, %cleanup.loopexit ], !dbg !12710
  ret %union.tree_node* %retval.0, !dbg !12737
}

; Function Attrs: nounwind uwtable
define dso_local i64 @int_cst_value(%union.tree_node* %x) local_unnamed_addr #5 !dbg !12738 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !12740, metadata !DIExpression()), !dbg !12746
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12747
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !12747
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !12747
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 6, !dbg !12747
  %bf.load = load i32, i32* %precision, align 4, !dbg !12747
  %bf.clear = and i32 %bf.load, 1023, !dbg !12747
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !12741, metadata !DIExpression()), !dbg !12746
  %int_cst2 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12748
  %low = bitcast i32* %int_cst2 to i64*, !dbg !12748
  %2 = load i64, i64* %low, align 8, !dbg !12748
  call void @llvm.dbg.value(metadata i64 %2, metadata !12742, metadata !DIExpression()), !dbg !12746
  %high = getelementptr inbounds i32, i32* %int_cst2, i64 2, !dbg !12749
  %3 = bitcast i32* %high to i64*, !dbg !12749
  %4 = load i64, i64* %3, align 8, !dbg !12749
  %cmp = icmp eq i64 %4, 0, !dbg !12749
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !12749

lor.lhs.false:                                    ; preds = %entry
  %cmp8 = icmp eq i64 %4, -1, !dbg !12749
  br i1 %cmp8, label %cond.end, label %cond.true, !dbg !12749

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 9651, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !12749
  br label %cond.end, !dbg !12749

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %cmp9 = icmp ult i32 %bf.clear, 64, !dbg !12750
  br i1 %cmp9, label %if.then, label %if.end21, !dbg !12751

if.then:                                          ; preds = %cond.end
  %sub = add nsw i32 %bf.clear, -1, !dbg !12752
  %sh_prom = zext i32 %sub to i64, !dbg !12753
  %5 = shl i64 1, %sh_prom, !dbg !12754
  %6 = and i64 %2, %5, !dbg !12754
  %cmp10 = icmp eq i64 %6, 0, !dbg !12754
  call void @llvm.dbg.value(metadata i1 %cmp10, metadata !12743, metadata !DIExpression()), !dbg !12755
  %shl15 = shl i64 -2, %sh_prom, !dbg !12756
  %or = or i64 %2, %shl15, !dbg !12758
  %neg = xor i64 %shl15, -1, !dbg !12758
  %and20 = and i64 %2, %neg, !dbg !12758
  %val.0 = select i1 %cmp10, i64 %and20, i64 %or, !dbg !12758
  br label %if.end21, !dbg !12758

if.end21:                                         ; preds = %if.then, %cond.end
  %val.1 = phi i64 [ %2, %cond.end ], [ %val.0, %if.then ], !dbg !12746
  call void @llvm.dbg.value(metadata i64 %val.1, metadata !12742, metadata !DIExpression()), !dbg !12746
  ret i64 %val.1, !dbg !12759
}

; Function Attrs: nounwind uwtable
define dso_local i64 @widest_int_cst_value(%union.tree_node* %x) local_unnamed_addr #5 !dbg !12760 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !12762, metadata !DIExpression()), !dbg !12768
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12769
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !12769
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !12769
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 6, !dbg !12769
  %bf.load = load i32, i32* %precision, align 4, !dbg !12769
  %bf.clear = and i32 %bf.load, 1023, !dbg !12769
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !12763, metadata !DIExpression()), !dbg !12768
  %int_cst2 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12770
  %low = bitcast i32* %int_cst2 to i64*, !dbg !12770
  %2 = load i64, i64* %low, align 8, !dbg !12770
  call void @llvm.dbg.value(metadata i64 %2, metadata !12764, metadata !DIExpression()), !dbg !12768
  %high = getelementptr inbounds i32, i32* %int_cst2, i64 2, !dbg !12771
  %3 = bitcast i32* %high to i64*, !dbg !12771
  %4 = load i64, i64* %3, align 8, !dbg !12771
  %cmp = icmp eq i64 %4, 0, !dbg !12771
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !12771

lor.lhs.false:                                    ; preds = %entry
  %cmp8 = icmp eq i64 %4, -1, !dbg !12771
  br i1 %cmp8, label %cond.end, label %cond.true, !dbg !12771

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 9680, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !12771
  br label %cond.end, !dbg !12771

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %cmp9 = icmp ult i32 %bf.clear, 64, !dbg !12772
  br i1 %cmp9, label %if.then, label %if.end21, !dbg !12773

if.then:                                          ; preds = %cond.end
  %sub = add nsw i32 %bf.clear, -1, !dbg !12774
  %sh_prom = zext i32 %sub to i64, !dbg !12775
  %5 = shl i64 1, %sh_prom, !dbg !12776
  %6 = and i64 %2, %5, !dbg !12776
  %cmp10 = icmp eq i64 %6, 0, !dbg !12776
  call void @llvm.dbg.value(metadata i1 %cmp10, metadata !12765, metadata !DIExpression()), !dbg !12777
  %shl15 = shl i64 -2, %sh_prom, !dbg !12778
  %or = or i64 %2, %shl15, !dbg !12780
  %neg = xor i64 %shl15, -1, !dbg !12780
  %and20 = and i64 %2, %neg, !dbg !12780
  %val.0 = select i1 %cmp10, i64 %and20, i64 %or, !dbg !12780
  br label %if.end21, !dbg !12780

if.end21:                                         ; preds = %if.then, %cond.end
  %val.1 = phi i64 [ %2, %cond.end ], [ %val.0, %if.then ], !dbg !12768
  call void @llvm.dbg.value(metadata i64 %val.1, metadata !12764, metadata !DIExpression()), !dbg !12768
  ret i64 %val.1, !dbg !12781
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @signed_or_unsigned_type_for(i32 %unsignedp, %union.tree_node* %type) local_unnamed_addr #5 !dbg !12782 {
entry:
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !12784, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !12785, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !12786, metadata !DIExpression()), !dbg !12787
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12788
  %bf.load = load i64, i64* %0, align 8, !dbg !12788
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12788
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !12788
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12788

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 12, !dbg !12788
  br i1 %cmp5, label %if.then, label %if.end14, !dbg !12790

if.then:                                          ; preds = %lor.lhs.false, %entry
  %type6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12791
  %1 = bitcast %union.tree_node** %type6 to i64**, !dbg !12791
  %2 = load i64*, i64** %1, align 8, !dbg !12791
  %bf.load8 = load i64, i64* %2, align 8, !dbg !12791
  %tobool = icmp ugt i64 %bf.load8, 72057594037927935, !dbg !12791
  br i1 %tobool, label %if.else, label %if.then10, !dbg !12794

if.then10:                                        ; preds = %if.then
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !12795
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !12786, metadata !DIExpression()), !dbg !12787
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12796
  %bf.load16.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !12798
  %.pre = and i64 %bf.load16.pre, 65535, !dbg !12798
  br label %if.end14, !dbg !12799

if.else:                                          ; preds = %if.then
  %4 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !12800
  %type11 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !12801
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type11, i64 0, i32 6, !dbg !12801
  %bf.load12 = load i32, i32* %precision, align 4, !dbg !12801
  %bf.clear13 = and i32 %bf.load12, 1023, !dbg !12801
  %call = tail call %union.tree_node* %4(i32 %bf.clear13, i32 %unsignedp) #7, !dbg !12802
  br label %cleanup, !dbg !12803

if.end14:                                         ; preds = %if.then10, %lor.lhs.false
  %bf.cast183.pre-phi = phi i64 [ %.pre, %if.then10 ], [ %bf.cast1, %lor.lhs.false ], !dbg !12798
  %bf.load34 = phi i64 [ %bf.load16.pre, %if.then10 ], [ %bf.load, %lor.lhs.false ], !dbg !12798
  %t.0 = phi %union.tree_node* [ %3, %if.then10 ], [ %type, %lor.lhs.false ], !dbg !12787
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !12786, metadata !DIExpression()), !dbg !12787
  %cmp19 = icmp eq i64 %bf.cast183.pre-phi, 6, !dbg !12798
  br i1 %cmp19, label %lor.lhs.false32, label %lor.lhs.false20, !dbg !12798

lor.lhs.false20:                                  ; preds = %if.end14
  %cmp25 = icmp eq i64 %bf.cast183.pre-phi, 7, !dbg !12798
  br i1 %cmp25, label %lor.lhs.false32, label %lor.lhs.false26, !dbg !12798

lor.lhs.false26:                                  ; preds = %lor.lhs.false20
  %cmp31 = icmp eq i64 %bf.cast183.pre-phi, 8, !dbg !12798
  br i1 %cmp31, label %lor.lhs.false32, label %cleanup, !dbg !12804

lor.lhs.false32:                                  ; preds = %lor.lhs.false26, %lor.lhs.false20, %if.end14
  %bf.lshr35 = lshr i64 %bf.load34, 21, !dbg !12805
  %5 = trunc i64 %bf.lshr35 to i32, !dbg !12805
  %bf.cast37 = and i32 %5, 1, !dbg !12805
  %cmp38 = icmp eq i32 %bf.cast37, %unsignedp, !dbg !12806
  br i1 %cmp38, label %cleanup, label %if.end40, !dbg !12807

if.end40:                                         ; preds = %lor.lhs.false32
  %6 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !12808
  %type41 = bitcast %union.tree_node* %t.0 to %struct.tree_type*, !dbg !12809
  %precision42 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type41, i64 0, i32 6, !dbg !12809
  %bf.load43 = load i32, i32* %precision42, align 4, !dbg !12809
  %bf.clear44 = and i32 %bf.load43, 1023, !dbg !12809
  %call45 = tail call %union.tree_node* %6(i32 %bf.clear44, i32 %unsignedp) #7, !dbg !12810
  br label %cleanup, !dbg !12811

cleanup:                                          ; preds = %lor.lhs.false26, %lor.lhs.false32, %if.end40, %if.else
  %retval.0 = phi %union.tree_node* [ %call, %if.else ], [ %call45, %if.end40 ], [ %t.0, %lor.lhs.false32 ], [ %t.0, %lor.lhs.false26 ], !dbg !12787
  ret %union.tree_node* %retval.0, !dbg !12812
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @unsigned_type_for(%union.tree_node* %type) local_unnamed_addr #5 !dbg !12813 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !12815, metadata !DIExpression()), !dbg !12816
  %call = tail call %union.tree_node* @signed_or_unsigned_type_for(i32 1, %union.tree_node* %type) #8, !dbg !12817
  ret %union.tree_node* %call, !dbg !12818
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @signed_type_for(%union.tree_node* %type) local_unnamed_addr #5 !dbg !12819 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !12821, metadata !DIExpression()), !dbg !12822
  %call = tail call %union.tree_node* @signed_or_unsigned_type_for(i32 0, %union.tree_node* %type) #8, !dbg !12823
  ret %union.tree_node* %call, !dbg !12824
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @upper_bound_in_type(%union.tree_node* %outer, %union.tree_node* %inner) local_unnamed_addr #5 !dbg !12825 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %outer, metadata !12827, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata %union.tree_node* %inner, metadata !12828, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 0, metadata !12831, metadata !DIExpression()), !dbg !12835
  %type = bitcast %union.tree_node* %outer to %struct.tree_type*, !dbg !12836
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !12836
  %bf.load = load i32, i32* %precision, align 4, !dbg !12836
  %bf.clear = and i32 %bf.load, 1023, !dbg !12836
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !12832, metadata !DIExpression()), !dbg !12835
  %type1 = bitcast %union.tree_node* %inner to %struct.tree_type*, !dbg !12837
  %precision2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i64 0, i32 6, !dbg !12837
  %bf.load3 = load i32, i32* %precision2, align 4, !dbg !12837
  %bf.clear4 = and i32 %bf.load3, 1023, !dbg !12837
  call void @llvm.dbg.value(metadata i32 %bf.clear4, metadata !12833, metadata !DIExpression()), !dbg !12835
  %cmp = icmp ugt i32 %bf.clear, %bf.clear4, !dbg !12838
  %cond = select i1 %cmp, i32 4, i32 0, !dbg !12839
  call void @llvm.dbg.value(metadata i32 %cond, metadata !12831, metadata !DIExpression()), !dbg !12835
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %outer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12840
  %bf.load5 = load i64, i64* %0, align 8, !dbg !12840
  %bf.cast2 = lshr i64 %bf.load5, 20, !dbg !12840
  %1 = trunc i64 %bf.cast2 to i32, !dbg !12840
  %2 = and i32 %1, 2, !dbg !12840
  %or8 = or i32 %cond, %2, !dbg !12841
  call void @llvm.dbg.value(metadata i32 %or8, metadata !12831, metadata !DIExpression()), !dbg !12835
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12842
  %bf.load10 = load i64, i64* %3, align 8, !dbg !12842
  %bf.cast133 = lshr i64 %bf.load10, 21, !dbg !12842
  %4 = trunc i64 %bf.cast133 to i32, !dbg !12842
  %5 = and i32 %4, 1, !dbg !12842
  %or16 = or i32 %or8, %5, !dbg !12843
  call void @llvm.dbg.value(metadata i32 %or16, metadata !12831, metadata !DIExpression()), !dbg !12835
  switch i32 %or16, label %sw.default1 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.epilog
    i32 3, label %sw.epilog
    i32 4, label %sw.bb18
    i32 5, label %sw.bb20
    i32 6, label %sw.epilog
    i32 7, label %sw.bb22
  ], !dbg !12844

sw.bb:                                            ; preds = %entry, %entry
  %sub = add nsw i32 %bf.clear, -1, !dbg !12845
  call void @llvm.dbg.value(metadata i32 %sub, metadata !12834, metadata !DIExpression()), !dbg !12835
  br label %sw.epilog, !dbg !12847

sw.bb18:                                          ; preds = %entry
  %sub19 = add nsw i32 %bf.clear4, -1, !dbg !12848
  call void @llvm.dbg.value(metadata i32 %sub19, metadata !12834, metadata !DIExpression()), !dbg !12835
  br label %sw.epilog, !dbg !12849

sw.bb20:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %bf.clear4, metadata !12834, metadata !DIExpression()), !dbg !12835
  br label %sw.epilog, !dbg !12850

sw.bb22:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %bf.clear4, metadata !12834, metadata !DIExpression()), !dbg !12835
  br label %sw.epilog, !dbg !12851

sw.default1:                                      ; preds = %entry
  unreachable

sw.epilog:                                        ; preds = %entry, %entry, %entry, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb
  %prec.0 = phi i32 [ %bf.clear4, %sw.bb22 ], [ %bf.clear4, %sw.bb20 ], [ %sub19, %sw.bb18 ], [ %sub, %sw.bb ], [ %bf.clear, %entry ], [ %bf.clear, %entry ], [ %bf.clear, %entry ]
  call void @llvm.dbg.value(metadata i32 %prec.0, metadata !12834, metadata !DIExpression()), !dbg !12835
  %cmp23 = icmp ult i32 %prec.0, 65, !dbg !12852
  %sub24 = sub i32 64, %prec.0, !dbg !12854
  %sh_prom = zext i32 %sub24 to i64, !dbg !12854
  %shr = lshr i64 -1, %sh_prom, !dbg !12854
  %sub25 = sub i32 128, %prec.0, !dbg !12854
  %sh_prom26 = zext i32 %sub25 to i64, !dbg !12854
  %shr27 = lshr i64 -1, %sh_prom26, !dbg !12854
  %lo.0 = select i1 %cmp23, i64 %shr, i64 -1, !dbg !12854
  %hi.0 = select i1 %cmp23, i64 0, i64 %shr27, !dbg !12854
  call void @llvm.dbg.value(metadata i64 %hi.0, metadata !12830, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i64 %lo.0, metadata !12829, metadata !DIExpression()), !dbg !12835
  %call = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %outer, i64 %lo.0, i64 %hi.0) #8, !dbg !12855
  ret %union.tree_node* %call, !dbg !12856
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @lower_bound_in_type(%union.tree_node* %outer, %union.tree_node* %inner) local_unnamed_addr #5 !dbg !12857 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %outer, metadata !12859, metadata !DIExpression()), !dbg !12868
  call void @llvm.dbg.value(metadata %union.tree_node* %inner, metadata !12860, metadata !DIExpression()), !dbg !12868
  %type = bitcast %union.tree_node* %outer to %struct.tree_type*, !dbg !12869
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !12869
  %bf.load = load i32, i32* %precision, align 4, !dbg !12869
  %bf.clear = and i32 %bf.load, 1023, !dbg !12869
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !12863, metadata !DIExpression()), !dbg !12868
  %type1 = bitcast %union.tree_node* %inner to %struct.tree_type*, !dbg !12870
  %precision2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i64 0, i32 6, !dbg !12870
  %bf.load3 = load i32, i32* %precision2, align 4, !dbg !12870
  %bf.clear4 = and i32 %bf.load3, 1023, !dbg !12870
  call void @llvm.dbg.value(metadata i32 %bf.clear4, metadata !12864, metadata !DIExpression()), !dbg !12868
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %outer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12871
  %bf.load5 = load i64, i64* %0, align 8, !dbg !12871
  %bf.cast1 = and i64 %bf.load5, 2097152, !dbg !12871
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !12871
  br i1 %tobool, label %lor.lhs.false, label %if.end21, !dbg !12872

lor.lhs.false:                                    ; preds = %entry
  %cmp = icmp ugt i32 %bf.clear, %bf.clear4, !dbg !12873
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12874

land.lhs.true:                                    ; preds = %lor.lhs.false
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12875
  %bf.load8 = load i64, i64* %1, align 8, !dbg !12875
  %bf.cast112 = and i64 %bf.load8, 2097152, !dbg !12875
  %tobool12 = icmp eq i64 %bf.cast112, 0, !dbg !12875
  br i1 %tobool12, label %if.else, label %if.end21, !dbg !12876

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %bf.clear4.bf.clear = select i1 %cmp, i32 %bf.clear4, i32 %bf.clear, !dbg !12877
  call void @llvm.dbg.value(metadata i32 %bf.clear4.bf.clear, metadata !12865, metadata !DIExpression()), !dbg !12878
  %cmp14 = icmp ult i32 %bf.clear4.bf.clear, 65, !dbg !12879
  br i1 %cmp14, label %if.then15, label %if.else16, !dbg !12881

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i64 -1, metadata !12862, metadata !DIExpression()), !dbg !12868
  %sub = add nsw i32 %bf.clear4.bf.clear, -1, !dbg !12882
  %sh_prom = zext i32 %sub to i64, !dbg !12884
  %shl = shl i64 -1, %sh_prom, !dbg !12884
  call void @llvm.dbg.value(metadata i64 %shl, metadata !12861, metadata !DIExpression()), !dbg !12868
  br label %if.end21, !dbg !12885

if.else16:                                        ; preds = %if.else
  %sub18 = add nsw i32 %bf.clear4.bf.clear, -65, !dbg !12886
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !12888
  %shl20 = shl i64 -1, %sh_prom19, !dbg !12888
  call void @llvm.dbg.value(metadata i64 %shl20, metadata !12862, metadata !DIExpression()), !dbg !12868
  call void @llvm.dbg.value(metadata i64 0, metadata !12861, metadata !DIExpression()), !dbg !12868
  br label %if.end21

if.end21:                                         ; preds = %land.lhs.true, %entry, %if.then15, %if.else16
  %lo.1 = phi i64 [ 0, %land.lhs.true ], [ 0, %entry ], [ %shl, %if.then15 ], [ 0, %if.else16 ], !dbg !12889
  %hi.1 = phi i64 [ 0, %land.lhs.true ], [ 0, %entry ], [ -1, %if.then15 ], [ %shl20, %if.else16 ], !dbg !12889
  call void @llvm.dbg.value(metadata i64 %hi.1, metadata !12862, metadata !DIExpression()), !dbg !12868
  call void @llvm.dbg.value(metadata i64 %lo.1, metadata !12861, metadata !DIExpression()), !dbg !12868
  %call = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %outer, i64 %lo.1, i64 %hi.1) #8, !dbg !12890
  ret %union.tree_node* %call, !dbg !12891
}

; Function Attrs: nounwind uwtable
define dso_local i32 @operand_equal_for_phi_arg_p(%union.tree_node* %arg0, %union.tree_node* %arg1) local_unnamed_addr #5 !dbg !12892 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !12894, metadata !DIExpression()), !dbg !12896
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !12895, metadata !DIExpression()), !dbg !12896
  %cmp = icmp eq %union.tree_node* %arg0, %arg1, !dbg !12897
  br i1 %cmp, label %return, label %if.end, !dbg !12899

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12900
  %bf.load = load i64, i64* %0, align 8, !dbg !12900
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12902
  %cmp1 = icmp eq i64 %bf.cast1, 141, !dbg !12902
  br i1 %cmp1, label %return, label %lor.lhs.false, !dbg !12903

lor.lhs.false:                                    ; preds = %if.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12904
  %bf.load3 = load i64, i64* %1, align 8, !dbg !12904
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !12905
  %cmp6 = icmp eq i64 %bf.cast52, 141, !dbg !12905
  br i1 %cmp6, label %return, label %if.end8, !dbg !12906

if.end8:                                          ; preds = %lor.lhs.false
  %call = tail call i32 @operand_equal_p(%union.tree_node* %arg0, %union.tree_node* %arg1, i32 0) #7, !dbg !12907
  br label %return, !dbg !12908

return:                                           ; preds = %if.end, %lor.lhs.false, %entry, %if.end8
  %retval.0 = phi i32 [ %call, %if.end8 ], [ 1, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], !dbg !12896
  ret i32 %retval.0, !dbg !12909
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @num_ending_zeros(%union.tree_node* %x) local_unnamed_addr #5 !dbg !12910 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !12912, metadata !DIExpression()), !dbg !12918
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12919
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !12919
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12917, metadata !DIExpression()), !dbg !12918
  %int_cst2 = getelementptr inbounds %union.tree_node, %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12920
  %low = bitcast i32* %int_cst2 to i64*, !dbg !12920
  %1 = load i64, i64* %low, align 8, !dbg !12920
  %cmp = icmp eq i64 %1, 0, !dbg !12922
  br i1 %cmp, label %if.then, label %if.else, !dbg !12923

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 64, metadata !12915, metadata !DIExpression()), !dbg !12918
  %high = getelementptr inbounds i32, i32* %int_cst2, i64 2, !dbg !12924
  %fr.0.in.phi.trans.insert = bitcast i32* %high to i64*, !dbg !12926
  %fr.0.pre = load i64, i64* %fr.0.in.phi.trans.insert, align 8, !dbg !12926
  br label %if.end, !dbg !12927

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !12915, metadata !DIExpression()), !dbg !12918
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %fr.0 = phi i64 [ %fr.0.pre, %if.then ], [ %1, %if.else ], !dbg !12926
  %num.0 = phi i32 [ 64, %if.then ], [ 0, %if.else ], !dbg !12926
  call void @llvm.dbg.value(metadata i64 %fr.0, metadata !12913, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 %num.0, metadata !12915, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 32, metadata !12916, metadata !DIExpression()), !dbg !12918
  br label %for.cond, !dbg !12928

for.cond:                                         ; preds = %for.body, %if.end
  %num.1 = phi i32 [ %num.0, %if.end ], [ %spec.select, %for.body ], !dbg !12918
  %fr.1 = phi i64 [ %fr.0, %if.end ], [ %spec.select1, %for.body ], !dbg !12918
  %abits.0 = phi i32 [ 32, %if.end ], [ %div, %for.body ], !dbg !12930
  call void @llvm.dbg.value(metadata i32 %abits.0, metadata !12916, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i64 %fr.1, metadata !12913, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 %num.1, metadata !12915, metadata !DIExpression()), !dbg !12918
  %tobool = icmp eq i32 %abits.0, 0, !dbg !12931
  br i1 %tobool, label %for.end, label %for.body, !dbg !12931

for.body:                                         ; preds = %for.cond
  %sh_prom = zext i32 %abits.0 to i64, !dbg !12932
  %shr = lshr i64 %fr.1, %sh_prom, !dbg !12932
  call void @llvm.dbg.value(metadata i64 %shr, metadata !12914, metadata !DIExpression()), !dbg !12918
  %shl = shl i64 %shr, %sh_prom, !dbg !12935
  %cmp9 = icmp eq i64 %shl, %fr.1, !dbg !12937
  %add = select i1 %cmp9, i32 %abits.0, i32 0, !dbg !12938
  %spec.select = add i32 %num.1, %add, !dbg !12938
  %spec.select1 = select i1 %cmp9, i64 %shr, i64 %fr.1, !dbg !12938
  call void @llvm.dbg.value(metadata i64 %spec.select1, metadata !12913, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !12915, metadata !DIExpression()), !dbg !12918
  %div = lshr i32 %abits.0, 1, !dbg !12939
  call void @llvm.dbg.value(metadata i32 %div, metadata !12916, metadata !DIExpression()), !dbg !12918
  br label %for.cond, !dbg !12940, !llvm.loop !12941

for.end:                                          ; preds = %for.cond
  %num.1.lcssa = phi i32 [ %num.1, %for.cond ], !dbg !12918
  call void @llvm.dbg.value(metadata i32 %num.1.lcssa, metadata !12915, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 %num.1.lcssa, metadata !12915, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 %num.1.lcssa, metadata !12915, metadata !DIExpression()), !dbg !12918
  %type12 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !12943
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type12, i64 0, i32 6, !dbg !12943
  %bf.load = load i32, i32* %precision, align 4, !dbg !12943
  %bf.clear = and i32 %bf.load, 1023, !dbg !12943
  %cmp13 = icmp ugt i32 %num.1.lcssa, %bf.clear, !dbg !12945
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !12946

if.then14:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !12915, metadata !DIExpression()), !dbg !12918
  br label %if.end19, !dbg !12947

if.end19:                                         ; preds = %if.then14, %for.end
  %num.3 = phi i32 [ %bf.clear, %if.then14 ], [ %num.1.lcssa, %for.end ], !dbg !12918
  call void @llvm.dbg.value(metadata i32 %num.3, metadata !12915, metadata !DIExpression()), !dbg !12918
  %conv = zext i32 %num.3 to i64, !dbg !12948
  %call = tail call %union.tree_node* @build_int_cst_type(%union.tree_node* %0, i64 %conv) #8, !dbg !12949
  ret %union.tree_node* %call, !dbg !12950
}

declare dso_local i32 @pointer_set_insert(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_, %struct.constructor_elt_d** %ptr) unnamed_addr #0 !dbg !12951 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !12956, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !12957, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ptr, metadata !12958, metadata !DIExpression()), !dbg !12959
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !12960
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !12960

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !12960
  %0 = load i32, i32* %num, align 8, !dbg !12960
  %cmp = icmp ugt i32 %0, %ix_, !dbg !12960
  br i1 %cmp, label %if.then, label %if.else, !dbg !12962

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !12963
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !12963
  br label %return, !dbg !12963

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !12965

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.constructor_elt_d* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !12967
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !12967
  store %struct.constructor_elt_d* %storemerge, %struct.constructor_elt_d** %ptr, align 8, !dbg !12967
  ret i32 %retval.0, !dbg !12962
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_start(%union.tree_node* %t) unnamed_addr #0 !dbg !12968 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !12972, metadata !DIExpression()), !dbg !12974
  %head = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12975
  %0 = bitcast i32* %head to %struct.tree_statement_list_node**, !dbg !12975
  %1 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %0, align 8, !dbg !12975
  %2 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } undef, %struct.tree_statement_list_node* %1, 0, !dbg !12976
  %3 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } %2, %union.tree_node* %t, 1, !dbg !12976
  ret { %struct.tree_statement_list_node*, %union.tree_node* } %3, !dbg !12976
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tsi_end_p(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !12977 {
entry:
  %cmp = icmp eq %struct.tree_statement_list_node* %i.coerce0, null, !dbg !12982
  %conv1 = zext i1 %cmp to i8, !dbg !12983
  ret i8 %conv1, !dbg !12984
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @tsi_stmt_ptr(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !12985 {
entry:
  %stmt = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %i.coerce0, i64 0, i32 2, !dbg !12990
  ret %union.tree_node** %stmt, !dbg !12991
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @tsi_next(%struct.tree_stmt_iterator* %i) unnamed_addr #0 !dbg !12992 {
entry:
  call void @llvm.dbg.value(metadata %struct.tree_stmt_iterator* %i, metadata !12997, metadata !DIExpression()), !dbg !12998
  %ptr = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 0, !dbg !12999
  %0 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %ptr, align 8, !dbg !12999
  %next = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %0, i64 0, i32 1, !dbg !13000
  %1 = bitcast %struct.tree_statement_list_node** %next to i64*, !dbg !13000
  %2 = load i64, i64* %1, align 8, !dbg !13000
  %3 = bitcast %struct.tree_stmt_iterator* %i to i64*, !dbg !13001
  store i64 %2, i64* %3, align 8, !dbg !13001
  ret void, !dbg !13002
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @walk_type_fields(%union.tree_node* %type, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) unnamed_addr #5 !dbg !13003 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !13007, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, metadata !13008, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.value(metadata i8* %data, metadata !13009, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %pset, metadata !13010, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh, metadata !13011, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !13012, metadata !DIExpression()), !dbg !13016
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13017
  %bf.load = load i64, i64* %0, align 8, !dbg !13017
  %1 = trunc i64 %bf.load to i16, !dbg !13017
  switch i16 %1, label %sw.epilog [
    i16 10, label %sw.bb
    i16 12, label %sw.bb
    i16 13, label %do.body
    i16 21, label %do.body70
    i16 20, label %do.body79
    i16 15, label %sw.bb98
    i16 5, label %do.body145
  ], !dbg !13018

sw.bb:                                            ; preds = %entry, %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13019
  %2 = bitcast %union.tree_node** %type1 to i64**, !dbg !13019
  %3 = load i64*, i64** %2, align 8, !dbg !13019
  %bf.load3 = load i64, i64* %3, align 8, !dbg !13019
  %bf.cast55 = and i64 %bf.load3, 65535, !dbg !13019
  %cmp = icmp eq i64 %bf.cast55, 10, !dbg !13019
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !13019

lor.lhs.false:                                    ; preds = %sw.bb
  %cmp12 = icmp eq i64 %bf.cast55, 12, !dbg !13019
  br i1 %cmp12, label %land.lhs.true, label %do.body, !dbg !13021

land.lhs.true:                                    ; preds = %lor.lhs.false, %sw.bb
  %type16 = getelementptr inbounds i64, i64* %3, i64 2, !dbg !13022
  %4 = bitcast i64* %type16 to i64**, !dbg !13022
  %5 = load i64*, i64** %4, align 8, !dbg !13022
  %bf.load18 = load i64, i64* %5, align 8, !dbg !13022
  %bf.cast207 = and i64 %bf.load18, 65535, !dbg !13022
  %cmp21 = icmp eq i64 %bf.cast207, 10, !dbg !13022
  br i1 %cmp21, label %land.lhs.true32, label %lor.lhs.false22, !dbg !13022

lor.lhs.false22:                                  ; preds = %land.lhs.true
  %cmp31 = icmp eq i64 %bf.cast207, 12, !dbg !13022
  br i1 %cmp31, label %land.lhs.true32, label %do.body, !dbg !13023

land.lhs.true32:                                  ; preds = %lor.lhs.false22, %land.lhs.true
  %type38 = getelementptr inbounds i64, i64* %5, i64 2, !dbg !13024
  %6 = bitcast i64* %type38 to i64**, !dbg !13024
  %7 = load i64*, i64** %6, align 8, !dbg !13024
  %bf.load40 = load i64, i64* %7, align 8, !dbg !13024
  %bf.cast429 = and i64 %bf.load40, 65535, !dbg !13024
  %cmp43 = icmp eq i64 %bf.cast429, 10, !dbg !13024
  br i1 %cmp43, label %land.lhs.true56, label %lor.lhs.false44, !dbg !13024

lor.lhs.false44:                                  ; preds = %land.lhs.true32
  %cmp55 = icmp ne i64 %bf.cast429, 12, !dbg !13024
  %tobool = icmp ne %struct.pointer_set_t* %pset, null, !dbg !13025
  %or.cond = or i1 %cmp55, %tobool, !dbg !13026
  br i1 %or.cond, label %do.body, label %if.then, !dbg !13026

land.lhs.true56:                                  ; preds = %land.lhs.true32
  %tobool.old = icmp eq %struct.pointer_set_t* %pset, null, !dbg !13025
  br i1 %tobool.old, label %if.then, label %do.body, !dbg !13027

if.then:                                          ; preds = %land.lhs.true56, %lor.lhs.false44
  %call = tail call %union.tree_node* @walk_tree_without_duplicates_1(%union.tree_node** nonnull %type1, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !13028
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool59 = icmp eq %union.tree_node* %call, null, !dbg !13030
  br i1 %tobool59, label %sw.epilog, label %cleanup163, !dbg !13032

do.body:                                          ; preds = %land.lhs.true56, %entry, %lor.lhs.false44, %lor.lhs.false22, %lor.lhs.false
  %type64 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13033
  %call65 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %type64, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13033
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool66 = icmp eq %union.tree_node* %call65, null, !dbg !13035
  br i1 %tobool66, label %sw.epilog, label %cleanup163, !dbg !13033

do.body70:                                        ; preds = %entry
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13037
  %8 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !13037
  %call72 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %8, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13037
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool73 = icmp eq %union.tree_node* %call72, null, !dbg !13039
  br i1 %tobool73, label %do.body79, label %cleanup163, !dbg !13037

do.body79:                                        ; preds = %do.body70, %entry
  %type81 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13041
  %call82 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %type81, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13041
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool83 = icmp eq %union.tree_node* %call82, null, !dbg !13043
  br i1 %tobool83, label %do.end87, label %cleanup163, !dbg !13041

do.end87:                                         ; preds = %do.body79
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13045
  %9 = bitcast i32* %values to %union.tree_node**, !dbg !13045
  br label %for.cond, !dbg !13047

for.cond:                                         ; preds = %for.inc, %do.end87
  %arg.0.in = phi %union.tree_node** [ %9, %do.end87 ], [ %chain, %for.inc ]
  %arg.0 = load %union.tree_node*, %union.tree_node** %arg.0.in, align 8, !dbg !13048
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !13013, metadata !DIExpression()), !dbg !13049
  %tobool89 = icmp eq %union.tree_node* %arg.0, null, !dbg !13050
  br i1 %tobool89, label %cleanup, label %do.body90, !dbg !13050

do.body90:                                        ; preds = %for.cond
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13051
  %call91 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %10, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13051
  call void @llvm.dbg.value(metadata %union.tree_node* %call91, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool92 = icmp eq %union.tree_node* %call91, null, !dbg !13054
  br i1 %tobool92, label %for.inc, label %cleanup, !dbg !13051

for.inc:                                          ; preds = %do.body90
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13056
  br label %for.cond, !dbg !13057, !llvm.loop !13058

cleanup:                                          ; preds = %do.body90, %for.cond
  %cleanup.dest.slot.0 = phi i1 [ false, %do.body90 ], [ true, %for.cond ]
  %retval.0 = phi %union.tree_node* [ %call91, %do.body90 ], [ undef, %for.cond ]
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %cleanup163

sw.bb98:                                          ; preds = %entry
  %tobool99 = icmp eq %struct.pointer_set_t* %pset, null, !dbg !13060
  br i1 %tobool99, label %lor.lhs.false100, label %do.body125, !dbg !13062

lor.lhs.false100:                                 ; preds = %sw.bb98
  %type102 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13063
  %11 = bitcast %union.tree_node** %type102 to i64**, !dbg !13063
  %12 = load i64*, i64** %11, align 8, !dbg !13063
  %bf.load104 = load i64, i64* %12, align 8, !dbg !13063
  %bf.cast1061 = and i64 %bf.load104, 65535, !dbg !13063
  %cmp107 = icmp eq i64 %bf.cast1061, 10, !dbg !13063
  br i1 %cmp107, label %do.body135, label %lor.lhs.false108, !dbg !13063

lor.lhs.false108:                                 ; preds = %lor.lhs.false100
  %cmp115 = icmp eq i64 %bf.cast1061, 12, !dbg !13063
  br i1 %cmp115, label %do.body135, label %land.lhs.true116, !dbg !13064

land.lhs.true116:                                 ; preds = %lor.lhs.false108
  %cmp123 = icmp eq i64 %bf.cast1061, 5, !dbg !13065
  br i1 %cmp123, label %do.body135, label %do.body125, !dbg !13066

do.body125:                                       ; preds = %land.lhs.true116, %sw.bb98
  %type127 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13067
  %call128 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %type127, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13067
  call void @llvm.dbg.value(metadata %union.tree_node* %call128, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool129 = icmp eq %union.tree_node* %call128, null, !dbg !13069
  br i1 %tobool129, label %do.body135, label %cleanup163, !dbg !13067

do.body135:                                       ; preds = %do.body125, %land.lhs.true116, %lor.lhs.false100, %lor.lhs.false108
  %values137 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13071
  %13 = bitcast i32* %values137 to %union.tree_node**, !dbg !13071
  %call138 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %13, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13071
  call void @llvm.dbg.value(metadata %union.tree_node* %call138, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool139 = icmp eq %union.tree_node* %call138, null, !dbg !13073
  br i1 %tobool139, label %sw.epilog, label %cleanup163, !dbg !13071

do.body145:                                       ; preds = %entry
  %type147 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13075
  %call148 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %type147, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13075
  call void @llvm.dbg.value(metadata %union.tree_node* %call148, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool149 = icmp eq %union.tree_node* %call148, null, !dbg !13077
  br i1 %tobool149, label %do.body154, label %cleanup163, !dbg !13075

do.body154:                                       ; preds = %do.body145
  %maxval156 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13079
  %14 = bitcast %struct.rtx_def** %maxval156 to %union.tree_node**, !dbg !13079
  %call157 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %14, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %pset, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13079
  call void @llvm.dbg.value(metadata %union.tree_node* %call157, metadata !13012, metadata !DIExpression()), !dbg !13016
  %tobool158 = icmp eq %union.tree_node* %call157, null, !dbg !13081
  br i1 %tobool158, label %sw.epilog, label %cleanup163, !dbg !13079

sw.epilog:                                        ; preds = %if.then, %do.body, %do.body135, %do.body154, %entry, %cleanup
  br label %cleanup163, !dbg !13083

cleanup163:                                       ; preds = %if.then, %do.body, %do.body70, %do.body79, %do.body125, %do.body135, %do.body154, %do.body145, %cleanup, %sw.epilog
  %retval.1 = phi %union.tree_node* [ null, %sw.epilog ], [ %retval.0, %cleanup ], [ %call, %if.then ], [ %call65, %do.body ], [ %call72, %do.body70 ], [ %call82, %do.body79 ], [ %call128, %do.body125 ], [ %call138, %do.body135 ], [ %call148, %do.body145 ], [ %call157, %do.body154 ], !dbg !13016
  ret %union.tree_node* %retval.1, !dbg !13084
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @walk_tree_without_duplicates_1(%union.tree_node** %tp, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) local_unnamed_addr #5 !dbg !13085 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !13089, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, metadata !13090, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata i8* %data, metadata !13091, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh, metadata !13092, metadata !DIExpression()), !dbg !13095
  %call = tail call %struct.pointer_set_t* @pointer_set_create() #7, !dbg !13096
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call, metadata !13094, metadata !DIExpression()), !dbg !13095
  %call1 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** %tp, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data, %struct.pointer_set_t* %call, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* %lh) #8, !dbg !13097
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !13093, metadata !DIExpression()), !dbg !13095
  tail call void @pointer_set_destroy(%struct.pointer_set_t* %call) #7, !dbg !13098
  ret %union.tree_node* %call1, !dbg !13099
}

declare dso_local %struct.pointer_set_t* @pointer_set_create() local_unnamed_addr #2

declare dso_local void @pointer_set_destroy(%struct.pointer_set_t*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @call_expr_arglist(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !13100 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13102, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !13103, metadata !DIExpression()), !dbg !13105
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13106
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !13106
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !13106
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !13106
  %2 = load i64, i64* %low, align 8, !dbg !13106
  %3 = shl i64 %2, 32, !dbg !13108
  %sext = add i64 %3, -17179869184, !dbg !13108
  %4 = ashr exact i64 %sext, 32, !dbg !13108
  br label %for.cond, !dbg !13108

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %4, %entry ], !dbg !13105
  %arglist.0 = phi %union.tree_node* [ %call, %for.body ], [ null, %entry ], !dbg !13105
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !13104, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0, metadata !13103, metadata !DIExpression()), !dbg !13105
  %cmp = icmp sgt i64 %indvars.iv, -1, !dbg !13109
  br i1 %cmp, label %for.body, label %for.end, !dbg !13111

for.body:                                         ; preds = %for.cond
  %5 = add nsw i64 %indvars.iv, 3, !dbg !13112
  %arrayidx7 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %5, !dbg !13112
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx7, align 8, !dbg !13112
  %call = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %6, %union.tree_node* %arglist.0) #8, !dbg !13112
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13103, metadata !DIExpression()), !dbg !13105
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !13113
  call void @llvm.dbg.value(metadata i32 undef, metadata !13104, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13105
  br label %for.cond, !dbg !13114, !llvm.loop !13115

for.end:                                          ; preds = %for.cond
  %arglist.0.lcssa = phi %union.tree_node* [ %arglist.0, %for.cond ], !dbg !13105
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !13103, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !13103, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !13103, metadata !DIExpression()), !dbg !13105
  ret %union.tree_node* %arglist.0.lcssa, !dbg !13117
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @create_artificial_label(i32 %loc) local_unnamed_addr #5 !dbg !13118 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !13120, metadata !DIExpression()), !dbg !13122
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !13123
  %call = tail call %union.tree_node* @build_decl_stat(i32 %loc, i32 30, %union.tree_node* null, %union.tree_node* %0) #8, !dbg !13123
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13121, metadata !DIExpression()), !dbg !13122
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13124
  %1 = bitcast i40* %artificial_flag to i64*, !dbg !13124
  %bf.load = load i64, i64* %1, align 8, !dbg !13125
  %bf.set4 = or i64 %bf.load, 5120, !dbg !13126
  store i64 %bf.set4, i64* %1, align 8, !dbg !13126
  %2 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !13127
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13128
  %3 = bitcast %union.tree_node** %context to i64*, !dbg !13129
  store i64 %2, i64* %3, align 8, !dbg !13129
  ret %union.tree_node* %call, !dbg !13130
}

; Function Attrs: nounwind uwtable
define dso_local i8* @get_name(%union.tree_node* %t) local_unnamed_addr #5 !dbg !13131 {
entry:
  br label %tailrecurse, !dbg !13137

tailrecurse:                                      ; preds = %sw.bb, %entry
  %t.tr = phi %union.tree_node* [ %t, %entry ], [ %5, %sw.bb ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr, metadata !13135, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr, metadata !13136, metadata !DIExpression()), !dbg !13141
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %t.tr) #8, !dbg !13142
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13136, metadata !DIExpression()), !dbg !13141
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13143
  %bf.load = load i64, i64* %0, align 8, !dbg !13143
  %bf.cast = and i64 %bf.load, 65535, !dbg !13143
  %1 = add nsw i64 %bf.cast, -29, !dbg !13143
  %cmp = icmp ult i64 %1, 12, !dbg !13143
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13144

land.lhs.true:                                    ; preds = %tailrecurse
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13145
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !13145
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !13145
  br i1 %tobool, label %if.else, label %if.then, !dbg !13146

if.then:                                          ; preds = %land.lhs.true
  %.lcssa = phi %union.tree_node* [ %2, %land.lhs.true ], !dbg !13145
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13147
  %3 = bitcast i32* %str to i8**, !dbg !13147
  %4 = load i8*, i8** %3, align 8, !dbg !13147
  br label %cleanup, !dbg !13148

if.else:                                          ; preds = %land.lhs.true, %tailrecurse
  %cond = icmp eq i64 %bf.cast, 121, !dbg !13149
  br i1 %cond, label %sw.bb, label %cleanup.loopexit, !dbg !13149

sw.bb:                                            ; preds = %if.else
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13150
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !13150
  br label %tailrecurse, !dbg !13137

cleanup.loopexit:                                 ; preds = %if.else
  br label %cleanup, !dbg !13151

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi i8* [ %4, %if.then ], [ null, %cleanup.loopexit ], !dbg !13152
  ret i8* %retval.0, !dbg !13151
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @stdarg_p(%union.tree_node* %fntype) local_unnamed_addr #5 !dbg !13153 {
entry:
  %args_iter = alloca %struct.function_args_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype, metadata !13155, metadata !DIExpression()), !dbg !13164
  %0 = bitcast %struct.function_args_iterator* %args_iter to i8*, !dbg !13165
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !13165
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !13162, metadata !DIExpression()), !dbg !13164
  %tobool = icmp eq %union.tree_node* %fntype, null, !dbg !13166
  br i1 %tobool, label %cleanup, label %if.end, !dbg !13168

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.function_args_iterator* %args_iter, metadata !13156, metadata !DIExpression(DW_OP_deref)), !dbg !13164
  call fastcc void @function_args_iter_init(%struct.function_args_iterator* nonnull %args_iter, %union.tree_node* nonnull %fntype) #8, !dbg !13169
  br label %for.cond, !dbg !13169

for.cond:                                         ; preds = %for.inc, %if.end
  %n.0 = phi %union.tree_node* [ null, %if.end ], [ %call, %for.inc ], !dbg !13164
  call void @llvm.dbg.value(metadata %union.tree_node* %n.0, metadata !13162, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata %struct.function_args_iterator* %args_iter, metadata !13156, metadata !DIExpression(DW_OP_deref)), !dbg !13164
  %call = call fastcc %union.tree_node* @function_args_iter_cond(%struct.function_args_iterator* nonnull %args_iter) #8, !dbg !13171
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13163, metadata !DIExpression()), !dbg !13164
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !13171
  br i1 %cmp, label %for.end, label %for.inc, !dbg !13169

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13162, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata %struct.function_args_iterator* %args_iter, metadata !13156, metadata !DIExpression(DW_OP_deref)), !dbg !13164
  call fastcc void @function_args_iter_next(%struct.function_args_iterator* nonnull %args_iter) #8, !dbg !13171
  br label %for.cond, !dbg !13171, !llvm.loop !13173

for.end:                                          ; preds = %for.cond
  %n.0.lcssa = phi %union.tree_node* [ %n.0, %for.cond ], !dbg !13164
  call void @llvm.dbg.value(metadata %union.tree_node* %n.0.lcssa, metadata !13162, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata %union.tree_node* %n.0.lcssa, metadata !13162, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata %union.tree_node* %n.0.lcssa, metadata !13162, metadata !DIExpression()), !dbg !13164
  %cmp1 = icmp ne %union.tree_node* %n.0.lcssa, null, !dbg !13175
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !13176
  %cmp2 = icmp ne %union.tree_node* %n.0.lcssa, %1, !dbg !13176
  %2 = and i1 %cmp2, %cmp1, !dbg !13176
  %conv = zext i1 %2 to i8, !dbg !13177
  br label %cleanup, !dbg !13178

cleanup:                                          ; preds = %entry, %for.end
  %retval.0 = phi i8 [ %conv, %for.end ], [ 0, %entry ], !dbg !13164
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !13179
  ret i8 %retval.0, !dbg !13179
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @function_args_iter_init(%struct.function_args_iterator* %i, %union.tree_node* %fntype) unnamed_addr #0 !dbg !13180 {
entry:
  call void @llvm.dbg.value(metadata %struct.function_args_iterator* %i, metadata !13185, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.value(metadata %union.tree_node* %fntype, metadata !13186, metadata !DIExpression()), !dbg !13187
  %fntype1 = getelementptr inbounds %struct.function_args_iterator, %struct.function_args_iterator* %i, i64 0, i32 0, !dbg !13188
  store %union.tree_node* %fntype, %union.tree_node** %fntype1, align 8, !dbg !13189
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %fntype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13190
  %0 = bitcast i32* %values to i64*, !dbg !13190
  %1 = load i64, i64* %0, align 8, !dbg !13190
  %next = getelementptr inbounds %struct.function_args_iterator, %struct.function_args_iterator* %i, i64 0, i32 1, !dbg !13191
  %2 = bitcast %union.tree_node** %next to i64*, !dbg !13192
  store i64 %1, i64* %2, align 8, !dbg !13192
  ret void, !dbg !13193
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @function_args_iter_cond(%struct.function_args_iterator* %i) unnamed_addr #0 !dbg !13194 {
entry:
  call void @llvm.dbg.value(metadata %struct.function_args_iterator* %i, metadata !13198, metadata !DIExpression()), !dbg !13199
  %next = getelementptr inbounds %struct.function_args_iterator, %struct.function_args_iterator* %i, i64 0, i32 1, !dbg !13200
  %0 = load %union.tree_node*, %union.tree_node** %next, align 8, !dbg !13200
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !13201
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !13201

cond.true:                                        ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13202
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !13202
  br label %cond.end, !dbg !13201

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %2, %cond.true ], [ null, %entry ], !dbg !13201
  ret %union.tree_node* %cond, !dbg !13203
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @function_args_iter_next(%struct.function_args_iterator* %i) unnamed_addr #0 !dbg !13204 {
entry:
  call void @llvm.dbg.value(metadata %struct.function_args_iterator* %i, metadata !13208, metadata !DIExpression()), !dbg !13209
  %next = getelementptr inbounds %struct.function_args_iterator, %struct.function_args_iterator* %i, i64 0, i32 1, !dbg !13210
  %0 = load %union.tree_node*, %union.tree_node** %next, align 8, !dbg !13210
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !13210
  br i1 %cmp, label %cond.true, label %entry.cond.end_crit_edge, !dbg !13210

entry.cond.end_crit_edge:                         ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13210
  br label %cond.end, !dbg !13210

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.283, i64 0, i64 0), i32 4670, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !13210
  %.phi.trans.insert = bitcast %union.tree_node** %next to %struct.tree_common**, !dbg !13209
  %.pre = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !13211
  br label %cond.end, !dbg !13210

cond.end:                                         ; preds = %entry.cond.end_crit_edge, %cond.true
  %2 = phi %struct.tree_common* [ %1, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ], !dbg !13211
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 1, !dbg !13211
  %3 = bitcast %union.tree_node** %chain to i64*, !dbg !13211
  %4 = load i64, i64* %3, align 8, !dbg !13211
  %5 = bitcast %union.tree_node** %next to i64*, !dbg !13212
  store i64 %4, i64* %5, align 8, !dbg !13212
  ret void, !dbg !13213
}

; Function Attrs: nounwind uwtable
define dso_local i32* @block_nonartificial_location(%union.tree_node* %block) local_unnamed_addr #5 !dbg !13214 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !13219, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.value(metadata i32* null, metadata !13220, metadata !DIExpression()), !dbg !13223
  br label %while.cond, !dbg !13224

while.cond:                                       ; preds = %cleanup, %entry
  %ret.0 = phi i32* [ null, %entry ], [ %ret.2, %cleanup ], !dbg !13223
  %block.addr.0 = phi %union.tree_node* [ %block, %entry ], [ %block.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.0, metadata !13219, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.value(metadata i32* %ret.0, metadata !13220, metadata !DIExpression()), !dbg !13223
  %tobool = icmp eq %union.tree_node* %block.addr.0, null, !dbg !13225
  br i1 %tobool, label %while.end45, label %land.lhs.true, !dbg !13226

land.lhs.true:                                    ; preds = %while.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13227
  %bf.load = load i64, i64* %0, align 8, !dbg !13227
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !13228
  %cmp = icmp eq i64 %bf.cast3, 4, !dbg !13228
  br i1 %cmp, label %land.rhs, label %while.end45, !dbg !13229

land.rhs:                                         ; preds = %land.lhs.true
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13230
  %1 = bitcast i32* %abstract_origin to %union.tree_node**, !dbg !13230
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !13230
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !13229
  br i1 %tobool2, label %while.end45, label %while.body, !dbg !13224

while.body:                                       ; preds = %land.rhs
  br label %while.cond5, !dbg !13231

while.cond5:                                      ; preds = %while.body20, %while.body
  %ao.0 = phi %union.tree_node* [ %2, %while.body ], [ %5, %while.body20 ], !dbg !13232
  call void @llvm.dbg.value(metadata %union.tree_node* %ao.0, metadata !13221, metadata !DIExpression()), !dbg !13232
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %ao.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13233
  %bf.load7 = load i64, i64* %3, align 8, !dbg !13233
  %bf.cast94 = and i64 %bf.load7, 65535, !dbg !13234
  %cmp10 = icmp eq i64 %bf.cast94, 4, !dbg !13234
  br i1 %cmp10, label %land.lhs.true11, label %while.end, !dbg !13235

land.lhs.true11:                                  ; preds = %while.cond5
  %abstract_origin13 = getelementptr inbounds %union.tree_node, %union.tree_node* %ao.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13236
  %4 = bitcast i32* %abstract_origin13 to %union.tree_node**, !dbg !13236
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !13236
  %tobool14 = icmp eq %union.tree_node* %5, null, !dbg !13236
  %cmp18 = icmp eq %union.tree_node* %5, %ao.0, !dbg !13237
  %or.cond = or i1 %tobool14, %cmp18, !dbg !13238
  br i1 %or.cond, label %while.end, label %while.body20, !dbg !13238

while.body20:                                     ; preds = %land.lhs.true11
  br label %while.cond5, !dbg !13231, !llvm.loop !13239

while.end:                                        ; preds = %land.lhs.true11, %while.cond5
  %ao.0.lcssa = phi %union.tree_node* [ %ao.0, %land.lhs.true11 ], [ %ao.0, %while.cond5 ], !dbg !13232
  %bf.cast94.lcssa = phi i64 [ %bf.cast94, %land.lhs.true11 ], [ %bf.cast94, %while.cond5 ], !dbg !13234
  %cmp10.lcssa = phi i1 [ %cmp10, %land.lhs.true11 ], [ %cmp10, %while.cond5 ], !dbg !13234
  call void @llvm.dbg.value(metadata %union.tree_node* %ao.0.lcssa, metadata !13221, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata %union.tree_node* %ao.0.lcssa, metadata !13221, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata %union.tree_node* %ao.0.lcssa, metadata !13221, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata %union.tree_node* %ao.0.lcssa, metadata !13221, metadata !DIExpression()), !dbg !13232
  %cmp27 = icmp eq i64 %bf.cast94.lcssa, 29, !dbg !13241
  br i1 %cmp27, label %if.then, label %if.else35, !dbg !13243

if.then:                                          ; preds = %while.end
  %declared_inline_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %ao.0.lcssa, i64 0, i32 0, i32 5, !dbg !13244
  %bf.load28 = load i32, i32* %declared_inline_flag, align 8, !dbg !13244
  %bf.clear29 = and i32 %bf.load28, 2097152, !dbg !13244
  %tobool30 = icmp eq i32 %bf.clear29, 0, !dbg !13244
  br i1 %tobool30, label %cleanup, label %land.lhs.true31, !dbg !13247

land.lhs.true31:                                  ; preds = %if.then
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %ao.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13248
  %6 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !13248
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.276, i64 0, i64 0), %union.tree_node* %6) #8, !dbg !13249
  %tobool32 = icmp eq %union.tree_node* %call, null, !dbg !13249
  br i1 %tobool32, label %cleanup, label %if.then33, !dbg !13250

if.then33:                                        ; preds = %land.lhs.true31
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13251
  call void @llvm.dbg.value(metadata i32* %7, metadata !13220, metadata !DIExpression()), !dbg !13223
  br label %if.end43, !dbg !13252

if.else35:                                        ; preds = %while.end
  br i1 %cmp10.lcssa, label %if.end43, label %cleanup, !dbg !13253

if.end43:                                         ; preds = %if.else35, %if.then33
  %ret.1 = phi i32* [ %7, %if.then33 ], [ %ret.0, %if.else35 ], !dbg !13223
  call void @llvm.dbg.value(metadata i32* %ret.1, metadata !13220, metadata !DIExpression()), !dbg !13223
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13254
  %8 = bitcast i40* %supercontext to %union.tree_node**, !dbg !13254
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !13254
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !13219, metadata !DIExpression()), !dbg !13223
  br label %cleanup, !dbg !13255

cleanup:                                          ; preds = %land.lhs.true31, %if.then, %if.else35, %if.end43
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end43 ], [ false, %land.lhs.true31 ], [ false, %if.then ], [ false, %if.else35 ]
  %ret.2 = phi i32* [ %ret.1, %if.end43 ], [ %ret.0, %land.lhs.true31 ], [ %ret.0, %if.then ], [ %ret.0, %if.else35 ], !dbg !13223
  %block.addr.1 = phi %union.tree_node* [ %9, %if.end43 ], [ %block.addr.0, %land.lhs.true31 ], [ %block.addr.0, %if.then ], [ %block.addr.0, %if.else35 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.1, metadata !13219, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.value(metadata i32* %ret.2, metadata !13220, metadata !DIExpression()), !dbg !13223
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end45, !llvm.loop !13256

while.end45:                                      ; preds = %land.rhs, %while.cond, %land.lhs.true, %cleanup
  %ret.3 = phi i32* [ %ret.2, %cleanup ], [ %ret.0, %land.rhs ], [ %ret.0, %land.lhs.true ], [ %ret.0, %while.cond ], !dbg !13223
  call void @llvm.dbg.value(metadata i32* %ret.3, metadata !13220, metadata !DIExpression()), !dbg !13223
  ret i32* %ret.3, !dbg !13257
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_nonartificial_location(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !13258 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13262, metadata !DIExpression()), !dbg !13264
  %call = tail call %union.tree_node** @tree_block(%union.tree_node* %exp) #8, !dbg !13265
  %0 = load %union.tree_node*, %union.tree_node** %call, align 8, !dbg !13265
  %call1 = tail call i32* @block_nonartificial_location(%union.tree_node* %0) #8, !dbg !13266
  call void @llvm.dbg.value(metadata i32* %call1, metadata !13263, metadata !DIExpression()), !dbg !13264
  %tobool = icmp eq i32* %call1, null, !dbg !13267
  br i1 %tobool, label %if.else, label %if.then, !dbg !13269

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %call1, align 4, !dbg !13270
  br label %cleanup, !dbg !13271

if.else:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13272
  %bf.load = load i64, i64* %2, align 8, !dbg !13272
  %bf.cast = and i64 %bf.load, 65535, !dbg !13272
  %arrayidx = getelementptr inbounds [191 x i32], [191 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !13272
  %3 = load i32, i32* %arrayidx, align 4, !dbg !13272
  %cmp = icmp ugt i32 %3, 3, !dbg !13272
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !13272

land.lhs.true:                                    ; preds = %if.else
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13272
  %5 = load i32, i32* %4, align 8, !dbg !13272
  br label %cleanup, !dbg !13272

cleanup:                                          ; preds = %land.lhs.true, %if.else, %if.then
  %retval.0 = phi i32 [ %1, %if.then ], [ %5, %land.lhs.true ], [ 0, %if.else ], !dbg !13273
  ret i32 %retval.0, !dbg !13274
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_optimization_node() local_unnamed_addr #5 !dbg !13275 {
entry:
  %0 = load %struct.tree_optimization_option*, %struct.tree_optimization_option** bitcast (%union.tree_node** @cl_optimization_node to %struct.tree_optimization_option**), align 8, !dbg !13281
  %opts = getelementptr inbounds %struct.tree_optimization_option, %struct.tree_optimization_option* %0, i64 0, i32 1, !dbg !13281
  tail call void @cl_optimization_save(%struct.cl_optimization* nonnull %opts) #7, !dbg !13282
  %1 = load %struct.htab*, %struct.htab** @cl_option_hash_table, align 8, !dbg !13283
  %2 = load i8*, i8** bitcast (%union.tree_node** @cl_optimization_node to i8**), align 8, !dbg !13284
  %call = tail call i8** @htab_find_slot(%struct.htab* %1, i8* %2, i32 1) #7, !dbg !13285
  call void @llvm.dbg.value(metadata i8** %call, metadata !13280, metadata !DIExpression()), !dbg !13286
  %3 = bitcast i8** %call to %union.tree_node**, !dbg !13287
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !13287
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !13279, metadata !DIExpression()), !dbg !13286
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !13288
  br i1 %tobool, label %if.then, label %if.end, !dbg !13290

if.then:                                          ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** @cl_optimization_node, align 8, !dbg !13291
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !13279, metadata !DIExpression()), !dbg !13286
  store %union.tree_node* %5, %union.tree_node** %3, align 8, !dbg !13293
  %call1 = tail call %union.tree_node* @make_node_stat(i32 186) #8, !dbg !13294
  store %union.tree_node* %call1, %union.tree_node** @cl_optimization_node, align 8, !dbg !13295
  br label %if.end, !dbg !13296

if.end:                                           ; preds = %entry, %if.then
  %t.0 = phi %union.tree_node* [ %4, %entry ], [ %5, %if.then ], !dbg !13286
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !13279, metadata !DIExpression()), !dbg !13286
  ret %union.tree_node* %t.0, !dbg !13297
}

declare dso_local void @cl_optimization_save(%struct.cl_optimization*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_target_option_node() local_unnamed_addr #5 !dbg !13298 {
entry:
  %0 = load %struct.tree_target_option*, %struct.tree_target_option** bitcast (%union.tree_node** @cl_target_option_node to %struct.tree_target_option**), align 8, !dbg !13302
  %opts = getelementptr inbounds %struct.tree_target_option, %struct.tree_target_option* %0, i64 0, i32 1, !dbg !13302
  tail call void @cl_target_option_save(%struct.cl_target_option* nonnull %opts) #7, !dbg !13303
  %1 = load %struct.htab*, %struct.htab** @cl_option_hash_table, align 8, !dbg !13304
  %2 = load i8*, i8** bitcast (%union.tree_node** @cl_target_option_node to i8**), align 8, !dbg !13305
  %call = tail call i8** @htab_find_slot(%struct.htab* %1, i8* %2, i32 1) #7, !dbg !13306
  call void @llvm.dbg.value(metadata i8** %call, metadata !13301, metadata !DIExpression()), !dbg !13307
  %3 = bitcast i8** %call to %union.tree_node**, !dbg !13308
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !13308
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !13300, metadata !DIExpression()), !dbg !13307
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !13309
  br i1 %tobool, label %if.then, label %if.end, !dbg !13311

if.then:                                          ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** @cl_target_option_node, align 8, !dbg !13312
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !13300, metadata !DIExpression()), !dbg !13307
  store %union.tree_node* %5, %union.tree_node** %3, align 8, !dbg !13314
  %call1 = tail call %union.tree_node* @make_node_stat(i32 187) #8, !dbg !13315
  store %union.tree_node* %call1, %union.tree_node** @cl_target_option_node, align 8, !dbg !13316
  br label %if.end, !dbg !13317

if.end:                                           ; preds = %entry, %if.then
  %t.0 = phi %union.tree_node* [ %4, %entry ], [ %5, %if.then ], !dbg !13307
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !13300, metadata !DIExpression()), !dbg !13307
  ret %union.tree_node* %t.0, !dbg !13318
}

declare dso_local void @cl_target_option_save(%struct.cl_target_option*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @block_ultimate_origin(%union.tree_node* %block) local_unnamed_addr #5 !dbg !13319 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !13321, metadata !DIExpression()), !dbg !13327
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13328
  %0 = bitcast i32* %abstract_origin to %union.tree_node**, !dbg !13328
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !13328
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !13322, metadata !DIExpression()), !dbg !13327
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13329
  %bf.load = load i32, i32* %2, align 8, !dbg !13329
  %bf.clear = and i32 %bf.load, 1, !dbg !13329
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !13329
  %cmp = icmp eq %union.tree_node* %1, %block, !dbg !13331
  %or.cond = and i1 %tobool, %cmp, !dbg !13332
  %cmp3 = icmp eq %union.tree_node* %1, null, !dbg !13333
  %or.cond1 = or i1 %or.cond, %cmp3, !dbg !13332
  br i1 %or.cond1, label %cleanup28, label %do.body.preheader, !dbg !13332

do.body.preheader:                                ; preds = %entry
  br label %do.body, !dbg !13334

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %lookahead.0 = phi %union.tree_node* [ %cond, %do.cond ], [ %1, %do.body.preheader ], !dbg !13335
  call void @llvm.dbg.value(metadata %union.tree_node* %lookahead.0, metadata !13326, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata %union.tree_node* %lookahead.0, metadata !13323, metadata !DIExpression()), !dbg !13335
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %lookahead.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13336
  %bf.load5 = load i64, i64* %3, align 8, !dbg !13336
  %bf.cast2 = and i64 %bf.load5, 65535, !dbg !13338
  %cmp7 = icmp eq i64 %bf.cast2, 4, !dbg !13338
  br i1 %cmp7, label %cond.true, label %do.cond, !dbg !13336

cond.true:                                        ; preds = %do.body
  %abstract_origin9 = getelementptr inbounds %union.tree_node, %union.tree_node* %lookahead.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13339
  %4 = bitcast i32* %abstract_origin9 to %union.tree_node**, !dbg !13339
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !13339
  br label %do.cond, !dbg !13336

do.cond:                                          ; preds = %cond.true, %do.body
  %cond = phi %union.tree_node* [ %5, %cond.true ], [ null, %do.body ], !dbg !13336
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !13326, metadata !DIExpression()), !dbg !13335
  %cmp10 = icmp ne %union.tree_node* %cond, null, !dbg !13340
  %cmp11 = icmp ne %union.tree_node* %cond, %lookahead.0, !dbg !13341
  %spec.select = and i1 %cmp11, %cmp10, !dbg !13342
  br i1 %spec.select, label %do.body, label %do.end, !dbg !13343, !llvm.loop !13344

do.end:                                           ; preds = %do.cond
  %lookahead.0.lcssa = phi %union.tree_node* [ %lookahead.0, %do.cond ], !dbg !13335
  %bf.cast2.lcssa = phi i64 [ %bf.cast2, %do.cond ], !dbg !13338
  call void @llvm.dbg.value(metadata %union.tree_node* %lookahead.0.lcssa, metadata !13326, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata %union.tree_node* %lookahead.0.lcssa, metadata !13326, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata %union.tree_node* %lookahead.0.lcssa, metadata !13326, metadata !DIExpression()), !dbg !13335
  %6 = add nsw i64 %bf.cast2.lcssa, -29, !dbg !13346
  %cmp16 = icmp ult i64 %6, 12, !dbg !13346
  br i1 %cmp16, label %if.then17, label %cleanup28, !dbg !13348

if.then17:                                        ; preds = %do.end
  %abstract_origin18 = getelementptr inbounds %union.tree_node, %union.tree_node* %lookahead.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13349
  %7 = load %union.tree_node*, %union.tree_node** %abstract_origin18, align 8, !dbg !13349
  %tobool19 = icmp eq %union.tree_node* %7, null, !dbg !13349
  br i1 %tobool19, label %cleanup28, label %cond.true20, !dbg !13349

cond.true20:                                      ; preds = %if.then17
  br label %cleanup28, !dbg !13349

cleanup28:                                        ; preds = %if.then17, %cond.true20, %do.end, %entry
  %retval.1 = phi %union.tree_node* [ null, %entry ], [ %7, %cond.true20 ], [ %lookahead.0.lcssa, %if.then17 ], [ %lookahead.0.lcssa, %do.end ], !dbg !13327
  ret %union.tree_node* %retval.1, !dbg !13350
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @list_equal_p(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !13351 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !13353, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !13354, metadata !DIExpression()), !dbg !13355
  br label %for.cond, !dbg !13356

for.cond:                                         ; preds = %for.inc, %entry
  %t2.addr.0 = phi %union.tree_node* [ %t2, %entry ], [ %5, %for.inc ]
  %t1.addr.0 = phi %union.tree_node* [ %t1, %entry ], [ %4, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0, metadata !13353, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0, metadata !13354, metadata !DIExpression()), !dbg !13355
  %tobool = icmp ne %union.tree_node* %t1.addr.0, null, !dbg !13357
  %tobool1 = icmp ne %union.tree_node* %t2.addr.0, null, !dbg !13360
  %spec.select = and i1 %tobool1, %tobool, !dbg !13360
  br i1 %spec.select, label %for.body, label %for.end, !dbg !13361

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13362
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !13362
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13364
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !13364
  %cmp = icmp eq %union.tree_node* %1, %3, !dbg !13365
  br i1 %cmp, label %for.inc, label %return.loopexit, !dbg !13366

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13367
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !13367
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !13353, metadata !DIExpression()), !dbg !13355
  %chain5 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13368
  %5 = load %union.tree_node*, %union.tree_node** %chain5, align 8, !dbg !13368
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !13354, metadata !DIExpression()), !dbg !13355
  br label %for.cond, !dbg !13369, !llvm.loop !13370

for.end:                                          ; preds = %for.cond
  %t2.addr.0.lcssa = phi %union.tree_node* [ %t2.addr.0, %for.cond ]
  %t1.addr.0.lcssa = phi %union.tree_node* [ %t1.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13354, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13353, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13354, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13353, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13354, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13353, metadata !DIExpression()), !dbg !13355
  %tobool6 = icmp eq %union.tree_node* %t1.addr.0.lcssa, null, !dbg !13372
  br i1 %tobool6, label %land.rhs7, label %land.end9, !dbg !13373

land.rhs7:                                        ; preds = %for.end
  %tobool8 = icmp eq %union.tree_node* %t2.addr.0.lcssa, null, !dbg !13374
  %phitmp = zext i1 %tobool8 to i8
  br label %land.end9

land.end9:                                        ; preds = %for.end, %land.rhs7
  %6 = phi i8 [ 0, %for.end ], [ %phitmp, %land.rhs7 ]
  br label %return, !dbg !13375

return.loopexit:                                  ; preds = %for.body
  br label %return, !dbg !13376

return:                                           ; preds = %return.loopexit, %land.end9
  %retval.0 = phi i8 [ %6, %land.end9 ], [ 0, %return.loopexit ], !dbg !13355
  ret i8 %retval.0, !dbg !13376
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tree_nop_conversion(%union.tree_node* %exp) unnamed_addr #0 !dbg !13377 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13379, metadata !DIExpression()), !dbg !13382
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13383
  %bf.load = load i64, i64* %0, align 8, !dbg !13383
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13383
  %cmp = icmp eq i64 %bf.cast1, 116, !dbg !13383
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !13383

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 113, !dbg !13383
  br i1 %cmp5, label %if.end, label %land.lhs.true, !dbg !13385

land.lhs.true:                                    ; preds = %lor.lhs.false
  %cmp10 = icmp eq i64 %bf.cast1, 117, !dbg !13386
  br i1 %cmp10, label %if.end, label %cleanup, !dbg !13387

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13388
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !13388
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13390
  %cmp12 = icmp eq %union.tree_node* %1, %2, !dbg !13391
  br i1 %cmp12, label %cleanup, label %if.end14, !dbg !13392

if.end14:                                         ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13393
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !13393
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13380, metadata !DIExpression()), !dbg !13382
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13394
  %4 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !13394
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !13381, metadata !DIExpression()), !dbg !13382
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13395
  %bf.load21 = load i64, i64* %5, align 8, !dbg !13395
  %bf.cast234 = and i64 %bf.load21, 65535, !dbg !13395
  %cmp24 = icmp eq i64 %bf.cast234, 6, !dbg !13395
  br i1 %cmp24, label %land.lhs.true55, label %lor.lhs.false25, !dbg !13395

lor.lhs.false25:                                  ; preds = %if.end14
  %cmp30 = icmp eq i64 %bf.cast234, 7, !dbg !13395
  br i1 %cmp30, label %land.lhs.true55, label %lor.lhs.false31, !dbg !13395

lor.lhs.false31:                                  ; preds = %lor.lhs.false25
  %cmp36 = icmp eq i64 %bf.cast234, 8, !dbg !13395
  br i1 %cmp36, label %land.lhs.true55, label %lor.lhs.false37, !dbg !13397

lor.lhs.false37:                                  ; preds = %lor.lhs.false31
  %cmp42 = icmp eq i64 %bf.cast234, 10, !dbg !13398
  br i1 %cmp42, label %land.lhs.true55, label %lor.lhs.false43, !dbg !13398

lor.lhs.false43:                                  ; preds = %lor.lhs.false37
  %cmp48 = icmp eq i64 %bf.cast234, 12, !dbg !13398
  br i1 %cmp48, label %land.lhs.true55, label %lor.lhs.false49, !dbg !13399

lor.lhs.false49:                                  ; preds = %lor.lhs.false43
  %cmp54 = icmp eq i64 %bf.cast234, 5, !dbg !13400
  br i1 %cmp54, label %land.lhs.true55, label %if.end101, !dbg !13401

land.lhs.true55:                                  ; preds = %lor.lhs.false49, %lor.lhs.false43, %lor.lhs.false37, %lor.lhs.false31, %lor.lhs.false25, %if.end14
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13402
  %bf.load57 = load i64, i64* %6, align 8, !dbg !13402
  %bf.cast5912 = and i64 %bf.load57, 65535, !dbg !13402
  %cmp60 = icmp eq i64 %bf.cast5912, 6, !dbg !13402
  br i1 %cmp60, label %if.then91, label %lor.lhs.false61, !dbg !13402

lor.lhs.false61:                                  ; preds = %land.lhs.true55
  %cmp66 = icmp eq i64 %bf.cast5912, 7, !dbg !13402
  br i1 %cmp66, label %if.then91, label %lor.lhs.false67, !dbg !13402

lor.lhs.false67:                                  ; preds = %lor.lhs.false61
  %cmp72 = icmp eq i64 %bf.cast5912, 8, !dbg !13402
  br i1 %cmp72, label %if.then91, label %lor.lhs.false73, !dbg !13403

lor.lhs.false73:                                  ; preds = %lor.lhs.false67
  %cmp78 = icmp eq i64 %bf.cast5912, 10, !dbg !13404
  br i1 %cmp78, label %if.then91, label %lor.lhs.false79, !dbg !13404

lor.lhs.false79:                                  ; preds = %lor.lhs.false73
  %cmp84 = icmp eq i64 %bf.cast5912, 12, !dbg !13404
  br i1 %cmp84, label %if.then91, label %lor.lhs.false85, !dbg !13405

lor.lhs.false85:                                  ; preds = %lor.lhs.false79
  %cmp90 = icmp eq i64 %bf.cast5912, 5, !dbg !13406
  br i1 %cmp90, label %if.then91, label %if.end101, !dbg !13407

if.then91:                                        ; preds = %lor.lhs.false85, %lor.lhs.false79, %lor.lhs.false73, %lor.lhs.false67, %lor.lhs.false61, %land.lhs.true55
  %type92 = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !13408
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type92, i64 0, i32 6, !dbg !13408
  %bf.load93 = load i32, i32* %precision, align 4, !dbg !13408
  %type95 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !13409
  %precision96 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type95, i64 0, i32 6, !dbg !13409
  %bf.load97 = load i32, i32* %precision96, align 4, !dbg !13409
  %7 = xor i32 %bf.load93, %bf.load97, !dbg !13410
  %8 = and i32 %7, 1023, !dbg !13410
  %cmp99 = icmp eq i32 %8, 0, !dbg !13410
  br label %cleanup, !dbg !13411

if.end101:                                        ; preds = %lor.lhs.false85, %lor.lhs.false49
  %cmp106 = icmp eq i64 %bf.cast234, 14, !dbg !13412
  br i1 %cmp106, label %cond.true, label %cond.false, !dbg !13412

cond.true:                                        ; preds = %if.end101
  %call = tail call i32 @vector_type_mode(%union.tree_node* %3) #7, !dbg !13412
  br label %cond.end, !dbg !13412

cond.false:                                       ; preds = %if.end101
  %type108 = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !13412
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type108, i64 0, i32 6, !dbg !13412
  %bf.load109 = load i32, i32* %mode, align 4, !dbg !13412
  %bf.lshr = lshr i32 %bf.load109, 16, !dbg !13412
  %bf.clear110 = and i32 %bf.lshr, 255, !dbg !13412
  br label %cond.end, !dbg !13412

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear110, %cond.false ], !dbg !13412
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13413
  %bf.load112 = load i64, i64* %9, align 8, !dbg !13413
  %bf.cast11411 = and i64 %bf.load112, 65535, !dbg !13413
  %cmp115 = icmp eq i64 %bf.cast11411, 14, !dbg !13413
  br i1 %cmp115, label %cond.true117, label %cond.false119, !dbg !13413

cond.true117:                                     ; preds = %cond.end
  %call118 = tail call i32 @vector_type_mode(%union.tree_node* %4) #7, !dbg !13413
  br label %cond.end125, !dbg !13413

cond.false119:                                    ; preds = %cond.end
  %type120 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !13413
  %mode121 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type120, i64 0, i32 6, !dbg !13413
  %bf.load122 = load i32, i32* %mode121, align 4, !dbg !13413
  %bf.lshr123 = lshr i32 %bf.load122, 16, !dbg !13413
  %bf.clear124 = and i32 %bf.lshr123, 255, !dbg !13413
  br label %cond.end125, !dbg !13413

cond.end125:                                      ; preds = %cond.false119, %cond.true117
  %cond126 = phi i32 [ %call118, %cond.true117 ], [ %bf.clear124, %cond.false119 ], !dbg !13413
  %cmp127 = icmp eq i32 %cond, %cond126, !dbg !13414
  br label %cleanup, !dbg !13415

cleanup:                                          ; preds = %land.lhs.true, %if.end, %cond.end125, %if.then91
  %retval.0.shrunk = phi i1 [ %cmp99, %if.then91 ], [ %cmp127, %cond.end125 ], [ false, %land.lhs.true ], [ false, %if.end ]
  %retval.0 = zext i1 %retval.0.shrunk to i8, !dbg !13382
  ret i8 %retval.0, !dbg !13416
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @tree_strip_sign_nop_conversions(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !13417 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13419, metadata !DIExpression()), !dbg !13420
  br label %while.cond, !dbg !13421

while.cond:                                       ; preds = %while.body, %entry
  %exp.addr.0 = phi %union.tree_node* [ %exp, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !13419, metadata !DIExpression()), !dbg !13420
  %call = tail call fastcc zeroext i8 @tree_sign_nop_conversion(%union.tree_node* %exp.addr.0) #8, !dbg !13422
  %tobool = icmp eq i8 %call, 0, !dbg !13421
  br i1 %tobool, label %while.end, label %while.body, !dbg !13421

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13423
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !13423
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13419, metadata !DIExpression()), !dbg !13420
  br label %while.cond, !dbg !13421, !llvm.loop !13424

while.end:                                        ; preds = %while.cond
  %exp.addr.0.lcssa = phi %union.tree_node* [ %exp.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !13419, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !13419, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !13419, metadata !DIExpression()), !dbg !13420
  ret %union.tree_node* %exp.addr.0.lcssa, !dbg !13425
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @tree_sign_nop_conversion(%union.tree_node* %exp) unnamed_addr #5 !dbg !13426 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13428, metadata !DIExpression()), !dbg !13431
  %call = tail call fastcc zeroext i8 @tree_nop_conversion(%union.tree_node* %exp) #8, !dbg !13432
  %tobool = icmp eq i8 %call, 0, !dbg !13432
  br i1 %tobool, label %cleanup, label %if.end, !dbg !13434

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13435
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !13435
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13429, metadata !DIExpression()), !dbg !13431
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13436
  %1 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !13436
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !13436
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !13436
  %3 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !13436
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13430, metadata !DIExpression()), !dbg !13431
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13437
  %bf.load = load i64, i64* %4, align 8, !dbg !13437
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13438
  %bf.load5 = load i64, i64* %5, align 8, !dbg !13438
  %bf.lshr7 = xor i64 %bf.load, %bf.load5, !dbg !13439
  %6 = and i64 %bf.lshr7, 2097152, !dbg !13439
  %cmp = icmp eq i64 %6, 0, !dbg !13439
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13440

land.rhs:                                         ; preds = %if.end
  %bf.cast121 = and i64 %bf.load, 65535, !dbg !13441
  %cmp13 = icmp eq i64 %bf.cast121, 10, !dbg !13441
  br i1 %cmp13, label %lor.end, label %lor.rhs, !dbg !13441

lor.rhs:                                          ; preds = %land.rhs
  %cmp18 = icmp eq i64 %bf.cast121, 12, !dbg !13441
  %phitmp3 = zext i1 %cmp18 to i32, !dbg !13441
  br label %lor.end, !dbg !13441

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %7 = phi i32 [ 1, %land.rhs ], [ %phitmp3, %lor.rhs ]
  %bf.cast224 = and i64 %bf.load5, 65535, !dbg !13442
  %cmp23 = icmp eq i64 %bf.cast224, 10, !dbg !13442
  br i1 %cmp23, label %lor.end30, label %lor.rhs24, !dbg !13442

lor.rhs24:                                        ; preds = %lor.end
  %cmp29 = icmp eq i64 %bf.cast224, 12, !dbg !13442
  %phitmp6 = zext i1 %cmp29 to i32, !dbg !13442
  br label %lor.end30, !dbg !13442

lor.end30:                                        ; preds = %lor.rhs24, %lor.end
  %8 = phi i32 [ 1, %lor.end ], [ %phitmp6, %lor.rhs24 ]
  %cmp32 = icmp eq i32 %7, %8, !dbg !13443
  %phitmp = zext i1 %cmp32 to i8
  br label %land.end

land.end:                                         ; preds = %lor.end30, %if.end
  %9 = phi i8 [ 0, %if.end ], [ %phitmp, %lor.end30 ]
  br label %cleanup, !dbg !13444

cleanup:                                          ; preds = %entry, %land.end
  %retval.0 = phi i8 [ %9, %land.end ], [ 0, %entry ], !dbg !13431
  ret i8 %retval.0, !dbg !13445
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @lhd_gcc_personality() local_unnamed_addr #5 !dbg !13446 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @gcc_eh_personality_decl, align 8, !dbg !13447
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !13447
  br i1 %tobool, label %if.then, label %if.end, !dbg !13449

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @build_personality_function(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.277, i64 0, i64 0)) #7, !dbg !13450
  store %union.tree_node* %call, %union.tree_node** @gcc_eh_personality_decl, align 8, !dbg !13451
  br label %if.end, !dbg !13452

if.end:                                           ; preds = %entry, %if.then
  %1 = phi %union.tree_node* [ %0, %entry ], [ %call, %if.then ], !dbg !13453
  ret %union.tree_node* %1, !dbg !13454
}

declare dso_local %union.tree_node* @build_personality_function(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_type_hash(i8* %x_p) #5 !dbg !13455 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13457, metadata !DIExpression()), !dbg !13460
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13458, metadata !DIExpression()), !dbg !13460
  %cmp = icmp ne i8* %x_p, null, !dbg !13461
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !13461
  %or.cond = and i1 %cmp, %cmp1, !dbg !13461
  br i1 %or.cond, label %land.lhs.true2, label %if.end6, !dbg !13461

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #7, !dbg !13461
  %tobool = icmp eq i32 %call, 0, !dbg !13461
  br i1 %tobool, label %do.body, label %if.end6, !dbg !13463

do.body:                                          ; preds = %land.lhs.true2
  %type = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !13464
  %0 = bitcast i8* %type to %union.tree_node**, !dbg !13464
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !13464
  %cmp3 = icmp eq %union.tree_node* %1, null, !dbg !13464
  br i1 %cmp3, label %if.end6, label %if.then4, !dbg !13468

if.then4:                                         ; preds = %do.body
  %2 = bitcast %union.tree_node* %1 to i8*, !dbg !13468
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %2) #7, !dbg !13464
  br label %if.end6, !dbg !13464

if.end6:                                          ; preds = %do.body, %land.lhs.true2, %if.then4, %entry
  ret void, !dbg !13469
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_m_P9type_hash4htab(i8* %x_p) #5 !dbg !13470 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13472, metadata !DIExpression()), !dbg !13483
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13473, metadata !DIExpression()), !dbg !13483
  %cmp = icmp ne i8* %x_p, null, !dbg !13484
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !13484
  %or.cond = and i1 %cmp, %cmp1, !dbg !13484
  br i1 %or.cond, label %land.lhs.true2, label %if.end22, !dbg !13484

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #7, !dbg !13484
  %tobool = icmp eq i32 %call, 0, !dbg !13484
  br i1 %tobool, label %if.then, label %if.end22, !dbg !13485

if.then:                                          ; preds = %land.lhs.true2
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !13486
  %0 = bitcast i8* %entries to i8***, !dbg !13486
  %1 = load i8**, i8*** %0, align 8, !dbg !13486
  %cmp3 = icmp eq i8** %1, null, !dbg !13487
  br i1 %cmp3, label %if.end22, label %for.cond.preheader, !dbg !13488

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !13489
  %2 = bitcast i8* %size to i64*, !dbg !13489
  br label %for.cond, !dbg !13492

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !13493
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !13494
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !13475, metadata !DIExpression()), !dbg !13493
  %4 = load i64, i64* %2, align 8, !dbg !13495
  %cmp5 = icmp eq i64 %i0.0, %4, !dbg !13496
  br i1 %cmp5, label %do.body11, label %do.body, !dbg !13492

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !13497
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !13497
  %cmp7 = icmp eq i8* %5, null, !dbg !13497
  br i1 %cmp7, label %for.inc, label %if.then8, !dbg !13501

if.then8:                                         ; preds = %do.body
  tail call void @gt_ggc_mx_type_hash(i8* nonnull %5) #8, !dbg !13497
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !13493
  br label %for.inc, !dbg !13497

for.inc:                                          ; preds = %do.body, %if.then8
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then8 ], !dbg !13493
  %inc = add i64 %i0.0, 1, !dbg !13502
  call void @llvm.dbg.value(metadata i64 %inc, metadata !13475, metadata !DIExpression()), !dbg !13493
  br label %for.cond, !dbg !13503, !llvm.loop !13504

do.body11:                                        ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !13493
  call void @llvm.dbg.value(metadata i8** %.lcssa, metadata !13480, metadata !DIExpression()), !dbg !13506
  %switch = icmp ult i8** %.lcssa, inttoptr (i64 2 to i8**), !dbg !13507
  br i1 %switch, label %if.end22, label %if.then16, !dbg !13507

if.then16:                                        ; preds = %do.body11
  %6 = bitcast i8** %.lcssa to i8*, !dbg !13509
  call void @llvm.dbg.value(metadata i8* %6, metadata !13480, metadata !DIExpression()), !dbg !13506
  %call17 = tail call i32 @ggc_set_mark(i8* %6) #7, !dbg !13507
  br label %if.end22, !dbg !13507

if.end22:                                         ; preds = %if.then, %land.lhs.true2, %do.body11, %if.then16, %entry
  ret void, !dbg !13510
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_type_hash(i8* %x_p) #5 !dbg !13511 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13513, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13514, metadata !DIExpression()), !dbg !13515
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_9type_hash, i32 60) #7, !dbg !13516
  %tobool = icmp eq i32 %call, 0, !dbg !13516
  br i1 %tobool, label %if.end3, label %do.body, !dbg !13518

do.body:                                          ; preds = %entry
  %type = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !13519
  %0 = bitcast i8* %type to %union.tree_node**, !dbg !13519
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !13519
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !13519
  br i1 %cmp, label %if.end3, label %if.then1, !dbg !13523

if.then1:                                         ; preds = %do.body
  %2 = bitcast %union.tree_node* %1 to i8*, !dbg !13523
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %2) #7, !dbg !13519
  br label %if.end3, !dbg !13519

if.end3:                                          ; preds = %do.body, %entry, %if.then1
  ret void, !dbg !13524
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_9type_hash(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !13525 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !13530, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13531, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !13532, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !13533, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13534, metadata !DIExpression()), !dbg !13535
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !13536
  br i1 %cmp, label %if.then, label %if.end, !dbg !13538

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13534, metadata !DIExpression()), !dbg !13535
  %type = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !13539
  tail call void %op(i8* nonnull %type, i8* %cookie) #7, !dbg !13540
  br label %if.end, !dbg !13540

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13541
}

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_n_P9type_hash4htab(i8* %x_p) #5 !dbg !13542 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13544, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13545, metadata !DIExpression()), !dbg !13551
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P9type_hash4htab, i32 197) #7, !dbg !13552
  %tobool = icmp eq i32 %call, 0, !dbg !13552
  br i1 %tobool, label %if.end11, label %if.then, !dbg !13553

if.then:                                          ; preds = %entry
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !13554
  %0 = bitcast i8* %entries to i8***, !dbg !13554
  %1 = load i8**, i8*** %0, align 8, !dbg !13554
  %cmp = icmp eq i8** %1, null, !dbg !13555
  br i1 %cmp, label %if.end11, label %for.cond.preheader, !dbg !13556

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !13557
  %2 = bitcast i8* %size to i64*, !dbg !13557
  br label %for.cond, !dbg !13560

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !13561
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !13562
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !13546, metadata !DIExpression()), !dbg !13561
  %4 = load i64, i64* %2, align 8, !dbg !13563
  %cmp2 = icmp eq i64 %i0.0, %4, !dbg !13564
  br i1 %cmp2, label %for.end, label %do.body, !dbg !13560

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !13565
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !13565
  %cmp4 = icmp eq i8* %5, null, !dbg !13565
  br i1 %cmp4, label %for.inc, label %if.then5, !dbg !13569

if.then5:                                         ; preds = %do.body
  tail call void @gt_pch_nx_type_hash(i8* nonnull %5) #8, !dbg !13565
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !13561
  br label %for.inc, !dbg !13565

for.inc:                                          ; preds = %do.body, %if.then5
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then5 ], !dbg !13561
  %inc = add i64 %i0.0, 1, !dbg !13570
  call void @llvm.dbg.value(metadata i64 %inc, metadata !13546, metadata !DIExpression()), !dbg !13561
  br label %for.cond, !dbg !13571, !llvm.loop !13572

for.end:                                          ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !13561
  %6 = bitcast i8** %.lcssa to i8*, !dbg !13574
  %call9 = tail call i32 @gt_pch_note_object(i8* %6, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P9type_hash4htab, i32 217) #7, !dbg !13575
  br label %if.end11, !dbg !13576

if.end11:                                         ; preds = %if.then, %entry, %for.end
  ret void, !dbg !13577
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_P9type_hash4htab(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !13578 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !13580, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13581, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !13582, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !13583, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !13584, metadata !DIExpression()), !dbg !13588
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !13589
  %0 = bitcast i8* %entries to i8***, !dbg !13589
  %1 = load i8**, i8*** %0, align 8, !dbg !13589
  %cmp = icmp eq i8** %1, null, !dbg !13590
  br i1 %cmp, label %if.end10, label %for.cond.preheader, !dbg !13591

for.cond.preheader:                               ; preds = %entry
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !13592
  %2 = bitcast i8* %size to i64*, !dbg !13592
  %3 = bitcast i8* %entries to i8**, !dbg !13595
  br label %for.cond, !dbg !13598

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !13599
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !13585, metadata !DIExpression()), !dbg !13600
  %4 = load i64, i64* %2, align 8, !dbg !13601
  %cmp1 = icmp eq i64 %i0.0, %4, !dbg !13602
  br i1 %cmp1, label %for.end, label %for.body, !dbg !13598

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %3, align 8, !dbg !13603
  %cmp3 = icmp eq i8* %5, %this_obj, !dbg !13604
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !13605

if.then4:                                         ; preds = %for.body
  %6 = bitcast i8* %5 to i8**, !dbg !13605
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %i0.0, !dbg !13606
  %7 = bitcast i8** %arrayidx to i8*, !dbg !13607
  tail call void %op(i8* %7, i8* %cookie) #7, !dbg !13608
  br label %for.inc, !dbg !13608

for.inc:                                          ; preds = %for.body, %if.then4
  %inc = add i64 %i0.0, 1, !dbg !13609
  call void @llvm.dbg.value(metadata i64 %inc, metadata !13585, metadata !DIExpression()), !dbg !13600
  br label %for.cond, !dbg !13610, !llvm.loop !13611

for.end:                                          ; preds = %for.cond
  %cmp6 = icmp eq i8* %x_p, %this_obj, !dbg !13613
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !13615

if.then7:                                         ; preds = %for.end
  tail call void %op(i8* nonnull %entries, i8* %cookie) #7, !dbg !13616
  br label %if.end10, !dbg !13616

if.end10:                                         ; preds = %entry, %for.end, %if.then7
  ret void, !dbg !13617
}

declare dso_local void @gt_ggc_mx_tree_priority_map(i8*) #2

declare dso_local void @gt_pch_nx_tree_priority_map(i8*) #2

declare dso_local void @gt_ggc_mx_tree_map(i8*) #2

declare dso_local void @gt_pch_nx_tree_map(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @type_hash_marked_p(i8* %p) #5 !dbg !13618 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !13620, metadata !DIExpression()), !dbg !13622
  %type1 = getelementptr inbounds i8, i8* %p, i64 8, !dbg !13623
  %0 = bitcast i8* %type1 to %union.tree_node**, !dbg !13623
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !13623
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !13621, metadata !DIExpression()), !dbg !13622
  %2 = bitcast %union.tree_node* %1 to i8*, !dbg !13624
  %call = tail call i32 @ggc_marked_p(i8* %2) #7, !dbg !13625
  %tobool = icmp eq i32 %call, 0, !dbg !13625
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !13626

lor.rhs:                                          ; preds = %entry
  %symtab = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !13627
  %pointer = bitcast %union.tree_node** %symtab to i8**, !dbg !13627
  %3 = load i8*, i8** %pointer, align 8, !dbg !13627
  %tobool3 = icmp ne i8* %3, null, !dbg !13626
  %phitmp = zext i1 %tobool3 to i32, !dbg !13626
  br label %lor.end, !dbg !13626

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i32 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i32 %4, !dbg !13628
}

declare dso_local void @gt_ggc_m_P17tree_priority_map4htab(i8*) #2

declare dso_local void @gt_pch_n_P17tree_priority_map4htab(i8*) #2

declare dso_local void @gt_ggc_m_P8tree_map4htab(i8*) #2

declare dso_local void @gt_pch_n_P8tree_map4htab(i8*) #2

declare dso_local void @gt_ggc_m_P9tree_node4htab(i8*) #2

declare dso_local void @gt_pch_n_P9tree_node4htab(i8*) #2

declare dso_local i8* @vec_gc_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @init_const_call_expr_arg_iterator(%union.tree_node* %exp, %struct.const_call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !13629 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13633, metadata !DIExpression()), !dbg !13635
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !13634, metadata !DIExpression()), !dbg !13635
  %t = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 0, !dbg !13636
  store %union.tree_node* %exp, %union.tree_node** %t, align 8, !dbg !13637
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13638
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !13638
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !13638
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !13638
  %2 = load i64, i64* %low, align 8, !dbg !13638
  %conv = trunc i64 %2 to i32, !dbg !13638
  %sub = add nsw i32 %conv, -3, !dbg !13638
  %n = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !13639
  store i32 %sub, i32* %n, align 8, !dbg !13640
  %i = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !13641
  store i32 0, i32* %i, align 4, !dbg !13642
  ret void, !dbg !13643
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !13644 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !13648, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !13649, metadata !DIExpression()), !dbg !13650
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #8, !dbg !13651
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !13651
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !13651
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !13651

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !13651
  br label %cond.end, !dbg !13651

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !13651
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #8, !dbg !13651
  ret %union.tree_node** %call1, !dbg !13651
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !13652 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !13656, metadata !DIExpression()), !dbg !13659
  call void @llvm.dbg.value(metadata i32 1, metadata !13657, metadata !DIExpression()), !dbg !13659
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !13660
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !13660
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !13660

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !13660
  br label %cond.end, !dbg !13660

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !13660
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #8, !dbg !13660
  %tobool1 = icmp eq i32 %call, 0, !dbg !13660
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !13660
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !13658, metadata !DIExpression()), !dbg !13659
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13660

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !13661
  %2 = load i8*, i8** %1, align 8, !dbg !13661
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #7, !dbg !13661
  store i8* %call3, i8** %1, align 8, !dbg !13661
  br label %if.end, !dbg !13661

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !13660
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !13663 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !13667, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i32 1, metadata !13668, metadata !DIExpression()), !dbg !13669
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !13670
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !13670

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !13670
  %0 = load i32, i32* %alloc, align 4, !dbg !13670
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !13670
  %1 = load i32, i32* %num, align 8, !dbg !13670
  %cmp1 = icmp ne i32 %0, %1, !dbg !13670
  %phitmp = zext i1 %cmp1 to i32, !dbg !13670
  br label %cond.end, !dbg !13670

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13670

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !13670
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local i32 @call_expr_flags(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.cgraph_node* @cgraph_get_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @get_alias_set(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_lang_data_in_cgraph() unnamed_addr #5 !dbg !13671 {
entry:
  %fld = alloca %struct.free_lang_data_d, align 8
  %t = alloca %union.tree_node*, align 8
  %p = alloca %struct.alias_pair*, align 8
  %0 = bitcast %struct.free_lang_data_d* %fld to i8*, !dbg !13888
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #6, !dbg !13888
  %1 = bitcast %union.tree_node** %t to i8*, !dbg !13889
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !13889
  %2 = bitcast %struct.alias_pair** %p to i8*, !dbg !13890
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !13890
  %call = tail call %struct.pointer_set_t* @pointer_set_create() #7, !dbg !13891
  %pset = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 1, !dbg !13892
  store %struct.pointer_set_t* %call, %struct.pointer_set_t** %pset, align 8, !dbg !13893
  %worklist = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 0, !dbg !13894
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %worklist, align 8, !dbg !13895
  %call1 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 100) #8, !dbg !13896
  %decls = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 2, !dbg !13897
  store %struct.VEC_tree_heap* %call1, %struct.VEC_tree_heap** %decls, align 8, !dbg !13898
  %call2 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 100) #8, !dbg !13899
  %types = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 3, !dbg !13900
  store %struct.VEC_tree_heap* %call2, %struct.VEC_tree_heap** %types, align 8, !dbg !13901
  br label %for.cond, !dbg !13902

for.cond:                                         ; preds = %for.body, %entry
  %n.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.body ]
  %n.0 = load %struct.cgraph_node*, %struct.cgraph_node** %n.0.in, align 8, !dbg !13904
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %n.0, metadata !13673, metadata !DIExpression()), !dbg !13905
  %tobool = icmp eq %struct.cgraph_node* %n.0, null, !dbg !13906
  br i1 %tobool, label %for.cond3.preheader, label %for.body, !dbg !13906

for.cond3.preheader:                              ; preds = %for.cond
  br label %for.cond3, !dbg !13907

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !13878, metadata !DIExpression(DW_OP_deref)), !dbg !13905
  call fastcc void @find_decls_types_in_node(%struct.cgraph_node* nonnull %n.0, %struct.free_lang_data_d* nonnull %fld) #8, !dbg !13909
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %n.0, i64 0, i32 3, !dbg !13911
  br label %for.cond, !dbg !13912, !llvm.loop !13913

for.cond3:                                        ; preds = %for.cond3.preheader, %for.body7
  %i.0 = phi i32 [ %inc, %for.body7 ], [ 0, %for.cond3.preheader ], !dbg !13915
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !13880, metadata !DIExpression()), !dbg !13905
  %3 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !13916
  %base = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %3, i64 0, i32 0, !dbg !13916
  call void @llvm.dbg.value(metadata %struct.alias_pair** %p, metadata !13881, metadata !DIExpression(DW_OP_deref)), !dbg !13905
  %call5 = call fastcc i32 @VEC_alias_pair_base_iterate(%struct.VEC_alias_pair_base* %base, i32 %i.0, %struct.alias_pair** nonnull %p) #8, !dbg !13916
  %tobool6 = icmp eq i32 %call5, 0, !dbg !13907
  br i1 %tobool6, label %for.end9, label %for.body7, !dbg !13907

for.body7:                                        ; preds = %for.cond3
  %4 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !13918
  call void @llvm.dbg.value(metadata %struct.alias_pair* %4, metadata !13881, metadata !DIExpression()), !dbg !13905
  %decl = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %4, i64 0, i32 0, !dbg !13919
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !13919
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !13878, metadata !DIExpression(DW_OP_deref)), !dbg !13905
  call fastcc void @find_decls_types(%union.tree_node* %5, %struct.free_lang_data_d* nonnull %fld) #8, !dbg !13920
  %inc = add i32 %i.0, 1, !dbg !13921
  call void @llvm.dbg.value(metadata i32 %inc, metadata !13880, metadata !DIExpression()), !dbg !13905
  br label %for.cond3, !dbg !13922, !llvm.loop !13923

for.end9:                                         ; preds = %for.cond3
  br label %for.cond10, !dbg !13925

for.cond10:                                       ; preds = %for.body12, %for.end9
  %v.0.in = phi %struct.varpool_node** [ @varpool_nodes_queue, %for.end9 ], [ %next_needed, %for.body12 ]
  %v.0 = load %struct.varpool_node*, %struct.varpool_node** %v.0.in, align 8, !dbg !13927
  call void @llvm.dbg.value(metadata %struct.varpool_node* %v.0, metadata !13877, metadata !DIExpression()), !dbg !13905
  %tobool11 = icmp eq %struct.varpool_node* %v.0, null, !dbg !13928
  br i1 %tobool11, label %for.cond15.preheader, label %for.body12, !dbg !13928

for.cond15.preheader:                             ; preds = %for.cond10
  br label %for.cond15, !dbg !13929

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !13878, metadata !DIExpression(DW_OP_deref)), !dbg !13905
  call fastcc void @find_decls_types_in_var(%struct.varpool_node* nonnull %v.0, %struct.free_lang_data_d* nonnull %fld) #8, !dbg !13931
  %next_needed = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %v.0, i64 0, i32 2, !dbg !13933
  br label %for.cond10, !dbg !13934, !llvm.loop !13935

for.cond15:                                       ; preds = %for.cond15.preheader, %for.body26
  %i.1 = phi i32 [ %inc28, %for.body26 ], [ 0, %for.cond15.preheader ], !dbg !13937
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !13880, metadata !DIExpression()), !dbg !13905
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %decls, align 8, !dbg !13938
  %base20 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !13938
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !13879, metadata !DIExpression(DW_OP_deref)), !dbg !13905
  %call24 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base20, i32 %i.1, %union.tree_node** nonnull %t) #8, !dbg !13938
  %tobool25 = icmp eq i32 %call24, 0, !dbg !13929
  br i1 %tobool25, label %for.cond30.preheader, label %for.body26, !dbg !13929

for.cond30.preheader:                             ; preds = %for.cond15
  br label %for.cond30, !dbg !13940

for.body26:                                       ; preds = %for.cond15
  %7 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !13942
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !13879, metadata !DIExpression()), !dbg !13905
  call void @assign_assembler_name_if_neeeded(%union.tree_node* %7) #8, !dbg !13943
  %inc28 = add i32 %i.1, 1, !dbg !13944
  call void @llvm.dbg.value(metadata i32 %inc28, metadata !13880, metadata !DIExpression()), !dbg !13905
  br label %for.cond15, !dbg !13945, !llvm.loop !13946

for.cond30:                                       ; preds = %for.cond30.preheader, %for.body41
  %i.2 = phi i32 [ %inc43, %for.body41 ], [ 0, %for.cond30.preheader ], !dbg !13948
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !13880, metadata !DIExpression()), !dbg !13905
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %decls, align 8, !dbg !13949
  %base35 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !13949
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !13879, metadata !DIExpression(DW_OP_deref)), !dbg !13905
  %call39 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base35, i32 %i.2, %union.tree_node** nonnull %t) #8, !dbg !13949
  %tobool40 = icmp eq i32 %call39, 0, !dbg !13940
  br i1 %tobool40, label %for.cond45.preheader, label %for.body41, !dbg !13940

for.cond45.preheader:                             ; preds = %for.cond30
  br label %for.cond45, !dbg !13951

for.body41:                                       ; preds = %for.cond30
  %9 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !13953
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !13879, metadata !DIExpression()), !dbg !13905
  call fastcc void @free_lang_data_in_decl(%union.tree_node* %9) #8, !dbg !13954
  %inc43 = add i32 %i.2, 1, !dbg !13955
  call void @llvm.dbg.value(metadata i32 %inc43, metadata !13880, metadata !DIExpression()), !dbg !13905
  br label %for.cond30, !dbg !13956, !llvm.loop !13957

for.cond45:                                       ; preds = %for.cond45.preheader, %for.body56
  %i.3 = phi i32 [ %inc58, %for.body56 ], [ 0, %for.cond45.preheader ], !dbg !13959
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !13880, metadata !DIExpression()), !dbg !13905
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %types, align 8, !dbg !13960
  %base50 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !13960
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !13879, metadata !DIExpression(DW_OP_deref)), !dbg !13905
  %call54 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base50, i32 %i.3, %union.tree_node** nonnull %t) #8, !dbg !13960
  %tobool55 = icmp eq i32 %call54, 0, !dbg !13951
  br i1 %tobool55, label %for.end59, label %for.body56, !dbg !13951

for.body56:                                       ; preds = %for.cond45
  %11 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !13962
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !13879, metadata !DIExpression()), !dbg !13905
  call fastcc void @free_lang_data_in_type(%union.tree_node* %11) #8, !dbg !13963
  %inc58 = add i32 %i.3, 1, !dbg !13964
  call void @llvm.dbg.value(metadata i32 %inc58, metadata !13880, metadata !DIExpression()), !dbg !13905
  br label %for.cond45, !dbg !13965, !llvm.loop !13966

for.end59:                                        ; preds = %for.cond45
  %12 = load %struct.pointer_set_t*, %struct.pointer_set_t** %pset, align 8, !dbg !13968
  call void @pointer_set_destroy(%struct.pointer_set_t* %12) #7, !dbg !13969
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %worklist) #8, !dbg !13970
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %decls) #8, !dbg !13971
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %types) #8, !dbg !13972
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !13973
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !13973
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #6, !dbg !13973
  ret void, !dbg !13973
}

declare dso_local i32 @mode_for_size(i32, i32, i32) local_unnamed_addr #2

declare dso_local i8* @lhd_dwarf_name(%union.tree_node*, i32) #2

declare dso_local i8* @gimple_decl_printable_name(%union.tree_node*, i32) #2

declare dso_local void @lhd_set_decl_assembler_name(%union.tree_node*) #2

declare dso_local %union.tree_node* @gimple_fold_obj_type_ref(%union.tree_node*, %union.tree_node*) #2

declare dso_local void @default_diagnostic_starter(%struct.diagnostic_context*, %struct.diagnostic_info*) #2

declare dso_local void @default_diagnostic_finalizer(%struct.diagnostic_context*, %struct.diagnostic_info*) #2

declare dso_local zeroext i8 @default_tree_printer(%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !13974 {
entry:
  call void @llvm.dbg.value(metadata i32 100, metadata !13978, metadata !DIExpression()), !dbg !13979
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 100) #7, !dbg !13980
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !13980
  ret %struct.VEC_tree_heap* %0, !dbg !13980
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_decls_types_in_node(%struct.cgraph_node* %n, %struct.free_lang_data_d* %fld) unnamed_addr #5 !dbg !13981 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp29 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %n, metadata !13985, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !13986, metadata !DIExpression()), !dbg !14019
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %n, i64 0, i32 0, !dbg !14020
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !14020
  tail call fastcc void @find_decls_types(%union.tree_node* %0, %struct.free_lang_data_d* %fld) #8, !dbg !14021
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !14022
  %call = tail call zeroext i8 @gimple_has_body_p(%union.tree_node* %1) #7, !dbg !14024
  %tobool = icmp eq i8 %call, 0, !dbg !14024
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !14025

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !14026
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !14026
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !14026

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !14026
  %cmp2 = icmp eq %struct.function* %3, null, !dbg !14026
  br i1 %cmp2, label %cond.end, label %cond.true, !dbg !14026

cond.true:                                        ; preds = %land.lhs.true, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 4792, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14026
  br label %cond.end, !dbg !14026

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %4 = bitcast %struct.cgraph_node* %n to %struct.tree_function_decl**, !dbg !14027
  %5 = load %struct.tree_function_decl*, %struct.tree_function_decl** %4, align 8, !dbg !14027
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %5, i64 0, i32 1, !dbg !14027
  %6 = load %struct.function*, %struct.function** %f, align 8, !dbg !14027
  call void @llvm.dbg.value(metadata %struct.function* %6, metadata !13988, metadata !DIExpression()), !dbg !14019
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 9, !dbg !14028
  br label %for.cond, !dbg !14030

for.cond:                                         ; preds = %for.body, %cond.end
  %t.0.in = phi %union.tree_node** [ %local_decls, %cond.end ], [ %chain, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !14031
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !13989, metadata !DIExpression()), !dbg !14019
  %tobool4 = icmp eq %union.tree_node* %t.0, null, !dbg !14032
  br i1 %tobool4, label %for.end, label %for.body, !dbg !14032

for.body:                                         ; preds = %for.cond
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14033
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !14033
  tail call fastcc void @find_decls_types(%union.tree_node* %8, %struct.free_lang_data_d* %fld) #8, !dbg !14035
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14036
  br label %for.cond, !dbg !14037, !llvm.loop !14038

for.end:                                          ; preds = %for.cond
  %eh = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 0, !dbg !14040
  %9 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !14040
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %9, i64 0, i32 0, !dbg !14040
  %10 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !14040
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %10, metadata !13990, metadata !DIExpression()), !dbg !14042
  br label %for.cond5, !dbg !14040

for.cond5:                                        ; preds = %for.body7, %for.end
  %r.0 = phi %struct.eh_region_d* [ %10, %for.end ], [ %call9, %for.body7 ], !dbg !14043
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r.0, metadata !13990, metadata !DIExpression()), !dbg !14042
  %cmp6 = icmp eq %struct.eh_region_d* %r.0, null, !dbg !14044
  br i1 %cmp6, label %for.end10, label %for.body7, !dbg !14040

for.body7:                                        ; preds = %for.cond5
  tail call fastcc void @find_decls_types_in_eh_region(%struct.eh_region_d* nonnull %r.0, %struct.free_lang_data_d* %fld) #8, !dbg !14046
  %call9 = tail call fastcc %struct.eh_region_d* @ehr_next(%struct.eh_region_d* nonnull %r.0, %struct.eh_region_d* null) #8, !dbg !14044
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call9, metadata !13990, metadata !DIExpression()), !dbg !14042
  br label %for.cond5, !dbg !14044, !llvm.loop !14047

for.end10:                                        ; preds = %for.cond5
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !14049
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !14049
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 0, !dbg !14049
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !14049
  %13 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !14050
  %14 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !14051
  %15 = bitcast %struct.gimple_stmt_iterator* %tmp29 to i8*, !dbg !14052
  br label %for.cond11, !dbg !14049

for.cond11:                                       ; preds = %for.end46, %for.end10
  %16 = phi %struct.control_flow_graph* [ %11, %for.end10 ], [ %.pre, %for.end46 ], !dbg !14053
  %.pn = phi %struct.basic_block_def* [ %12, %for.end10 ], [ %bb.0, %for.end46 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !14054
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !14054
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !13987, metadata !DIExpression()), !dbg !14019
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %16, i64 0, i32 1, !dbg !14053
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !14053
  %cmp13 = icmp eq %struct.basic_block_def* %bb.0, %17, !dbg !14053
  br i1 %cmp13, label %cleanup.cont.loopexit, label %for.body14, !dbg !14049

for.body14:                                       ; preds = %for.cond11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #6, !dbg !14055
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #6, !dbg !14056
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !14056
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !14056
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #6, !dbg !14056
  br label %for.cond15, !dbg !14057

for.cond15:                                       ; preds = %for.inc27, %for.body14
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !13992, metadata !DIExpression(DW_OP_deref)), !dbg !14050
  %call16 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !14058
  %tobool17 = icmp eq i8 %call16, 0, !dbg !14059
  br i1 %tobool17, label %for.body18, label %for.end28, !dbg !14060

for.body18:                                       ; preds = %for.cond15
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !13992, metadata !DIExpression(DW_OP_deref)), !dbg !14050
  %call19 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !14061
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !14003, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 0, metadata !14002, metadata !DIExpression()), !dbg !14050
  br label %for.cond20, !dbg !14063

for.cond20:                                       ; preds = %for.body23, %for.body18
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body23 ], [ 0, %for.body18 ], !dbg !14064
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !14002, metadata !DIExpression()), !dbg !14050
  %call21 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call19) #8, !dbg !14065
  %18 = zext i32 %call21 to i64, !dbg !14066
  %cmp22 = icmp ult i64 %indvars.iv, %18, !dbg !14066
  br i1 %cmp22, label %for.body23, label %for.inc27, !dbg !14067

for.body23:                                       ; preds = %for.cond20
  %call24 = call fastcc %union.tree_node** @gimple_phi_arg_def_ptr(%union.gimple_statement_d* %call19, i64 %indvars.iv) #8, !dbg !14068
  call void @llvm.dbg.value(metadata %union.tree_node** %call24, metadata !14007, metadata !DIExpression()), !dbg !14069
  %19 = load %union.tree_node*, %union.tree_node** %call24, align 8, !dbg !14070
  call fastcc void @find_decls_types(%union.tree_node* %19, %struct.free_lang_data_d* %fld) #8, !dbg !14071
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !14072
  br label %for.cond20, !dbg !14073, !llvm.loop !14074

for.inc27:                                        ; preds = %for.cond20
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !13992, metadata !DIExpression(DW_OP_deref)), !dbg !14050
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #8, !dbg !14076
  br label %for.cond15, !dbg !14077, !llvm.loop !14078

for.end28:                                        ; preds = %for.cond15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #6, !dbg !14080
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp29, %struct.basic_block_def* %bb.0) #8, !dbg !14080
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %15, i64 24, i1 false), !dbg !14080
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #6, !dbg !14080
  br label %for.cond30, !dbg !14081

for.cond30:                                       ; preds = %for.inc45, %for.end28
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !13992, metadata !DIExpression(DW_OP_deref)), !dbg !14050
  %call31 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !14082
  %tobool32 = icmp eq i8 %call31, 0, !dbg !14083
  br i1 %tobool32, label %for.body34, label %for.end46, !dbg !14084

for.body34:                                       ; preds = %for.cond30
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !13992, metadata !DIExpression(DW_OP_deref)), !dbg !14050
  %call35 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !14085
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call35, metadata !14011, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 0, metadata !14002, metadata !DIExpression()), !dbg !14050
  br label %for.cond36, !dbg !14087

for.cond36:                                       ; preds = %for.body40, %for.body34
  %i.1 = phi i32 [ 0, %for.body34 ], [ %inc43, %for.body40 ], !dbg !14088
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !14002, metadata !DIExpression()), !dbg !14050
  %call37 = call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %call35) #8, !dbg !14089
  %cmp38 = icmp ult i32 %i.1, %call37, !dbg !14090
  br i1 %cmp38, label %for.body40, label %for.inc45, !dbg !14091

for.body40:                                       ; preds = %for.cond36
  %call41 = call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %call35, i32 %i.1) #8, !dbg !14092
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !14015, metadata !DIExpression()), !dbg !14093
  call fastcc void @find_decls_types(%union.tree_node* %call41, %struct.free_lang_data_d* %fld) #8, !dbg !14094
  %inc43 = add i32 %i.1, 1, !dbg !14095
  call void @llvm.dbg.value(metadata i32 %inc43, metadata !14002, metadata !DIExpression()), !dbg !14050
  br label %for.cond36, !dbg !14096, !llvm.loop !14097

for.inc45:                                        ; preds = %for.cond36
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !13992, metadata !DIExpression(DW_OP_deref)), !dbg !14050
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #8, !dbg !14099
  br label %for.cond30, !dbg !14100, !llvm.loop !14101

for.end46:                                        ; preds = %for.cond30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #6, !dbg !14103
  %.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !14053
  br label %for.cond11, !dbg !14053, !llvm.loop !14104

cleanup.cont.loopexit:                            ; preds = %for.cond11
  br label %cleanup.cont, !dbg !14106

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !14106
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_pair_base_iterate(%struct.VEC_alias_pair_base* %vec_, i32 %ix_, %struct.alias_pair** %ptr) unnamed_addr #0 !dbg !14107 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !14120, metadata !DIExpression()), !dbg !14123
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !14121, metadata !DIExpression()), !dbg !14123
  call void @llvm.dbg.value(metadata %struct.alias_pair** %ptr, metadata !14122, metadata !DIExpression()), !dbg !14123
  %tobool = icmp eq %struct.VEC_alias_pair_base* %vec_, null, !dbg !14124
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !14124

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !14124
  %0 = load i32, i32* %num, align 8, !dbg !14124
  %cmp = icmp ugt i32 %0, %ix_, !dbg !14124
  br i1 %cmp, label %if.then, label %if.else, !dbg !14126

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !14127
  %arrayidx = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !14127
  br label %return, !dbg !14127

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !14129

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.alias_pair* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !14131
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !14131
  store %struct.alias_pair* %storemerge, %struct.alias_pair** %ptr, align 8, !dbg !14131
  ret i32 %retval.0, !dbg !14126
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_decls_types(%union.tree_node* %t, %struct.free_lang_data_d* %fld) unnamed_addr #5 !dbg !14132 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !14136, metadata !DIExpression()), !dbg !14138
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !14137, metadata !DIExpression()), !dbg !14138
  %pset = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 1, !dbg !14139
  %0 = bitcast %struct.free_lang_data_d* %fld to i8*, !dbg !14139
  %worklist = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 0, !dbg !14142
  br label %while.body, !dbg !14144

while.body:                                       ; preds = %entry, %cond.end14
  %storemerge = phi %union.tree_node* [ %t, %entry ], [ %call16, %cond.end14 ]
  store %union.tree_node* %storemerge, %union.tree_node** %t.addr, align 8
  %1 = load %struct.pointer_set_t*, %struct.pointer_set_t** %pset, align 8, !dbg !14145
  %.cast = bitcast %union.tree_node* %storemerge to i8*, !dbg !14146
  %call = call i32 @pointer_set_contains(%struct.pointer_set_t* %1, i8* %.cast) #7, !dbg !14147
  %tobool = icmp eq i32 %call, 0, !dbg !14147
  br i1 %tobool, label %if.then, label %if.end, !dbg !14148

if.then:                                          ; preds = %while.body
  %2 = load %struct.pointer_set_t*, %struct.pointer_set_t** %pset, align 8, !dbg !14149
  call void @llvm.dbg.value(metadata %union.tree_node** %t.addr, metadata !14136, metadata !DIExpression(DW_OP_deref)), !dbg !14138
  %call2 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %t.addr, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_decls_types_r, i8* %0, %struct.pointer_set_t* %2, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !14149
  br label %if.end, !dbg !14149

if.end:                                           ; preds = %while.body, %if.then
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %worklist, align 8, !dbg !14150
  %tobool3 = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !14150
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !14150

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !14150
  br label %cond.end, !dbg !14150

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !14150
  %call5 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #8, !dbg !14150
  %cmp = icmp eq i32 %call5, 0, !dbg !14150
  br i1 %cmp, label %while.end, label %if.end7, !dbg !14151

if.end7:                                          ; preds = %cond.end
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %worklist, align 8, !dbg !14152
  %tobool9 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !14152
  br i1 %tobool9, label %cond.end14, label %cond.true10, !dbg !14152

cond.true10:                                      ; preds = %if.end7
  %base12 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !14152
  br label %cond.end14, !dbg !14152

cond.end14:                                       ; preds = %if.end7, %cond.true10
  %cond15 = phi %struct.VEC_tree_base* [ %base12, %cond.true10 ], [ null, %if.end7 ], !dbg !14152
  %call16 = call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %cond15) #8, !dbg !14152
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !14136, metadata !DIExpression()), !dbg !14138
  br label %while.body, !dbg !14144, !llvm.loop !14153

while.end:                                        ; preds = %cond.end
  ret void, !dbg !14155
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_decls_types_in_var(%struct.varpool_node* %v, %struct.free_lang_data_d* %fld) unnamed_addr #5 !dbg !14156 {
entry:
  call void @llvm.dbg.value(metadata %struct.varpool_node* %v, metadata !14160, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !14161, metadata !DIExpression()), !dbg !14162
  %decl = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %v, i64 0, i32 0, !dbg !14163
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !14163
  tail call fastcc void @find_decls_types(%union.tree_node* %0, %struct.free_lang_data_d* %fld) #8, !dbg !14164
  ret void, !dbg !14165
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_lang_data_in_decl(%union.tree_node* %decl) unnamed_addr #5 !dbg !14166 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !14168, metadata !DIExpression()), !dbg !14184
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14185
  %bf.load = load i64, i64* %0, align 8, !dbg !14185
  %bf.cast = and i64 %bf.load, 65535, !dbg !14185
  %1 = add nsw i64 %bf.cast, -29, !dbg !14185
  %cmp = icmp ult i64 %1, 12, !dbg !14185
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !14185

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 4364, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14185
  br label %cond.end, !dbg !14185

cond.end:                                         ; preds = %entry, %cond.true
  %2 = load void (%union.tree_node*)*, void (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 2), align 8, !dbg !14186
  tail call void %2(%union.tree_node* %decl) #7, !dbg !14187
  %bf.load2 = load i64, i64* %0, align 8, !dbg !14188
  %bf.clear21 = and i64 %bf.load2, -1090921693185, !dbg !14189
  store i64 %bf.clear21, i64* %0, align 8, !dbg !14189
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14190
  %3 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !14190
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !14190
  br i1 %tobool, label %if.end, label %if.then, !dbg !14192

if.then:                                          ; preds = %cond.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14193
  store %union.tree_node* null, %union.tree_node** %type, align 8, !dbg !14194
  %bf.load25.pre = load i64, i64* %0, align 8, !dbg !14195
  br label %if.end, !dbg !14193

if.end:                                           ; preds = %cond.end, %if.then
  %bf.load25 = phi i64 [ %bf.clear21, %cond.end ], [ %bf.load25.pre, %if.then ], !dbg !14195
  %bf.cast271 = and i64 %bf.load25, 65535, !dbg !14197
  %cmp28 = icmp eq i64 %bf.cast271, 31, !dbg !14197
  br i1 %cmp28, label %if.end.if.end31_crit_edge, label %if.then29, !dbg !14198

if.end.if.end31_crit_edge:                        ; preds = %if.end
  %context33.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14199
  %.pre = load %union.tree_node*, %union.tree_node** %context33.phi.trans.insert, align 8, !dbg !14201
  br label %if.end31, !dbg !14198

if.then29:                                        ; preds = %if.end
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #8, !dbg !14202
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14203
  store %union.tree_node* %call, %union.tree_node** %context, align 8, !dbg !14204
  br label %if.end31, !dbg !14203

if.end31:                                         ; preds = %if.end.if.end31_crit_edge, %if.then29
  %.pre.pn = phi %union.tree_node* [ %.pre, %if.end.if.end31_crit_edge ], [ %call, %if.then29 ]
  %4 = phi %union.tree_node* [ %.pre, %if.end.if.end31_crit_edge ], [ %call, %if.then29 ], !dbg !14201
  %context33 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14201
  %tobool34 = icmp eq %union.tree_node* %4, null, !dbg !14201
  br i1 %tobool34, label %if.end45, label %land.lhs.true, !dbg !14205

land.lhs.true:                                    ; preds = %if.end31
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14184
  %bf.load38 = load i64, i64* %5, align 8, !dbg !14206
  %bf.cast4016 = and i64 %bf.load38, 65535, !dbg !14207
  %cmp41 = icmp eq i64 %bf.cast4016, 38, !dbg !14207
  br i1 %cmp41, label %if.then42, label %if.end45, !dbg !14208

if.then42:                                        ; preds = %land.lhs.true
  store %union.tree_node* null, %union.tree_node** %context33, align 8, !dbg !14209
  br label %if.end45, !dbg !14210

if.end45:                                         ; preds = %if.end31, %if.then42, %land.lhs.true
  %6 = phi %union.tree_node* [ null, %if.end31 ], [ null, %if.then42 ], [ %4, %land.lhs.true ]
  %bf.load47 = load i64, i64* %0, align 8, !dbg !14211
  %bf.cast492 = and i64 %bf.load47, 65535, !dbg !14212
  %cmp50 = icmp eq i64 %bf.cast492, 32, !dbg !14212
  br i1 %cmp50, label %if.then51, label %if.end81, !dbg !14213

if.then51:                                        ; preds = %if.end45
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !14169, metadata !DIExpression()), !dbg !14214
  %tobool55 = icmp eq %union.tree_node* %6, null, !dbg !14215
  br i1 %tobool55, label %if.end81, label %if.then56, !dbg !14216

if.then56:                                        ; preds = %if.then51
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14217
  %bf.load58 = load i64, i64* %7, align 8, !dbg !14217
  %bf.cast6013 = and i64 %bf.load58, 65535, !dbg !14218
  %cmp61 = icmp eq i64 %bf.cast6013, 29, !dbg !14218
  br i1 %cmp61, label %land.lhs.true62, label %if.end69, !dbg !14220

land.lhs.true62:                                  ; preds = %if.then56
  %abstract_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14221
  %8 = bitcast i40* %abstract_flag to i64*, !dbg !14221
  %bf.load63 = load i64, i64* %8, align 8, !dbg !14221
  %bf.cast6515 = and i64 %bf.load63, 2048, !dbg !14221
  %tobool66 = icmp eq i64 %bf.cast6515, 0, !dbg !14221
  br i1 %tobool66, label %if.end69, label %if.then67, !dbg !14222

if.then67:                                        ; preds = %land.lhs.true62
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14223
  store %union.tree_node* null, %union.tree_node** %initial, align 8, !dbg !14225
  br label %if.end69, !dbg !14226

if.end69:                                         ; preds = %land.lhs.true62, %if.then67, %if.then56
  %bf.cast7414 = and i64 %bf.load47, 67108864, !dbg !14227
  %tobool75 = icmp eq i64 %bf.cast7414, 0, !dbg !14227
  br i1 %tobool75, label %if.end81, label %if.then76, !dbg !14229

if.then76:                                        ; preds = %if.end69
  store %union.tree_node* null, %union.tree_node** %context33, align 8, !dbg !14230
  br label %if.end81, !dbg !14231

if.end81:                                         ; preds = %if.end69, %if.then51, %if.then76, %if.end45
  %cmp86 = icmp eq i64 %bf.cast492, 31, !dbg !14232
  %9 = load i32, i32* @debug_info_level, align 4, !dbg !14234
  %cmp88 = icmp eq i32 %9, 0, !dbg !14235
  %or.cond = and i1 %cmp86, %cmp88, !dbg !14236
  br i1 %or.cond, label %if.then89, label %if.end90, !dbg !14236

if.then89:                                        ; preds = %if.end81
  %fcontext = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !14237
  %10 = bitcast i24* %fcontext to %union.tree_node**, !dbg !14237
  store %union.tree_node* null, %union.tree_node** %10, align 8, !dbg !14238
  br label %if.end90, !dbg !14237

if.end90:                                         ; preds = %if.then89, %if.end81
  %cmp95 = icmp eq i64 %bf.cast492, 29, !dbg !14239
  br i1 %cmp95, label %if.then96, label %if.else, !dbg !14240

if.then96:                                        ; preds = %if.end90
  %call97 = tail call zeroext i8 @gimple_has_body_p(%union.tree_node* %decl) #7, !dbg !14241
  %tobool98 = icmp eq i8 %call97, 0, !dbg !14241
  br i1 %tobool98, label %if.end119, label %if.then99, !dbg !14242

if.then99:                                        ; preds = %if.then96
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !14243
  br label %for.cond, !dbg !14245

for.cond:                                         ; preds = %for.body, %if.then99
  %t.0.in = phi %union.tree_node** [ %arguments, %if.then99 ], [ %chain, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !14246
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !14175, metadata !DIExpression()), !dbg !14247
  %tobool100 = icmp eq %union.tree_node* %t.0, null, !dbg !14248
  br i1 %tobool100, label %for.end, label %for.body, !dbg !14248

for.body:                                         ; preds = %for.cond
  %context102 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14249
  store %union.tree_node* %decl, %union.tree_node** %context102, align 8, !dbg !14251
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14252
  br label %for.cond, !dbg !14253, !llvm.loop !14254

for.end:                                          ; preds = %for.cond
  %call104 = tail call %struct.pointer_set_t* @pointer_set_create() #7, !dbg !14256
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call104, metadata !14180, metadata !DIExpression()), !dbg !14247
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 1, !dbg !14257
  %11 = load %struct.function*, %struct.function** %f, align 8, !dbg !14257
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 9, !dbg !14258
  br label %for.cond105, !dbg !14259

for.cond105:                                      ; preds = %for.body107, %for.end
  %t.1.in = phi %union.tree_node** [ %local_decls, %for.end ], [ %chain115, %for.body107 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !14247
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !14175, metadata !DIExpression()), !dbg !14247
  %tobool106 = icmp eq %union.tree_node* %t.1, null, !dbg !14260
  br i1 %tobool106, label %for.end116, label %for.body107, !dbg !14260

for.body107:                                      ; preds = %for.cond105
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14262
  %13 = bitcast %union.tree_node** %12 to i8**, !dbg !14262
  %14 = load i8*, i8** %13, align 8, !dbg !14262
  %call108 = tail call i32 @pointer_set_insert(%struct.pointer_set_t* %call104, i8* %14) #7, !dbg !14265
  %15 = bitcast %union.tree_node** %12 to %struct.tree_decl_minimal**, !dbg !14266
  %16 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %15, align 8, !dbg !14266
  %context112 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %16, i64 0, i32 4, !dbg !14266
  store %union.tree_node* %decl, %union.tree_node** %context112, align 8, !dbg !14267
  %chain115 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14268
  br label %for.cond105, !dbg !14269, !llvm.loop !14270

for.end116:                                       ; preds = %for.cond105
  %initial118 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14272
  %17 = load %union.tree_node*, %union.tree_node** %initial118, align 8, !dbg !14272
  tail call fastcc void @free_lang_data_in_block(%union.tree_node* %decl, %union.tree_node* %17, %struct.pointer_set_t* %call104) #8, !dbg !14273
  tail call void @pointer_set_destroy(%struct.pointer_set_t* %call104) #7, !dbg !14274
  br label %if.end119, !dbg !14275

if.end119:                                        ; preds = %if.then96, %for.end116
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1, !dbg !14276
  store %union.tree_node* null, %union.tree_node** %saved_tree, align 8, !dbg !14277
  br label %if.end188, !dbg !14278

if.else:                                          ; preds = %if.end90
  br i1 %cmp50, label %if.then126, label %if.else175, !dbg !14279

if.then126:                                       ; preds = %if.else
  %call127 = tail call %union.tree_node* @decl_debug_expr_lookup(%union.tree_node* %decl) #8, !dbg !14280
  call void @llvm.dbg.value(metadata %union.tree_node* %call127, metadata !14181, metadata !DIExpression()), !dbg !14281
  %tobool128 = icmp eq %union.tree_node* %call127, null, !dbg !14282
  br i1 %tobool128, label %if.end150, label %land.lhs.true129, !dbg !14284

land.lhs.true129:                                 ; preds = %if.then126
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14285
  %bf.load131 = load i64, i64* %18, align 8, !dbg !14285
  %bf.cast13310 = and i64 %bf.load131, 65535, !dbg !14286
  %cmp134 = icmp eq i64 %bf.cast13310, 32, !dbg !14286
  br i1 %cmp134, label %land.lhs.true135, label %if.end150, !dbg !14287

land.lhs.true135:                                 ; preds = %land.lhs.true129
  %bf.cast14011 = and i64 %bf.load131, 67108864, !dbg !14288
  %tobool141 = icmp eq i64 %bf.cast14011, 0, !dbg !14288
  br i1 %tobool141, label %land.lhs.true142, label %if.end150, !dbg !14289

land.lhs.true142:                                 ; preds = %land.lhs.true135
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14290
  %19 = bitcast i40* %decl_flag_1 to i64*, !dbg !14290
  %bf.load144 = load i64, i64* %19, align 8, !dbg !14290
  %bf.cast14712 = and i64 %bf.load144, 33554432, !dbg !14290
  %tobool148 = icmp eq i64 %bf.cast14712, 0, !dbg !14290
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !14291

if.then149:                                       ; preds = %land.lhs.true142
  tail call void @decl_debug_expr_insert(%union.tree_node* %decl, %union.tree_node* null) #8, !dbg !14292
  br label %if.end150, !dbg !14292

if.end150:                                        ; preds = %land.lhs.true142, %land.lhs.true135, %if.then126, %if.then149, %land.lhs.true129
  %decl_flag_1152 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14293
  %20 = bitcast i40* %decl_flag_1152 to i64*, !dbg !14293
  %bf.load153 = load i64, i64* %20, align 8, !dbg !14293
  %bf.cast1567 = and i64 %bf.load153, 33554432, !dbg !14293
  %tobool157 = icmp eq i64 %bf.cast1567, 0, !dbg !14293
  br i1 %tobool157, label %if.end188, label %land.lhs.true158, !dbg !14295

land.lhs.true158:                                 ; preds = %if.end150
  %bf.load160 = load i64, i64* %0, align 8, !dbg !14296
  %bf.cast1638 = and i64 %bf.load160, 67108864, !dbg !14296
  %tobool164 = icmp eq i64 %bf.cast1638, 0, !dbg !14296
  br i1 %tobool164, label %if.then171, label %lor.lhs.false, !dbg !14297

lor.lhs.false:                                    ; preds = %land.lhs.true158
  %bf.cast1699 = and i64 %bf.load160, 1048576, !dbg !14298
  %tobool170 = icmp eq i64 %bf.cast1699, 0, !dbg !14298
  br i1 %tobool170, label %if.then171, label %if.end188, !dbg !14299

if.then171:                                       ; preds = %lor.lhs.false, %land.lhs.true158
  %initial173 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14300
  store %union.tree_node* null, %union.tree_node** %initial173, align 8, !dbg !14301
  br label %if.end188, !dbg !14300

if.else175:                                       ; preds = %if.else
  %cmp180 = icmp eq i64 %bf.cast492, 35, !dbg !14302
  br i1 %cmp180, label %if.then181, label %if.end188, !dbg !14304

if.then181:                                       ; preds = %if.else175
  %initial183 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14305
  store %union.tree_node* null, %union.tree_node** %initial183, align 8, !dbg !14307
  store %union.tree_node* null, %union.tree_node** %context33, align 8, !dbg !14308
  br label %if.end188, !dbg !14309

if.end188:                                        ; preds = %lor.lhs.false, %if.end150, %if.then171, %if.then181, %if.else175, %if.end119
  ret void, !dbg !14310
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_lang_data_in_type(%union.tree_node* %type) unnamed_addr #5 !dbg !14311 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !14313, metadata !DIExpression()), !dbg !14328
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14329
  %bf.load = load i64, i64* %0, align 8, !dbg !14329
  %bf.cast = and i64 %bf.load, 65535, !dbg !14329
  %1 = add nsw i64 %bf.cast, -5, !dbg !14329
  %cmp = icmp ult i64 %1, 18, !dbg !14329
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !14329

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 4198, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14329
  br label %cond.end, !dbg !14329

cond.end:                                         ; preds = %entry, %cond.true
  %2 = load void (%union.tree_node*)*, void (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 2), align 8, !dbg !14330
  tail call void %2(%union.tree_node* %type) #7, !dbg !14331
  %bf.load2 = load i64, i64* %0, align 8, !dbg !14332
  %bf.clear21 = and i64 %bf.load2, -1090921693185, !dbg !14333
  store i64 %bf.clear21, i64* %0, align 8, !dbg !14333
  %bf.cast251 = and i64 %bf.load2, 65535, !dbg !14334
  %cmp26 = icmp eq i64 %bf.cast251, 20, !dbg !14334
  br i1 %cmp26, label %if.then, label %if.end68, !dbg !14335

if.then:                                          ; preds = %cond.end
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14336
  %3 = bitcast i32* %values to %union.tree_node**, !dbg !14336
  br label %for.cond, !dbg !14337

for.cond:                                         ; preds = %for.inc, %if.then
  %p.0.in = phi %union.tree_node** [ %3, %if.then ], [ %chain, %for.inc ]
  %p.0 = load %union.tree_node*, %union.tree_node** %p.0.in, align 8, !dbg !14338
  call void @llvm.dbg.value(metadata %union.tree_node* %p.0, metadata !14314, metadata !DIExpression()), !dbg !14339
  %tobool = icmp eq %union.tree_node* %p.0, null, !dbg !14340
  br i1 %tobool, label %if.end68.loopexit, label %for.body, !dbg !14340

for.body:                                         ; preds = %for.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %p.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14341
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !14341
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !14317, metadata !DIExpression()), !dbg !14342
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14343
  %bf.load29 = load i64, i64* %6, align 8, !dbg !14343
  %bf.cast316 = and i64 %bf.load29, 1048576, !dbg !14343
  %tobool32 = icmp eq i64 %bf.cast316, 0, !dbg !14343
  br i1 %tobool32, label %lor.lhs.false, label %if.then39, !dbg !14344

lor.lhs.false:                                    ; preds = %for.body
  %bf.cast377 = and i64 %bf.load29, 524288, !dbg !14345
  %tobool38 = icmp eq i64 %bf.cast377, 0, !dbg !14345
  br i1 %tobool38, label %for.inc, label %if.then39, !dbg !14346

if.then39:                                        ; preds = %lor.lhs.false, %for.body
  %type51 = bitcast %union.tree_node* %5 to %struct.tree_type*, !dbg !14347
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type51, i64 0, i32 6, !dbg !14347
  %bf.load52 = load i32, i32* %restrict_flag, align 4, !dbg !14347
  %7 = lshr i32 %bf.load52, 11, !dbg !14347
  %mul55 = and i32 %7, 4, !dbg !14347
  %8 = lshr i64 %bf.load29, 48, !dbg !14347
  %9 = trunc i64 %8 to i32, !dbg !14347
  %shl = and i32 %9, 65280, !dbg !14347
  %or61 = or i32 %shl, %mul55, !dbg !14347
  call void @llvm.dbg.value(metadata i32 %or61, metadata !14321, metadata !DIExpression()), !dbg !14348
  %call = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %5, i32 %or61) #8, !dbg !14349
  store %union.tree_node* %call, %union.tree_node** %4, align 8, !dbg !14350
  tail call fastcc void @free_lang_data_in_type(%union.tree_node* %call) #8, !dbg !14351
  br label %for.inc, !dbg !14352

for.inc:                                          ; preds = %lor.lhs.false, %if.then39
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %p.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14353
  br label %for.cond, !dbg !14354, !llvm.loop !14355

if.end68.loopexit:                                ; preds = %for.cond
  %bf.load70.pre = load i64, i64* %0, align 8, !dbg !14357
  br label %if.end68, !dbg !14357

if.end68:                                         ; preds = %if.end68.loopexit, %cond.end
  %bf.load82 = phi i64 [ %bf.load70.pre, %if.end68.loopexit ], [ %bf.clear21, %cond.end ], !dbg !14357
  %bf.cast722 = and i64 %bf.load82, 65535, !dbg !14357
  %cmp73 = icmp eq i64 %bf.cast722, 16, !dbg !14357
  br i1 %cmp73, label %if.then86, label %lor.lhs.false74, !dbg !14357

lor.lhs.false74:                                  ; preds = %if.end68
  %cmp79 = icmp eq i64 %bf.cast722, 17, !dbg !14357
  br i1 %cmp79, label %if.then86, label %lor.lhs.false80, !dbg !14357

lor.lhs.false80:                                  ; preds = %lor.lhs.false74
  %cmp85 = icmp eq i64 %bf.cast722, 18, !dbg !14357
  br i1 %cmp85, label %if.then86, label %if.else121, !dbg !14358

if.then86:                                        ; preds = %lor.lhs.false80, %lor.lhs.false74, %if.end68
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !14324, metadata !DIExpression()), !dbg !14359
  %values88 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14360
  %10 = bitcast i32* %values88 to %union.tree_node**, !dbg !14360
  br label %while.cond, !dbg !14361

while.cond:                                       ; preds = %if.end103, %if.then86
  %prev.0 = phi %union.tree_node* [ null, %if.then86 ], [ %prev.1, %if.end103 ], !dbg !14359
  %member.0.in = phi %union.tree_node** [ %10, %if.then86 ], [ %chain105, %if.end103 ]
  %member.0 = load %union.tree_node*, %union.tree_node** %member.0.in, align 8, !dbg !14359
  call void @llvm.dbg.value(metadata %union.tree_node* %member.0, metadata !14327, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0, metadata !14324, metadata !DIExpression()), !dbg !14359
  %tobool89 = icmp eq %union.tree_node* %member.0, null, !dbg !14361
  br i1 %tobool89, label %while.end, label %while.body, !dbg !14361

while.body:                                       ; preds = %while.cond
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %member.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14362
  %bf.load91 = load i64, i64* %11, align 8, !dbg !14362
  %bf.cast935 = and i64 %bf.load91, 65535, !dbg !14365
  %cmp94 = icmp eq i64 %bf.cast935, 31, !dbg !14365
  br i1 %cmp94, label %if.then95, label %if.end103, !dbg !14366

if.then95:                                        ; preds = %while.body
  %tobool96 = icmp eq %union.tree_node* %prev.0, null, !dbg !14367
  br i1 %tobool96, label %if.else, label %if.then97, !dbg !14370

if.then97:                                        ; preds = %if.then95
  %chain99 = getelementptr inbounds %union.tree_node, %union.tree_node* %prev.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14371
  store %union.tree_node* %member.0, %union.tree_node** %chain99, align 8, !dbg !14372
  br label %if.end103, !dbg !14371

if.else:                                          ; preds = %if.then95
  store %union.tree_node* %member.0, %union.tree_node** %10, align 8, !dbg !14373
  br label %if.end103

if.end103:                                        ; preds = %if.then97, %if.else, %while.body
  %prev.1 = phi %union.tree_node* [ %prev.0, %while.body ], [ %member.0, %if.else ], [ %member.0, %if.then97 ], !dbg !14359
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.1, metadata !14324, metadata !DIExpression()), !dbg !14359
  %chain105 = getelementptr inbounds %union.tree_node, %union.tree_node* %member.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14374
  br label %while.cond, !dbg !14361, !llvm.loop !14375

while.end:                                        ; preds = %while.cond
  %prev.0.lcssa = phi %union.tree_node* [ %prev.0, %while.cond ], !dbg !14359
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !14324, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !14324, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0.lcssa, metadata !14324, metadata !DIExpression()), !dbg !14359
  %tobool106 = icmp eq %union.tree_node* %prev.0.lcssa, null, !dbg !14377
  br i1 %tobool106, label %if.else110, label %if.then107, !dbg !14379

if.then107:                                       ; preds = %while.end
  %chain109 = getelementptr inbounds %union.tree_node, %union.tree_node* %prev.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14380
  store %union.tree_node* null, %union.tree_node** %chain109, align 8, !dbg !14381
  br label %if.end113, !dbg !14380

if.else110:                                       ; preds = %while.end
  store %union.tree_node* null, %union.tree_node** %10, align 8, !dbg !14382
  br label %if.end113

if.end113:                                        ; preds = %if.else110, %if.then107
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14383
  %12 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !14383
  store %union.tree_node* null, %union.tree_node** %12, align 8, !dbg !14384
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !14385
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !14385
  %tobool116 = icmp eq %union.tree_node* %14, null, !dbg !14385
  br i1 %tobool116, label %if.end124, label %if.then117, !dbg !14387

if.then117:                                       ; preds = %if.end113
  tail call fastcc void @free_lang_data_in_binfo(%union.tree_node* nonnull %14) #8, !dbg !14388
  br label %if.end124, !dbg !14388

if.else121:                                       ; preds = %lor.lhs.false80
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !14389
  store %union.tree_node* null, %union.tree_node** %15, align 8, !dbg !14391
  br label %if.end124

if.end124:                                        ; preds = %if.end113, %if.then117, %if.else121
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !14392
  %16 = bitcast i24* %context to %union.tree_node**, !dbg !14392
  store %union.tree_node* null, %union.tree_node** %16, align 8, !dbg !14393
  %17 = load i32, i32* @debug_info_level, align 4, !dbg !14394
  %cmp126 = icmp eq i32 %17, 0, !dbg !14396
  br i1 %cmp126, label %if.then127, label %if.end130, !dbg !14397

if.then127:                                       ; preds = %if.end124
  %chain129 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14398
  store %union.tree_node* null, %union.tree_node** %chain129, align 8, !dbg !14399
  br label %if.end130, !dbg !14398

if.end130:                                        ; preds = %if.then127, %if.end124
  ret void, !dbg !14400
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !14401 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !14405, metadata !DIExpression()), !dbg !14406
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !14407
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !14407
  br i1 %tobool, label %if.end, label %if.then, !dbg !14409

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !14409
  tail call void @free(i8* nonnull %1) #7, !dbg !14407
  br label %if.end, !dbg !14407

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !14409
  ret void, !dbg !14409
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_has_body_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @find_decls_types_in_eh_region(%struct.eh_region_d* %r, %struct.free_lang_data_d* %fld) unnamed_addr #5 !dbg !14410 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r, metadata !14414, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !14415, metadata !DIExpression()), !dbg !14420
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 4, !dbg !14421
  %0 = load i32, i32* %type, align 4, !dbg !14421
  switch i32 %0, label %sw.epilog [
    i32 3, label %sw.bb16
    i32 1, label %sw.bb
    i32 2, label %sw.bb4
  ], !dbg !14422

sw.bb:                                            ; preds = %entry
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, !dbg !14423
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !14425
  %1 = bitcast %struct.free_lang_data_d* %fld to i8*, !dbg !14426
  %pset = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 1, !dbg !14426
  br label %for.cond, !dbg !14429

for.cond:                                         ; preds = %for.body, %sw.bb
  %c.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb ], [ %next_catch, %for.body ]
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !14430
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !14416, metadata !DIExpression()), !dbg !14431
  %tobool = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !14432
  br i1 %tobool, label %sw.epilog.loopexit, label %for.body, !dbg !14432

for.body:                                         ; preds = %for.cond
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 2, !dbg !14433
  %2 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !14433
  %call = tail call fastcc %union.tree_node* @get_eh_types_for_runtime(%union.tree_node* %2) #8, !dbg !14434
  store %union.tree_node* %call, %union.tree_node** %type_list, align 8, !dbg !14435
  %3 = load %struct.pointer_set_t*, %struct.pointer_set_t** %pset, align 8, !dbg !14436
  %call3 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %type_list, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_decls_types_r, i8* %1, %struct.pointer_set_t* %3, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !14436
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 0, !dbg !14437
  br label %for.cond, !dbg !14438, !llvm.loop !14439

sw.bb4:                                           ; preds = %entry
  %type_list6 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, i32 0, i32 0, !dbg !14441
  %4 = load %union.tree_node*, %union.tree_node** %type_list6, align 8, !dbg !14441
  %call7 = tail call fastcc %union.tree_node* @get_eh_types_for_runtime(%union.tree_node* %4) #8, !dbg !14442
  store %union.tree_node* %call7, %union.tree_node** %type_list6, align 8, !dbg !14443
  %5 = bitcast %struct.free_lang_data_d* %fld to i8*, !dbg !14444
  %pset14 = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 1, !dbg !14444
  %6 = load %struct.pointer_set_t*, %struct.pointer_set_t** %pset14, align 8, !dbg !14444
  %call15 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %type_list6, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_decls_types_r, i8* %5, %struct.pointer_set_t* %6, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !14444
  br label %sw.epilog, !dbg !14445

sw.bb16:                                          ; preds = %entry
  %failure_decl = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 5, i32 0, i32 0, !dbg !14446
  %7 = bitcast %struct.free_lang_data_d* %fld to i8*, !dbg !14446
  %pset18 = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 1, !dbg !14446
  %8 = load %struct.pointer_set_t*, %struct.pointer_set_t** %pset18, align 8, !dbg !14446
  %call19 = tail call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %failure_decl, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_decls_types_r, i8* %7, %struct.pointer_set_t* %8, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #8, !dbg !14446
  br label %sw.epilog, !dbg !14447

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !14448

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %entry, %sw.bb16, %sw.bb4
  ret void, !dbg !14448
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d* @ehr_next(%struct.eh_region_d* %r, %struct.eh_region_d* %start) unnamed_addr #0 !dbg !14449 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r, metadata !14453, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !14454, metadata !DIExpression()), !dbg !14455
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 1, !dbg !14456
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %inner, align 8, !dbg !14456
  %tobool = icmp eq %struct.eh_region_d* %0, null, !dbg !14458
  br i1 %tobool, label %if.else, label %if.then, !dbg !14459

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %0, metadata !14453, metadata !DIExpression()), !dbg !14455
  br label %return, !dbg !14460

if.else:                                          ; preds = %entry
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 2, !dbg !14461
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer, align 8, !dbg !14461
  %tobool2 = icmp ne %struct.eh_region_d* %1, null, !dbg !14463
  %cmp = icmp ne %struct.eh_region_d* %r, null, !dbg !14464
  %or.cond = and i1 %tobool2, %cmp, !dbg !14465
  br i1 %or.cond, label %if.then3, label %do.body.preheader, !dbg !14465

do.body.preheader:                                ; preds = %if.else
  br label %do.body, !dbg !14466

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %1, metadata !14453, metadata !DIExpression()), !dbg !14455
  br label %return, !dbg !14468

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %r.addr.0 = phi %struct.eh_region_d* [ %2, %do.cond ], [ %r, %do.body.preheader ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r.addr.0, metadata !14453, metadata !DIExpression()), !dbg !14455
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r.addr.0, i64 0, i32 0, !dbg !14469
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !14469
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %2, metadata !14453, metadata !DIExpression()), !dbg !14455
  %cmp6 = icmp eq %struct.eh_region_d* %2, null, !dbg !14471
  br i1 %cmp6, label %return.loopexit, label %do.cond, !dbg !14473

do.cond:                                          ; preds = %do.body
  %next_peer8 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %2, i64 0, i32 2, !dbg !14474
  %3 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer8, align 8, !dbg !14474
  %cmp9 = icmp eq %struct.eh_region_d* %3, null, !dbg !14475
  br i1 %cmp9, label %do.body, label %do.end, !dbg !14476, !llvm.loop !14477

do.end:                                           ; preds = %do.cond
  %.lcssa = phi %struct.eh_region_d* [ %3, %do.cond ], !dbg !14474
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %.lcssa, metadata !14453, metadata !DIExpression()), !dbg !14455
  br label %return

return.loopexit:                                  ; preds = %do.body
  br label %return, !dbg !14479

return:                                           ; preds = %return.loopexit, %if.then, %do.end, %if.then3
  %retval.0 = phi %struct.eh_region_d* [ %0, %if.then ], [ %1, %if.then3 ], [ %.lcssa, %do.end ], [ null, %return.loopexit ], !dbg !14455
  ret %struct.eh_region_d* %retval.0, !dbg !14479
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !14480 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !14484, metadata !DIExpression()), !dbg !14485
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !14486
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !14486
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !14487
  %conv1 = zext i1 %cmp to i8, !dbg !14488
  ret i8 %conv1, !dbg !14489
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !14490 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !14494, metadata !DIExpression()), !dbg !14495
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !14496
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !14496
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !14497
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !14497
  ret %union.gimple_statement_d* %1, !dbg !14498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !14499 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14504, metadata !DIExpression()), !dbg !14505
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !14506
  %0 = load i32, i32* %nargs, align 4, !dbg !14506
  ret i32 %0, !dbg !14507
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_arg_def_ptr(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !14508 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14512, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i64 %index, metadata !14513, metadata !DIExpression()), !dbg !14514
  %conv = trunc i64 %index to i32, !dbg !14515
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #8, !dbg !14516
  %def = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 1, !dbg !14517
  ret %union.tree_node** %def, !dbg !14518
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !14519 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !14524, metadata !DIExpression()), !dbg !14525
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !14526
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !14526
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !14527
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !14527
  %2 = load i64, i64* %1, align 8, !dbg !14527
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !14528
  store i64 %2, i64* %3, align 8, !dbg !14528
  ret void, !dbg !14529
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !14530 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !14534, metadata !DIExpression()), !dbg !14537
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !14535, metadata !DIExpression()), !dbg !14538
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !14539
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !14536, metadata !DIExpression()), !dbg !14537
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !14540
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !14541
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !14542
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !14543
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !14544
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !14545
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !14546
  ret void, !dbg !14547
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !14548 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14550, metadata !DIExpression()), !dbg !14551
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !14552
  %0 = load i32, i32* %num_ops, align 4, !dbg !14552
  ret i32 %0, !dbg !14553
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !14554 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14558, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 %i, metadata !14559, metadata !DIExpression()), !dbg !14560
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !14561
  %tobool = icmp eq i8 %call, 0, !dbg !14561
  br i1 %tobool, label %return, label %if.then, !dbg !14563

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !14564
  %idxprom = zext i32 %i to i64, !dbg !14564
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !14564
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14564
  br label %return, !dbg !14566

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !14567
  ret %union.tree_node* %retval.0, !dbg !14568
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_eh_types_for_runtime(%union.tree_node* %list) unnamed_addr #5 !dbg !14569 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !14571, metadata !DIExpression()), !dbg !14576
  %cmp = icmp eq %union.tree_node* %list, null, !dbg !14577
  br i1 %cmp, label %cleanup, label %if.end, !dbg !14579

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %list, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14580
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !14580
  %call = tail call %union.tree_node* @lookup_type_for_runtime(%union.tree_node* %1) #7, !dbg !14580
  %call2 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %call) #8, !dbg !14580
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !14572, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !14573, metadata !DIExpression()), !dbg !14576
  br label %while.cond, !dbg !14581

while.cond:                                       ; preds = %while.body, %if.end
  %prev.0 = phi %union.tree_node* [ %call2, %if.end ], [ %call6, %while.body ], !dbg !14576
  %list.pn = phi %union.tree_node* [ %list, %if.end ], [ %list.addr.0, %while.body ]
  %list.addr.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %list.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14576
  %list.addr.0 = load %union.tree_node*, %union.tree_node** %list.addr.0.in, align 8, !dbg !14576
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !14571, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0, metadata !14573, metadata !DIExpression()), !dbg !14576
  %tobool = icmp eq %union.tree_node* %list.addr.0, null, !dbg !14581
  br i1 %tobool, label %cleanup.loopexit, label %while.body, !dbg !14581

while.body:                                       ; preds = %while.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %list.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14582
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !14582
  %call5 = tail call %union.tree_node* @lookup_type_for_runtime(%union.tree_node* %3) #7, !dbg !14582
  %call6 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %call5) #8, !dbg !14582
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !14574, metadata !DIExpression()), !dbg !14583
  %chain8 = getelementptr inbounds %union.tree_node, %union.tree_node* %prev.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14584
  store %union.tree_node* %call6, %union.tree_node** %chain8, align 8, !dbg !14585
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !14573, metadata !DIExpression()), !dbg !14576
  br label %while.cond, !dbg !14581, !llvm.loop !14586

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup, !dbg !14588

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %call2, %cleanup.loopexit ], !dbg !14576
  ret %union.tree_node* %retval.0, !dbg !14588
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @find_decls_types_r(%union.tree_node** %tp, i32* %ws, i8* %data) #5 !dbg !14589 {
entry:
  %tem = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !14591, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i32* %ws, metadata !14592, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i8* %data, metadata !14593, metadata !DIExpression()), !dbg !14606
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !14607
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !14594, metadata !DIExpression()), !dbg !14606
  %1 = bitcast i8* %data to %struct.free_lang_data_d*, !dbg !14608
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %1, metadata !14595, metadata !DIExpression()), !dbg !14606
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14609
  %bf.load = load i64, i64* %2, align 8, !dbg !14609
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14611
  %cmp = icmp eq i64 %bf.cast1, 2, !dbg !14611
  br i1 %cmp, label %cleanup, label %if.end, !dbg !14612

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_lang_specific(%union.tree_node* %0) #8, !dbg !14613
  %tobool = icmp eq i8 %call, 0, !dbg !14613
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !14615

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %ws, align 4, !dbg !14616
  br label %cleanup, !dbg !14618

if.end2:                                          ; preds = %if.end
  %bf.load4 = load i64, i64* %2, align 8, !dbg !14619
  %bf.cast6 = and i64 %bf.load4, 65535, !dbg !14619
  %3 = add nsw i64 %bf.cast6, -29, !dbg !14619
  %cmp7 = icmp ult i64 %3, 12, !dbg !14619
  br i1 %cmp7, label %if.then8, label %if.else67, !dbg !14620

if.then8:                                         ; preds = %if.end2
  tail call fastcc void @add_tree_to_fld_list(%union.tree_node* %0, %struct.free_lang_data_d* %1) #8, !dbg !14621
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14623
  %4 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !14623
  tail call fastcc void @fld_worklist_push(%union.tree_node* %4, %struct.free_lang_data_d* %1) #8, !dbg !14624
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14625
  %5 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !14625
  tail call fastcc void @fld_worklist_push(%union.tree_node* %5, %struct.free_lang_data_d* %1) #8, !dbg !14626
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14627
  %6 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !14627
  tail call fastcc void @fld_worklist_push(%union.tree_node* %6, %struct.free_lang_data_d* %1) #8, !dbg !14628
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14629
  %7 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !14629
  tail call fastcc void @fld_worklist_push(%union.tree_node* %7, %struct.free_lang_data_d* %1) #8, !dbg !14630
  %bf.load12 = load i64, i64* %2, align 8, !dbg !14631
  %bf.cast1416 = and i64 %bf.load12, 65535, !dbg !14633
  %cmp15 = icmp eq i64 %bf.cast1416, 35, !dbg !14633
  br i1 %cmp15, label %if.end18, label %if.then16, !dbg !14634

if.then16:                                        ; preds = %if.then8
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14635
  %8 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !14635
  tail call fastcc void @fld_worklist_push(%union.tree_node* %8, %struct.free_lang_data_d* %1) #8, !dbg !14636
  br label %if.end18, !dbg !14636

if.end18:                                         ; preds = %if.then8, %if.then16
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !14637
  %9 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !14637
  tail call fastcc void @fld_worklist_push(%union.tree_node* %9, %struct.free_lang_data_d* %1) #8, !dbg !14638
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !14639
  %10 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8, !dbg !14639
  tail call fastcc void @fld_worklist_push(%union.tree_node* %10, %struct.free_lang_data_d* %1) #8, !dbg !14640
  %bf.load22 = load i64, i64* %2, align 8, !dbg !14641
  %bf.cast2417 = and i64 %bf.load22, 65535, !dbg !14643
  %cmp25 = icmp eq i64 %bf.cast2417, 29, !dbg !14643
  br i1 %cmp25, label %if.then26, label %if.else, !dbg !14644

if.then26:                                        ; preds = %if.end18
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !14645
  %11 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !14645
  tail call fastcc void @fld_worklist_push(%union.tree_node* %11, %struct.free_lang_data_d* %1) #8, !dbg !14647
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 3, !dbg !14648
  %12 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !14648
  tail call fastcc void @fld_worklist_push(%union.tree_node* %12, %struct.free_lang_data_d* %1) #8, !dbg !14649
  br label %if.end59, !dbg !14650

if.else:                                          ; preds = %if.end18
  %cmp32 = icmp eq i64 %bf.cast2417, 35, !dbg !14651
  br i1 %cmp32, label %if.then33, label %if.else37, !dbg !14653

if.then33:                                        ; preds = %if.else
  %arguments35 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !14654
  %13 = load %union.tree_node*, %union.tree_node** %arguments35, align 8, !dbg !14654
  tail call fastcc void @fld_worklist_push(%union.tree_node* %13, %struct.free_lang_data_d* %1) #8, !dbg !14656
  %vindex = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 4, !dbg !14657
  %14 = load %union.tree_node*, %union.tree_node** %vindex, align 8, !dbg !14657
  tail call fastcc void @fld_worklist_push(%union.tree_node* %14, %struct.free_lang_data_d* %1) #8, !dbg !14658
  br label %if.end59, !dbg !14659

if.else37:                                        ; preds = %if.else
  %cmp42 = icmp eq i64 %bf.cast2417, 31, !dbg !14660
  br i1 %cmp42, label %if.then43, label %if.else48, !dbg !14662

if.then43:                                        ; preds = %if.else37
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14663
  %15 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !14663
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !14663
  tail call fastcc void @fld_worklist_push(%union.tree_node* %16, %struct.free_lang_data_d* %1) #8, !dbg !14665
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !14666
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !14666
  tail call fastcc void @fld_worklist_push(%union.tree_node* %18, %struct.free_lang_data_d* %1) #8, !dbg !14667
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !14668
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !14668
  tail call fastcc void @fld_worklist_push(%union.tree_node* %20, %struct.free_lang_data_d* %1) #8, !dbg !14669
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !14670
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !14670
  tail call fastcc void @fld_worklist_push(%union.tree_node* %22, %struct.free_lang_data_d* %1) #8, !dbg !14671
  %fcontext = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !14672
  %23 = bitcast i24* %fcontext to %union.tree_node**, !dbg !14672
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !14672
  tail call fastcc void @fld_worklist_push(%union.tree_node* %24, %struct.free_lang_data_d* %1) #8, !dbg !14673
  br label %if.end59, !dbg !14674

if.else48:                                        ; preds = %if.else37
  %cmp53 = icmp eq i64 %bf.cast2417, 32, !dbg !14675
  br i1 %cmp53, label %if.then54, label %if.end59, !dbg !14677

if.then54:                                        ; preds = %if.else48
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !14678
  %25 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !14678
  tail call fastcc void @fld_worklist_push(%union.tree_node* %25, %struct.free_lang_data_d* %1) #8, !dbg !14680
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !14681
  %26 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !14681
  tail call fastcc void @fld_worklist_push(%union.tree_node* %26, %struct.free_lang_data_d* %1) #8, !dbg !14682
  br label %if.end59, !dbg !14683

if.end59:                                         ; preds = %if.then33, %if.else48, %if.then54, %if.then43, %if.then26
  %bf.load61 = load i64, i64* %2, align 8, !dbg !14684
  %bf.cast6321 = and i64 %bf.load61, 65535, !dbg !14686
  %cmp64 = icmp eq i64 %bf.cast6321, 31, !dbg !14686
  br i1 %cmp64, label %if.end66, label %if.then65, !dbg !14687

if.then65:                                        ; preds = %if.end59
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14688
  %27 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !14688
  tail call fastcc void @fld_worklist_push(%union.tree_node* %27, %struct.free_lang_data_d* %1) #8, !dbg !14689
  br label %if.end66, !dbg !14689

if.end66:                                         ; preds = %if.end59, %if.then65
  store i32 0, i32* %ws, align 4, !dbg !14690
  br label %if.end214, !dbg !14691

if.else67:                                        ; preds = %if.end2
  %28 = add nsw i64 %bf.cast6, -5, !dbg !14692
  %cmp74 = icmp ult i64 %28, 18, !dbg !14692
  br i1 %cmp74, label %if.then75, label %if.end214, !dbg !14693

if.then75:                                        ; preds = %if.else67
  tail call fastcc void @add_tree_to_fld_list(%union.tree_node* %0, %struct.free_lang_data_d* %1) #8, !dbg !14694
  %bf.load77 = load i64, i64* %2, align 8, !dbg !14695
  %bf.cast792 = and i64 %bf.load77, 65535, !dbg !14695
  %cmp80 = icmp eq i64 %bf.cast792, 16, !dbg !14695
  br i1 %cmp80, label %if.end93, label %lor.lhs.false, !dbg !14695

lor.lhs.false:                                    ; preds = %if.then75
  %cmp85 = icmp eq i64 %bf.cast792, 17, !dbg !14695
  br i1 %cmp85, label %if.end93, label %lor.lhs.false86, !dbg !14695

lor.lhs.false86:                                  ; preds = %lor.lhs.false
  %cmp91 = icmp eq i64 %bf.cast792, 18, !dbg !14695
  br i1 %cmp91, label %if.end93, label %if.then92, !dbg !14697

if.then92:                                        ; preds = %lor.lhs.false86
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14698
  %29 = bitcast i32* %values to %union.tree_node**, !dbg !14698
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8, !dbg !14698
  tail call fastcc void @fld_worklist_push(%union.tree_node* %30, %struct.free_lang_data_d* %1) #8, !dbg !14699
  br label %if.end93, !dbg !14699

if.end93:                                         ; preds = %if.then92, %lor.lhs.false86, %lor.lhs.false, %if.then75
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14700
  %32 = load %union.tree_node*, %union.tree_node** %31, align 8, !dbg !14700
  tail call fastcc void @fld_worklist_push(%union.tree_node* %32, %struct.free_lang_data_d* %1) #8, !dbg !14701
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14702
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !14702
  tail call fastcc void @fld_worklist_push(%union.tree_node* %34, %struct.free_lang_data_d* %1) #8, !dbg !14703
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14704
  %36 = load %union.tree_node*, %union.tree_node** %35, align 8, !dbg !14704
  tail call fastcc void @fld_worklist_push(%union.tree_node* %36, %struct.free_lang_data_d* %1) #8, !dbg !14705
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14706
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8, !dbg !14706
  tail call fastcc void @fld_worklist_push(%union.tree_node* %38, %struct.free_lang_data_d* %1) #8, !dbg !14707
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14708
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8, !dbg !14708
  tail call fastcc void @fld_worklist_push(%union.tree_node* %40, %struct.free_lang_data_d* %1) #8, !dbg !14709
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !14710
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !14710
  tail call fastcc void @fld_worklist_push(%union.tree_node* %42, %struct.free_lang_data_d* %1) #8, !dbg !14711
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !14712
  %43 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !14712
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !14712
  tail call fastcc void @fld_worklist_push(%union.tree_node* %44, %struct.free_lang_data_d* %1) #8, !dbg !14713
  %bf.load106 = load i64, i64* %2, align 8, !dbg !14714
  %bf.cast1085 = and i64 %bf.load106, 65535, !dbg !14714
  %cmp109 = icmp eq i64 %bf.cast1085, 16, !dbg !14714
  br i1 %cmp109, label %if.end124, label %lor.lhs.false110, !dbg !14714

lor.lhs.false110:                                 ; preds = %if.end93
  %cmp115 = icmp eq i64 %bf.cast1085, 17, !dbg !14714
  br i1 %cmp115, label %if.end124, label %lor.lhs.false116, !dbg !14714

lor.lhs.false116:                                 ; preds = %lor.lhs.false110
  %cmp121 = icmp eq i64 %bf.cast1085, 18, !dbg !14714
  br i1 %cmp121, label %if.end124, label %if.then122, !dbg !14716

if.then122:                                       ; preds = %lor.lhs.false116
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14717
  %45 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !14717
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8, !dbg !14717
  tail call fastcc void @fld_worklist_push(%union.tree_node* %46, %struct.free_lang_data_d* %1) #8, !dbg !14718
  br label %if.end124, !dbg !14718

if.end124:                                        ; preds = %if.then122, %lor.lhs.false116, %lor.lhs.false110, %if.end93
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !14719
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !14719
  tail call fastcc void @fld_worklist_push(%union.tree_node* %48, %struct.free_lang_data_d* %1) #8, !dbg !14720
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !14721
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8, !dbg !14721
  tail call fastcc void @fld_worklist_push(%union.tree_node* %50, %struct.free_lang_data_d* %1) #8, !dbg !14722
  %context128 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !14723
  %51 = bitcast i24* %context128 to %union.tree_node**, !dbg !14723
  %52 = load %union.tree_node*, %union.tree_node** %51, align 8, !dbg !14723
  tail call fastcc void @fld_worklist_push(%union.tree_node* %52, %struct.free_lang_data_d* %1) #8, !dbg !14724
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1, !dbg !14725
  %54 = load %union.tree_node*, %union.tree_node** %53, align 8, !dbg !14725
  tail call fastcc void @fld_worklist_push(%union.tree_node* %54, %struct.free_lang_data_d* %1) #8, !dbg !14726
  %bf.load131 = load i64, i64* %2, align 8, !dbg !14727
  %bf.cast1338 = and i64 %bf.load131, 65535, !dbg !14727
  %cmp134 = icmp eq i64 %bf.cast1338, 16, !dbg !14727
  br i1 %cmp134, label %land.lhs.true, label %lor.lhs.false135, !dbg !14727

lor.lhs.false135:                                 ; preds = %if.end124
  %cmp140 = icmp eq i64 %bf.cast1338, 17, !dbg !14727
  br i1 %cmp140, label %land.lhs.true, label %lor.lhs.false141, !dbg !14727

lor.lhs.false141:                                 ; preds = %lor.lhs.false135
  %cmp146 = icmp eq i64 %bf.cast1338, 18, !dbg !14727
  br i1 %cmp146, label %land.lhs.true, label %if.end178, !dbg !14728

land.lhs.true:                                    ; preds = %lor.lhs.false141, %lor.lhs.false135, %if.end124
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !14729
  %56 = load %union.tree_node*, %union.tree_node** %55, align 8, !dbg !14729
  %tobool148 = icmp eq %union.tree_node* %56, null, !dbg !14729
  br i1 %tobool148, label %if.end178, label %if.then149, !dbg !14730

if.then149:                                       ; preds = %land.lhs.true
  %57 = bitcast %union.tree_node* %56 to %struct.tree_binfo*, !dbg !14730
  %58 = bitcast %union.tree_node** %tem to i8*, !dbg !14731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #6, !dbg !14731
  call void @llvm.dbg.value(metadata i32 0, metadata !14596, metadata !DIExpression()), !dbg !14732
  %59 = bitcast %union.tree_node** %55 to %struct.tree_binfo**, !dbg !14733
  %60 = bitcast %union.tree_node** %tem to %struct.tree_common**, !dbg !14733
  br label %for.cond, !dbg !14736

for.cond:                                         ; preds = %for.body, %if.then149
  %61 = phi %struct.tree_binfo* [ %57, %if.then149 ], [ %.pre, %for.body ], !dbg !14737
  %i.0 = phi i32 [ 0, %if.then149 ], [ %inc, %for.body ], !dbg !14738
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !14596, metadata !DIExpression()), !dbg !14732
  %base158 = getelementptr inbounds %struct.tree_binfo, %struct.tree_binfo* %61, i64 0, i32 9, i32 0, !dbg !14737
  call void @llvm.dbg.value(metadata %union.tree_node** %tem, metadata !14602, metadata !DIExpression(DW_OP_deref)), !dbg !14732
  %call159 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* nonnull %base158, i32 %i.0, %union.tree_node** nonnull %tem) #8, !dbg !14737
  %tobool160 = icmp eq i32 %call159, 0, !dbg !14739
  br i1 %tobool160, label %for.end, label %for.body, !dbg !14739

for.body:                                         ; preds = %for.cond
  %62 = load %struct.tree_common*, %struct.tree_common** %60, align 8, !dbg !14740
  %type162 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %62, i64 0, i32 2, !dbg !14740
  %63 = load %union.tree_node*, %union.tree_node** %type162, align 8, !dbg !14740
  call fastcc void @fld_worklist_push(%union.tree_node* %63, %struct.free_lang_data_d* %1) #8, !dbg !14741
  %inc = add i32 %i.0, 1, !dbg !14742
  call void @llvm.dbg.value(metadata i32 %inc, metadata !14596, metadata !DIExpression()), !dbg !14732
  %.pre = load %struct.tree_binfo*, %struct.tree_binfo** %59, align 8, !dbg !14737
  br label %for.cond, !dbg !14743, !llvm.loop !14744

for.end:                                          ; preds = %for.cond
  %64 = load %struct.tree_binfo*, %struct.tree_binfo** %59, align 8, !dbg !14746
  %virtuals = getelementptr inbounds %struct.tree_binfo, %struct.tree_binfo* %64, i64 0, i32 3, !dbg !14746
  %65 = bitcast %union.tree_node** %virtuals to i64*, !dbg !14746
  %66 = load i64, i64* %65, align 8, !dbg !14746
  %67 = bitcast %union.tree_node** %tem to i64*, !dbg !14747
  store i64 %66, i64* %67, align 8, !dbg !14747
  call void @llvm.dbg.value(metadata i64 %66, metadata !14602, metadata !DIExpression()), !dbg !14732
  %tobool166 = icmp eq i64 %66, 0, !dbg !14748
  br i1 %tobool166, label %if.end177, label %land.lhs.true167, !dbg !14750

land.lhs.true167:                                 ; preds = %for.end
  %68 = inttoptr i64 %66 to i64*, !dbg !14750
  %bf.load169 = load i64, i64* %68, align 8, !dbg !14751
  %bf.cast17115 = and i64 %bf.load169, 65535, !dbg !14752
  %cmp172 = icmp eq i64 %bf.cast17115, 2, !dbg !14752
  br i1 %cmp172, label %do.body.preheader, label %if.end177, !dbg !14753

do.body.preheader:                                ; preds = %land.lhs.true167
  br label %do.body, !dbg !14754

do.body:                                          ; preds = %do.body.preheader, %do.body
  %.in = phi i64 [ %66, %do.body.preheader ], [ %73, %do.body ]
  %69 = inttoptr i64 %.in to %struct.tree_list*, !dbg !14755
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %69, i64 0, i32 2, !dbg !14755
  %70 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !14755
  call fastcc void @fld_worklist_push(%union.tree_node* %70, %struct.free_lang_data_d* %1) #8, !dbg !14757
  %71 = load %struct.tree_common*, %struct.tree_common** %60, align 8, !dbg !14758
  %chain175 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %71, i64 0, i32 1, !dbg !14758
  %72 = bitcast %union.tree_node** %chain175 to i64*, !dbg !14758
  %73 = load i64, i64* %72, align 8, !dbg !14758
  store i64 %73, i64* %67, align 8, !dbg !14759
  call void @llvm.dbg.value(metadata i64 %73, metadata !14602, metadata !DIExpression()), !dbg !14732
  %tobool176 = icmp eq i64 %73, 0, !dbg !14760
  br i1 %tobool176, label %if.end177.loopexit, label %do.body, !dbg !14760, !llvm.loop !14761

if.end177.loopexit:                               ; preds = %do.body
  br label %if.end177, !dbg !14763

if.end177:                                        ; preds = %if.end177.loopexit, %for.end, %land.lhs.true167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #6, !dbg !14763
  %bf.load180.pre = load i64, i64* %2, align 8, !dbg !14764
  %.pre23 = and i64 %bf.load180.pre, 65535, !dbg !14764
  br label %if.end178, !dbg !14765

if.end178:                                        ; preds = %land.lhs.true, %if.end177, %lor.lhs.false141
  %bf.cast18211.pre-phi = phi i64 [ %bf.cast1338, %land.lhs.true ], [ %.pre23, %if.end177 ], [ %bf.cast1338, %lor.lhs.false141 ], !dbg !14764
  %cmp183 = icmp eq i64 %bf.cast18211.pre-phi, 16, !dbg !14764
  br i1 %cmp183, label %if.then196, label %lor.lhs.false184, !dbg !14764

lor.lhs.false184:                                 ; preds = %if.end178
  %cmp189 = icmp eq i64 %bf.cast18211.pre-phi, 17, !dbg !14764
  br i1 %cmp189, label %if.then196, label %lor.lhs.false190, !dbg !14764

lor.lhs.false190:                                 ; preds = %lor.lhs.false184
  %cmp195 = icmp eq i64 %bf.cast18211.pre-phi, 18, !dbg !14764
  br i1 %cmp195, label %if.then196, label %if.end210, !dbg !14766

if.then196:                                       ; preds = %lor.lhs.false190, %lor.lhs.false184, %if.end178
  %values199 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14767
  %74 = bitcast i32* %values199 to %union.tree_node**, !dbg !14767
  br label %while.cond, !dbg !14768

while.cond:                                       ; preds = %if.end207, %if.then196
  %tem197.0.in = phi %union.tree_node** [ %74, %if.then196 ], [ %chain209, %if.end207 ]
  %tem197.0 = load %union.tree_node*, %union.tree_node** %tem197.0.in, align 8, !dbg !14769
  call void @llvm.dbg.value(metadata %union.tree_node* %tem197.0, metadata !14603, metadata !DIExpression()), !dbg !14769
  %tobool200 = icmp eq %union.tree_node* %tem197.0, null, !dbg !14768
  br i1 %tobool200, label %if.end210.loopexit, label %while.body, !dbg !14768

while.body:                                       ; preds = %while.cond
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem197.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14770
  %bf.load202 = load i64, i64* %75, align 8, !dbg !14770
  %bf.cast20414 = and i64 %bf.load202, 65535, !dbg !14773
  %cmp205 = icmp eq i64 %bf.cast20414, 31, !dbg !14773
  br i1 %cmp205, label %if.then206, label %if.end207, !dbg !14774

if.then206:                                       ; preds = %while.body
  call fastcc void @fld_worklist_push(%union.tree_node* nonnull %tem197.0, %struct.free_lang_data_d* %1) #8, !dbg !14775
  br label %if.end207, !dbg !14775

if.end207:                                        ; preds = %if.then206, %while.body
  %chain209 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem197.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14776
  br label %while.cond, !dbg !14768, !llvm.loop !14777

if.end210.loopexit:                               ; preds = %while.cond
  br label %if.end210, !dbg !14779

if.end210:                                        ; preds = %if.end210.loopexit, %lor.lhs.false190
  %chain212 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14779
  %76 = load %union.tree_node*, %union.tree_node** %chain212, align 8, !dbg !14779
  call fastcc void @fld_worklist_push(%union.tree_node* %76, %struct.free_lang_data_d* %1) #8, !dbg !14780
  store i32 0, i32* %ws, align 4, !dbg !14781
  br label %if.end214, !dbg !14782

if.end214:                                        ; preds = %if.else67, %if.end210, %if.end66
  %type216 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14783
  %77 = load %union.tree_node*, %union.tree_node** %type216, align 8, !dbg !14783
  call fastcc void @fld_worklist_push(%union.tree_node* %77, %struct.free_lang_data_d* %1) #8, !dbg !14784
  br label %cleanup, !dbg !14785

cleanup:                                          ; preds = %entry, %if.end214, %if.then1
  ret %union.tree_node* null, !dbg !14786
}

declare dso_local %union.tree_node* @lookup_type_for_runtime(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_lang_specific(%union.tree_node* %t) unnamed_addr #0 !dbg !14787 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !14789, metadata !DIExpression()), !dbg !14790
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14791
  %bf.load = load i64, i64* %0, align 8, !dbg !14791
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14792
  %cmp = icmp eq i64 %bf.cast1, 22, !dbg !14792
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14793

lor.rhs:                                          ; preds = %entry
  %bf.cast42 = and i64 %bf.load, 65532, !dbg !14794
  %cmp5 = icmp ugt i64 %bf.cast42, 187, !dbg !14794
  %phitmp = zext i1 %cmp5 to i8, !dbg !14793
  br label %lor.end, !dbg !14793

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !14795
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_tree_to_fld_list(%union.tree_node* %t, %struct.free_lang_data_d* %fld) unnamed_addr #5 !dbg !14796 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !14798, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !14799, metadata !DIExpression()), !dbg !14800
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14801
  %bf.load = load i64, i64* %0, align 8, !dbg !14801
  %bf.cast = and i64 %bf.load, 65535, !dbg !14801
  %1 = add nsw i64 %bf.cast, -29, !dbg !14801
  %cmp = icmp ult i64 %1, 12, !dbg !14801
  br i1 %cmp, label %if.then, label %if.else, !dbg !14803

if.then:                                          ; preds = %entry
  %decls = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 2, !dbg !14804
  %call = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %decls, %union.tree_node* %t) #8, !dbg !14804
  %2 = load i32, i32* @debug_info_level, align 4, !dbg !14806
  %cmp1 = icmp ugt i32 %2, 1, !dbg !14808
  br i1 %cmp1, label %if.then2, label %if.end17, !dbg !14809

if.then2:                                         ; preds = %if.then
  tail call fastcc void @save_debug_info_for_decl(%union.tree_node* %t) #8, !dbg !14810
  br label %if.end17, !dbg !14810

if.else:                                          ; preds = %entry
  %3 = add nsw i64 %bf.cast, -5, !dbg !14811
  %cmp9 = icmp ult i64 %3, 18, !dbg !14811
  br i1 %cmp9, label %if.then10, label %if.else15, !dbg !14813

if.then10:                                        ; preds = %if.else
  %types = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 3, !dbg !14814
  %call11 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %types, %union.tree_node* %t) #8, !dbg !14814
  %4 = load i32, i32* @debug_info_level, align 4, !dbg !14816
  %cmp12 = icmp ugt i32 %4, 1, !dbg !14818
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !14819

if.then13:                                        ; preds = %if.then10
  tail call fastcc void @save_debug_info_for_type(%union.tree_node* %t) #8, !dbg !14820
  br label %if.end17, !dbg !14820

if.else15:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 4549, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14821
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.then13, %if.then10, %if.then, %if.then2
  ret void, !dbg !14822
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fld_worklist_push(%union.tree_node* %t, %struct.free_lang_data_d* %fld) unnamed_addr #0 !dbg !14823 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !14825, metadata !DIExpression()), !dbg !14827
  call void @llvm.dbg.value(metadata %struct.free_lang_data_d* %fld, metadata !14826, metadata !DIExpression()), !dbg !14827
  %tobool = icmp eq %union.tree_node* %t, null, !dbg !14828
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !14830

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_lang_specific(%union.tree_node* nonnull %t) #8, !dbg !14831
  %tobool1 = icmp eq i8 %call, 0, !dbg !14831
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !14832

land.lhs.true2:                                   ; preds = %land.lhs.true
  %pset = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 1, !dbg !14833
  %0 = load %struct.pointer_set_t*, %struct.pointer_set_t** %pset, align 8, !dbg !14833
  %1 = bitcast %union.tree_node* %t to i8*, !dbg !14834
  %call3 = tail call i32 @pointer_set_contains(%struct.pointer_set_t* %0, i8* nonnull %1) #7, !dbg !14835
  %tobool4 = icmp eq i32 %call3, 0, !dbg !14835
  br i1 %tobool4, label %if.then, label %if.end, !dbg !14836

if.then:                                          ; preds = %land.lhs.true2
  %worklist = getelementptr inbounds %struct.free_lang_data_d, %struct.free_lang_data_d* %fld, i64 0, i32 0, !dbg !14837
  %call5 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %worklist, %union.tree_node* nonnull %t) #8, !dbg !14837
  br label %if.end, !dbg !14837

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry, %if.then
  ret void, !dbg !14838
}

; Function Attrs: nounwind uwtable
define internal fastcc void @save_debug_info_for_decl(%union.tree_node* %t) unnamed_addr #5 !dbg !14839 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !14841, metadata !DIExpression()), !dbg !14842
  %0 = load i32, i32* @debug_info_level, align 4, !dbg !14843
  %cmp = icmp ugt i32 %0, 1, !dbg !14843
  %tobool = icmp ne %union.tree_node* %t, null, !dbg !14843
  %or.cond = and i1 %cmp, %tobool, !dbg !14843
  br i1 %or.cond, label %land.lhs.true1, label %cond.true, !dbg !14843

land.lhs.true1:                                   ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14843
  %bf.load = load i64, i64* %1, align 8, !dbg !14843
  %bf.cast = and i64 %bf.load, 65535, !dbg !14843
  %2 = add nsw i64 %bf.cast, -29, !dbg !14843
  %cmp2 = icmp ult i64 %2, 12, !dbg !14843
  br i1 %cmp2, label %cond.end, label %cond.true, !dbg !14843

cond.true:                                        ; preds = %land.lhs.true1, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 4510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14843
  br label %cond.end, !dbg !14843

cond.end:                                         ; preds = %land.lhs.true1, %cond.true
  ret void, !dbg !14844
}

; Function Attrs: nounwind uwtable
define internal fastcc void @save_debug_info_for_type(%union.tree_node* %t) unnamed_addr #5 !dbg !14845 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !14847, metadata !DIExpression()), !dbg !14848
  %0 = load i32, i32* @debug_info_level, align 4, !dbg !14849
  %cmp = icmp ugt i32 %0, 1, !dbg !14849
  %tobool = icmp ne %union.tree_node* %t, null, !dbg !14849
  %or.cond = and i1 %cmp, %tobool, !dbg !14849
  br i1 %or.cond, label %land.lhs.true1, label %cond.true, !dbg !14849

land.lhs.true1:                                   ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14849
  %bf.load = load i64, i64* %1, align 8, !dbg !14849
  %bf.cast = and i64 %bf.load, 65535, !dbg !14849
  %2 = add nsw i64 %bf.cast, -5, !dbg !14849
  %cmp2 = icmp ult i64 %2, 18, !dbg !14849
  br i1 %cmp2, label %cond.end, label %cond.true, !dbg !14849

cond.true:                                        ; preds = %land.lhs.true1, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 4524, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14849
  br label %cond.end, !dbg !14849

cond.end:                                         ; preds = %land.lhs.true1, %cond.true
  ret void, !dbg !14850
}

declare dso_local i32 @pointer_set_contains(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !14851 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14856, metadata !DIExpression()), !dbg !14858
  call void @llvm.dbg.value(metadata i32 %index, metadata !14857, metadata !DIExpression()), !dbg !14858
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !14859
  %0 = load i32, i32* %capacity, align 8, !dbg !14859
  %cmp = icmp ult i32 %0, %index, !dbg !14859
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !14859

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.278, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14859
  br label %cond.end, !dbg !14859

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !14860
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !14860
  ret %struct.phi_arg_d* %arrayidx, !dbg !14861
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !14862 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !14869, metadata !DIExpression()), !dbg !14870
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !14871
  %0 = load i32, i32* %flags, align 8, !dbg !14871
  %and = and i32 %0, 512, !dbg !14872
  %tobool = icmp eq i32 %and, 0, !dbg !14872
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !14873

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !14874
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !14874
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !14875
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !14876

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !14877
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !14877
  br label %cond.end, !dbg !14876

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !14876
  ret %struct.gimple_seq_d* %cond, !dbg !14878
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !14879 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !14886, metadata !DIExpression()), !dbg !14887
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !14888
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !14888

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !14889
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !14889
  br label %cond.end, !dbg !14888

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !14888
  ret %struct.gimple_seq_node_d* %cond, !dbg !14890
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !14891 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !14895, metadata !DIExpression()), !dbg !14896
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !14897
  %cmp = icmp eq i32 %call, 0, !dbg !14898
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !14899

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !14900
  %cmp2 = icmp ult i32 %call1, 10, !dbg !14901
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !14902
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !14903 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14907, metadata !DIExpression()), !dbg !14909
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !14910
  %idxprom = zext i32 %call to i64, !dbg !14911
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !14911
  %0 = load i64, i64* %arrayidx, align 8, !dbg !14911
  call void @llvm.dbg.value(metadata i64 %0, metadata !14908, metadata !DIExpression()), !dbg !14909
  %cmp = icmp eq i64 %0, 0, !dbg !14912
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !14912

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.278, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14912
  br label %cond.end, !dbg !14912

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !14913
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !14914
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !14915
  ret %union.tree_node** %2, !dbg !14916
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !14917 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !14921, metadata !DIExpression()), !dbg !14922
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !14923
  %bf.load = load i32, i32* %0, align 8, !dbg !14923
  %bf.clear = and i32 %bf.load, 255, !dbg !14923
  ret i32 %bf.clear, !dbg !14924
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !14925 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14929, metadata !DIExpression()), !dbg !14930
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !14931
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !14932
  ret i32 %call1, !dbg !14933
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !14934 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !14938, metadata !DIExpression()), !dbg !14939
  %idxprom = zext i32 %code to i64, !dbg !14940
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !14940
  %0 = load i32, i32* %arrayidx, align 4, !dbg !14940
  ret i32 %0, !dbg !14941
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !14942 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !14946, metadata !DIExpression()), !dbg !14948
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !14949
  %0 = load i32, i32* %num1, align 8, !dbg !14949
  %dec = add i32 %0, -1, !dbg !14949
  store i32 %dec, i32* %num1, align 8, !dbg !14949
  %idxprom = zext i32 %dec to i64, !dbg !14949
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !14949
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14949
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !14947, metadata !DIExpression()), !dbg !14948
  ret %union.tree_node* %1, !dbg !14949
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_lang_data_in_block(%union.tree_node* %fn, %union.tree_node* %block, %struct.pointer_set_t* %locals) unnamed_addr #5 !dbg !14950 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !14954, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !14955, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %locals, metadata !14956, metadata !DIExpression()), !dbg !14959
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14960
  call void @llvm.dbg.value(metadata %union.tree_node** %0, metadata !14957, metadata !DIExpression()), !dbg !14959
  br label %while.cond, !dbg !14961

while.cond:                                       ; preds = %if.end, %entry
  %tp.0 = phi %union.tree_node** [ %0, %entry ], [ %tp.1, %if.end ], !dbg !14959
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.0, metadata !14957, metadata !DIExpression()), !dbg !14959
  %1 = load %union.tree_node*, %union.tree_node** %tp.0, align 8, !dbg !14962
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !14961
  br i1 %tobool, label %while.end, label %while.body, !dbg !14961

while.body:                                       ; preds = %while.cond
  %2 = bitcast %union.tree_node* %1 to i8*, !dbg !14961
  %call = tail call i32 @pointer_set_contains(%struct.pointer_set_t* %locals, i8* nonnull %2) #7, !dbg !14963
  %tobool2 = icmp eq i32 %call, 0, !dbg !14963
  %3 = bitcast %union.tree_node** %tp.0 to %struct.tree_common**, !dbg !14966
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !14966
  %chain4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 1, !dbg !14966
  br i1 %tobool2, label %if.then, label %if.end, !dbg !14967

if.then:                                          ; preds = %while.body
  %5 = bitcast %union.tree_node** %chain4 to i64*, !dbg !14968
  %6 = load i64, i64* %5, align 8, !dbg !14968
  %7 = bitcast %union.tree_node** %tp.0 to i64*, !dbg !14969
  store i64 %6, i64* %7, align 8, !dbg !14969
  br label %if.end, !dbg !14970

if.end:                                           ; preds = %while.body, %if.then
  %tp.1 = phi %union.tree_node** [ %tp.0, %if.then ], [ %chain4, %while.body ], !dbg !14959
  call void @llvm.dbg.value(metadata %union.tree_node** %tp.1, metadata !14957, metadata !DIExpression()), !dbg !14959
  br label %while.cond, !dbg !14961, !llvm.loop !14971

while.end:                                        ; preds = %while.cond
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %block, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14973
  br label %for.cond, !dbg !14975

for.cond:                                         ; preds = %for.body, %while.end
  %t.0.in = phi %union.tree_node** [ %8, %while.end ], [ %chain8, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !14976
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !14958, metadata !DIExpression()), !dbg !14959
  %tobool6 = icmp eq %union.tree_node* %t.0, null, !dbg !14977
  br i1 %tobool6, label %for.end, label %for.body, !dbg !14977

for.body:                                         ; preds = %for.cond
  tail call fastcc void @free_lang_data_in_block(%union.tree_node* %fn, %union.tree_node* nonnull %t.0, %struct.pointer_set_t* %locals) #8, !dbg !14978
  %chain8 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14980
  br label %for.cond, !dbg !14981, !llvm.loop !14982

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14984
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_lang_data_in_binfo(%union.tree_node* %binfo) unnamed_addr #5 !dbg !14985 {
entry:
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %binfo, metadata !14987, metadata !DIExpression()), !dbg !14990
  %0 = bitcast %union.tree_node** %t to i8*, !dbg !14991
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !14991
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %binfo, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14992
  %bf.load = load i64, i64* %1, align 8, !dbg !14992
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14992
  %cmp = icmp eq i64 %bf.cast1, 149, !dbg !14992
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !14992

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i64 0, i64 0), i32 4181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i64 0, i64 0)) #7, !dbg !14992
  br label %cond.end, !dbg !14992

cond.end:                                         ; preds = %entry, %cond.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %binfo, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14993
  store %union.tree_node* null, %union.tree_node** %2, align 8, !dbg !14994
  %base_accesses = getelementptr inbounds %union.tree_node, %union.tree_node* %binfo, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14995
  %3 = bitcast i40* %base_accesses to %struct.VEC_tree_gc**, !dbg !14995
  store %struct.VEC_tree_gc* null, %struct.VEC_tree_gc** %3, align 8, !dbg !14996
  %inheritance = getelementptr inbounds %union.tree_node, %union.tree_node* %binfo, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14997
  %4 = bitcast i32* %inheritance to %union.tree_node**, !dbg !14997
  store %union.tree_node* null, %union.tree_node** %4, align 8, !dbg !14998
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %binfo, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14999
  store %union.tree_node* null, %union.tree_node** %5, align 8, !dbg !15000
  call void @llvm.dbg.value(metadata i32 0, metadata !14988, metadata !DIExpression()), !dbg !14990
  %base_binfos8 = getelementptr inbounds %union.tree_node, %union.tree_node* %binfo, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !15001
  %base9 = bitcast %union.tree_node** %base_binfos8 to %struct.VEC_tree_base*, !dbg !15001
  br label %for.cond, !dbg !15004

for.cond:                                         ; preds = %for.body, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !15005
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !14988, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !14989, metadata !DIExpression(DW_OP_deref)), !dbg !14990
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* nonnull %base9, i32 %i.0, %union.tree_node** nonnull %t) #8, !dbg !15006
  %tobool13 = icmp eq i32 %call, 0, !dbg !15007
  br i1 %tobool13, label %for.end, label %for.body, !dbg !15007

for.body:                                         ; preds = %for.cond
  %6 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !15008
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !14989, metadata !DIExpression()), !dbg !14990
  call fastcc void @free_lang_data_in_binfo(%union.tree_node* %6) #8, !dbg !15009
  %inc = add i32 %i.0, 1, !dbg !15010
  call void @llvm.dbg.value(metadata i32 %inc, metadata !14988, metadata !DIExpression()), !dbg !14990
  br label %for.cond, !dbg !15011, !llvm.loop !15012

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !15014
  ret void, !dbg !15014
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

declare dso_local i64 @htab_size(%struct.htab*) local_unnamed_addr #2

declare dso_local i64 @htab_elements(%struct.htab*) local_unnamed_addr #2

declare dso_local double @htab_collisions(%struct.htab*) local_unnamed_addr #2

declare dso_local %union.tree_node* @add_builtin_function(i8*, %union.tree_node*, i32, i32, i8*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2925, !2926, !2927}
!llvm.ident = !{!2928}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "tree_code_type", scope: !2, file: !3, line: 69, type: !2923, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1447, globals: !2793, nameTableKind: None)
!3 = !DIFile(filename: "tree.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !20, !148, !155, !349, !355, !360, !365, !383, !390, !397, !419, !456, !463, !639, !1359, !1382, !1421}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code_class", file: !6, line: 58, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "tcc_exceptional", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "tcc_constant", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "tcc_type", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "tcc_declaration", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "tcc_reference", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "tcc_comparison", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "tcc_unary", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "tcc_binary", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "tcc_statement", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "tcc_vl_exp", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "tcc_expression", value: 10, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !21, line: 7, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!22 = !{!23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147}
!23 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!28 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!29 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!30 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!31 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!32 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!33 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!34 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!35 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!36 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!37 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!38 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!39 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!40 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!41 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!42 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!43 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!44 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!45 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!46 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!47 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!48 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!49 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!50 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!51 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!52 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!53 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!54 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!55 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!56 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!57 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!58 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!59 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!60 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!61 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!62 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!63 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!64 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!65 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!66 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!67 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!68 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!69 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!70 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!71 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!72 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!73 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!74 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!75 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!76 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!77 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!78 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!79 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!80 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!81 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!82 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!83 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!84 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!85 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!86 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!87 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!90 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!91 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!92 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!93 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!94 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!95 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!96 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!97 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!98 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!99 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!100 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!101 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!102 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!103 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!104 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!105 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!106 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!107 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!108 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!109 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!133 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!134 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!135 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!136 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!137 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!140 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!144 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!146 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!147 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !149, line: 30, baseType: !7, size: 32, elements: !150)
!149 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!150 = !{!151, !152, !153, !154}
!151 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!154 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !6, line: 39, baseType: !7, size: 32, elements: !156)
!156 = !{!157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348}
!157 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!160 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!161 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!162 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!163 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!164 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!165 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!166 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!167 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!168 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!169 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!170 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!171 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!172 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!173 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!174 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!175 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!176 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!177 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!178 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!179 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!180 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!181 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!182 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!183 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!184 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!185 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!186 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!187 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!188 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!189 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!190 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!191 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!192 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!193 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!194 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!195 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!196 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!197 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!199 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!200 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!201 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!202 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!203 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!204 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!205 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!206 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!207 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!208 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!209 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!210 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!211 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!212 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!213 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!214 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!215 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!216 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!217 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!218 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!219 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!220 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!221 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!222 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!223 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!224 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!225 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!226 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!227 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!229 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!230 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!231 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!232 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!233 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!234 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!235 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!236 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!237 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!238 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!239 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!240 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!241 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!242 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!243 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!244 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!245 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!246 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!248 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!249 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!250 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!251 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!253 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!254 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!255 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!256 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!257 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!258 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!259 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!260 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!261 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!262 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!263 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!264 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!265 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!266 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!267 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!268 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!269 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!270 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!271 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!272 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!273 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!274 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!275 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!276 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!277 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!278 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!279 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!280 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!281 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!282 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!283 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!284 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!285 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!286 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!287 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!288 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!289 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!290 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!291 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!292 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!293 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!294 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!295 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!296 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!297 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!298 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!299 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!300 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!301 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!302 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!303 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!304 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!305 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!306 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!307 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!308 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!309 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!310 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!311 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!312 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!313 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!314 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!315 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!316 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!317 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!318 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!319 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!320 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!321 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!322 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!323 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!324 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!325 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!326 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!328 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!329 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!330 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!331 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!332 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!333 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!334 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!335 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!336 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!337 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!338 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!339 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!340 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!341 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!342 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!343 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!345 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!346 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!347 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!348 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !350, line: 363, baseType: !7, size: 32, elements: !351)
!350 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!351 = !{!352, !353, !354}
!352 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!353 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!354 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!355 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !350, line: 355, baseType: !7, size: 32, elements: !356)
!356 = !{!357, !358, !359}
!357 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!358 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!359 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !361, line: 474, baseType: !7, size: 32, elements: !362)
!361 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!362 = !{!363, !364}
!363 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!364 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !6, line: 280, baseType: !7, size: 32, elements: !366)
!366 = !{!367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382}
!367 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!377 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !6, line: 1817, baseType: !7, size: 32, elements: !384)
!384 = !{!385, !386, !387, !388, !389}
!385 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!388 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!389 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !6, line: 1805, baseType: !7, size: 32, elements: !391)
!391 = !{!392, !393, !394, !395, !396}
!392 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!393 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!394 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!395 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!396 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !398, line: 36, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418}
!400 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!404 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!405 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!406 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!407 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!408 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!409 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!410 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!411 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!412 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!413 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!414 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!415 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!416 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!417 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!418 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!419 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_node_structure_enum", file: !6, line: 630, baseType: !7, size: 32, elements: !420)
!420 = !{!421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455}
!421 = !DIEnumerator(name: "TS_BASE", value: 0, isUnsigned: true)
!422 = !DIEnumerator(name: "TS_COMMON", value: 1, isUnsigned: true)
!423 = !DIEnumerator(name: "TS_INT_CST", value: 2, isUnsigned: true)
!424 = !DIEnumerator(name: "TS_REAL_CST", value: 3, isUnsigned: true)
!425 = !DIEnumerator(name: "TS_FIXED_CST", value: 4, isUnsigned: true)
!426 = !DIEnumerator(name: "TS_VECTOR", value: 5, isUnsigned: true)
!427 = !DIEnumerator(name: "TS_STRING", value: 6, isUnsigned: true)
!428 = !DIEnumerator(name: "TS_COMPLEX", value: 7, isUnsigned: true)
!429 = !DIEnumerator(name: "TS_IDENTIFIER", value: 8, isUnsigned: true)
!430 = !DIEnumerator(name: "TS_DECL_MINIMAL", value: 9, isUnsigned: true)
!431 = !DIEnumerator(name: "TS_DECL_COMMON", value: 10, isUnsigned: true)
!432 = !DIEnumerator(name: "TS_DECL_WRTL", value: 11, isUnsigned: true)
!433 = !DIEnumerator(name: "TS_DECL_NON_COMMON", value: 12, isUnsigned: true)
!434 = !DIEnumerator(name: "TS_DECL_WITH_VIS", value: 13, isUnsigned: true)
!435 = !DIEnumerator(name: "TS_FIELD_DECL", value: 14, isUnsigned: true)
!436 = !DIEnumerator(name: "TS_VAR_DECL", value: 15, isUnsigned: true)
!437 = !DIEnumerator(name: "TS_PARM_DECL", value: 16, isUnsigned: true)
!438 = !DIEnumerator(name: "TS_LABEL_DECL", value: 17, isUnsigned: true)
!439 = !DIEnumerator(name: "TS_RESULT_DECL", value: 18, isUnsigned: true)
!440 = !DIEnumerator(name: "TS_CONST_DECL", value: 19, isUnsigned: true)
!441 = !DIEnumerator(name: "TS_TYPE_DECL", value: 20, isUnsigned: true)
!442 = !DIEnumerator(name: "TS_FUNCTION_DECL", value: 21, isUnsigned: true)
!443 = !DIEnumerator(name: "TS_TYPE", value: 22, isUnsigned: true)
!444 = !DIEnumerator(name: "TS_LIST", value: 23, isUnsigned: true)
!445 = !DIEnumerator(name: "TS_VEC", value: 24, isUnsigned: true)
!446 = !DIEnumerator(name: "TS_EXP", value: 25, isUnsigned: true)
!447 = !DIEnumerator(name: "TS_SSA_NAME", value: 26, isUnsigned: true)
!448 = !DIEnumerator(name: "TS_BLOCK", value: 27, isUnsigned: true)
!449 = !DIEnumerator(name: "TS_BINFO", value: 28, isUnsigned: true)
!450 = !DIEnumerator(name: "TS_STATEMENT_LIST", value: 29, isUnsigned: true)
!451 = !DIEnumerator(name: "TS_CONSTRUCTOR", value: 30, isUnsigned: true)
!452 = !DIEnumerator(name: "TS_OMP_CLAUSE", value: 31, isUnsigned: true)
!453 = !DIEnumerator(name: "TS_OPTIMIZATION", value: 32, isUnsigned: true)
!454 = !DIEnumerator(name: "TS_TARGET_OPTION", value: 33, isUnsigned: true)
!455 = !DIEnumerator(name: "LAST_TS_ENUM", value: 34, isUnsigned: true)
!456 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !457, line: 104, baseType: !7, size: 32, elements: !458)
!457 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!458 = !{!459, !460, !461, !462}
!459 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!460 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!461 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!462 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !464, line: 74, baseType: !7, size: 32, elements: !465)
!464 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!465 = !{!466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!466 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!609 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!610 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!611 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!638 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!639 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "built_in_function", file: !6, line: 220, baseType: !7, size: 32, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358}
!641 = !DIEnumerator(name: "BUILT_IN_ACOS", value: 0, isUnsigned: true)
!642 = !DIEnumerator(name: "BUILT_IN_ACOSF", value: 1, isUnsigned: true)
!643 = !DIEnumerator(name: "BUILT_IN_ACOSH", value: 2, isUnsigned: true)
!644 = !DIEnumerator(name: "BUILT_IN_ACOSHF", value: 3, isUnsigned: true)
!645 = !DIEnumerator(name: "BUILT_IN_ACOSHL", value: 4, isUnsigned: true)
!646 = !DIEnumerator(name: "BUILT_IN_ACOSL", value: 5, isUnsigned: true)
!647 = !DIEnumerator(name: "BUILT_IN_ASIN", value: 6, isUnsigned: true)
!648 = !DIEnumerator(name: "BUILT_IN_ASINF", value: 7, isUnsigned: true)
!649 = !DIEnumerator(name: "BUILT_IN_ASINH", value: 8, isUnsigned: true)
!650 = !DIEnumerator(name: "BUILT_IN_ASINHF", value: 9, isUnsigned: true)
!651 = !DIEnumerator(name: "BUILT_IN_ASINHL", value: 10, isUnsigned: true)
!652 = !DIEnumerator(name: "BUILT_IN_ASINL", value: 11, isUnsigned: true)
!653 = !DIEnumerator(name: "BUILT_IN_ATAN", value: 12, isUnsigned: true)
!654 = !DIEnumerator(name: "BUILT_IN_ATAN2", value: 13, isUnsigned: true)
!655 = !DIEnumerator(name: "BUILT_IN_ATAN2F", value: 14, isUnsigned: true)
!656 = !DIEnumerator(name: "BUILT_IN_ATAN2L", value: 15, isUnsigned: true)
!657 = !DIEnumerator(name: "BUILT_IN_ATANF", value: 16, isUnsigned: true)
!658 = !DIEnumerator(name: "BUILT_IN_ATANH", value: 17, isUnsigned: true)
!659 = !DIEnumerator(name: "BUILT_IN_ATANHF", value: 18, isUnsigned: true)
!660 = !DIEnumerator(name: "BUILT_IN_ATANHL", value: 19, isUnsigned: true)
!661 = !DIEnumerator(name: "BUILT_IN_ATANL", value: 20, isUnsigned: true)
!662 = !DIEnumerator(name: "BUILT_IN_CBRT", value: 21, isUnsigned: true)
!663 = !DIEnumerator(name: "BUILT_IN_CBRTF", value: 22, isUnsigned: true)
!664 = !DIEnumerator(name: "BUILT_IN_CBRTL", value: 23, isUnsigned: true)
!665 = !DIEnumerator(name: "BUILT_IN_CEIL", value: 24, isUnsigned: true)
!666 = !DIEnumerator(name: "BUILT_IN_CEILF", value: 25, isUnsigned: true)
!667 = !DIEnumerator(name: "BUILT_IN_CEILL", value: 26, isUnsigned: true)
!668 = !DIEnumerator(name: "BUILT_IN_COPYSIGN", value: 27, isUnsigned: true)
!669 = !DIEnumerator(name: "BUILT_IN_COPYSIGNF", value: 28, isUnsigned: true)
!670 = !DIEnumerator(name: "BUILT_IN_COPYSIGNL", value: 29, isUnsigned: true)
!671 = !DIEnumerator(name: "BUILT_IN_COS", value: 30, isUnsigned: true)
!672 = !DIEnumerator(name: "BUILT_IN_COSF", value: 31, isUnsigned: true)
!673 = !DIEnumerator(name: "BUILT_IN_COSH", value: 32, isUnsigned: true)
!674 = !DIEnumerator(name: "BUILT_IN_COSHF", value: 33, isUnsigned: true)
!675 = !DIEnumerator(name: "BUILT_IN_COSHL", value: 34, isUnsigned: true)
!676 = !DIEnumerator(name: "BUILT_IN_COSL", value: 35, isUnsigned: true)
!677 = !DIEnumerator(name: "BUILT_IN_DREM", value: 36, isUnsigned: true)
!678 = !DIEnumerator(name: "BUILT_IN_DREMF", value: 37, isUnsigned: true)
!679 = !DIEnumerator(name: "BUILT_IN_DREML", value: 38, isUnsigned: true)
!680 = !DIEnumerator(name: "BUILT_IN_ERF", value: 39, isUnsigned: true)
!681 = !DIEnumerator(name: "BUILT_IN_ERFC", value: 40, isUnsigned: true)
!682 = !DIEnumerator(name: "BUILT_IN_ERFCF", value: 41, isUnsigned: true)
!683 = !DIEnumerator(name: "BUILT_IN_ERFCL", value: 42, isUnsigned: true)
!684 = !DIEnumerator(name: "BUILT_IN_ERFF", value: 43, isUnsigned: true)
!685 = !DIEnumerator(name: "BUILT_IN_ERFL", value: 44, isUnsigned: true)
!686 = !DIEnumerator(name: "BUILT_IN_EXP", value: 45, isUnsigned: true)
!687 = !DIEnumerator(name: "BUILT_IN_EXP10", value: 46, isUnsigned: true)
!688 = !DIEnumerator(name: "BUILT_IN_EXP10F", value: 47, isUnsigned: true)
!689 = !DIEnumerator(name: "BUILT_IN_EXP10L", value: 48, isUnsigned: true)
!690 = !DIEnumerator(name: "BUILT_IN_EXP2", value: 49, isUnsigned: true)
!691 = !DIEnumerator(name: "BUILT_IN_EXP2F", value: 50, isUnsigned: true)
!692 = !DIEnumerator(name: "BUILT_IN_EXP2L", value: 51, isUnsigned: true)
!693 = !DIEnumerator(name: "BUILT_IN_EXPF", value: 52, isUnsigned: true)
!694 = !DIEnumerator(name: "BUILT_IN_EXPL", value: 53, isUnsigned: true)
!695 = !DIEnumerator(name: "BUILT_IN_EXPM1", value: 54, isUnsigned: true)
!696 = !DIEnumerator(name: "BUILT_IN_EXPM1F", value: 55, isUnsigned: true)
!697 = !DIEnumerator(name: "BUILT_IN_EXPM1L", value: 56, isUnsigned: true)
!698 = !DIEnumerator(name: "BUILT_IN_FABS", value: 57, isUnsigned: true)
!699 = !DIEnumerator(name: "BUILT_IN_FABSF", value: 58, isUnsigned: true)
!700 = !DIEnumerator(name: "BUILT_IN_FABSL", value: 59, isUnsigned: true)
!701 = !DIEnumerator(name: "BUILT_IN_FDIM", value: 60, isUnsigned: true)
!702 = !DIEnumerator(name: "BUILT_IN_FDIMF", value: 61, isUnsigned: true)
!703 = !DIEnumerator(name: "BUILT_IN_FDIML", value: 62, isUnsigned: true)
!704 = !DIEnumerator(name: "BUILT_IN_FLOOR", value: 63, isUnsigned: true)
!705 = !DIEnumerator(name: "BUILT_IN_FLOORF", value: 64, isUnsigned: true)
!706 = !DIEnumerator(name: "BUILT_IN_FLOORL", value: 65, isUnsigned: true)
!707 = !DIEnumerator(name: "BUILT_IN_FMA", value: 66, isUnsigned: true)
!708 = !DIEnumerator(name: "BUILT_IN_FMAF", value: 67, isUnsigned: true)
!709 = !DIEnumerator(name: "BUILT_IN_FMAL", value: 68, isUnsigned: true)
!710 = !DIEnumerator(name: "BUILT_IN_FMAX", value: 69, isUnsigned: true)
!711 = !DIEnumerator(name: "BUILT_IN_FMAXF", value: 70, isUnsigned: true)
!712 = !DIEnumerator(name: "BUILT_IN_FMAXL", value: 71, isUnsigned: true)
!713 = !DIEnumerator(name: "BUILT_IN_FMIN", value: 72, isUnsigned: true)
!714 = !DIEnumerator(name: "BUILT_IN_FMINF", value: 73, isUnsigned: true)
!715 = !DIEnumerator(name: "BUILT_IN_FMINL", value: 74, isUnsigned: true)
!716 = !DIEnumerator(name: "BUILT_IN_FMOD", value: 75, isUnsigned: true)
!717 = !DIEnumerator(name: "BUILT_IN_FMODF", value: 76, isUnsigned: true)
!718 = !DIEnumerator(name: "BUILT_IN_FMODL", value: 77, isUnsigned: true)
!719 = !DIEnumerator(name: "BUILT_IN_FREXP", value: 78, isUnsigned: true)
!720 = !DIEnumerator(name: "BUILT_IN_FREXPF", value: 79, isUnsigned: true)
!721 = !DIEnumerator(name: "BUILT_IN_FREXPL", value: 80, isUnsigned: true)
!722 = !DIEnumerator(name: "BUILT_IN_GAMMA", value: 81, isUnsigned: true)
!723 = !DIEnumerator(name: "BUILT_IN_GAMMAF", value: 82, isUnsigned: true)
!724 = !DIEnumerator(name: "BUILT_IN_GAMMAL", value: 83, isUnsigned: true)
!725 = !DIEnumerator(name: "BUILT_IN_GAMMA_R", value: 84, isUnsigned: true)
!726 = !DIEnumerator(name: "BUILT_IN_GAMMAF_R", value: 85, isUnsigned: true)
!727 = !DIEnumerator(name: "BUILT_IN_GAMMAL_R", value: 86, isUnsigned: true)
!728 = !DIEnumerator(name: "BUILT_IN_HUGE_VAL", value: 87, isUnsigned: true)
!729 = !DIEnumerator(name: "BUILT_IN_HUGE_VALF", value: 88, isUnsigned: true)
!730 = !DIEnumerator(name: "BUILT_IN_HUGE_VALL", value: 89, isUnsigned: true)
!731 = !DIEnumerator(name: "BUILT_IN_HYPOT", value: 90, isUnsigned: true)
!732 = !DIEnumerator(name: "BUILT_IN_HYPOTF", value: 91, isUnsigned: true)
!733 = !DIEnumerator(name: "BUILT_IN_HYPOTL", value: 92, isUnsigned: true)
!734 = !DIEnumerator(name: "BUILT_IN_ILOGB", value: 93, isUnsigned: true)
!735 = !DIEnumerator(name: "BUILT_IN_ILOGBF", value: 94, isUnsigned: true)
!736 = !DIEnumerator(name: "BUILT_IN_ILOGBL", value: 95, isUnsigned: true)
!737 = !DIEnumerator(name: "BUILT_IN_INF", value: 96, isUnsigned: true)
!738 = !DIEnumerator(name: "BUILT_IN_INFF", value: 97, isUnsigned: true)
!739 = !DIEnumerator(name: "BUILT_IN_INFL", value: 98, isUnsigned: true)
!740 = !DIEnumerator(name: "BUILT_IN_INFD32", value: 99, isUnsigned: true)
!741 = !DIEnumerator(name: "BUILT_IN_INFD64", value: 100, isUnsigned: true)
!742 = !DIEnumerator(name: "BUILT_IN_INFD128", value: 101, isUnsigned: true)
!743 = !DIEnumerator(name: "BUILT_IN_J0", value: 102, isUnsigned: true)
!744 = !DIEnumerator(name: "BUILT_IN_J0F", value: 103, isUnsigned: true)
!745 = !DIEnumerator(name: "BUILT_IN_J0L", value: 104, isUnsigned: true)
!746 = !DIEnumerator(name: "BUILT_IN_J1", value: 105, isUnsigned: true)
!747 = !DIEnumerator(name: "BUILT_IN_J1F", value: 106, isUnsigned: true)
!748 = !DIEnumerator(name: "BUILT_IN_J1L", value: 107, isUnsigned: true)
!749 = !DIEnumerator(name: "BUILT_IN_JN", value: 108, isUnsigned: true)
!750 = !DIEnumerator(name: "BUILT_IN_JNF", value: 109, isUnsigned: true)
!751 = !DIEnumerator(name: "BUILT_IN_JNL", value: 110, isUnsigned: true)
!752 = !DIEnumerator(name: "BUILT_IN_LCEIL", value: 111, isUnsigned: true)
!753 = !DIEnumerator(name: "BUILT_IN_LCEILF", value: 112, isUnsigned: true)
!754 = !DIEnumerator(name: "BUILT_IN_LCEILL", value: 113, isUnsigned: true)
!755 = !DIEnumerator(name: "BUILT_IN_LDEXP", value: 114, isUnsigned: true)
!756 = !DIEnumerator(name: "BUILT_IN_LDEXPF", value: 115, isUnsigned: true)
!757 = !DIEnumerator(name: "BUILT_IN_LDEXPL", value: 116, isUnsigned: true)
!758 = !DIEnumerator(name: "BUILT_IN_LFLOOR", value: 117, isUnsigned: true)
!759 = !DIEnumerator(name: "BUILT_IN_LFLOORF", value: 118, isUnsigned: true)
!760 = !DIEnumerator(name: "BUILT_IN_LFLOORL", value: 119, isUnsigned: true)
!761 = !DIEnumerator(name: "BUILT_IN_LGAMMA", value: 120, isUnsigned: true)
!762 = !DIEnumerator(name: "BUILT_IN_LGAMMAF", value: 121, isUnsigned: true)
!763 = !DIEnumerator(name: "BUILT_IN_LGAMMAL", value: 122, isUnsigned: true)
!764 = !DIEnumerator(name: "BUILT_IN_LGAMMA_R", value: 123, isUnsigned: true)
!765 = !DIEnumerator(name: "BUILT_IN_LGAMMAF_R", value: 124, isUnsigned: true)
!766 = !DIEnumerator(name: "BUILT_IN_LGAMMAL_R", value: 125, isUnsigned: true)
!767 = !DIEnumerator(name: "BUILT_IN_LLCEIL", value: 126, isUnsigned: true)
!768 = !DIEnumerator(name: "BUILT_IN_LLCEILF", value: 127, isUnsigned: true)
!769 = !DIEnumerator(name: "BUILT_IN_LLCEILL", value: 128, isUnsigned: true)
!770 = !DIEnumerator(name: "BUILT_IN_LLFLOOR", value: 129, isUnsigned: true)
!771 = !DIEnumerator(name: "BUILT_IN_LLFLOORF", value: 130, isUnsigned: true)
!772 = !DIEnumerator(name: "BUILT_IN_LLFLOORL", value: 131, isUnsigned: true)
!773 = !DIEnumerator(name: "BUILT_IN_LLRINT", value: 132, isUnsigned: true)
!774 = !DIEnumerator(name: "BUILT_IN_LLRINTF", value: 133, isUnsigned: true)
!775 = !DIEnumerator(name: "BUILT_IN_LLRINTL", value: 134, isUnsigned: true)
!776 = !DIEnumerator(name: "BUILT_IN_LLROUND", value: 135, isUnsigned: true)
!777 = !DIEnumerator(name: "BUILT_IN_LLROUNDF", value: 136, isUnsigned: true)
!778 = !DIEnumerator(name: "BUILT_IN_LLROUNDL", value: 137, isUnsigned: true)
!779 = !DIEnumerator(name: "BUILT_IN_LOG", value: 138, isUnsigned: true)
!780 = !DIEnumerator(name: "BUILT_IN_LOG10", value: 139, isUnsigned: true)
!781 = !DIEnumerator(name: "BUILT_IN_LOG10F", value: 140, isUnsigned: true)
!782 = !DIEnumerator(name: "BUILT_IN_LOG10L", value: 141, isUnsigned: true)
!783 = !DIEnumerator(name: "BUILT_IN_LOG1P", value: 142, isUnsigned: true)
!784 = !DIEnumerator(name: "BUILT_IN_LOG1PF", value: 143, isUnsigned: true)
!785 = !DIEnumerator(name: "BUILT_IN_LOG1PL", value: 144, isUnsigned: true)
!786 = !DIEnumerator(name: "BUILT_IN_LOG2", value: 145, isUnsigned: true)
!787 = !DIEnumerator(name: "BUILT_IN_LOG2F", value: 146, isUnsigned: true)
!788 = !DIEnumerator(name: "BUILT_IN_LOG2L", value: 147, isUnsigned: true)
!789 = !DIEnumerator(name: "BUILT_IN_LOGB", value: 148, isUnsigned: true)
!790 = !DIEnumerator(name: "BUILT_IN_LOGBF", value: 149, isUnsigned: true)
!791 = !DIEnumerator(name: "BUILT_IN_LOGBL", value: 150, isUnsigned: true)
!792 = !DIEnumerator(name: "BUILT_IN_LOGF", value: 151, isUnsigned: true)
!793 = !DIEnumerator(name: "BUILT_IN_LOGL", value: 152, isUnsigned: true)
!794 = !DIEnumerator(name: "BUILT_IN_LRINT", value: 153, isUnsigned: true)
!795 = !DIEnumerator(name: "BUILT_IN_LRINTF", value: 154, isUnsigned: true)
!796 = !DIEnumerator(name: "BUILT_IN_LRINTL", value: 155, isUnsigned: true)
!797 = !DIEnumerator(name: "BUILT_IN_LROUND", value: 156, isUnsigned: true)
!798 = !DIEnumerator(name: "BUILT_IN_LROUNDF", value: 157, isUnsigned: true)
!799 = !DIEnumerator(name: "BUILT_IN_LROUNDL", value: 158, isUnsigned: true)
!800 = !DIEnumerator(name: "BUILT_IN_MODF", value: 159, isUnsigned: true)
!801 = !DIEnumerator(name: "BUILT_IN_MODFF", value: 160, isUnsigned: true)
!802 = !DIEnumerator(name: "BUILT_IN_MODFL", value: 161, isUnsigned: true)
!803 = !DIEnumerator(name: "BUILT_IN_NAN", value: 162, isUnsigned: true)
!804 = !DIEnumerator(name: "BUILT_IN_NANF", value: 163, isUnsigned: true)
!805 = !DIEnumerator(name: "BUILT_IN_NANL", value: 164, isUnsigned: true)
!806 = !DIEnumerator(name: "BUILT_IN_NAND32", value: 165, isUnsigned: true)
!807 = !DIEnumerator(name: "BUILT_IN_NAND64", value: 166, isUnsigned: true)
!808 = !DIEnumerator(name: "BUILT_IN_NAND128", value: 167, isUnsigned: true)
!809 = !DIEnumerator(name: "BUILT_IN_NANS", value: 168, isUnsigned: true)
!810 = !DIEnumerator(name: "BUILT_IN_NANSF", value: 169, isUnsigned: true)
!811 = !DIEnumerator(name: "BUILT_IN_NANSL", value: 170, isUnsigned: true)
!812 = !DIEnumerator(name: "BUILT_IN_NEARBYINT", value: 171, isUnsigned: true)
!813 = !DIEnumerator(name: "BUILT_IN_NEARBYINTF", value: 172, isUnsigned: true)
!814 = !DIEnumerator(name: "BUILT_IN_NEARBYINTL", value: 173, isUnsigned: true)
!815 = !DIEnumerator(name: "BUILT_IN_NEXTAFTER", value: 174, isUnsigned: true)
!816 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERF", value: 175, isUnsigned: true)
!817 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERL", value: 176, isUnsigned: true)
!818 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARD", value: 177, isUnsigned: true)
!819 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDF", value: 178, isUnsigned: true)
!820 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDL", value: 179, isUnsigned: true)
!821 = !DIEnumerator(name: "BUILT_IN_POW", value: 180, isUnsigned: true)
!822 = !DIEnumerator(name: "BUILT_IN_POW10", value: 181, isUnsigned: true)
!823 = !DIEnumerator(name: "BUILT_IN_POW10F", value: 182, isUnsigned: true)
!824 = !DIEnumerator(name: "BUILT_IN_POW10L", value: 183, isUnsigned: true)
!825 = !DIEnumerator(name: "BUILT_IN_POWF", value: 184, isUnsigned: true)
!826 = !DIEnumerator(name: "BUILT_IN_POWI", value: 185, isUnsigned: true)
!827 = !DIEnumerator(name: "BUILT_IN_POWIF", value: 186, isUnsigned: true)
!828 = !DIEnumerator(name: "BUILT_IN_POWIL", value: 187, isUnsigned: true)
!829 = !DIEnumerator(name: "BUILT_IN_POWL", value: 188, isUnsigned: true)
!830 = !DIEnumerator(name: "BUILT_IN_REMAINDER", value: 189, isUnsigned: true)
!831 = !DIEnumerator(name: "BUILT_IN_REMAINDERF", value: 190, isUnsigned: true)
!832 = !DIEnumerator(name: "BUILT_IN_REMAINDERL", value: 191, isUnsigned: true)
!833 = !DIEnumerator(name: "BUILT_IN_REMQUO", value: 192, isUnsigned: true)
!834 = !DIEnumerator(name: "BUILT_IN_REMQUOF", value: 193, isUnsigned: true)
!835 = !DIEnumerator(name: "BUILT_IN_REMQUOL", value: 194, isUnsigned: true)
!836 = !DIEnumerator(name: "BUILT_IN_RINT", value: 195, isUnsigned: true)
!837 = !DIEnumerator(name: "BUILT_IN_RINTF", value: 196, isUnsigned: true)
!838 = !DIEnumerator(name: "BUILT_IN_RINTL", value: 197, isUnsigned: true)
!839 = !DIEnumerator(name: "BUILT_IN_ROUND", value: 198, isUnsigned: true)
!840 = !DIEnumerator(name: "BUILT_IN_ROUNDF", value: 199, isUnsigned: true)
!841 = !DIEnumerator(name: "BUILT_IN_ROUNDL", value: 200, isUnsigned: true)
!842 = !DIEnumerator(name: "BUILT_IN_SCALB", value: 201, isUnsigned: true)
!843 = !DIEnumerator(name: "BUILT_IN_SCALBF", value: 202, isUnsigned: true)
!844 = !DIEnumerator(name: "BUILT_IN_SCALBL", value: 203, isUnsigned: true)
!845 = !DIEnumerator(name: "BUILT_IN_SCALBLN", value: 204, isUnsigned: true)
!846 = !DIEnumerator(name: "BUILT_IN_SCALBLNF", value: 205, isUnsigned: true)
!847 = !DIEnumerator(name: "BUILT_IN_SCALBLNL", value: 206, isUnsigned: true)
!848 = !DIEnumerator(name: "BUILT_IN_SCALBN", value: 207, isUnsigned: true)
!849 = !DIEnumerator(name: "BUILT_IN_SCALBNF", value: 208, isUnsigned: true)
!850 = !DIEnumerator(name: "BUILT_IN_SCALBNL", value: 209, isUnsigned: true)
!851 = !DIEnumerator(name: "BUILT_IN_SIGNBIT", value: 210, isUnsigned: true)
!852 = !DIEnumerator(name: "BUILT_IN_SIGNBITF", value: 211, isUnsigned: true)
!853 = !DIEnumerator(name: "BUILT_IN_SIGNBITL", value: 212, isUnsigned: true)
!854 = !DIEnumerator(name: "BUILT_IN_SIGNBITD32", value: 213, isUnsigned: true)
!855 = !DIEnumerator(name: "BUILT_IN_SIGNBITD64", value: 214, isUnsigned: true)
!856 = !DIEnumerator(name: "BUILT_IN_SIGNBITD128", value: 215, isUnsigned: true)
!857 = !DIEnumerator(name: "BUILT_IN_SIGNIFICAND", value: 216, isUnsigned: true)
!858 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDF", value: 217, isUnsigned: true)
!859 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDL", value: 218, isUnsigned: true)
!860 = !DIEnumerator(name: "BUILT_IN_SIN", value: 219, isUnsigned: true)
!861 = !DIEnumerator(name: "BUILT_IN_SINCOS", value: 220, isUnsigned: true)
!862 = !DIEnumerator(name: "BUILT_IN_SINCOSF", value: 221, isUnsigned: true)
!863 = !DIEnumerator(name: "BUILT_IN_SINCOSL", value: 222, isUnsigned: true)
!864 = !DIEnumerator(name: "BUILT_IN_SINF", value: 223, isUnsigned: true)
!865 = !DIEnumerator(name: "BUILT_IN_SINH", value: 224, isUnsigned: true)
!866 = !DIEnumerator(name: "BUILT_IN_SINHF", value: 225, isUnsigned: true)
!867 = !DIEnumerator(name: "BUILT_IN_SINHL", value: 226, isUnsigned: true)
!868 = !DIEnumerator(name: "BUILT_IN_SINL", value: 227, isUnsigned: true)
!869 = !DIEnumerator(name: "BUILT_IN_SQRT", value: 228, isUnsigned: true)
!870 = !DIEnumerator(name: "BUILT_IN_SQRTF", value: 229, isUnsigned: true)
!871 = !DIEnumerator(name: "BUILT_IN_SQRTL", value: 230, isUnsigned: true)
!872 = !DIEnumerator(name: "BUILT_IN_TAN", value: 231, isUnsigned: true)
!873 = !DIEnumerator(name: "BUILT_IN_TANF", value: 232, isUnsigned: true)
!874 = !DIEnumerator(name: "BUILT_IN_TANH", value: 233, isUnsigned: true)
!875 = !DIEnumerator(name: "BUILT_IN_TANHF", value: 234, isUnsigned: true)
!876 = !DIEnumerator(name: "BUILT_IN_TANHL", value: 235, isUnsigned: true)
!877 = !DIEnumerator(name: "BUILT_IN_TANL", value: 236, isUnsigned: true)
!878 = !DIEnumerator(name: "BUILT_IN_TGAMMA", value: 237, isUnsigned: true)
!879 = !DIEnumerator(name: "BUILT_IN_TGAMMAF", value: 238, isUnsigned: true)
!880 = !DIEnumerator(name: "BUILT_IN_TGAMMAL", value: 239, isUnsigned: true)
!881 = !DIEnumerator(name: "BUILT_IN_TRUNC", value: 240, isUnsigned: true)
!882 = !DIEnumerator(name: "BUILT_IN_TRUNCF", value: 241, isUnsigned: true)
!883 = !DIEnumerator(name: "BUILT_IN_TRUNCL", value: 242, isUnsigned: true)
!884 = !DIEnumerator(name: "BUILT_IN_Y0", value: 243, isUnsigned: true)
!885 = !DIEnumerator(name: "BUILT_IN_Y0F", value: 244, isUnsigned: true)
!886 = !DIEnumerator(name: "BUILT_IN_Y0L", value: 245, isUnsigned: true)
!887 = !DIEnumerator(name: "BUILT_IN_Y1", value: 246, isUnsigned: true)
!888 = !DIEnumerator(name: "BUILT_IN_Y1F", value: 247, isUnsigned: true)
!889 = !DIEnumerator(name: "BUILT_IN_Y1L", value: 248, isUnsigned: true)
!890 = !DIEnumerator(name: "BUILT_IN_YN", value: 249, isUnsigned: true)
!891 = !DIEnumerator(name: "BUILT_IN_YNF", value: 250, isUnsigned: true)
!892 = !DIEnumerator(name: "BUILT_IN_YNL", value: 251, isUnsigned: true)
!893 = !DIEnumerator(name: "BUILT_IN_CABS", value: 252, isUnsigned: true)
!894 = !DIEnumerator(name: "BUILT_IN_CABSF", value: 253, isUnsigned: true)
!895 = !DIEnumerator(name: "BUILT_IN_CABSL", value: 254, isUnsigned: true)
!896 = !DIEnumerator(name: "BUILT_IN_CACOS", value: 255, isUnsigned: true)
!897 = !DIEnumerator(name: "BUILT_IN_CACOSF", value: 256, isUnsigned: true)
!898 = !DIEnumerator(name: "BUILT_IN_CACOSH", value: 257, isUnsigned: true)
!899 = !DIEnumerator(name: "BUILT_IN_CACOSHF", value: 258, isUnsigned: true)
!900 = !DIEnumerator(name: "BUILT_IN_CACOSHL", value: 259, isUnsigned: true)
!901 = !DIEnumerator(name: "BUILT_IN_CACOSL", value: 260, isUnsigned: true)
!902 = !DIEnumerator(name: "BUILT_IN_CARG", value: 261, isUnsigned: true)
!903 = !DIEnumerator(name: "BUILT_IN_CARGF", value: 262, isUnsigned: true)
!904 = !DIEnumerator(name: "BUILT_IN_CARGL", value: 263, isUnsigned: true)
!905 = !DIEnumerator(name: "BUILT_IN_CASIN", value: 264, isUnsigned: true)
!906 = !DIEnumerator(name: "BUILT_IN_CASINF", value: 265, isUnsigned: true)
!907 = !DIEnumerator(name: "BUILT_IN_CASINH", value: 266, isUnsigned: true)
!908 = !DIEnumerator(name: "BUILT_IN_CASINHF", value: 267, isUnsigned: true)
!909 = !DIEnumerator(name: "BUILT_IN_CASINHL", value: 268, isUnsigned: true)
!910 = !DIEnumerator(name: "BUILT_IN_CASINL", value: 269, isUnsigned: true)
!911 = !DIEnumerator(name: "BUILT_IN_CATAN", value: 270, isUnsigned: true)
!912 = !DIEnumerator(name: "BUILT_IN_CATANF", value: 271, isUnsigned: true)
!913 = !DIEnumerator(name: "BUILT_IN_CATANH", value: 272, isUnsigned: true)
!914 = !DIEnumerator(name: "BUILT_IN_CATANHF", value: 273, isUnsigned: true)
!915 = !DIEnumerator(name: "BUILT_IN_CATANHL", value: 274, isUnsigned: true)
!916 = !DIEnumerator(name: "BUILT_IN_CATANL", value: 275, isUnsigned: true)
!917 = !DIEnumerator(name: "BUILT_IN_CCOS", value: 276, isUnsigned: true)
!918 = !DIEnumerator(name: "BUILT_IN_CCOSF", value: 277, isUnsigned: true)
!919 = !DIEnumerator(name: "BUILT_IN_CCOSH", value: 278, isUnsigned: true)
!920 = !DIEnumerator(name: "BUILT_IN_CCOSHF", value: 279, isUnsigned: true)
!921 = !DIEnumerator(name: "BUILT_IN_CCOSHL", value: 280, isUnsigned: true)
!922 = !DIEnumerator(name: "BUILT_IN_CCOSL", value: 281, isUnsigned: true)
!923 = !DIEnumerator(name: "BUILT_IN_CEXP", value: 282, isUnsigned: true)
!924 = !DIEnumerator(name: "BUILT_IN_CEXPF", value: 283, isUnsigned: true)
!925 = !DIEnumerator(name: "BUILT_IN_CEXPL", value: 284, isUnsigned: true)
!926 = !DIEnumerator(name: "BUILT_IN_CEXPI", value: 285, isUnsigned: true)
!927 = !DIEnumerator(name: "BUILT_IN_CEXPIF", value: 286, isUnsigned: true)
!928 = !DIEnumerator(name: "BUILT_IN_CEXPIL", value: 287, isUnsigned: true)
!929 = !DIEnumerator(name: "BUILT_IN_CIMAG", value: 288, isUnsigned: true)
!930 = !DIEnumerator(name: "BUILT_IN_CIMAGF", value: 289, isUnsigned: true)
!931 = !DIEnumerator(name: "BUILT_IN_CIMAGL", value: 290, isUnsigned: true)
!932 = !DIEnumerator(name: "BUILT_IN_CLOG", value: 291, isUnsigned: true)
!933 = !DIEnumerator(name: "BUILT_IN_CLOGF", value: 292, isUnsigned: true)
!934 = !DIEnumerator(name: "BUILT_IN_CLOGL", value: 293, isUnsigned: true)
!935 = !DIEnumerator(name: "BUILT_IN_CLOG10", value: 294, isUnsigned: true)
!936 = !DIEnumerator(name: "BUILT_IN_CLOG10F", value: 295, isUnsigned: true)
!937 = !DIEnumerator(name: "BUILT_IN_CLOG10L", value: 296, isUnsigned: true)
!938 = !DIEnumerator(name: "BUILT_IN_CONJ", value: 297, isUnsigned: true)
!939 = !DIEnumerator(name: "BUILT_IN_CONJF", value: 298, isUnsigned: true)
!940 = !DIEnumerator(name: "BUILT_IN_CONJL", value: 299, isUnsigned: true)
!941 = !DIEnumerator(name: "BUILT_IN_CPOW", value: 300, isUnsigned: true)
!942 = !DIEnumerator(name: "BUILT_IN_CPOWF", value: 301, isUnsigned: true)
!943 = !DIEnumerator(name: "BUILT_IN_CPOWL", value: 302, isUnsigned: true)
!944 = !DIEnumerator(name: "BUILT_IN_CPROJ", value: 303, isUnsigned: true)
!945 = !DIEnumerator(name: "BUILT_IN_CPROJF", value: 304, isUnsigned: true)
!946 = !DIEnumerator(name: "BUILT_IN_CPROJL", value: 305, isUnsigned: true)
!947 = !DIEnumerator(name: "BUILT_IN_CREAL", value: 306, isUnsigned: true)
!948 = !DIEnumerator(name: "BUILT_IN_CREALF", value: 307, isUnsigned: true)
!949 = !DIEnumerator(name: "BUILT_IN_CREALL", value: 308, isUnsigned: true)
!950 = !DIEnumerator(name: "BUILT_IN_CSIN", value: 309, isUnsigned: true)
!951 = !DIEnumerator(name: "BUILT_IN_CSINF", value: 310, isUnsigned: true)
!952 = !DIEnumerator(name: "BUILT_IN_CSINH", value: 311, isUnsigned: true)
!953 = !DIEnumerator(name: "BUILT_IN_CSINHF", value: 312, isUnsigned: true)
!954 = !DIEnumerator(name: "BUILT_IN_CSINHL", value: 313, isUnsigned: true)
!955 = !DIEnumerator(name: "BUILT_IN_CSINL", value: 314, isUnsigned: true)
!956 = !DIEnumerator(name: "BUILT_IN_CSQRT", value: 315, isUnsigned: true)
!957 = !DIEnumerator(name: "BUILT_IN_CSQRTF", value: 316, isUnsigned: true)
!958 = !DIEnumerator(name: "BUILT_IN_CSQRTL", value: 317, isUnsigned: true)
!959 = !DIEnumerator(name: "BUILT_IN_CTAN", value: 318, isUnsigned: true)
!960 = !DIEnumerator(name: "BUILT_IN_CTANF", value: 319, isUnsigned: true)
!961 = !DIEnumerator(name: "BUILT_IN_CTANH", value: 320, isUnsigned: true)
!962 = !DIEnumerator(name: "BUILT_IN_CTANHF", value: 321, isUnsigned: true)
!963 = !DIEnumerator(name: "BUILT_IN_CTANHL", value: 322, isUnsigned: true)
!964 = !DIEnumerator(name: "BUILT_IN_CTANL", value: 323, isUnsigned: true)
!965 = !DIEnumerator(name: "BUILT_IN_BCMP", value: 324, isUnsigned: true)
!966 = !DIEnumerator(name: "BUILT_IN_BCOPY", value: 325, isUnsigned: true)
!967 = !DIEnumerator(name: "BUILT_IN_BZERO", value: 326, isUnsigned: true)
!968 = !DIEnumerator(name: "BUILT_IN_INDEX", value: 327, isUnsigned: true)
!969 = !DIEnumerator(name: "BUILT_IN_MEMCHR", value: 328, isUnsigned: true)
!970 = !DIEnumerator(name: "BUILT_IN_MEMCMP", value: 329, isUnsigned: true)
!971 = !DIEnumerator(name: "BUILT_IN_MEMCPY", value: 330, isUnsigned: true)
!972 = !DIEnumerator(name: "BUILT_IN_MEMMOVE", value: 331, isUnsigned: true)
!973 = !DIEnumerator(name: "BUILT_IN_MEMPCPY", value: 332, isUnsigned: true)
!974 = !DIEnumerator(name: "BUILT_IN_MEMSET", value: 333, isUnsigned: true)
!975 = !DIEnumerator(name: "BUILT_IN_RINDEX", value: 334, isUnsigned: true)
!976 = !DIEnumerator(name: "BUILT_IN_STPCPY", value: 335, isUnsigned: true)
!977 = !DIEnumerator(name: "BUILT_IN_STPNCPY", value: 336, isUnsigned: true)
!978 = !DIEnumerator(name: "BUILT_IN_STRCASECMP", value: 337, isUnsigned: true)
!979 = !DIEnumerator(name: "BUILT_IN_STRCAT", value: 338, isUnsigned: true)
!980 = !DIEnumerator(name: "BUILT_IN_STRCHR", value: 339, isUnsigned: true)
!981 = !DIEnumerator(name: "BUILT_IN_STRCMP", value: 340, isUnsigned: true)
!982 = !DIEnumerator(name: "BUILT_IN_STRCPY", value: 341, isUnsigned: true)
!983 = !DIEnumerator(name: "BUILT_IN_STRCSPN", value: 342, isUnsigned: true)
!984 = !DIEnumerator(name: "BUILT_IN_STRDUP", value: 343, isUnsigned: true)
!985 = !DIEnumerator(name: "BUILT_IN_STRNDUP", value: 344, isUnsigned: true)
!986 = !DIEnumerator(name: "BUILT_IN_STRLEN", value: 345, isUnsigned: true)
!987 = !DIEnumerator(name: "BUILT_IN_STRNCASECMP", value: 346, isUnsigned: true)
!988 = !DIEnumerator(name: "BUILT_IN_STRNCAT", value: 347, isUnsigned: true)
!989 = !DIEnumerator(name: "BUILT_IN_STRNCMP", value: 348, isUnsigned: true)
!990 = !DIEnumerator(name: "BUILT_IN_STRNCPY", value: 349, isUnsigned: true)
!991 = !DIEnumerator(name: "BUILT_IN_STRPBRK", value: 350, isUnsigned: true)
!992 = !DIEnumerator(name: "BUILT_IN_STRRCHR", value: 351, isUnsigned: true)
!993 = !DIEnumerator(name: "BUILT_IN_STRSPN", value: 352, isUnsigned: true)
!994 = !DIEnumerator(name: "BUILT_IN_STRSTR", value: 353, isUnsigned: true)
!995 = !DIEnumerator(name: "BUILT_IN_FPRINTF", value: 354, isUnsigned: true)
!996 = !DIEnumerator(name: "BUILT_IN_FPRINTF_UNLOCKED", value: 355, isUnsigned: true)
!997 = !DIEnumerator(name: "BUILT_IN_PUTC", value: 356, isUnsigned: true)
!998 = !DIEnumerator(name: "BUILT_IN_PUTC_UNLOCKED", value: 357, isUnsigned: true)
!999 = !DIEnumerator(name: "BUILT_IN_FPUTC", value: 358, isUnsigned: true)
!1000 = !DIEnumerator(name: "BUILT_IN_FPUTC_UNLOCKED", value: 359, isUnsigned: true)
!1001 = !DIEnumerator(name: "BUILT_IN_FPUTS", value: 360, isUnsigned: true)
!1002 = !DIEnumerator(name: "BUILT_IN_FPUTS_UNLOCKED", value: 361, isUnsigned: true)
!1003 = !DIEnumerator(name: "BUILT_IN_FSCANF", value: 362, isUnsigned: true)
!1004 = !DIEnumerator(name: "BUILT_IN_FWRITE", value: 363, isUnsigned: true)
!1005 = !DIEnumerator(name: "BUILT_IN_FWRITE_UNLOCKED", value: 364, isUnsigned: true)
!1006 = !DIEnumerator(name: "BUILT_IN_PRINTF", value: 365, isUnsigned: true)
!1007 = !DIEnumerator(name: "BUILT_IN_PRINTF_UNLOCKED", value: 366, isUnsigned: true)
!1008 = !DIEnumerator(name: "BUILT_IN_PUTCHAR", value: 367, isUnsigned: true)
!1009 = !DIEnumerator(name: "BUILT_IN_PUTCHAR_UNLOCKED", value: 368, isUnsigned: true)
!1010 = !DIEnumerator(name: "BUILT_IN_PUTS", value: 369, isUnsigned: true)
!1011 = !DIEnumerator(name: "BUILT_IN_PUTS_UNLOCKED", value: 370, isUnsigned: true)
!1012 = !DIEnumerator(name: "BUILT_IN_SCANF", value: 371, isUnsigned: true)
!1013 = !DIEnumerator(name: "BUILT_IN_SNPRINTF", value: 372, isUnsigned: true)
!1014 = !DIEnumerator(name: "BUILT_IN_SPRINTF", value: 373, isUnsigned: true)
!1015 = !DIEnumerator(name: "BUILT_IN_SSCANF", value: 374, isUnsigned: true)
!1016 = !DIEnumerator(name: "BUILT_IN_VFPRINTF", value: 375, isUnsigned: true)
!1017 = !DIEnumerator(name: "BUILT_IN_VFSCANF", value: 376, isUnsigned: true)
!1018 = !DIEnumerator(name: "BUILT_IN_VPRINTF", value: 377, isUnsigned: true)
!1019 = !DIEnumerator(name: "BUILT_IN_VSCANF", value: 378, isUnsigned: true)
!1020 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF", value: 379, isUnsigned: true)
!1021 = !DIEnumerator(name: "BUILT_IN_VSPRINTF", value: 380, isUnsigned: true)
!1022 = !DIEnumerator(name: "BUILT_IN_VSSCANF", value: 381, isUnsigned: true)
!1023 = !DIEnumerator(name: "BUILT_IN_ISALNUM", value: 382, isUnsigned: true)
!1024 = !DIEnumerator(name: "BUILT_IN_ISALPHA", value: 383, isUnsigned: true)
!1025 = !DIEnumerator(name: "BUILT_IN_ISASCII", value: 384, isUnsigned: true)
!1026 = !DIEnumerator(name: "BUILT_IN_ISBLANK", value: 385, isUnsigned: true)
!1027 = !DIEnumerator(name: "BUILT_IN_ISCNTRL", value: 386, isUnsigned: true)
!1028 = !DIEnumerator(name: "BUILT_IN_ISDIGIT", value: 387, isUnsigned: true)
!1029 = !DIEnumerator(name: "BUILT_IN_ISGRAPH", value: 388, isUnsigned: true)
!1030 = !DIEnumerator(name: "BUILT_IN_ISLOWER", value: 389, isUnsigned: true)
!1031 = !DIEnumerator(name: "BUILT_IN_ISPRINT", value: 390, isUnsigned: true)
!1032 = !DIEnumerator(name: "BUILT_IN_ISPUNCT", value: 391, isUnsigned: true)
!1033 = !DIEnumerator(name: "BUILT_IN_ISSPACE", value: 392, isUnsigned: true)
!1034 = !DIEnumerator(name: "BUILT_IN_ISUPPER", value: 393, isUnsigned: true)
!1035 = !DIEnumerator(name: "BUILT_IN_ISXDIGIT", value: 394, isUnsigned: true)
!1036 = !DIEnumerator(name: "BUILT_IN_TOASCII", value: 395, isUnsigned: true)
!1037 = !DIEnumerator(name: "BUILT_IN_TOLOWER", value: 396, isUnsigned: true)
!1038 = !DIEnumerator(name: "BUILT_IN_TOUPPER", value: 397, isUnsigned: true)
!1039 = !DIEnumerator(name: "BUILT_IN_ISWALNUM", value: 398, isUnsigned: true)
!1040 = !DIEnumerator(name: "BUILT_IN_ISWALPHA", value: 399, isUnsigned: true)
!1041 = !DIEnumerator(name: "BUILT_IN_ISWBLANK", value: 400, isUnsigned: true)
!1042 = !DIEnumerator(name: "BUILT_IN_ISWCNTRL", value: 401, isUnsigned: true)
!1043 = !DIEnumerator(name: "BUILT_IN_ISWDIGIT", value: 402, isUnsigned: true)
!1044 = !DIEnumerator(name: "BUILT_IN_ISWGRAPH", value: 403, isUnsigned: true)
!1045 = !DIEnumerator(name: "BUILT_IN_ISWLOWER", value: 404, isUnsigned: true)
!1046 = !DIEnumerator(name: "BUILT_IN_ISWPRINT", value: 405, isUnsigned: true)
!1047 = !DIEnumerator(name: "BUILT_IN_ISWPUNCT", value: 406, isUnsigned: true)
!1048 = !DIEnumerator(name: "BUILT_IN_ISWSPACE", value: 407, isUnsigned: true)
!1049 = !DIEnumerator(name: "BUILT_IN_ISWUPPER", value: 408, isUnsigned: true)
!1050 = !DIEnumerator(name: "BUILT_IN_ISWXDIGIT", value: 409, isUnsigned: true)
!1051 = !DIEnumerator(name: "BUILT_IN_TOWLOWER", value: 410, isUnsigned: true)
!1052 = !DIEnumerator(name: "BUILT_IN_TOWUPPER", value: 411, isUnsigned: true)
!1053 = !DIEnumerator(name: "BUILT_IN_ABORT", value: 412, isUnsigned: true)
!1054 = !DIEnumerator(name: "BUILT_IN_ABS", value: 413, isUnsigned: true)
!1055 = !DIEnumerator(name: "BUILT_IN_AGGREGATE_INCOMING_ADDRESS", value: 414, isUnsigned: true)
!1056 = !DIEnumerator(name: "BUILT_IN_ALLOCA", value: 415, isUnsigned: true)
!1057 = !DIEnumerator(name: "BUILT_IN_APPLY", value: 416, isUnsigned: true)
!1058 = !DIEnumerator(name: "BUILT_IN_APPLY_ARGS", value: 417, isUnsigned: true)
!1059 = !DIEnumerator(name: "BUILT_IN_ARGS_INFO", value: 418, isUnsigned: true)
!1060 = !DIEnumerator(name: "BUILT_IN_BSWAP32", value: 419, isUnsigned: true)
!1061 = !DIEnumerator(name: "BUILT_IN_BSWAP64", value: 420, isUnsigned: true)
!1062 = !DIEnumerator(name: "BUILT_IN_CLEAR_CACHE", value: 421, isUnsigned: true)
!1063 = !DIEnumerator(name: "BUILT_IN_CALLOC", value: 422, isUnsigned: true)
!1064 = !DIEnumerator(name: "BUILT_IN_CLASSIFY_TYPE", value: 423, isUnsigned: true)
!1065 = !DIEnumerator(name: "BUILT_IN_CLZ", value: 424, isUnsigned: true)
!1066 = !DIEnumerator(name: "BUILT_IN_CLZIMAX", value: 425, isUnsigned: true)
!1067 = !DIEnumerator(name: "BUILT_IN_CLZL", value: 426, isUnsigned: true)
!1068 = !DIEnumerator(name: "BUILT_IN_CLZLL", value: 427, isUnsigned: true)
!1069 = !DIEnumerator(name: "BUILT_IN_CONSTANT_P", value: 428, isUnsigned: true)
!1070 = !DIEnumerator(name: "BUILT_IN_CTZ", value: 429, isUnsigned: true)
!1071 = !DIEnumerator(name: "BUILT_IN_CTZIMAX", value: 430, isUnsigned: true)
!1072 = !DIEnumerator(name: "BUILT_IN_CTZL", value: 431, isUnsigned: true)
!1073 = !DIEnumerator(name: "BUILT_IN_CTZLL", value: 432, isUnsigned: true)
!1074 = !DIEnumerator(name: "BUILT_IN_DCGETTEXT", value: 433, isUnsigned: true)
!1075 = !DIEnumerator(name: "BUILT_IN_DGETTEXT", value: 434, isUnsigned: true)
!1076 = !DIEnumerator(name: "BUILT_IN_DWARF_CFA", value: 435, isUnsigned: true)
!1077 = !DIEnumerator(name: "BUILT_IN_DWARF_SP_COLUMN", value: 436, isUnsigned: true)
!1078 = !DIEnumerator(name: "BUILT_IN_EH_RETURN", value: 437, isUnsigned: true)
!1079 = !DIEnumerator(name: "BUILT_IN_EH_RETURN_DATA_REGNO", value: 438, isUnsigned: true)
!1080 = !DIEnumerator(name: "BUILT_IN_EXECL", value: 439, isUnsigned: true)
!1081 = !DIEnumerator(name: "BUILT_IN_EXECLP", value: 440, isUnsigned: true)
!1082 = !DIEnumerator(name: "BUILT_IN_EXECLE", value: 441, isUnsigned: true)
!1083 = !DIEnumerator(name: "BUILT_IN_EXECV", value: 442, isUnsigned: true)
!1084 = !DIEnumerator(name: "BUILT_IN_EXECVP", value: 443, isUnsigned: true)
!1085 = !DIEnumerator(name: "BUILT_IN_EXECVE", value: 444, isUnsigned: true)
!1086 = !DIEnumerator(name: "BUILT_IN_EXIT", value: 445, isUnsigned: true)
!1087 = !DIEnumerator(name: "BUILT_IN_EXPECT", value: 446, isUnsigned: true)
!1088 = !DIEnumerator(name: "BUILT_IN_EXTEND_POINTER", value: 447, isUnsigned: true)
!1089 = !DIEnumerator(name: "BUILT_IN_EXTRACT_RETURN_ADDR", value: 448, isUnsigned: true)
!1090 = !DIEnumerator(name: "BUILT_IN_FFS", value: 449, isUnsigned: true)
!1091 = !DIEnumerator(name: "BUILT_IN_FFSIMAX", value: 450, isUnsigned: true)
!1092 = !DIEnumerator(name: "BUILT_IN_FFSL", value: 451, isUnsigned: true)
!1093 = !DIEnumerator(name: "BUILT_IN_FFSLL", value: 452, isUnsigned: true)
!1094 = !DIEnumerator(name: "BUILT_IN_FORK", value: 453, isUnsigned: true)
!1095 = !DIEnumerator(name: "BUILT_IN_FRAME_ADDRESS", value: 454, isUnsigned: true)
!1096 = !DIEnumerator(name: "BUILT_IN_FREE", value: 455, isUnsigned: true)
!1097 = !DIEnumerator(name: "BUILT_IN_FROB_RETURN_ADDR", value: 456, isUnsigned: true)
!1098 = !DIEnumerator(name: "BUILT_IN_GETTEXT", value: 457, isUnsigned: true)
!1099 = !DIEnumerator(name: "BUILT_IN_IMAXABS", value: 458, isUnsigned: true)
!1100 = !DIEnumerator(name: "BUILT_IN_INIT_DWARF_REG_SIZES", value: 459, isUnsigned: true)
!1101 = !DIEnumerator(name: "BUILT_IN_FINITE", value: 460, isUnsigned: true)
!1102 = !DIEnumerator(name: "BUILT_IN_FINITEF", value: 461, isUnsigned: true)
!1103 = !DIEnumerator(name: "BUILT_IN_FINITEL", value: 462, isUnsigned: true)
!1104 = !DIEnumerator(name: "BUILT_IN_FINITED32", value: 463, isUnsigned: true)
!1105 = !DIEnumerator(name: "BUILT_IN_FINITED64", value: 464, isUnsigned: true)
!1106 = !DIEnumerator(name: "BUILT_IN_FINITED128", value: 465, isUnsigned: true)
!1107 = !DIEnumerator(name: "BUILT_IN_FPCLASSIFY", value: 466, isUnsigned: true)
!1108 = !DIEnumerator(name: "BUILT_IN_ISFINITE", value: 467, isUnsigned: true)
!1109 = !DIEnumerator(name: "BUILT_IN_ISINF_SIGN", value: 468, isUnsigned: true)
!1110 = !DIEnumerator(name: "BUILT_IN_ISINF", value: 469, isUnsigned: true)
!1111 = !DIEnumerator(name: "BUILT_IN_ISINFF", value: 470, isUnsigned: true)
!1112 = !DIEnumerator(name: "BUILT_IN_ISINFL", value: 471, isUnsigned: true)
!1113 = !DIEnumerator(name: "BUILT_IN_ISINFD32", value: 472, isUnsigned: true)
!1114 = !DIEnumerator(name: "BUILT_IN_ISINFD64", value: 473, isUnsigned: true)
!1115 = !DIEnumerator(name: "BUILT_IN_ISINFD128", value: 474, isUnsigned: true)
!1116 = !DIEnumerator(name: "BUILT_IN_ISNAN", value: 475, isUnsigned: true)
!1117 = !DIEnumerator(name: "BUILT_IN_ISNANF", value: 476, isUnsigned: true)
!1118 = !DIEnumerator(name: "BUILT_IN_ISNANL", value: 477, isUnsigned: true)
!1119 = !DIEnumerator(name: "BUILT_IN_ISNAND32", value: 478, isUnsigned: true)
!1120 = !DIEnumerator(name: "BUILT_IN_ISNAND64", value: 479, isUnsigned: true)
!1121 = !DIEnumerator(name: "BUILT_IN_ISNAND128", value: 480, isUnsigned: true)
!1122 = !DIEnumerator(name: "BUILT_IN_ISNORMAL", value: 481, isUnsigned: true)
!1123 = !DIEnumerator(name: "BUILT_IN_ISGREATER", value: 482, isUnsigned: true)
!1124 = !DIEnumerator(name: "BUILT_IN_ISGREATEREQUAL", value: 483, isUnsigned: true)
!1125 = !DIEnumerator(name: "BUILT_IN_ISLESS", value: 484, isUnsigned: true)
!1126 = !DIEnumerator(name: "BUILT_IN_ISLESSEQUAL", value: 485, isUnsigned: true)
!1127 = !DIEnumerator(name: "BUILT_IN_ISLESSGREATER", value: 486, isUnsigned: true)
!1128 = !DIEnumerator(name: "BUILT_IN_ISUNORDERED", value: 487, isUnsigned: true)
!1129 = !DIEnumerator(name: "BUILT_IN_LABS", value: 488, isUnsigned: true)
!1130 = !DIEnumerator(name: "BUILT_IN_LLABS", value: 489, isUnsigned: true)
!1131 = !DIEnumerator(name: "BUILT_IN_LONGJMP", value: 490, isUnsigned: true)
!1132 = !DIEnumerator(name: "BUILT_IN_MALLOC", value: 491, isUnsigned: true)
!1133 = !DIEnumerator(name: "BUILT_IN_NEXT_ARG", value: 492, isUnsigned: true)
!1134 = !DIEnumerator(name: "BUILT_IN_PARITY", value: 493, isUnsigned: true)
!1135 = !DIEnumerator(name: "BUILT_IN_PARITYIMAX", value: 494, isUnsigned: true)
!1136 = !DIEnumerator(name: "BUILT_IN_PARITYL", value: 495, isUnsigned: true)
!1137 = !DIEnumerator(name: "BUILT_IN_PARITYLL", value: 496, isUnsigned: true)
!1138 = !DIEnumerator(name: "BUILT_IN_POPCOUNT", value: 497, isUnsigned: true)
!1139 = !DIEnumerator(name: "BUILT_IN_POPCOUNTIMAX", value: 498, isUnsigned: true)
!1140 = !DIEnumerator(name: "BUILT_IN_POPCOUNTL", value: 499, isUnsigned: true)
!1141 = !DIEnumerator(name: "BUILT_IN_POPCOUNTLL", value: 500, isUnsigned: true)
!1142 = !DIEnumerator(name: "BUILT_IN_PREFETCH", value: 501, isUnsigned: true)
!1143 = !DIEnumerator(name: "BUILT_IN_REALLOC", value: 502, isUnsigned: true)
!1144 = !DIEnumerator(name: "BUILT_IN_RETURN", value: 503, isUnsigned: true)
!1145 = !DIEnumerator(name: "BUILT_IN_RETURN_ADDRESS", value: 504, isUnsigned: true)
!1146 = !DIEnumerator(name: "BUILT_IN_SAVEREGS", value: 505, isUnsigned: true)
!1147 = !DIEnumerator(name: "BUILT_IN_SETJMP", value: 506, isUnsigned: true)
!1148 = !DIEnumerator(name: "BUILT_IN_STRFMON", value: 507, isUnsigned: true)
!1149 = !DIEnumerator(name: "BUILT_IN_STRFTIME", value: 508, isUnsigned: true)
!1150 = !DIEnumerator(name: "BUILT_IN_TRAP", value: 509, isUnsigned: true)
!1151 = !DIEnumerator(name: "BUILT_IN_UNREACHABLE", value: 510, isUnsigned: true)
!1152 = !DIEnumerator(name: "BUILT_IN_UNWIND_INIT", value: 511, isUnsigned: true)
!1153 = !DIEnumerator(name: "BUILT_IN_UPDATE_SETJMP_BUF", value: 512, isUnsigned: true)
!1154 = !DIEnumerator(name: "BUILT_IN_VA_COPY", value: 513, isUnsigned: true)
!1155 = !DIEnumerator(name: "BUILT_IN_VA_END", value: 514, isUnsigned: true)
!1156 = !DIEnumerator(name: "BUILT_IN_VA_START", value: 515, isUnsigned: true)
!1157 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK", value: 516, isUnsigned: true)
!1158 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK_LEN", value: 517, isUnsigned: true)
!1159 = !DIEnumerator(name: "BUILT_IN__EXIT", value: 518, isUnsigned: true)
!1160 = !DIEnumerator(name: "BUILT_IN__EXIT2", value: 519, isUnsigned: true)
!1161 = !DIEnumerator(name: "BUILT_IN_INIT_TRAMPOLINE", value: 520, isUnsigned: true)
!1162 = !DIEnumerator(name: "BUILT_IN_ADJUST_TRAMPOLINE", value: 521, isUnsigned: true)
!1163 = !DIEnumerator(name: "BUILT_IN_NONLOCAL_GOTO", value: 522, isUnsigned: true)
!1164 = !DIEnumerator(name: "BUILT_IN_SETJMP_SETUP", value: 523, isUnsigned: true)
!1165 = !DIEnumerator(name: "BUILT_IN_SETJMP_DISPATCHER", value: 524, isUnsigned: true)
!1166 = !DIEnumerator(name: "BUILT_IN_SETJMP_RECEIVER", value: 525, isUnsigned: true)
!1167 = !DIEnumerator(name: "BUILT_IN_STACK_SAVE", value: 526, isUnsigned: true)
!1168 = !DIEnumerator(name: "BUILT_IN_STACK_RESTORE", value: 527, isUnsigned: true)
!1169 = !DIEnumerator(name: "BUILT_IN_OBJECT_SIZE", value: 528, isUnsigned: true)
!1170 = !DIEnumerator(name: "BUILT_IN_MEMCPY_CHK", value: 529, isUnsigned: true)
!1171 = !DIEnumerator(name: "BUILT_IN_MEMMOVE_CHK", value: 530, isUnsigned: true)
!1172 = !DIEnumerator(name: "BUILT_IN_MEMPCPY_CHK", value: 531, isUnsigned: true)
!1173 = !DIEnumerator(name: "BUILT_IN_MEMSET_CHK", value: 532, isUnsigned: true)
!1174 = !DIEnumerator(name: "BUILT_IN_STPCPY_CHK", value: 533, isUnsigned: true)
!1175 = !DIEnumerator(name: "BUILT_IN_STRCAT_CHK", value: 534, isUnsigned: true)
!1176 = !DIEnumerator(name: "BUILT_IN_STRCPY_CHK", value: 535, isUnsigned: true)
!1177 = !DIEnumerator(name: "BUILT_IN_STRNCAT_CHK", value: 536, isUnsigned: true)
!1178 = !DIEnumerator(name: "BUILT_IN_STRNCPY_CHK", value: 537, isUnsigned: true)
!1179 = !DIEnumerator(name: "BUILT_IN_SNPRINTF_CHK", value: 538, isUnsigned: true)
!1180 = !DIEnumerator(name: "BUILT_IN_SPRINTF_CHK", value: 539, isUnsigned: true)
!1181 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF_CHK", value: 540, isUnsigned: true)
!1182 = !DIEnumerator(name: "BUILT_IN_VSPRINTF_CHK", value: 541, isUnsigned: true)
!1183 = !DIEnumerator(name: "BUILT_IN_FPRINTF_CHK", value: 542, isUnsigned: true)
!1184 = !DIEnumerator(name: "BUILT_IN_PRINTF_CHK", value: 543, isUnsigned: true)
!1185 = !DIEnumerator(name: "BUILT_IN_VFPRINTF_CHK", value: 544, isUnsigned: true)
!1186 = !DIEnumerator(name: "BUILT_IN_VPRINTF_CHK", value: 545, isUnsigned: true)
!1187 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_ENTER", value: 546, isUnsigned: true)
!1188 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_EXIT", value: 547, isUnsigned: true)
!1189 = !DIEnumerator(name: "BUILT_IN_EMUTLS_GET_ADDRESS", value: 548, isUnsigned: true)
!1190 = !DIEnumerator(name: "BUILT_IN_EMUTLS_REGISTER_COMMON", value: 549, isUnsigned: true)
!1191 = !DIEnumerator(name: "BUILT_IN_UNWIND_RESUME", value: 550, isUnsigned: true)
!1192 = !DIEnumerator(name: "BUILT_IN_CXA_END_CLEANUP", value: 551, isUnsigned: true)
!1193 = !DIEnumerator(name: "BUILT_IN_EH_POINTER", value: 552, isUnsigned: true)
!1194 = !DIEnumerator(name: "BUILT_IN_EH_FILTER", value: 553, isUnsigned: true)
!1195 = !DIEnumerator(name: "BUILT_IN_EH_COPY_VALUES", value: 554, isUnsigned: true)
!1196 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_N", value: 555, isUnsigned: true)
!1197 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_1", value: 556, isUnsigned: true)
!1198 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_2", value: 557, isUnsigned: true)
!1199 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_4", value: 558, isUnsigned: true)
!1200 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_8", value: 559, isUnsigned: true)
!1201 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_16", value: 560, isUnsigned: true)
!1202 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_N", value: 561, isUnsigned: true)
!1203 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_1", value: 562, isUnsigned: true)
!1204 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_2", value: 563, isUnsigned: true)
!1205 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_4", value: 564, isUnsigned: true)
!1206 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_8", value: 565, isUnsigned: true)
!1207 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_16", value: 566, isUnsigned: true)
!1208 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_N", value: 567, isUnsigned: true)
!1209 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_1", value: 568, isUnsigned: true)
!1210 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_2", value: 569, isUnsigned: true)
!1211 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_4", value: 570, isUnsigned: true)
!1212 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_8", value: 571, isUnsigned: true)
!1213 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_16", value: 572, isUnsigned: true)
!1214 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_N", value: 573, isUnsigned: true)
!1215 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_1", value: 574, isUnsigned: true)
!1216 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_2", value: 575, isUnsigned: true)
!1217 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_4", value: 576, isUnsigned: true)
!1218 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_8", value: 577, isUnsigned: true)
!1219 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_16", value: 578, isUnsigned: true)
!1220 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_N", value: 579, isUnsigned: true)
!1221 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_1", value: 580, isUnsigned: true)
!1222 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_2", value: 581, isUnsigned: true)
!1223 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_4", value: 582, isUnsigned: true)
!1224 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_8", value: 583, isUnsigned: true)
!1225 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_16", value: 584, isUnsigned: true)
!1226 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_N", value: 585, isUnsigned: true)
!1227 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_1", value: 586, isUnsigned: true)
!1228 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_2", value: 587, isUnsigned: true)
!1229 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_4", value: 588, isUnsigned: true)
!1230 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_8", value: 589, isUnsigned: true)
!1231 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_16", value: 590, isUnsigned: true)
!1232 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_N", value: 591, isUnsigned: true)
!1233 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_1", value: 592, isUnsigned: true)
!1234 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_2", value: 593, isUnsigned: true)
!1235 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_4", value: 594, isUnsigned: true)
!1236 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_8", value: 595, isUnsigned: true)
!1237 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_16", value: 596, isUnsigned: true)
!1238 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_N", value: 597, isUnsigned: true)
!1239 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_1", value: 598, isUnsigned: true)
!1240 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_2", value: 599, isUnsigned: true)
!1241 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_4", value: 600, isUnsigned: true)
!1242 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_8", value: 601, isUnsigned: true)
!1243 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_16", value: 602, isUnsigned: true)
!1244 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_N", value: 603, isUnsigned: true)
!1245 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_1", value: 604, isUnsigned: true)
!1246 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_2", value: 605, isUnsigned: true)
!1247 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_4", value: 606, isUnsigned: true)
!1248 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_8", value: 607, isUnsigned: true)
!1249 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_16", value: 608, isUnsigned: true)
!1250 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_N", value: 609, isUnsigned: true)
!1251 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_1", value: 610, isUnsigned: true)
!1252 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_2", value: 611, isUnsigned: true)
!1253 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_4", value: 612, isUnsigned: true)
!1254 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_8", value: 613, isUnsigned: true)
!1255 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_16", value: 614, isUnsigned: true)
!1256 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_N", value: 615, isUnsigned: true)
!1257 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_1", value: 616, isUnsigned: true)
!1258 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_2", value: 617, isUnsigned: true)
!1259 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_4", value: 618, isUnsigned: true)
!1260 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_8", value: 619, isUnsigned: true)
!1261 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_16", value: 620, isUnsigned: true)
!1262 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_N", value: 621, isUnsigned: true)
!1263 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_1", value: 622, isUnsigned: true)
!1264 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_2", value: 623, isUnsigned: true)
!1265 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_4", value: 624, isUnsigned: true)
!1266 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_8", value: 625, isUnsigned: true)
!1267 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_16", value: 626, isUnsigned: true)
!1268 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_N", value: 627, isUnsigned: true)
!1269 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_1", value: 628, isUnsigned: true)
!1270 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_2", value: 629, isUnsigned: true)
!1271 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_4", value: 630, isUnsigned: true)
!1272 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_8", value: 631, isUnsigned: true)
!1273 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_16", value: 632, isUnsigned: true)
!1274 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_N", value: 633, isUnsigned: true)
!1275 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_1", value: 634, isUnsigned: true)
!1276 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_2", value: 635, isUnsigned: true)
!1277 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_4", value: 636, isUnsigned: true)
!1278 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_8", value: 637, isUnsigned: true)
!1279 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_16", value: 638, isUnsigned: true)
!1280 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_N", value: 639, isUnsigned: true)
!1281 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_1", value: 640, isUnsigned: true)
!1282 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_2", value: 641, isUnsigned: true)
!1283 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_4", value: 642, isUnsigned: true)
!1284 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_8", value: 643, isUnsigned: true)
!1285 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_16", value: 644, isUnsigned: true)
!1286 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_N", value: 645, isUnsigned: true)
!1287 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_1", value: 646, isUnsigned: true)
!1288 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_2", value: 647, isUnsigned: true)
!1289 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_4", value: 648, isUnsigned: true)
!1290 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_8", value: 649, isUnsigned: true)
!1291 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_16", value: 650, isUnsigned: true)
!1292 = !DIEnumerator(name: "BUILT_IN_SYNCHRONIZE", value: 651, isUnsigned: true)
!1293 = !DIEnumerator(name: "BUILT_IN_OMP_GET_THREAD_NUM", value: 652, isUnsigned: true)
!1294 = !DIEnumerator(name: "BUILT_IN_OMP_GET_NUM_THREADS", value: 653, isUnsigned: true)
!1295 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_START", value: 654, isUnsigned: true)
!1296 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_END", value: 655, isUnsigned: true)
!1297 = !DIEnumerator(name: "BUILT_IN_GOMP_BARRIER", value: 656, isUnsigned: true)
!1298 = !DIEnumerator(name: "BUILT_IN_GOMP_TASKWAIT", value: 657, isUnsigned: true)
!1299 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_START", value: 658, isUnsigned: true)
!1300 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_END", value: 659, isUnsigned: true)
!1301 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_START", value: 660, isUnsigned: true)
!1302 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_END", value: 661, isUnsigned: true)
!1303 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_START", value: 662, isUnsigned: true)
!1304 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_START", value: 663, isUnsigned: true)
!1305 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_START", value: 664, isUnsigned: true)
!1306 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_START", value: 665, isUnsigned: true)
!1307 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START", value: 666, isUnsigned: true)
!1308 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START", value: 667, isUnsigned: true)
!1309 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START", value: 668, isUnsigned: true)
!1310 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START", value: 669, isUnsigned: true)
!1311 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_NEXT", value: 670, isUnsigned: true)
!1312 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT", value: 671, isUnsigned: true)
!1313 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_NEXT", value: 672, isUnsigned: true)
!1314 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_NEXT", value: 673, isUnsigned: true)
!1315 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT", value: 674, isUnsigned: true)
!1316 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT", value: 675, isUnsigned: true)
!1317 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT", value: 676, isUnsigned: true)
!1318 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT", value: 677, isUnsigned: true)
!1319 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_START", value: 678, isUnsigned: true)
!1320 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START", value: 679, isUnsigned: true)
!1321 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_START", value: 680, isUnsigned: true)
!1322 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START", value: 681, isUnsigned: true)
!1323 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START", value: 682, isUnsigned: true)
!1324 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START", value: 683, isUnsigned: true)
!1325 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START", value: 684, isUnsigned: true)
!1326 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START", value: 685, isUnsigned: true)
!1327 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT", value: 686, isUnsigned: true)
!1328 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT", value: 687, isUnsigned: true)
!1329 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT", value: 688, isUnsigned: true)
!1330 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT", value: 689, isUnsigned: true)
!1331 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT", value: 690, isUnsigned: true)
!1332 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT", value: 691, isUnsigned: true)
!1333 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT", value: 692, isUnsigned: true)
!1334 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT", value: 693, isUnsigned: true)
!1335 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_STATIC_START", value: 694, isUnsigned: true)
!1336 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC_START", value: 695, isUnsigned: true)
!1337 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED_START", value: 696, isUnsigned: true)
!1338 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME_START", value: 697, isUnsigned: true)
!1339 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END", value: 698, isUnsigned: true)
!1340 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END_NOWAIT", value: 699, isUnsigned: true)
!1341 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_START", value: 700, isUnsigned: true)
!1342 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_END", value: 701, isUnsigned: true)
!1343 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_START", value: 702, isUnsigned: true)
!1344 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_END", value: 703, isUnsigned: true)
!1345 = !DIEnumerator(name: "BUILT_IN_GOMP_TASK", value: 704, isUnsigned: true)
!1346 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_START", value: 705, isUnsigned: true)
!1347 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_NEXT", value: 706, isUnsigned: true)
!1348 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_SECTIONS_START", value: 707, isUnsigned: true)
!1349 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END", value: 708, isUnsigned: true)
!1350 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END_NOWAIT", value: 709, isUnsigned: true)
!1351 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_START", value: 710, isUnsigned: true)
!1352 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_START", value: 711, isUnsigned: true)
!1353 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_END", value: 712, isUnsigned: true)
!1354 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MIN", value: 713, isUnsigned: true)
!1355 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MAX", value: 716, isUnsigned: true)
!1356 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MIN", value: 717, isUnsigned: true)
!1357 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MAX", value: 720, isUnsigned: true)
!1358 = !DIEnumerator(name: "END_BUILTINS", value: 721, isUnsigned: true)
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1360, line: 309, baseType: !7, size: 32, elements: !1361)
!1360 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381}
!1362 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!1363 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!1364 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!1365 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!1366 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!1367 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!1368 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!1369 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!1370 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!1371 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!1372 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!1373 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!1374 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!1375 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!1376 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!1377 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!1378 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!1379 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!1380 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!1381 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!1382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !1383, line: 51, baseType: !7, size: 32, elements: !1384)
!1383 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1384 = !{!1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420}
!1385 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!1386 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!1387 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!1388 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!1389 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!1390 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!1391 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!1392 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!1393 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!1394 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!1395 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!1396 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!1397 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!1398 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!1399 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!1400 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!1401 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!1402 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!1403 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!1404 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!1405 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!1406 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!1407 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!1408 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!1409 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!1410 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!1411 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!1412 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!1413 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!1414 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!1415 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!1416 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!1417 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!1418 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!1419 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!1420 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!1421 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !1383, line: 727, baseType: !7, size: 32, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446}
!1423 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!1424 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!1425 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!1426 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!1427 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!1428 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!1429 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!1430 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!1431 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!1432 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!1433 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!1434 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!1435 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!1436 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!1437 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!1438 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!1439 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!1440 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!1441 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!1442 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!1443 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!1444 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!1445 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!1446 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!1447 = !{!1448, !1449, !1450, !1451, !1454, !1455, !155, !1457, !1511, !1538, !1519, !397, !1584, !1459, !2745, !2747, !1513, !1814, !2748, !2753, !2760, !2767, !2768, !2769, !1452, !20, !639, !1806, !1830, !2774, !2523, !1856, !2775, !7, !2780, !1930, !2789, !1964, !2791}
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1450 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !1458, line: 56, baseType: !1459)
!1458 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !6, line: 3371, size: 1792, elements: !1461)
!1461 = !{!1462, !1495, !1501, !1514, !1533, !1544, !1549, !1558, !1564, !1577, !1589, !1627, !1635, !1663, !1680, !1681, !1686, !1695, !1701, !1706, !1710, !1714, !2394, !2443, !2449, !2455, !2462, !2475, !2489, !2506, !2518, !2540, !2555, !2727}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1460, file: !6, line: 3372, baseType: !1463, size: 64)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !6, line: 360, size: 64, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1463, file: !6, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1463, file: !6, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1463, file: !6, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1463, file: !6, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1463, file: !6, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1463, file: !6, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1463, file: !6, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1463, file: !6, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1463, file: !6, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1463, file: !6, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1463, file: !6, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1463, file: !6, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1463, file: !6, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1463, file: !6, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1463, file: !6, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1463, file: !6, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1463, file: !6, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1463, file: !6, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1463, file: !6, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1463, file: !6, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1463, file: !6, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1463, file: !6, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1463, file: !6, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1463, file: !6, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1463, file: !6, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1463, file: !6, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1463, file: !6, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1463, file: !6, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1463, file: !6, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1463, file: !6, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1460, file: !6, line: 3373, baseType: !1496, size: 192)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !6, line: 402, size: 192, elements: !1497)
!1497 = !{!1498, !1499, !1500}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1496, file: !6, line: 403, baseType: !1463, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1496, file: !6, line: 404, baseType: !1457, size: 64, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1496, file: !6, line: 405, baseType: !1457, size: 64, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1460, file: !6, line: 3374, baseType: !1502, size: 320)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !6, line: 1384, size: 320, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1502, file: !6, line: 1385, baseType: !1496, size: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1502, file: !6, line: 1386, baseType: !1506, size: 128, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1507, line: 58, baseType: !1508)
!1507 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1507, line: 54, size: 128, elements: !1509)
!1509 = !{!1510, !1512}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1508, file: !1507, line: 56, baseType: !1511, size: 64)
!1511 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1508, file: !1507, line: 57, baseType: !1513, size: 64, offset: 64)
!1513 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1460, file: !6, line: 3375, baseType: !1515, size: 256)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !6, line: 1397, size: 256, elements: !1516)
!1516 = !{!1517, !1518}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1515, file: !6, line: 1398, baseType: !1496, size: 192)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1515, file: !6, line: 1399, baseType: !1519, size: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1521, line: 52, size: 256, elements: !1522)
!1521 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1522 = !{!1523, !1524, !1525, !1526, !1527, !1528, !1529}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1520, file: !1521, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1520, file: !1521, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1520, file: !1521, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1520, file: !1521, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1520, file: !1521, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1520, file: !1521, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1520, file: !1521, line: 62, baseType: !1530, size: 192, offset: 64)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1511, size: 192, elements: !1531)
!1531 = !{!1532}
!1532 = !DISubrange(count: 3)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1460, file: !6, line: 3376, baseType: !1534, size: 256)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !6, line: 1408, size: 256, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1534, file: !6, line: 1409, baseType: !1496, size: 192)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1534, file: !6, line: 1410, baseType: !1538, size: 64, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1540, line: 27, size: 192, elements: !1541)
!1540 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1539, file: !1540, line: 29, baseType: !1506, size: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1539, file: !1540, line: 30, baseType: !20, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1460, file: !6, line: 3377, baseType: !1545, size: 256)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !6, line: 1437, size: 256, elements: !1546)
!1546 = !{!1547, !1548}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1545, file: !6, line: 1438, baseType: !1496, size: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1545, file: !6, line: 1439, baseType: !1457, size: 64, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1460, file: !6, line: 3378, baseType: !1550, size: 256)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !6, line: 1418, size: 256, elements: !1551)
!1551 = !{!1552, !1553, !1554}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1550, file: !6, line: 1419, baseType: !1496, size: 192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1550, file: !6, line: 1420, baseType: !1450, size: 32, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1550, file: !6, line: 1421, baseType: !1555, size: 8, offset: 224)
!1555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1453, size: 8, elements: !1556)
!1556 = !{!1557}
!1557 = !DISubrange(count: 1)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1460, file: !6, line: 3379, baseType: !1559, size: 320)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !6, line: 1428, size: 320, elements: !1560)
!1560 = !{!1561, !1562, !1563}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1559, file: !6, line: 1429, baseType: !1496, size: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1559, file: !6, line: 1430, baseType: !1457, size: 64, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1559, file: !6, line: 1431, baseType: !1457, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1460, file: !6, line: 3380, baseType: !1565, size: 320)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !6, line: 1460, size: 320, elements: !1566)
!1566 = !{!1567, !1568}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1565, file: !6, line: 1461, baseType: !1496, size: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1565, file: !6, line: 1462, baseType: !1569, size: 128, offset: 192)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1570, line: 31, size: 128, elements: !1571)
!1570 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1571 = !{!1572, !1575, !1576}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1569, file: !1570, line: 32, baseType: !1573, size: 64)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1449)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1569, file: !1570, line: 33, baseType: !7, size: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1569, file: !1570, line: 34, baseType: !7, size: 32, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1460, file: !6, line: 3381, baseType: !1578, size: 384)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !6, line: 2507, size: 384, elements: !1579)
!1579 = !{!1580, !1581, !1586, !1587, !1588}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1578, file: !6, line: 2508, baseType: !1496, size: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1578, file: !6, line: 2509, baseType: !1582, size: 32, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1583, line: 58, baseType: !1584)
!1583 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1585, line: 44, baseType: !7)
!1585 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1578, file: !6, line: 2510, baseType: !7, size: 32, offset: 224)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1578, file: !6, line: 2511, baseType: !1457, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1578, file: !6, line: 2512, baseType: !1457, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1460, file: !6, line: 3382, baseType: !1590, size: 896)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !6, line: 2652, size: 896, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1590, file: !6, line: 2653, baseType: !1578, size: 384)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1590, file: !6, line: 2654, baseType: !1457, size: 64, offset: 384)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1590, file: !6, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1590, file: !6, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1590, file: !6, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1590, file: !6, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1590, file: !6, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1590, file: !6, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1590, file: !6, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1590, file: !6, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1590, file: !6, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1590, file: !6, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1590, file: !6, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1590, file: !6, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1590, file: !6, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1590, file: !6, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1590, file: !6, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1590, file: !6, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1590, file: !6, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1590, file: !6, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1590, file: !6, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1590, file: !6, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1590, file: !6, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1590, file: !6, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1590, file: !6, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1590, file: !6, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1590, file: !6, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1590, file: !6, line: 2703, baseType: !7, size: 32, offset: 512)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1590, file: !6, line: 2705, baseType: !1457, size: 64, offset: 576)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1590, file: !6, line: 2706, baseType: !1457, size: 64, offset: 640)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1590, file: !6, line: 2707, baseType: !1457, size: 64, offset: 704)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1590, file: !6, line: 2708, baseType: !1457, size: 64, offset: 768)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1590, file: !6, line: 2711, baseType: !1625, size: 64, offset: 832)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !6, line: 2711, flags: DIFlagFwdDecl)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1460, file: !6, line: 3383, baseType: !1628, size: 960)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !6, line: 2756, size: 960, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1628, file: !6, line: 2757, baseType: !1590, size: 896)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1628, file: !6, line: 2758, baseType: !1632, size: 64, offset: 896)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !1458, line: 50, baseType: !1633)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !1458, line: 49, flags: DIFlagFwdDecl)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1460, file: !6, line: 3384, baseType: !1636, size: 1472)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !6, line: 3114, size: 1472, elements: !1637)
!1637 = !{!1638, !1659, !1660, !1661, !1662}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1636, file: !6, line: 3115, baseType: !1639, size: 1216)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !6, line: 2984, size: 1216, elements: !1640)
!1640 = !{!1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1639, file: !6, line: 2985, baseType: !1628, size: 960)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1639, file: !6, line: 2986, baseType: !1457, size: 64, offset: 960)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1639, file: !6, line: 2987, baseType: !1457, size: 64, offset: 1024)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1639, file: !6, line: 2988, baseType: !1457, size: 64, offset: 1088)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1639, file: !6, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1639, file: !6, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1639, file: !6, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1639, file: !6, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1639, file: !6, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1639, file: !6, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1639, file: !6, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1639, file: !6, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1639, file: !6, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1639, file: !6, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1639, file: !6, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1639, file: !6, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1639, file: !6, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1639, file: !6, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1636, file: !6, line: 3117, baseType: !1457, size: 64, offset: 1216)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1636, file: !6, line: 3119, baseType: !1457, size: 64, offset: 1280)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1636, file: !6, line: 3121, baseType: !1457, size: 64, offset: 1344)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1636, file: !6, line: 3123, baseType: !1457, size: 64, offset: 1408)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1460, file: !6, line: 3385, baseType: !1664, size: 1088)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !6, line: 2874, size: 1088, elements: !1665)
!1665 = !{!1666, !1667, !1668}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1664, file: !6, line: 2875, baseType: !1628, size: 960)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1664, file: !6, line: 2876, baseType: !1632, size: 64, offset: 960)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1664, file: !6, line: 2877, baseType: !1669, size: 64, offset: 1024)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1671, line: 172, size: 128, elements: !1672)
!1671 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1672 = !{!1673, !1674, !1675, !1676, !1677, !1678, !1679}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1670, file: !1671, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1670, file: !1671, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1670, file: !1671, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1670, file: !1671, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1670, file: !1671, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1670, file: !1671, line: 195, baseType: !7, size: 32, offset: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1670, file: !1671, line: 199, baseType: !1457, size: 64, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1460, file: !6, line: 3386, baseType: !1639, size: 1216)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1460, file: !6, line: 3387, baseType: !1682, size: 1280)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !6, line: 3093, size: 1280, elements: !1683)
!1683 = !{!1684, !1685}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1682, file: !6, line: 3094, baseType: !1639, size: 1216)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1682, file: !6, line: 3095, baseType: !1669, size: 64, offset: 1216)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1460, file: !6, line: 3388, baseType: !1687, size: 1216)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !6, line: 2824, size: 1216, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1693, !1694}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1687, file: !6, line: 2825, baseType: !1590, size: 896)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1687, file: !6, line: 2827, baseType: !1457, size: 64, offset: 896)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1687, file: !6, line: 2828, baseType: !1457, size: 64, offset: 960)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1687, file: !6, line: 2829, baseType: !1457, size: 64, offset: 1024)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1687, file: !6, line: 2830, baseType: !1457, size: 64, offset: 1088)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1687, file: !6, line: 2831, baseType: !1457, size: 64, offset: 1152)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1460, file: !6, line: 3389, baseType: !1696, size: 1024)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !6, line: 2850, size: 1024, elements: !1697)
!1697 = !{!1698, !1699, !1700}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1696, file: !6, line: 2851, baseType: !1628, size: 960)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1696, file: !6, line: 2852, baseType: !1450, size: 32, offset: 960)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1696, file: !6, line: 2853, baseType: !1450, size: 32, offset: 992)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1460, file: !6, line: 3390, baseType: !1702, size: 1024)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !6, line: 2857, size: 1024, elements: !1703)
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1702, file: !6, line: 2858, baseType: !1628, size: 960)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1702, file: !6, line: 2859, baseType: !1669, size: 64, offset: 960)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1460, file: !6, line: 3391, baseType: !1707, size: 960)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !6, line: 2862, size: 960, elements: !1708)
!1708 = !{!1709}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1707, file: !6, line: 2863, baseType: !1628, size: 960)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1460, file: !6, line: 3392, baseType: !1711, size: 1472)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !6, line: 3304, size: 1472, elements: !1712)
!1712 = !{!1713}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1711, file: !6, line: 3305, baseType: !1636, size: 1472)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1460, file: !6, line: 3393, baseType: !1715, size: 1792)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !6, line: 3248, size: 1792, elements: !1716)
!1716 = !{!1717, !1718, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1715, file: !6, line: 3249, baseType: !1636, size: 1472)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1715, file: !6, line: 3251, baseType: !1719, size: 64, offset: 1472)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1721, line: 463, size: 1152, elements: !1722)
!1721 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1722 = !{!1723, !1887, !2201, !2202, !2314, !2317, !2318, !2319, !2320, !2321, !2322, !2346, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1720, file: !1721, line: 464, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !149, line: 194, size: 384, elements: !1726)
!1726 = !{!1727, !1776, !1789, !1803, !1855, !1868}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1725, file: !149, line: 197, baseType: !1728, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !149, line: 182, baseType: !1729)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !149, line: 116, size: 704, elements: !1731)
!1731 = !{!1732, !1733, !1734, !1735, !1736, !1737, !1764, !1773, !1774, !1775}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1730, file: !149, line: 119, baseType: !1729, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1730, file: !149, line: 122, baseType: !1729, size: 64, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1730, file: !149, line: 123, baseType: !1729, size: 64, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1730, file: !149, line: 126, baseType: !1450, size: 32, offset: 192)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1730, file: !149, line: 129, baseType: !148, size: 32, offset: 224)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1730, file: !149, line: 165, baseType: !1738, size: 192, offset: 256)
!1738 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !149, line: 132, size: 192, elements: !1739)
!1739 = !{!1740, !1753, !1759}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1738, file: !149, line: 137, baseType: !1741, size: 128)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !149, line: 133, size: 128, elements: !1742)
!1742 = !{!1743, !1752}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1741, file: !149, line: 135, baseType: !1744, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !149, line: 93, size: 320, elements: !1746)
!1746 = !{!1747, !1748, !1749, !1750, !1751}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1745, file: !149, line: 96, baseType: !1744, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1745, file: !149, line: 97, baseType: !1744, size: 64, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1745, file: !149, line: 101, baseType: !1457, size: 64, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1745, file: !149, line: 106, baseType: !1457, size: 64, offset: 192)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1745, file: !149, line: 111, baseType: !1457, size: 64, offset: 256)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1741, file: !149, line: 136, baseType: !1744, size: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1738, file: !149, line: 151, baseType: !1754, size: 192)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !149, line: 139, size: 192, elements: !1755)
!1755 = !{!1756, !1757, !1758}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1754, file: !149, line: 141, baseType: !1457, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1754, file: !149, line: 145, baseType: !1457, size: 64, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1754, file: !149, line: 150, baseType: !1450, size: 32, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1738, file: !149, line: 164, baseType: !1760, size: 128)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !149, line: 153, size: 128, elements: !1761)
!1761 = !{!1762, !1763}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1760, file: !149, line: 161, baseType: !1457, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1760, file: !149, line: 163, baseType: !1582, size: 32, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1730, file: !149, line: 168, baseType: !1765, size: 64, offset: 448)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !149, line: 67, size: 320, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1772}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1766, file: !149, line: 70, baseType: !1765, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1766, file: !149, line: 73, baseType: !1729, size: 64, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1766, file: !149, line: 78, baseType: !1457, size: 64, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1766, file: !149, line: 85, baseType: !1632, size: 64, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1766, file: !149, line: 88, baseType: !1450, size: 32, offset: 256)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1730, file: !149, line: 173, baseType: !1632, size: 64, offset: 512)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1730, file: !149, line: 173, baseType: !1632, size: 64, offset: 576)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1730, file: !149, line: 177, baseType: !1449, size: 8, offset: 640)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1725, file: !149, line: 200, baseType: !1777, size: 64, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !149, line: 185, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !149, line: 185, size: 128, elements: !1780)
!1780 = !{!1781}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1779, file: !149, line: 185, baseType: !1782, size: 128)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !149, line: 184, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !149, line: 184, size: 128, elements: !1784)
!1784 = !{!1785, !1786, !1787}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1783, file: !149, line: 184, baseType: !7, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1783, file: !149, line: 184, baseType: !7, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1783, file: !149, line: 184, baseType: !1788, size: 64, offset: 64)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1728, size: 64, elements: !1556)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1725, file: !149, line: 203, baseType: !1790, size: 64, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !149, line: 189, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !149, line: 189, size: 128, elements: !1793)
!1793 = !{!1794}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1792, file: !149, line: 189, baseType: !1795, size: 128)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !149, line: 188, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !149, line: 188, size: 128, elements: !1797)
!1797 = !{!1798, !1799, !1800}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1796, file: !149, line: 188, baseType: !7, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1796, file: !149, line: 188, baseType: !7, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1796, file: !149, line: 188, baseType: !1801, size: 64, offset: 64)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1802, size: 64, elements: !1556)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !149, line: 180, baseType: !1765)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1725, file: !149, line: 207, baseType: !1804, size: 64, offset: 192)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1805, line: 144, baseType: !1806)
!1805 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1805, line: 100, size: 896, elements: !1808)
!1808 = !{!1809, !1817, !1822, !1827, !1829, !1832, !1833, !1834, !1835, !1836, !1841, !1843, !1844, !1849, !1854}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1807, file: !1805, line: 102, baseType: !1810, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1805, line: 52, baseType: !1811)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!1814, !1815}
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1805, line: 47, baseType: !7)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1807, file: !1805, line: 105, baseType: !1818, size: 64, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1805, line: 59, baseType: !1819)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!1450, !1815, !1815}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1807, file: !1805, line: 108, baseType: !1823, size: 64, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1805, line: 63, baseType: !1824)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{null, !1454}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1807, file: !1805, line: 111, baseType: !1828, size: 64, offset: 192)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1807, file: !1805, line: 114, baseType: !1830, size: 64, offset: 256)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1831, line: 46, baseType: !1511)
!1831 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1807, file: !1805, line: 117, baseType: !1830, size: 64, offset: 320)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1807, file: !1805, line: 120, baseType: !1830, size: 64, offset: 384)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1807, file: !1805, line: 124, baseType: !7, size: 32, offset: 448)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1807, file: !1805, line: 128, baseType: !7, size: 32, offset: 480)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1807, file: !1805, line: 131, baseType: !1837, size: 64, offset: 512)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1805, line: 75, baseType: !1838)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!1454, !1830, !1830}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1807, file: !1805, line: 132, baseType: !1842, size: 64, offset: 576)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1805, line: 78, baseType: !1824)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1807, file: !1805, line: 135, baseType: !1454, size: 64, offset: 640)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1807, file: !1805, line: 136, baseType: !1845, size: 64, offset: 704)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1805, line: 82, baseType: !1846)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!1454, !1454, !1830, !1830}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1807, file: !1805, line: 137, baseType: !1850, size: 64, offset: 768)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1805, line: 83, baseType: !1851)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !1454, !1454}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1807, file: !1805, line: 141, baseType: !7, size: 32, offset: 832)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1725, file: !149, line: 211, baseType: !1856, size: 64, offset: 256)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !6, line: 183, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !6, line: 183, size: 128, elements: !1859)
!1859 = !{!1860}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1858, file: !6, line: 183, baseType: !1861, size: 128)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !6, line: 182, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !6, line: 182, size: 128, elements: !1863)
!1863 = !{!1864, !1865, !1866}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1862, file: !6, line: 182, baseType: !7, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1862, file: !6, line: 182, baseType: !7, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1862, file: !6, line: 182, baseType: !1867, size: 64, offset: 64)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1457, size: 64, elements: !1556)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1725, file: !149, line: 220, baseType: !1869, size: 64, offset: 320)
!1869 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !149, line: 217, size: 64, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1869, file: !149, line: 218, baseType: !1856, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1869, file: !149, line: 219, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1875, line: 29, baseType: !1876)
!1875 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1875, line: 29, size: 96, elements: !1877)
!1877 = !{!1878}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1876, file: !1875, line: 29, baseType: !1879, size: 96)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1875, line: 27, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1875, line: 27, size: 96, elements: !1881)
!1881 = !{!1882, !1883, !1884}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1880, file: !1875, line: 27, baseType: !7, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1880, file: !1875, line: 27, baseType: !7, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1880, file: !1875, line: 27, baseType: !1885, size: 8, offset: 64)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 8, elements: !1556)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1875, line: 26, baseType: !1449)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1720, file: !1721, line: 467, baseType: !1888, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !350, line: 374, size: 640, elements: !1890)
!1890 = !{!1891, !2176, !2177, !2190, !2191, !2192, !2193, !2194, !2195, !2197, !2199, !2200}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1889, file: !350, line: 377, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !1458, line: 111, baseType: !1893)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !350, line: 217, size: 832, elements: !1895)
!1895 = !{!1896, !2139, !2140, !2141, !2144, !2150, !2151, !2152, !2170, !2171, !2172, !2173, !2174, !2175}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1894, file: !350, line: 219, baseType: !1897, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !350, line: 151, baseType: !1899)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !350, line: 151, size: 128, elements: !1900)
!1900 = !{!1901}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1899, file: !350, line: 151, baseType: !1902, size: 128)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !350, line: 150, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !350, line: 150, size: 128, elements: !1904)
!1904 = !{!1905, !1906, !1907}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1903, file: !350, line: 150, baseType: !7, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1903, file: !350, line: 150, baseType: !7, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1903, file: !350, line: 150, baseType: !1908, size: 64, offset: 64)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1909, size: 64, elements: !1556)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !1458, line: 108, baseType: !1910)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !350, line: 122, size: 512, elements: !1912)
!1912 = !{!1913, !1914, !1915, !2131, !2132, !2133, !2134, !2135, !2136, !2137}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1911, file: !350, line: 124, baseType: !1893, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1911, file: !350, line: 125, baseType: !1893, size: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1911, file: !350, line: 131, baseType: !1916, size: 64, offset: 128)
!1916 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !350, line: 128, size: 64, elements: !1917)
!1917 = !{!1918, !2130}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1916, file: !350, line: 129, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !1458, line: 66, baseType: !1920)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !1383, line: 143, size: 192, elements: !1922)
!1922 = !{!1923, !2128, !2129}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1921, file: !1383, line: 145, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !1458, line: 69, baseType: !1925)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !1383, line: 136, size: 192, elements: !1927)
!1927 = !{!1928, !2126, !2127}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1926, file: !1383, line: 137, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !1458, line: 58, baseType: !1930)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !1383, line: 737, size: 768, elements: !1932)
!1932 = !{!1933, !1950, !1983, !1989, !1994, !1999, !2006, !2012, !2018, !2023, !2037, !2042, !2048, !2053, !2063, !2068, !2084, !2091, !2098, !2104, !2109, !2115, !2121}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1931, file: !1383, line: 738, baseType: !1934, size: 256)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !1383, line: 271, size: 256, elements: !1935)
!1935 = !{!1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1934, file: !1383, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1934, file: !1383, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1934, file: !1383, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1934, file: !1383, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1934, file: !1383, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1934, file: !1383, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1934, file: !1383, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1934, file: !1383, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1934, file: !1383, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1934, file: !1383, line: 312, baseType: !7, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1934, file: !1383, line: 316, baseType: !1582, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1934, file: !1383, line: 319, baseType: !7, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1934, file: !1383, line: 323, baseType: !1893, size: 64, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1934, file: !1383, line: 327, baseType: !1457, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1931, file: !1383, line: 739, baseType: !1951, size: 448)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !1383, line: 350, size: 448, elements: !1952)
!1952 = !{!1953, !1982}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1951, file: !1383, line: 353, baseType: !1954, size: 384)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !1383, line: 333, size: 384, elements: !1955)
!1955 = !{!1956, !1957, !1965}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1954, file: !1383, line: 336, baseType: !1934, size: 256)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1954, file: !1383, line: 343, baseType: !1958, size: 64, offset: 256)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1960, line: 37, size: 128, elements: !1961)
!1960 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1959, file: !1960, line: 39, baseType: !1958, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1959, file: !1960, line: 40, baseType: !1964, size: 64, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1954, file: !1383, line: 344, baseType: !1966, size: 64, offset: 320)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1960, line: 45, size: 320, elements: !1968)
!1968 = !{!1969, !1970}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1967, file: !1960, line: 47, baseType: !1966, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1967, file: !1960, line: 48, baseType: !1971, size: 256, offset: 64)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !6, line: 1883, size: 256, elements: !1972)
!1972 = !{!1973, !1975, !1976, !1981}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1971, file: !6, line: 1884, baseType: !1974, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1971, file: !6, line: 1885, baseType: !1974, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1971, file: !6, line: 1891, baseType: !1977, size: 64, offset: 128)
!1977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1971, file: !6, line: 1891, size: 64, elements: !1978)
!1978 = !{!1979, !1980}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1977, file: !6, line: 1891, baseType: !1929, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1977, file: !6, line: 1891, baseType: !1457, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1971, file: !6, line: 1892, baseType: !1964, size: 64, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1951, file: !1383, line: 359, baseType: !1867, size: 64, offset: 384)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1931, file: !1383, line: 740, baseType: !1984, size: 512)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !1383, line: 365, size: 512, elements: !1985)
!1985 = !{!1986, !1987, !1988}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1984, file: !1383, line: 368, baseType: !1954, size: 384)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1984, file: !1383, line: 373, baseType: !1457, size: 64, offset: 384)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1984, file: !1383, line: 374, baseType: !1457, size: 64, offset: 448)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1931, file: !1383, line: 741, baseType: !1990, size: 576)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !1383, line: 380, size: 576, elements: !1991)
!1991 = !{!1992, !1993}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1990, file: !1383, line: 383, baseType: !1984, size: 512)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1990, file: !1383, line: 389, baseType: !1867, size: 64, offset: 512)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1931, file: !1383, line: 742, baseType: !1995, size: 320)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !1383, line: 395, size: 320, elements: !1996)
!1996 = !{!1997, !1998}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1995, file: !1383, line: 397, baseType: !1934, size: 256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1995, file: !1383, line: 400, baseType: !1919, size: 64, offset: 256)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1931, file: !1383, line: 743, baseType: !2000, size: 448)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !1383, line: 406, size: 448, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2000, file: !1383, line: 408, baseType: !1934, size: 256)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2000, file: !1383, line: 412, baseType: !1457, size: 64, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2000, file: !1383, line: 420, baseType: !1457, size: 64, offset: 320)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !2000, file: !1383, line: 423, baseType: !1919, size: 64, offset: 384)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1931, file: !1383, line: 744, baseType: !2007, size: 384)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !1383, line: 429, size: 384, elements: !2008)
!2008 = !{!2009, !2010, !2011}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2007, file: !1383, line: 431, baseType: !1934, size: 256)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2007, file: !1383, line: 434, baseType: !1457, size: 64, offset: 256)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2007, file: !1383, line: 437, baseType: !1919, size: 64, offset: 320)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1931, file: !1383, line: 745, baseType: !2013, size: 384)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !1383, line: 443, size: 384, elements: !2014)
!2014 = !{!2015, !2016, !2017}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2013, file: !1383, line: 445, baseType: !1934, size: 256)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2013, file: !1383, line: 449, baseType: !1457, size: 64, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !2013, file: !1383, line: 453, baseType: !1919, size: 64, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1931, file: !1383, line: 746, baseType: !2019, size: 320)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !1383, line: 459, size: 320, elements: !2020)
!2020 = !{!2021, !2022}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2019, file: !1383, line: 461, baseType: !1934, size: 256)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !2019, file: !1383, line: 464, baseType: !1457, size: 64, offset: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1931, file: !1383, line: 747, baseType: !2024, size: 768)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !1383, line: 469, size: 768, elements: !2025)
!2025 = !{!2026, !2027, !2028, !2029, !2030}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2024, file: !1383, line: 471, baseType: !1934, size: 256)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2024, file: !1383, line: 474, baseType: !7, size: 32, offset: 256)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2024, file: !1383, line: 475, baseType: !7, size: 32, offset: 288)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2024, file: !1383, line: 478, baseType: !1457, size: 64, offset: 320)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2024, file: !1383, line: 481, baseType: !2031, size: 384, offset: 384)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 384, elements: !1556)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !6, line: 1917, size: 384, elements: !2033)
!2033 = !{!2034, !2035, !2036}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !2032, file: !6, line: 1920, baseType: !1971, size: 256)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2032, file: !6, line: 1921, baseType: !1457, size: 64, offset: 256)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2032, file: !6, line: 1922, baseType: !1582, size: 32, offset: 320)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1931, file: !1383, line: 748, baseType: !2038, size: 320)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !1383, line: 487, size: 320, elements: !2039)
!2039 = !{!2040, !2041}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2038, file: !1383, line: 490, baseType: !1934, size: 256)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2038, file: !1383, line: 494, baseType: !1450, size: 32, offset: 256)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1931, file: !1383, line: 749, baseType: !2043, size: 384)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !1383, line: 500, size: 384, elements: !2044)
!2044 = !{!2045, !2046, !2047}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2043, file: !1383, line: 502, baseType: !1934, size: 256)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !2043, file: !1383, line: 506, baseType: !1919, size: 64, offset: 256)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2043, file: !1383, line: 510, baseType: !1919, size: 64, offset: 320)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1931, file: !1383, line: 750, baseType: !2049, size: 320)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !1383, line: 529, size: 320, elements: !2050)
!2050 = !{!2051, !2052}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2049, file: !1383, line: 531, baseType: !1934, size: 256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2049, file: !1383, line: 540, baseType: !1919, size: 64, offset: 256)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1931, file: !1383, line: 751, baseType: !2054, size: 704)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !1383, line: 546, size: 704, elements: !2055)
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !2054, file: !1383, line: 549, baseType: !1984, size: 512)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2054, file: !1383, line: 553, baseType: !1455, size: 64, offset: 512)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !2054, file: !1383, line: 557, baseType: !1449, size: 8, offset: 576)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2054, file: !1383, line: 558, baseType: !1449, size: 8, offset: 584)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !2054, file: !1383, line: 559, baseType: !1449, size: 8, offset: 592)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !2054, file: !1383, line: 560, baseType: !1449, size: 8, offset: 600)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2054, file: !1383, line: 566, baseType: !1867, size: 64, offset: 640)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1931, file: !1383, line: 752, baseType: !2064, size: 384)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !1383, line: 571, size: 384, elements: !2065)
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2064, file: !1383, line: 573, baseType: !1995, size: 320)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2064, file: !1383, line: 577, baseType: !1457, size: 64, offset: 320)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1931, file: !1383, line: 753, baseType: !2069, size: 576)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !1383, line: 600, size: 576, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2074, !2083}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2069, file: !1383, line: 602, baseType: !1995, size: 320)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2069, file: !1383, line: 605, baseType: !1457, size: 64, offset: 320)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !2069, file: !1383, line: 609, baseType: !1830, size: 64, offset: 384)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2069, file: !1383, line: 612, baseType: !2075, size: 64, offset: 448)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !1383, line: 581, size: 320, elements: !2077)
!2077 = !{!2078, !2079, !2080, !2081, !2082}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2076, file: !1383, line: 583, baseType: !155, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2076, file: !1383, line: 586, baseType: !1457, size: 64, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2076, file: !1383, line: 589, baseType: !1457, size: 64, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !2076, file: !1383, line: 592, baseType: !1457, size: 64, offset: 192)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2076, file: !1383, line: 595, baseType: !1457, size: 64, offset: 256)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !2069, file: !1383, line: 616, baseType: !1919, size: 64, offset: 512)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1931, file: !1383, line: 754, baseType: !2085, size: 512)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !1383, line: 622, size: 512, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2090}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2085, file: !1383, line: 624, baseType: !1995, size: 320)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2085, file: !1383, line: 628, baseType: !1457, size: 64, offset: 320)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !2085, file: !1383, line: 632, baseType: !1457, size: 64, offset: 384)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !2085, file: !1383, line: 636, baseType: !1457, size: 64, offset: 448)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1931, file: !1383, line: 755, baseType: !2092, size: 704)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !1383, line: 642, size: 704, elements: !2093)
!2093 = !{!2094, !2095, !2096, !2097}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2092, file: !1383, line: 644, baseType: !2085, size: 512)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !2092, file: !1383, line: 648, baseType: !1457, size: 64, offset: 512)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !2092, file: !1383, line: 652, baseType: !1457, size: 64, offset: 576)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !2092, file: !1383, line: 653, baseType: !1457, size: 64, offset: 640)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1931, file: !1383, line: 756, baseType: !2099, size: 448)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !1383, line: 663, size: 448, elements: !2100)
!2100 = !{!2101, !2102, !2103}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2099, file: !1383, line: 665, baseType: !1995, size: 320)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2099, file: !1383, line: 668, baseType: !1457, size: 64, offset: 320)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2099, file: !1383, line: 673, baseType: !1457, size: 64, offset: 384)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1931, file: !1383, line: 757, baseType: !2105, size: 384)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !1383, line: 694, size: 384, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2105, file: !1383, line: 696, baseType: !1995, size: 320)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2105, file: !1383, line: 699, baseType: !1457, size: 64, offset: 320)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1931, file: !1383, line: 758, baseType: !2110, size: 384)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !1383, line: 681, size: 384, elements: !2111)
!2111 = !{!2112, !2113, !2114}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2110, file: !1383, line: 683, baseType: !1934, size: 256)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !2110, file: !1383, line: 686, baseType: !1457, size: 64, offset: 256)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !2110, file: !1383, line: 689, baseType: !1457, size: 64, offset: 320)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1931, file: !1383, line: 759, baseType: !2116, size: 384)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !1383, line: 707, size: 384, elements: !2117)
!2117 = !{!2118, !2119, !2120}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2116, file: !1383, line: 709, baseType: !1934, size: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2116, file: !1383, line: 712, baseType: !1457, size: 64, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !2116, file: !1383, line: 712, baseType: !1457, size: 64, offset: 320)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1931, file: !1383, line: 760, baseType: !2122, size: 320)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !1383, line: 718, size: 320, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2122, file: !1383, line: 720, baseType: !1934, size: 256)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2122, file: !1383, line: 723, baseType: !1457, size: 64, offset: 256)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1926, file: !1383, line: 138, baseType: !1925, size: 64, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1926, file: !1383, line: 139, baseType: !1925, size: 64, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1921, file: !1383, line: 146, baseType: !1924, size: 64, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1921, file: !1383, line: 152, baseType: !1919, size: 64, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1916, file: !350, line: 130, baseType: !1632, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1911, file: !350, line: 134, baseType: !1454, size: 64, offset: 192)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1911, file: !350, line: 137, baseType: !1457, size: 64, offset: 256)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1911, file: !350, line: 138, baseType: !1582, size: 32, offset: 320)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1911, file: !350, line: 142, baseType: !7, size: 32, offset: 352)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1911, file: !350, line: 144, baseType: !1450, size: 32, offset: 384)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1911, file: !350, line: 145, baseType: !1450, size: 32, offset: 416)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1911, file: !350, line: 146, baseType: !2138, size: 64, offset: 448)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !350, line: 119, baseType: !1513)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1894, file: !350, line: 220, baseType: !1897, size: 64, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1894, file: !350, line: 223, baseType: !1454, size: 64, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1894, file: !350, line: 226, baseType: !2142, size: 64, offset: 192)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !350, line: 185, flags: DIFlagFwdDecl)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1894, file: !350, line: 229, baseType: !2145, size: 128, offset: 256)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2146, size: 128, elements: !2148)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !350, line: 229, flags: DIFlagFwdDecl)
!2148 = !{!2149}
!2149 = !DISubrange(count: 2)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1894, file: !350, line: 232, baseType: !1893, size: 64, offset: 384)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1894, file: !350, line: 233, baseType: !1893, size: 64, offset: 448)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1894, file: !350, line: 238, baseType: !2153, size: 64, offset: 512)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !350, line: 235, size: 64, elements: !2154)
!2154 = !{!2155, !2161}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2153, file: !350, line: 236, baseType: !2156, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !350, line: 273, size: 128, elements: !2158)
!2158 = !{!2159, !2160}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2157, file: !350, line: 275, baseType: !1919, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2157, file: !350, line: 278, baseType: !1919, size: 64, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2153, file: !350, line: 237, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !350, line: 259, size: 320, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2163, file: !350, line: 261, baseType: !1632, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2163, file: !350, line: 262, baseType: !1632, size: 64, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2163, file: !350, line: 266, baseType: !1632, size: 64, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2163, file: !350, line: 267, baseType: !1632, size: 64, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2163, file: !350, line: 270, baseType: !1450, size: 32, offset: 256)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1894, file: !350, line: 241, baseType: !2138, size: 64, offset: 576)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1894, file: !350, line: 244, baseType: !1450, size: 32, offset: 640)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1894, file: !350, line: 247, baseType: !1450, size: 32, offset: 672)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1894, file: !350, line: 250, baseType: !1450, size: 32, offset: 704)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1894, file: !350, line: 253, baseType: !1450, size: 32, offset: 736)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1894, file: !350, line: 256, baseType: !1450, size: 32, offset: 768)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1889, file: !350, line: 378, baseType: !1892, size: 64, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1889, file: !350, line: 381, baseType: !2178, size: 64, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !350, line: 282, baseType: !2180)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !350, line: 282, size: 128, elements: !2181)
!2181 = !{!2182}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2180, file: !350, line: 282, baseType: !2183, size: 128)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !350, line: 281, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !350, line: 281, size: 128, elements: !2185)
!2185 = !{!2186, !2187, !2188}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2184, file: !350, line: 281, baseType: !7, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2184, file: !350, line: 281, baseType: !7, size: 32, offset: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2184, file: !350, line: 281, baseType: !2189, size: 64, offset: 64)
!2189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 64, elements: !1556)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1889, file: !350, line: 384, baseType: !1450, size: 32, offset: 192)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1889, file: !350, line: 387, baseType: !1450, size: 32, offset: 224)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1889, file: !350, line: 390, baseType: !1450, size: 32, offset: 256)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1889, file: !350, line: 394, baseType: !2178, size: 64, offset: 320)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1889, file: !350, line: 396, baseType: !349, size: 32, offset: 384)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1889, file: !350, line: 399, baseType: !2196, size: 64, offset: 416)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 64, elements: !2148)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1889, file: !350, line: 402, baseType: !2198, size: 64, offset: 480)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2148)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1889, file: !350, line: 406, baseType: !1450, size: 32, offset: 544)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1889, file: !350, line: 409, baseType: !1450, size: 32, offset: 576)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1720, file: !1721, line: 470, baseType: !1920, size: 64, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1720, file: !1721, line: 473, baseType: !2203, size: 64, offset: 192)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1671, line: 39, size: 1152, elements: !2205)
!2205 = !{!2206, !2207, !2220, !2221, !2222, !2291, !2292, !2296, !2297, !2298, !2299, !2300}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !2204, file: !1671, line: 41, baseType: !1804, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !2204, file: !1671, line: 48, baseType: !2208, size: 64, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !1383, line: 35, baseType: !2210)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !1383, line: 35, size: 128, elements: !2211)
!2211 = !{!2212}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2210, file: !1383, line: 35, baseType: !2213, size: 128)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !1383, line: 33, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !1383, line: 33, size: 128, elements: !2215)
!2215 = !{!2216, !2217, !2218}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2214, file: !1383, line: 33, baseType: !7, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2214, file: !1383, line: 33, baseType: !7, size: 32, offset: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2214, file: !1383, line: 33, baseType: !2219, size: 64, offset: 64)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 64, elements: !1556)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !2204, file: !1671, line: 51, baseType: !1856, size: 64, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !2204, file: !1671, line: 54, baseType: !1457, size: 64, offset: 192)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !2204, file: !1671, line: 57, baseType: !2223, size: 128, offset: 256)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !2224, line: 31, size: 128, elements: !2225)
!2224 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2225 = !{!2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !2223, file: !2224, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !2223, file: !2224, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !2223, file: !2224, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !2223, file: !2224, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !2223, file: !2224, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !2223, file: !2224, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2223, file: !2224, line: 56, baseType: !2233, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !1458, line: 47, baseType: !2234)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !2236, line: 75, size: 256, elements: !2237)
!2236 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2237 = !{!2238, !2250, !2251, !2252}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2235, file: !2236, line: 76, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !2236, line: 68, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !2236, line: 63, size: 320, elements: !2242)
!2242 = !{!2243, !2245, !2246, !2247}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2241, file: !2236, line: 64, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2241, file: !2236, line: 65, baseType: !2244, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2241, file: !2236, line: 66, baseType: !7, size: 32, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2241, file: !2236, line: 67, baseType: !2248, size: 128, offset: 192)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2249, size: 128, elements: !2148)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !2236, line: 29, baseType: !1511)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2235, file: !2236, line: 77, baseType: !2239, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2235, file: !2236, line: 78, baseType: !7, size: 32, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2235, file: !2236, line: 79, baseType: !2253, size: 64, offset: 192)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !2236, line: 49, baseType: !2255)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !2236, line: 45, size: 832, elements: !2256)
!2256 = !{!2257, !2258, !2259}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2255, file: !2236, line: 46, baseType: !2244, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !2255, file: !2236, line: 47, baseType: !2234, size: 64, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2255, file: !2236, line: 48, baseType: !2260, size: 704, offset: 128)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !2261, line: 164, size: 704, elements: !2262)
!2261 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2262 = !{!2263, !2264, !2274, !2275, !2276, !2277, !2278, !2279, !2283, !2287, !2288, !2289, !2290}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !2260, file: !2261, line: 166, baseType: !1513, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !2260, file: !2261, line: 167, baseType: !2265, size: 64, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !2261, line: 157, size: 192, elements: !2267)
!2267 = !{!2268, !2269, !2270}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2266, file: !2261, line: 159, baseType: !1452, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2266, file: !2261, line: 160, baseType: !2265, size: 64, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2266, file: !2261, line: 161, baseType: !2271, size: 32, offset: 128)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1453, size: 32, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 4)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !2260, file: !2261, line: 168, baseType: !1452, size: 64, offset: 128)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2260, file: !2261, line: 169, baseType: !1452, size: 64, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !2260, file: !2261, line: 170, baseType: !1452, size: 64, offset: 256)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2260, file: !2261, line: 171, baseType: !1513, size: 64, offset: 320)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !2260, file: !2261, line: 172, baseType: !1450, size: 32, offset: 384)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !2260, file: !2261, line: 176, baseType: !2280, size: 64, offset: 448)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = !DISubroutineType(types: !2282)
!2282 = !{!2265, !1454, !1513}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !2260, file: !2261, line: 177, baseType: !2284, size: 64, offset: 512)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{null, !1454, !2265}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !2260, file: !2261, line: 178, baseType: !1454, size: 64, offset: 576)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !2260, file: !2261, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !2260, file: !2261, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !2260, file: !2261, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !2204, file: !1671, line: 60, baseType: !2223, size: 128, offset: 384)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !2204, file: !1671, line: 64, baseType: !2293, size: 64, offset: 512)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !2295, line: 33, flags: DIFlagFwdDecl)
!2295 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !2204, file: !1671, line: 67, baseType: !1457, size: 64, offset: 576)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !2204, file: !1671, line: 73, baseType: !1804, size: 64, offset: 640)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !2204, file: !1671, line: 77, baseType: !2233, size: 64, offset: 704)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !2204, file: !1671, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !2204, file: !1671, line: 82, baseType: !2301, size: 320, offset: 832)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1960, line: 62, size: 320, elements: !2302)
!2302 = !{!2303, !2309, !2310, !2311, !2312, !2313}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !2301, file: !1960, line: 63, baseType: !2304, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1960, line: 56, size: 128, elements: !2306)
!2306 = !{!2307, !2308}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2305, file: !1960, line: 57, baseType: !2304, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2305, file: !1960, line: 58, baseType: !1555, size: 8, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !2301, file: !1960, line: 64, baseType: !7, size: 32, offset: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !2301, file: !1960, line: 66, baseType: !7, size: 32, offset: 96)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !2301, file: !1960, line: 68, baseType: !1449, size: 8, offset: 128)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !2301, file: !1960, line: 70, baseType: !1958, size: 64, offset: 192)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !2301, file: !1960, line: 71, baseType: !1966, size: 64, offset: 256)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1720, file: !1721, line: 476, baseType: !2315, size: 64, offset: 256)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1721, line: 476, flags: DIFlagFwdDecl)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1720, file: !1721, line: 479, baseType: !1804, size: 64, offset: 320)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1720, file: !1721, line: 484, baseType: !1457, size: 64, offset: 384)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1720, file: !1721, line: 488, baseType: !1457, size: 64, offset: 448)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1720, file: !1721, line: 493, baseType: !1457, size: 64, offset: 512)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1720, file: !1721, line: 496, baseType: !1457, size: 64, offset: 576)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1720, file: !1721, line: 501, baseType: !2323, size: 64, offset: 640)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !361, line: 2355, size: 576, elements: !2325)
!2325 = !{!2326, !2329, !2330, !2331, !2332, !2334, !2335, !2340, !2341, !2342, !2343, !2344, !2345}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !2324, file: !361, line: 2356, baseType: !2327, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !361, line: 2356, flags: DIFlagFwdDecl)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !2324, file: !361, line: 2357, baseType: !1455, size: 64, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !2324, file: !361, line: 2358, baseType: !1450, size: 32, offset: 128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !2324, file: !361, line: 2359, baseType: !1450, size: 32, offset: 160)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !2324, file: !361, line: 2360, baseType: !2333, size: 128, offset: 192)
!2333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1450, size: 128, elements: !2272)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !2324, file: !361, line: 2364, baseType: !1450, size: 32, offset: 320)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !2324, file: !361, line: 2367, baseType: !2336, size: 128, offset: 384)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !361, line: 2349, size: 128, elements: !2337)
!2337 = !{!2338, !2339}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2336, file: !361, line: 2351, baseType: !1632, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2336, file: !361, line: 2352, baseType: !1513, size: 64, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2324, file: !361, line: 2371, baseType: !360, size: 32, offset: 512)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !2324, file: !361, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !2324, file: !361, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !2324, file: !361, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !2324, file: !361, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !2324, file: !361, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1720, file: !1721, line: 504, baseType: !2347, size: 64, offset: 704)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 64)
!2348 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1721, line: 504, flags: DIFlagFwdDecl)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1720, file: !1721, line: 507, baseType: !1804, size: 64, offset: 768)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1720, file: !1721, line: 510, baseType: !1450, size: 32, offset: 832)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1720, file: !1721, line: 513, baseType: !1450, size: 32, offset: 864)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1720, file: !1721, line: 516, baseType: !1582, size: 32, offset: 896)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1720, file: !1721, line: 519, baseType: !1582, size: 32, offset: 928)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1720, file: !1721, line: 522, baseType: !7, size: 32, offset: 960)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1720, file: !1721, line: 523, baseType: !7, size: 32, offset: 992)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1720, file: !1721, line: 528, baseType: !1455, size: 64, offset: 1024)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1720, file: !1721, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1720, file: !1721, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1720, file: !1721, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1720, file: !1721, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1720, file: !1721, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1720, file: !1721, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1720, file: !1721, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1720, file: !1721, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1720, file: !1721, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1720, file: !1721, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1720, file: !1721, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1720, file: !1721, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1720, file: !1721, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1720, file: !1721, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1720, file: !1721, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1720, file: !1721, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1715, file: !6, line: 3254, baseType: !1457, size: 64, offset: 1536)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1715, file: !6, line: 3257, baseType: !1457, size: 64, offset: 1600)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1715, file: !6, line: 3258, baseType: !1457, size: 64, offset: 1664)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1715, file: !6, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1715, file: !6, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1715, file: !6, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1715, file: !6, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1715, file: !6, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1715, file: !6, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1715, file: !6, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1715, file: !6, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1715, file: !6, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1715, file: !6, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1715, file: !6, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1715, file: !6, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1715, file: !6, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1715, file: !6, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1715, file: !6, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1715, file: !6, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1715, file: !6, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1715, file: !6, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1460, file: !6, line: 3394, baseType: !2395, size: 1344)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !6, line: 2279, size: 1344, elements: !2396)
!2396 = !{!2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2422, !2423, !2424, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2395, file: !6, line: 2280, baseType: !1496, size: 192)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2395, file: !6, line: 2281, baseType: !1457, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2395, file: !6, line: 2282, baseType: !1457, size: 64, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2395, file: !6, line: 2283, baseType: !1457, size: 64, offset: 320)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2395, file: !6, line: 2284, baseType: !1457, size: 64, offset: 384)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2395, file: !6, line: 2285, baseType: !7, size: 32, offset: 448)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2395, file: !6, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2395, file: !6, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2395, file: !6, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2395, file: !6, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2395, file: !6, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2395, file: !6, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2395, file: !6, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2395, file: !6, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2395, file: !6, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2395, file: !6, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2395, file: !6, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2395, file: !6, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2395, file: !6, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2395, file: !6, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2395, file: !6, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2395, file: !6, line: 2305, baseType: !7, size: 32, offset: 512)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2395, file: !6, line: 2306, baseType: !2420, size: 32, offset: 544)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !2421, line: 31, baseType: !1450)
!2421 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2395, file: !6, line: 2307, baseType: !1457, size: 64, offset: 576)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2395, file: !6, line: 2308, baseType: !1457, size: 64, offset: 640)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2395, file: !6, line: 2314, baseType: !2425, size: 64, offset: 704)
!2425 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !6, line: 2309, size: 64, elements: !2426)
!2426 = !{!2427, !2428, !2429}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2425, file: !6, line: 2310, baseType: !1450, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2425, file: !6, line: 2311, baseType: !1455, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2425, file: !6, line: 2312, baseType: !2430, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !6, line: 2277, flags: DIFlagFwdDecl)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2395, file: !6, line: 2315, baseType: !1457, size: 64, offset: 768)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2395, file: !6, line: 2316, baseType: !1457, size: 64, offset: 832)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2395, file: !6, line: 2317, baseType: !1457, size: 64, offset: 896)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2395, file: !6, line: 2318, baseType: !1457, size: 64, offset: 960)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2395, file: !6, line: 2319, baseType: !1457, size: 64, offset: 1024)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2395, file: !6, line: 2320, baseType: !1457, size: 64, offset: 1088)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2395, file: !6, line: 2321, baseType: !1457, size: 64, offset: 1152)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2395, file: !6, line: 2322, baseType: !1457, size: 64, offset: 1216)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2395, file: !6, line: 2324, baseType: !2441, size: 64, offset: 1280)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !6, line: 2324, flags: DIFlagFwdDecl)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1460, file: !6, line: 3395, baseType: !2444, size: 320)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !6, line: 1469, size: 320, elements: !2445)
!2445 = !{!2446, !2447, !2448}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2444, file: !6, line: 1470, baseType: !1496, size: 192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2444, file: !6, line: 1471, baseType: !1457, size: 64, offset: 192)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2444, file: !6, line: 1472, baseType: !1457, size: 64, offset: 256)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1460, file: !6, line: 3396, baseType: !2450, size: 320)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !6, line: 1482, size: 320, elements: !2451)
!2451 = !{!2452, !2453, !2454}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2450, file: !6, line: 1483, baseType: !1496, size: 192)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2450, file: !6, line: 1484, baseType: !1450, size: 32, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2450, file: !6, line: 1485, baseType: !1867, size: 64, offset: 256)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1460, file: !6, line: 3397, baseType: !2456, size: 384)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !6, line: 1829, size: 384, elements: !2457)
!2457 = !{!2458, !2459, !2460, !2461}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2456, file: !6, line: 1830, baseType: !1496, size: 192)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2456, file: !6, line: 1831, baseType: !1582, size: 32, offset: 192)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2456, file: !6, line: 1832, baseType: !1457, size: 64, offset: 256)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2456, file: !6, line: 1835, baseType: !1867, size: 64, offset: 320)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1460, file: !6, line: 3398, baseType: !2463, size: 704)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !6, line: 1898, size: 704, elements: !2464)
!2464 = !{!2465, !2466, !2467, !2468, !2469, !2474}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2463, file: !6, line: 1899, baseType: !1496, size: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2463, file: !6, line: 1902, baseType: !1457, size: 64, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2463, file: !6, line: 1905, baseType: !1929, size: 64, offset: 256)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2463, file: !6, line: 1908, baseType: !7, size: 32, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2463, file: !6, line: 1911, baseType: !2470, size: 64, offset: 384)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1671, line: 117, size: 128, elements: !2472)
!2472 = !{!2473}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !2471, file: !1671, line: 120, baseType: !2223, size: 128)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2463, file: !6, line: 1914, baseType: !1971, size: 256, offset: 448)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1460, file: !6, line: 3399, baseType: !2476, size: 704)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !6, line: 2008, size: 704, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2476, file: !6, line: 2009, baseType: !1496, size: 192)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2476, file: !6, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !2476, file: !6, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2476, file: !6, line: 2014, baseType: !1582, size: 32, offset: 224)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2476, file: !6, line: 2016, baseType: !1457, size: 64, offset: 256)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !2476, file: !6, line: 2017, baseType: !1856, size: 64, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !2476, file: !6, line: 2019, baseType: !1457, size: 64, offset: 384)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !2476, file: !6, line: 2020, baseType: !1457, size: 64, offset: 448)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2476, file: !6, line: 2021, baseType: !1457, size: 64, offset: 512)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !2476, file: !6, line: 2022, baseType: !1457, size: 64, offset: 576)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !2476, file: !6, line: 2023, baseType: !1457, size: 64, offset: 640)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1460, file: !6, line: 3400, baseType: !2490, size: 832)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !6, line: 2430, size: 832, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2490, file: !6, line: 2431, baseType: !1496, size: 192)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2490, file: !6, line: 2433, baseType: !1457, size: 64, offset: 192)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2490, file: !6, line: 2434, baseType: !1457, size: 64, offset: 256)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !2490, file: !6, line: 2435, baseType: !1457, size: 64, offset: 320)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !2490, file: !6, line: 2436, baseType: !1457, size: 64, offset: 384)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !2490, file: !6, line: 2437, baseType: !1856, size: 64, offset: 448)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !2490, file: !6, line: 2438, baseType: !1457, size: 64, offset: 512)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !2490, file: !6, line: 2440, baseType: !1457, size: 64, offset: 576)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !2490, file: !6, line: 2441, baseType: !1457, size: 64, offset: 640)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !2490, file: !6, line: 2443, baseType: !2502, size: 128, offset: 704)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !6, line: 182, baseType: !2503)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !6, line: 182, size: 128, elements: !2504)
!2504 = !{!2505}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2503, file: !6, line: 182, baseType: !1861, size: 128)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1460, file: !6, line: 3401, baseType: !2507, size: 320)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !6, line: 3327, size: 320, elements: !2508)
!2508 = !{!2509, !2510, !2517}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2507, file: !6, line: 3329, baseType: !1496, size: 192)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2507, file: !6, line: 3330, baseType: !2511, size: 64, offset: 192)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !6, line: 3320, size: 192, elements: !2513)
!2513 = !{!2514, !2515, !2516}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2512, file: !6, line: 3322, baseType: !2511, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2512, file: !6, line: 3323, baseType: !2511, size: 64, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2512, file: !6, line: 3324, baseType: !1457, size: 64, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2507, file: !6, line: 3331, baseType: !2511, size: 64, offset: 256)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1460, file: !6, line: 3402, baseType: !2519, size: 256)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !6, line: 1540, size: 256, elements: !2520)
!2520 = !{!2521, !2522}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2519, file: !6, line: 1541, baseType: !1496, size: 192)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2519, file: !6, line: 1542, baseType: !2523, size: 64, offset: 192)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !6, line: 1538, baseType: !2525)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !6, line: 1538, size: 192, elements: !2526)
!2526 = !{!2527}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2525, file: !6, line: 1538, baseType: !2528, size: 192)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !6, line: 1537, baseType: !2529)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !6, line: 1537, size: 192, elements: !2530)
!2530 = !{!2531, !2532, !2533}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2529, file: !6, line: 1537, baseType: !7, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2529, file: !6, line: 1537, baseType: !7, size: 32, offset: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2529, file: !6, line: 1537, baseType: !2534, size: 128, offset: 64)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2535, size: 128, elements: !1556)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !6, line: 1535, baseType: !2536)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !6, line: 1532, size: 128, elements: !2537)
!2537 = !{!2538, !2539}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2536, file: !6, line: 1533, baseType: !1457, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2536, file: !6, line: 1534, baseType: !1457, size: 64, offset: 64)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1460, file: !6, line: 3403, baseType: !2541, size: 512)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !6, line: 1938, size: 512, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2552, !2553, !2554}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2541, file: !6, line: 1939, baseType: !1496, size: 192)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2541, file: !6, line: 1940, baseType: !1582, size: 32, offset: 192)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2541, file: !6, line: 1941, baseType: !365, size: 32, offset: 224)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2541, file: !6, line: 1946, baseType: !2547, size: 32, offset: 256)
!2547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !6, line: 1942, size: 32, elements: !2548)
!2548 = !{!2549, !2550, !2551}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2547, file: !6, line: 1943, baseType: !383, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !2547, file: !6, line: 1944, baseType: !390, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !2547, file: !6, line: 1945, baseType: !155, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !2541, file: !6, line: 1950, baseType: !1919, size: 64, offset: 320)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !2541, file: !6, line: 1951, baseType: !1919, size: 64, offset: 384)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2541, file: !6, line: 1953, baseType: !1867, size: 64, offset: 448)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1460, file: !6, line: 3404, baseType: !2556, size: 1664)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !6, line: 3337, size: 1664, elements: !2557)
!2557 = !{!2558, !2559}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2556, file: !6, line: 3338, baseType: !1496, size: 192)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2556, file: !6, line: 3341, baseType: !2560, size: 1472, offset: 192)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !2561, line: 410, size: 1472, elements: !2562)
!2561 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2562 = !{!2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2560, file: !2561, line: 412, baseType: !1450, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2560, file: !2561, line: 413, baseType: !1450, size: 32, offset: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2560, file: !2561, line: 414, baseType: !1450, size: 32, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2560, file: !2561, line: 415, baseType: !1450, size: 32, offset: 96)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2560, file: !2561, line: 416, baseType: !1450, size: 32, offset: 128)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2560, file: !2561, line: 417, baseType: !1450, size: 32, offset: 160)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2560, file: !2561, line: 418, baseType: !1449, size: 8, offset: 192)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2560, file: !2561, line: 419, baseType: !1449, size: 8, offset: 200)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2560, file: !2561, line: 420, baseType: !2572, size: 8, offset: 208)
!2572 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2560, file: !2561, line: 421, baseType: !2572, size: 8, offset: 216)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2560, file: !2561, line: 422, baseType: !2572, size: 8, offset: 224)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2560, file: !2561, line: 423, baseType: !2572, size: 8, offset: 232)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2560, file: !2561, line: 424, baseType: !2572, size: 8, offset: 240)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2560, file: !2561, line: 425, baseType: !2572, size: 8, offset: 248)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2560, file: !2561, line: 426, baseType: !2572, size: 8, offset: 256)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2560, file: !2561, line: 427, baseType: !2572, size: 8, offset: 264)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2560, file: !2561, line: 428, baseType: !2572, size: 8, offset: 272)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2560, file: !2561, line: 429, baseType: !2572, size: 8, offset: 280)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2560, file: !2561, line: 430, baseType: !2572, size: 8, offset: 288)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2560, file: !2561, line: 431, baseType: !2572, size: 8, offset: 296)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2560, file: !2561, line: 432, baseType: !2572, size: 8, offset: 304)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2560, file: !2561, line: 433, baseType: !2572, size: 8, offset: 312)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2560, file: !2561, line: 434, baseType: !2572, size: 8, offset: 320)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2560, file: !2561, line: 435, baseType: !2572, size: 8, offset: 328)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2560, file: !2561, line: 436, baseType: !2572, size: 8, offset: 336)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2560, file: !2561, line: 437, baseType: !2572, size: 8, offset: 344)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2560, file: !2561, line: 438, baseType: !2572, size: 8, offset: 352)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2560, file: !2561, line: 439, baseType: !2572, size: 8, offset: 360)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2560, file: !2561, line: 440, baseType: !2572, size: 8, offset: 368)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2560, file: !2561, line: 441, baseType: !2572, size: 8, offset: 376)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2560, file: !2561, line: 442, baseType: !2572, size: 8, offset: 384)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2560, file: !2561, line: 443, baseType: !2572, size: 8, offset: 392)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2560, file: !2561, line: 444, baseType: !2572, size: 8, offset: 400)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2560, file: !2561, line: 445, baseType: !2572, size: 8, offset: 408)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2560, file: !2561, line: 446, baseType: !2572, size: 8, offset: 416)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2560, file: !2561, line: 447, baseType: !2572, size: 8, offset: 424)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2560, file: !2561, line: 448, baseType: !2572, size: 8, offset: 432)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2560, file: !2561, line: 449, baseType: !2572, size: 8, offset: 440)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2560, file: !2561, line: 450, baseType: !2572, size: 8, offset: 448)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2560, file: !2561, line: 451, baseType: !2572, size: 8, offset: 456)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2560, file: !2561, line: 452, baseType: !2572, size: 8, offset: 464)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2560, file: !2561, line: 453, baseType: !2572, size: 8, offset: 472)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2560, file: !2561, line: 454, baseType: !2572, size: 8, offset: 480)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2560, file: !2561, line: 455, baseType: !2572, size: 8, offset: 488)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2560, file: !2561, line: 456, baseType: !2572, size: 8, offset: 496)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2560, file: !2561, line: 457, baseType: !2572, size: 8, offset: 504)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2560, file: !2561, line: 458, baseType: !2572, size: 8, offset: 512)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2560, file: !2561, line: 459, baseType: !2572, size: 8, offset: 520)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2560, file: !2561, line: 460, baseType: !2572, size: 8, offset: 528)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2560, file: !2561, line: 461, baseType: !2572, size: 8, offset: 536)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2560, file: !2561, line: 462, baseType: !2572, size: 8, offset: 544)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2560, file: !2561, line: 463, baseType: !2572, size: 8, offset: 552)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2560, file: !2561, line: 464, baseType: !2572, size: 8, offset: 560)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2560, file: !2561, line: 465, baseType: !2572, size: 8, offset: 568)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2560, file: !2561, line: 466, baseType: !2572, size: 8, offset: 576)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2560, file: !2561, line: 467, baseType: !2572, size: 8, offset: 584)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2560, file: !2561, line: 468, baseType: !2572, size: 8, offset: 592)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2560, file: !2561, line: 469, baseType: !2572, size: 8, offset: 600)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2560, file: !2561, line: 470, baseType: !2572, size: 8, offset: 608)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2560, file: !2561, line: 471, baseType: !2572, size: 8, offset: 616)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2560, file: !2561, line: 472, baseType: !2572, size: 8, offset: 624)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2560, file: !2561, line: 473, baseType: !2572, size: 8, offset: 632)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2560, file: !2561, line: 474, baseType: !2572, size: 8, offset: 640)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2560, file: !2561, line: 475, baseType: !2572, size: 8, offset: 648)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2560, file: !2561, line: 476, baseType: !2572, size: 8, offset: 656)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2560, file: !2561, line: 477, baseType: !2572, size: 8, offset: 664)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2560, file: !2561, line: 478, baseType: !2572, size: 8, offset: 672)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2560, file: !2561, line: 479, baseType: !2572, size: 8, offset: 680)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2560, file: !2561, line: 480, baseType: !2572, size: 8, offset: 688)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2560, file: !2561, line: 481, baseType: !2572, size: 8, offset: 696)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2560, file: !2561, line: 482, baseType: !2572, size: 8, offset: 704)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2560, file: !2561, line: 483, baseType: !2572, size: 8, offset: 712)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2560, file: !2561, line: 484, baseType: !2572, size: 8, offset: 720)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2560, file: !2561, line: 485, baseType: !2572, size: 8, offset: 728)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2560, file: !2561, line: 486, baseType: !2572, size: 8, offset: 736)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2560, file: !2561, line: 487, baseType: !2572, size: 8, offset: 744)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2560, file: !2561, line: 488, baseType: !2572, size: 8, offset: 752)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2560, file: !2561, line: 489, baseType: !2572, size: 8, offset: 760)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2560, file: !2561, line: 490, baseType: !2572, size: 8, offset: 768)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2560, file: !2561, line: 491, baseType: !2572, size: 8, offset: 776)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2560, file: !2561, line: 492, baseType: !2572, size: 8, offset: 784)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2560, file: !2561, line: 493, baseType: !2572, size: 8, offset: 792)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2560, file: !2561, line: 494, baseType: !2572, size: 8, offset: 800)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2560, file: !2561, line: 495, baseType: !2572, size: 8, offset: 808)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2560, file: !2561, line: 496, baseType: !2572, size: 8, offset: 816)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2560, file: !2561, line: 497, baseType: !2572, size: 8, offset: 824)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2560, file: !2561, line: 498, baseType: !2572, size: 8, offset: 832)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2560, file: !2561, line: 499, baseType: !2572, size: 8, offset: 840)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2560, file: !2561, line: 500, baseType: !2572, size: 8, offset: 848)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2560, file: !2561, line: 501, baseType: !2572, size: 8, offset: 856)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2560, file: !2561, line: 502, baseType: !2572, size: 8, offset: 864)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2560, file: !2561, line: 503, baseType: !2572, size: 8, offset: 872)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2560, file: !2561, line: 504, baseType: !2572, size: 8, offset: 880)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2560, file: !2561, line: 505, baseType: !2572, size: 8, offset: 888)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2560, file: !2561, line: 506, baseType: !2572, size: 8, offset: 896)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2560, file: !2561, line: 507, baseType: !2572, size: 8, offset: 904)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2560, file: !2561, line: 508, baseType: !2572, size: 8, offset: 912)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2560, file: !2561, line: 509, baseType: !2572, size: 8, offset: 920)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2560, file: !2561, line: 510, baseType: !2572, size: 8, offset: 928)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2560, file: !2561, line: 511, baseType: !2572, size: 8, offset: 936)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2560, file: !2561, line: 512, baseType: !2572, size: 8, offset: 944)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2560, file: !2561, line: 513, baseType: !2572, size: 8, offset: 952)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2560, file: !2561, line: 514, baseType: !2572, size: 8, offset: 960)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2560, file: !2561, line: 515, baseType: !2572, size: 8, offset: 968)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2560, file: !2561, line: 516, baseType: !2572, size: 8, offset: 976)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2560, file: !2561, line: 517, baseType: !2572, size: 8, offset: 984)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2560, file: !2561, line: 518, baseType: !2572, size: 8, offset: 992)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2560, file: !2561, line: 519, baseType: !2572, size: 8, offset: 1000)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2560, file: !2561, line: 520, baseType: !2572, size: 8, offset: 1008)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2560, file: !2561, line: 521, baseType: !2572, size: 8, offset: 1016)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2560, file: !2561, line: 522, baseType: !2572, size: 8, offset: 1024)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2560, file: !2561, line: 523, baseType: !2572, size: 8, offset: 1032)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2560, file: !2561, line: 524, baseType: !2572, size: 8, offset: 1040)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2560, file: !2561, line: 525, baseType: !2572, size: 8, offset: 1048)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2560, file: !2561, line: 526, baseType: !2572, size: 8, offset: 1056)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2560, file: !2561, line: 527, baseType: !2572, size: 8, offset: 1064)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2560, file: !2561, line: 528, baseType: !2572, size: 8, offset: 1072)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2560, file: !2561, line: 529, baseType: !2572, size: 8, offset: 1080)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2560, file: !2561, line: 530, baseType: !2572, size: 8, offset: 1088)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2560, file: !2561, line: 531, baseType: !2572, size: 8, offset: 1096)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2560, file: !2561, line: 532, baseType: !2572, size: 8, offset: 1104)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2560, file: !2561, line: 533, baseType: !2572, size: 8, offset: 1112)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2560, file: !2561, line: 534, baseType: !2572, size: 8, offset: 1120)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2560, file: !2561, line: 535, baseType: !2572, size: 8, offset: 1128)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2560, file: !2561, line: 536, baseType: !2572, size: 8, offset: 1136)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2560, file: !2561, line: 537, baseType: !2572, size: 8, offset: 1144)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2560, file: !2561, line: 538, baseType: !2572, size: 8, offset: 1152)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2560, file: !2561, line: 539, baseType: !2572, size: 8, offset: 1160)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2560, file: !2561, line: 540, baseType: !2572, size: 8, offset: 1168)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2560, file: !2561, line: 541, baseType: !2572, size: 8, offset: 1176)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2560, file: !2561, line: 542, baseType: !2572, size: 8, offset: 1184)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2560, file: !2561, line: 543, baseType: !2572, size: 8, offset: 1192)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2560, file: !2561, line: 544, baseType: !2572, size: 8, offset: 1200)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2560, file: !2561, line: 545, baseType: !2572, size: 8, offset: 1208)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2560, file: !2561, line: 546, baseType: !2572, size: 8, offset: 1216)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2560, file: !2561, line: 547, baseType: !2572, size: 8, offset: 1224)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2560, file: !2561, line: 548, baseType: !2572, size: 8, offset: 1232)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2560, file: !2561, line: 549, baseType: !2572, size: 8, offset: 1240)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2560, file: !2561, line: 550, baseType: !2572, size: 8, offset: 1248)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2560, file: !2561, line: 551, baseType: !2572, size: 8, offset: 1256)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2560, file: !2561, line: 552, baseType: !2572, size: 8, offset: 1264)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2560, file: !2561, line: 553, baseType: !2572, size: 8, offset: 1272)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2560, file: !2561, line: 554, baseType: !2572, size: 8, offset: 1280)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2560, file: !2561, line: 555, baseType: !2572, size: 8, offset: 1288)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2560, file: !2561, line: 556, baseType: !2572, size: 8, offset: 1296)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2560, file: !2561, line: 557, baseType: !2572, size: 8, offset: 1304)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2560, file: !2561, line: 558, baseType: !2572, size: 8, offset: 1312)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2560, file: !2561, line: 559, baseType: !2572, size: 8, offset: 1320)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2560, file: !2561, line: 560, baseType: !2572, size: 8, offset: 1328)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2560, file: !2561, line: 561, baseType: !2572, size: 8, offset: 1336)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2560, file: !2561, line: 562, baseType: !2572, size: 8, offset: 1344)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2560, file: !2561, line: 563, baseType: !2572, size: 8, offset: 1352)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2560, file: !2561, line: 564, baseType: !2572, size: 8, offset: 1360)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2560, file: !2561, line: 565, baseType: !2572, size: 8, offset: 1368)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2560, file: !2561, line: 566, baseType: !2572, size: 8, offset: 1376)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2560, file: !2561, line: 567, baseType: !2572, size: 8, offset: 1384)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2560, file: !2561, line: 568, baseType: !2572, size: 8, offset: 1392)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2560, file: !2561, line: 569, baseType: !2572, size: 8, offset: 1400)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2560, file: !2561, line: 570, baseType: !2572, size: 8, offset: 1408)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2560, file: !2561, line: 571, baseType: !2572, size: 8, offset: 1416)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2560, file: !2561, line: 572, baseType: !2572, size: 8, offset: 1424)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2560, file: !2561, line: 573, baseType: !2572, size: 8, offset: 1432)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2560, file: !2561, line: 574, baseType: !2572, size: 8, offset: 1440)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1460, file: !6, line: 3405, baseType: !2728, size: 384)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !6, line: 3352, size: 384, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2728, file: !6, line: 3353, baseType: !1496, size: 192)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2728, file: !6, line: 3356, baseType: !2732, size: 192, offset: 192)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !2561, line: 578, size: 192, elements: !2733)
!2733 = !{!2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2732, file: !2561, line: 580, baseType: !1450, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2732, file: !2561, line: 581, baseType: !1450, size: 32, offset: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2732, file: !2561, line: 582, baseType: !1450, size: 32, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2732, file: !2561, line: 583, baseType: !1450, size: 32, offset: 96)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2732, file: !2561, line: 584, baseType: !1449, size: 8, offset: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2732, file: !2561, line: 585, baseType: !1449, size: 8, offset: 136)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2732, file: !2561, line: 586, baseType: !1449, size: 8, offset: 144)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2732, file: !2561, line: 587, baseType: !1449, size: 8, offset: 152)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2732, file: !2561, line: 588, baseType: !1449, size: 8, offset: 160)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2732, file: !2561, line: 589, baseType: !1449, size: 8, offset: 168)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2732, file: !2561, line: 590, baseType: !1449, size: 8, offset: 176)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!2747 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2750)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map_base", file: !6, line: 5267, size: 64, elements: !2751)
!2751 = !{!2752}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2750, file: !6, line: 5268, baseType: !1457, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2755)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map", file: !6, line: 5278, size: 192, elements: !2756)
!2756 = !{!2757, !2758, !2759}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2755, file: !6, line: 5279, baseType: !2750, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2755, file: !6, line: 5280, baseType: !7, size: 32, offset: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2755, file: !6, line: 5281, baseType: !1457, size: 64, offset: 128)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_priority_map", file: !6, line: 5301, size: 128, elements: !2762)
!2762 = !{!2763, !2764, !2766}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2761, file: !6, line: 5302, baseType: !2750, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2761, file: !6, line: 5303, baseType: !2765, size: 16, offset: 64)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "priority_type", file: !6, line: 3039, baseType: !2747)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !2761, file: !6, line: 5304, baseType: !2765, size: 16, offset: 80)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "type_hash", file: !3, line: 163, size: 128, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2770, file: !3, line: 164, baseType: !1511, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2770, file: !3, line: 165, baseType: !1457, size: 64, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !1458, line: 59, baseType: !2745)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !6, line: 184, baseType: !2777)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !6, line: 184, size: 128, elements: !2778)
!2778 = !{!2779}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2777, file: !6, line: 184, baseType: !1861, size: 128)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "free_lang_data_d", file: !3, line: 4486, size: 256, elements: !2782)
!2782 = !{!2783, !2784, !2787, !2788}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "worklist", scope: !2781, file: !3, line: 4489, baseType: !2775, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "pset", scope: !2781, file: !3, line: 4492, baseType: !2785, size: 64, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !6, line: 5199, flags: DIFlagFwdDecl)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "decls", scope: !2781, file: !3, line: 4495, baseType: !2775, size: 64, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2781, file: !3, line: 4498, baseType: !2775, size: 64, offset: 192)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 64)
!2792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2770)
!2793 = !{!0, !2794, !2799, !2803, !2808, !2813, !2816, !2844, !2860, !2878, !2881, !2884, !2886, !2888, !2890, !2892, !2894, !2896, !2898, !2900, !2902, !2904, !2906, !2911, !2914, !2919, !2921}
!2794 = !DIGlobalVariableExpression(var: !2795, expr: !DIExpression())
!2795 = distinct !DIGlobalVariable(name: "tree_code_length", scope: !2, file: !3, line: 83, type: !2796, isLocal: false, isDefinition: true)
!2796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 1528, elements: !2797)
!2797 = !{!2798}
!2798 = !DISubrange(count: 191)
!2799 = !DIGlobalVariableExpression(var: !2800, expr: !DIExpression())
!2800 = distinct !DIGlobalVariable(name: "tree_code_name", scope: !2, file: !3, line: 95, type: !2801, isLocal: false, isDefinition: true)
!2801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2802, size: 12224, elements: !2797)
!2802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1455)
!2803 = !DIGlobalVariableExpression(var: !2804, expr: !DIExpression())
!2804 = distinct !DIGlobalVariable(name: "tree_code_class_strings", scope: !2, file: !3, line: 105, type: !2805, isLocal: false, isDefinition: true)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2802, size: 704, elements: !2806)
!2806 = !{!2807}
!2807 = !DISubrange(count: 11)
!2808 = !DIGlobalVariableExpression(var: !2809, expr: !DIExpression())
!2809 = distinct !DIGlobalVariable(name: "omp_clause_num_ops", scope: !2, file: !3, line: 229, type: !2810, isLocal: false, isDefinition: true)
!2810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 128, elements: !2811)
!2811 = !{!2812}
!2812 = !DISubrange(count: 16)
!2813 = !DIGlobalVariableExpression(var: !2814, expr: !DIExpression())
!2814 = distinct !DIGlobalVariable(name: "omp_clause_code_name", scope: !2, file: !3, line: 249, type: !2815, isLocal: false, isDefinition: true)
!2815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2802, size: 1024, elements: !2811)
!2816 = !DIGlobalVariableExpression(var: !2817, expr: !DIExpression())
!2817 = distinct !DIGlobalVariable(name: "pass_ipa_free_lang_data", scope: !2, file: !3, line: 5005, type: !2818, isLocal: false, isDefinition: true)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_ipa_opt_pass", file: !457, line: 202, size: 640, elements: !2819)
!2819 = !{!2820}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2818, file: !457, line: 204, baseType: !2821, size: 640)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !457, line: 114, size: 640, elements: !2822)
!2822 = !{!2823, !2824, !2825, !2829, !2833, !2835, !2836, !2837, !2839, !2840, !2841, !2842, !2843}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2821, file: !457, line: 117, baseType: !456, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2821, file: !457, line: 121, baseType: !1455, size: 64, offset: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2821, file: !457, line: 125, baseType: !2826, size: 64, offset: 128)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{!1449}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2821, file: !457, line: 130, baseType: !2830, size: 64, offset: 192)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{!7}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2821, file: !457, line: 133, baseType: !2834, size: 64, offset: 256)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2821, file: !457, line: 136, baseType: !2834, size: 64, offset: 320)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2821, file: !457, line: 139, baseType: !1450, size: 32, offset: 384)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2821, file: !457, line: 143, baseType: !2838, size: 32, offset: 416)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !464, line: 80, baseType: !463)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2821, file: !457, line: 146, baseType: !7, size: 32, offset: 448)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2821, file: !457, line: 147, baseType: !7, size: 32, offset: 480)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2821, file: !457, line: 148, baseType: !7, size: 32, offset: 512)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2821, file: !457, line: 151, baseType: !7, size: 32, offset: 544)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2821, file: !457, line: 152, baseType: !7, size: 32, offset: 576)
!2844 = !DIGlobalVariableExpression(var: !2845, expr: !DIExpression())
!2845 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_tree_h", scope: !2, file: !2846, line: 105, type: !2847, isLocal: false, isDefinition: true)
!2846 = !DIFile(filename: "./gt-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2848, size: 1600, elements: !2858)
!2848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2849)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2850, line: 69, size: 320, elements: !2851)
!2850 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2851 = !{!2852, !2853, !2854, !2855, !2857}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2849, file: !2850, line: 70, baseType: !1454, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2849, file: !2850, line: 71, baseType: !1830, size: 64, offset: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2849, file: !2850, line: 72, baseType: !1830, size: 64, offset: 128)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2849, file: !2850, line: 73, baseType: !2856, size: 64, offset: 192)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2850, line: 65, baseType: !1824)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2849, file: !2850, line: 74, baseType: !2856, size: 64, offset: 256)
!2858 = !{!2859}
!2859 = !DISubrange(count: 5)
!2860 = !DIGlobalVariableExpression(var: !2861, expr: !DIExpression())
!2861 = distinct !DIGlobalVariable(name: "gt_ggc_rc_gt_tree_h", scope: !2, file: !2846, line: 137, type: !2862, isLocal: false, isDefinition: true)
!2862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2863, size: 2688, elements: !2876)
!2863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2864)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_cache_tab", file: !2850, line: 85, size: 384, elements: !2865)
!2865 = !{!2866, !2868, !2869, !2870, !2871, !2872}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2864, file: !2850, line: 86, baseType: !2867, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2864, file: !2850, line: 87, baseType: !1830, size: 64, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2864, file: !2850, line: 88, baseType: !1830, size: 64, offset: 128)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2864, file: !2850, line: 89, baseType: !2856, size: 64, offset: 192)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2864, file: !2850, line: 90, baseType: !2856, size: 64, offset: 256)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "marked_p", scope: !2864, file: !2850, line: 91, baseType: !2873, size: 64, offset: 320)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!1450, !1815}
!2876 = !{!2877}
!2877 = !DISubrange(count: 7)
!2878 = !DIGlobalVariableExpression(var: !2879, expr: !DIExpression())
!2879 = distinct !DIGlobalVariable(name: "gt_pch_rc_gt_tree_h", scope: !2, file: !2846, line: 189, type: !2880, isLocal: false, isDefinition: true)
!2880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2848, size: 2240, elements: !2876)
!2881 = !DIGlobalVariableExpression(var: !2882, expr: !DIExpression())
!2882 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_tree_h", scope: !2, file: !2846, line: 235, type: !2883, isLocal: false, isDefinition: true)
!2883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2848, size: 1280, elements: !2272)
!2884 = !DIGlobalVariableExpression(var: !2885, expr: !DIExpression())
!2885 = distinct !DIGlobalVariable(name: "next_decl_uid", scope: !2, file: !3, line: 153, type: !1450, isLocal: true, isDefinition: true)
!2886 = !DIGlobalVariableExpression(var: !2887, expr: !DIExpression())
!2887 = distinct !DIGlobalVariable(name: "next_debug_decl_uid", scope: !2, file: !3, line: 158, type: !1450, isLocal: true, isDefinition: true)
!2888 = !DIGlobalVariableExpression(var: !2889, expr: !DIExpression())
!2889 = distinct !DIGlobalVariable(name: "type_hash_table", scope: !2, file: !3, line: 179, type: !1804, isLocal: true, isDefinition: true)
!2890 = !DIGlobalVariableExpression(var: !2891, expr: !DIExpression())
!2891 = distinct !DIGlobalVariable(name: "int_cst_node", scope: !2, file: !3, line: 182, type: !1457, isLocal: true, isDefinition: true)
!2892 = !DIGlobalVariableExpression(var: !2893, expr: !DIExpression())
!2893 = distinct !DIGlobalVariable(name: "int_cst_hash_table", scope: !2, file: !3, line: 184, type: !1804, isLocal: true, isDefinition: true)
!2894 = !DIGlobalVariableExpression(var: !2895, expr: !DIExpression())
!2895 = distinct !DIGlobalVariable(name: "cl_optimization_node", scope: !2, file: !3, line: 191, type: !1457, isLocal: true, isDefinition: true)
!2896 = !DIGlobalVariableExpression(var: !2897, expr: !DIExpression())
!2897 = distinct !DIGlobalVariable(name: "cl_target_option_node", scope: !2, file: !3, line: 192, type: !1457, isLocal: true, isDefinition: true)
!2898 = !DIGlobalVariableExpression(var: !2899, expr: !DIExpression())
!2899 = distinct !DIGlobalVariable(name: "cl_option_hash_table", scope: !2, file: !3, line: 194, type: !1804, isLocal: true, isDefinition: true)
!2900 = !DIGlobalVariableExpression(var: !2901, expr: !DIExpression())
!2901 = distinct !DIGlobalVariable(name: "debug_expr_for_decl", scope: !2, file: !3, line: 200, type: !1804, isLocal: true, isDefinition: true)
!2902 = !DIGlobalVariableExpression(var: !2903, expr: !DIExpression())
!2903 = distinct !DIGlobalVariable(name: "value_expr_for_decl", scope: !2, file: !3, line: 203, type: !1804, isLocal: true, isDefinition: true)
!2904 = !DIGlobalVariableExpression(var: !2905, expr: !DIExpression())
!2905 = distinct !DIGlobalVariable(name: "init_priority_for_decl", scope: !2, file: !3, line: 207, type: !1804, isLocal: true, isDefinition: true)
!2906 = !DIGlobalVariableExpression(var: !2907, expr: !DIExpression())
!2907 = distinct !DIGlobalVariable(name: "global_trees", scope: !2, file: !3, line: 223, type: !2908, isLocal: false, isDefinition: true)
!2908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1457, size: 8384, elements: !2909)
!2909 = !{!2910}
!2910 = !DISubrange(count: 131)
!2911 = !DIGlobalVariableExpression(var: !2912, expr: !DIExpression())
!2912 = distinct !DIGlobalVariable(name: "integer_types", scope: !2, file: !3, line: 224, type: !2913, isLocal: false, isDefinition: true)
!2913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1457, size: 704, elements: !2806)
!2914 = !DIGlobalVariableExpression(var: !2915, expr: !DIExpression())
!2915 = distinct !DIGlobalVariable(name: "tree_contains_struct", scope: !2, file: !3, line: 226, type: !2916, isLocal: false, isDefinition: true)
!2916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1449, size: 97792, elements: !2917)
!2917 = !{!2798, !2918}
!2918 = !DISubrange(count: 64)
!2919 = !DIGlobalVariableExpression(var: !2920, expr: !DIExpression())
!2920 = distinct !DIGlobalVariable(name: "gcc_eh_personality_decl", scope: !2, file: !3, line: 10715, type: !1457, isLocal: true, isDefinition: true)
!2921 = !DIGlobalVariableExpression(var: !2922, expr: !DIExpression())
!2922 = distinct !DIGlobalVariable(name: "next_type_uid", scope: !2, file: !3, line: 155, type: !1450, isLocal: true, isDefinition: true)
!2923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2924, size: 6112, elements: !2797)
!2924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!2925 = !{i32 2, !"Dwarf Version", i32 4}
!2926 = !{i32 2, !"Debug Info Version", i32 3}
!2927 = !{i32 1, !"wchar_size", i32 4}
!2928 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2929 = distinct !DISubprogram(name: "vprintf", scope: !2930, file: !2930, line: 39, type: !2931, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2941)
!2930 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!1450, !2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1455)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2935, file: !3, baseType: !7, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2935, file: !3, baseType: !7, size: 32, offset: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2935, file: !3, baseType: !1454, size: 64, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2935, file: !3, baseType: !1454, size: 64, offset: 128)
!2941 = !{!2942, !2943}
!2942 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2929, file: !2930, line: 39, type: !2933)
!2943 = !DILocalVariable(name: "__arg", arg: 2, scope: !2929, file: !2930, line: 39, type: !2934)
!2944 = !DILocation(line: 0, scope: !2929)
!2945 = !DILocation(line: 41, column: 20, scope: !2929)
!2946 = !DILocation(line: 41, column: 10, scope: !2929)
!2947 = !DILocation(line: 41, column: 3, scope: !2929)
!2948 = distinct !DISubprogram(name: "getchar", scope: !2930, file: !2930, line: 47, type: !2949, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!1450}
!2951 = !{}
!2952 = !DILocation(line: 49, column: 16, scope: !2948)
!2953 = !DILocation(line: 49, column: 10, scope: !2948)
!2954 = !DILocation(line: 49, column: 3, scope: !2948)
!2955 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2930, file: !2930, line: 56, type: !2956, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3008)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!1450, !2958}
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2960, line: 7, baseType: !2961)
!2960 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2962, line: 49, size: 1728, elements: !2963)
!2962 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2963 = !{!2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2979, !2981, !2982, !2983, !2986, !2987, !2988, !2989, !2992, !2994, !2997, !3000, !3001, !3002, !3003, !3004}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2961, file: !2962, line: 51, baseType: !1450, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2961, file: !2962, line: 54, baseType: !1452, size: 64, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2961, file: !2962, line: 55, baseType: !1452, size: 64, offset: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2961, file: !2962, line: 56, baseType: !1452, size: 64, offset: 192)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2961, file: !2962, line: 57, baseType: !1452, size: 64, offset: 256)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2961, file: !2962, line: 58, baseType: !1452, size: 64, offset: 320)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2961, file: !2962, line: 59, baseType: !1452, size: 64, offset: 384)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2961, file: !2962, line: 60, baseType: !1452, size: 64, offset: 448)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2961, file: !2962, line: 61, baseType: !1452, size: 64, offset: 512)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2961, file: !2962, line: 64, baseType: !1452, size: 64, offset: 576)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2961, file: !2962, line: 65, baseType: !1452, size: 64, offset: 640)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2961, file: !2962, line: 66, baseType: !1452, size: 64, offset: 704)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2961, file: !2962, line: 68, baseType: !2977, size: 64, offset: 768)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 64)
!2978 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2962, line: 36, flags: DIFlagFwdDecl)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2961, file: !2962, line: 70, baseType: !2980, size: 64, offset: 832)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2961, file: !2962, line: 72, baseType: !1450, size: 32, offset: 896)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2961, file: !2962, line: 73, baseType: !1450, size: 32, offset: 928)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2961, file: !2962, line: 74, baseType: !2984, size: 64, offset: 960)
!2984 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2985, line: 152, baseType: !1513)
!2985 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2961, file: !2962, line: 77, baseType: !2747, size: 16, offset: 1024)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2961, file: !2962, line: 78, baseType: !2572, size: 8, offset: 1040)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2961, file: !2962, line: 79, baseType: !1555, size: 8, offset: 1048)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2961, file: !2962, line: 81, baseType: !2990, size: 64, offset: 1088)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2962, line: 43, baseType: null)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2961, file: !2962, line: 89, baseType: !2993, size: 64, offset: 1152)
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2985, line: 153, baseType: !1513)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2961, file: !2962, line: 91, baseType: !2995, size: 64, offset: 1216)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2962, line: 37, flags: DIFlagFwdDecl)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2961, file: !2962, line: 92, baseType: !2998, size: 64, offset: 1280)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 64)
!2999 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2962, line: 38, flags: DIFlagFwdDecl)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2961, file: !2962, line: 93, baseType: !2980, size: 64, offset: 1344)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2961, file: !2962, line: 94, baseType: !1454, size: 64, offset: 1408)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2961, file: !2962, line: 95, baseType: !1830, size: 64, offset: 1472)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2961, file: !2962, line: 96, baseType: !1450, size: 32, offset: 1536)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2961, file: !2962, line: 98, baseType: !3005, size: 160, offset: 1568)
!3005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1453, size: 160, elements: !3006)
!3006 = !{!3007}
!3007 = !DISubrange(count: 20)
!3008 = !{!3009}
!3009 = !DILocalVariable(name: "__fp", arg: 1, scope: !2955, file: !2930, line: 56, type: !2958)
!3010 = !DILocation(line: 0, scope: !2955)
!3011 = !DILocation(line: 58, column: 10, scope: !2955)
!3012 = !DILocation(line: 58, column: 3, scope: !2955)
!3013 = distinct !DISubprogram(name: "getc_unlocked", scope: !2930, file: !2930, line: 66, type: !2956, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3014)
!3014 = !{!3015}
!3015 = !DILocalVariable(name: "__fp", arg: 1, scope: !3013, file: !2930, line: 66, type: !2958)
!3016 = !DILocation(line: 0, scope: !3013)
!3017 = !DILocation(line: 68, column: 10, scope: !3013)
!3018 = !DILocation(line: 68, column: 3, scope: !3013)
!3019 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2930, file: !2930, line: 73, type: !2949, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!3020 = !DILocation(line: 75, column: 10, scope: !3019)
!3021 = !DILocation(line: 75, column: 3, scope: !3019)
!3022 = distinct !DISubprogram(name: "putchar", scope: !2930, file: !2930, line: 82, type: !3023, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3025)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!1450, !1450}
!3025 = !{!3026}
!3026 = !DILocalVariable(name: "__c", arg: 1, scope: !3022, file: !2930, line: 82, type: !1450)
!3027 = !DILocation(line: 0, scope: !3022)
!3028 = !DILocation(line: 84, column: 21, scope: !3022)
!3029 = !DILocation(line: 84, column: 10, scope: !3022)
!3030 = !DILocation(line: 84, column: 3, scope: !3022)
!3031 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2930, file: !2930, line: 91, type: !3032, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3034)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{!1450, !1450, !2958}
!3034 = !{!3035, !3036}
!3035 = !DILocalVariable(name: "__c", arg: 1, scope: !3031, file: !2930, line: 91, type: !1450)
!3036 = !DILocalVariable(name: "__stream", arg: 2, scope: !3031, file: !2930, line: 91, type: !2958)
!3037 = !DILocation(line: 0, scope: !3031)
!3038 = !DILocation(line: 93, column: 10, scope: !3031)
!3039 = !DILocation(line: 93, column: 3, scope: !3031)
!3040 = distinct !DISubprogram(name: "putc_unlocked", scope: !2930, file: !2930, line: 101, type: !3032, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3041)
!3041 = !{!3042, !3043}
!3042 = !DILocalVariable(name: "__c", arg: 1, scope: !3040, file: !2930, line: 101, type: !1450)
!3043 = !DILocalVariable(name: "__stream", arg: 2, scope: !3040, file: !2930, line: 101, type: !2958)
!3044 = !DILocation(line: 0, scope: !3040)
!3045 = !DILocation(line: 103, column: 10, scope: !3040)
!3046 = !DILocation(line: 103, column: 3, scope: !3040)
!3047 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2930, file: !2930, line: 108, type: !3023, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3048)
!3048 = !{!3049}
!3049 = !DILocalVariable(name: "__c", arg: 1, scope: !3047, file: !2930, line: 108, type: !1450)
!3050 = !DILocation(line: 0, scope: !3047)
!3051 = !DILocation(line: 110, column: 10, scope: !3047)
!3052 = !DILocation(line: 110, column: 3, scope: !3047)
!3053 = distinct !DISubprogram(name: "getline", scope: !2930, file: !2930, line: 118, type: !3054, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3058)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!3056, !1451, !3057, !2958}
!3056 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2985, line: 193, baseType: !1513)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!3058 = !{!3059, !3060, !3061}
!3059 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !3053, file: !2930, line: 118, type: !1451)
!3060 = !DILocalVariable(name: "__n", arg: 2, scope: !3053, file: !2930, line: 118, type: !3057)
!3061 = !DILocalVariable(name: "__stream", arg: 3, scope: !3053, file: !2930, line: 118, type: !2958)
!3062 = !DILocation(line: 0, scope: !3053)
!3063 = !DILocation(line: 120, column: 10, scope: !3053)
!3064 = !DILocation(line: 120, column: 3, scope: !3053)
!3065 = distinct !DISubprogram(name: "feof_unlocked", scope: !2930, file: !2930, line: 128, type: !2956, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3066)
!3066 = !{!3067}
!3067 = !DILocalVariable(name: "__stream", arg: 1, scope: !3065, file: !2930, line: 128, type: !2958)
!3068 = !DILocation(line: 0, scope: !3065)
!3069 = !DILocation(line: 130, column: 10, scope: !3065)
!3070 = !DILocation(line: 130, column: 3, scope: !3065)
!3071 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2930, file: !2930, line: 135, type: !2956, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3072)
!3072 = !{!3073}
!3073 = !DILocalVariable(name: "__stream", arg: 1, scope: !3071, file: !2930, line: 135, type: !2958)
!3074 = !DILocation(line: 0, scope: !3071)
!3075 = !DILocation(line: 137, column: 10, scope: !3071)
!3076 = !DILocation(line: 137, column: 3, scope: !3071)
!3077 = distinct !DISubprogram(name: "tolower", scope: !3078, file: !3078, line: 207, type: !3023, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3079)
!3078 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!3079 = !{!3080}
!3080 = !DILocalVariable(name: "__c", arg: 1, scope: !3077, file: !3078, line: 207, type: !1450)
!3081 = !DILocation(line: 0, scope: !3077)
!3082 = !DILocation(line: 209, column: 22, scope: !3077)
!3083 = !DILocation(line: 209, column: 39, scope: !3077)
!3084 = !DILocation(line: 209, column: 38, scope: !3077)
!3085 = !DILocation(line: 209, column: 37, scope: !3077)
!3086 = !DILocation(line: 209, column: 10, scope: !3077)
!3087 = !DILocation(line: 209, column: 3, scope: !3077)
!3088 = distinct !DISubprogram(name: "toupper", scope: !3078, file: !3078, line: 213, type: !3023, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3089)
!3089 = !{!3090}
!3090 = !DILocalVariable(name: "__c", arg: 1, scope: !3088, file: !3078, line: 213, type: !1450)
!3091 = !DILocation(line: 0, scope: !3088)
!3092 = !DILocation(line: 215, column: 22, scope: !3088)
!3093 = !DILocation(line: 215, column: 39, scope: !3088)
!3094 = !DILocation(line: 215, column: 38, scope: !3088)
!3095 = !DILocation(line: 215, column: 37, scope: !3088)
!3096 = !DILocation(line: 215, column: 10, scope: !3088)
!3097 = !DILocation(line: 215, column: 3, scope: !3088)
!3098 = distinct !DISubprogram(name: "atoi", scope: !3099, file: !3099, line: 361, type: !3100, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3102)
!3099 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!3100 = !DISubroutineType(types: !3101)
!3101 = !{!1450, !1455}
!3102 = !{!3103}
!3103 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3098, file: !3099, line: 361, type: !1455)
!3104 = !DILocation(line: 0, scope: !3098)
!3105 = !DILocation(line: 363, column: 16, scope: !3098)
!3106 = !DILocation(line: 363, column: 10, scope: !3098)
!3107 = !DILocation(line: 363, column: 3, scope: !3098)
!3108 = distinct !DISubprogram(name: "atol", scope: !3099, file: !3099, line: 366, type: !3109, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3111)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!1513, !1455}
!3111 = !{!3112}
!3112 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3108, file: !3099, line: 366, type: !1455)
!3113 = !DILocation(line: 0, scope: !3108)
!3114 = !DILocation(line: 368, column: 10, scope: !3108)
!3115 = !DILocation(line: 368, column: 3, scope: !3108)
!3116 = distinct !DISubprogram(name: "atoll", scope: !3099, file: !3099, line: 373, type: !3117, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3120)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!3119, !1455}
!3119 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!3120 = !{!3121}
!3121 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3116, file: !3099, line: 373, type: !1455)
!3122 = !DILocation(line: 0, scope: !3116)
!3123 = !DILocation(line: 375, column: 10, scope: !3116)
!3124 = !DILocation(line: 375, column: 3, scope: !3116)
!3125 = distinct !DISubprogram(name: "bsearch", scope: !3126, file: !3126, line: 20, type: !3127, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3130)
!3126 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!1454, !1815, !1815, !1830, !1830, !3129}
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !3099, line: 808, baseType: !1819)
!3130 = !{!3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140}
!3131 = !DILocalVariable(name: "__key", arg: 1, scope: !3125, file: !3126, line: 20, type: !1815)
!3132 = !DILocalVariable(name: "__base", arg: 2, scope: !3125, file: !3126, line: 20, type: !1815)
!3133 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !3125, file: !3126, line: 20, type: !1830)
!3134 = !DILocalVariable(name: "__size", arg: 4, scope: !3125, file: !3126, line: 20, type: !1830)
!3135 = !DILocalVariable(name: "__compar", arg: 5, scope: !3125, file: !3126, line: 21, type: !3129)
!3136 = !DILocalVariable(name: "__l", scope: !3125, file: !3126, line: 23, type: !1830)
!3137 = !DILocalVariable(name: "__u", scope: !3125, file: !3126, line: 23, type: !1830)
!3138 = !DILocalVariable(name: "__idx", scope: !3125, file: !3126, line: 23, type: !1830)
!3139 = !DILocalVariable(name: "__p", scope: !3125, file: !3126, line: 24, type: !1815)
!3140 = !DILocalVariable(name: "__comparison", scope: !3125, file: !3126, line: 25, type: !1450)
!3141 = !DILocation(line: 0, scope: !3125)
!3142 = !DILocation(line: 29, column: 3, scope: !3125)
!3143 = !DILocation(line: 27, column: 7, scope: !3125)
!3144 = !DILocation(line: 29, column: 14, scope: !3125)
!3145 = !DILocation(line: 31, column: 20, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3125, file: !3126, line: 30, column: 5)
!3147 = !DILocation(line: 31, column: 27, scope: !3146)
!3148 = !DILocation(line: 32, column: 56, scope: !3146)
!3149 = !DILocation(line: 32, column: 47, scope: !3146)
!3150 = !DILocation(line: 33, column: 22, scope: !3146)
!3151 = !DILocation(line: 34, column: 24, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3146, file: !3126, line: 34, column: 11)
!3153 = !DILocation(line: 34, column: 11, scope: !3146)
!3154 = !DILocation(line: 36, column: 29, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3152, file: !3126, line: 36, column: 16)
!3156 = !DILocation(line: 36, column: 16, scope: !3152)
!3157 = !DILocation(line: 37, column: 14, scope: !3155)
!3158 = distinct !{!3158, !3142, !3159}
!3159 = !DILocation(line: 40, column: 5, scope: !3125)
!3160 = !DILocation(line: 43, column: 1, scope: !3125)
!3161 = distinct !DISubprogram(name: "atof", scope: !3162, file: !3162, line: 25, type: !3163, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3166)
!3162 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!3165, !1455}
!3165 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3166 = !{!3167}
!3167 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3161, file: !3162, line: 25, type: !1455)
!3168 = !DILocation(line: 0, scope: !3161)
!3169 = !DILocation(line: 27, column: 10, scope: !3161)
!3170 = !DILocation(line: 27, column: 3, scope: !3161)
!3171 = distinct !DISubprogram(name: "strtoimax", scope: !3172, file: !3172, line: 324, type: !3173, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3179)
!3172 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!3173 = !DISubroutineType(types: !3174)
!3174 = !{!3175, !2933, !3178, !1450}
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !3176, line: 101, baseType: !3177)
!3176 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2985, line: 72, baseType: !1513)
!3178 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1451)
!3179 = !{!3180, !3181, !3182}
!3180 = !DILocalVariable(name: "nptr", arg: 1, scope: !3171, file: !3172, line: 324, type: !2933)
!3181 = !DILocalVariable(name: "endptr", arg: 2, scope: !3171, file: !3172, line: 324, type: !3178)
!3182 = !DILocalVariable(name: "base", arg: 3, scope: !3171, file: !3172, line: 324, type: !1450)
!3183 = !DILocation(line: 0, scope: !3171)
!3184 = !DILocation(line: 327, column: 10, scope: !3171)
!3185 = !DILocation(line: 327, column: 3, scope: !3171)
!3186 = distinct !DISubprogram(name: "strtoumax", scope: !3172, file: !3172, line: 336, type: !3187, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3191)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!3189, !2933, !3178, !1450}
!3189 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !3176, line: 102, baseType: !3190)
!3190 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2985, line: 73, baseType: !1511)
!3191 = !{!3192, !3193, !3194}
!3192 = !DILocalVariable(name: "nptr", arg: 1, scope: !3186, file: !3172, line: 336, type: !2933)
!3193 = !DILocalVariable(name: "endptr", arg: 2, scope: !3186, file: !3172, line: 336, type: !3178)
!3194 = !DILocalVariable(name: "base", arg: 3, scope: !3186, file: !3172, line: 336, type: !1450)
!3195 = !DILocation(line: 0, scope: !3186)
!3196 = !DILocation(line: 339, column: 10, scope: !3186)
!3197 = !DILocation(line: 339, column: 3, scope: !3186)
!3198 = distinct !DISubprogram(name: "wcstoimax", scope: !3172, file: !3172, line: 348, type: !3199, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3208)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!3175, !3201, !3205, !1450}
!3201 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3202)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3204)
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !3172, line: 34, baseType: !1450)
!3205 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3206)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3208 = !{!3209, !3210, !3211}
!3209 = !DILocalVariable(name: "nptr", arg: 1, scope: !3198, file: !3172, line: 348, type: !3201)
!3210 = !DILocalVariable(name: "endptr", arg: 2, scope: !3198, file: !3172, line: 348, type: !3205)
!3211 = !DILocalVariable(name: "base", arg: 3, scope: !3198, file: !3172, line: 348, type: !1450)
!3212 = !DILocation(line: 0, scope: !3198)
!3213 = !DILocation(line: 351, column: 10, scope: !3198)
!3214 = !DILocation(line: 351, column: 3, scope: !3198)
!3215 = distinct !DISubprogram(name: "wcstoumax", scope: !3172, file: !3172, line: 362, type: !3216, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3218)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!3189, !3201, !3205, !1450}
!3218 = !{!3219, !3220, !3221}
!3219 = !DILocalVariable(name: "nptr", arg: 1, scope: !3215, file: !3172, line: 362, type: !3201)
!3220 = !DILocalVariable(name: "endptr", arg: 2, scope: !3215, file: !3172, line: 362, type: !3205)
!3221 = !DILocalVariable(name: "base", arg: 3, scope: !3215, file: !3172, line: 362, type: !1450)
!3222 = !DILocation(line: 0, scope: !3215)
!3223 = !DILocation(line: 365, column: 10, scope: !3215)
!3224 = !DILocation(line: 365, column: 3, scope: !3215)
!3225 = distinct !DISubprogram(name: "stat", scope: !3226, file: !3226, line: 453, type: !3227, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3264)
!3226 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!1450, !1455, !3229}
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !3231, line: 46, size: 1152, elements: !3232)
!3231 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!3232 = !{!3233, !3235, !3237, !3239, !3241, !3243, !3245, !3246, !3247, !3248, !3250, !3252, !3260, !3261, !3262}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3230, file: !3231, line: 48, baseType: !3234, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2985, line: 145, baseType: !1511)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3230, file: !3231, line: 53, baseType: !3236, size: 64, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2985, line: 148, baseType: !1511)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3230, file: !3231, line: 61, baseType: !3238, size: 64, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2985, line: 151, baseType: !1511)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3230, file: !3231, line: 62, baseType: !3240, size: 32, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2985, line: 150, baseType: !7)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3230, file: !3231, line: 64, baseType: !3242, size: 32, offset: 224)
!3242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2985, line: 146, baseType: !7)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3230, file: !3231, line: 65, baseType: !3244, size: 32, offset: 256)
!3244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2985, line: 147, baseType: !7)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3230, file: !3231, line: 67, baseType: !1450, size: 32, offset: 288)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3230, file: !3231, line: 69, baseType: !3234, size: 64, offset: 320)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3230, file: !3231, line: 74, baseType: !2984, size: 64, offset: 384)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3230, file: !3231, line: 78, baseType: !3249, size: 64, offset: 448)
!3249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2985, line: 174, baseType: !1513)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3230, file: !3231, line: 80, baseType: !3251, size: 64, offset: 512)
!3251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2985, line: 179, baseType: !1513)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3230, file: !3231, line: 91, baseType: !3253, size: 128, offset: 576)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !3254, line: 10, size: 128, elements: !3255)
!3254 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!3255 = !{!3256, !3258}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3253, file: !3254, line: 12, baseType: !3257, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2985, line: 160, baseType: !1513)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3253, file: !3254, line: 16, baseType: !3259, size: 64, offset: 64)
!3259 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2985, line: 196, baseType: !1513)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3230, file: !3231, line: 92, baseType: !3253, size: 128, offset: 704)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3230, file: !3231, line: 93, baseType: !3253, size: 128, offset: 832)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3230, file: !3231, line: 106, baseType: !3263, size: 192, offset: 960)
!3263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3259, size: 192, elements: !1531)
!3264 = !{!3265, !3266}
!3265 = !DILocalVariable(name: "__path", arg: 1, scope: !3225, file: !3226, line: 453, type: !1455)
!3266 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3225, file: !3226, line: 453, type: !3229)
!3267 = !DILocation(line: 0, scope: !3225)
!3268 = !DILocation(line: 455, column: 10, scope: !3225)
!3269 = !DILocation(line: 455, column: 3, scope: !3225)
!3270 = distinct !DISubprogram(name: "lstat", scope: !3226, file: !3226, line: 460, type: !3227, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3271)
!3271 = !{!3272, !3273}
!3272 = !DILocalVariable(name: "__path", arg: 1, scope: !3270, file: !3226, line: 460, type: !1455)
!3273 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3270, file: !3226, line: 460, type: !3229)
!3274 = !DILocation(line: 0, scope: !3270)
!3275 = !DILocation(line: 462, column: 10, scope: !3270)
!3276 = !DILocation(line: 462, column: 3, scope: !3270)
!3277 = distinct !DISubprogram(name: "fstat", scope: !3226, file: !3226, line: 467, type: !3278, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3280)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!1450, !1450, !3229}
!3280 = !{!3281, !3282}
!3281 = !DILocalVariable(name: "__fd", arg: 1, scope: !3277, file: !3226, line: 467, type: !1450)
!3282 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3277, file: !3226, line: 467, type: !3229)
!3283 = !DILocation(line: 0, scope: !3277)
!3284 = !DILocation(line: 469, column: 10, scope: !3277)
!3285 = !DILocation(line: 469, column: 3, scope: !3277)
!3286 = distinct !DISubprogram(name: "fstatat", scope: !3226, file: !3226, line: 474, type: !3287, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3289)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!1450, !1450, !1455, !3229, !1450}
!3289 = !{!3290, !3291, !3292, !3293}
!3290 = !DILocalVariable(name: "__fd", arg: 1, scope: !3286, file: !3226, line: 474, type: !1450)
!3291 = !DILocalVariable(name: "__filename", arg: 2, scope: !3286, file: !3226, line: 474, type: !1455)
!3292 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3286, file: !3226, line: 474, type: !3229)
!3293 = !DILocalVariable(name: "__flag", arg: 4, scope: !3286, file: !3226, line: 474, type: !1450)
!3294 = !DILocation(line: 0, scope: !3286)
!3295 = !DILocation(line: 477, column: 10, scope: !3286)
!3296 = !DILocation(line: 477, column: 3, scope: !3286)
!3297 = distinct !DISubprogram(name: "mknod", scope: !3226, file: !3226, line: 483, type: !3298, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3300)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!1450, !1455, !3240, !3234}
!3300 = !{!3301, !3302, !3303}
!3301 = !DILocalVariable(name: "__path", arg: 1, scope: !3297, file: !3226, line: 483, type: !1455)
!3302 = !DILocalVariable(name: "__mode", arg: 2, scope: !3297, file: !3226, line: 483, type: !3240)
!3303 = !DILocalVariable(name: "__dev", arg: 3, scope: !3297, file: !3226, line: 483, type: !3234)
!3304 = !DILocation(line: 0, scope: !3297)
!3305 = !DILocation(line: 485, column: 10, scope: !3297)
!3306 = !DILocation(line: 485, column: 3, scope: !3297)
!3307 = distinct !DISubprogram(name: "mknodat", scope: !3226, file: !3226, line: 491, type: !3308, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3310)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!1450, !1450, !1455, !3240, !3234}
!3310 = !{!3311, !3312, !3313, !3314}
!3311 = !DILocalVariable(name: "__fd", arg: 1, scope: !3307, file: !3226, line: 491, type: !1450)
!3312 = !DILocalVariable(name: "__path", arg: 2, scope: !3307, file: !3226, line: 491, type: !1455)
!3313 = !DILocalVariable(name: "__mode", arg: 3, scope: !3307, file: !3226, line: 491, type: !3240)
!3314 = !DILocalVariable(name: "__dev", arg: 4, scope: !3307, file: !3226, line: 491, type: !3234)
!3315 = !DILocation(line: 0, scope: !3307)
!3316 = !DILocation(line: 494, column: 10, scope: !3307)
!3317 = !DILocation(line: 494, column: 3, scope: !3307)
!3318 = distinct !DISubprogram(name: "stat64", scope: !3226, file: !3226, line: 502, type: !3319, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3341)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!1450, !1455, !3321}
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !3231, line: 119, size: 1152, elements: !3323)
!3323 = !{!3324, !3325, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3337, !3338, !3339, !3340}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3322, file: !3231, line: 121, baseType: !3234, size: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3322, file: !3231, line: 123, baseType: !3326, size: 64, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2985, line: 149, baseType: !1511)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3322, file: !3231, line: 124, baseType: !3238, size: 64, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3322, file: !3231, line: 125, baseType: !3240, size: 32, offset: 192)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3322, file: !3231, line: 132, baseType: !3242, size: 32, offset: 224)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3322, file: !3231, line: 133, baseType: !3244, size: 32, offset: 256)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3322, file: !3231, line: 135, baseType: !1450, size: 32, offset: 288)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3322, file: !3231, line: 136, baseType: !3234, size: 64, offset: 320)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3322, file: !3231, line: 137, baseType: !2984, size: 64, offset: 384)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3322, file: !3231, line: 143, baseType: !3249, size: 64, offset: 448)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3322, file: !3231, line: 144, baseType: !3336, size: 64, offset: 512)
!3336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2985, line: 180, baseType: !1513)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3322, file: !3231, line: 152, baseType: !3253, size: 128, offset: 576)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3322, file: !3231, line: 153, baseType: !3253, size: 128, offset: 704)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3322, file: !3231, line: 154, baseType: !3253, size: 128, offset: 832)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3322, file: !3231, line: 164, baseType: !3263, size: 192, offset: 960)
!3341 = !{!3342, !3343}
!3342 = !DILocalVariable(name: "__path", arg: 1, scope: !3318, file: !3226, line: 502, type: !1455)
!3343 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3318, file: !3226, line: 502, type: !3321)
!3344 = !DILocation(line: 0, scope: !3318)
!3345 = !DILocation(line: 504, column: 10, scope: !3318)
!3346 = !DILocation(line: 504, column: 3, scope: !3318)
!3347 = distinct !DISubprogram(name: "lstat64", scope: !3226, file: !3226, line: 509, type: !3319, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3348)
!3348 = !{!3349, !3350}
!3349 = !DILocalVariable(name: "__path", arg: 1, scope: !3347, file: !3226, line: 509, type: !1455)
!3350 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3347, file: !3226, line: 509, type: !3321)
!3351 = !DILocation(line: 0, scope: !3347)
!3352 = !DILocation(line: 511, column: 10, scope: !3347)
!3353 = !DILocation(line: 511, column: 3, scope: !3347)
!3354 = distinct !DISubprogram(name: "fstat64", scope: !3226, file: !3226, line: 516, type: !3355, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3357)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!1450, !1450, !3321}
!3357 = !{!3358, !3359}
!3358 = !DILocalVariable(name: "__fd", arg: 1, scope: !3354, file: !3226, line: 516, type: !1450)
!3359 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3354, file: !3226, line: 516, type: !3321)
!3360 = !DILocation(line: 0, scope: !3354)
!3361 = !DILocation(line: 518, column: 10, scope: !3354)
!3362 = !DILocation(line: 518, column: 3, scope: !3354)
!3363 = distinct !DISubprogram(name: "fstatat64", scope: !3226, file: !3226, line: 523, type: !3364, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3366)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!1450, !1450, !1455, !3321, !1450}
!3366 = !{!3367, !3368, !3369, !3370}
!3367 = !DILocalVariable(name: "__fd", arg: 1, scope: !3363, file: !3226, line: 523, type: !1450)
!3368 = !DILocalVariable(name: "__filename", arg: 2, scope: !3363, file: !3226, line: 523, type: !1455)
!3369 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3363, file: !3226, line: 523, type: !3321)
!3370 = !DILocalVariable(name: "__flag", arg: 4, scope: !3363, file: !3226, line: 523, type: !1450)
!3371 = !DILocation(line: 0, scope: !3363)
!3372 = !DILocation(line: 526, column: 10, scope: !3363)
!3373 = !DILocation(line: 526, column: 3, scope: !3363)
!3374 = distinct !DISubprogram(name: "init_ttree", scope: !3, file: !3, line: 533, type: !3375, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{null}
!3377 = !DILocation(line: 536, column: 21, scope: !3374)
!3378 = !DILocation(line: 536, column: 19, scope: !3374)
!3379 = !DILocation(line: 539, column: 25, scope: !3374)
!3380 = !DILocation(line: 539, column: 23, scope: !3374)
!3381 = !DILocation(line: 542, column: 25, scope: !3374)
!3382 = !DILocation(line: 542, column: 23, scope: !3374)
!3383 = !DILocation(line: 544, column: 28, scope: !3374)
!3384 = !DILocation(line: 544, column: 26, scope: !3374)
!3385 = !DILocation(line: 547, column: 24, scope: !3374)
!3386 = !DILocation(line: 547, column: 22, scope: !3374)
!3387 = !DILocation(line: 550, column: 18, scope: !3374)
!3388 = !DILocation(line: 550, column: 16, scope: !3374)
!3389 = !DILocation(line: 552, column: 26, scope: !3374)
!3390 = !DILocation(line: 552, column: 24, scope: !3374)
!3391 = !DILocation(line: 555, column: 26, scope: !3374)
!3392 = !DILocation(line: 555, column: 24, scope: !3374)
!3393 = !DILocation(line: 556, column: 27, scope: !3374)
!3394 = !DILocation(line: 556, column: 25, scope: !3374)
!3395 = !DILocation(line: 559, column: 3, scope: !3374)
!3396 = !DILocation(line: 560, column: 14, scope: !3374)
!3397 = !DILocation(line: 560, column: 3, scope: !3374)
!3398 = !DILocation(line: 561, column: 1, scope: !3374)
!3399 = distinct !DISubprogram(name: "type_hash_hash", scope: !3, file: !3, line: 5890, type: !1812, scopeLine: 5891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3400)
!3400 = !{!3401}
!3401 = !DILocalVariable(name: "item", arg: 1, scope: !3399, file: !3, line: 5890, type: !1815)
!3402 = !DILocation(line: 0, scope: !3399)
!3403 = !DILocation(line: 5892, column: 45, scope: !3399)
!3404 = !DILocation(line: 5892, column: 10, scope: !3399)
!3405 = !DILocation(line: 5892, column: 3, scope: !3399)
!3406 = distinct !DISubprogram(name: "type_hash_eq", scope: !3, file: !3, line: 5786, type: !1820, scopeLine: 5787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3407)
!3407 = !{!3408, !3409, !3410, !3412}
!3408 = !DILocalVariable(name: "va", arg: 1, scope: !3406, file: !3, line: 5786, type: !1815)
!3409 = !DILocalVariable(name: "vb", arg: 2, scope: !3406, file: !3, line: 5786, type: !1815)
!3410 = !DILocalVariable(name: "a", scope: !3406, file: !3, line: 5788, type: !3411)
!3411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2791)
!3412 = !DILocalVariable(name: "b", scope: !3406, file: !3, line: 5789, type: !3411)
!3413 = !DILocation(line: 0, scope: !3406)
!3414 = !DILocation(line: 5792, column: 10, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 5792, column: 7)
!3416 = !DILocation(line: 5792, column: 21, scope: !3415)
!3417 = !DILocation(line: 5792, column: 15, scope: !3415)
!3418 = !DILocation(line: 5793, column: 7, scope: !3415)
!3419 = !DILocation(line: 5793, column: 10, scope: !3415)
!3420 = !DILocation(line: 5793, column: 33, scope: !3415)
!3421 = !DILocation(line: 5793, column: 30, scope: !3415)
!3422 = !DILocation(line: 5794, column: 7, scope: !3415)
!3423 = !DILocation(line: 5794, column: 10, scope: !3415)
!3424 = !DILocation(line: 5794, column: 33, scope: !3415)
!3425 = !DILocation(line: 5794, column: 30, scope: !3415)
!3426 = !DILocation(line: 5795, column: 7, scope: !3415)
!3427 = !DILocation(line: 5795, column: 33, scope: !3415)
!3428 = !DILocation(line: 5796, column: 6, scope: !3415)
!3429 = !DILocation(line: 5795, column: 11, scope: !3415)
!3430 = !DILocation(line: 5797, column: 7, scope: !3415)
!3431 = !DILocation(line: 5797, column: 10, scope: !3415)
!3432 = !DILocation(line: 5797, column: 34, scope: !3415)
!3433 = !DILocation(line: 5797, column: 31, scope: !3415)
!3434 = !DILocation(line: 5798, column: 7, scope: !3415)
!3435 = !DILocation(line: 5798, column: 10, scope: !3415)
!3436 = !DILocation(line: 5798, column: 33, scope: !3415)
!3437 = !DILocation(line: 5798, column: 30, scope: !3415)
!3438 = !DILocation(line: 5799, column: 7, scope: !3415)
!3439 = !DILocation(line: 5799, column: 11, scope: !3415)
!3440 = !DILocation(line: 5799, column: 31, scope: !3415)
!3441 = !DILocation(line: 5800, column: 11, scope: !3415)
!3442 = !DILocation(line: 5800, column: 14, scope: !3415)
!3443 = !DILocation(line: 5800, column: 37, scope: !3415)
!3444 = !DILocation(line: 5800, column: 34, scope: !3415)
!3445 = !DILocation(line: 5792, column: 7, scope: !3406)
!3446 = !DILocation(line: 5803, column: 11, scope: !3406)
!3447 = !DILocation(line: 5803, column: 3, scope: !3406)
!3448 = !DILocation(line: 5812, column: 14, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 5804, column: 5)
!3450 = !DILocation(line: 5812, column: 48, scope: !3449)
!3451 = !DILocation(line: 5812, column: 45, scope: !3449)
!3452 = !DILocation(line: 5812, column: 7, scope: !3449)
!3453 = !DILocation(line: 5815, column: 11, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 5815, column: 11)
!3455 = !DILocation(line: 5815, column: 36, scope: !3454)
!3456 = !DILocation(line: 5815, column: 33, scope: !3454)
!3457 = !DILocation(line: 5816, column: 4, scope: !3454)
!3458 = !DILocation(line: 5816, column: 9, scope: !3454)
!3459 = !DILocation(line: 5817, column: 9, scope: !3454)
!3460 = !DILocation(line: 5817, column: 12, scope: !3454)
!3461 = !DILocation(line: 5817, column: 46, scope: !3454)
!3462 = !DILocation(line: 5818, column: 9, scope: !3454)
!3463 = !DILocation(line: 5818, column: 12, scope: !3454)
!3464 = !DILocation(line: 5819, column: 9, scope: !3454)
!3465 = !DILocation(line: 5819, column: 12, scope: !3454)
!3466 = !DILocation(line: 5819, column: 46, scope: !3454)
!3467 = !DILocation(line: 5820, column: 9, scope: !3454)
!3468 = !DILocation(line: 5820, column: 12, scope: !3454)
!3469 = !DILocation(line: 5815, column: 11, scope: !3449)
!3470 = !DILocation(line: 5829, column: 16, scope: !3449)
!3471 = !DILocation(line: 5829, column: 44, scope: !3449)
!3472 = !DILocation(line: 5829, column: 41, scope: !3449)
!3473 = !DILocation(line: 5830, column: 9, scope: !3449)
!3474 = !DILocation(line: 5830, column: 32, scope: !3449)
!3475 = !DILocation(line: 5830, column: 12, scope: !3449)
!3476 = !DILocation(line: 5832, column: 8, scope: !3449)
!3477 = !DILocation(line: 5832, column: 12, scope: !3449)
!3478 = !DILocation(line: 5832, column: 40, scope: !3449)
!3479 = !DILocation(line: 5832, column: 37, scope: !3449)
!3480 = !DILocation(line: 5833, column: 5, scope: !3449)
!3481 = !DILocation(line: 5833, column: 28, scope: !3449)
!3482 = !DILocation(line: 5833, column: 8, scope: !3449)
!3483 = !DILocation(line: 5829, column: 7, scope: !3449)
!3484 = !DILocation(line: 5837, column: 43, scope: !3449)
!3485 = !DILocation(line: 5837, column: 40, scope: !3449)
!3486 = !DILocation(line: 5837, column: 7, scope: !3449)
!3487 = !DILocation(line: 5840, column: 14, scope: !3449)
!3488 = !DILocation(line: 5840, column: 48, scope: !3449)
!3489 = !DILocation(line: 5840, column: 45, scope: !3449)
!3490 = !DILocation(line: 5840, column: 7, scope: !3449)
!3491 = !DILocation(line: 5843, column: 15, scope: !3449)
!3492 = !DILocation(line: 5843, column: 49, scope: !3449)
!3493 = !DILocation(line: 5843, column: 46, scope: !3449)
!3494 = !DILocation(line: 5844, column: 8, scope: !3449)
!3495 = !DILocation(line: 5844, column: 12, scope: !3449)
!3496 = !DILocation(line: 5844, column: 40, scope: !3449)
!3497 = !DILocation(line: 5844, column: 37, scope: !3449)
!3498 = !DILocation(line: 5845, column: 5, scope: !3449)
!3499 = !DILocation(line: 5845, column: 9, scope: !3449)
!3500 = !DILocation(line: 5846, column: 9, scope: !3449)
!3501 = !DILocation(line: 5846, column: 12, scope: !3449)
!3502 = !DILocation(line: 5846, column: 49, scope: !3449)
!3503 = !DILocation(line: 5847, column: 9, scope: !3449)
!3504 = !DILocation(line: 5847, column: 12, scope: !3449)
!3505 = !DILocation(line: 5848, column: 9, scope: !3449)
!3506 = !DILocation(line: 5848, column: 12, scope: !3449)
!3507 = !DILocation(line: 5848, column: 49, scope: !3449)
!3508 = !DILocation(line: 5849, column: 9, scope: !3449)
!3509 = !DILocation(line: 5849, column: 12, scope: !3449)
!3510 = !DILocation(line: 5843, column: 7, scope: !3449)
!3511 = !DILocation(line: 5853, column: 14, scope: !3449)
!3512 = !DILocation(line: 5853, column: 39, scope: !3449)
!3513 = !DILocation(line: 5853, column: 36, scope: !3449)
!3514 = !DILocation(line: 5853, column: 7, scope: !3449)
!3515 = !DILocation(line: 5858, column: 15, scope: !3449)
!3516 = !DILocation(line: 5858, column: 40, scope: !3449)
!3517 = !DILocation(line: 5858, column: 37, scope: !3449)
!3518 = !DILocation(line: 5859, column: 8, scope: !3449)
!3519 = !DILocation(line: 5859, column: 12, scope: !3449)
!3520 = !DILocation(line: 5860, column: 5, scope: !3449)
!3521 = !DILocation(line: 5860, column: 8, scope: !3449)
!3522 = !DILocation(line: 5860, column: 42, scope: !3449)
!3523 = !DILocation(line: 5861, column: 5, scope: !3449)
!3524 = !DILocation(line: 5861, column: 8, scope: !3449)
!3525 = !DILocation(line: 5862, column: 5, scope: !3449)
!3526 = !DILocation(line: 5862, column: 8, scope: !3449)
!3527 = !DILocation(line: 5862, column: 42, scope: !3449)
!3528 = !DILocation(line: 5863, column: 5, scope: !3449)
!3529 = !DILocation(line: 5863, column: 8, scope: !3449)
!3530 = !DILocation(line: 5858, column: 7, scope: !3449)
!3531 = !DILocation(line: 5867, column: 11, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 5867, column: 11)
!3533 = !DILocation(line: 5867, column: 39, scope: !3532)
!3534 = !DILocation(line: 5867, column: 36, scope: !3532)
!3535 = !DILocation(line: 5868, column: 4, scope: !3532)
!3536 = !DILocation(line: 5868, column: 8, scope: !3532)
!3537 = !DILocation(line: 5869, column: 8, scope: !3532)
!3538 = !DILocation(line: 5869, column: 11, scope: !3532)
!3539 = !DILocation(line: 5869, column: 48, scope: !3532)
!3540 = !DILocation(line: 5870, column: 8, scope: !3532)
!3541 = !DILocation(line: 5870, column: 11, scope: !3532)
!3542 = !DILocation(line: 5871, column: 8, scope: !3532)
!3543 = !DILocation(line: 5871, column: 11, scope: !3532)
!3544 = !DILocation(line: 5871, column: 48, scope: !3532)
!3545 = !DILocation(line: 5872, column: 8, scope: !3532)
!3546 = !DILocation(line: 5872, column: 11, scope: !3532)
!3547 = !DILocation(line: 5867, column: 11, scope: !3449)
!3548 = !DILocation(line: 5878, column: 7, scope: !3449)
!3549 = !DILocation(line: 5881, column: 24, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 5881, column: 7)
!3551 = !DILocation(line: 5881, column: 37, scope: !3550)
!3552 = !DILocation(line: 5881, column: 7, scope: !3406)
!3553 = !DILocation(line: 5882, column: 46, scope: !3550)
!3554 = !DILocation(line: 5882, column: 55, scope: !3550)
!3555 = !DILocation(line: 5882, column: 12, scope: !3550)
!3556 = !DILocation(line: 5882, column: 5, scope: !3550)
!3557 = !DILocation(line: 5885, column: 1, scope: !3406)
!3558 = distinct !DISubprogram(name: "tree_map_hash", scope: !3, file: !3, line: 5594, type: !3559, scopeLine: 5595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3561)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!7, !1815}
!3561 = !{!3562}
!3562 = !DILocalVariable(name: "item", arg: 1, scope: !3558, file: !3, line: 5594, type: !1815)
!3563 = !DILocation(line: 0, scope: !3558)
!3564 = !DILocation(line: 5596, column: 45, scope: !3558)
!3565 = !DILocation(line: 5596, column: 3, scope: !3558)
!3566 = distinct !DISubprogram(name: "tree_map_base_eq", scope: !3, file: !3, line: 5568, type: !1820, scopeLine: 5569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3567)
!3567 = !{!3568, !3569, !3570, !3572}
!3568 = !DILocalVariable(name: "va", arg: 1, scope: !3566, file: !3, line: 5568, type: !1815)
!3569 = !DILocalVariable(name: "vb", arg: 2, scope: !3566, file: !3, line: 5568, type: !1815)
!3570 = !DILocalVariable(name: "a", scope: !3566, file: !3, line: 5570, type: !3571)
!3571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2748)
!3572 = !DILocalVariable(name: "b", scope: !3566, file: !3, line: 5571, type: !3571)
!3573 = !DILocation(line: 0, scope: !3566)
!3574 = !DILocation(line: 5572, column: 14, scope: !3566)
!3575 = !DILocation(line: 5572, column: 25, scope: !3566)
!3576 = !DILocation(line: 5572, column: 19, scope: !3566)
!3577 = !DILocation(line: 5572, column: 3, scope: !3566)
!3578 = distinct !DISubprogram(name: "tree_map_base_hash", scope: !3, file: !3, line: 5578, type: !3559, scopeLine: 5579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3579)
!3579 = !{!3580}
!3580 = !DILocalVariable(name: "item", arg: 1, scope: !3578, file: !3, line: 5578, type: !1815)
!3581 = !DILocation(line: 0, scope: !3578)
!3582 = !DILocation(line: 5580, column: 10, scope: !3578)
!3583 = !DILocation(line: 5580, column: 67, scope: !3578)
!3584 = !DILocation(line: 5580, column: 3, scope: !3578)
!3585 = distinct !DISubprogram(name: "int_cst_hash_hash", scope: !3, file: !3, line: 1090, type: !1812, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3586)
!3586 = !{!3587, !3588}
!3587 = !DILocalVariable(name: "x", arg: 1, scope: !3585, file: !3, line: 1090, type: !1815)
!3588 = !DILocalVariable(name: "t", scope: !3585, file: !3, line: 1092, type: !3589)
!3589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2774)
!3590 = !DILocation(line: 0, scope: !3585)
!3591 = !DILocation(line: 1094, column: 11, scope: !3585)
!3592 = !DILocation(line: 1094, column: 35, scope: !3585)
!3593 = !DILocation(line: 1094, column: 33, scope: !3585)
!3594 = !DILocation(line: 1095, column: 6, scope: !3585)
!3595 = !DILocation(line: 1095, column: 25, scope: !3585)
!3596 = !DILocation(line: 1094, column: 10, scope: !3585)
!3597 = !DILocation(line: 1094, column: 3, scope: !3585)
!3598 = distinct !DISubprogram(name: "int_cst_hash_eq", scope: !3, file: !3, line: 1102, type: !1820, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3599)
!3599 = !{!3600, !3601, !3602, !3603}
!3600 = !DILocalVariable(name: "x", arg: 1, scope: !3598, file: !3, line: 1102, type: !1815)
!3601 = !DILocalVariable(name: "y", arg: 2, scope: !3598, file: !3, line: 1102, type: !1815)
!3602 = !DILocalVariable(name: "xt", scope: !3598, file: !3, line: 1104, type: !3589)
!3603 = !DILocalVariable(name: "yt", scope: !3598, file: !3, line: 1105, type: !3589)
!3604 = !DILocation(line: 0, scope: !3598)
!3605 = !DILocation(line: 1107, column: 11, scope: !3598)
!3606 = !DILocation(line: 1107, column: 29, scope: !3598)
!3607 = !DILocation(line: 1107, column: 26, scope: !3598)
!3608 = !DILocation(line: 1108, column: 4, scope: !3598)
!3609 = !DILocation(line: 1108, column: 7, scope: !3598)
!3610 = !DILocation(line: 1108, column: 33, scope: !3598)
!3611 = !DILocation(line: 1108, column: 30, scope: !3598)
!3612 = !DILocation(line: 1109, column: 4, scope: !3598)
!3613 = !DILocation(line: 1109, column: 7, scope: !3598)
!3614 = !DILocation(line: 1109, column: 32, scope: !3598)
!3615 = !DILocation(line: 1109, column: 29, scope: !3598)
!3616 = !DILocation(line: 1107, column: 3, scope: !3598)
!3617 = distinct !DISubprogram(name: "make_node_stat", scope: !3, file: !3, line: 784, type: !3618, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3620)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!1457, !155}
!3620 = !{!3621, !3622, !3623, !3624}
!3621 = !DILocalVariable(name: "code", arg: 1, scope: !3617, file: !3, line: 784, type: !155)
!3622 = !DILocalVariable(name: "t", scope: !3617, file: !3, line: 786, type: !1457)
!3623 = !DILocalVariable(name: "type", scope: !3617, file: !3, line: 787, type: !5)
!3624 = !DILocalVariable(name: "length", scope: !3617, file: !3, line: 788, type: !1830)
!3625 = !DILocation(line: 0, scope: !3617)
!3626 = !DILocation(line: 787, column: 31, scope: !3617)
!3627 = !DILocation(line: 788, column: 19, scope: !3617)
!3628 = !DILocation(line: 0, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 862, column: 7)
!3630 = !DILocation(line: 867, column: 3, scope: !3617)
!3631 = !DILocation(line: 869, column: 3, scope: !3617)
!3632 = !DILocation(line: 871, column: 3, scope: !3617)
!3633 = !DILocation(line: 874, column: 29, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 872, column: 5)
!3635 = !DILocation(line: 875, column: 7, scope: !3634)
!3636 = !DILocation(line: 878, column: 11, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 878, column: 11)
!3638 = !DILocation(line: 878, column: 11, scope: !3634)
!3639 = !DILocation(line: 880, column: 13, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 880, column: 8)
!3641 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 879, column: 2)
!3642 = !DILocation(line: 0, scope: !3640)
!3643 = !DILocation(line: 880, column: 8, scope: !3641)
!3644 = !DILocation(line: 882, column: 23, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 881, column: 6)
!3646 = !DILocation(line: 883, column: 8, scope: !3645)
!3647 = !DILocation(line: 883, column: 22, scope: !3645)
!3648 = !DILocation(line: 884, column: 6, scope: !3645)
!3649 = !DILocation(line: 886, column: 21, scope: !3640)
!3650 = !DILocation(line: 888, column: 34, scope: !3634)
!3651 = !DILocation(line: 888, column: 7, scope: !3634)
!3652 = !DILocation(line: 888, column: 32, scope: !3634)
!3653 = !DILocation(line: 889, column: 25, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 889, column: 11)
!3655 = !DILocation(line: 889, column: 11, scope: !3634)
!3656 = !DILocation(line: 890, column: 17, scope: !3654)
!3657 = !DILocation(line: 890, column: 2, scope: !3654)
!3658 = !DILocation(line: 890, column: 15, scope: !3654)
!3659 = !DILocation(line: 892, column: 30, scope: !3654)
!3660 = !DILocation(line: 892, column: 2, scope: !3654)
!3661 = !DILocation(line: 892, column: 15, scope: !3654)
!3662 = !DILocation(line: 893, column: 25, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 893, column: 11)
!3664 = !DILocation(line: 893, column: 11, scope: !3634)
!3665 = !DILocation(line: 894, column: 2, scope: !3663)
!3666 = !DILocation(line: 894, column: 21, scope: !3663)
!3667 = !DILocation(line: 899, column: 35, scope: !3634)
!3668 = !DILocation(line: 899, column: 7, scope: !3634)
!3669 = !DILocation(line: 899, column: 20, scope: !3634)
!3670 = !DILocation(line: 900, column: 7, scope: !3634)
!3671 = !DILocation(line: 900, column: 22, scope: !3634)
!3672 = !DILocation(line: 901, column: 27, scope: !3634)
!3673 = !DILocation(line: 902, column: 7, scope: !3634)
!3674 = !DILocation(line: 902, column: 29, scope: !3634)
!3675 = !DILocation(line: 903, column: 7, scope: !3634)
!3676 = !DILocation(line: 903, column: 26, scope: !3634)
!3677 = !DILocation(line: 906, column: 7, scope: !3634)
!3678 = !DILocation(line: 906, column: 27, scope: !3634)
!3679 = !DILocation(line: 907, column: 15, scope: !3634)
!3680 = !DILocation(line: 907, column: 7, scope: !3634)
!3681 = !DILocation(line: 910, column: 7, scope: !3634)
!3682 = !DILocation(line: 910, column: 26, scope: !3634)
!3683 = !DILocation(line: 911, column: 7, scope: !3634)
!3684 = !DILocation(line: 914, column: 25, scope: !3634)
!3685 = !DILocation(line: 915, column: 7, scope: !3634)
!3686 = !DILocation(line: 918, column: 7, scope: !3634)
!3687 = !DILocation(line: 929, column: 26, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 919, column: 2)
!3689 = !DILocation(line: 930, column: 4, scope: !3688)
!3690 = !DILocation(line: 942, column: 3, scope: !3617)
!3691 = distinct !DISubprogram(name: "cl_option_hash_hash", scope: !3, file: !3, line: 10464, type: !1812, scopeLine: 10465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3692)
!3692 = !{!3693, !3694, !3695, !3696, !3697, !3698}
!3693 = !DILocalVariable(name: "x", arg: 1, scope: !3691, file: !3, line: 10464, type: !1815)
!3694 = !DILocalVariable(name: "t", scope: !3691, file: !3, line: 10466, type: !3589)
!3695 = !DILocalVariable(name: "p", scope: !3691, file: !3, line: 10467, type: !1455)
!3696 = !DILocalVariable(name: "i", scope: !3691, file: !3, line: 10468, type: !1830)
!3697 = !DILocalVariable(name: "len", scope: !3691, file: !3, line: 10469, type: !1830)
!3698 = !DILocalVariable(name: "hash", scope: !3691, file: !3, line: 10470, type: !1814)
!3699 = !DILocation(line: 0, scope: !3691)
!3700 = !DILocation(line: 10472, column: 7, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 10472, column: 7)
!3702 = !DILocation(line: 10472, column: 21, scope: !3701)
!3703 = !DILocation(line: 10472, column: 7, scope: !3691)
!3704 = !DILocation(line: 10474, column: 25, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 10473, column: 5)
!3706 = !DILocation(line: 10476, column: 5, scope: !3705)
!3707 = !DILocation(line: 10478, column: 26, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 10478, column: 12)
!3709 = !DILocation(line: 10478, column: 12, scope: !3701)
!3710 = !DILocation(line: 10480, column: 25, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 10479, column: 5)
!3712 = !DILocation(line: 10482, column: 5, scope: !3711)
!3713 = !DILocation(line: 10485, column: 5, scope: !3708)
!3714 = !DILocation(line: 0, scope: !3701)
!3715 = !DILocation(line: 10489, column: 8, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 10489, column: 3)
!3717 = !DILocation(line: 0, scope: !3716)
!3718 = !DILocation(line: 10489, column: 17, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 10489, column: 3)
!3720 = !DILocation(line: 10489, column: 3, scope: !3716)
!3721 = !DILocation(line: 10490, column: 9, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 10490, column: 9)
!3723 = !DILocation(line: 10490, column: 9, scope: !3719)
!3724 = !DILocation(line: 10491, column: 20, scope: !3722)
!3725 = !DILocation(line: 10491, column: 32, scope: !3722)
!3726 = !DILocation(line: 10491, column: 40, scope: !3722)
!3727 = !DILocation(line: 10491, column: 38, scope: !3722)
!3728 = !DILocation(line: 10491, column: 14, scope: !3722)
!3729 = !DILocation(line: 10491, column: 7, scope: !3722)
!3730 = !DILocation(line: 10489, column: 25, scope: !3719)
!3731 = !DILocation(line: 10489, column: 3, scope: !3719)
!3732 = distinct !{!3732, !3720, !3733}
!3733 = !DILocation(line: 10491, column: 44, scope: !3716)
!3734 = !DILocation(line: 10493, column: 3, scope: !3691)
!3735 = distinct !DISubprogram(name: "cl_option_hash_eq", scope: !3, file: !3, line: 10501, type: !1820, scopeLine: 10502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3736)
!3736 = !{!3737, !3738, !3739, !3740, !3741, !3742, !3743}
!3737 = !DILocalVariable(name: "x", arg: 1, scope: !3735, file: !3, line: 10501, type: !1815)
!3738 = !DILocalVariable(name: "y", arg: 2, scope: !3735, file: !3, line: 10501, type: !1815)
!3739 = !DILocalVariable(name: "xt", scope: !3735, file: !3, line: 10503, type: !3589)
!3740 = !DILocalVariable(name: "yt", scope: !3735, file: !3, line: 10504, type: !3589)
!3741 = !DILocalVariable(name: "xp", scope: !3735, file: !3, line: 10505, type: !1455)
!3742 = !DILocalVariable(name: "yp", scope: !3735, file: !3, line: 10506, type: !1455)
!3743 = !DILocalVariable(name: "len", scope: !3735, file: !3, line: 10507, type: !1830)
!3744 = !DILocation(line: 0, scope: !3735)
!3745 = !DILocation(line: 10509, column: 7, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 10509, column: 7)
!3747 = !DILocation(line: 10509, column: 25, scope: !3746)
!3748 = !DILocation(line: 10509, column: 22, scope: !3746)
!3749 = !DILocation(line: 10509, column: 7, scope: !3735)
!3750 = !DILocation(line: 10512, column: 22, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 10512, column: 7)
!3752 = !DILocation(line: 10512, column: 7, scope: !3735)
!3753 = !DILocation(line: 10514, column: 26, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 10513, column: 5)
!3755 = !DILocation(line: 10515, column: 26, scope: !3754)
!3756 = !DILocation(line: 10517, column: 5, scope: !3754)
!3757 = !DILocation(line: 10519, column: 27, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 10519, column: 12)
!3759 = !DILocation(line: 10519, column: 12, scope: !3751)
!3760 = !DILocation(line: 10521, column: 26, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 10520, column: 5)
!3762 = !DILocation(line: 10522, column: 26, scope: !3761)
!3763 = !DILocation(line: 10524, column: 5, scope: !3761)
!3764 = !DILocation(line: 10527, column: 5, scope: !3758)
!3765 = !DILocation(line: 0, scope: !3751)
!3766 = !DILocation(line: 10529, column: 11, scope: !3735)
!3767 = !DILocation(line: 10529, column: 32, scope: !3735)
!3768 = !DILocation(line: 10529, column: 3, scope: !3735)
!3769 = !DILocation(line: 10530, column: 1, scope: !3735)
!3770 = distinct !DISubprogram(name: "initialize_tree_contains_struct", scope: !3, file: !3, line: 353, type: !3375, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3771)
!3771 = !{!3772, !3773, !3777}
!3772 = !DILocalVariable(name: "i", scope: !3770, file: !3, line: 355, type: !7)
!3773 = !DILocalVariable(name: "code", scope: !3774, file: !3, line: 400, type: !155)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 399, column: 5)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 398, column: 3)
!3776 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 398, column: 3)
!3777 = !DILocalVariable(name: "ts_code", scope: !3774, file: !3, line: 401, type: !419)
!3778 = !DILocation(line: 0, scope: !3770)
!3779 = !DILocation(line: 398, column: 8, scope: !3776)
!3780 = !DILocation(line: 0, scope: !3776)
!3781 = !DILocation(line: 398, column: 26, scope: !3775)
!3782 = !DILocation(line: 398, column: 3, scope: !3776)
!3783 = !DILocation(line: 0, scope: !3774)
!3784 = !DILocation(line: 404, column: 17, scope: !3774)
!3785 = !DILocation(line: 407, column: 7, scope: !3774)
!3786 = !DILocation(line: 407, column: 43, scope: !3774)
!3787 = !DILocation(line: 410, column: 7, scope: !3774)
!3788 = !DILocation(line: 413, column: 4, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 413, column: 4)
!3790 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 411, column: 2)
!3791 = !DILocation(line: 414, column: 4, scope: !3790)
!3792 = !DILocation(line: 436, column: 4, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 436, column: 4)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 436, column: 4)
!3795 = !DILocation(line: 436, column: 4, scope: !3794)
!3796 = !DILocation(line: 437, column: 4, scope: !3790)
!3797 = !DILocation(line: 440, column: 4, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 440, column: 4)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 440, column: 4)
!3800 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 440, column: 4)
!3801 = !DILocation(line: 440, column: 4, scope: !3799)
!3802 = !DILocation(line: 440, column: 4, scope: !3800)
!3803 = !DILocation(line: 441, column: 4, scope: !3790)
!3804 = !DILocation(line: 444, column: 4, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 444, column: 4)
!3806 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 444, column: 4)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 444, column: 4)
!3808 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 444, column: 4)
!3809 = !DILocation(line: 444, column: 4, scope: !3806)
!3810 = !DILocation(line: 444, column: 4, scope: !3807)
!3811 = !DILocation(line: 444, column: 4, scope: !3808)
!3812 = !DILocation(line: 445, column: 4, scope: !3790)
!3813 = !DILocation(line: 448, column: 4, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 448, column: 4)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 448, column: 4)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 448, column: 4)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 448, column: 4)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 448, column: 4)
!3819 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 448, column: 4)
!3820 = !DILocation(line: 448, column: 4, scope: !3815)
!3821 = !DILocation(line: 448, column: 4, scope: !3816)
!3822 = !DILocation(line: 448, column: 4, scope: !3817)
!3823 = !DILocation(line: 448, column: 4, scope: !3818)
!3824 = !DILocation(line: 448, column: 4, scope: !3819)
!3825 = !DILocation(line: 449, column: 4, scope: !3790)
!3826 = !DILocation(line: 456, column: 4, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 456, column: 4)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 456, column: 4)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 456, column: 4)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 456, column: 4)
!3831 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 456, column: 4)
!3832 = !DILocation(line: 456, column: 4, scope: !3828)
!3833 = !DILocation(line: 456, column: 4, scope: !3829)
!3834 = !DILocation(line: 456, column: 4, scope: !3830)
!3835 = !DILocation(line: 456, column: 4, scope: !3831)
!3836 = !DILocation(line: 457, column: 4, scope: !3790)
!3837 = !DILocation(line: 460, column: 4, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 460, column: 4)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 460, column: 4)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 460, column: 4)
!3841 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 460, column: 4)
!3842 = !DILocation(line: 460, column: 4, scope: !3839)
!3843 = !DILocation(line: 460, column: 4, scope: !3840)
!3844 = !DILocation(line: 460, column: 4, scope: !3841)
!3845 = !DILocation(line: 461, column: 4, scope: !3790)
!3846 = !DILocation(line: 464, column: 4, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 464, column: 4)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 464, column: 4)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 464, column: 4)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 464, column: 4)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 464, column: 4)
!3852 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 464, column: 4)
!3853 = !DILocation(line: 464, column: 4, scope: !3848)
!3854 = !DILocation(line: 464, column: 4, scope: !3849)
!3855 = !DILocation(line: 464, column: 4, scope: !3850)
!3856 = !DILocation(line: 464, column: 4, scope: !3851)
!3857 = !DILocation(line: 464, column: 4, scope: !3852)
!3858 = !DILocation(line: 465, column: 4, scope: !3790)
!3859 = !DILocation(line: 469, column: 4, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 469, column: 4)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 469, column: 4)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 469, column: 4)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 469, column: 4)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 469, column: 4)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 469, column: 4)
!3866 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 469, column: 4)
!3867 = !DILocation(line: 469, column: 4, scope: !3861)
!3868 = !DILocation(line: 469, column: 4, scope: !3862)
!3869 = !DILocation(line: 469, column: 4, scope: !3863)
!3870 = !DILocation(line: 469, column: 4, scope: !3864)
!3871 = !DILocation(line: 469, column: 4, scope: !3865)
!3872 = !DILocation(line: 469, column: 4, scope: !3866)
!3873 = !DILocation(line: 470, column: 4, scope: !3790)
!3874 = !DILocation(line: 473, column: 4, scope: !3790)
!3875 = !DILocation(line: 474, column: 2, scope: !3790)
!3876 = !DILocation(line: 398, column: 56, scope: !3775)
!3877 = !DILocation(line: 398, column: 3, scope: !3775)
!3878 = distinct !{!3878, !3782, !3879}
!3879 = !DILocation(line: 475, column: 5, scope: !3776)
!3880 = !DILocation(line: 478, column: 3, scope: !3770)
!3881 = !DILocation(line: 479, column: 3, scope: !3770)
!3882 = !DILocation(line: 480, column: 3, scope: !3770)
!3883 = !DILocation(line: 481, column: 3, scope: !3770)
!3884 = !DILocation(line: 482, column: 3, scope: !3770)
!3885 = !DILocation(line: 483, column: 3, scope: !3770)
!3886 = !DILocation(line: 484, column: 3, scope: !3770)
!3887 = !DILocation(line: 485, column: 3, scope: !3770)
!3888 = !DILocation(line: 486, column: 3, scope: !3770)
!3889 = !DILocation(line: 487, column: 3, scope: !3770)
!3890 = !DILocation(line: 488, column: 3, scope: !3770)
!3891 = !DILocation(line: 489, column: 3, scope: !3770)
!3892 = !DILocation(line: 490, column: 3, scope: !3770)
!3893 = !DILocation(line: 491, column: 3, scope: !3770)
!3894 = !DILocation(line: 492, column: 3, scope: !3770)
!3895 = !DILocation(line: 493, column: 3, scope: !3770)
!3896 = !DILocation(line: 494, column: 3, scope: !3770)
!3897 = !DILocation(line: 495, column: 3, scope: !3770)
!3898 = !DILocation(line: 496, column: 3, scope: !3770)
!3899 = !DILocation(line: 497, column: 3, scope: !3770)
!3900 = !DILocation(line: 498, column: 3, scope: !3770)
!3901 = !DILocation(line: 499, column: 3, scope: !3770)
!3902 = !DILocation(line: 500, column: 3, scope: !3770)
!3903 = !DILocation(line: 501, column: 3, scope: !3770)
!3904 = !DILocation(line: 502, column: 3, scope: !3770)
!3905 = !DILocation(line: 503, column: 3, scope: !3770)
!3906 = !DILocation(line: 504, column: 3, scope: !3770)
!3907 = !DILocation(line: 505, column: 3, scope: !3770)
!3908 = !DILocation(line: 506, column: 3, scope: !3770)
!3909 = !DILocation(line: 507, column: 3, scope: !3770)
!3910 = !DILocation(line: 508, column: 3, scope: !3770)
!3911 = !DILocation(line: 509, column: 3, scope: !3770)
!3912 = !DILocation(line: 510, column: 3, scope: !3770)
!3913 = !DILocation(line: 511, column: 3, scope: !3770)
!3914 = !DILocation(line: 512, column: 3, scope: !3770)
!3915 = !DILocation(line: 513, column: 3, scope: !3770)
!3916 = !DILocation(line: 514, column: 3, scope: !3770)
!3917 = !DILocation(line: 515, column: 3, scope: !3770)
!3918 = !DILocation(line: 516, column: 3, scope: !3770)
!3919 = !DILocation(line: 517, column: 3, scope: !3770)
!3920 = !DILocation(line: 518, column: 3, scope: !3770)
!3921 = !DILocation(line: 527, column: 1, scope: !3770)
!3922 = distinct !DISubprogram(name: "decl_assembler_name", scope: !3, file: !3, line: 568, type: !3923, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3925)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!1457, !1457}
!3925 = !{!3926}
!3926 = !DILocalVariable(name: "decl", arg: 1, scope: !3922, file: !3, line: 568, type: !1457)
!3927 = !DILocation(line: 0, scope: !3922)
!3928 = !DILocation(line: 570, column: 8, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 570, column: 7)
!3930 = !DILocation(line: 570, column: 7, scope: !3922)
!3931 = !DILocation(line: 571, column: 16, scope: !3929)
!3932 = !DILocation(line: 571, column: 5, scope: !3929)
!3933 = !DILocation(line: 572, column: 52, scope: !3922)
!3934 = !DILocation(line: 572, column: 3, scope: !3922)
!3935 = distinct !DISubprogram(name: "decl_assembler_name_equal", scope: !3, file: !3, line: 578, type: !3936, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3938)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!1449, !1457, !2774}
!3938 = !{!3939, !3940, !3941, !3942, !3943, !3944, !3945, !3948}
!3939 = !DILocalVariable(name: "decl", arg: 1, scope: !3935, file: !3, line: 578, type: !1457)
!3940 = !DILocalVariable(name: "asmname", arg: 2, scope: !3935, file: !3, line: 578, type: !2774)
!3941 = !DILocalVariable(name: "decl_asmname", scope: !3935, file: !3, line: 580, type: !1457)
!3942 = !DILocalVariable(name: "decl_str", scope: !3935, file: !3, line: 581, type: !1455)
!3943 = !DILocalVariable(name: "asmname_str", scope: !3935, file: !3, line: 582, type: !1455)
!3944 = !DILocalVariable(name: "test", scope: !3935, file: !3, line: 583, type: !1449)
!3945 = !DILocalVariable(name: "ulp_len", scope: !3946, file: !3, line: 600, type: !1830)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !3, line: 599, column: 5)
!3947 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 598, column: 7)
!3948 = !DILocalVariable(name: "ulp_len", scope: !3949, file: !3, line: 613, type: !1830)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 612, column: 5)
!3950 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 611, column: 7)
!3951 = !DILocation(line: 0, scope: !3935)
!3952 = !DILocation(line: 580, column: 23, scope: !3935)
!3953 = !DILocation(line: 585, column: 20, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 585, column: 7)
!3955 = !DILocation(line: 585, column: 7, scope: !3935)
!3956 = !DILocation(line: 588, column: 14, scope: !3935)
!3957 = !DILocation(line: 589, column: 17, scope: !3935)
!3958 = !DILocation(line: 598, column: 7, scope: !3947)
!3959 = !DILocation(line: 598, column: 19, scope: !3947)
!3960 = !DILocation(line: 598, column: 7, scope: !3935)
!3961 = !DILocation(line: 600, column: 32, scope: !3946)
!3962 = !DILocation(line: 600, column: 24, scope: !3946)
!3963 = !DILocation(line: 0, scope: !3946)
!3964 = !DILocation(line: 602, column: 16, scope: !3946)
!3965 = !DILocation(line: 604, column: 19, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 604, column: 11)
!3967 = !DILocation(line: 604, column: 11, scope: !3946)
!3968 = !DILocation(line: 606, column: 35, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 606, column: 16)
!3970 = !DILocation(line: 606, column: 16, scope: !3969)
!3971 = !DILocation(line: 606, column: 63, scope: !3969)
!3972 = !DILocation(line: 606, column: 16, scope: !3966)
!3973 = !DILocation(line: 611, column: 7, scope: !3950)
!3974 = !DILocation(line: 611, column: 22, scope: !3950)
!3975 = !DILocation(line: 611, column: 7, scope: !3935)
!3976 = !DILocation(line: 613, column: 32, scope: !3949)
!3977 = !DILocation(line: 613, column: 24, scope: !3949)
!3978 = !DILocation(line: 0, scope: !3949)
!3979 = !DILocation(line: 615, column: 19, scope: !3949)
!3980 = !DILocation(line: 617, column: 19, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 617, column: 11)
!3982 = !DILocation(line: 617, column: 11, scope: !3949)
!3983 = !DILocation(line: 619, column: 38, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 619, column: 16)
!3985 = !DILocation(line: 619, column: 16, scope: !3984)
!3986 = !DILocation(line: 619, column: 66, scope: !3984)
!3987 = !DILocation(line: 619, column: 16, scope: !3981)
!3988 = !DILocation(line: 625, column: 8, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 625, column: 7)
!3990 = !DILocation(line: 625, column: 7, scope: !3935)
!3991 = !DILocation(line: 627, column: 10, scope: !3935)
!3992 = !DILocation(line: 627, column: 41, scope: !3935)
!3993 = !DILocation(line: 627, column: 3, scope: !3935)
!3994 = !DILocation(line: 628, column: 1, scope: !3935)
!3995 = distinct !DISubprogram(name: "decl_assembler_name_hash", scope: !3, file: !3, line: 633, type: !3996, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3998)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!1814, !2774}
!3998 = !{!3999, !4000, !4003}
!3999 = !DILocalVariable(name: "asmname", arg: 1, scope: !3995, file: !3, line: 633, type: !2774)
!4000 = !DILocalVariable(name: "decl_str", scope: !4001, file: !3, line: 637, type: !1455)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 636, column: 5)
!4002 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 635, column: 7)
!4003 = !DILocalVariable(name: "ulp_len", scope: !4001, file: !3, line: 638, type: !1830)
!4004 = !DILocation(line: 0, scope: !3995)
!4005 = !DILocation(line: 635, column: 7, scope: !4002)
!4006 = !DILocation(line: 635, column: 39, scope: !4002)
!4007 = !DILocation(line: 635, column: 7, scope: !3995)
!4008 = !DILocation(line: 637, column: 59, scope: !4001)
!4009 = !DILocation(line: 0, scope: !4001)
!4010 = !DILocation(line: 638, column: 32, scope: !4001)
!4011 = !DILocation(line: 638, column: 24, scope: !4001)
!4012 = !DILocation(line: 640, column: 19, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 640, column: 11)
!4014 = !DILocation(line: 640, column: 11, scope: !4001)
!4015 = !DILocation(line: 642, column: 35, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 642, column: 16)
!4017 = !DILocation(line: 642, column: 16, scope: !4016)
!4018 = !DILocation(line: 642, column: 63, scope: !4016)
!4019 = !DILocation(line: 643, column: 11, scope: !4016)
!4020 = !DILocation(line: 642, column: 16, scope: !4013)
!4021 = !DILocation(line: 645, column: 14, scope: !4001)
!4022 = !DILocation(line: 648, column: 10, scope: !3995)
!4023 = !DILocation(line: 648, column: 3, scope: !3995)
!4024 = !DILocation(line: 649, column: 1, scope: !3995)
!4025 = distinct !DISubprogram(name: "tree_code_size", scope: !3, file: !3, line: 655, type: !4026, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4028)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!1830, !155}
!4028 = !{!4029}
!4029 = !DILocalVariable(name: "code", arg: 1, scope: !4025, file: !3, line: 655, type: !155)
!4030 = !DILocation(line: 0, scope: !4025)
!4031 = !DILocation(line: 657, column: 11, scope: !4025)
!4032 = !DILocation(line: 657, column: 3, scope: !4025)
!4033 = !DILocation(line: 661, column: 2, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 660, column: 7)
!4035 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 658, column: 5)
!4036 = !DILocation(line: 666, column: 6, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 662, column: 4)
!4038 = !DILocation(line: 668, column: 6, scope: !4037)
!4039 = !DILocation(line: 670, column: 6, scope: !4037)
!4040 = !DILocation(line: 672, column: 6, scope: !4037)
!4041 = !DILocation(line: 674, column: 6, scope: !4037)
!4042 = !DILocation(line: 676, column: 6, scope: !4037)
!4043 = !DILocation(line: 678, column: 6, scope: !4037)
!4044 = !DILocation(line: 680, column: 6, scope: !4037)
!4045 = !DILocation(line: 682, column: 6, scope: !4037)
!4046 = !DILocation(line: 696, column: 11, scope: !4035)
!4047 = !DILocation(line: 696, column: 40, scope: !4035)
!4048 = !DILocation(line: 696, column: 8, scope: !4035)
!4049 = !DILocation(line: 695, column: 7, scope: !4035)
!4050 = !DILocation(line: 699, column: 7, scope: !4035)
!4051 = !DILocation(line: 702, column: 18, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 700, column: 2)
!4053 = !DILocation(line: 703, column: 19, scope: !4052)
!4054 = !DILocation(line: 705, column: 19, scope: !4052)
!4055 = !DILocation(line: 706, column: 19, scope: !4052)
!4056 = !DILocation(line: 708, column: 22, scope: !4052)
!4057 = !DILocation(line: 708, column: 11, scope: !4052)
!4058 = !DILocation(line: 708, column: 4, scope: !4052)
!4059 = !DILocation(line: 712, column: 7, scope: !4035)
!4060 = !DILocation(line: 714, column: 42, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 713, column: 2)
!4062 = !DILocation(line: 714, column: 24, scope: !4061)
!4063 = !DILocation(line: 718, column: 25, scope: !4061)
!4064 = !DILocation(line: 721, column: 19, scope: !4061)
!4065 = !DILocation(line: 723, column: 18, scope: !4061)
!4066 = !DILocation(line: 726, column: 15, scope: !4061)
!4067 = !DILocation(line: 727, column: 20, scope: !4061)
!4068 = !DILocation(line: 728, column: 26, scope: !4061)
!4069 = !DILocation(line: 729, column: 27, scope: !4061)
!4070 = !DILocation(line: 732, column: 22, scope: !4061)
!4071 = !DILocation(line: 732, column: 11, scope: !4061)
!4072 = !DILocation(line: 732, column: 4, scope: !4061)
!4073 = !DILocation(line: 736, column: 7, scope: !4035)
!4074 = !DILocation(line: 739, column: 5, scope: !4025)
!4075 = !DILocation(line: 741, column: 1, scope: !4025)
!4076 = distinct !DISubprogram(name: "tree_size", scope: !3, file: !3, line: 746, type: !4077, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4079)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!1830, !2774}
!4079 = !{!4080, !4081}
!4080 = !DILocalVariable(name: "node", arg: 1, scope: !4076, file: !3, line: 746, type: !2774)
!4081 = !DILocalVariable(name: "code", scope: !4076, file: !3, line: 748, type: !4082)
!4082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!4083 = !DILocation(line: 0, scope: !4076)
!4084 = !DILocation(line: 748, column: 31, scope: !4076)
!4085 = !DILocation(line: 749, column: 3, scope: !4076)
!4086 = !DILocation(line: 753, column: 10, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 750, column: 5)
!4088 = !DILocation(line: 753, column: 8, scope: !4087)
!4089 = !DILocation(line: 752, column: 7, scope: !4087)
!4090 = !DILocation(line: 757, column: 11, scope: !4087)
!4091 = !DILocation(line: 757, column: 34, scope: !4087)
!4092 = !DILocation(line: 757, column: 10, scope: !4087)
!4093 = !DILocation(line: 757, column: 39, scope: !4087)
!4094 = !DILocation(line: 757, column: 8, scope: !4087)
!4095 = !DILocation(line: 756, column: 7, scope: !4087)
!4096 = !DILocation(line: 760, column: 14, scope: !4087)
!4097 = !DILocation(line: 760, column: 77, scope: !4087)
!4098 = !DILocation(line: 760, column: 7, scope: !4087)
!4099 = !DILocation(line: 764, column: 30, scope: !4087)
!4100 = !DILocation(line: 764, column: 11, scope: !4087)
!4101 = !DILocation(line: 765, column: 10, scope: !4087)
!4102 = !DILocation(line: 764, column: 8, scope: !4087)
!4103 = !DILocation(line: 763, column: 7, scope: !4087)
!4104 = !DILocation(line: 768, column: 34, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 768, column: 11)
!4106 = !DILocation(line: 768, column: 11, scope: !4087)
!4107 = !DILocation(line: 770, column: 6, scope: !4105)
!4108 = !DILocation(line: 770, column: 5, scope: !4105)
!4109 = !DILocation(line: 770, column: 40, scope: !4105)
!4110 = !DILocation(line: 770, column: 3, scope: !4105)
!4111 = !DILocation(line: 769, column: 2, scope: !4105)
!4112 = !DILocation(line: 772, column: 9, scope: !4105)
!4113 = !DILocation(line: 772, column: 2, scope: !4105)
!4114 = !DILocation(line: 0, scope: !4087)
!4115 = !DILocation(line: 774, column: 1, scope: !4076)
!4116 = distinct !DISubprogram(name: "VEC_tree_base_embedded_size", scope: !6, file: !6, line: 182, type: !4117, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4119)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!1830, !1450}
!4119 = !{!4120}
!4120 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4116, file: !6, line: 182, type: !1450)
!4121 = !DILocation(line: 0, scope: !4116)
!4122 = !DILocation(line: 182, column: 1, scope: !4116)
!4123 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !6, file: !6, line: 182, type: !4124, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4128)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!7, !4126}
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!4128 = !{!4129}
!4129 = !DILocalVariable(name: "vec_", arg: 1, scope: !4123, file: !6, line: 182, type: !4126)
!4130 = !DILocation(line: 0, scope: !4123)
!4131 = !DILocation(line: 182, column: 1, scope: !4123)
!4132 = distinct !DISubprogram(name: "copy_node_stat", scope: !3, file: !3, line: 949, type: !3923, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4133)
!4133 = !{!4134, !4135, !4136, !4137}
!4134 = !DILocalVariable(name: "node", arg: 1, scope: !4132, file: !3, line: 949, type: !1457)
!4135 = !DILocalVariable(name: "t", scope: !4132, file: !3, line: 951, type: !1457)
!4136 = !DILocalVariable(name: "code", scope: !4132, file: !3, line: 952, type: !155)
!4137 = !DILocalVariable(name: "length", scope: !4132, file: !3, line: 953, type: !1830)
!4138 = !DILocation(line: 0, scope: !4132)
!4139 = !DILocation(line: 952, column: 25, scope: !4132)
!4140 = !DILocation(line: 955, column: 3, scope: !4132)
!4141 = !DILocation(line: 957, column: 12, scope: !4132)
!4142 = !DILocation(line: 958, column: 14, scope: !4132)
!4143 = !DILocation(line: 958, column: 7, scope: !4132)
!4144 = !DILocation(line: 959, column: 14, scope: !4132)
!4145 = !DILocation(line: 959, column: 3, scope: !4132)
!4146 = !DILocation(line: 961, column: 3, scope: !4132)
!4147 = !DILocation(line: 961, column: 18, scope: !4132)
!4148 = !DILocation(line: 962, column: 3, scope: !4132)
!4149 = !DILocation(line: 962, column: 24, scope: !4132)
!4150 = !DILocation(line: 963, column: 20, scope: !4132)
!4151 = !DILocation(line: 964, column: 24, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 964, column: 7)
!4153 = !DILocation(line: 965, column: 6, scope: !4152)
!4154 = !DILocation(line: 965, column: 27, scope: !4152)
!4155 = !DILocation(line: 965, column: 5, scope: !4152)
!4156 = !DILocation(line: 967, column: 7, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 967, column: 7)
!4158 = !DILocation(line: 967, column: 30, scope: !4157)
!4159 = !DILocation(line: 967, column: 7, scope: !4132)
!4160 = !DILocation(line: 969, column: 16, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 969, column: 11)
!4162 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 968, column: 5)
!4163 = !DILocation(line: 969, column: 11, scope: !4162)
!4164 = !DILocation(line: 970, column: 17, scope: !4161)
!4165 = !DILocation(line: 970, column: 2, scope: !4161)
!4166 = !DILocation(line: 970, column: 15, scope: !4161)
!4167 = !DILocation(line: 972, column: 30, scope: !4161)
!4168 = !DILocation(line: 972, column: 2, scope: !4161)
!4169 = !DILocation(line: 972, column: 15, scope: !4161)
!4170 = !DILocation(line: 973, column: 12, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 973, column: 11)
!4172 = !DILocation(line: 973, column: 29, scope: !4171)
!4173 = !DILocation(line: 973, column: 42, scope: !4171)
!4174 = !DILocation(line: 973, column: 62, scope: !4171)
!4175 = !DILocation(line: 974, column: 4, scope: !4171)
!4176 = !DILocation(line: 974, column: 7, scope: !4171)
!4177 = !DILocation(line: 973, column: 11, scope: !4162)
!4178 = !DILocation(line: 976, column: 4, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4171, file: !3, line: 975, column: 2)
!4180 = !DILocation(line: 977, column: 4, scope: !4179)
!4181 = !DILocation(line: 977, column: 30, scope: !4179)
!4182 = !DILocation(line: 979, column: 11, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 979, column: 11)
!4184 = !DILocation(line: 978, column: 2, scope: !4179)
!4185 = !DILocation(line: 979, column: 28, scope: !4183)
!4186 = !DILocation(line: 979, column: 40, scope: !4183)
!4187 = !DILocation(line: 979, column: 43, scope: !4183)
!4188 = !DILocation(line: 979, column: 11, scope: !4162)
!4189 = !DILocation(line: 981, column: 4, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 980, column: 2)
!4191 = !DILocation(line: 982, column: 4, scope: !4190)
!4192 = !DILocation(line: 982, column: 33, scope: !4190)
!4193 = !DILocation(line: 983, column: 2, scope: !4190)
!4194 = !DILocation(line: 985, column: 35, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 985, column: 12)
!4196 = !DILocation(line: 985, column: 12, scope: !4157)
!4197 = !DILocation(line: 987, column: 35, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 986, column: 5)
!4199 = !DILocation(line: 987, column: 7, scope: !4198)
!4200 = !DILocation(line: 987, column: 20, scope: !4198)
!4201 = !DILocation(line: 993, column: 7, scope: !4198)
!4202 = !DILocation(line: 993, column: 31, scope: !4198)
!4203 = !DILocation(line: 994, column: 7, scope: !4198)
!4204 = !DILocation(line: 994, column: 31, scope: !4198)
!4205 = !DILocation(line: 997, column: 11, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 997, column: 11)
!4207 = !DILocation(line: 997, column: 11, scope: !4198)
!4208 = !DILocation(line: 999, column: 29, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 998, column: 2)
!4210 = !DILocation(line: 1000, column: 4, scope: !4209)
!4211 = !DILocation(line: 1000, column: 27, scope: !4209)
!4212 = !DILocation(line: 1001, column: 2, scope: !4209)
!4213 = !DILocation(line: 1004, column: 3, scope: !4132)
!4214 = distinct !DISubprogram(name: "decl_value_expr_insert", scope: !3, file: !3, line: 5748, type: !4215, scopeLine: 5749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4217)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{null, !1457, !1457}
!4217 = !{!4218, !4219, !4220, !4221}
!4218 = !DILocalVariable(name: "from", arg: 1, scope: !4214, file: !3, line: 5748, type: !1457)
!4219 = !DILocalVariable(name: "to", arg: 2, scope: !4214, file: !3, line: 5748, type: !1457)
!4220 = !DILocalVariable(name: "h", scope: !4214, file: !3, line: 5750, type: !2767)
!4221 = !DILocalVariable(name: "loc", scope: !4214, file: !3, line: 5751, type: !1828)
!4222 = !DILocation(line: 0, scope: !4214)
!4223 = !DILocation(line: 5753, column: 7, scope: !4214)
!4224 = !DILocation(line: 5754, column: 13, scope: !4214)
!4225 = !DILocation(line: 5754, column: 32, scope: !4214)
!4226 = !DILocation(line: 5754, column: 6, scope: !4214)
!4227 = !DILocation(line: 5754, column: 11, scope: !4214)
!4228 = !DILocation(line: 5755, column: 11, scope: !4214)
!4229 = !DILocation(line: 5755, column: 16, scope: !4214)
!4230 = !DILocation(line: 5756, column: 6, scope: !4214)
!4231 = !DILocation(line: 5756, column: 9, scope: !4214)
!4232 = !DILocation(line: 5757, column: 35, scope: !4214)
!4233 = !DILocation(line: 5757, column: 9, scope: !4214)
!4234 = !DILocation(line: 5758, column: 29, scope: !4214)
!4235 = !DILocation(line: 5759, column: 1, scope: !4214)
!4236 = distinct !DISubprogram(name: "decl_value_expr_lookup", scope: !3, file: !3, line: 5733, type: !3923, scopeLine: 5734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4237)
!4237 = !{!4238, !4239, !4240}
!4238 = !DILocalVariable(name: "from", arg: 1, scope: !4236, file: !3, line: 5733, type: !1457)
!4239 = !DILocalVariable(name: "h", scope: !4236, file: !3, line: 5735, type: !2767)
!4240 = !DILocalVariable(name: "in", scope: !4236, file: !3, line: 5735, type: !2755)
!4241 = !DILocation(line: 0, scope: !4236)
!4242 = !DILocation(line: 5735, column: 3, scope: !4236)
!4243 = !DILocation(line: 5736, column: 11, scope: !4236)
!4244 = !DILocation(line: 5736, column: 16, scope: !4236)
!4245 = !DILocation(line: 5738, column: 48, scope: !4236)
!4246 = !DILocation(line: 5739, column: 13, scope: !4236)
!4247 = !DILocation(line: 5739, column: 32, scope: !4236)
!4248 = !DILocation(line: 5738, column: 27, scope: !4236)
!4249 = !DILocation(line: 5740, column: 7, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 5740, column: 7)
!4251 = !DILocation(line: 5740, column: 7, scope: !4236)
!4252 = !DILocation(line: 5741, column: 15, scope: !4250)
!4253 = !DILocation(line: 5741, column: 5, scope: !4250)
!4254 = !DILocation(line: 5743, column: 1, scope: !4236)
!4255 = distinct !DISubprogram(name: "decl_init_priority_insert", scope: !3, file: !3, line: 5656, type: !4256, scopeLine: 5657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4258)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{null, !1457, !2765}
!4258 = !{!4259, !4260, !4261}
!4259 = !DILocalVariable(name: "decl", arg: 1, scope: !4255, file: !3, line: 5656, type: !1457)
!4260 = !DILocalVariable(name: "priority", arg: 2, scope: !4255, file: !3, line: 5656, type: !2765)
!4261 = !DILocalVariable(name: "h", scope: !4255, file: !3, line: 5658, type: !2760)
!4262 = !DILocation(line: 0, scope: !4255)
!4263 = !DILocation(line: 5660, column: 3, scope: !4255)
!4264 = !DILocation(line: 5661, column: 7, scope: !4255)
!4265 = !DILocation(line: 5662, column: 6, scope: !4255)
!4266 = !DILocation(line: 5662, column: 11, scope: !4255)
!4267 = !DILocation(line: 5663, column: 1, scope: !4255)
!4268 = distinct !DISubprogram(name: "decl_init_priority_lookup", scope: !3, file: !3, line: 5602, type: !4269, scopeLine: 5603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4271)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!2765, !1457}
!4271 = !{!4272, !4273, !4274}
!4272 = !DILocalVariable(name: "decl", arg: 1, scope: !4268, file: !3, line: 5602, type: !1457)
!4273 = !DILocalVariable(name: "h", scope: !4268, file: !3, line: 5604, type: !2760)
!4274 = !DILocalVariable(name: "in", scope: !4268, file: !3, line: 5605, type: !2750)
!4275 = !DILocation(line: 0, scope: !4268)
!4276 = !DILocation(line: 5605, column: 3, scope: !4268)
!4277 = !DILocation(line: 5607, column: 3, scope: !4268)
!4278 = !DILocation(line: 5608, column: 6, scope: !4268)
!4279 = !DILocation(line: 5608, column: 11, scope: !4268)
!4280 = !DILocation(line: 5609, column: 47, scope: !4268)
!4281 = !DILocation(line: 5609, column: 36, scope: !4268)
!4282 = !DILocation(line: 5610, column: 10, scope: !4268)
!4283 = !DILocation(line: 5610, column: 17, scope: !4268)
!4284 = !DILocation(line: 5611, column: 1, scope: !4268)
!4285 = !DILocation(line: 5610, column: 3, scope: !4268)
!4286 = distinct !DISubprogram(name: "copy_list", scope: !3, file: !3, line: 1011, type: !3923, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4287)
!4287 = !{!4288, !4289, !4290, !4291}
!4288 = !DILocalVariable(name: "list", arg: 1, scope: !4286, file: !3, line: 1011, type: !1457)
!4289 = !DILocalVariable(name: "head", scope: !4286, file: !3, line: 1013, type: !1457)
!4290 = !DILocalVariable(name: "prev", scope: !4286, file: !3, line: 1014, type: !1457)
!4291 = !DILocalVariable(name: "next", scope: !4286, file: !3, line: 1014, type: !1457)
!4292 = !DILocation(line: 0, scope: !4286)
!4293 = !DILocation(line: 1016, column: 12, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 1016, column: 7)
!4295 = !DILocation(line: 1016, column: 7, scope: !4286)
!4296 = !DILocation(line: 1019, column: 17, scope: !4286)
!4297 = !DILocation(line: 1021, column: 3, scope: !4286)
!4298 = !DILocation(line: 1023, column: 27, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 1022, column: 5)
!4300 = !DILocation(line: 1023, column: 7, scope: !4299)
!4301 = !DILocation(line: 1023, column: 25, scope: !4299)
!4302 = distinct !{!4302, !4297, !4303}
!4303 = !DILocation(line: 1026, column: 5, scope: !4286)
!4304 = !DILocation(line: 1028, column: 1, scope: !4286)
!4305 = distinct !DISubprogram(name: "build_int_cst", scope: !3, file: !3, line: 1034, type: !4306, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4308)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!1457, !1457, !1513}
!4308 = !{!4309, !4310}
!4309 = !DILocalVariable(name: "type", arg: 1, scope: !4305, file: !3, line: 1034, type: !1457)
!4310 = !DILocalVariable(name: "low", arg: 2, scope: !4305, file: !3, line: 1034, type: !1513)
!4311 = !DILocation(line: 0, scope: !4305)
!4312 = !DILocation(line: 1037, column: 8, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 1037, column: 7)
!4314 = !DILocation(line: 1038, column: 12, scope: !4313)
!4315 = !DILocation(line: 1037, column: 7, scope: !4305)
!4316 = !DILocation(line: 1040, column: 41, scope: !4305)
!4317 = !DILocation(line: 1040, column: 10, scope: !4305)
!4318 = !DILocation(line: 1040, column: 3, scope: !4305)
!4319 = distinct !DISubprogram(name: "build_int_cst_wide", scope: !3, file: !3, line: 1117, type: !4320, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4322)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!1457, !1457, !1511, !1513}
!4322 = !{!4323, !4324, !4325, !4326, !4327, !4328, !4329}
!4323 = !DILocalVariable(name: "type", arg: 1, scope: !4319, file: !3, line: 1117, type: !1457)
!4324 = !DILocalVariable(name: "low", arg: 2, scope: !4319, file: !3, line: 1117, type: !1511)
!4325 = !DILocalVariable(name: "hi", arg: 3, scope: !4319, file: !3, line: 1117, type: !1513)
!4326 = !DILocalVariable(name: "t", scope: !4319, file: !3, line: 1119, type: !1457)
!4327 = !DILocalVariable(name: "ix", scope: !4319, file: !3, line: 1120, type: !1450)
!4328 = !DILocalVariable(name: "limit", scope: !4319, file: !3, line: 1121, type: !1450)
!4329 = !DILocalVariable(name: "slot", scope: !4330, file: !3, line: 1203, type: !1828)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 1201, column: 5)
!4331 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 1171, column: 7)
!4332 = !DILocation(line: 0, scope: !4319)
!4333 = !DILocation(line: 1123, column: 3, scope: !4319)
!4334 = !DILocation(line: 1125, column: 11, scope: !4319)
!4335 = !DILocation(line: 1125, column: 3, scope: !4319)
!4336 = !DILocation(line: 1130, column: 15, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1130, column: 11)
!4338 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 1126, column: 5)
!4339 = !DILocation(line: 1140, column: 12, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1140, column: 11)
!4341 = !DILocation(line: 1140, column: 22, scope: !4340)
!4342 = !DILocation(line: 1140, column: 15, scope: !4340)
!4343 = !DILocation(line: 1146, column: 11, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1146, column: 11)
!4345 = !DILocation(line: 0, scope: !4344)
!4346 = !DILocation(line: 1146, column: 11, scope: !4338)
!4347 = !DILocation(line: 1150, column: 9, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 1150, column: 8)
!4349 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 1147, column: 2)
!4350 = !DILocation(line: 1150, column: 12, scope: !4348)
!4351 = !DILocation(line: 1150, column: 21, scope: !4348)
!4352 = !DILocation(line: 1150, column: 19, scope: !4348)
!4353 = !DILocation(line: 1151, column: 11, scope: !4348)
!4354 = !DILocation(line: 1150, column: 8, scope: !4349)
!4355 = !DILocation(line: 1156, column: 32, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 1154, column: 2)
!4357 = !DILocation(line: 1157, column: 12, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 1157, column: 8)
!4359 = !DILocation(line: 1157, column: 21, scope: !4358)
!4360 = !DILocation(line: 1157, column: 19, scope: !4358)
!4361 = !DILocation(line: 1157, column: 8, scope: !4356)
!4362 = !DILocation(line: 1158, column: 11, scope: !4358)
!4363 = !DILocation(line: 1158, column: 6, scope: !4358)
!4364 = !DILocation(line: 1159, column: 22, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 1159, column: 13)
!4366 = !DILocation(line: 1159, column: 29, scope: !4365)
!4367 = !DILocation(line: 1159, column: 13, scope: !4358)
!4368 = !DILocation(line: 1160, column: 6, scope: !4365)
!4369 = !DILocation(line: 1168, column: 7, scope: !4338)
!4370 = !DILocation(line: 1169, column: 5, scope: !4338)
!4371 = !DILocation(line: 1120, column: 7, scope: !4319)
!4372 = !DILocation(line: 1171, column: 10, scope: !4331)
!4373 = !DILocation(line: 1171, column: 7, scope: !4319)
!4374 = !DILocation(line: 1174, column: 12, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 1174, column: 11)
!4376 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 1172, column: 5)
!4377 = !DILocation(line: 1174, column: 11, scope: !4376)
!4378 = !DILocation(line: 0, scope: !4376)
!4379 = !DILocation(line: 1180, column: 11, scope: !4376)
!4380 = !DILocation(line: 1176, column: 32, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1175, column: 2)
!4382 = !DILocation(line: 1177, column: 32, scope: !4381)
!4383 = !DILocation(line: 1177, column: 4, scope: !4381)
!4384 = !DILocation(line: 1177, column: 30, scope: !4381)
!4385 = !DILocation(line: 1178, column: 2, scope: !4381)
!4386 = !DILocation(line: 1181, column: 11, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 1181, column: 11)
!4388 = !DILocation(line: 1181, column: 11, scope: !4376)
!4389 = !DILocation(line: 1184, column: 4, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 1182, column: 2)
!4391 = !DILocation(line: 1185, column: 4, scope: !4390)
!4392 = !DILocation(line: 1186, column: 4, scope: !4390)
!4393 = !DILocation(line: 1191, column: 8, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 1189, column: 2)
!4395 = !DILocation(line: 1193, column: 4, scope: !4394)
!4396 = !DILocation(line: 1193, column: 25, scope: !4394)
!4397 = !DILocation(line: 1194, column: 4, scope: !4394)
!4398 = !DILocation(line: 1194, column: 26, scope: !4394)
!4399 = !DILocation(line: 1195, column: 4, scope: !4394)
!4400 = !DILocation(line: 1195, column: 18, scope: !4394)
!4401 = !DILocation(line: 1197, column: 4, scope: !4394)
!4402 = !DILocation(line: 1197, column: 49, scope: !4394)
!4403 = !DILocation(line: 1205, column: 7, scope: !4330)
!4404 = !DILocation(line: 1205, column: 39, scope: !4330)
!4405 = !DILocation(line: 1206, column: 7, scope: !4330)
!4406 = !DILocation(line: 1206, column: 40, scope: !4330)
!4407 = !DILocation(line: 1207, column: 7, scope: !4330)
!4408 = !DILocation(line: 1207, column: 32, scope: !4330)
!4409 = !DILocation(line: 1209, column: 30, scope: !4330)
!4410 = !DILocation(line: 1209, column: 50, scope: !4330)
!4411 = !DILocation(line: 1209, column: 14, scope: !4330)
!4412 = !DILocation(line: 0, scope: !4330)
!4413 = !DILocation(line: 1210, column: 18, scope: !4330)
!4414 = !DILocation(line: 1211, column: 12, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 1211, column: 11)
!4416 = !DILocation(line: 1211, column: 11, scope: !4330)
!4417 = !DILocation(line: 1214, column: 8, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1212, column: 2)
!4419 = !DILocation(line: 1215, column: 10, scope: !4418)
!4420 = !DILocation(line: 1217, column: 19, scope: !4418)
!4421 = !DILocation(line: 1217, column: 17, scope: !4418)
!4422 = !DILocation(line: 1218, column: 2, scope: !4418)
!4423 = !DILocation(line: 0, scope: !4331)
!4424 = !DILocation(line: 1221, column: 3, scope: !4319)
!4425 = distinct !DISubprogram(name: "build_int_cstu", scope: !3, file: !3, line: 1046, type: !4426, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4428)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!1457, !1457, !1511}
!4428 = !{!4429, !4430}
!4429 = !DILocalVariable(name: "type", arg: 1, scope: !4425, file: !3, line: 1046, type: !1457)
!4430 = !DILocalVariable(name: "low", arg: 2, scope: !4425, file: !3, line: 1046, type: !1511)
!4431 = !DILocation(line: 0, scope: !4425)
!4432 = !DILocation(line: 1048, column: 10, scope: !4425)
!4433 = !DILocation(line: 1048, column: 3, scope: !4425)
!4434 = distinct !DISubprogram(name: "build_int_cst_type", scope: !3, file: !3, line: 1061, type: !4306, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4435)
!4435 = !{!4436, !4437, !4438, !4439}
!4436 = !DILocalVariable(name: "type", arg: 1, scope: !4434, file: !3, line: 1061, type: !1457)
!4437 = !DILocalVariable(name: "low", arg: 2, scope: !4434, file: !3, line: 1061, type: !1513)
!4438 = !DILocalVariable(name: "low1", scope: !4434, file: !3, line: 1063, type: !1511)
!4439 = !DILocalVariable(name: "hi", scope: !4434, file: !3, line: 1064, type: !1513)
!4440 = !DILocation(line: 0, scope: !4434)
!4441 = !DILocation(line: 1063, column: 3, scope: !4434)
!4442 = !DILocation(line: 1064, column: 3, scope: !4434)
!4443 = !DILocation(line: 1066, column: 3, scope: !4434)
!4444 = !DILocation(line: 1068, column: 25, scope: !4434)
!4445 = !DILocation(line: 1068, column: 3, scope: !4434)
!4446 = !DILocation(line: 1070, column: 36, scope: !4434)
!4447 = !DILocation(line: 1070, column: 42, scope: !4434)
!4448 = !DILocation(line: 1070, column: 10, scope: !4434)
!4449 = !DILocation(line: 1071, column: 1, scope: !4434)
!4450 = !DILocation(line: 1070, column: 3, scope: !4434)
!4451 = distinct !DISubprogram(name: "build_int_cst_wide_type", scope: !3, file: !3, line: 1077, type: !4320, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4452)
!4452 = !{!4453, !4454, !4455}
!4453 = !DILocalVariable(name: "type", arg: 1, scope: !4451, file: !3, line: 1077, type: !1457)
!4454 = !DILocalVariable(name: "low", arg: 2, scope: !4451, file: !3, line: 1078, type: !1511)
!4455 = !DILocalVariable(name: "high", arg: 3, scope: !4451, file: !3, line: 1078, type: !1513)
!4456 = !DILocation(line: 0, scope: !4451)
!4457 = !DILocation(line: 1080, column: 3, scope: !4451)
!4458 = !DILocation(line: 1081, column: 36, scope: !4451)
!4459 = !DILocation(line: 1081, column: 41, scope: !4451)
!4460 = !DILocation(line: 1081, column: 10, scope: !4451)
!4461 = !DILocation(line: 1081, column: 3, scope: !4451)
!4462 = distinct !DISubprogram(name: "make_tree_vec_stat", scope: !3, file: !3, line: 1574, type: !4463, scopeLine: 1575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4465)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{!1457, !1450}
!4465 = !{!4466, !4467, !4468}
!4466 = !DILocalVariable(name: "len", arg: 1, scope: !4462, file: !3, line: 1574, type: !1450)
!4467 = !DILocalVariable(name: "t", scope: !4462, file: !3, line: 1576, type: !1457)
!4468 = !DILocalVariable(name: "length", scope: !4462, file: !3, line: 1577, type: !1450)
!4469 = !DILocation(line: 0, scope: !4462)
!4470 = !DILocation(line: 1577, column: 26, scope: !4462)
!4471 = !DILocation(line: 1577, column: 42, scope: !4462)
!4472 = !DILocation(line: 1584, column: 14, scope: !4462)
!4473 = !DILocation(line: 1584, column: 7, scope: !4462)
!4474 = !DILocation(line: 1586, column: 3, scope: !4462)
!4475 = !DILocation(line: 1588, column: 3, scope: !4462)
!4476 = !DILocation(line: 1589, column: 3, scope: !4462)
!4477 = !DILocation(line: 1589, column: 23, scope: !4462)
!4478 = !DILocation(line: 1591, column: 3, scope: !4462)
!4479 = distinct !DISubprogram(name: "build_low_bits_mask", scope: !3, file: !3, line: 1228, type: !4480, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4482)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!1457, !1457, !7}
!4482 = !{!4483, !4484, !4485, !4486, !4487}
!4483 = !DILocalVariable(name: "type", arg: 1, scope: !4479, file: !3, line: 1228, type: !1457)
!4484 = !DILocalVariable(name: "bits", arg: 2, scope: !4479, file: !3, line: 1228, type: !7)
!4485 = !DILocalVariable(name: "low", scope: !4479, file: !3, line: 1230, type: !1511)
!4486 = !DILocalVariable(name: "high", scope: !4479, file: !3, line: 1231, type: !1513)
!4487 = !DILocalVariable(name: "all_ones", scope: !4479, file: !3, line: 1232, type: !1511)
!4488 = !DILocation(line: 0, scope: !4479)
!4489 = !DILocation(line: 1234, column: 3, scope: !4479)
!4490 = !DILocation(line: 1236, column: 15, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 1236, column: 7)
!4492 = !DILocation(line: 1236, column: 12, scope: !4491)
!4493 = !DILocation(line: 1237, column: 7, scope: !4491)
!4494 = !DILocation(line: 1237, column: 11, scope: !4491)
!4495 = !DILocation(line: 1236, column: 7, scope: !4479)
!4496 = !DILocation(line: 1243, column: 17, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 1243, column: 12)
!4498 = !DILocation(line: 1243, column: 12, scope: !4491)
!4499 = !DILocation(line: 1245, column: 49, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1244, column: 5)
!4501 = !DILocation(line: 1245, column: 22, scope: !4500)
!4502 = !DILocation(line: 1247, column: 5, scope: !4500)
!4503 = !DILocation(line: 1252, column: 50, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1249, column: 5)
!4505 = !DILocation(line: 1252, column: 23, scope: !4504)
!4506 = !DILocation(line: 0, scope: !4491)
!4507 = !DILocation(line: 1255, column: 10, scope: !4479)
!4508 = !DILocation(line: 1255, column: 3, scope: !4479)
!4509 = distinct !DISubprogram(name: "cst_and_fits_in_hwi", scope: !3, file: !3, line: 1262, type: !4510, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4512)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!1449, !2774}
!4512 = !{!4513}
!4513 = !DILocalVariable(name: "x", arg: 1, scope: !4509, file: !3, line: 1262, type: !2774)
!4514 = !DILocation(line: 0, scope: !4509)
!4515 = !DILocation(line: 1264, column: 7, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1264, column: 7)
!4517 = !DILocation(line: 1264, column: 21, scope: !4516)
!4518 = !DILocation(line: 1264, column: 7, scope: !4509)
!4519 = !DILocation(line: 1267, column: 7, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1267, column: 7)
!4521 = !DILocation(line: 1267, column: 38, scope: !4520)
!4522 = !DILocation(line: 1267, column: 7, scope: !4509)
!4523 = !DILocation(line: 1270, column: 11, scope: !4509)
!4524 = !DILocation(line: 1270, column: 33, scope: !4509)
!4525 = !DILocation(line: 1271, column: 4, scope: !4509)
!4526 = !DILocation(line: 1271, column: 29, scope: !4509)
!4527 = !DILocation(line: 1270, column: 3, scope: !4509)
!4528 = !DILocation(line: 1272, column: 1, scope: !4509)
!4529 = distinct !DISubprogram(name: "build_vector", scope: !3, file: !3, line: 1278, type: !4530, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4532)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!1457, !1457, !1457}
!4532 = !{!4533, !4534, !4535, !4536, !4537, !4538}
!4533 = !DILocalVariable(name: "type", arg: 1, scope: !4529, file: !3, line: 1278, type: !1457)
!4534 = !DILocalVariable(name: "vals", arg: 2, scope: !4529, file: !3, line: 1278, type: !1457)
!4535 = !DILocalVariable(name: "v", scope: !4529, file: !3, line: 1280, type: !1457)
!4536 = !DILocalVariable(name: "over", scope: !4529, file: !3, line: 1281, type: !1450)
!4537 = !DILocalVariable(name: "link", scope: !4529, file: !3, line: 1282, type: !1457)
!4538 = !DILocalVariable(name: "value", scope: !4539, file: !3, line: 1290, type: !1457)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 1289, column: 5)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 1288, column: 3)
!4541 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 1288, column: 3)
!4542 = !DILocation(line: 0, scope: !4529)
!4543 = !DILocation(line: 1280, column: 12, scope: !4529)
!4544 = !DILocation(line: 1284, column: 3, scope: !4529)
!4545 = !DILocation(line: 1284, column: 28, scope: !4529)
!4546 = !DILocation(line: 1285, column: 3, scope: !4529)
!4547 = !DILocation(line: 1285, column: 17, scope: !4529)
!4548 = !DILocation(line: 1288, column: 8, scope: !4541)
!4549 = !DILocation(line: 0, scope: !4541)
!4550 = !DILocation(line: 1288, column: 3, scope: !4541)
!4551 = !DILocation(line: 1290, column: 20, scope: !4539)
!4552 = !DILocation(line: 0, scope: !4539)
!4553 = !DILocation(line: 1293, column: 12, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 1293, column: 11)
!4555 = !DILocation(line: 1293, column: 11, scope: !4539)
!4556 = !DILocation(line: 1296, column: 15, scope: !4539)
!4557 = !DILocation(line: 1296, column: 12, scope: !4539)
!4558 = !DILocation(line: 1297, column: 5, scope: !4540)
!4559 = !DILocation(line: 1288, column: 34, scope: !4540)
!4560 = !DILocation(line: 1288, column: 3, scope: !4540)
!4561 = distinct !{!4561, !4550, !4562}
!4562 = !DILocation(line: 1297, column: 5, scope: !4541)
!4563 = !DILocation(line: 1299, column: 3, scope: !4529)
!4564 = !DILocation(line: 1299, column: 21, scope: !4529)
!4565 = !DILocation(line: 1300, column: 3, scope: !4529)
!4566 = distinct !DISubprogram(name: "build_vector_from_ctor", scope: !3, file: !3, line: 1307, type: !4567, scopeLine: 1308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4569)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!1457, !1457, !2523}
!4569 = !{!4570, !4571, !4572, !4573, !4574}
!4570 = !DILocalVariable(name: "type", arg: 1, scope: !4566, file: !3, line: 1307, type: !1457)
!4571 = !DILocalVariable(name: "v", arg: 2, scope: !4566, file: !3, line: 1307, type: !2523)
!4572 = !DILocalVariable(name: "list", scope: !4566, file: !3, line: 1309, type: !1457)
!4573 = !DILocalVariable(name: "idx", scope: !4566, file: !3, line: 1310, type: !1511)
!4574 = !DILocalVariable(name: "value", scope: !4566, file: !3, line: 1311, type: !1457)
!4575 = !DILocation(line: 0, scope: !4566)
!4576 = !DILocation(line: 0, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 1313, column: 3)
!4578 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 1313, column: 3)
!4579 = !DILocation(line: 1313, column: 3, scope: !4578)
!4580 = !DILocation(line: 0, scope: !4578)
!4581 = !DILocation(line: 1313, column: 3, scope: !4577)
!4582 = !DILocation(line: 1314, column: 12, scope: !4577)
!4583 = distinct !{!4583, !4579, !4584}
!4584 = !DILocation(line: 1314, column: 12, scope: !4578)
!4585 = !DILocation(line: 1315, column: 30, scope: !4566)
!4586 = !DILocation(line: 1315, column: 10, scope: !4566)
!4587 = !DILocation(line: 1315, column: 3, scope: !4566)
!4588 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !6, file: !6, line: 1537, type: !4589, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4593)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{!7, !4591}
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2528)
!4593 = !{!4594}
!4594 = !DILocalVariable(name: "vec_", arg: 1, scope: !4588, file: !6, line: 1537, type: !4591)
!4595 = !DILocation(line: 0, scope: !4588)
!4596 = !DILocation(line: 1537, column: 1, scope: !4588)
!4597 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !6, file: !6, line: 1537, type: !4598, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4602)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{!4600, !4601, !7}
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!4602 = !{!4603, !4604}
!4603 = !DILocalVariable(name: "vec_", arg: 1, scope: !4597, file: !6, line: 1537, type: !4601)
!4604 = !DILocalVariable(name: "ix_", arg: 2, scope: !4597, file: !6, line: 1537, type: !7)
!4605 = !DILocation(line: 0, scope: !4597)
!4606 = !DILocation(line: 1537, column: 1, scope: !4597)
!4607 = distinct !DISubprogram(name: "tree_cons_stat", scope: !3, file: !3, line: 2098, type: !4608, scopeLine: 2099, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4610)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{!1457, !1457, !1457, !1457}
!4610 = !{!4611, !4612, !4613, !4614}
!4611 = !DILocalVariable(name: "purpose", arg: 1, scope: !4607, file: !3, line: 2098, type: !1457)
!4612 = !DILocalVariable(name: "value", arg: 2, scope: !4607, file: !3, line: 2098, type: !1457)
!4613 = !DILocalVariable(name: "chain", arg: 3, scope: !4607, file: !3, line: 2098, type: !1457)
!4614 = !DILocalVariable(name: "node", scope: !4607, file: !3, line: 2100, type: !1457)
!4615 = !DILocation(line: 0, scope: !4607)
!4616 = !DILocation(line: 2102, column: 17, scope: !4607)
!4617 = !DILocation(line: 2102, column: 10, scope: !4607)
!4618 = !DILocation(line: 2104, column: 3, scope: !4607)
!4619 = !DILocation(line: 2111, column: 3, scope: !4607)
!4620 = !DILocation(line: 2112, column: 3, scope: !4607)
!4621 = !DILocation(line: 2112, column: 21, scope: !4607)
!4622 = !DILocation(line: 2113, column: 3, scope: !4607)
!4623 = !DILocation(line: 2113, column: 23, scope: !4607)
!4624 = !DILocation(line: 2114, column: 3, scope: !4607)
!4625 = !DILocation(line: 2114, column: 21, scope: !4607)
!4626 = !DILocation(line: 2115, column: 3, scope: !4607)
!4627 = distinct !DISubprogram(name: "nreverse", scope: !3, file: !3, line: 2052, type: !3923, scopeLine: 2053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4628)
!4628 = !{!4629, !4630, !4631, !4632}
!4629 = !DILocalVariable(name: "t", arg: 1, scope: !4627, file: !3, line: 2052, type: !1457)
!4630 = !DILocalVariable(name: "prev", scope: !4627, file: !3, line: 2054, type: !1457)
!4631 = !DILocalVariable(name: "decl", scope: !4627, file: !3, line: 2054, type: !1457)
!4632 = !DILocalVariable(name: "next", scope: !4627, file: !3, line: 2054, type: !1457)
!4633 = !DILocation(line: 0, scope: !4627)
!4634 = !DILocation(line: 2055, column: 8, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 2055, column: 3)
!4636 = !DILocation(line: 0, scope: !4635)
!4637 = !DILocation(line: 2055, column: 3, scope: !4635)
!4638 = !DILocation(line: 2057, column: 14, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 2056, column: 5)
!4640 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 2055, column: 3)
!4641 = !DILocation(line: 2058, column: 25, scope: !4639)
!4642 = !DILocation(line: 2055, column: 3, scope: !4640)
!4643 = distinct !{!4643, !4637, !4644}
!4644 = !DILocation(line: 2060, column: 5, scope: !4635)
!4645 = !DILocation(line: 2061, column: 3, scope: !4627)
!4646 = distinct !DISubprogram(name: "build_constructor", scope: !3, file: !3, line: 1321, type: !4567, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4647)
!4647 = !{!4648, !4649, !4650}
!4648 = !DILocalVariable(name: "type", arg: 1, scope: !4646, file: !3, line: 1321, type: !1457)
!4649 = !DILocalVariable(name: "vals", arg: 2, scope: !4646, file: !3, line: 1321, type: !2523)
!4650 = !DILocalVariable(name: "c", scope: !4646, file: !3, line: 1323, type: !1457)
!4651 = !DILocation(line: 0, scope: !4646)
!4652 = !DILocation(line: 1323, column: 12, scope: !4646)
!4653 = !DILocation(line: 1324, column: 3, scope: !4646)
!4654 = !DILocation(line: 1324, column: 17, scope: !4646)
!4655 = !DILocation(line: 1325, column: 3, scope: !4646)
!4656 = !DILocation(line: 1325, column: 24, scope: !4646)
!4657 = !DILocation(line: 1326, column: 3, scope: !4646)
!4658 = distinct !DISubprogram(name: "build_constructor_single", scope: !3, file: !3, line: 1332, type: !4608, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4659)
!4659 = !{!4660, !4661, !4662, !4663, !4664, !4665}
!4660 = !DILocalVariable(name: "type", arg: 1, scope: !4658, file: !3, line: 1332, type: !1457)
!4661 = !DILocalVariable(name: "index", arg: 2, scope: !4658, file: !3, line: 1332, type: !1457)
!4662 = !DILocalVariable(name: "value", arg: 3, scope: !4658, file: !3, line: 1332, type: !1457)
!4663 = !DILocalVariable(name: "v", scope: !4658, file: !3, line: 1334, type: !2523)
!4664 = !DILocalVariable(name: "elt", scope: !4658, file: !3, line: 1335, type: !4600)
!4665 = !DILocalVariable(name: "t", scope: !4658, file: !3, line: 1336, type: !1457)
!4666 = !DILocation(line: 0, scope: !4658)
!4667 = !DILocation(line: 1338, column: 7, scope: !4658)
!4668 = !DILocation(line: 1339, column: 9, scope: !4658)
!4669 = !DILocation(line: 1340, column: 8, scope: !4658)
!4670 = !DILocation(line: 1340, column: 14, scope: !4658)
!4671 = !DILocation(line: 1341, column: 8, scope: !4658)
!4672 = !DILocation(line: 1341, column: 14, scope: !4658)
!4673 = !DILocation(line: 1343, column: 7, scope: !4658)
!4674 = !DILocation(line: 1344, column: 23, scope: !4658)
!4675 = !DILocation(line: 1344, column: 3, scope: !4658)
!4676 = !DILocation(line: 1344, column: 21, scope: !4658)
!4677 = !DILocation(line: 1345, column: 3, scope: !4658)
!4678 = distinct !DISubprogram(name: "VEC_constructor_elt_gc_alloc", scope: !6, file: !6, line: 1538, type: !4679, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4681)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!2523, !1450}
!4681 = !{!4682}
!4682 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4678, file: !6, line: 1538, type: !1450)
!4683 = !DILocation(line: 0, scope: !4678)
!4684 = !DILocation(line: 1538, column: 1, scope: !4678)
!4685 = distinct !DISubprogram(name: "VEC_constructor_elt_base_quick_push", scope: !6, file: !6, line: 1537, type: !4686, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4690)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!4600, !4601, !4688}
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4689, size: 64)
!4689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2535)
!4690 = !{!4691, !4692, !4693}
!4691 = !DILocalVariable(name: "vec_", arg: 1, scope: !4685, file: !6, line: 1537, type: !4601)
!4692 = !DILocalVariable(name: "obj_", arg: 2, scope: !4685, file: !6, line: 1537, type: !4688)
!4693 = !DILocalVariable(name: "slot_", scope: !4685, file: !6, line: 1537, type: !4600)
!4694 = !DILocation(line: 0, scope: !4685)
!4695 = !DILocation(line: 1537, column: 1, scope: !4685)
!4696 = distinct !DISubprogram(name: "build_constructor_from_list", scope: !3, file: !3, line: 1352, type: !4530, scopeLine: 1353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4697)
!4697 = !{!4698, !4699, !4700, !4701, !4702, !4703, !4704}
!4698 = !DILocalVariable(name: "type", arg: 1, scope: !4696, file: !3, line: 1352, type: !1457)
!4699 = !DILocalVariable(name: "vals", arg: 2, scope: !4696, file: !3, line: 1352, type: !1457)
!4700 = !DILocalVariable(name: "t", scope: !4696, file: !3, line: 1354, type: !1457)
!4701 = !DILocalVariable(name: "val", scope: !4696, file: !3, line: 1354, type: !1457)
!4702 = !DILocalVariable(name: "v", scope: !4696, file: !3, line: 1355, type: !2523)
!4703 = !DILocalVariable(name: "constant_p", scope: !4696, file: !3, line: 1356, type: !1449)
!4704 = !DILocalVariable(name: "elt", scope: !4705, file: !3, line: 1363, type: !4600)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1362, column: 2)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 1361, column: 7)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1361, column: 7)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 1359, column: 5)
!4709 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 1358, column: 7)
!4710 = !DILocation(line: 0, scope: !4696)
!4711 = !DILocation(line: 1358, column: 7, scope: !4709)
!4712 = !DILocation(line: 1358, column: 7, scope: !4696)
!4713 = !DILocation(line: 1360, column: 11, scope: !4708)
!4714 = !DILocation(line: 0, scope: !4705)
!4715 = !DILocation(line: 1361, column: 12, scope: !4707)
!4716 = !DILocation(line: 0, scope: !4707)
!4717 = !DILocation(line: 1356, column: 8, scope: !4696)
!4718 = !DILocation(line: 1361, column: 7, scope: !4707)
!4719 = !DILocation(line: 1363, column: 27, scope: !4705)
!4720 = !DILocation(line: 1364, column: 10, scope: !4705)
!4721 = !DILocation(line: 1365, column: 17, scope: !4705)
!4722 = !DILocation(line: 1365, column: 15, scope: !4705)
!4723 = !DILocation(line: 1366, column: 9, scope: !4705)
!4724 = !DILocation(line: 1366, column: 15, scope: !4705)
!4725 = !DILocation(line: 1367, column: 9, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1367, column: 8)
!4727 = !DILocation(line: 1367, column: 8, scope: !4705)
!4728 = !DILocation(line: 1361, column: 29, scope: !4706)
!4729 = !DILocation(line: 1361, column: 7, scope: !4706)
!4730 = distinct !{!4730, !4718, !4731}
!4731 = !DILocation(line: 1369, column: 2, scope: !4707)
!4732 = !DILocation(line: 1372, column: 7, scope: !4696)
!4733 = !DILocation(line: 1373, column: 3, scope: !4696)
!4734 = !DILocation(line: 1373, column: 21, scope: !4696)
!4735 = !DILocation(line: 1374, column: 3, scope: !4696)
!4736 = distinct !DISubprogram(name: "list_length", scope: !3, file: !3, line: 1958, type: !4737, scopeLine: 1959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4739)
!4737 = !DISubroutineType(types: !4738)
!4738 = !{!1450, !2774}
!4739 = !{!4740, !4741, !4742}
!4740 = !DILocalVariable(name: "t", arg: 1, scope: !4736, file: !3, line: 1958, type: !2774)
!4741 = !DILocalVariable(name: "p", scope: !4736, file: !3, line: 1960, type: !2774)
!4742 = !DILocalVariable(name: "len", scope: !4736, file: !3, line: 1964, type: !1450)
!4743 = !DILocation(line: 0, scope: !4736)
!4744 = !DILocation(line: 1966, column: 3, scope: !4736)
!4745 = !DILocation(line: 1968, column: 11, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 1967, column: 5)
!4747 = !DILocation(line: 1974, column: 10, scope: !4746)
!4748 = distinct !{!4748, !4744, !4749}
!4749 = !DILocation(line: 1975, column: 5, scope: !4736)
!4750 = !DILocation(line: 1977, column: 3, scope: !4736)
!4751 = distinct !DISubprogram(name: "build_fixed", scope: !3, file: !3, line: 1380, type: !4752, scopeLine: 1381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4754)
!4752 = !DISubroutineType(types: !4753)
!4753 = !{!1457, !1457, !1539}
!4754 = !{!4755, !4756, !4757, !4758}
!4755 = !DILocalVariable(name: "type", arg: 1, scope: !4751, file: !3, line: 1380, type: !1457)
!4756 = !DILocalVariable(name: "f", arg: 2, scope: !4751, file: !3, line: 1380, type: !1539)
!4757 = !DILocalVariable(name: "v", scope: !4751, file: !3, line: 1382, type: !1457)
!4758 = !DILocalVariable(name: "fp", scope: !4751, file: !3, line: 1383, type: !1538)
!4759 = !DILocation(line: 0, scope: !4751)
!4760 = !DILocation(line: 1380, column: 42, scope: !4751)
!4761 = !DILocation(line: 1385, column: 7, scope: !4751)
!4762 = !DILocation(line: 1386, column: 8, scope: !4751)
!4763 = !DILocation(line: 1387, column: 15, scope: !4751)
!4764 = !DILocation(line: 1387, column: 3, scope: !4751)
!4765 = !DILocation(line: 1389, column: 3, scope: !4751)
!4766 = !DILocation(line: 1389, column: 17, scope: !4751)
!4767 = !DILocation(line: 1390, column: 3, scope: !4751)
!4768 = !DILocation(line: 1390, column: 26, scope: !4751)
!4769 = !DILocation(line: 1391, column: 3, scope: !4751)
!4770 = distinct !DISubprogram(name: "build_real", scope: !3, file: !3, line: 1397, type: !4771, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4773)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!1457, !1457, !1520}
!4773 = !{!4774, !4775, !4776, !4777, !4778}
!4774 = !DILocalVariable(name: "type", arg: 1, scope: !4770, file: !3, line: 1397, type: !1457)
!4775 = !DILocalVariable(name: "d", arg: 2, scope: !4770, file: !3, line: 1397, type: !1520)
!4776 = !DILocalVariable(name: "v", scope: !4770, file: !3, line: 1399, type: !1457)
!4777 = !DILocalVariable(name: "dp", scope: !4770, file: !3, line: 1400, type: !1519)
!4778 = !DILocalVariable(name: "overflow", scope: !4770, file: !3, line: 1401, type: !1450)
!4779 = !DILocation(line: 0, scope: !4770)
!4780 = !DILocation(line: 1397, column: 40, scope: !4770)
!4781 = !DILocation(line: 1406, column: 7, scope: !4770)
!4782 = !DILocation(line: 1407, column: 8, scope: !4770)
!4783 = !DILocation(line: 1408, column: 15, scope: !4770)
!4784 = !DILocation(line: 1408, column: 3, scope: !4770)
!4785 = !DILocation(line: 1410, column: 3, scope: !4770)
!4786 = !DILocation(line: 1410, column: 17, scope: !4770)
!4787 = !DILocation(line: 1411, column: 3, scope: !4770)
!4788 = !DILocation(line: 1411, column: 25, scope: !4770)
!4789 = !DILocation(line: 1412, column: 3, scope: !4770)
!4790 = !DILocation(line: 1412, column: 21, scope: !4770)
!4791 = !DILocation(line: 1413, column: 3, scope: !4770)
!4792 = distinct !DISubprogram(name: "real_value_from_int_cst", scope: !3, file: !3, line: 1420, type: !4793, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4795)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!1520, !2774, !2774}
!4795 = !{!4796, !4797, !4798}
!4796 = !DILocalVariable(name: "type", arg: 1, scope: !4792, file: !3, line: 1420, type: !2774)
!4797 = !DILocalVariable(name: "i", arg: 2, scope: !4792, file: !3, line: 1420, type: !2774)
!4798 = !DILocalVariable(name: "d", scope: !4792, file: !3, line: 1422, type: !1520)
!4799 = !DILocation(line: 0, scope: !4792)
!4800 = !DILocation(line: 1422, column: 19, scope: !4792)
!4801 = !DILocation(line: 1426, column: 11, scope: !4792)
!4802 = !DILocation(line: 1426, column: 3, scope: !4792)
!4803 = !DILocation(line: 1428, column: 26, scope: !4792)
!4804 = !DILocation(line: 1428, column: 33, scope: !4792)
!4805 = !DILocation(line: 1429, column: 8, scope: !4792)
!4806 = !DILocation(line: 1429, column: 30, scope: !4792)
!4807 = !DILocation(line: 1430, column: 8, scope: !4792)
!4808 = !DILocation(line: 1428, column: 3, scope: !4792)
!4809 = !DILocation(line: 1431, column: 3, scope: !4792)
!4810 = distinct !DISubprogram(name: "build_real_from_int_cst", scope: !3, file: !3, line: 1438, type: !4811, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4813)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!1457, !1457, !2774}
!4813 = !{!4814, !4815, !4816, !4817}
!4814 = !DILocalVariable(name: "type", arg: 1, scope: !4810, file: !3, line: 1438, type: !1457)
!4815 = !DILocalVariable(name: "i", arg: 2, scope: !4810, file: !3, line: 1438, type: !2774)
!4816 = !DILocalVariable(name: "v", scope: !4810, file: !3, line: 1440, type: !1457)
!4817 = !DILocalVariable(name: "overflow", scope: !4810, file: !3, line: 1441, type: !1450)
!4818 = !DILocation(line: 0, scope: !4810)
!4819 = !DILocation(line: 1441, column: 18, scope: !4810)
!4820 = !DILocation(line: 1443, column: 25, scope: !4810)
!4821 = !DILocation(line: 1443, column: 7, scope: !4810)
!4822 = !DILocation(line: 1445, column: 3, scope: !4810)
!4823 = !DILocation(line: 1445, column: 21, scope: !4810)
!4824 = !DILocation(line: 1446, column: 3, scope: !4810)
!4825 = distinct !DISubprogram(name: "build_string", scope: !3, file: !3, line: 1454, type: !4826, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4828)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!1457, !1450, !1455}
!4828 = !{!4829, !4830, !4831, !4832}
!4829 = !DILocalVariable(name: "len", arg: 1, scope: !4825, file: !3, line: 1454, type: !1450)
!4830 = !DILocalVariable(name: "str", arg: 2, scope: !4825, file: !3, line: 1454, type: !1455)
!4831 = !DILocalVariable(name: "s", scope: !4825, file: !3, line: 1456, type: !1457)
!4832 = !DILocalVariable(name: "length", scope: !4825, file: !3, line: 1457, type: !1830)
!4833 = !DILocation(line: 0, scope: !4825)
!4834 = !DILocation(line: 1460, column: 12, scope: !4825)
!4835 = !DILocation(line: 1460, column: 53, scope: !4825)
!4836 = !DILocation(line: 1467, column: 7, scope: !4825)
!4837 = !DILocation(line: 1469, column: 3, scope: !4825)
!4838 = !DILocation(line: 1470, column: 3, scope: !4825)
!4839 = !DILocation(line: 1471, column: 21, scope: !4825)
!4840 = !DILocation(line: 1472, column: 3, scope: !4825)
!4841 = !DILocation(line: 1472, column: 26, scope: !4825)
!4842 = !DILocation(line: 1473, column: 21, scope: !4825)
!4843 = !DILocation(line: 1473, column: 3, scope: !4825)
!4844 = !DILocation(line: 1474, column: 3, scope: !4825)
!4845 = !DILocation(line: 1474, column: 22, scope: !4825)
!4846 = !DILocation(line: 1476, column: 3, scope: !4825)
!4847 = distinct !DISubprogram(name: "build_complex", scope: !3, file: !3, line: 1485, type: !4608, scopeLine: 1486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4848)
!4848 = !{!4849, !4850, !4851, !4852}
!4849 = !DILocalVariable(name: "type", arg: 1, scope: !4847, file: !3, line: 1485, type: !1457)
!4850 = !DILocalVariable(name: "real", arg: 2, scope: !4847, file: !3, line: 1485, type: !1457)
!4851 = !DILocalVariable(name: "imag", arg: 3, scope: !4847, file: !3, line: 1485, type: !1457)
!4852 = !DILocalVariable(name: "t", scope: !4847, file: !3, line: 1487, type: !1457)
!4853 = !DILocation(line: 0, scope: !4847)
!4854 = !DILocation(line: 1487, column: 12, scope: !4847)
!4855 = !DILocation(line: 1489, column: 3, scope: !4847)
!4856 = !DILocation(line: 1489, column: 21, scope: !4847)
!4857 = !DILocation(line: 1490, column: 3, scope: !4847)
!4858 = !DILocation(line: 1490, column: 21, scope: !4847)
!4859 = !DILocation(line: 1491, column: 19, scope: !4847)
!4860 = !DILocation(line: 1491, column: 53, scope: !4847)
!4861 = !DILocation(line: 1491, column: 33, scope: !4847)
!4862 = !DILocation(line: 1491, column: 3, scope: !4847)
!4863 = !DILocation(line: 1491, column: 17, scope: !4847)
!4864 = !DILocation(line: 1492, column: 23, scope: !4847)
!4865 = !DILocation(line: 1492, column: 46, scope: !4847)
!4866 = !DILocation(line: 1492, column: 44, scope: !4847)
!4867 = !DILocation(line: 1492, column: 3, scope: !4847)
!4868 = !DILocation(line: 1492, column: 21, scope: !4847)
!4869 = !DILocation(line: 1493, column: 3, scope: !4847)
!4870 = distinct !DISubprogram(name: "build_complex_type", scope: !3, file: !3, line: 7450, type: !3923, scopeLine: 7451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4871)
!4871 = !{!4872, !4873, !4874, !4875}
!4872 = !DILocalVariable(name: "component_type", arg: 1, scope: !4870, file: !3, line: 7450, type: !1457)
!4873 = !DILocalVariable(name: "t", scope: !4870, file: !3, line: 7452, type: !1457)
!4874 = !DILocalVariable(name: "hashcode", scope: !4870, file: !3, line: 7453, type: !1814)
!4875 = !DILocalVariable(name: "name", scope: !4876, file: !3, line: 7483, type: !1455)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 7482, column: 5)
!4877 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 7481, column: 7)
!4878 = !DILocation(line: 0, scope: !4870)
!4879 = !DILocation(line: 7455, column: 3, scope: !4870)
!4880 = !DILocation(line: 7460, column: 7, scope: !4870)
!4881 = !DILocation(line: 7462, column: 19, scope: !4870)
!4882 = !DILocation(line: 7462, column: 3, scope: !4870)
!4883 = !DILocation(line: 7462, column: 17, scope: !4870)
!4884 = !DILocation(line: 7465, column: 14, scope: !4870)
!4885 = !DILocation(line: 7466, column: 7, scope: !4870)
!4886 = !DILocation(line: 7468, column: 8, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 7468, column: 7)
!4888 = !DILocation(line: 7468, column: 7, scope: !4870)
!4889 = !DILocation(line: 7469, column: 5, scope: !4887)
!4890 = !DILocation(line: 7471, column: 7, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 7471, column: 7)
!4892 = !DILocation(line: 7471, column: 26, scope: !4891)
!4893 = !DILocation(line: 7471, column: 7, scope: !4870)
!4894 = !DILocation(line: 7473, column: 11, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 7473, column: 11)
!4896 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 7472, column: 5)
!4897 = !DILocation(line: 7473, column: 11, scope: !4896)
!4898 = !DILocation(line: 7474, column: 2, scope: !4895)
!4899 = !DILocation(line: 7475, column: 48, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 7475, column: 16)
!4901 = !DILocation(line: 7475, column: 16, scope: !4895)
!4902 = !DILocation(line: 7477, column: 6, scope: !4900)
!4903 = !DILocation(line: 7477, column: 4, scope: !4900)
!4904 = !DILocation(line: 7476, column: 2, scope: !4900)
!4905 = !DILocation(line: 7481, column: 9, scope: !4877)
!4906 = !DILocation(line: 7481, column: 7, scope: !4870)
!4907 = !DILocation(line: 7484, column: 29, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 7484, column: 11)
!4909 = !DILocation(line: 7484, column: 26, scope: !4908)
!4910 = !DILocation(line: 7484, column: 11, scope: !4876)
!4911 = !DILocation(line: 7486, column: 34, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4908, file: !3, line: 7486, column: 16)
!4913 = !DILocation(line: 7486, column: 31, scope: !4912)
!4914 = !DILocation(line: 7486, column: 16, scope: !4908)
!4915 = !DILocation(line: 7488, column: 34, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 7488, column: 16)
!4917 = !DILocation(line: 7488, column: 31, scope: !4916)
!4918 = !DILocation(line: 7488, column: 16, scope: !4912)
!4919 = !DILocation(line: 7490, column: 34, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 7490, column: 16)
!4921 = !DILocation(line: 7490, column: 31, scope: !4920)
!4922 = !DILocation(line: 7490, column: 16, scope: !4916)
!4923 = !DILocation(line: 7492, column: 34, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 7492, column: 16)
!4925 = !DILocation(line: 7492, column: 31, scope: !4924)
!4926 = !DILocation(line: 7492, column: 16, scope: !4920)
!4927 = !DILocation(line: 7494, column: 34, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 7494, column: 16)
!4929 = !DILocation(line: 7494, column: 31, scope: !4928)
!4930 = !DILocation(line: 7494, column: 16, scope: !4924)
!4931 = !DILocation(line: 7496, column: 34, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 7496, column: 16)
!4933 = !DILocation(line: 7496, column: 31, scope: !4932)
!4934 = !DILocation(line: 7496, column: 16, scope: !4928)
!4935 = !DILocation(line: 7498, column: 34, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 7498, column: 16)
!4937 = !DILocation(line: 7498, column: 31, scope: !4936)
!4938 = !DILocation(line: 7498, column: 16, scope: !4932)
!4939 = !DILocation(line: 7500, column: 34, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 7500, column: 16)
!4941 = !DILocation(line: 7500, column: 31, scope: !4940)
!4942 = !DILocation(line: 7500, column: 16, scope: !4936)
!4943 = !DILocation(line: 7502, column: 34, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 7502, column: 16)
!4945 = !DILocation(line: 7502, column: 31, scope: !4944)
!4946 = !DILocation(line: 7502, column: 16, scope: !4940)
!4947 = !DILocation(line: 7504, column: 34, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 7504, column: 16)
!4949 = !DILocation(line: 7504, column: 31, scope: !4948)
!4950 = !DILocation(line: 0, scope: !4876)
!4951 = !DILocation(line: 0, scope: !4908)
!4952 = !DILocation(line: 7509, column: 16, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 7509, column: 11)
!4954 = !DILocation(line: 7509, column: 11, scope: !4876)
!4955 = !DILocation(line: 7510, column: 18, scope: !4953)
!4956 = !DILocation(line: 7510, column: 16, scope: !4953)
!4957 = !DILocation(line: 7510, column: 2, scope: !4953)
!4958 = !DILocation(line: 7514, column: 35, scope: !4870)
!4959 = !DILocation(line: 7514, column: 10, scope: !4870)
!4960 = !DILocation(line: 7514, column: 3, scope: !4870)
!4961 = distinct !DISubprogram(name: "build_one_cst", scope: !3, file: !3, line: 1500, type: !3923, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4962)
!4962 = !{!4963, !4964, !4967, !4968}
!4963 = !DILocalVariable(name: "type", arg: 1, scope: !4961, file: !3, line: 1500, type: !1457)
!4964 = !DILocalVariable(name: "scalar", scope: !4965, file: !3, line: 1519, type: !1457)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 1518, column: 7)
!4966 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 1503, column: 5)
!4967 = !DILocalVariable(name: "cst", scope: !4965, file: !3, line: 1519, type: !1457)
!4968 = !DILocalVariable(name: "i", scope: !4965, file: !3, line: 1520, type: !1450)
!4969 = !DILocation(line: 0, scope: !4961)
!4970 = !DILocation(line: 1502, column: 11, scope: !4961)
!4971 = !DILocation(line: 1502, column: 3, scope: !4961)
!4972 = !DILocation(line: 1507, column: 14, scope: !4966)
!4973 = !DILocation(line: 1507, column: 7, scope: !4966)
!4974 = !DILocation(line: 1510, column: 14, scope: !4966)
!4975 = !DILocation(line: 1510, column: 7, scope: !4966)
!4976 = !DILocation(line: 1514, column: 7, scope: !4966)
!4977 = !DILocation(line: 1515, column: 33, scope: !4966)
!4978 = !DILocation(line: 1515, column: 14, scope: !4966)
!4979 = !DILocation(line: 1515, column: 7, scope: !4966)
!4980 = !DILocation(line: 1522, column: 26, scope: !4965)
!4981 = !DILocation(line: 1522, column: 11, scope: !4965)
!4982 = !DILocation(line: 0, scope: !4965)
!4983 = !DILocation(line: 1526, column: 11, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 1526, column: 2)
!4985 = !DILocation(line: 1526, column: 7, scope: !4984)
!4986 = !DILocation(line: 0, scope: !4984)
!4987 = !DILocation(line: 1526, column: 44, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4984, file: !3, line: 1526, column: 2)
!4989 = !DILocation(line: 1526, column: 2, scope: !4984)
!4990 = !DILocation(line: 1526, column: 40, scope: !4988)
!4991 = !DILocation(line: 1527, column: 10, scope: !4988)
!4992 = !DILocation(line: 1526, column: 2, scope: !4988)
!4993 = distinct !{!4993, !4989, !4994}
!4994 = !DILocation(line: 1527, column: 10, scope: !4984)
!4995 = !DILocation(line: 1529, column: 9, scope: !4965)
!4996 = !DILocation(line: 1534, column: 23, scope: !4966)
!4997 = !DILocation(line: 1534, column: 8, scope: !4966)
!4998 = !DILocation(line: 1535, column: 8, scope: !4966)
!4999 = !DILocation(line: 1533, column: 14, scope: !4966)
!5000 = !DILocation(line: 1543, column: 1, scope: !4961)
!5001 = !DILocation(line: 1538, column: 7, scope: !4966)
!5002 = !DILocation(line: 1541, column: 5, scope: !4961)
!5003 = distinct !DISubprogram(name: "make_tree_binfo_stat", scope: !3, file: !3, line: 1548, type: !5004, scopeLine: 1549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5006)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!1457, !7}
!5006 = !{!5007, !5008, !5009}
!5007 = !DILocalVariable(name: "base_binfos", arg: 1, scope: !5003, file: !3, line: 1548, type: !7)
!5008 = !DILocalVariable(name: "t", scope: !5003, file: !3, line: 1550, type: !1457)
!5009 = !DILocalVariable(name: "length", scope: !5003, file: !3, line: 1551, type: !1830)
!5010 = !DILocation(line: 0, scope: !5003)
!5011 = !DILocation(line: 1552, column: 8, scope: !5003)
!5012 = !DILocation(line: 1552, column: 6, scope: !5003)
!5013 = !DILocation(line: 1559, column: 14, scope: !5003)
!5014 = !DILocation(line: 1559, column: 7, scope: !5003)
!5015 = !DILocation(line: 1561, column: 3, scope: !5003)
!5016 = !DILocation(line: 1563, column: 3, scope: !5003)
!5017 = !DILocation(line: 1565, column: 3, scope: !5003)
!5018 = !DILocation(line: 1567, column: 3, scope: !5003)
!5019 = distinct !DISubprogram(name: "VEC_tree_base_embedded_init", scope: !6, file: !6, line: 182, type: !5020, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5023)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{null, !5022, !1450}
!5022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!5023 = !{!5024, !5025}
!5024 = !DILocalVariable(name: "vec_", arg: 1, scope: !5019, file: !6, line: 182, type: !5022)
!5025 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5019, file: !6, line: 182, type: !1450)
!5026 = !DILocation(line: 0, scope: !5019)
!5027 = !DILocation(line: 182, column: 1, scope: !5019)
!5028 = distinct !DISubprogram(name: "integer_zerop", scope: !3, file: !3, line: 1598, type: !4737, scopeLine: 1599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5029)
!5029 = !{!5030}
!5030 = !DILocalVariable(name: "expr", arg: 1, scope: !5028, file: !3, line: 1598, type: !2774)
!5031 = !DILocation(line: 0, scope: !5028)
!5032 = !DILocation(line: 1600, column: 3, scope: !5028)
!5033 = !DILocation(line: 1602, column: 12, scope: !5028)
!5034 = !DILocation(line: 1602, column: 29, scope: !5028)
!5035 = !DILocation(line: 1603, column: 5, scope: !5028)
!5036 = !DILocation(line: 1603, column: 8, scope: !5028)
!5037 = !DILocation(line: 1603, column: 32, scope: !5028)
!5038 = !DILocation(line: 1604, column: 5, scope: !5028)
!5039 = !DILocation(line: 1604, column: 8, scope: !5028)
!5040 = !DILocation(line: 1604, column: 33, scope: !5028)
!5041 = !DILocation(line: 1605, column: 4, scope: !5028)
!5042 = !DILocation(line: 1605, column: 25, scope: !5028)
!5043 = !DILocation(line: 1606, column: 8, scope: !5028)
!5044 = !DILocation(line: 1606, column: 26, scope: !5028)
!5045 = !DILocation(line: 1606, column: 11, scope: !5028)
!5046 = !DILocation(line: 1607, column: 8, scope: !5028)
!5047 = !DILocation(line: 1607, column: 26, scope: !5028)
!5048 = !DILocation(line: 1607, column: 11, scope: !5028)
!5049 = !DILocation(line: 1602, column: 3, scope: !5028)
!5050 = distinct !DISubprogram(name: "tree_strip_nop_conversions", scope: !3, file: !3, line: 10697, type: !3923, scopeLine: 10698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5051)
!5051 = !{!5052}
!5052 = !DILocalVariable(name: "exp", arg: 1, scope: !5050, file: !3, line: 10697, type: !1457)
!5053 = !DILocation(line: 0, scope: !5050)
!5054 = !DILocation(line: 10699, column: 3, scope: !5050)
!5055 = !DILocation(line: 10699, column: 10, scope: !5050)
!5056 = !DILocation(line: 10700, column: 11, scope: !5050)
!5057 = distinct !{!5057, !5054, !5056}
!5058 = !DILocation(line: 10701, column: 3, scope: !5050)
!5059 = distinct !DISubprogram(name: "integer_onep", scope: !3, file: !3, line: 1614, type: !4737, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5060)
!5060 = !{!5061}
!5061 = !DILocalVariable(name: "expr", arg: 1, scope: !5059, file: !3, line: 1614, type: !2774)
!5062 = !DILocation(line: 0, scope: !5059)
!5063 = !DILocation(line: 1616, column: 3, scope: !5059)
!5064 = !DILocation(line: 1618, column: 12, scope: !5059)
!5065 = !DILocation(line: 1618, column: 29, scope: !5059)
!5066 = !DILocation(line: 1619, column: 5, scope: !5059)
!5067 = !DILocation(line: 1619, column: 8, scope: !5059)
!5068 = !DILocation(line: 1619, column: 32, scope: !5059)
!5069 = !DILocation(line: 1620, column: 5, scope: !5059)
!5070 = !DILocation(line: 1620, column: 8, scope: !5059)
!5071 = !DILocation(line: 1620, column: 33, scope: !5059)
!5072 = !DILocation(line: 1621, column: 4, scope: !5059)
!5073 = !DILocation(line: 1621, column: 25, scope: !5059)
!5074 = !DILocation(line: 1622, column: 8, scope: !5059)
!5075 = !DILocation(line: 1622, column: 25, scope: !5059)
!5076 = !DILocation(line: 1622, column: 11, scope: !5059)
!5077 = !DILocation(line: 1623, column: 8, scope: !5059)
!5078 = !DILocation(line: 1623, column: 26, scope: !5059)
!5079 = !DILocation(line: 1623, column: 11, scope: !5059)
!5080 = !DILocation(line: 1618, column: 3, scope: !5059)
!5081 = distinct !DISubprogram(name: "integer_all_onesp", scope: !3, file: !3, line: 1630, type: !4737, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5082)
!5082 = !{!5083, !5084, !5085, !5086, !5089}
!5083 = !DILocalVariable(name: "expr", arg: 1, scope: !5081, file: !3, line: 1630, type: !2774)
!5084 = !DILocalVariable(name: "prec", scope: !5081, file: !3, line: 1632, type: !1450)
!5085 = !DILocalVariable(name: "uns", scope: !5081, file: !3, line: 1633, type: !1450)
!5086 = !DILocalVariable(name: "high_value", scope: !5087, file: !3, line: 1657, type: !1513)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1656, column: 5)
!5088 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1655, column: 7)
!5089 = !DILocalVariable(name: "shift_amount", scope: !5087, file: !3, line: 1658, type: !1450)
!5090 = !DILocation(line: 0, scope: !5081)
!5091 = !DILocation(line: 1635, column: 3, scope: !5081)
!5092 = !DILocation(line: 1637, column: 7, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1637, column: 7)
!5094 = !DILocation(line: 1637, column: 24, scope: !5093)
!5095 = !DILocation(line: 1638, column: 7, scope: !5093)
!5096 = !DILocation(line: 1638, column: 29, scope: !5093)
!5097 = !DILocation(line: 1638, column: 10, scope: !5093)
!5098 = !DILocation(line: 1639, column: 7, scope: !5093)
!5099 = !DILocation(line: 1639, column: 25, scope: !5093)
!5100 = !DILocation(line: 1639, column: 10, scope: !5093)
!5101 = !DILocation(line: 1637, column: 7, scope: !5081)
!5102 = !DILocation(line: 1642, column: 12, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 1642, column: 12)
!5104 = !DILocation(line: 1642, column: 29, scope: !5103)
!5105 = !DILocation(line: 1642, column: 12, scope: !5093)
!5106 = !DILocation(line: 1645, column: 9, scope: !5081)
!5107 = !DILocation(line: 1646, column: 7, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1646, column: 7)
!5109 = !DILocation(line: 1646, column: 31, scope: !5108)
!5110 = !DILocation(line: 1647, column: 7, scope: !5108)
!5111 = !DILocation(line: 1647, column: 10, scope: !5108)
!5112 = !DILocation(line: 1647, column: 35, scope: !5108)
!5113 = !DILocation(line: 1646, column: 7, scope: !5081)
!5114 = !DILocation(line: 1649, column: 8, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1649, column: 7)
!5116 = !DILocation(line: 1649, column: 7, scope: !5081)
!5117 = !DILocation(line: 1654, column: 10, scope: !5081)
!5118 = !DILocation(line: 1655, column: 12, scope: !5088)
!5119 = !DILocation(line: 1655, column: 7, scope: !5081)
!5120 = !DILocation(line: 1660, column: 27, scope: !5087)
!5121 = !DILocation(line: 0, scope: !5087)
!5122 = !DILocation(line: 1663, column: 7, scope: !5087)
!5123 = !DILocation(line: 1671, column: 15, scope: !5087)
!5124 = !DILocation(line: 1671, column: 39, scope: !5087)
!5125 = !DILocation(line: 1672, column: 8, scope: !5087)
!5126 = !DILocation(line: 1664, column: 24, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 1664, column: 11)
!5128 = !DILocation(line: 1664, column: 11, scope: !5087)
!5129 = !DILocation(line: 1672, column: 11, scope: !5087)
!5130 = !DILocation(line: 1672, column: 36, scope: !5087)
!5131 = !DILocation(line: 1675, column: 12, scope: !5088)
!5132 = !DILocation(line: 1675, column: 67, scope: !5088)
!5133 = !DILocation(line: 1675, column: 76, scope: !5088)
!5134 = !DILocation(line: 1675, column: 36, scope: !5088)
!5135 = !DILocation(line: 1675, column: 5, scope: !5088)
!5136 = !DILocation(line: 1676, column: 1, scope: !5081)
!5137 = distinct !DISubprogram(name: "integer_pow2p", scope: !3, file: !3, line: 1682, type: !4737, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5138)
!5138 = !{!5139, !5140, !5141, !5142}
!5139 = !DILocalVariable(name: "expr", arg: 1, scope: !5137, file: !3, line: 1682, type: !2774)
!5140 = !DILocalVariable(name: "prec", scope: !5137, file: !3, line: 1684, type: !1450)
!5141 = !DILocalVariable(name: "high", scope: !5137, file: !3, line: 1685, type: !1513)
!5142 = !DILocalVariable(name: "low", scope: !5137, file: !3, line: 1685, type: !1513)
!5143 = !DILocation(line: 0, scope: !5137)
!5144 = !DILocation(line: 1687, column: 3, scope: !5137)
!5145 = !DILocation(line: 1689, column: 7, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1689, column: 7)
!5147 = !DILocation(line: 1689, column: 24, scope: !5146)
!5148 = !DILocation(line: 1690, column: 7, scope: !5146)
!5149 = !DILocation(line: 1690, column: 25, scope: !5146)
!5150 = !DILocation(line: 1690, column: 10, scope: !5146)
!5151 = !DILocation(line: 1691, column: 7, scope: !5146)
!5152 = !DILocation(line: 1691, column: 25, scope: !5146)
!5153 = !DILocation(line: 1691, column: 10, scope: !5146)
!5154 = !DILocation(line: 1689, column: 7, scope: !5137)
!5155 = !DILocation(line: 1694, column: 7, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1694, column: 7)
!5157 = !DILocation(line: 1694, column: 24, scope: !5156)
!5158 = !DILocation(line: 1694, column: 7, scope: !5137)
!5159 = !DILocation(line: 1697, column: 10, scope: !5137)
!5160 = !DILocation(line: 1698, column: 10, scope: !5137)
!5161 = !DILocation(line: 1699, column: 9, scope: !5137)
!5162 = !DILocation(line: 1704, column: 12, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1704, column: 7)
!5164 = !DILocation(line: 1704, column: 7, scope: !5137)
!5165 = !DILocation(line: 1706, column: 17, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 1706, column: 12)
!5167 = !DILocation(line: 1706, column: 12, scope: !5163)
!5168 = !DILocation(line: 1707, column: 45, scope: !5166)
!5169 = !DILocation(line: 1707, column: 36, scope: !5166)
!5170 = !DILocation(line: 1707, column: 13, scope: !5166)
!5171 = !DILocation(line: 1707, column: 10, scope: !5166)
!5172 = !DILocation(line: 1707, column: 5, scope: !5166)
!5173 = !DILocation(line: 1711, column: 16, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 1711, column: 11)
!5175 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 1709, column: 5)
!5176 = !DILocation(line: 1711, column: 11, scope: !5175)
!5177 = !DILocation(line: 1712, column: 32, scope: !5174)
!5178 = !DILocation(line: 1712, column: 9, scope: !5174)
!5179 = !DILocation(line: 1712, column: 6, scope: !5174)
!5180 = !DILocation(line: 1712, column: 2, scope: !5174)
!5181 = !DILocation(line: 1699, column: 7, scope: !5137)
!5182 = !DILocation(line: 1715, column: 17, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1715, column: 7)
!5184 = !DILocation(line: 1718, column: 17, scope: !5137)
!5185 = !DILocation(line: 1718, column: 22, scope: !5137)
!5186 = !DILocation(line: 1718, column: 43, scope: !5137)
!5187 = !{i64 0, i64 65}
!5188 = !DILocation(line: 1719, column: 4, scope: !5137)
!5189 = !DILocation(line: 1719, column: 12, scope: !5137)
!5190 = !DILocation(line: 1719, column: 17, scope: !5137)
!5191 = !DILocation(line: 1719, column: 40, scope: !5137)
!5192 = !DILocation(line: 1718, column: 3, scope: !5137)
!5193 = !DILocation(line: 1720, column: 1, scope: !5137)
!5194 = distinct !DISubprogram(name: "integer_nonzerop", scope: !3, file: !3, line: 1726, type: !4737, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5195)
!5195 = !{!5196}
!5196 = !DILocalVariable(name: "expr", arg: 1, scope: !5194, file: !3, line: 1726, type: !2774)
!5197 = !DILocation(line: 0, scope: !5194)
!5198 = !DILocation(line: 1728, column: 3, scope: !5194)
!5199 = !DILocation(line: 1730, column: 12, scope: !5194)
!5200 = !DILocation(line: 1730, column: 29, scope: !5194)
!5201 = !DILocation(line: 1731, column: 5, scope: !5194)
!5202 = !DILocation(line: 1731, column: 9, scope: !5194)
!5203 = !DILocation(line: 1731, column: 33, scope: !5194)
!5204 = !DILocation(line: 1732, column: 9, scope: !5194)
!5205 = !DILocation(line: 1732, column: 12, scope: !5194)
!5206 = !DILocation(line: 1732, column: 37, scope: !5194)
!5207 = !DILocation(line: 1733, column: 4, scope: !5194)
!5208 = !DILocation(line: 1733, column: 25, scope: !5194)
!5209 = !DILocation(line: 1734, column: 8, scope: !5194)
!5210 = !DILocation(line: 1734, column: 30, scope: !5194)
!5211 = !DILocation(line: 1734, column: 12, scope: !5194)
!5212 = !DILocation(line: 1735, column: 5, scope: !5194)
!5213 = !DILocation(line: 1735, column: 26, scope: !5194)
!5214 = !DILocation(line: 1735, column: 8, scope: !5194)
!5215 = !DILocation(line: 1730, column: 3, scope: !5194)
!5216 = distinct !DISubprogram(name: "fixed_zerop", scope: !3, file: !3, line: 1741, type: !4737, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5217)
!5217 = !{!5218}
!5218 = !DILocalVariable(name: "expr", arg: 1, scope: !5216, file: !3, line: 1741, type: !2774)
!5219 = !DILocation(line: 0, scope: !5216)
!5220 = !DILocation(line: 1743, column: 11, scope: !5216)
!5221 = !DILocation(line: 1743, column: 28, scope: !5216)
!5222 = !DILocation(line: 1744, column: 4, scope: !5216)
!5223 = !DILocation(line: 1744, column: 26, scope: !5216)
!5224 = !DILocation(line: 1744, column: 7, scope: !5216)
!5225 = !DILocation(line: 1743, column: 3, scope: !5216)
!5226 = distinct !DISubprogram(name: "double_int_zero_p", scope: !1507, file: !1507, line: 152, type: !5227, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5229)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{!1449, !1506}
!5229 = !{!5230}
!5230 = !DILocalVariable(name: "cst", arg: 1, scope: !5226, file: !1507, line: 152, type: !1506)
!5231 = !DILocation(line: 154, column: 23, scope: !5226)
!5232 = !DILocation(line: 154, column: 10, scope: !5226)
!5233 = !DILocation(line: 154, column: 3, scope: !5226)
!5234 = distinct !DISubprogram(name: "tree_log2", scope: !3, file: !3, line: 1751, type: !4737, scopeLine: 1752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5235)
!5235 = !{!5236, !5237, !5238, !5239}
!5236 = !DILocalVariable(name: "expr", arg: 1, scope: !5234, file: !3, line: 1751, type: !2774)
!5237 = !DILocalVariable(name: "prec", scope: !5234, file: !3, line: 1753, type: !1450)
!5238 = !DILocalVariable(name: "high", scope: !5234, file: !3, line: 1754, type: !1513)
!5239 = !DILocalVariable(name: "low", scope: !5234, file: !3, line: 1754, type: !1513)
!5240 = !DILocation(line: 1759, column: 12, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 1758, column: 7)
!5242 = !DILocation(line: 0, scope: !5234)
!5243 = !DILocation(line: 1756, column: 3, scope: !5234)
!5244 = !DILocation(line: 1758, column: 7, scope: !5241)
!5245 = !DILocation(line: 1758, column: 24, scope: !5241)
!5246 = !DILocation(line: 1758, column: 7, scope: !5234)
!5247 = !DILocation(line: 1759, column: 23, scope: !5241)
!5248 = !DILocation(line: 1761, column: 10, scope: !5234)
!5249 = !DILocation(line: 1762, column: 10, scope: !5234)
!5250 = !DILocation(line: 1763, column: 9, scope: !5234)
!5251 = !DILocation(line: 1768, column: 12, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 1768, column: 7)
!5253 = !DILocation(line: 1768, column: 7, scope: !5234)
!5254 = !DILocation(line: 1770, column: 17, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 1770, column: 12)
!5256 = !DILocation(line: 1770, column: 12, scope: !5252)
!5257 = !DILocation(line: 1771, column: 45, scope: !5255)
!5258 = !DILocation(line: 1771, column: 36, scope: !5255)
!5259 = !DILocation(line: 1771, column: 13, scope: !5255)
!5260 = !DILocation(line: 1771, column: 10, scope: !5255)
!5261 = !DILocation(line: 1771, column: 5, scope: !5255)
!5262 = !DILocation(line: 1775, column: 16, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 1775, column: 11)
!5264 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 1773, column: 5)
!5265 = !DILocation(line: 1775, column: 11, scope: !5264)
!5266 = !DILocation(line: 1776, column: 32, scope: !5263)
!5267 = !DILocation(line: 1776, column: 9, scope: !5263)
!5268 = !DILocation(line: 1776, column: 6, scope: !5263)
!5269 = !DILocation(line: 1776, column: 2, scope: !5263)
!5270 = !DILocation(line: 1763, column: 7, scope: !5234)
!5271 = !DILocation(line: 1779, column: 16, scope: !5234)
!5272 = !DILocation(line: 1779, column: 11, scope: !5234)
!5273 = !DILocation(line: 1779, column: 48, scope: !5234)
!5274 = !DILocation(line: 1779, column: 46, scope: !5234)
!5275 = !DILocation(line: 1780, column: 6, scope: !5234)
!5276 = !DILocation(line: 1781, column: 1, scope: !5234)
!5277 = distinct !DISubprogram(name: "tree_floor_log2", scope: !3, file: !3, line: 1787, type: !4737, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5278)
!5278 = !{!5279, !5280, !5281, !5282}
!5279 = !DILocalVariable(name: "expr", arg: 1, scope: !5277, file: !3, line: 1787, type: !2774)
!5280 = !DILocalVariable(name: "prec", scope: !5277, file: !3, line: 1789, type: !1450)
!5281 = !DILocalVariable(name: "high", scope: !5277, file: !3, line: 1790, type: !1513)
!5282 = !DILocalVariable(name: "low", scope: !5277, file: !3, line: 1790, type: !1513)
!5283 = !DILocation(line: 0, scope: !5277)
!5284 = !DILocation(line: 1792, column: 3, scope: !5277)
!5285 = !DILocation(line: 1794, column: 7, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 1794, column: 7)
!5287 = !DILocation(line: 1794, column: 24, scope: !5286)
!5288 = !DILocation(line: 1794, column: 7, scope: !5277)
!5289 = !DILocation(line: 1795, column: 23, scope: !5286)
!5290 = !DILocation(line: 1795, column: 12, scope: !5286)
!5291 = !DILocation(line: 1795, column: 5, scope: !5286)
!5292 = !DILocation(line: 1797, column: 10, scope: !5277)
!5293 = !DILocation(line: 1798, column: 10, scope: !5277)
!5294 = !DILocation(line: 1799, column: 9, scope: !5277)
!5295 = !DILocation(line: 1805, column: 42, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 1805, column: 7)
!5297 = !DILocation(line: 1807, column: 17, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 1807, column: 12)
!5299 = !DILocation(line: 1807, column: 12, scope: !5296)
!5300 = !DILocation(line: 1808, column: 45, scope: !5298)
!5301 = !DILocation(line: 1808, column: 36, scope: !5298)
!5302 = !DILocation(line: 1808, column: 13, scope: !5298)
!5303 = !DILocation(line: 1808, column: 10, scope: !5298)
!5304 = !DILocation(line: 1808, column: 5, scope: !5298)
!5305 = !DILocation(line: 1812, column: 16, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 1812, column: 11)
!5307 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 1810, column: 5)
!5308 = !DILocation(line: 1812, column: 11, scope: !5307)
!5309 = !DILocation(line: 1813, column: 32, scope: !5306)
!5310 = !DILocation(line: 1813, column: 9, scope: !5306)
!5311 = !DILocation(line: 1813, column: 6, scope: !5306)
!5312 = !DILocation(line: 1813, column: 2, scope: !5306)
!5313 = !DILocation(line: 1799, column: 7, scope: !5277)
!5314 = !DILocation(line: 1816, column: 16, scope: !5277)
!5315 = !DILocation(line: 1816, column: 11, scope: !5277)
!5316 = !DILocation(line: 1816, column: 48, scope: !5277)
!5317 = !DILocation(line: 1816, column: 46, scope: !5277)
!5318 = !DILocation(line: 1817, column: 6, scope: !5277)
!5319 = !DILocation(line: 1818, column: 1, scope: !5277)
!5320 = distinct !DISubprogram(name: "real_zerop", scope: !3, file: !3, line: 1824, type: !4737, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5321)
!5321 = !{!5322}
!5322 = !DILocalVariable(name: "expr", arg: 1, scope: !5320, file: !3, line: 1824, type: !2774)
!5323 = !DILocation(line: 0, scope: !5320)
!5324 = !DILocation(line: 1826, column: 3, scope: !5320)
!5325 = !DILocation(line: 1828, column: 12, scope: !5320)
!5326 = !DILocation(line: 1828, column: 29, scope: !5320)
!5327 = !DILocation(line: 1829, column: 5, scope: !5320)
!5328 = !DILocation(line: 1829, column: 8, scope: !5320)
!5329 = !DILocation(line: 1830, column: 5, scope: !5320)
!5330 = !DILocation(line: 1830, column: 10, scope: !5320)
!5331 = !DILocation(line: 1831, column: 4, scope: !5320)
!5332 = !DILocation(line: 1831, column: 8, scope: !5320)
!5333 = !DILocation(line: 1831, column: 25, scope: !5320)
!5334 = !DILocation(line: 1832, column: 8, scope: !5320)
!5335 = !DILocation(line: 1832, column: 23, scope: !5320)
!5336 = !DILocation(line: 1832, column: 11, scope: !5320)
!5337 = !DILocation(line: 1833, column: 8, scope: !5320)
!5338 = !DILocation(line: 1833, column: 23, scope: !5320)
!5339 = !DILocation(line: 1833, column: 11, scope: !5320)
!5340 = !DILocation(line: 1828, column: 3, scope: !5320)
!5341 = distinct !DISubprogram(name: "real_onep", scope: !3, file: !3, line: 1841, type: !4737, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5342)
!5342 = !{!5343}
!5343 = !DILocalVariable(name: "expr", arg: 1, scope: !5341, file: !3, line: 1841, type: !2774)
!5344 = !DILocation(line: 0, scope: !5341)
!5345 = !DILocation(line: 1843, column: 3, scope: !5341)
!5346 = !DILocation(line: 1845, column: 12, scope: !5341)
!5347 = !DILocation(line: 1845, column: 29, scope: !5341)
!5348 = !DILocation(line: 1846, column: 5, scope: !5341)
!5349 = !DILocation(line: 1846, column: 8, scope: !5341)
!5350 = !DILocation(line: 1847, column: 5, scope: !5341)
!5351 = !DILocation(line: 1847, column: 10, scope: !5341)
!5352 = !DILocation(line: 1848, column: 4, scope: !5341)
!5353 = !DILocation(line: 1848, column: 8, scope: !5341)
!5354 = !DILocation(line: 1848, column: 25, scope: !5341)
!5355 = !DILocation(line: 1849, column: 8, scope: !5341)
!5356 = !DILocation(line: 1849, column: 22, scope: !5341)
!5357 = !DILocation(line: 1849, column: 11, scope: !5341)
!5358 = !DILocation(line: 1850, column: 8, scope: !5341)
!5359 = !DILocation(line: 1850, column: 23, scope: !5341)
!5360 = !DILocation(line: 1850, column: 11, scope: !5341)
!5361 = !DILocation(line: 1845, column: 3, scope: !5341)
!5362 = distinct !DISubprogram(name: "real_twop", scope: !3, file: !3, line: 1857, type: !4737, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5363)
!5363 = !{!5364}
!5364 = !DILocalVariable(name: "expr", arg: 1, scope: !5362, file: !3, line: 1857, type: !2774)
!5365 = !DILocation(line: 0, scope: !5362)
!5366 = !DILocation(line: 1859, column: 3, scope: !5362)
!5367 = !DILocation(line: 1861, column: 12, scope: !5362)
!5368 = !DILocation(line: 1861, column: 29, scope: !5362)
!5369 = !DILocation(line: 1862, column: 5, scope: !5362)
!5370 = !DILocation(line: 1862, column: 8, scope: !5362)
!5371 = !DILocation(line: 1863, column: 5, scope: !5362)
!5372 = !DILocation(line: 1863, column: 10, scope: !5362)
!5373 = !DILocation(line: 1864, column: 4, scope: !5362)
!5374 = !DILocation(line: 1864, column: 8, scope: !5362)
!5375 = !DILocation(line: 1864, column: 25, scope: !5362)
!5376 = !DILocation(line: 1865, column: 8, scope: !5362)
!5377 = !DILocation(line: 1865, column: 22, scope: !5362)
!5378 = !DILocation(line: 1865, column: 11, scope: !5362)
!5379 = !DILocation(line: 1866, column: 8, scope: !5362)
!5380 = !DILocation(line: 1866, column: 23, scope: !5362)
!5381 = !DILocation(line: 1866, column: 11, scope: !5362)
!5382 = !DILocation(line: 1861, column: 3, scope: !5362)
!5383 = distinct !DISubprogram(name: "real_minus_onep", scope: !3, file: !3, line: 1873, type: !4737, scopeLine: 1874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5384)
!5384 = !{!5385}
!5385 = !DILocalVariable(name: "expr", arg: 1, scope: !5383, file: !3, line: 1873, type: !2774)
!5386 = !DILocation(line: 0, scope: !5383)
!5387 = !DILocation(line: 1875, column: 3, scope: !5383)
!5388 = !DILocation(line: 1877, column: 12, scope: !5383)
!5389 = !DILocation(line: 1877, column: 29, scope: !5383)
!5390 = !DILocation(line: 1878, column: 5, scope: !5383)
!5391 = !DILocation(line: 1878, column: 8, scope: !5383)
!5392 = !DILocation(line: 1879, column: 5, scope: !5383)
!5393 = !DILocation(line: 1879, column: 10, scope: !5383)
!5394 = !DILocation(line: 1880, column: 4, scope: !5383)
!5395 = !DILocation(line: 1880, column: 8, scope: !5383)
!5396 = !DILocation(line: 1880, column: 25, scope: !5383)
!5397 = !DILocation(line: 1881, column: 8, scope: !5383)
!5398 = !DILocation(line: 1881, column: 28, scope: !5383)
!5399 = !DILocation(line: 1881, column: 11, scope: !5383)
!5400 = !DILocation(line: 1882, column: 8, scope: !5383)
!5401 = !DILocation(line: 1882, column: 23, scope: !5383)
!5402 = !DILocation(line: 1882, column: 11, scope: !5383)
!5403 = !DILocation(line: 1877, column: 3, scope: !5383)
!5404 = distinct !DISubprogram(name: "really_constant_p", scope: !3, file: !3, line: 1888, type: !4737, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5405)
!5405 = !{!5406}
!5406 = !DILocalVariable(name: "exp", arg: 1, scope: !5404, file: !3, line: 1888, type: !2774)
!5407 = !DILocation(line: 0, scope: !5404)
!5408 = !DILocation(line: 1891, column: 3, scope: !5404)
!5409 = !DILocation(line: 1891, column: 10, scope: !5404)
!5410 = !DILocation(line: 1892, column: 3, scope: !5404)
!5411 = !DILocation(line: 1893, column: 11, scope: !5404)
!5412 = distinct !{!5412, !5408, !5411}
!5413 = !DILocation(line: 1894, column: 10, scope: !5404)
!5414 = !DILocation(line: 1894, column: 3, scope: !5404)
!5415 = distinct !DISubprogram(name: "value_member", scope: !3, file: !3, line: 1901, type: !4530, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5416)
!5416 = !{!5417, !5418}
!5417 = !DILocalVariable(name: "elem", arg: 1, scope: !5415, file: !3, line: 1901, type: !1457)
!5418 = !DILocalVariable(name: "list", arg: 2, scope: !5415, file: !3, line: 1901, type: !1457)
!5419 = !DILocation(line: 0, scope: !5415)
!5420 = !DILocation(line: 1903, column: 3, scope: !5415)
!5421 = !DILocation(line: 1905, column: 19, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 1905, column: 11)
!5423 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 1904, column: 5)
!5424 = !DILocation(line: 1905, column: 16, scope: !5422)
!5425 = !DILocation(line: 1905, column: 11, scope: !5423)
!5426 = !DILocation(line: 1907, column: 14, scope: !5423)
!5427 = distinct !{!5427, !5420, !5428}
!5428 = !DILocation(line: 1908, column: 5, scope: !5415)
!5429 = !DILocation(line: 1910, column: 1, scope: !5415)
!5430 = distinct !DISubprogram(name: "purpose_member", scope: !3, file: !3, line: 1916, type: !5431, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5433)
!5431 = !DISubroutineType(types: !5432)
!5432 = !{!1457, !2774, !1457}
!5433 = !{!5434, !5435}
!5434 = !DILocalVariable(name: "elem", arg: 1, scope: !5430, file: !3, line: 1916, type: !2774)
!5435 = !DILocalVariable(name: "list", arg: 2, scope: !5430, file: !3, line: 1916, type: !1457)
!5436 = !DILocation(line: 0, scope: !5430)
!5437 = !DILocation(line: 1918, column: 3, scope: !5430)
!5438 = !DILocation(line: 1920, column: 19, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 1920, column: 11)
!5440 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1919, column: 5)
!5441 = !DILocation(line: 1920, column: 16, scope: !5439)
!5442 = !DILocation(line: 1920, column: 11, scope: !5440)
!5443 = !DILocation(line: 1922, column: 14, scope: !5440)
!5444 = distinct !{!5444, !5437, !5445}
!5445 = !DILocation(line: 1923, column: 5, scope: !5430)
!5446 = !DILocation(line: 1925, column: 1, scope: !5430)
!5447 = distinct !DISubprogram(name: "chain_index", scope: !3, file: !3, line: 1931, type: !5448, scopeLine: 1932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5450)
!5448 = !DISubroutineType(types: !5449)
!5449 = !{!1457, !1450, !1457}
!5450 = !{!5451, !5452}
!5451 = !DILocalVariable(name: "idx", arg: 1, scope: !5447, file: !3, line: 1931, type: !1450)
!5452 = !DILocalVariable(name: "chain", arg: 2, scope: !5447, file: !3, line: 1931, type: !1457)
!5453 = !DILocation(line: 0, scope: !5447)
!5454 = !DILocation(line: 1933, column: 3, scope: !5447)
!5455 = !DILocation(line: 1933, column: 10, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1933, column: 3)
!5457 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1933, column: 3)
!5458 = !DILocation(line: 1933, column: 23, scope: !5456)
!5459 = !DILocation(line: 1933, column: 16, scope: !5456)
!5460 = !DILocation(line: 1933, column: 3, scope: !5457)
!5461 = !DILocation(line: 1934, column: 13, scope: !5456)
!5462 = !DILocation(line: 1933, column: 28, scope: !5456)
!5463 = !DILocation(line: 1933, column: 3, scope: !5456)
!5464 = distinct !{!5464, !5460, !5465}
!5465 = !DILocation(line: 1934, column: 13, scope: !5457)
!5466 = !DILocation(line: 1935, column: 3, scope: !5447)
!5467 = distinct !DISubprogram(name: "chain_member", scope: !3, file: !3, line: 1941, type: !5468, scopeLine: 1942, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5470)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!1450, !2774, !2774}
!5470 = !{!5471, !5472}
!5471 = !DILocalVariable(name: "elem", arg: 1, scope: !5467, file: !3, line: 1941, type: !2774)
!5472 = !DILocalVariable(name: "chain", arg: 2, scope: !5467, file: !3, line: 1941, type: !2774)
!5473 = !DILocation(line: 0, scope: !5467)
!5474 = !DILocation(line: 1943, column: 3, scope: !5467)
!5475 = !DILocation(line: 1945, column: 16, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 1945, column: 11)
!5477 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 1944, column: 5)
!5478 = !DILocation(line: 1945, column: 11, scope: !5477)
!5479 = !DILocation(line: 1947, column: 15, scope: !5477)
!5480 = distinct !{!5480, !5474, !5481}
!5481 = !DILocation(line: 1948, column: 5, scope: !5467)
!5482 = !DILocation(line: 1951, column: 1, scope: !5467)
!5483 = distinct !DISubprogram(name: "fields_length", scope: !3, file: !3, line: 1983, type: !4737, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5484)
!5484 = !{!5485, !5486, !5487}
!5485 = !DILocalVariable(name: "type", arg: 1, scope: !5483, file: !3, line: 1983, type: !2774)
!5486 = !DILocalVariable(name: "t", scope: !5483, file: !3, line: 1985, type: !1457)
!5487 = !DILocalVariable(name: "count", scope: !5483, file: !3, line: 1986, type: !1450)
!5488 = !DILocation(line: 0, scope: !5483)
!5489 = !DILocation(line: 1985, column: 12, scope: !5483)
!5490 = !DILocation(line: 1988, column: 3, scope: !5483)
!5491 = !DILocation(line: 1988, column: 3, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1988, column: 3)
!5493 = !DILocation(line: 1989, column: 9, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !3, line: 1989, column: 9)
!5495 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 1988, column: 3)
!5496 = !DILocation(line: 1989, column: 23, scope: !5494)
!5497 = !DILocation(line: 1989, column: 9, scope: !5495)
!5498 = !DILocation(line: 1988, column: 17, scope: !5495)
!5499 = !DILocation(line: 1988, column: 3, scope: !5495)
!5500 = distinct !{!5500, !5491, !5501}
!5501 = !DILocation(line: 1990, column: 9, scope: !5492)
!5502 = !DILocation(line: 1992, column: 3, scope: !5483)
!5503 = distinct !DISubprogram(name: "first_field", scope: !3, file: !3, line: 1999, type: !5504, scopeLine: 2000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5506)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!1457, !2774}
!5506 = !{!5507, !5508}
!5507 = !DILocalVariable(name: "type", arg: 1, scope: !5503, file: !3, line: 1999, type: !2774)
!5508 = !DILocalVariable(name: "t", scope: !5503, file: !3, line: 2001, type: !1457)
!5509 = !DILocation(line: 0, scope: !5503)
!5510 = !DILocation(line: 2001, column: 12, scope: !5503)
!5511 = !DILocation(line: 2002, column: 3, scope: !5503)
!5512 = !DILocation(line: 2002, column: 10, scope: !5503)
!5513 = !DILocation(line: 2002, column: 12, scope: !5503)
!5514 = !DILocation(line: 2002, column: 15, scope: !5503)
!5515 = !DILocation(line: 2002, column: 29, scope: !5503)
!5516 = !DILocation(line: 2003, column: 9, scope: !5503)
!5517 = distinct !{!5517, !5511, !5516}
!5518 = !DILocation(line: 2004, column: 3, scope: !5503)
!5519 = distinct !DISubprogram(name: "chainon", scope: !3, file: !3, line: 2012, type: !4530, scopeLine: 2013, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5520)
!5520 = !{!5521, !5522, !5523}
!5521 = !DILocalVariable(name: "op1", arg: 1, scope: !5519, file: !3, line: 2012, type: !1457)
!5522 = !DILocalVariable(name: "op2", arg: 2, scope: !5519, file: !3, line: 2012, type: !1457)
!5523 = !DILocalVariable(name: "t1", scope: !5519, file: !3, line: 2014, type: !1457)
!5524 = !DILocation(line: 0, scope: !5519)
!5525 = !DILocation(line: 2016, column: 8, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 2016, column: 7)
!5527 = !DILocation(line: 2016, column: 7, scope: !5519)
!5528 = !DILocation(line: 2018, column: 8, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 2018, column: 7)
!5530 = !DILocation(line: 2018, column: 7, scope: !5519)
!5531 = !DILocation(line: 2021, column: 3, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 2021, column: 3)
!5533 = !DILocation(line: 0, scope: !5532)
!5534 = !DILocation(line: 2021, column: 18, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 2021, column: 3)
!5536 = !DILocation(line: 2021, column: 3, scope: !5535)
!5537 = distinct !{!5537, !5531, !5538}
!5538 = !DILocation(line: 2022, column: 5, scope: !5532)
!5539 = !DILocation(line: 2023, column: 19, scope: !5519)
!5540 = !DILocation(line: 2033, column: 3, scope: !5519)
!5541 = !DILocation(line: 2034, column: 1, scope: !5519)
!5542 = distinct !DISubprogram(name: "tree_last", scope: !3, file: !3, line: 2039, type: !3923, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5543)
!5543 = !{!5544, !5545}
!5544 = !DILocalVariable(name: "chain", arg: 1, scope: !5542, file: !3, line: 2039, type: !1457)
!5545 = !DILocalVariable(name: "next", scope: !5542, file: !3, line: 2041, type: !1457)
!5546 = !DILocation(line: 0, scope: !5542)
!5547 = !DILocation(line: 2042, column: 7, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 2042, column: 7)
!5549 = !DILocation(line: 2042, column: 7, scope: !5542)
!5550 = !DILocation(line: 2043, column: 5, scope: !5548)
!5551 = !DILocation(line: 2043, column: 20, scope: !5548)
!5552 = distinct !{!5552, !5550, !5553}
!5553 = !DILocation(line: 2044, column: 15, scope: !5548)
!5554 = !DILocation(line: 2045, column: 3, scope: !5542)
!5555 = distinct !DISubprogram(name: "build_tree_list_stat", scope: !3, file: !3, line: 2068, type: !4530, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5556)
!5556 = !{!5557, !5558, !5559}
!5557 = !DILocalVariable(name: "parm", arg: 1, scope: !5555, file: !3, line: 2068, type: !1457)
!5558 = !DILocalVariable(name: "value", arg: 2, scope: !5555, file: !3, line: 2068, type: !1457)
!5559 = !DILocalVariable(name: "t", scope: !5555, file: !3, line: 2070, type: !1457)
!5560 = !DILocation(line: 0, scope: !5555)
!5561 = !DILocation(line: 2070, column: 12, scope: !5555)
!5562 = !DILocation(line: 2071, column: 3, scope: !5555)
!5563 = !DILocation(line: 2071, column: 20, scope: !5555)
!5564 = !DILocation(line: 2072, column: 3, scope: !5555)
!5565 = !DILocation(line: 2072, column: 18, scope: !5555)
!5566 = !DILocation(line: 2073, column: 3, scope: !5555)
!5567 = distinct !DISubprogram(name: "build_tree_list_vec_stat", scope: !3, file: !3, line: 2079, type: !5568, scopeLine: 2080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5572)
!5568 = !DISubroutineType(types: !5569)
!5569 = !{!1457, !5570}
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!5572 = !{!5573, !5574, !5575, !5576, !5577}
!5573 = !DILocalVariable(name: "vec", arg: 1, scope: !5567, file: !3, line: 2079, type: !5570)
!5574 = !DILocalVariable(name: "ret", scope: !5567, file: !3, line: 2081, type: !1457)
!5575 = !DILocalVariable(name: "pp", scope: !5567, file: !3, line: 2082, type: !1964)
!5576 = !DILocalVariable(name: "i", scope: !5567, file: !3, line: 2083, type: !7)
!5577 = !DILocalVariable(name: "t", scope: !5567, file: !3, line: 2084, type: !1457)
!5578 = !DILocation(line: 0, scope: !5567)
!5579 = !DILocation(line: 2081, column: 3, scope: !5567)
!5580 = !DILocation(line: 2081, column: 8, scope: !5567)
!5581 = !DILocation(line: 2084, column: 3, scope: !5567)
!5582 = !DILocation(line: 0, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 2085, column: 3)
!5584 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 2085, column: 3)
!5585 = !DILocation(line: 2085, column: 8, scope: !5584)
!5586 = !DILocation(line: 0, scope: !5584)
!5587 = !DILocation(line: 2085, column: 15, scope: !5583)
!5588 = !DILocation(line: 2085, column: 3, scope: !5584)
!5589 = !DILocation(line: 2087, column: 41, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 2086, column: 5)
!5591 = !DILocation(line: 2087, column: 13, scope: !5590)
!5592 = !DILocation(line: 2087, column: 11, scope: !5590)
!5593 = !DILocation(line: 2088, column: 13, scope: !5590)
!5594 = !DILocation(line: 2085, column: 46, scope: !5583)
!5595 = !DILocation(line: 2085, column: 3, scope: !5583)
!5596 = distinct !{!5596, !5588, !5597}
!5597 = !DILocation(line: 2089, column: 5, scope: !5584)
!5598 = !DILocation(line: 2090, column: 10, scope: !5567)
!5599 = !DILocation(line: 2091, column: 1, scope: !5567)
!5600 = !DILocation(line: 2090, column: 3, scope: !5567)
!5601 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !6, file: !6, line: 182, type: !5602, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5604)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{!1450, !4126, !7, !1964}
!5604 = !{!5605, !5606, !5607}
!5605 = !DILocalVariable(name: "vec_", arg: 1, scope: !5601, file: !6, line: 182, type: !4126)
!5606 = !DILocalVariable(name: "ix_", arg: 2, scope: !5601, file: !6, line: 182, type: !7)
!5607 = !DILocalVariable(name: "ptr", arg: 3, scope: !5601, file: !6, line: 182, type: !1964)
!5608 = !DILocation(line: 0, scope: !5601)
!5609 = !DILocation(line: 182, column: 1, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5601, file: !6, line: 182, column: 1)
!5611 = !DILocation(line: 182, column: 1, scope: !5601)
!5612 = !DILocation(line: 182, column: 1, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5610, file: !6, line: 182, column: 1)
!5614 = !DILocation(line: 182, column: 1, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5610, file: !6, line: 182, column: 1)
!5616 = !DILocation(line: 0, scope: !5610)
!5617 = distinct !DISubprogram(name: "ctor_to_list", scope: !3, file: !3, line: 2121, type: !3923, scopeLine: 2122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5618)
!5618 = !{!5619, !5620, !5621, !5622, !5623, !5624}
!5619 = !DILocalVariable(name: "ctor", arg: 1, scope: !5617, file: !3, line: 2121, type: !1457)
!5620 = !DILocalVariable(name: "list", scope: !5617, file: !3, line: 2123, type: !1457)
!5621 = !DILocalVariable(name: "p", scope: !5617, file: !3, line: 2124, type: !1964)
!5622 = !DILocalVariable(name: "ix", scope: !5617, file: !3, line: 2125, type: !7)
!5623 = !DILocalVariable(name: "purpose", scope: !5617, file: !3, line: 2126, type: !1457)
!5624 = !DILocalVariable(name: "val", scope: !5617, file: !3, line: 2126, type: !1457)
!5625 = !DILocation(line: 0, scope: !5617)
!5626 = !DILocation(line: 2123, column: 3, scope: !5617)
!5627 = !DILocation(line: 2123, column: 8, scope: !5617)
!5628 = !DILocation(line: 0, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 2128, column: 3)
!5630 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 2128, column: 3)
!5631 = !DILocation(line: 2128, column: 3, scope: !5630)
!5632 = !DILocation(line: 0, scope: !5630)
!5633 = !DILocation(line: 2128, column: 3, scope: !5629)
!5634 = !DILocation(line: 2130, column: 12, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 2129, column: 5)
!5636 = !DILocation(line: 2130, column: 10, scope: !5635)
!5637 = !DILocation(line: 2131, column: 12, scope: !5635)
!5638 = distinct !{!5638, !5631, !5639}
!5639 = !DILocation(line: 2132, column: 5, scope: !5630)
!5640 = !DILocation(line: 2134, column: 10, scope: !5617)
!5641 = !DILocation(line: 2135, column: 1, scope: !5617)
!5642 = !DILocation(line: 2134, column: 3, scope: !5617)
!5643 = distinct !DISubprogram(name: "ctor_to_vec", scope: !3, file: !3, line: 2141, type: !5644, scopeLine: 2142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5646)
!5644 = !DISubroutineType(types: !5645)
!5645 = !{!1856, !1457}
!5646 = !{!5647, !5648, !5649, !5650}
!5647 = !DILocalVariable(name: "ctor", arg: 1, scope: !5643, file: !3, line: 2141, type: !1457)
!5648 = !DILocalVariable(name: "vec", scope: !5643, file: !3, line: 2143, type: !1856)
!5649 = !DILocalVariable(name: "ix", scope: !5643, file: !3, line: 2144, type: !7)
!5650 = !DILocalVariable(name: "val", scope: !5643, file: !3, line: 2145, type: !1457)
!5651 = !DILocation(line: 0, scope: !5643)
!5652 = !DILocation(line: 2143, column: 24, scope: !5643)
!5653 = !DILocation(line: 0, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 2147, column: 3)
!5655 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 2147, column: 3)
!5656 = !DILocation(line: 2147, column: 3, scope: !5655)
!5657 = !DILocation(line: 0, scope: !5655)
!5658 = !DILocation(line: 2147, column: 3, scope: !5654)
!5659 = !DILocation(line: 2148, column: 5, scope: !5654)
!5660 = distinct !{!5660, !5656, !5661}
!5661 = !DILocation(line: 2148, column: 5, scope: !5655)
!5662 = !DILocation(line: 2150, column: 3, scope: !5643)
!5663 = distinct !DISubprogram(name: "VEC_tree_gc_alloc", scope: !6, file: !6, line: 183, type: !5664, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5666)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!1856, !1450}
!5666 = !{!5667}
!5667 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5663, file: !6, line: 183, type: !1450)
!5668 = !DILocation(line: 0, scope: !5663)
!5669 = !DILocation(line: 183, column: 1, scope: !5663)
!5670 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !6, file: !6, line: 182, type: !5671, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5673)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!1964, !5022, !1457}
!5673 = !{!5674, !5675, !5676}
!5674 = !DILocalVariable(name: "vec_", arg: 1, scope: !5670, file: !6, line: 182, type: !5022)
!5675 = !DILocalVariable(name: "obj_", arg: 2, scope: !5670, file: !6, line: 182, type: !1457)
!5676 = !DILocalVariable(name: "slot_", scope: !5670, file: !6, line: 182, type: !1964)
!5677 = !DILocation(line: 0, scope: !5670)
!5678 = !DILocation(line: 182, column: 1, scope: !5670)
!5679 = distinct !DISubprogram(name: "size_in_bytes", scope: !3, file: !3, line: 2160, type: !5504, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5680)
!5680 = !{!5681, !5682}
!5681 = !DILocalVariable(name: "type", arg: 1, scope: !5679, file: !3, line: 2160, type: !2774)
!5682 = !DILocalVariable(name: "t", scope: !5679, file: !3, line: 2162, type: !1457)
!5683 = !DILocation(line: 0, scope: !5679)
!5684 = !DILocation(line: 2164, column: 15, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 2164, column: 7)
!5686 = !DILocation(line: 2164, column: 12, scope: !5685)
!5687 = !DILocation(line: 2164, column: 7, scope: !5679)
!5688 = !DILocation(line: 2165, column: 12, scope: !5685)
!5689 = !DILocation(line: 2165, column: 5, scope: !5685)
!5690 = !DILocation(line: 2167, column: 10, scope: !5679)
!5691 = !DILocation(line: 2168, column: 7, scope: !5679)
!5692 = !DILocation(line: 2170, column: 9, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 2170, column: 7)
!5694 = !DILocation(line: 2170, column: 7, scope: !5679)
!5695 = !DILocation(line: 2172, column: 24, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 2171, column: 5)
!5697 = !DILocation(line: 2172, column: 7, scope: !5696)
!5698 = !DILocation(line: 2173, column: 14, scope: !5696)
!5699 = !DILocation(line: 2173, column: 7, scope: !5696)
!5700 = !DILocation(line: 2177, column: 1, scope: !5679)
!5701 = distinct !DISubprogram(name: "int_size_in_bytes", scope: !3, file: !3, line: 2183, type: !5702, scopeLine: 2184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5704)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!1513, !2774}
!5704 = !{!5705, !5706}
!5705 = !DILocalVariable(name: "type", arg: 1, scope: !5701, file: !3, line: 2183, type: !2774)
!5706 = !DILocalVariable(name: "t", scope: !5701, file: !3, line: 2185, type: !1457)
!5707 = !DILocation(line: 0, scope: !5701)
!5708 = !DILocation(line: 2187, column: 15, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 2187, column: 7)
!5710 = !DILocation(line: 2187, column: 12, scope: !5709)
!5711 = !DILocation(line: 2187, column: 7, scope: !5701)
!5712 = !DILocation(line: 2190, column: 10, scope: !5701)
!5713 = !DILocation(line: 2191, column: 7, scope: !5701)
!5714 = !DILocation(line: 2192, column: 9, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 2192, column: 7)
!5716 = !DILocation(line: 2193, column: 7, scope: !5715)
!5717 = !DILocation(line: 2193, column: 10, scope: !5715)
!5718 = !DILocation(line: 2193, column: 24, scope: !5715)
!5719 = !DILocation(line: 2194, column: 7, scope: !5715)
!5720 = !DILocation(line: 2194, column: 10, scope: !5715)
!5721 = !DILocation(line: 2194, column: 32, scope: !5715)
!5722 = !DILocation(line: 2196, column: 7, scope: !5715)
!5723 = !DILocation(line: 2196, column: 26, scope: !5715)
!5724 = !DILocation(line: 2196, column: 47, scope: !5715)
!5725 = !DILocation(line: 2192, column: 7, scope: !5701)
!5726 = !DILocation(line: 2199, column: 3, scope: !5701)
!5727 = !DILocation(line: 2200, column: 1, scope: !5701)
!5728 = distinct !DISubprogram(name: "max_int_size_in_bytes", scope: !3, file: !3, line: 2206, type: !5702, scopeLine: 2207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5729)
!5729 = !{!5730, !5731, !5732}
!5730 = !DILocalVariable(name: "type", arg: 1, scope: !5728, file: !3, line: 2206, type: !2774)
!5731 = !DILocalVariable(name: "size", scope: !5728, file: !3, line: 2208, type: !1513)
!5732 = !DILocalVariable(name: "size_tree", scope: !5728, file: !3, line: 2209, type: !1457)
!5733 = !DILocation(line: 0, scope: !5728)
!5734 = !DILocation(line: 2213, column: 7, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 2213, column: 7)
!5736 = !DILocation(line: 2213, column: 24, scope: !5735)
!5737 = !DILocation(line: 2213, column: 7, scope: !5728)
!5738 = !DILocation(line: 2215, column: 19, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 2214, column: 5)
!5740 = !DILocation(line: 2217, column: 11, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 2217, column: 11)
!5742 = !DILocation(line: 2217, column: 21, scope: !5741)
!5743 = !DILocation(line: 2217, column: 24, scope: !5741)
!5744 = !DILocation(line: 2217, column: 11, scope: !5739)
!5745 = !DILocation(line: 2218, column: 9, scope: !5741)
!5746 = !DILocation(line: 2218, column: 2, scope: !5741)
!5747 = !DILocation(line: 2224, column: 12, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 2224, column: 7)
!5749 = !DILocation(line: 2224, column: 7, scope: !5728)
!5750 = !DILocation(line: 2226, column: 36, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 2225, column: 5)
!5752 = !DILocation(line: 2226, column: 19, scope: !5751)
!5753 = !DILocation(line: 2228, column: 11, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 2228, column: 11)
!5755 = !DILocation(line: 2228, column: 21, scope: !5754)
!5756 = !DILocation(line: 2228, column: 24, scope: !5754)
!5757 = !DILocation(line: 2228, column: 11, scope: !5751)
!5758 = !DILocation(line: 2229, column: 9, scope: !5754)
!5759 = !DILocation(line: 2229, column: 2, scope: !5754)
!5760 = !DILocation(line: 2232, column: 3, scope: !5728)
!5761 = distinct !DISubprogram(name: "host_integerp", scope: !3, file: !3, line: 6191, type: !5762, scopeLine: 6192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5764)
!5762 = !DISubroutineType(types: !5763)
!5763 = !{!1450, !2774, !1450}
!5764 = !{!5765, !5766}
!5765 = !DILocalVariable(name: "t", arg: 1, scope: !5761, file: !3, line: 6191, type: !2774)
!5766 = !DILocalVariable(name: "pos", arg: 2, scope: !5761, file: !3, line: 6191, type: !1450)
!5767 = !DILocation(line: 0, scope: !5761)
!5768 = !DILocation(line: 6193, column: 9, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 6193, column: 7)
!5770 = !DILocation(line: 6193, column: 7, scope: !5761)
!5771 = !DILocation(line: 6196, column: 11, scope: !5761)
!5772 = !DILocation(line: 6196, column: 25, scope: !5761)
!5773 = !DILocation(line: 6197, column: 4, scope: !5761)
!5774 = !DILocation(line: 6197, column: 9, scope: !5761)
!5775 = !DILocation(line: 6197, column: 31, scope: !5761)
!5776 = !DILocation(line: 6198, column: 9, scope: !5761)
!5777 = !DILocation(line: 6198, column: 28, scope: !5761)
!5778 = !DILocation(line: 6198, column: 49, scope: !5761)
!5779 = !DILocation(line: 6199, column: 8, scope: !5761)
!5780 = !DILocation(line: 6199, column: 18, scope: !5761)
!5781 = !DILocation(line: 6199, column: 43, scope: !5761)
!5782 = !DILocation(line: 6200, column: 5, scope: !5761)
!5783 = !DILocation(line: 6200, column: 24, scope: !5761)
!5784 = !DILocation(line: 6200, column: 45, scope: !5761)
!5785 = !DILocation(line: 6201, column: 5, scope: !5761)
!5786 = !DILocation(line: 6201, column: 10, scope: !5761)
!5787 = !DILocation(line: 6202, column: 9, scope: !5761)
!5788 = !DILocation(line: 6202, column: 39, scope: !5761)
!5789 = !DILocation(line: 6203, column: 6, scope: !5761)
!5790 = !DILocation(line: 6203, column: 9, scope: !5761)
!5791 = !DILocation(line: 6204, column: 8, scope: !5761)
!5792 = !DILocation(line: 6204, column: 16, scope: !5761)
!5793 = !DILocation(line: 6196, column: 3, scope: !5761)
!5794 = !DILocation(line: 6205, column: 1, scope: !5761)
!5795 = distinct !DISubprogram(name: "tree_low_cst", scope: !3, file: !3, line: 6212, type: !5796, scopeLine: 6213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5798)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!1513, !2774, !1450}
!5798 = !{!5799, !5800}
!5799 = !DILocalVariable(name: "t", arg: 1, scope: !5795, file: !3, line: 6212, type: !2774)
!5800 = !DILocalVariable(name: "pos", arg: 2, scope: !5795, file: !3, line: 6212, type: !1450)
!5801 = !DILocation(line: 0, scope: !5795)
!5802 = !DILocation(line: 6214, column: 3, scope: !5795)
!5803 = !DILocation(line: 6215, column: 10, scope: !5795)
!5804 = !DILocation(line: 6215, column: 3, scope: !5795)
!5805 = distinct !DISubprogram(name: "tree_expr_size", scope: !3, file: !3, line: 2238, type: !5504, scopeLine: 2239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5806)
!5806 = !{!5807}
!5807 = !DILocalVariable(name: "exp", arg: 1, scope: !5805, file: !3, line: 2238, type: !2774)
!5808 = !DILocation(line: 0, scope: !5805)
!5809 = !DILocation(line: 2240, column: 7, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 2240, column: 7)
!5811 = !DILocation(line: 2241, column: 7, scope: !5810)
!5812 = !DILocation(line: 2241, column: 10, scope: !5810)
!5813 = !DILocation(line: 2241, column: 31, scope: !5810)
!5814 = !DILocation(line: 2240, column: 7, scope: !5805)
!5815 = !DILocation(line: 2242, column: 5, scope: !5810)
!5816 = !DILocation(line: 2244, column: 27, scope: !5810)
!5817 = !DILocation(line: 2244, column: 12, scope: !5810)
!5818 = !DILocation(line: 2244, column: 5, scope: !5810)
!5819 = !DILocation(line: 0, scope: !5810)
!5820 = !DILocation(line: 2245, column: 1, scope: !5805)
!5821 = distinct !DISubprogram(name: "bit_position", scope: !3, file: !3, line: 2251, type: !5504, scopeLine: 2252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5822)
!5822 = !{!5823}
!5823 = !DILocalVariable(name: "field", arg: 1, scope: !5821, file: !3, line: 2251, type: !2774)
!5824 = !DILocation(line: 0, scope: !5821)
!5825 = !DILocation(line: 2253, column: 24, scope: !5821)
!5826 = !DILocation(line: 2254, column: 10, scope: !5821)
!5827 = !DILocation(line: 2253, column: 10, scope: !5821)
!5828 = !DILocation(line: 2253, column: 3, scope: !5821)
!5829 = distinct !DISubprogram(name: "int_bit_position", scope: !3, file: !3, line: 2262, type: !5702, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5830)
!5830 = !{!5831}
!5831 = !DILocalVariable(name: "field", arg: 1, scope: !5829, file: !3, line: 2262, type: !2774)
!5832 = !DILocation(line: 0, scope: !5829)
!5833 = !DILocation(line: 2264, column: 24, scope: !5829)
!5834 = !DILocation(line: 2264, column: 10, scope: !5829)
!5835 = !DILocation(line: 2264, column: 3, scope: !5829)
!5836 = distinct !DISubprogram(name: "byte_position", scope: !3, file: !3, line: 2271, type: !5504, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5837)
!5837 = !{!5838}
!5838 = !DILocalVariable(name: "field", arg: 1, scope: !5836, file: !3, line: 2271, type: !2774)
!5839 = !DILocation(line: 0, scope: !5836)
!5840 = !DILocation(line: 2273, column: 25, scope: !5836)
!5841 = !DILocation(line: 2274, column: 4, scope: !5836)
!5842 = !DILocation(line: 2273, column: 10, scope: !5836)
!5843 = !DILocation(line: 2273, column: 3, scope: !5836)
!5844 = distinct !DISubprogram(name: "int_byte_position", scope: !3, file: !3, line: 2282, type: !5702, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5845)
!5845 = !{!5846}
!5846 = !DILocalVariable(name: "field", arg: 1, scope: !5844, file: !3, line: 2282, type: !2774)
!5847 = !DILocation(line: 0, scope: !5844)
!5848 = !DILocation(line: 2284, column: 24, scope: !5844)
!5849 = !DILocation(line: 2284, column: 10, scope: !5844)
!5850 = !DILocation(line: 2284, column: 3, scope: !5844)
!5851 = distinct !DISubprogram(name: "expr_align", scope: !3, file: !3, line: 2290, type: !5852, scopeLine: 2291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5854)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{!7, !2774}
!5854 = !{!5855, !5856, !5857}
!5855 = !DILocalVariable(name: "t", arg: 1, scope: !5851, file: !3, line: 2290, type: !2774)
!5856 = !DILocalVariable(name: "align0", scope: !5851, file: !3, line: 2292, type: !7)
!5857 = !DILocalVariable(name: "align1", scope: !5851, file: !3, line: 2292, type: !7)
!5858 = !DILocation(line: 2307, column: 14, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 2295, column: 5)
!5860 = !DILocation(line: 0, scope: !5851)
!5861 = !DILocation(line: 2294, column: 11, scope: !5851)
!5862 = !DILocation(line: 2294, column: 3, scope: !5851)
!5863 = !DILocation(line: 2299, column: 28, scope: !5859)
!5864 = !DILocation(line: 2299, column: 16, scope: !5859)
!5865 = !DILocation(line: 2300, column: 16, scope: !5859)
!5866 = !DILocation(line: 2301, column: 14, scope: !5859)
!5867 = !DILocation(line: 2330, column: 1, scope: !5851)
!5868 = !DILocation(line: 2307, column: 26, scope: !5859)
!5869 = !DILocation(line: 2312, column: 28, scope: !5859)
!5870 = !DILocation(line: 2312, column: 16, scope: !5859)
!5871 = !DILocation(line: 2313, column: 28, scope: !5859)
!5872 = !DILocation(line: 2313, column: 16, scope: !5859)
!5873 = !DILocation(line: 2314, column: 14, scope: !5859)
!5874 = !DILocation(line: 2321, column: 7, scope: !5859)
!5875 = !DILocation(line: 2322, column: 7, scope: !5859)
!5876 = !DILocation(line: 2329, column: 10, scope: !5851)
!5877 = !DILocation(line: 2329, column: 3, scope: !5851)
!5878 = distinct !DISubprogram(name: "array_type_nelts", scope: !3, file: !3, line: 2336, type: !5504, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5879)
!5879 = !{!5880, !5881, !5882, !5883}
!5880 = !DILocalVariable(name: "type", arg: 1, scope: !5878, file: !3, line: 2336, type: !2774)
!5881 = !DILocalVariable(name: "index_type", scope: !5878, file: !3, line: 2338, type: !1457)
!5882 = !DILocalVariable(name: "min", scope: !5878, file: !3, line: 2338, type: !1457)
!5883 = !DILocalVariable(name: "max", scope: !5878, file: !3, line: 2338, type: !1457)
!5884 = !DILocation(line: 0, scope: !5878)
!5885 = !DILocation(line: 2342, column: 9, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2342, column: 7)
!5887 = !DILocation(line: 2342, column: 7, scope: !5878)
!5888 = !DILocation(line: 2343, column: 12, scope: !5886)
!5889 = !DILocation(line: 2343, column: 5, scope: !5886)
!5890 = !DILocation(line: 2346, column: 9, scope: !5878)
!5891 = !DILocation(line: 2347, column: 9, scope: !5878)
!5892 = !DILocation(line: 2349, column: 11, scope: !5878)
!5893 = !DILocation(line: 2351, column: 6, scope: !5878)
!5894 = !DILocation(line: 2352, column: 1, scope: !5878)
!5895 = distinct !DISubprogram(name: "staticp", scope: !3, file: !3, line: 2359, type: !3923, scopeLine: 2360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5896)
!5896 = !{!5897}
!5897 = !DILocalVariable(name: "arg", arg: 1, scope: !5895, file: !3, line: 2359, type: !1457)
!5898 = !DILocation(line: 2396, column: 14, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 2362, column: 5)
!5900 = !DILocation(line: 0, scope: !5895)
!5901 = !DILocation(line: 2361, column: 11, scope: !5895)
!5902 = !DILocation(line: 2361, column: 3, scope: !5895)
!5903 = !DILocation(line: 2370, column: 16, scope: !5899)
!5904 = !DILocation(line: 2370, column: 34, scope: !5899)
!5905 = !DILocation(line: 2370, column: 37, scope: !5899)
!5906 = !DILocation(line: 2371, column: 8, scope: !5899)
!5907 = !DILocation(line: 2371, column: 13, scope: !5899)
!5908 = !DILocation(line: 2372, column: 8, scope: !5899)
!5909 = !DILocation(line: 2372, column: 13, scope: !5899)
!5910 = !DILocation(line: 2370, column: 15, scope: !5899)
!5911 = !DILocation(line: 2376, column: 16, scope: !5899)
!5912 = !DILocation(line: 2376, column: 34, scope: !5899)
!5913 = !DILocation(line: 2376, column: 37, scope: !5899)
!5914 = !DILocation(line: 2376, column: 15, scope: !5899)
!5915 = !DILocation(line: 2380, column: 14, scope: !5899)
!5916 = !DILocation(line: 2380, column: 7, scope: !5899)
!5917 = !DILocation(line: 2389, column: 7, scope: !5899)
!5918 = !DILocation(line: 0, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 2393, column: 11)
!5920 = !DILocation(line: 2393, column: 11, scope: !5919)
!5921 = !DILocation(line: 2393, column: 11, scope: !5899)
!5922 = !DILocation(line: 0, scope: !5899)
!5923 = !DILocation(line: 2399, column: 7, scope: !5899)
!5924 = !DILocation(line: 2404, column: 14, scope: !5899)
!5925 = !DILocation(line: 2404, column: 7, scope: !5899)
!5926 = !DILocation(line: 2408, column: 11, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 2408, column: 11)
!5928 = !DILocation(line: 2408, column: 51, scope: !5927)
!5929 = !DILocation(line: 2409, column: 4, scope: !5927)
!5930 = !DILocation(line: 2409, column: 7, scope: !5927)
!5931 = !DILocation(line: 2409, column: 41, scope: !5927)
!5932 = !DILocation(line: 2408, column: 11, scope: !5899)
!5933 = !DILocation(line: 2410, column: 9, scope: !5927)
!5934 = !DILocation(line: 2415, column: 14, scope: !5899)
!5935 = !DILocation(line: 2415, column: 7, scope: !5899)
!5936 = !DILocation(line: 2418, column: 7, scope: !5899)
!5937 = !DILocation(line: 2420, column: 1, scope: !5895)
!5938 = distinct !DISubprogram(name: "decl_address_invariant_p", scope: !3, file: !3, line: 2428, type: !4510, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5939)
!5939 = !{!5940}
!5940 = !DILocalVariable(name: "op", arg: 1, scope: !5938, file: !3, line: 2428, type: !2774)
!5941 = !DILocation(line: 0, scope: !5938)
!5942 = !DILocation(line: 2433, column: 11, scope: !5938)
!5943 = !DILocation(line: 2433, column: 3, scope: !5938)
!5944 = !DILocation(line: 2442, column: 13, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 2442, column: 11)
!5946 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 2434, column: 5)
!5947 = !DILocation(line: 2442, column: 30, scope: !5945)
!5948 = !DILocation(line: 2442, column: 33, scope: !5945)
!5949 = !DILocation(line: 2443, column: 12, scope: !5945)
!5950 = !DILocation(line: 0, scope: !5945)
!5951 = !DILocation(line: 2444, column: 14, scope: !5945)
!5952 = !DILocation(line: 2443, column: 16, scope: !5945)
!5953 = !DILocation(line: 2444, column: 11, scope: !5945)
!5954 = !DILocation(line: 2445, column: 11, scope: !5945)
!5955 = !DILocation(line: 2445, column: 14, scope: !5945)
!5956 = !DILocation(line: 2445, column: 35, scope: !5945)
!5957 = !DILocation(line: 2445, column: 32, scope: !5945)
!5958 = !DILocation(line: 2446, column: 11, scope: !5945)
!5959 = !DILocation(line: 2446, column: 14, scope: !5945)
!5960 = !DILocation(line: 2446, column: 44, scope: !5945)
!5961 = !DILocation(line: 2446, column: 41, scope: !5945)
!5962 = !DILocation(line: 2442, column: 11, scope: !5946)
!5963 = !DILocation(line: 2451, column: 12, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 2451, column: 11)
!5965 = !DILocation(line: 2451, column: 29, scope: !5964)
!5966 = !DILocation(line: 2451, column: 32, scope: !5964)
!5967 = !DILocation(line: 2452, column: 11, scope: !5964)
!5968 = !DILocation(line: 2452, column: 14, scope: !5964)
!5969 = !DILocation(line: 2452, column: 44, scope: !5964)
!5970 = !DILocation(line: 2452, column: 41, scope: !5964)
!5971 = !DILocation(line: 2451, column: 11, scope: !5946)
!5972 = !DILocation(line: 2460, column: 3, scope: !5938)
!5973 = !DILocation(line: 2461, column: 1, scope: !5938)
!5974 = distinct !DISubprogram(name: "decl_function_context", scope: !3, file: !3, line: 8072, type: !5504, scopeLine: 8073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5975)
!5975 = !{!5976, !5977}
!5976 = !DILocalVariable(name: "decl", arg: 1, scope: !5974, file: !3, line: 8072, type: !2774)
!5977 = !DILocalVariable(name: "context", scope: !5974, file: !3, line: 8074, type: !1457)
!5978 = !DILocation(line: 0, scope: !5974)
!5979 = !DILocation(line: 8076, column: 7, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 8076, column: 7)
!5981 = !DILocation(line: 8076, column: 24, scope: !5980)
!5982 = !DILocation(line: 8076, column: 7, scope: !5974)
!5983 = !DILocation(line: 8085, column: 29, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 8085, column: 12)
!5985 = !DILocation(line: 8085, column: 46, scope: !5984)
!5986 = !DILocation(line: 8085, column: 49, scope: !5984)
!5987 = !DILocation(line: 8085, column: 12, scope: !5980)
!5988 = !DILocation(line: 8087, column: 9, scope: !5984)
!5989 = !DILocation(line: 8086, column: 5, scope: !5984)
!5990 = !DILocation(line: 8090, column: 15, scope: !5984)
!5991 = !DILocation(line: 0, scope: !5984)
!5992 = !DILocation(line: 8092, column: 3, scope: !5974)
!5993 = !DILocation(line: 8092, column: 10, scope: !5974)
!5994 = !DILocation(line: 8092, column: 18, scope: !5974)
!5995 = !DILocation(line: 8092, column: 21, scope: !5974)
!5996 = !DILocation(line: 8092, column: 41, scope: !5974)
!5997 = !DILocation(line: 8094, column: 31, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 8094, column: 11)
!5999 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 8093, column: 5)
!6000 = !DILocation(line: 8094, column: 11, scope: !5999)
!6001 = !DILocation(line: 8095, column: 12, scope: !5998)
!6002 = !DILocation(line: 8095, column: 2, scope: !5998)
!6003 = !DILocation(line: 8097, column: 12, scope: !5998)
!6004 = !DILocation(line: 0, scope: !5998)
!6005 = distinct !{!6005, !5992, !6006}
!6006 = !DILocation(line: 8098, column: 5, scope: !5974)
!6007 = !DILocation(line: 8101, column: 1, scope: !5974)
!6008 = distinct !DISubprogram(name: "decl_address_ip_invariant_p", scope: !3, file: !3, line: 2466, type: !4510, scopeLine: 2467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6009)
!6009 = !{!6010}
!6010 = !DILocalVariable(name: "op", arg: 1, scope: !6008, file: !3, line: 2466, type: !2774)
!6011 = !DILocation(line: 0, scope: !6008)
!6012 = !DILocation(line: 2471, column: 11, scope: !6008)
!6013 = !DILocation(line: 2471, column: 3, scope: !6008)
!6014 = !DILocation(line: 2479, column: 13, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 2479, column: 11)
!6016 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2472, column: 5)
!6017 = !DILocation(line: 2479, column: 30, scope: !6015)
!6018 = !DILocation(line: 2479, column: 33, scope: !6015)
!6019 = !DILocation(line: 2480, column: 12, scope: !6015)
!6020 = !DILocation(line: 0, scope: !6015)
!6021 = !DILocation(line: 2481, column: 14, scope: !6015)
!6022 = !DILocation(line: 2480, column: 16, scope: !6015)
!6023 = !DILocation(line: 2481, column: 11, scope: !6015)
!6024 = !DILocation(line: 2479, column: 11, scope: !6016)
!6025 = !DILocation(line: 2486, column: 12, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 2486, column: 11)
!6027 = !DILocation(line: 2486, column: 29, scope: !6026)
!6028 = !DILocation(line: 2486, column: 32, scope: !6026)
!6029 = !DILocation(line: 2486, column: 11, scope: !6016)
!6030 = !DILocation(line: 2494, column: 3, scope: !6008)
!6031 = !DILocation(line: 2495, column: 1, scope: !6008)
!6032 = distinct !DISubprogram(name: "save_expr", scope: !3, file: !3, line: 2583, type: !3923, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6033)
!6033 = !{!6034, !6035, !6036}
!6034 = !DILocalVariable(name: "expr", arg: 1, scope: !6032, file: !3, line: 2583, type: !1457)
!6035 = !DILocalVariable(name: "t", scope: !6032, file: !3, line: 2585, type: !1457)
!6036 = !DILocalVariable(name: "inner", scope: !6032, file: !3, line: 2586, type: !1457)
!6037 = !DILocation(line: 0, scope: !6032)
!6038 = !DILocation(line: 2585, column: 12, scope: !6032)
!6039 = !DILocation(line: 2593, column: 11, scope: !6032)
!6040 = !DILocation(line: 2594, column: 7, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 2594, column: 7)
!6042 = !DILocation(line: 2594, column: 25, scope: !6041)
!6043 = !DILocation(line: 2594, column: 7, scope: !6032)
!6044 = !DILocation(line: 2597, column: 7, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 2597, column: 7)
!6046 = !DILocation(line: 2597, column: 7, scope: !6032)
!6047 = !DILocation(line: 2609, column: 7, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 2609, column: 7)
!6049 = !DILocation(line: 2609, column: 7, scope: !6032)
!6050 = !DILocation(line: 2612, column: 7, scope: !6032)
!6051 = !DILocation(line: 2613, column: 3, scope: !6032)
!6052 = !DILocation(line: 2618, column: 3, scope: !6032)
!6053 = !DILocation(line: 2618, column: 25, scope: !6032)
!6054 = !DILocation(line: 2619, column: 3, scope: !6032)
!6055 = !DILocation(line: 2620, column: 1, scope: !6032)
!6056 = distinct !DISubprogram(name: "skip_simple_arithmetic", scope: !3, file: !3, line: 2626, type: !3923, scopeLine: 2627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6057)
!6057 = !{!6058, !6059}
!6058 = !DILocalVariable(name: "expr", arg: 1, scope: !6056, file: !3, line: 2626, type: !1457)
!6059 = !DILocalVariable(name: "inner", scope: !6056, file: !3, line: 2628, type: !1457)
!6060 = !DILocation(line: 0, scope: !6056)
!6061 = !DILocation(line: 2632, column: 3, scope: !6056)
!6062 = !DILocation(line: 2632, column: 10, scope: !6056)
!6063 = !DILocation(line: 2632, column: 27, scope: !6056)
!6064 = !DILocation(line: 2640, column: 3, scope: !6056)
!6065 = !DILocation(line: 2633, column: 12, scope: !6056)
!6066 = distinct !{!6066, !6061, !6065}
!6067 = !DILocation(line: 2642, column: 11, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 2642, column: 11)
!6069 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 2641, column: 5)
!6070 = !DILocation(line: 2642, column: 11, scope: !6069)
!6071 = !DILocation(line: 2643, column: 10, scope: !6068)
!6072 = !DILocation(line: 2643, column: 2, scope: !6068)
!6073 = !DILocation(line: 2644, column: 16, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 2644, column: 16)
!6075 = !DILocation(line: 2644, column: 16, scope: !6068)
!6076 = !DILocation(line: 2646, column: 26, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 2646, column: 8)
!6078 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 2645, column: 2)
!6079 = !DILocation(line: 2646, column: 8, scope: !6077)
!6080 = !DILocation(line: 0, scope: !6077)
!6081 = !DILocation(line: 2646, column: 8, scope: !6078)
!6082 = !DILocation(line: 2648, column: 13, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2648, column: 13)
!6084 = !DILocation(line: 2648, column: 13, scope: !6077)
!6085 = !DILocation(line: 2649, column: 14, scope: !6083)
!6086 = !DILocation(line: 0, scope: !6068)
!6087 = distinct !{!6087, !6064, !6088}
!6088 = !DILocation(line: 2655, column: 5, scope: !6056)
!6089 = !DILocation(line: 2657, column: 3, scope: !6056)
!6090 = distinct !DISubprogram(name: "tree_invariant_p_1", scope: !3, file: !3, line: 2505, type: !6091, scopeLine: 2506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6093)
!6091 = !DISubroutineType(types: !6092)
!6092 = !{!1449, !1457}
!6093 = !{!6094, !6095}
!6094 = !DILocalVariable(name: "t", arg: 1, scope: !6090, file: !3, line: 2505, type: !1457)
!6095 = !DILocalVariable(name: "op", scope: !6090, file: !3, line: 2507, type: !1457)
!6096 = !DILocation(line: 0, scope: !6090)
!6097 = !DILocation(line: 2509, column: 7, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 2509, column: 7)
!6099 = !DILocation(line: 2510, column: 7, scope: !6098)
!6100 = !DILocation(line: 2510, column: 11, scope: !6098)
!6101 = !DILocation(line: 2510, column: 29, scope: !6098)
!6102 = !DILocation(line: 2510, column: 33, scope: !6098)
!6103 = !DILocation(line: 2509, column: 7, scope: !6090)
!6104 = !DILocation(line: 2513, column: 11, scope: !6090)
!6105 = !DILocation(line: 2513, column: 3, scope: !6090)
!6106 = !DILocation(line: 2520, column: 7, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 2514, column: 5)
!6108 = !DILocation(line: 0, scope: !6107)
!6109 = !DILocation(line: 2520, column: 14, scope: !6107)
!6110 = !DILocation(line: 2522, column: 4, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 2521, column: 2)
!6112 = !DILocation(line: 2526, column: 31, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 2526, column: 12)
!6114 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 2523, column: 6)
!6115 = !DILocation(line: 2526, column: 13, scope: !6113)
!6116 = !DILocation(line: 2527, column: 5, scope: !6113)
!6117 = !DILocation(line: 2527, column: 8, scope: !6113)
!6118 = !DILocation(line: 2527, column: 29, scope: !6113)
!6119 = !DILocation(line: 2528, column: 5, scope: !6113)
!6120 = !DILocation(line: 2528, column: 8, scope: !6113)
!6121 = !DILocation(line: 2528, column: 29, scope: !6113)
!6122 = !DILocation(line: 2526, column: 12, scope: !6114)
!6123 = !DILocation(line: 2533, column: 12, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 2533, column: 12)
!6125 = !DILocation(line: 2533, column: 33, scope: !6124)
!6126 = !DILocation(line: 2533, column: 12, scope: !6114)
!6127 = distinct !{!6127, !6106, !6128}
!6128 = !DILocation(line: 2540, column: 2, scope: !6107)
!6129 = !DILocation(line: 2542, column: 14, scope: !6107)
!6130 = !DILocation(line: 2542, column: 36, scope: !6107)
!6131 = !DILocation(line: 2542, column: 39, scope: !6107)
!6132 = !DILocation(line: 2542, column: 7, scope: !6107)
!6133 = !DILocation(line: 2548, column: 3, scope: !6090)
!6134 = !DILocation(line: 2549, column: 1, scope: !6090)
!6135 = distinct !DISubprogram(name: "contains_placeholder_p", scope: !3, file: !3, line: 2704, type: !4510, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6136)
!6136 = !{!6137, !6138, !6139, !6143}
!6137 = !DILocalVariable(name: "exp", arg: 1, scope: !6135, file: !3, line: 2704, type: !2774)
!6138 = !DILocalVariable(name: "code", scope: !6135, file: !3, line: 2706, type: !155)
!6139 = !DILocalVariable(name: "arg", scope: !6140, file: !3, line: 2770, type: !2774)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 2769, column: 4)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 2767, column: 2)
!6142 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 2716, column: 5)
!6143 = !DILocalVariable(name: "iter", scope: !6140, file: !3, line: 2771, type: !6144)
!6144 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_call_expr_arg_iterator", file: !6, line: 5370, baseType: !6145)
!6145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "const_call_expr_arg_iterator_d", file: !6, line: 5366, size: 128, elements: !6146)
!6146 = !{!6147, !6148, !6149}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !6145, file: !6, line: 5367, baseType: !2774, size: 64)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !6145, file: !6, line: 5368, baseType: !1450, size: 32, offset: 64)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6145, file: !6, line: 5369, baseType: !1450, size: 32, offset: 96)
!6150 = !DILocation(line: 0, scope: !6135)
!6151 = !DILocation(line: 2708, column: 8, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 2708, column: 7)
!6153 = !DILocation(line: 2708, column: 7, scope: !6135)
!6154 = !DILocation(line: 2711, column: 10, scope: !6135)
!6155 = !DILocation(line: 2712, column: 12, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 2712, column: 7)
!6157 = !DILocation(line: 2712, column: 7, scope: !6135)
!6158 = !DILocation(line: 2715, column: 11, scope: !6135)
!6159 = !DILocation(line: 2715, column: 3, scope: !6135)
!6160 = !DILocation(line: 2722, column: 14, scope: !6142)
!6161 = !DILocation(line: 2722, column: 7, scope: !6142)
!6162 = !DILocation(line: 2725, column: 16, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 2725, column: 11)
!6164 = !DILocation(line: 2725, column: 11, scope: !6142)
!6165 = !DILocation(line: 2726, column: 10, scope: !6163)
!6166 = !DILocation(line: 2727, column: 3, scope: !6163)
!6167 = !DILocation(line: 2727, column: 6, scope: !6163)
!6168 = !DILocation(line: 2726, column: 2, scope: !6163)
!6169 = !DILocation(line: 2734, column: 7, scope: !6142)
!6170 = !DILocation(line: 2738, column: 11, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 2735, column: 2)
!6172 = !DILocation(line: 2738, column: 4, scope: !6171)
!6173 = !DILocation(line: 2741, column: 12, scope: !6171)
!6174 = !DILocation(line: 2742, column: 5, scope: !6171)
!6175 = !DILocation(line: 2742, column: 8, scope: !6171)
!6176 = !DILocation(line: 2743, column: 5, scope: !6171)
!6177 = !DILocation(line: 2743, column: 8, scope: !6171)
!6178 = !DILocation(line: 2741, column: 4, scope: !6171)
!6179 = !DILocation(line: 2754, column: 15, scope: !6142)
!6180 = !DILocation(line: 2754, column: 7, scope: !6142)
!6181 = !DILocation(line: 2757, column: 11, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 2755, column: 2)
!6183 = !DILocation(line: 2757, column: 4, scope: !6182)
!6184 = !DILocation(line: 2759, column: 12, scope: !6182)
!6185 = !DILocation(line: 2760, column: 5, scope: !6182)
!6186 = !DILocation(line: 2760, column: 8, scope: !6182)
!6187 = !DILocation(line: 2759, column: 4, scope: !6182)
!6188 = !DILocation(line: 2766, column: 7, scope: !6142)
!6189 = !DILocation(line: 2771, column: 6, scope: !6140)
!6190 = !DILocation(line: 0, scope: !6140)
!6191 = !DILocation(line: 2772, column: 6, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 2772, column: 6)
!6193 = !DILocation(line: 0, scope: !6192)
!6194 = !DILocation(line: 2773, column: 12, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 2773, column: 12)
!6196 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 2772, column: 6)
!6197 = !DILocation(line: 2773, column: 12, scope: !6196)
!6198 = !DILocation(line: 2772, column: 6, scope: !6196)
!6199 = distinct !{!6199, !6191, !6200}
!6200 = !DILocation(line: 2774, column: 10, scope: !6192)
!6201 = !DILocation(line: 2776, column: 4, scope: !6141)
!6202 = !DILocation(line: 2785, column: 1, scope: !6135)
!6203 = distinct !DISubprogram(name: "build1_stat", scope: !3, file: !3, line: 3576, type: !6204, scopeLine: 3577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6206)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!1457, !155, !1457, !1457}
!6206 = !{!6207, !6208, !6209, !6210, !6211}
!6207 = !DILocalVariable(name: "code", arg: 1, scope: !6203, file: !3, line: 3576, type: !155)
!6208 = !DILocalVariable(name: "type", arg: 2, scope: !6203, file: !3, line: 3576, type: !1457)
!6209 = !DILocalVariable(name: "node", arg: 3, scope: !6203, file: !3, line: 3576, type: !1457)
!6210 = !DILocalVariable(name: "length", scope: !6203, file: !3, line: 3578, type: !1450)
!6211 = !DILocalVariable(name: "t", scope: !6203, file: !3, line: 3582, type: !1457)
!6212 = !DILocation(line: 0, scope: !6203)
!6213 = !DILocation(line: 3602, column: 3, scope: !6203)
!6214 = !DILocation(line: 3604, column: 14, scope: !6203)
!6215 = !DILocation(line: 3604, column: 7, scope: !6203)
!6216 = !DILocation(line: 3606, column: 3, scope: !6203)
!6217 = !DILocation(line: 3608, column: 3, scope: !6203)
!6218 = !DILocation(line: 3610, column: 3, scope: !6203)
!6219 = !DILocation(line: 3610, column: 17, scope: !6203)
!6220 = !DILocation(line: 3611, column: 3, scope: !6203)
!6221 = !DILocation(line: 3612, column: 3, scope: !6203)
!6222 = !DILocation(line: 3612, column: 23, scope: !6203)
!6223 = !DILocation(line: 3613, column: 3, scope: !6203)
!6224 = !DILocation(line: 3613, column: 18, scope: !6203)
!6225 = !DILocation(line: 3614, column: 7, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 3614, column: 7)
!6227 = !DILocation(line: 3614, column: 12, scope: !6226)
!6228 = !DILocation(line: 3614, column: 16, scope: !6226)
!6229 = !DILocation(line: 3614, column: 7, scope: !6203)
!6230 = !DILocation(line: 3616, column: 31, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 3615, column: 5)
!6232 = !DILocation(line: 3616, column: 29, scope: !6231)
!6233 = !DILocation(line: 3617, column: 27, scope: !6231)
!6234 = !DILocation(line: 3617, column: 25, scope: !6231)
!6235 = !DILocation(line: 3618, column: 5, scope: !6231)
!6236 = !DILocation(line: 3620, column: 7, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 3620, column: 7)
!6238 = !DILocation(line: 3620, column: 30, scope: !6237)
!6239 = !DILocation(line: 3620, column: 7, scope: !6203)
!6240 = !DILocation(line: 3621, column: 27, scope: !6237)
!6241 = !DILocation(line: 3621, column: 5, scope: !6237)
!6242 = !DILocation(line: 3622, column: 8, scope: !6237)
!6243 = !DILocation(line: 3627, column: 29, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 3623, column: 5)
!6245 = !DILocation(line: 3628, column: 25, scope: !6244)
!6246 = !DILocation(line: 3629, column: 7, scope: !6244)
!6247 = !DILocation(line: 3636, column: 25, scope: !6244)
!6248 = !DILocation(line: 3637, column: 7, scope: !6244)
!6249 = !DILocation(line: 3640, column: 11, scope: !6244)
!6250 = !DILocation(line: 3641, column: 2, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3640, column: 11)
!6252 = !DILocation(line: 3645, column: 35, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3645, column: 11)
!6254 = !DILocation(line: 3645, column: 56, scope: !6253)
!6255 = !DILocation(line: 3645, column: 48, scope: !6253)
!6256 = !DILocation(line: 3646, column: 7, scope: !6253)
!6257 = !DILocation(line: 3646, column: 16, scope: !6253)
!6258 = !DILocation(line: 3647, column: 4, scope: !6253)
!6259 = !DILocation(line: 3647, column: 7, scope: !6253)
!6260 = !DILocation(line: 3645, column: 11, scope: !6244)
!6261 = !DILocation(line: 3648, column: 20, scope: !6253)
!6262 = !DILocation(line: 3648, column: 2, scope: !6253)
!6263 = !DILocation(line: 3649, column: 34, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3649, column: 11)
!6265 = !DILocation(line: 3650, column: 4, scope: !6264)
!6266 = !DILocation(line: 3650, column: 15, scope: !6264)
!6267 = !DILocation(line: 3649, column: 11, scope: !6244)
!6268 = !DILocation(line: 3651, column: 25, scope: !6264)
!6269 = !DILocation(line: 3651, column: 2, scope: !6264)
!6270 = !DILocation(line: 3655, column: 3, scope: !6203)
!6271 = distinct !DISubprogram(name: "tree_invariant_p", scope: !3, file: !3, line: 2554, type: !6091, scopeLine: 2555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6272)
!6272 = !{!6273, !6274}
!6273 = !DILocalVariable(name: "t", arg: 1, scope: !6271, file: !3, line: 2554, type: !1457)
!6274 = !DILocalVariable(name: "inner", scope: !6271, file: !3, line: 2556, type: !1457)
!6275 = !DILocation(line: 0, scope: !6271)
!6276 = !DILocation(line: 2556, column: 16, scope: !6271)
!6277 = !DILocation(line: 2557, column: 10, scope: !6271)
!6278 = !DILocation(line: 2557, column: 3, scope: !6271)
!6279 = distinct !DISubprogram(name: "tree_node_structure", scope: !3, file: !3, line: 2664, type: !6280, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6282)
!6280 = !DISubroutineType(types: !6281)
!6281 = !{!419, !2774}
!6282 = !{!6283, !6284}
!6283 = !DILocalVariable(name: "t", arg: 1, scope: !6279, file: !3, line: 2664, type: !2774)
!6284 = !DILocalVariable(name: "code", scope: !6279, file: !3, line: 2666, type: !4082)
!6285 = !DILocation(line: 0, scope: !6279)
!6286 = !DILocation(line: 2666, column: 31, scope: !6279)
!6287 = !DILocation(line: 2667, column: 10, scope: !6279)
!6288 = !DILocation(line: 2667, column: 3, scope: !6279)
!6289 = distinct !DISubprogram(name: "tree_node_structure_for_code", scope: !3, file: !3, line: 273, type: !6290, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6292)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{!419, !155}
!6292 = !{!6293}
!6293 = !DILocalVariable(name: "code", arg: 1, scope: !6289, file: !3, line: 273, type: !155)
!6294 = !DILocation(line: 0, scope: !6289)
!6295 = !DILocation(line: 275, column: 11, scope: !6289)
!6296 = !DILocation(line: 275, column: 3, scope: !6289)
!6297 = !DILocation(line: 279, column: 2, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 278, column: 7)
!6299 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 276, column: 5)
!6300 = !DILocation(line: 284, column: 6, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 280, column: 4)
!6302 = !DILocation(line: 286, column: 6, scope: !6301)
!6303 = !DILocation(line: 288, column: 6, scope: !6301)
!6304 = !DILocation(line: 290, column: 6, scope: !6301)
!6305 = !DILocation(line: 292, column: 6, scope: !6301)
!6306 = !DILocation(line: 294, column: 6, scope: !6301)
!6307 = !DILocation(line: 296, column: 6, scope: !6301)
!6308 = !DILocation(line: 298, column: 6, scope: !6301)
!6309 = !DILocation(line: 300, column: 6, scope: !6301)
!6310 = !DILocation(line: 312, column: 7, scope: !6299)
!6311 = !DILocation(line: 316, column: 3, scope: !6289)
!6312 = !DILocation(line: 320, column: 21, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 317, column: 5)
!6314 = !DILocation(line: 321, column: 22, scope: !6313)
!6315 = !DILocation(line: 322, column: 24, scope: !6313)
!6316 = !DILocation(line: 323, column: 23, scope: !6313)
!6317 = !DILocation(line: 324, column: 23, scope: !6313)
!6318 = !DILocation(line: 326, column: 23, scope: !6313)
!6319 = !DILocation(line: 327, column: 27, scope: !6313)
!6320 = !DILocation(line: 328, column: 22, scope: !6313)
!6321 = !DILocation(line: 329, column: 21, scope: !6313)
!6322 = !DILocation(line: 330, column: 21, scope: !6313)
!6323 = !DILocation(line: 331, column: 28, scope: !6313)
!6324 = !DILocation(line: 332, column: 26, scope: !6313)
!6325 = !DILocation(line: 333, column: 19, scope: !6313)
!6326 = !DILocation(line: 334, column: 24, scope: !6313)
!6327 = !DILocation(line: 335, column: 23, scope: !6313)
!6328 = !DILocation(line: 336, column: 23, scope: !6313)
!6329 = !DILocation(line: 337, column: 29, scope: !6313)
!6330 = !DILocation(line: 338, column: 30, scope: !6313)
!6331 = !DILocation(line: 341, column: 7, scope: !6313)
!6332 = !DILocation(line: 344, column: 5, scope: !6289)
!6333 = !DILocation(line: 346, column: 1, scope: !6289)
!6334 = distinct !DISubprogram(name: "first_const_call_expr_arg", scope: !6, file: !6, line: 5426, type: !6335, scopeLine: 5427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6338)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!2774, !2774, !6337}
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 64)
!6338 = !{!6339, !6340}
!6339 = !DILocalVariable(name: "exp", arg: 1, scope: !6334, file: !6, line: 5426, type: !2774)
!6340 = !DILocalVariable(name: "iter", arg: 2, scope: !6334, file: !6, line: 5426, type: !6337)
!6341 = !DILocation(line: 0, scope: !6334)
!6342 = !DILocation(line: 5428, column: 3, scope: !6334)
!6343 = !DILocation(line: 5429, column: 10, scope: !6334)
!6344 = !DILocation(line: 5429, column: 3, scope: !6334)
!6345 = distinct !DISubprogram(name: "next_const_call_expr_arg", scope: !6, file: !6, line: 5404, type: !6346, scopeLine: 5405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6348)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{!2774, !6337}
!6348 = !{!6349, !6350}
!6349 = !DILocalVariable(name: "iter", arg: 1, scope: !6345, file: !6, line: 5404, type: !6337)
!6350 = !DILocalVariable(name: "result", scope: !6345, file: !6, line: 5406, type: !2774)
!6351 = !DILocation(line: 0, scope: !6345)
!6352 = !DILocation(line: 5407, column: 13, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6345, file: !6, line: 5407, column: 7)
!6354 = !DILocation(line: 5407, column: 24, scope: !6353)
!6355 = !DILocation(line: 5407, column: 15, scope: !6353)
!6356 = !DILocation(line: 5407, column: 7, scope: !6345)
!6357 = !DILocation(line: 5409, column: 12, scope: !6345)
!6358 = !DILocation(line: 5410, column: 10, scope: !6345)
!6359 = !DILocation(line: 5411, column: 3, scope: !6345)
!6360 = !DILocation(line: 5412, column: 1, scope: !6345)
!6361 = distinct !DISubprogram(name: "type_contains_placeholder_p", scope: !3, file: !3, line: 2856, type: !6091, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6362)
!6362 = !{!6363, !6364}
!6363 = !DILocalVariable(name: "type", arg: 1, scope: !6361, file: !3, line: 2856, type: !1457)
!6364 = !DILocalVariable(name: "result", scope: !6361, file: !3, line: 2858, type: !1449)
!6365 = !DILocation(line: 0, scope: !6361)
!6366 = !DILocation(line: 2862, column: 7, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2862, column: 7)
!6368 = !DILocation(line: 2862, column: 49, scope: !6367)
!6369 = !DILocation(line: 2862, column: 7, scope: !6361)
!6370 = !DILocation(line: 2863, column: 12, scope: !6367)
!6371 = !DILocation(line: 2863, column: 5, scope: !6367)
!6372 = !DILocation(line: 2867, column: 45, scope: !6361)
!6373 = !DILocation(line: 2870, column: 12, scope: !6361)
!6374 = !DILocation(line: 2873, column: 45, scope: !6361)
!6375 = !DILocation(line: 2875, column: 3, scope: !6361)
!6376 = !DILocation(line: 2876, column: 1, scope: !6361)
!6377 = distinct !DISubprogram(name: "type_contains_placeholder_1", scope: !3, file: !3, line: 2792, type: !4510, scopeLine: 2793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6378)
!6378 = !{!6379, !6380}
!6379 = !DILocalVariable(name: "type", arg: 1, scope: !6377, file: !3, line: 2792, type: !2774)
!6380 = !DILocalVariable(name: "field", scope: !6381, file: !3, line: 2834, type: !1457)
!6381 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 2833, column: 7)
!6382 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 2805, column: 5)
!6383 = !DILocation(line: 0, scope: !6377)
!6384 = !DILocation(line: 2796, column: 7, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 2796, column: 7)
!6386 = !DILocation(line: 2797, column: 7, scope: !6385)
!6387 = !DILocation(line: 2797, column: 10, scope: !6385)
!6388 = !DILocation(line: 2798, column: 7, scope: !6385)
!6389 = !DILocation(line: 2798, column: 11, scope: !6385)
!6390 = !DILocation(line: 2798, column: 28, scope: !6385)
!6391 = !DILocation(line: 2799, column: 4, scope: !6385)
!6392 = !DILocation(line: 2799, column: 7, scope: !6385)
!6393 = !DILocation(line: 2796, column: 7, scope: !6377)
!6394 = !DILocation(line: 2804, column: 11, scope: !6377)
!6395 = !DILocation(line: 2804, column: 3, scope: !6377)
!6396 = !DILocation(line: 2822, column: 15, scope: !6382)
!6397 = !DILocation(line: 2823, column: 8, scope: !6382)
!6398 = !DILocation(line: 2823, column: 11, scope: !6382)
!6399 = !DILocation(line: 2822, column: 7, scope: !6382)
!6400 = !DILocation(line: 2828, column: 43, scope: !6382)
!6401 = !DILocation(line: 2828, column: 14, scope: !6382)
!6402 = !DILocation(line: 2828, column: 7, scope: !6382)
!6403 = !DILocation(line: 2836, column: 15, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 2836, column: 2)
!6405 = !DILocation(line: 2836, column: 7, scope: !6404)
!6406 = !DILocation(line: 0, scope: !6404)
!6407 = !DILocation(line: 0, scope: !6381)
!6408 = !DILocation(line: 2836, column: 2, scope: !6404)
!6409 = !DILocation(line: 2837, column: 8, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2837, column: 8)
!6411 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 2836, column: 2)
!6412 = !DILocation(line: 2837, column: 26, scope: !6410)
!6413 = !DILocation(line: 2838, column: 8, scope: !6410)
!6414 = !DILocation(line: 2838, column: 12, scope: !6410)
!6415 = !DILocation(line: 2839, column: 5, scope: !6410)
!6416 = !DILocation(line: 2839, column: 9, scope: !6410)
!6417 = !DILocation(line: 2839, column: 26, scope: !6410)
!6418 = !DILocation(line: 2840, column: 9, scope: !6410)
!6419 = !DILocation(line: 2840, column: 12, scope: !6410)
!6420 = !DILocation(line: 2841, column: 5, scope: !6410)
!6421 = !DILocation(line: 2841, column: 37, scope: !6410)
!6422 = !DILocation(line: 2841, column: 8, scope: !6410)
!6423 = !DILocation(line: 2837, column: 8, scope: !6411)
!6424 = !DILocation(line: 2836, column: 50, scope: !6411)
!6425 = !DILocation(line: 2836, column: 2, scope: !6411)
!6426 = distinct !{!6426, !6408, !6427}
!6427 = !DILocation(line: 2842, column: 13, scope: !6404)
!6428 = !DILocation(line: 2848, column: 7, scope: !6382)
!6429 = !DILocation(line: 2851, column: 5, scope: !6377)
!6430 = !DILocation(line: 2853, column: 1, scope: !6377)
!6431 = distinct !DISubprogram(name: "find_placeholder_in_expr", scope: !3, file: !3, line: 2902, type: !6432, scopeLine: 2903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6435)
!6432 = !DISubroutineType(types: !6433)
!6433 = !{null, !1457, !6434}
!6434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!6435 = !{!6436, !6437, !6438, !6439, !6440}
!6436 = !DILocalVariable(name: "exp", arg: 1, scope: !6431, file: !3, line: 2902, type: !1457)
!6437 = !DILocalVariable(name: "refs", arg: 2, scope: !6431, file: !3, line: 2902, type: !6434)
!6438 = !DILocalVariable(name: "code", scope: !6431, file: !3, line: 2904, type: !155)
!6439 = !DILocalVariable(name: "inner", scope: !6431, file: !3, line: 2905, type: !1457)
!6440 = !DILocalVariable(name: "i", scope: !6431, file: !3, line: 2906, type: !1450)
!6441 = !DILocation(line: 2912, column: 7, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 2912, column: 7)
!6443 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2912, column: 7)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 2910, column: 5)
!6445 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 2909, column: 7)
!6446 = !DILocation(line: 0, scope: !6431)
!6447 = !DILocation(line: 2904, column: 25, scope: !6431)
!6448 = !DILocation(line: 2909, column: 7, scope: !6431)
!6449 = !DILocation(line: 2911, column: 7, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 2911, column: 7)
!6451 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2911, column: 7)
!6452 = !DILocation(line: 2911, column: 7, scope: !6451)
!6453 = !DILocation(line: 2912, column: 7, scope: !6443)
!6454 = !DILocation(line: 0, scope: !6445)
!6455 = !DILocation(line: 2916, column: 12, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 2916, column: 7)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2915, column: 5)
!6458 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 2914, column: 12)
!6459 = !DILocation(line: 0, scope: !6456)
!6460 = !DILocation(line: 2917, column: 5, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 2916, column: 7)
!6462 = !DILocation(line: 2916, column: 7, scope: !6456)
!6463 = !DILocation(line: 2916, column: 7, scope: !6461)
!6464 = distinct !{!6464, !6462, !6465}
!6465 = !DILocation(line: 2919, column: 2, scope: !6456)
!6466 = !DILocation(line: 2921, column: 29, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 2921, column: 11)
!6468 = !DILocation(line: 2921, column: 11, scope: !6457)
!6469 = !DILocation(line: 2922, column: 2, scope: !6467)
!6470 = !DILocation(line: 2924, column: 2, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2924, column: 2)
!6472 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 2924, column: 2)
!6473 = !DILocation(line: 2924, column: 2, scope: !6472)
!6474 = !DILocation(line: 2927, column: 13, scope: !6458)
!6475 = !DILocation(line: 2927, column: 5, scope: !6458)
!6476 = !DILocation(line: 0, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 2960, column: 4)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 2960, column: 4)
!6479 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 2959, column: 2)
!6480 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2959, column: 2)
!6481 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2928, column: 7)
!6482 = !DILocation(line: 2959, column: 2, scope: !6480)
!6483 = !DILocation(line: 2934, column: 14, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2934, column: 13)
!6485 = !DILocation(line: 2934, column: 13, scope: !6481)
!6486 = !DILocation(line: 2935, column: 4, scope: !6484)
!6487 = !DILocation(line: 2940, column: 11, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2940, column: 6)
!6489 = !DILocation(line: 2941, column: 6, scope: !6488)
!6490 = !DILocation(line: 2941, column: 9, scope: !6488)
!6491 = !DILocation(line: 2941, column: 43, scope: !6488)
!6492 = !DILocation(line: 2940, column: 6, scope: !6481)
!6493 = !DILocation(line: 2943, column: 6, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 2942, column: 4)
!6495 = !DILocation(line: 2944, column: 6, scope: !6494)
!6496 = !DILocation(line: 0, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 2954, column: 2)
!6498 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2954, column: 2)
!6499 = !DILocation(line: 0, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 2955, column: 4)
!6501 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 2955, column: 4)
!6502 = !DILocation(line: 2954, column: 16, scope: !6497)
!6503 = !DILocation(line: 2954, column: 7, scope: !6498)
!6504 = !DILocation(line: 0, scope: !6498)
!6505 = !DILocation(line: 2954, column: 2, scope: !6498)
!6506 = !DILocation(line: 2955, column: 4, scope: !6500)
!6507 = !DILocation(line: 2955, column: 4, scope: !6501)
!6508 = !DILocation(line: 2954, column: 44, scope: !6497)
!6509 = !DILocation(line: 2954, column: 2, scope: !6497)
!6510 = distinct !{!6510, !6505, !6511}
!6511 = !DILocation(line: 2955, column: 4, scope: !6498)
!6512 = !DILocation(line: 0, scope: !6480)
!6513 = !DILocation(line: 2959, column: 18, scope: !6479)
!6514 = !DILocation(line: 2959, column: 16, scope: !6479)
!6515 = !DILocation(line: 2960, column: 4, scope: !6477)
!6516 = !DILocation(line: 2960, column: 4, scope: !6478)
!6517 = !DILocation(line: 2959, column: 46, scope: !6479)
!6518 = !DILocation(line: 2959, column: 2, scope: !6479)
!6519 = distinct !{!6519, !6482, !6520}
!6520 = !DILocation(line: 2960, column: 4, scope: !6480)
!6521 = !DILocation(line: 2964, column: 2, scope: !6481)
!6522 = !DILocation(line: 2965, column: 7, scope: !6481)
!6523 = !DILocation(line: 2966, column: 1, scope: !6431)
!6524 = distinct !DISubprogram(name: "push_without_duplicates", scope: !3, file: !3, line: 2881, type: !6432, scopeLine: 2882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6525)
!6525 = !{!6526, !6527, !6528, !6529}
!6526 = !DILocalVariable(name: "exp", arg: 1, scope: !6524, file: !3, line: 2881, type: !1457)
!6527 = !DILocalVariable(name: "queue", arg: 2, scope: !6524, file: !3, line: 2881, type: !6434)
!6528 = !DILocalVariable(name: "i", scope: !6524, file: !3, line: 2883, type: !7)
!6529 = !DILocalVariable(name: "iter", scope: !6524, file: !3, line: 2884, type: !1457)
!6530 = !DILocation(line: 0, scope: !6524)
!6531 = !DILocation(line: 2884, column: 3, scope: !6524)
!6532 = !DILocation(line: 2886, column: 8, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2886, column: 3)
!6534 = !DILocation(line: 0, scope: !6533)
!6535 = !DILocation(line: 2886, column: 15, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 2886, column: 3)
!6537 = !DILocation(line: 2886, column: 3, scope: !6533)
!6538 = !DILocation(line: 2887, column: 27, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 2887, column: 9)
!6540 = !DILocation(line: 2887, column: 9, scope: !6539)
!6541 = !DILocation(line: 2887, column: 38, scope: !6539)
!6542 = !DILocation(line: 2887, column: 9, scope: !6536)
!6543 = !DILocation(line: 2886, column: 53, scope: !6536)
!6544 = !DILocation(line: 2886, column: 3, scope: !6536)
!6545 = distinct !{!6545, !6537, !6546}
!6546 = !DILocation(line: 2888, column: 7, scope: !6533)
!6547 = !DILocation(line: 2890, column: 8, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2890, column: 7)
!6549 = !DILocation(line: 2890, column: 7, scope: !6524)
!6550 = !DILocation(line: 2891, column: 5, scope: !6548)
!6551 = !DILocation(line: 2892, column: 1, scope: !6524)
!6552 = distinct !DISubprogram(name: "tree_operand_length", scope: !6, file: !6, line: 5347, type: !4737, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6553)
!6553 = !{!6554}
!6554 = !DILocalVariable(name: "node", arg: 1, scope: !6552, file: !6, line: 5347, type: !2774)
!6555 = !DILocation(line: 0, scope: !6552)
!6556 = !DILocation(line: 5349, column: 7, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6552, file: !6, line: 5349, column: 7)
!6558 = !DILocation(line: 5349, column: 7, scope: !6552)
!6559 = !DILocation(line: 5350, column: 12, scope: !6557)
!6560 = !DILocation(line: 5350, column: 5, scope: !6557)
!6561 = !DILocation(line: 5352, column: 12, scope: !6557)
!6562 = !DILocation(line: 5352, column: 5, scope: !6557)
!6563 = !DILocation(line: 0, scope: !6557)
!6564 = !DILocation(line: 5353, column: 1, scope: !6552)
!6565 = distinct !DISubprogram(name: "substitute_in_expr", scope: !3, file: !3, line: 2976, type: !4608, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6566)
!6566 = !{!6567, !6568, !6569, !6570, !6571, !6572, !6573, !6574, !6575, !6576, !6580, !6583, !6586, !6590}
!6567 = !DILocalVariable(name: "exp", arg: 1, scope: !6565, file: !3, line: 2976, type: !1457)
!6568 = !DILocalVariable(name: "f", arg: 2, scope: !6565, file: !3, line: 2976, type: !1457)
!6569 = !DILocalVariable(name: "r", arg: 3, scope: !6565, file: !3, line: 2976, type: !1457)
!6570 = !DILocalVariable(name: "code", scope: !6565, file: !3, line: 2978, type: !155)
!6571 = !DILocalVariable(name: "op0", scope: !6565, file: !3, line: 2979, type: !1457)
!6572 = !DILocalVariable(name: "op1", scope: !6565, file: !3, line: 2979, type: !1457)
!6573 = !DILocalVariable(name: "op2", scope: !6565, file: !3, line: 2979, type: !1457)
!6574 = !DILocalVariable(name: "op3", scope: !6565, file: !3, line: 2979, type: !1457)
!6575 = !DILocalVariable(name: "new_tree", scope: !6565, file: !3, line: 2980, type: !1457)
!6576 = !DILocalVariable(name: "inner", scope: !6577, file: !3, line: 2994, type: !1457)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2993, column: 5)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2992, column: 12)
!6579 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 2983, column: 7)
!6580 = !DILocalVariable(name: "i", scope: !6581, file: !3, line: 3100, type: !1450)
!6581 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 3099, column: 2)
!6582 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 3022, column: 7)
!6583 = !DILocalVariable(name: "t", scope: !6584, file: !3, line: 3110, type: !1457)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 3109, column: 6)
!6585 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 3108, column: 8)
!6586 = !DILocalVariable(name: "op", scope: !6587, file: !3, line: 3117, type: !1457)
!6587 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 3116, column: 6)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 3115, column: 4)
!6589 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 3115, column: 4)
!6590 = !DILocalVariable(name: "new_op", scope: !6587, file: !3, line: 3118, type: !1457)
!6591 = !DILocation(line: 0, scope: !6565)
!6592 = !DILocation(line: 2978, column: 25, scope: !6565)
!6593 = !DILocation(line: 2983, column: 7, scope: !6565)
!6594 = !DILocation(line: 2985, column: 13, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2984, column: 5)
!6596 = !DILocation(line: 2986, column: 13, scope: !6595)
!6597 = !DILocation(line: 2987, column: 18, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 2987, column: 11)
!6599 = !DILocation(line: 2987, column: 15, scope: !6598)
!6600 = !DILocation(line: 2987, column: 35, scope: !6598)
!6601 = !DILocation(line: 2987, column: 45, scope: !6598)
!6602 = !DILocation(line: 2987, column: 42, scope: !6598)
!6603 = !DILocation(line: 2987, column: 11, scope: !6595)
!6604 = !DILocation(line: 2990, column: 14, scope: !6595)
!6605 = !DILocation(line: 2990, column: 7, scope: !6595)
!6606 = !DILocation(line: 2998, column: 12, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2998, column: 7)
!6608 = !DILocation(line: 0, scope: !6607)
!6609 = !DILocation(line: 0, scope: !6577)
!6610 = !DILocation(line: 2999, column: 5, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 2998, column: 7)
!6612 = !DILocation(line: 2998, column: 7, scope: !6607)
!6613 = !DILocation(line: 2998, column: 7, scope: !6611)
!6614 = distinct !{!6614, !6612, !6615}
!6615 = !DILocation(line: 3001, column: 2, scope: !6607)
!6616 = !DILocation(line: 3004, column: 13, scope: !6577)
!6617 = !DILocation(line: 3006, column: 29, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 3006, column: 11)
!6619 = !DILocation(line: 3006, column: 56, scope: !6618)
!6620 = !DILocation(line: 3006, column: 49, scope: !6618)
!6621 = !DILocation(line: 3010, column: 49, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 3010, column: 11)
!6623 = !DILocation(line: 3010, column: 53, scope: !6622)
!6624 = !DILocation(line: 3010, column: 11, scope: !6577)
!6625 = !DILocation(line: 3013, column: 13, scope: !6577)
!6626 = !DILocation(line: 3014, column: 18, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 3014, column: 11)
!6628 = !DILocation(line: 3014, column: 15, scope: !6627)
!6629 = !DILocation(line: 3014, column: 11, scope: !6577)
!6630 = !DILocation(line: 3018, column: 4, scope: !6577)
!6631 = !DILocation(line: 3019, column: 4, scope: !6578)
!6632 = !DILocation(line: 3021, column: 13, scope: !6578)
!6633 = !DILocation(line: 3021, column: 5, scope: !6578)
!6634 = !DILocation(line: 3027, column: 10, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 3027, column: 6)
!6636 = !DILocation(line: 0, scope: !6635)
!6637 = !DILocation(line: 3033, column: 10, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 3033, column: 6)
!6639 = !DILocation(line: 3033, column: 6, scope: !6582)
!6640 = !DILocation(line: 3043, column: 10, scope: !6582)
!6641 = !DILocation(line: 3043, column: 2, scope: !6582)
!6642 = !DILocation(line: 3049, column: 12, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 3044, column: 4)
!6644 = !DILocation(line: 3050, column: 17, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 3050, column: 10)
!6646 = !DILocation(line: 3050, column: 14, scope: !6645)
!6647 = !DILocation(line: 3050, column: 10, scope: !6643)
!6648 = !DILocation(line: 3053, column: 17, scope: !6643)
!6649 = !DILocation(line: 3054, column: 6, scope: !6643)
!6650 = !DILocation(line: 3057, column: 12, scope: !6643)
!6651 = !DILocation(line: 3058, column: 12, scope: !6643)
!6652 = !DILocation(line: 3060, column: 17, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 3060, column: 10)
!6654 = !DILocation(line: 3060, column: 14, scope: !6653)
!6655 = !DILocation(line: 3060, column: 39, scope: !6653)
!6656 = !DILocation(line: 3060, column: 49, scope: !6653)
!6657 = !DILocation(line: 3060, column: 46, scope: !6653)
!6658 = !DILocation(line: 3060, column: 10, scope: !6643)
!6659 = !DILocation(line: 3063, column: 17, scope: !6643)
!6660 = !DILocation(line: 3064, column: 6, scope: !6643)
!6661 = !DILocation(line: 3067, column: 12, scope: !6643)
!6662 = !DILocation(line: 3068, column: 12, scope: !6643)
!6663 = !DILocation(line: 3069, column: 12, scope: !6643)
!6664 = !DILocation(line: 3071, column: 17, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 3071, column: 10)
!6666 = !DILocation(line: 3071, column: 14, scope: !6665)
!6667 = !DILocation(line: 3071, column: 39, scope: !6665)
!6668 = !DILocation(line: 3071, column: 49, scope: !6665)
!6669 = !DILocation(line: 3071, column: 46, scope: !6665)
!6670 = !DILocation(line: 3072, column: 3, scope: !6665)
!6671 = !DILocation(line: 3072, column: 13, scope: !6665)
!6672 = !DILocation(line: 3072, column: 10, scope: !6665)
!6673 = !DILocation(line: 3071, column: 10, scope: !6643)
!6674 = !DILocation(line: 3075, column: 17, scope: !6643)
!6675 = !DILocation(line: 3076, column: 6, scope: !6643)
!6676 = !DILocation(line: 3079, column: 12, scope: !6643)
!6677 = !DILocation(line: 3080, column: 12, scope: !6643)
!6678 = !DILocation(line: 3081, column: 12, scope: !6643)
!6679 = !DILocation(line: 3082, column: 12, scope: !6643)
!6680 = !DILocation(line: 3084, column: 17, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 3084, column: 10)
!6682 = !DILocation(line: 3084, column: 14, scope: !6681)
!6683 = !DILocation(line: 3084, column: 39, scope: !6681)
!6684 = !DILocation(line: 3084, column: 49, scope: !6681)
!6685 = !DILocation(line: 3084, column: 46, scope: !6681)
!6686 = !DILocation(line: 3085, column: 3, scope: !6681)
!6687 = !DILocation(line: 3085, column: 13, scope: !6681)
!6688 = !DILocation(line: 3085, column: 10, scope: !6681)
!6689 = !DILocation(line: 3086, column: 3, scope: !6681)
!6690 = !DILocation(line: 3086, column: 13, scope: !6681)
!6691 = !DILocation(line: 3086, column: 10, scope: !6681)
!6692 = !DILocation(line: 3084, column: 10, scope: !6643)
!6693 = !DILocation(line: 3090, column: 16, scope: !6643)
!6694 = !DILocation(line: 3090, column: 10, scope: !6643)
!6695 = !DILocation(line: 3091, column: 6, scope: !6643)
!6696 = !DILocation(line: 3094, column: 6, scope: !6643)
!6697 = !DILocation(line: 3095, column: 4, scope: !6643)
!6698 = !DILocation(line: 3108, column: 8, scope: !6585)
!6699 = !DILocation(line: 3108, column: 37, scope: !6585)
!6700 = !DILocation(line: 3108, column: 29, scope: !6585)
!6701 = !DILocation(line: 3110, column: 17, scope: !6584)
!6702 = !DILocation(line: 0, scope: !6584)
!6703 = !DILocation(line: 3111, column: 12, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 3111, column: 12)
!6705 = !DILocation(line: 3111, column: 12, scope: !6584)
!6706 = !DILocation(line: 3112, column: 10, scope: !6704)
!6707 = !DILocation(line: 0, scope: !6581)
!6708 = !DILocation(line: 0, scope: !6587)
!6709 = !DILocation(line: 3115, column: 9, scope: !6589)
!6710 = !DILocation(line: 3102, column: 13, scope: !6581)
!6711 = !DILocation(line: 3115, column: 20, scope: !6588)
!6712 = !DILocation(line: 3115, column: 18, scope: !6588)
!6713 = !DILocation(line: 3115, column: 4, scope: !6589)
!6714 = !DILocation(line: 3117, column: 18, scope: !6587)
!6715 = !DILocation(line: 3118, column: 22, scope: !6587)
!6716 = !DILocation(line: 3119, column: 19, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 3119, column: 12)
!6718 = !DILocation(line: 3119, column: 12, scope: !6587)
!6719 = !DILocation(line: 3121, column: 10, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 3121, column: 9)
!6721 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 3120, column: 3)
!6722 = !DILocation(line: 3121, column: 9, scope: !6721)
!6723 = !DILocation(line: 3122, column: 18, scope: !6720)
!6724 = !DILocation(line: 3122, column: 7, scope: !6720)
!6725 = !DILocation(line: 3123, column: 5, scope: !6721)
!6726 = !DILocation(line: 3123, column: 32, scope: !6721)
!6727 = !DILocation(line: 3124, column: 3, scope: !6721)
!6728 = !DILocation(line: 3115, column: 48, scope: !6588)
!6729 = !DILocation(line: 3115, column: 4, scope: !6588)
!6730 = distinct !{!6730, !6713, !6731}
!6731 = !DILocation(line: 3125, column: 6, scope: !6589)
!6732 = !DILocation(line: 3127, column: 8, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 3127, column: 8)
!6734 = !DILocation(line: 3127, column: 8, scope: !6581)
!6735 = !DILocation(line: 3129, column: 19, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 3128, column: 6)
!6737 = !DILocation(line: 3130, column: 12, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 3130, column: 12)
!6739 = !DILocation(line: 3130, column: 33, scope: !6738)
!6740 = !DILocation(line: 3130, column: 12, scope: !6736)
!6741 = !DILocation(line: 3131, column: 3, scope: !6738)
!6742 = !DILocation(line: 3139, column: 2, scope: !6582)
!6743 = !DILocation(line: 3140, column: 7, scope: !6582)
!6744 = !DILocation(line: 3142, column: 31, scope: !6565)
!6745 = !DILocation(line: 3142, column: 3, scope: !6565)
!6746 = !DILocation(line: 3142, column: 28, scope: !6565)
!6747 = !DILocation(line: 3143, column: 3, scope: !6565)
!6748 = !DILocation(line: 3144, column: 1, scope: !6565)
!6749 = distinct !DISubprogram(name: "build4_stat", scope: !3, file: !3, line: 3766, type: !6750, scopeLine: 3768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6752)
!6750 = !DISubroutineType(types: !6751)
!6751 = !{!1457, !155, !1457, !1457, !1457, !1457, !1457}
!6752 = !{!6753, !6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762}
!6753 = !DILocalVariable(name: "code", arg: 1, scope: !6749, file: !3, line: 3766, type: !155)
!6754 = !DILocalVariable(name: "tt", arg: 2, scope: !6749, file: !3, line: 3766, type: !1457)
!6755 = !DILocalVariable(name: "arg0", arg: 3, scope: !6749, file: !3, line: 3766, type: !1457)
!6756 = !DILocalVariable(name: "arg1", arg: 4, scope: !6749, file: !3, line: 3766, type: !1457)
!6757 = !DILocalVariable(name: "arg2", arg: 5, scope: !6749, file: !3, line: 3767, type: !1457)
!6758 = !DILocalVariable(name: "arg3", arg: 6, scope: !6749, file: !3, line: 3767, type: !1457)
!6759 = !DILocalVariable(name: "constant", scope: !6749, file: !3, line: 3769, type: !1449)
!6760 = !DILocalVariable(name: "read_only", scope: !6749, file: !3, line: 3769, type: !1449)
!6761 = !DILocalVariable(name: "side_effects", scope: !6749, file: !3, line: 3769, type: !1449)
!6762 = !DILocalVariable(name: "t", scope: !6749, file: !3, line: 3770, type: !1457)
!6763 = !DILocation(line: 0, scope: !6749)
!6764 = !DILocation(line: 3772, column: 3, scope: !6749)
!6765 = !DILocation(line: 3774, column: 7, scope: !6749)
!6766 = !DILocation(line: 3775, column: 3, scope: !6749)
!6767 = !DILocation(line: 3775, column: 17, scope: !6749)
!6768 = !DILocation(line: 3777, column: 18, scope: !6749)
!6769 = !DILocation(line: 3779, column: 3, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 3779, column: 3)
!6771 = !DILocation(line: 3779, column: 3, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 3779, column: 3)
!6773 = !DILocation(line: 3779, column: 3, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 3779, column: 3)
!6775 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 3779, column: 3)
!6776 = !DILocation(line: 3779, column: 3, scope: !6775)
!6777 = !DILocation(line: 3780, column: 3, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 3780, column: 3)
!6779 = !DILocation(line: 3780, column: 3, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 3780, column: 3)
!6781 = !DILocation(line: 3780, column: 3, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 3780, column: 3)
!6783 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 3780, column: 3)
!6784 = !DILocation(line: 3780, column: 3, scope: !6783)
!6785 = !DILocation(line: 3781, column: 3, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 3781, column: 3)
!6787 = !DILocation(line: 3781, column: 3, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3781, column: 3)
!6789 = !DILocation(line: 3781, column: 3, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3781, column: 3)
!6791 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 3781, column: 3)
!6792 = !DILocation(line: 3781, column: 3, scope: !6791)
!6793 = !DILocation(line: 3782, column: 3, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 3782, column: 3)
!6795 = !DILocation(line: 3782, column: 3, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 3782, column: 3)
!6797 = !DILocation(line: 3782, column: 3, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 3782, column: 3)
!6799 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 3782, column: 3)
!6800 = !DILocation(line: 3782, column: 3, scope: !6799)
!6801 = !DILocation(line: 3784, column: 25, scope: !6749)
!6802 = !DILocation(line: 3786, column: 8, scope: !6749)
!6803 = !DILocation(line: 3786, column: 31, scope: !6749)
!6804 = !DILocation(line: 3787, column: 11, scope: !6749)
!6805 = !DILocation(line: 3787, column: 8, scope: !6749)
!6806 = !DILocation(line: 3787, column: 19, scope: !6749)
!6807 = !DILocation(line: 3786, column: 5, scope: !6749)
!6808 = !DILocation(line: 3789, column: 3, scope: !6749)
!6809 = distinct !DISubprogram(name: "process_call_operands", scope: !3, file: !3, line: 2673, type: !6810, scopeLine: 2674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6812)
!6810 = !DISubroutineType(types: !6811)
!6811 = !{null, !1457}
!6812 = !{!6813, !6814, !6815, !6816, !6817}
!6813 = !DILocalVariable(name: "t", arg: 1, scope: !6809, file: !3, line: 2673, type: !1457)
!6814 = !DILocalVariable(name: "side_effects", scope: !6809, file: !3, line: 2675, type: !1449)
!6815 = !DILocalVariable(name: "read_only", scope: !6809, file: !3, line: 2676, type: !1449)
!6816 = !DILocalVariable(name: "i", scope: !6809, file: !3, line: 2677, type: !1450)
!6817 = !DILocalVariable(name: "op", scope: !6818, file: !3, line: 2689, type: !1457)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 2688, column: 7)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2687, column: 5)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 2687, column: 5)
!6821 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2686, column: 7)
!6822 = !DILocation(line: 0, scope: !6809)
!6823 = !DILocation(line: 2675, column: 23, scope: !6809)
!6824 = !DILocation(line: 2677, column: 11, scope: !6809)
!6825 = !DILocation(line: 2680, column: 10, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2680, column: 7)
!6827 = !DILocation(line: 2680, column: 46, scope: !6826)
!6828 = !DILocation(line: 2680, column: 39, scope: !6826)
!6829 = !DILocation(line: 2683, column: 9, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2683, column: 7)
!6831 = !DILocation(line: 2683, column: 7, scope: !6809)
!6832 = !DILocation(line: 2686, column: 8, scope: !6821)
!6833 = !DILocation(line: 2686, column: 24, scope: !6821)
!6834 = !DILocation(line: 2686, column: 21, scope: !6821)
!6835 = !DILocation(line: 0, scope: !6818)
!6836 = !DILocation(line: 2687, column: 5, scope: !6820)
!6837 = !DILocation(line: 2684, column: 15, scope: !6830)
!6838 = !DILocation(line: 2687, column: 21, scope: !6819)
!6839 = !DILocation(line: 2687, column: 19, scope: !6819)
!6840 = !DILocation(line: 2689, column: 12, scope: !6818)
!6841 = !DILocation(line: 2690, column: 6, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 2690, column: 6)
!6843 = !DILocation(line: 2690, column: 9, scope: !6842)
!6844 = !DILocation(line: 2690, column: 12, scope: !6842)
!6845 = !DILocation(line: 2690, column: 6, scope: !6818)
!6846 = !DILocation(line: 2692, column: 9, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 2692, column: 6)
!6848 = !DILocation(line: 2692, column: 13, scope: !6847)
!6849 = !DILocation(line: 2692, column: 32, scope: !6847)
!6850 = !DILocation(line: 2692, column: 36, scope: !6847)
!6851 = !DILocation(line: 2692, column: 6, scope: !6818)
!6852 = !DILocation(line: 2687, column: 47, scope: !6819)
!6853 = !DILocation(line: 2687, column: 5, scope: !6819)
!6854 = distinct !{!6854, !6836, !6855}
!6855 = !DILocation(line: 2694, column: 7, scope: !6820)
!6856 = !DILocation(line: 2696, column: 3, scope: !6809)
!6857 = !DILocation(line: 2681, column: 18, scope: !6826)
!6858 = !DILocation(line: 2696, column: 25, scope: !6809)
!6859 = !DILocation(line: 2697, column: 21, scope: !6809)
!6860 = !DILocation(line: 2698, column: 1, scope: !6809)
!6861 = distinct !DISubprogram(name: "substitute_placeholder_in_expr", scope: !3, file: !3, line: 3150, type: !4530, scopeLine: 3151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6862)
!6862 = !{!6863, !6864, !6865, !6866, !6867, !6868, !6869, !6870, !6871, !6874, !6875, !6879, !6883}
!6863 = !DILocalVariable(name: "exp", arg: 1, scope: !6861, file: !3, line: 3150, type: !1457)
!6864 = !DILocalVariable(name: "obj", arg: 2, scope: !6861, file: !3, line: 3150, type: !1457)
!6865 = !DILocalVariable(name: "code", scope: !6861, file: !3, line: 3152, type: !155)
!6866 = !DILocalVariable(name: "op0", scope: !6861, file: !3, line: 3153, type: !1457)
!6867 = !DILocalVariable(name: "op1", scope: !6861, file: !3, line: 3153, type: !1457)
!6868 = !DILocalVariable(name: "op2", scope: !6861, file: !3, line: 3153, type: !1457)
!6869 = !DILocalVariable(name: "op3", scope: !6861, file: !3, line: 3153, type: !1457)
!6870 = !DILocalVariable(name: "new_tree", scope: !6861, file: !3, line: 3154, type: !1457)
!6871 = !DILocalVariable(name: "need_type", scope: !6872, file: !3, line: 3160, type: !1457)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 3159, column: 5)
!6873 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 3158, column: 7)
!6874 = !DILocalVariable(name: "elt", scope: !6872, file: !3, line: 3161, type: !1457)
!6875 = !DILocalVariable(name: "i", scope: !6876, file: !3, line: 3278, type: !1450)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 3277, column: 2)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3209, column: 7)
!6878 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 3198, column: 12)
!6879 = !DILocalVariable(name: "op", scope: !6880, file: !3, line: 3284, type: !1457)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 3283, column: 6)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 3282, column: 4)
!6882 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 3282, column: 4)
!6883 = !DILocalVariable(name: "new_op", scope: !6880, file: !3, line: 3285, type: !1457)
!6884 = !DILocation(line: 0, scope: !6861)
!6885 = !DILocation(line: 3152, column: 25, scope: !6861)
!6886 = !DILocation(line: 3158, column: 7, scope: !6861)
!6887 = !DILocation(line: 3160, column: 24, scope: !6872)
!6888 = !DILocation(line: 0, scope: !6872)
!6889 = !DILocation(line: 3163, column: 12, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 3163, column: 7)
!6891 = !DILocation(line: 0, scope: !6890)
!6892 = !DILocation(line: 3163, column: 27, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 3163, column: 7)
!6894 = !DILocation(line: 3163, column: 7, scope: !6890)
!6895 = !DILocation(line: 3176, column: 7, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 3176, column: 7)
!6897 = !DILocation(line: 3173, column: 6, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 3173, column: 6)
!6899 = !DILocation(line: 3173, column: 42, scope: !6898)
!6900 = !DILocation(line: 3173, column: 6, scope: !6893)
!6901 = !DILocation(line: 3164, column: 13, scope: !6893)
!6902 = !DILocation(line: 3164, column: 29, scope: !6893)
!6903 = !DILocation(line: 3165, column: 6, scope: !6893)
!6904 = !DILocation(line: 3165, column: 25, scope: !6893)
!6905 = !DILocation(line: 3164, column: 12, scope: !6893)
!6906 = !DILocation(line: 3166, column: 7, scope: !6893)
!6907 = !DILocation(line: 3167, column: 8, scope: !6893)
!6908 = !DILocation(line: 3168, column: 8, scope: !6893)
!6909 = !DILocation(line: 3168, column: 11, scope: !6893)
!6910 = !DILocation(line: 3169, column: 8, scope: !6893)
!6911 = !DILocation(line: 3169, column: 11, scope: !6893)
!6912 = !DILocation(line: 3170, column: 8, scope: !6893)
!6913 = !DILocation(line: 3170, column: 11, scope: !6893)
!6914 = !DILocation(line: 3171, column: 8, scope: !6893)
!6915 = !DILocation(line: 3171, column: 11, scope: !6893)
!6916 = !DILocation(line: 3167, column: 7, scope: !6893)
!6917 = !DILocation(line: 3172, column: 7, scope: !6893)
!6918 = !DILocation(line: 3163, column: 7, scope: !6893)
!6919 = distinct !{!6919, !6894, !6920}
!6920 = !DILocation(line: 3174, column: 11, scope: !6890)
!6921 = !DILocation(line: 0, scope: !6896)
!6922 = !DILocation(line: 3176, column: 27, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 3176, column: 7)
!6924 = !DILocation(line: 3186, column: 6, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 3186, column: 6)
!6926 = !DILocation(line: 3187, column: 6, scope: !6925)
!6927 = !DILocation(line: 3187, column: 10, scope: !6925)
!6928 = !DILocation(line: 3188, column: 3, scope: !6925)
!6929 = !DILocation(line: 3186, column: 6, scope: !6923)
!6930 = !DILocation(line: 3189, column: 11, scope: !6925)
!6931 = !DILocation(line: 3189, column: 4, scope: !6925)
!6932 = !DILocation(line: 3177, column: 13, scope: !6923)
!6933 = !DILocation(line: 3177, column: 29, scope: !6923)
!6934 = !DILocation(line: 3178, column: 6, scope: !6923)
!6935 = !DILocation(line: 3178, column: 25, scope: !6923)
!6936 = !DILocation(line: 3177, column: 12, scope: !6923)
!6937 = !DILocation(line: 3179, column: 7, scope: !6923)
!6938 = !DILocation(line: 3180, column: 8, scope: !6923)
!6939 = !DILocation(line: 3181, column: 8, scope: !6923)
!6940 = !DILocation(line: 3181, column: 11, scope: !6923)
!6941 = !DILocation(line: 3182, column: 8, scope: !6923)
!6942 = !DILocation(line: 3182, column: 11, scope: !6923)
!6943 = !DILocation(line: 3183, column: 8, scope: !6923)
!6944 = !DILocation(line: 3183, column: 11, scope: !6923)
!6945 = !DILocation(line: 3184, column: 8, scope: !6923)
!6946 = !DILocation(line: 3184, column: 11, scope: !6923)
!6947 = !DILocation(line: 3180, column: 7, scope: !6923)
!6948 = !DILocation(line: 3185, column: 7, scope: !6923)
!6949 = !DILocation(line: 3176, column: 7, scope: !6923)
!6950 = distinct !{!6950, !6895, !6951}
!6951 = !DILocation(line: 3189, column: 11, scope: !6896)
!6952 = !DILocation(line: 3200, column: 13, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3199, column: 5)
!6954 = !DILocation(line: 3201, column: 13, scope: !6953)
!6955 = !DILocation(line: 3202, column: 18, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 3202, column: 11)
!6957 = !DILocation(line: 3202, column: 15, scope: !6956)
!6958 = !DILocation(line: 3202, column: 35, scope: !6956)
!6959 = !DILocation(line: 3202, column: 45, scope: !6956)
!6960 = !DILocation(line: 3202, column: 42, scope: !6956)
!6961 = !DILocation(line: 3202, column: 11, scope: !6953)
!6962 = !DILocation(line: 3205, column: 14, scope: !6953)
!6963 = !DILocation(line: 3205, column: 7, scope: !6953)
!6964 = !DILocation(line: 3208, column: 13, scope: !6878)
!6965 = !DILocation(line: 3208, column: 5, scope: !6878)
!6966 = !DILocation(line: 0, scope: !6880)
!6967 = !DILocation(line: 3282, column: 4, scope: !6882)
!6968 = !DILocation(line: 3221, column: 10, scope: !6877)
!6969 = !DILocation(line: 3221, column: 2, scope: !6877)
!6970 = !DILocation(line: 3227, column: 12, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 3222, column: 4)
!6972 = !DILocation(line: 3228, column: 17, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 3228, column: 10)
!6974 = !DILocation(line: 3228, column: 14, scope: !6973)
!6975 = !DILocation(line: 3228, column: 10, scope: !6971)
!6976 = !DILocation(line: 3231, column: 17, scope: !6971)
!6977 = !DILocation(line: 3232, column: 6, scope: !6971)
!6978 = !DILocation(line: 3235, column: 12, scope: !6971)
!6979 = !DILocation(line: 3236, column: 12, scope: !6971)
!6980 = !DILocation(line: 3238, column: 17, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 3238, column: 10)
!6982 = !DILocation(line: 3238, column: 14, scope: !6981)
!6983 = !DILocation(line: 3238, column: 39, scope: !6981)
!6984 = !DILocation(line: 3238, column: 49, scope: !6981)
!6985 = !DILocation(line: 3238, column: 46, scope: !6981)
!6986 = !DILocation(line: 3238, column: 10, scope: !6971)
!6987 = !DILocation(line: 3241, column: 17, scope: !6971)
!6988 = !DILocation(line: 3242, column: 6, scope: !6971)
!6989 = !DILocation(line: 3245, column: 12, scope: !6971)
!6990 = !DILocation(line: 3246, column: 12, scope: !6971)
!6991 = !DILocation(line: 3247, column: 12, scope: !6971)
!6992 = !DILocation(line: 3249, column: 17, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 3249, column: 10)
!6994 = !DILocation(line: 3249, column: 14, scope: !6993)
!6995 = !DILocation(line: 3249, column: 39, scope: !6993)
!6996 = !DILocation(line: 3249, column: 49, scope: !6993)
!6997 = !DILocation(line: 3249, column: 46, scope: !6993)
!6998 = !DILocation(line: 3250, column: 3, scope: !6993)
!6999 = !DILocation(line: 3250, column: 13, scope: !6993)
!7000 = !DILocation(line: 3250, column: 10, scope: !6993)
!7001 = !DILocation(line: 3249, column: 10, scope: !6971)
!7002 = !DILocation(line: 3253, column: 17, scope: !6971)
!7003 = !DILocation(line: 3254, column: 6, scope: !6971)
!7004 = !DILocation(line: 3257, column: 12, scope: !6971)
!7005 = !DILocation(line: 3258, column: 12, scope: !6971)
!7006 = !DILocation(line: 3259, column: 12, scope: !6971)
!7007 = !DILocation(line: 3260, column: 12, scope: !6971)
!7008 = !DILocation(line: 3262, column: 17, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 3262, column: 10)
!7010 = !DILocation(line: 3262, column: 14, scope: !7009)
!7011 = !DILocation(line: 3262, column: 39, scope: !7009)
!7012 = !DILocation(line: 3262, column: 49, scope: !7009)
!7013 = !DILocation(line: 3262, column: 46, scope: !7009)
!7014 = !DILocation(line: 3263, column: 3, scope: !7009)
!7015 = !DILocation(line: 3263, column: 13, scope: !7009)
!7016 = !DILocation(line: 3263, column: 10, scope: !7009)
!7017 = !DILocation(line: 3264, column: 3, scope: !7009)
!7018 = !DILocation(line: 3264, column: 13, scope: !7009)
!7019 = !DILocation(line: 3264, column: 10, scope: !7009)
!7020 = !DILocation(line: 3262, column: 10, scope: !6971)
!7021 = !DILocation(line: 3268, column: 16, scope: !6971)
!7022 = !DILocation(line: 3268, column: 10, scope: !6971)
!7023 = !DILocation(line: 3269, column: 6, scope: !6971)
!7024 = !DILocation(line: 3272, column: 6, scope: !6971)
!7025 = !DILocation(line: 3273, column: 4, scope: !6971)
!7026 = !DILocation(line: 3280, column: 13, scope: !6876)
!7027 = !DILocation(line: 0, scope: !6876)
!7028 = !DILocation(line: 3282, column: 20, scope: !6881)
!7029 = !DILocation(line: 3282, column: 18, scope: !6881)
!7030 = !DILocation(line: 3284, column: 18, scope: !6880)
!7031 = !DILocation(line: 3285, column: 22, scope: !6880)
!7032 = !DILocation(line: 3286, column: 19, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 3286, column: 12)
!7034 = !DILocation(line: 3286, column: 12, scope: !6880)
!7035 = !DILocation(line: 3288, column: 10, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 3288, column: 9)
!7037 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 3287, column: 3)
!7038 = !DILocation(line: 3288, column: 9, scope: !7037)
!7039 = !DILocation(line: 3289, column: 18, scope: !7036)
!7040 = !DILocation(line: 3289, column: 7, scope: !7036)
!7041 = !DILocation(line: 3290, column: 5, scope: !7037)
!7042 = !DILocation(line: 3290, column: 32, scope: !7037)
!7043 = !DILocation(line: 3291, column: 3, scope: !7037)
!7044 = !DILocation(line: 3282, column: 48, scope: !6881)
!7045 = !DILocation(line: 3282, column: 4, scope: !6881)
!7046 = distinct !{!7046, !6967, !7047}
!7047 = !DILocation(line: 3292, column: 6, scope: !6882)
!7048 = !DILocation(line: 3294, column: 8, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 3294, column: 8)
!7050 = !DILocation(line: 3294, column: 8, scope: !6876)
!7051 = !DILocation(line: 3296, column: 19, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 3295, column: 6)
!7053 = !DILocation(line: 3297, column: 12, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 3297, column: 12)
!7055 = !DILocation(line: 3297, column: 33, scope: !7054)
!7056 = !DILocation(line: 3297, column: 12, scope: !7052)
!7057 = !DILocation(line: 3298, column: 3, scope: !7054)
!7058 = !DILocation(line: 3306, column: 2, scope: !6877)
!7059 = !DILocation(line: 3307, column: 7, scope: !6877)
!7060 = !DILocation(line: 3309, column: 31, scope: !6861)
!7061 = !DILocation(line: 3309, column: 3, scope: !6861)
!7062 = !DILocation(line: 3309, column: 28, scope: !6861)
!7063 = !DILocation(line: 3310, column: 3, scope: !6861)
!7064 = !DILocation(line: 3311, column: 1, scope: !6861)
!7065 = distinct !DISubprogram(name: "stabilize_reference", scope: !3, file: !3, line: 3322, type: !3923, scopeLine: 3323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7066)
!7066 = !{!7067, !7068, !7069}
!7067 = !DILocalVariable(name: "ref", arg: 1, scope: !7065, file: !3, line: 3322, type: !1457)
!7068 = !DILocalVariable(name: "result", scope: !7065, file: !3, line: 3324, type: !1457)
!7069 = !DILocalVariable(name: "code", scope: !7065, file: !3, line: 3325, type: !155)
!7070 = !DILocation(line: 0, scope: !7065)
!7071 = !DILocation(line: 3325, column: 25, scope: !7065)
!7072 = !DILocation(line: 3327, column: 3, scope: !7065)
!7073 = !DILocation(line: 3338, column: 53, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 3328, column: 5)
!7075 = !DILocation(line: 3338, column: 32, scope: !7074)
!7076 = !DILocation(line: 3338, column: 16, scope: !7074)
!7077 = !DILocation(line: 3339, column: 7, scope: !7074)
!7078 = !DILocation(line: 3343, column: 28, scope: !7074)
!7079 = !DILocation(line: 3343, column: 5, scope: !7074)
!7080 = !DILocation(line: 3342, column: 16, scope: !7074)
!7081 = !DILocation(line: 3344, column: 7, scope: !7074)
!7082 = !DILocation(line: 3348, column: 26, scope: !7074)
!7083 = !DILocation(line: 3348, column: 5, scope: !7074)
!7084 = !DILocation(line: 3349, column: 5, scope: !7074)
!7085 = !DILocation(line: 3347, column: 16, scope: !7074)
!7086 = !DILocation(line: 3350, column: 7, scope: !7074)
!7087 = !DILocation(line: 3354, column: 26, scope: !7074)
!7088 = !DILocation(line: 3354, column: 5, scope: !7074)
!7089 = !DILocation(line: 3355, column: 28, scope: !7074)
!7090 = !DILocation(line: 3355, column: 5, scope: !7074)
!7091 = !DILocation(line: 3356, column: 28, scope: !7074)
!7092 = !DILocation(line: 3356, column: 5, scope: !7074)
!7093 = !DILocation(line: 3353, column: 16, scope: !7074)
!7094 = !DILocation(line: 3357, column: 7, scope: !7074)
!7095 = !DILocation(line: 3361, column: 26, scope: !7074)
!7096 = !DILocation(line: 3361, column: 5, scope: !7074)
!7097 = !DILocation(line: 3362, column: 28, scope: !7074)
!7098 = !DILocation(line: 3362, column: 5, scope: !7074)
!7099 = !DILocation(line: 3363, column: 5, scope: !7074)
!7100 = !DILocation(line: 3363, column: 28, scope: !7074)
!7101 = !DILocation(line: 3360, column: 16, scope: !7074)
!7102 = !DILocation(line: 3364, column: 7, scope: !7074)
!7103 = !DILocation(line: 3368, column: 26, scope: !7074)
!7104 = !DILocation(line: 3368, column: 5, scope: !7074)
!7105 = !DILocation(line: 3369, column: 28, scope: !7074)
!7106 = !DILocation(line: 3369, column: 5, scope: !7074)
!7107 = !DILocation(line: 3370, column: 5, scope: !7074)
!7108 = !DILocation(line: 3370, column: 28, scope: !7074)
!7109 = !DILocation(line: 3367, column: 16, scope: !7074)
!7110 = !DILocation(line: 3371, column: 7, scope: !7074)
!7111 = !DILocation(line: 3377, column: 14, scope: !7074)
!7112 = !DILocation(line: 3377, column: 7, scope: !7074)
!7113 = !DILocation(line: 3385, column: 14, scope: !7074)
!7114 = !DILocation(line: 3385, column: 7, scope: !7074)
!7115 = !DILocation(line: 0, scope: !7074)
!7116 = !DILocation(line: 3388, column: 24, scope: !7065)
!7117 = !DILocation(line: 3388, column: 3, scope: !7065)
!7118 = !DILocation(line: 3388, column: 22, scope: !7065)
!7119 = !DILocation(line: 3389, column: 28, scope: !7065)
!7120 = !DILocation(line: 3389, column: 3, scope: !7065)
!7121 = !DILocation(line: 3389, column: 26, scope: !7065)
!7122 = !DILocation(line: 3390, column: 32, scope: !7065)
!7123 = !DILocation(line: 3390, column: 30, scope: !7065)
!7124 = !DILocation(line: 3391, column: 33, scope: !7065)
!7125 = !DILocation(line: 3391, column: 31, scope: !7065)
!7126 = !DILocation(line: 3393, column: 3, scope: !7065)
!7127 = !DILocation(line: 3394, column: 1, scope: !7065)
!7128 = distinct !DISubprogram(name: "build_nt", scope: !3, file: !3, line: 3857, type: !7129, scopeLine: 3858, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7131)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{!1457, !155, null}
!7131 = !{!7132, !7133, !7134, !7135, !7136}
!7132 = !DILocalVariable(name: "code", arg: 1, scope: !7128, file: !3, line: 3857, type: !155)
!7133 = !DILocalVariable(name: "t", scope: !7128, file: !3, line: 3859, type: !1457)
!7134 = !DILocalVariable(name: "length", scope: !7128, file: !3, line: 3860, type: !1450)
!7135 = !DILocalVariable(name: "i", scope: !7128, file: !3, line: 3861, type: !1450)
!7136 = !DILocalVariable(name: "p", scope: !7128, file: !3, line: 3862, type: !7137)
!7137 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !7138, line: 52, baseType: !7139)
!7138 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!7139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !7140, line: 32, baseType: !7141)
!7140 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stdarg.h", directory: "")
!7141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 3862, baseType: !7142)
!7142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2935, size: 192, elements: !1556)
!7143 = !DILocation(line: 0, scope: !7128)
!7144 = !DILocation(line: 3862, column: 3, scope: !7128)
!7145 = !DILocation(line: 3862, column: 11, scope: !7128)
!7146 = !DILocation(line: 3864, column: 3, scope: !7128)
!7147 = !DILocation(line: 3866, column: 3, scope: !7128)
!7148 = !DILocation(line: 3868, column: 7, scope: !7128)
!7149 = !DILocation(line: 3869, column: 12, scope: !7128)
!7150 = !DILocation(line: 0, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 3871, column: 3)
!7152 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 3871, column: 3)
!7153 = !DILocation(line: 3871, column: 17, scope: !7151)
!7154 = !DILocation(line: 3871, column: 8, scope: !7152)
!7155 = !DILocation(line: 0, scope: !7152)
!7156 = !DILocation(line: 3871, column: 3, scope: !7152)
!7157 = !DILocation(line: 3872, column: 27, scope: !7151)
!7158 = !DILocation(line: 3872, column: 5, scope: !7151)
!7159 = !DILocation(line: 3872, column: 25, scope: !7151)
!7160 = !DILocation(line: 3871, column: 28, scope: !7151)
!7161 = !DILocation(line: 3871, column: 3, scope: !7151)
!7162 = distinct !{!7162, !7156, !7163}
!7163 = !DILocation(line: 3872, column: 27, scope: !7152)
!7164 = !DILocation(line: 3874, column: 3, scope: !7128)
!7165 = !DILocation(line: 3876, column: 1, scope: !7128)
!7166 = !DILocation(line: 3875, column: 3, scope: !7128)
!7167 = distinct !DISubprogram(name: "stabilize_reference_1", scope: !3, file: !3, line: 3410, type: !3923, scopeLine: 3411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7168)
!7168 = !{!7169, !7170, !7171}
!7169 = !DILocalVariable(name: "e", arg: 1, scope: !7167, file: !3, line: 3410, type: !1457)
!7170 = !DILocalVariable(name: "result", scope: !7167, file: !3, line: 3412, type: !1457)
!7171 = !DILocalVariable(name: "code", scope: !7167, file: !3, line: 3413, type: !155)
!7172 = !DILocation(line: 0, scope: !7167)
!7173 = !DILocation(line: 3413, column: 25, scope: !7167)
!7174 = !DILocation(line: 3420, column: 7, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 3420, column: 7)
!7176 = !DILocation(line: 3420, column: 7, scope: !7167)
!7177 = !DILocation(line: 3423, column: 11, scope: !7167)
!7178 = !DILocation(line: 3423, column: 3, scope: !7167)
!7179 = !DILocation(line: 3437, column: 11, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 3437, column: 11)
!7181 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 3424, column: 5)
!7182 = !DILocation(line: 3437, column: 11, scope: !7181)
!7183 = !DILocation(line: 3438, column: 9, scope: !7180)
!7184 = !DILocation(line: 3438, column: 2, scope: !7180)
!7185 = !DILocation(line: 3450, column: 34, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 3450, column: 11)
!7187 = !DILocation(line: 3454, column: 9, scope: !7186)
!7188 = !DILocation(line: 3454, column: 2, scope: !7186)
!7189 = !DILocation(line: 3456, column: 55, scope: !7181)
!7190 = !DILocation(line: 3456, column: 32, scope: !7181)
!7191 = !DILocation(line: 3457, column: 28, scope: !7181)
!7192 = !DILocation(line: 3457, column: 5, scope: !7181)
!7193 = !DILocation(line: 3456, column: 16, scope: !7181)
!7194 = !DILocation(line: 3458, column: 7, scope: !7181)
!7195 = !DILocation(line: 3462, column: 55, scope: !7181)
!7196 = !DILocation(line: 3462, column: 32, scope: !7181)
!7197 = !DILocation(line: 3462, column: 16, scope: !7181)
!7198 = !DILocation(line: 3463, column: 7, scope: !7181)
!7199 = !DILocation(line: 3466, column: 7, scope: !7181)
!7200 = !DILocation(line: 3467, column: 5, scope: !7181)
!7201 = !DILocation(line: 3469, column: 24, scope: !7167)
!7202 = !DILocation(line: 3469, column: 3, scope: !7167)
!7203 = !DILocation(line: 3469, column: 22, scope: !7167)
!7204 = !DILocation(line: 3470, column: 28, scope: !7167)
!7205 = !DILocation(line: 3470, column: 3, scope: !7167)
!7206 = !DILocation(line: 3470, column: 26, scope: !7167)
!7207 = !DILocation(line: 3471, column: 32, scope: !7167)
!7208 = !DILocation(line: 3471, column: 30, scope: !7167)
!7209 = !DILocation(line: 3472, column: 33, scope: !7167)
!7210 = !DILocation(line: 3472, column: 31, scope: !7167)
!7211 = !DILocation(line: 3474, column: 3, scope: !7167)
!7212 = !DILocation(line: 3475, column: 1, scope: !7167)
!7213 = distinct !DISubprogram(name: "recompute_tree_invariant_for_addr_expr", scope: !3, file: !3, line: 3483, type: !6810, scopeLine: 3484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7214)
!7214 = !{!7215, !7216, !7217, !7218, !7219, !7226, !7229, !7232, !7237, !7240}
!7215 = !DILocalVariable(name: "t", arg: 1, scope: !7213, file: !3, line: 3483, type: !1457)
!7216 = !DILocalVariable(name: "node", scope: !7213, file: !3, line: 3485, type: !1457)
!7217 = !DILocalVariable(name: "tc", scope: !7213, file: !3, line: 3486, type: !1449)
!7218 = !DILocalVariable(name: "se", scope: !7213, file: !3, line: 3486, type: !1449)
!7219 = !DILocalVariable(name: "_node", scope: !7220, file: !3, line: 3511, type: !1457)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 3511, column: 4)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 3510, column: 2)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 3507, column: 11)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3503, column: 5)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 3501, column: 3)
!7225 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 3501, column: 3)
!7226 = !DILocalVariable(name: "_node", scope: !7227, file: !3, line: 3513, type: !1457)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 3513, column: 6)
!7228 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 3512, column: 8)
!7229 = !DILocalVariable(name: "_node", scope: !7230, file: !3, line: 3515, type: !1457)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 3515, column: 6)
!7231 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 3514, column: 8)
!7232 = !DILocalVariable(name: "_node", scope: !7233, file: !3, line: 3524, type: !1457)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 3524, column: 6)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 3523, column: 8)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 3522, column: 2)
!7236 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 3520, column: 16)
!7237 = !DILocalVariable(name: "_node", scope: !7238, file: !3, line: 3527, type: !1457)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 3527, column: 2)
!7239 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 3526, column: 16)
!7240 = !DILocalVariable(name: "_node", scope: !7241, file: !3, line: 3538, type: !1457)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 3538, column: 5)
!7242 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 3537, column: 7)
!7243 = !DILocation(line: 0, scope: !7213)
!7244 = !DILocation(line: 3486, column: 3, scope: !7213)
!7245 = !DILocation(line: 3486, column: 8, scope: !7213)
!7246 = !DILocation(line: 3486, column: 19, scope: !7213)
!7247 = !DILocation(line: 3501, column: 8, scope: !7225)
!7248 = !DILocation(line: 0, scope: !7225)
!7249 = !DILocation(line: 3501, column: 36, scope: !7224)
!7250 = !DILocation(line: 3501, column: 3, scope: !7225)
!7251 = !DILocation(line: 3507, column: 12, scope: !7222)
!7252 = !DILocation(line: 3507, column: 29, scope: !7222)
!7253 = !DILocation(line: 3508, column: 5, scope: !7222)
!7254 = !DILocation(line: 3508, column: 25, scope: !7222)
!7255 = !DILocation(line: 3509, column: 4, scope: !7222)
!7256 = !DILocation(line: 3509, column: 7, scope: !7222)
!7257 = !DILocation(line: 3509, column: 54, scope: !7222)
!7258 = !DILocation(line: 3507, column: 11, scope: !7223)
!7259 = !DILocation(line: 3511, column: 4, scope: !7220)
!7260 = !DILocation(line: 0, scope: !7220)
!7261 = !DILocation(line: 3511, column: 4, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 3511, column: 4)
!7263 = !DILocation(line: 3511, column: 4, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 3511, column: 4)
!7265 = !DILocation(line: 3512, column: 8, scope: !7228)
!7266 = !DILocation(line: 3512, column: 8, scope: !7221)
!7267 = !DILocation(line: 0, scope: !7227)
!7268 = !DILocation(line: 3513, column: 6, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 3513, column: 6)
!7270 = !DILocation(line: 3513, column: 6, scope: !7227)
!7271 = !DILocation(line: 3513, column: 6, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 3513, column: 6)
!7273 = !DILocation(line: 3514, column: 8, scope: !7231)
!7274 = !DILocation(line: 3514, column: 8, scope: !7221)
!7275 = !DILocation(line: 0, scope: !7230)
!7276 = !DILocation(line: 3515, column: 6, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 3515, column: 6)
!7278 = !DILocation(line: 3515, column: 6, scope: !7230)
!7279 = !DILocation(line: 3515, column: 6, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 3515, column: 6)
!7281 = !DILocation(line: 3520, column: 33, scope: !7236)
!7282 = !DILocation(line: 3521, column: 9, scope: !7236)
!7283 = !DILocation(line: 3521, column: 12, scope: !7236)
!7284 = !DILocation(line: 3521, column: 47, scope: !7236)
!7285 = !DILocation(line: 3520, column: 16, scope: !7222)
!7286 = !DILocation(line: 3523, column: 8, scope: !7234)
!7287 = !DILocation(line: 3523, column: 8, scope: !7235)
!7288 = !DILocation(line: 0, scope: !7233)
!7289 = !DILocation(line: 3524, column: 6, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 3524, column: 6)
!7291 = !DILocation(line: 3524, column: 6, scope: !7233)
!7292 = !DILocation(line: 3524, column: 6, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 3524, column: 6)
!7294 = !DILocation(line: 3526, column: 33, scope: !7239)
!7295 = !DILocation(line: 3526, column: 16, scope: !7236)
!7296 = !DILocation(line: 3527, column: 2, scope: !7238)
!7297 = !DILocation(line: 0, scope: !7238)
!7298 = !DILocation(line: 3527, column: 2, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 3527, column: 2)
!7300 = !DILocation(line: 3527, column: 2, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 3527, column: 2)
!7302 = !DILocation(line: 3501, column: 3, scope: !7224)
!7303 = distinct !{!7303, !7250, !7304}
!7304 = !DILocation(line: 3528, column: 5, scope: !7225)
!7305 = !DILocation(line: 3530, column: 21, scope: !7213)
!7306 = !DILocation(line: 3530, column: 10, scope: !7213)
!7307 = !DILocation(line: 3537, column: 7, scope: !7242)
!7308 = !DILocation(line: 3537, column: 24, scope: !7242)
!7309 = !DILocation(line: 3537, column: 7, scope: !7213)
!7310 = !DILocation(line: 3538, column: 5, scope: !7241)
!7311 = !DILocation(line: 0, scope: !7241)
!7312 = !DILocation(line: 3538, column: 5, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 3538, column: 5)
!7314 = !DILocation(line: 3538, column: 5, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 3538, column: 5)
!7316 = !DILocation(line: 3539, column: 12, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 3539, column: 12)
!7318 = !DILocation(line: 3539, column: 12, scope: !7242)
!7319 = !DILocation(line: 3541, column: 12, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 3541, column: 12)
!7321 = !DILocation(line: 3541, column: 12, scope: !7317)
!7322 = !DILocation(line: 3542, column: 12, scope: !7320)
!7323 = !DILocation(line: 3542, column: 27, scope: !7320)
!7324 = !DILocation(line: 3542, column: 8, scope: !7320)
!7325 = !DILocation(line: 3542, column: 5, scope: !7320)
!7326 = !DILocation(line: 3545, column: 10, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 3544, column: 5)
!7328 = !DILocation(line: 3546, column: 13, scope: !7327)
!7329 = !DILocation(line: 3546, column: 10, scope: !7327)
!7330 = !DILocation(line: 3550, column: 23, scope: !7213)
!7331 = !DILocation(line: 3550, column: 3, scope: !7213)
!7332 = !DILocation(line: 3550, column: 21, scope: !7213)
!7333 = !DILocation(line: 3551, column: 27, scope: !7213)
!7334 = !DILocation(line: 3551, column: 25, scope: !7213)
!7335 = !DILocation(line: 3553, column: 1, scope: !7213)
!7336 = distinct !DISubprogram(name: "handled_component_p", scope: !6, file: !6, line: 4551, type: !4510, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7337)
!7337 = !{!7338}
!7338 = !DILocalVariable(name: "t", arg: 1, scope: !7336, file: !6, line: 4551, type: !2774)
!7339 = !DILocation(line: 0, scope: !7336)
!7340 = !DILocation(line: 4553, column: 11, scope: !7336)
!7341 = !DILocation(line: 4553, column: 3, scope: !7336)
!7342 = !DILocation(line: 4565, column: 7, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7336, file: !6, line: 4554, column: 5)
!7344 = !DILocation(line: 0, scope: !7343)
!7345 = !DILocation(line: 4567, column: 1, scope: !7336)
!7346 = distinct !DISubprogram(name: "build0_stat", scope: !3, file: !3, line: 3563, type: !7347, scopeLine: 3564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7349)
!7347 = !DISubroutineType(types: !7348)
!7348 = !{!1457, !155, !1457}
!7349 = !{!7350, !7351, !7352}
!7350 = !DILocalVariable(name: "code", arg: 1, scope: !7346, file: !3, line: 3563, type: !155)
!7351 = !DILocalVariable(name: "tt", arg: 2, scope: !7346, file: !3, line: 3563, type: !1457)
!7352 = !DILocalVariable(name: "t", scope: !7346, file: !3, line: 3565, type: !1457)
!7353 = !DILocation(line: 0, scope: !7346)
!7354 = !DILocation(line: 3567, column: 3, scope: !7346)
!7355 = !DILocation(line: 3569, column: 7, scope: !7346)
!7356 = !DILocation(line: 3570, column: 3, scope: !7346)
!7357 = !DILocation(line: 3570, column: 17, scope: !7346)
!7358 = !DILocation(line: 3572, column: 3, scope: !7346)
!7359 = distinct !DISubprogram(name: "tree_block", scope: !3, file: !3, line: 10305, type: !7360, scopeLine: 10306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7362)
!7360 = !DISubroutineType(types: !7361)
!7361 = !{!1964, !1457}
!7362 = !{!7363, !7364}
!7363 = !DILocalVariable(name: "t", arg: 1, scope: !7359, file: !3, line: 10305, type: !1457)
!7364 = !DILocalVariable(name: "c", scope: !7359, file: !3, line: 10307, type: !1456)
!7365 = !DILocation(line: 0, scope: !7359)
!7366 = !DILocation(line: 10307, column: 18, scope: !7359)
!7367 = !DILocation(line: 10309, column: 7, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7359, file: !3, line: 10309, column: 7)
!7369 = !DILocation(line: 10310, column: 20, scope: !7368)
!7370 = !DILocation(line: 10310, column: 5, scope: !7368)
!7371 = !DILocation(line: 10311, column: 3, scope: !7359)
!7372 = !DILocation(line: 10312, column: 3, scope: !7359)
!7373 = !DILocation(line: 10313, column: 1, scope: !7359)
!7374 = distinct !DISubprogram(name: "build2_stat", scope: !3, file: !3, line: 3674, type: !7375, scopeLine: 3675, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7377)
!7375 = !DISubroutineType(types: !7376)
!7376 = !{!1457, !155, !1457, !1457, !1457}
!7377 = !{!7378, !7379, !7380, !7381, !7382, !7383, !7384, !7385}
!7378 = !DILocalVariable(name: "code", arg: 1, scope: !7374, file: !3, line: 3674, type: !155)
!7379 = !DILocalVariable(name: "tt", arg: 2, scope: !7374, file: !3, line: 3674, type: !1457)
!7380 = !DILocalVariable(name: "arg0", arg: 3, scope: !7374, file: !3, line: 3674, type: !1457)
!7381 = !DILocalVariable(name: "arg1", arg: 4, scope: !7374, file: !3, line: 3674, type: !1457)
!7382 = !DILocalVariable(name: "constant", scope: !7374, file: !3, line: 3676, type: !1449)
!7383 = !DILocalVariable(name: "read_only", scope: !7374, file: !3, line: 3676, type: !1449)
!7384 = !DILocalVariable(name: "side_effects", scope: !7374, file: !3, line: 3676, type: !1449)
!7385 = !DILocalVariable(name: "t", scope: !7374, file: !3, line: 3677, type: !1457)
!7386 = !DILocation(line: 0, scope: !7374)
!7387 = !DILocation(line: 3679, column: 3, scope: !7374)
!7388 = !DILocation(line: 3681, column: 27, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 3681, column: 7)
!7390 = !DILocation(line: 3682, column: 10, scope: !7389)
!7391 = !DILocation(line: 3682, column: 18, scope: !7389)
!7392 = !DILocation(line: 3682, column: 15, scope: !7389)
!7393 = !DILocation(line: 3682, column: 26, scope: !7389)
!7394 = !DILocation(line: 3682, column: 32, scope: !7389)
!7395 = !DILocation(line: 3686, column: 7, scope: !7389)
!7396 = !DILocation(line: 3686, column: 10, scope: !7389)
!7397 = !DILocation(line: 3686, column: 39, scope: !7389)
!7398 = !DILocation(line: 3686, column: 36, scope: !7389)
!7399 = !DILocation(line: 3681, column: 7, scope: !7374)
!7400 = !DILocation(line: 3687, column: 5, scope: !7389)
!7401 = !DILocation(line: 3690, column: 12, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 3690, column: 7)
!7403 = !DILocation(line: 3690, column: 33, scope: !7402)
!7404 = !DILocation(line: 3690, column: 36, scope: !7402)
!7405 = !DILocation(line: 3690, column: 44, scope: !7402)
!7406 = !DILocation(line: 3690, column: 41, scope: !7402)
!7407 = !DILocation(line: 3690, column: 52, scope: !7402)
!7408 = !DILocation(line: 3691, column: 5, scope: !7402)
!7409 = !DILocation(line: 3695, column: 7, scope: !7374)
!7410 = !DILocation(line: 3696, column: 3, scope: !7374)
!7411 = !DILocation(line: 3696, column: 17, scope: !7374)
!7412 = !DILocation(line: 3705, column: 38, scope: !7374)
!7413 = !DILocation(line: 3706, column: 8, scope: !7374)
!7414 = !DILocation(line: 3706, column: 11, scope: !7374)
!7415 = !DILocation(line: 3706, column: 34, scope: !7374)
!7416 = !DILocation(line: 3708, column: 18, scope: !7374)
!7417 = !DILocation(line: 3710, column: 3, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 3710, column: 3)
!7419 = !DILocation(line: 3710, column: 3, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 3710, column: 3)
!7421 = !DILocation(line: 3710, column: 3, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 3710, column: 3)
!7423 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 3710, column: 3)
!7424 = !DILocation(line: 3710, column: 3, scope: !7423)
!7425 = !DILocation(line: 3710, column: 3, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 3710, column: 3)
!7427 = !DILocation(line: 3710, column: 3, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 3710, column: 3)
!7429 = !DILocation(line: 3705, column: 12, scope: !7374)
!7430 = !DILocation(line: 3707, column: 13, scope: !7374)
!7431 = !DILocation(line: 3711, column: 3, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 3711, column: 3)
!7433 = !DILocation(line: 3711, column: 3, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 3711, column: 3)
!7435 = !DILocation(line: 3711, column: 3, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 3711, column: 3)
!7437 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 3711, column: 3)
!7438 = !DILocation(line: 3711, column: 3, scope: !7437)
!7439 = !DILocation(line: 3711, column: 3, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 3711, column: 3)
!7441 = !DILocation(line: 3711, column: 3, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 3711, column: 3)
!7443 = !DILocation(line: 3713, column: 21, scope: !7374)
!7444 = !DILocation(line: 3714, column: 21, scope: !7374)
!7445 = !DILocation(line: 3715, column: 25, scope: !7374)
!7446 = !DILocation(line: 3717, column: 8, scope: !7374)
!7447 = !DILocation(line: 3717, column: 31, scope: !7374)
!7448 = !DILocation(line: 3718, column: 11, scope: !7374)
!7449 = !DILocation(line: 3718, column: 8, scope: !7374)
!7450 = !DILocation(line: 3718, column: 19, scope: !7374)
!7451 = !DILocation(line: 3717, column: 5, scope: !7374)
!7452 = !DILocation(line: 3720, column: 3, scope: !7374)
!7453 = distinct !DISubprogram(name: "build3_stat", scope: !3, file: !3, line: 3725, type: !7454, scopeLine: 3727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7456)
!7454 = !DISubroutineType(types: !7455)
!7455 = !{!1457, !155, !1457, !1457, !1457, !1457}
!7456 = !{!7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465}
!7457 = !DILocalVariable(name: "code", arg: 1, scope: !7453, file: !3, line: 3725, type: !155)
!7458 = !DILocalVariable(name: "tt", arg: 2, scope: !7453, file: !3, line: 3725, type: !1457)
!7459 = !DILocalVariable(name: "arg0", arg: 3, scope: !7453, file: !3, line: 3725, type: !1457)
!7460 = !DILocalVariable(name: "arg1", arg: 4, scope: !7453, file: !3, line: 3725, type: !1457)
!7461 = !DILocalVariable(name: "arg2", arg: 5, scope: !7453, file: !3, line: 3726, type: !1457)
!7462 = !DILocalVariable(name: "constant", scope: !7453, file: !3, line: 3728, type: !1449)
!7463 = !DILocalVariable(name: "read_only", scope: !7453, file: !3, line: 3728, type: !1449)
!7464 = !DILocalVariable(name: "side_effects", scope: !7453, file: !3, line: 3728, type: !1449)
!7465 = !DILocalVariable(name: "t", scope: !7453, file: !3, line: 3729, type: !1457)
!7466 = !DILocation(line: 0, scope: !7453)
!7467 = !DILocation(line: 3731, column: 3, scope: !7453)
!7468 = !DILocation(line: 3732, column: 3, scope: !7453)
!7469 = !DILocation(line: 3734, column: 7, scope: !7453)
!7470 = !DILocation(line: 3735, column: 3, scope: !7453)
!7471 = !DILocation(line: 3735, column: 17, scope: !7453)
!7472 = !DILocation(line: 3742, column: 12, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 3742, column: 7)
!7474 = !DILocation(line: 3743, column: 16, scope: !7473)
!7475 = !DILocation(line: 3743, column: 13, scope: !7473)
!7476 = !DILocation(line: 3743, column: 7, scope: !7473)
!7477 = !DILocation(line: 3744, column: 15, scope: !7473)
!7478 = !DILocation(line: 3745, column: 15, scope: !7473)
!7479 = !DILocation(line: 3748, column: 20, scope: !7473)
!7480 = !DILocation(line: 0, scope: !7473)
!7481 = !DILocation(line: 3750, column: 3, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 3750, column: 3)
!7483 = !DILocation(line: 3750, column: 3, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 3750, column: 3)
!7485 = !DILocation(line: 3750, column: 3, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 3750, column: 3)
!7487 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 3750, column: 3)
!7488 = !DILocation(line: 3750, column: 3, scope: !7487)
!7489 = !DILocation(line: 3750, column: 3, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 3750, column: 3)
!7491 = !DILocation(line: 3737, column: 13, scope: !7453)
!7492 = !DILocation(line: 3751, column: 3, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 3751, column: 3)
!7494 = !DILocation(line: 3751, column: 3, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 3751, column: 3)
!7496 = !DILocation(line: 3751, column: 3, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 3751, column: 3)
!7498 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3751, column: 3)
!7499 = !DILocation(line: 3751, column: 3, scope: !7498)
!7500 = !DILocation(line: 3751, column: 3, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 3751, column: 3)
!7502 = !DILocation(line: 3752, column: 3, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 3752, column: 3)
!7504 = !DILocation(line: 3752, column: 3, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 3752, column: 3)
!7506 = !DILocation(line: 3752, column: 3, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 3752, column: 3)
!7508 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 3752, column: 3)
!7509 = !DILocation(line: 3752, column: 3, scope: !7508)
!7510 = !DILocation(line: 3752, column: 3, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 3752, column: 3)
!7512 = !DILocation(line: 3754, column: 7, scope: !7453)
!7513 = !DILocation(line: 3757, column: 25, scope: !7453)
!7514 = !DILocation(line: 3755, column: 5, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 3754, column: 7)
!7516 = !DILocation(line: 3755, column: 23, scope: !7515)
!7517 = !DILocation(line: 3757, column: 3, scope: !7453)
!7518 = !DILocation(line: 3759, column: 8, scope: !7453)
!7519 = !DILocation(line: 3759, column: 31, scope: !7453)
!7520 = !DILocation(line: 3760, column: 11, scope: !7453)
!7521 = !DILocation(line: 3760, column: 8, scope: !7453)
!7522 = !DILocation(line: 3760, column: 19, scope: !7453)
!7523 = !DILocation(line: 3759, column: 5, scope: !7453)
!7524 = !DILocation(line: 3762, column: 3, scope: !7453)
!7525 = distinct !DISubprogram(name: "build5_stat", scope: !3, file: !3, line: 3793, type: !7526, scopeLine: 3795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7528)
!7526 = !DISubroutineType(types: !7527)
!7527 = !{!1457, !155, !1457, !1457, !1457, !1457, !1457, !1457}
!7528 = !{!7529, !7530, !7531, !7532, !7533, !7534, !7535, !7536, !7537, !7538, !7539}
!7529 = !DILocalVariable(name: "code", arg: 1, scope: !7525, file: !3, line: 3793, type: !155)
!7530 = !DILocalVariable(name: "tt", arg: 2, scope: !7525, file: !3, line: 3793, type: !1457)
!7531 = !DILocalVariable(name: "arg0", arg: 3, scope: !7525, file: !3, line: 3793, type: !1457)
!7532 = !DILocalVariable(name: "arg1", arg: 4, scope: !7525, file: !3, line: 3793, type: !1457)
!7533 = !DILocalVariable(name: "arg2", arg: 5, scope: !7525, file: !3, line: 3794, type: !1457)
!7534 = !DILocalVariable(name: "arg3", arg: 6, scope: !7525, file: !3, line: 3794, type: !1457)
!7535 = !DILocalVariable(name: "arg4", arg: 7, scope: !7525, file: !3, line: 3794, type: !1457)
!7536 = !DILocalVariable(name: "constant", scope: !7525, file: !3, line: 3796, type: !1449)
!7537 = !DILocalVariable(name: "read_only", scope: !7525, file: !3, line: 3796, type: !1449)
!7538 = !DILocalVariable(name: "side_effects", scope: !7525, file: !3, line: 3796, type: !1449)
!7539 = !DILocalVariable(name: "t", scope: !7525, file: !3, line: 3797, type: !1457)
!7540 = !DILocation(line: 0, scope: !7525)
!7541 = !DILocation(line: 3799, column: 3, scope: !7525)
!7542 = !DILocation(line: 3801, column: 7, scope: !7525)
!7543 = !DILocation(line: 3802, column: 3, scope: !7525)
!7544 = !DILocation(line: 3802, column: 17, scope: !7525)
!7545 = !DILocation(line: 3804, column: 18, scope: !7525)
!7546 = !DILocation(line: 3806, column: 3, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 3806, column: 3)
!7548 = !DILocation(line: 3806, column: 3, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 3806, column: 3)
!7550 = !DILocation(line: 3806, column: 3, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 3806, column: 3)
!7552 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 3806, column: 3)
!7553 = !DILocation(line: 3806, column: 3, scope: !7552)
!7554 = !DILocation(line: 3807, column: 3, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 3807, column: 3)
!7556 = !DILocation(line: 3807, column: 3, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 3807, column: 3)
!7558 = !DILocation(line: 3807, column: 3, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 3807, column: 3)
!7560 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 3807, column: 3)
!7561 = !DILocation(line: 3807, column: 3, scope: !7560)
!7562 = !DILocation(line: 3808, column: 3, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 3808, column: 3)
!7564 = !DILocation(line: 3808, column: 3, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 3808, column: 3)
!7566 = !DILocation(line: 3808, column: 3, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 3808, column: 3)
!7568 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 3808, column: 3)
!7569 = !DILocation(line: 3808, column: 3, scope: !7568)
!7570 = !DILocation(line: 3809, column: 3, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 3809, column: 3)
!7572 = !DILocation(line: 3809, column: 3, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 3809, column: 3)
!7574 = !DILocation(line: 3809, column: 3, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 3809, column: 3)
!7576 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 3809, column: 3)
!7577 = !DILocation(line: 3809, column: 3, scope: !7576)
!7578 = !DILocation(line: 3810, column: 3, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 3810, column: 3)
!7580 = !DILocation(line: 3810, column: 3, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 3810, column: 3)
!7582 = !DILocation(line: 3810, column: 3, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 3810, column: 3)
!7584 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 3810, column: 3)
!7585 = !DILocation(line: 3810, column: 3, scope: !7584)
!7586 = !DILocation(line: 3812, column: 25, scope: !7525)
!7587 = !DILocation(line: 3814, column: 8, scope: !7525)
!7588 = !DILocation(line: 3814, column: 31, scope: !7525)
!7589 = !DILocation(line: 3815, column: 11, scope: !7525)
!7590 = !DILocation(line: 3815, column: 8, scope: !7525)
!7591 = !DILocation(line: 3815, column: 19, scope: !7525)
!7592 = !DILocation(line: 3814, column: 5, scope: !7525)
!7593 = !DILocation(line: 3817, column: 3, scope: !7525)
!7594 = distinct !DISubprogram(name: "build6_stat", scope: !3, file: !3, line: 3821, type: !7595, scopeLine: 3823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7597)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!1457, !155, !1457, !1457, !1457, !1457, !1457, !1457, !1457}
!7597 = !{!7598, !7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609}
!7598 = !DILocalVariable(name: "code", arg: 1, scope: !7594, file: !3, line: 3821, type: !155)
!7599 = !DILocalVariable(name: "tt", arg: 2, scope: !7594, file: !3, line: 3821, type: !1457)
!7600 = !DILocalVariable(name: "arg0", arg: 3, scope: !7594, file: !3, line: 3821, type: !1457)
!7601 = !DILocalVariable(name: "arg1", arg: 4, scope: !7594, file: !3, line: 3821, type: !1457)
!7602 = !DILocalVariable(name: "arg2", arg: 5, scope: !7594, file: !3, line: 3822, type: !1457)
!7603 = !DILocalVariable(name: "arg3", arg: 6, scope: !7594, file: !3, line: 3822, type: !1457)
!7604 = !DILocalVariable(name: "arg4", arg: 7, scope: !7594, file: !3, line: 3822, type: !1457)
!7605 = !DILocalVariable(name: "arg5", arg: 8, scope: !7594, file: !3, line: 3822, type: !1457)
!7606 = !DILocalVariable(name: "constant", scope: !7594, file: !3, line: 3824, type: !1449)
!7607 = !DILocalVariable(name: "read_only", scope: !7594, file: !3, line: 3824, type: !1449)
!7608 = !DILocalVariable(name: "side_effects", scope: !7594, file: !3, line: 3824, type: !1449)
!7609 = !DILocalVariable(name: "t", scope: !7594, file: !3, line: 3825, type: !1457)
!7610 = !DILocation(line: 0, scope: !7594)
!7611 = !DILocation(line: 3827, column: 3, scope: !7594)
!7612 = !DILocation(line: 3829, column: 7, scope: !7594)
!7613 = !DILocation(line: 3830, column: 3, scope: !7594)
!7614 = !DILocation(line: 3830, column: 17, scope: !7594)
!7615 = !DILocation(line: 3832, column: 18, scope: !7594)
!7616 = !DILocation(line: 3834, column: 3, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 3834, column: 3)
!7618 = !DILocation(line: 3834, column: 3, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 3834, column: 3)
!7620 = !DILocation(line: 3834, column: 3, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 3834, column: 3)
!7622 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 3834, column: 3)
!7623 = !DILocation(line: 3834, column: 3, scope: !7622)
!7624 = !DILocation(line: 3835, column: 3, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 3835, column: 3)
!7626 = !DILocation(line: 3835, column: 3, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 3835, column: 3)
!7628 = !DILocation(line: 3835, column: 3, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 3835, column: 3)
!7630 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 3835, column: 3)
!7631 = !DILocation(line: 3835, column: 3, scope: !7630)
!7632 = !DILocation(line: 3836, column: 3, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 3836, column: 3)
!7634 = !DILocation(line: 3836, column: 3, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 3836, column: 3)
!7636 = !DILocation(line: 3836, column: 3, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 3836, column: 3)
!7638 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 3836, column: 3)
!7639 = !DILocation(line: 3836, column: 3, scope: !7638)
!7640 = !DILocation(line: 3837, column: 3, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 3837, column: 3)
!7642 = !DILocation(line: 3837, column: 3, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 3837, column: 3)
!7644 = !DILocation(line: 3837, column: 3, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 3837, column: 3)
!7646 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 3837, column: 3)
!7647 = !DILocation(line: 3837, column: 3, scope: !7646)
!7648 = !DILocation(line: 3838, column: 3, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 3838, column: 3)
!7650 = !DILocation(line: 3838, column: 3, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 3838, column: 3)
!7652 = !DILocation(line: 3838, column: 3, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 3838, column: 3)
!7654 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 3838, column: 3)
!7655 = !DILocation(line: 3838, column: 3, scope: !7654)
!7656 = !DILocation(line: 3839, column: 7, scope: !7594)
!7657 = !DILocation(line: 3841, column: 3, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 3841, column: 3)
!7659 = !DILocation(line: 3841, column: 3, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 3841, column: 3)
!7661 = !DILocation(line: 3841, column: 3, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 3841, column: 3)
!7663 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 3841, column: 3)
!7664 = !DILocation(line: 3841, column: 3, scope: !7663)
!7665 = !DILocation(line: 3843, column: 25, scope: !7594)
!7666 = !DILocation(line: 3846, column: 11, scope: !7594)
!7667 = !DILocation(line: 3846, column: 8, scope: !7594)
!7668 = !DILocation(line: 3846, column: 19, scope: !7594)
!7669 = !DILocation(line: 3845, column: 5, scope: !7594)
!7670 = !DILocation(line: 3848, column: 3, scope: !7594)
!7671 = distinct !DISubprogram(name: "build_nt_call_list", scope: !3, file: !3, line: 3882, type: !4530, scopeLine: 3883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7672)
!7672 = !{!7673, !7674, !7675, !7676}
!7673 = !DILocalVariable(name: "fn", arg: 1, scope: !7671, file: !3, line: 3882, type: !1457)
!7674 = !DILocalVariable(name: "arglist", arg: 2, scope: !7671, file: !3, line: 3882, type: !1457)
!7675 = !DILocalVariable(name: "t", scope: !7671, file: !3, line: 3884, type: !1457)
!7676 = !DILocalVariable(name: "i", scope: !7671, file: !3, line: 3885, type: !1450)
!7677 = !DILocation(line: 0, scope: !7671)
!7678 = !DILocation(line: 3887, column: 7, scope: !7671)
!7679 = !DILocation(line: 3888, column: 3, scope: !7671)
!7680 = !DILocation(line: 3888, column: 20, scope: !7671)
!7681 = !DILocation(line: 3889, column: 3, scope: !7671)
!7682 = !DILocation(line: 3889, column: 30, scope: !7671)
!7683 = !DILocation(line: 3890, column: 8, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 3890, column: 3)
!7685 = !DILocation(line: 3890, column: 3, scope: !7684)
!7686 = !DILocation(line: 3891, column: 28, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 3890, column: 3)
!7688 = !DILocation(line: 3891, column: 5, scope: !7687)
!7689 = !DILocation(line: 3891, column: 26, scope: !7687)
!7690 = !DILocation(line: 3890, column: 34, scope: !7687)
!7691 = !DILocation(line: 3890, column: 57, scope: !7687)
!7692 = !DILocation(line: 3890, column: 3, scope: !7687)
!7693 = distinct !{!7693, !7685, !7694}
!7694 = !DILocation(line: 3891, column: 28, scope: !7684)
!7695 = !DILocation(line: 3892, column: 3, scope: !7671)
!7696 = distinct !DISubprogram(name: "build_vl_exp_stat", scope: !3, file: !3, line: 9398, type: !7697, scopeLine: 9399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7699)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!1457, !155, !1450}
!7699 = !{!7700, !7701, !7702, !7703}
!7700 = !DILocalVariable(name: "code", arg: 1, scope: !7696, file: !3, line: 9398, type: !155)
!7701 = !DILocalVariable(name: "len", arg: 2, scope: !7696, file: !3, line: 9398, type: !1450)
!7702 = !DILocalVariable(name: "t", scope: !7696, file: !3, line: 9400, type: !1457)
!7703 = !DILocalVariable(name: "length", scope: !7696, file: !3, line: 9401, type: !1450)
!7704 = !DILocation(line: 0, scope: !7696)
!7705 = !DILocation(line: 9401, column: 26, scope: !7696)
!7706 = !DILocation(line: 9401, column: 42, scope: !7696)
!7707 = !DILocation(line: 9403, column: 3, scope: !7696)
!7708 = !DILocation(line: 9404, column: 3, scope: !7696)
!7709 = !DILocation(line: 9411, column: 14, scope: !7696)
!7710 = !DILocation(line: 9411, column: 7, scope: !7696)
!7711 = !DILocation(line: 9413, column: 3, scope: !7696)
!7712 = !DILocation(line: 9415, column: 3, scope: !7696)
!7713 = !DILocation(line: 9419, column: 39, scope: !7696)
!7714 = !DILocation(line: 9419, column: 49, scope: !7696)
!7715 = !DILocation(line: 9419, column: 24, scope: !7696)
!7716 = !DILocation(line: 9419, column: 10, scope: !7696)
!7717 = !DILocation(line: 9419, column: 3, scope: !7696)
!7718 = !DILocation(line: 9419, column: 22, scope: !7696)
!7719 = !DILocation(line: 9421, column: 3, scope: !7696)
!7720 = distinct !DISubprogram(name: "build_nt_call_vec", scope: !3, file: !3, line: 3899, type: !7721, scopeLine: 3900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7723)
!7721 = !DISubroutineType(types: !7722)
!7722 = !{!1457, !1457, !1856}
!7723 = !{!7724, !7725, !7726, !7727, !7728}
!7724 = !DILocalVariable(name: "fn", arg: 1, scope: !7720, file: !3, line: 3899, type: !1457)
!7725 = !DILocalVariable(name: "args", arg: 2, scope: !7720, file: !3, line: 3899, type: !1856)
!7726 = !DILocalVariable(name: "ret", scope: !7720, file: !3, line: 3901, type: !1457)
!7727 = !DILocalVariable(name: "t", scope: !7720, file: !3, line: 3901, type: !1457)
!7728 = !DILocalVariable(name: "ix", scope: !7720, file: !3, line: 3902, type: !7)
!7729 = !DILocation(line: 0, scope: !7720)
!7730 = !DILocation(line: 3901, column: 3, scope: !7720)
!7731 = !DILocation(line: 3904, column: 9, scope: !7720)
!7732 = !DILocation(line: 3905, column: 3, scope: !7720)
!7733 = !DILocation(line: 3905, column: 22, scope: !7720)
!7734 = !DILocation(line: 3906, column: 3, scope: !7720)
!7735 = !DILocation(line: 3906, column: 32, scope: !7720)
!7736 = !DILocation(line: 0, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 3907, column: 3)
!7738 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 3907, column: 3)
!7739 = !DILocation(line: 3907, column: 8, scope: !7738)
!7740 = !DILocation(line: 0, scope: !7738)
!7741 = !DILocation(line: 3907, column: 16, scope: !7737)
!7742 = !DILocation(line: 3907, column: 3, scope: !7738)
!7743 = !DILocation(line: 3908, column: 31, scope: !7737)
!7744 = !DILocation(line: 3908, column: 5, scope: !7737)
!7745 = !DILocation(line: 3908, column: 29, scope: !7737)
!7746 = !DILocation(line: 3907, column: 49, scope: !7737)
!7747 = !DILocation(line: 3907, column: 3, scope: !7737)
!7748 = distinct !{!7748, !7742, !7749}
!7749 = !DILocation(line: 3908, column: 31, scope: !7738)
!7750 = !DILocation(line: 3910, column: 1, scope: !7720)
!7751 = !DILocation(line: 3909, column: 3, scope: !7720)
!7752 = distinct !DISubprogram(name: "build_decl_stat", scope: !3, file: !3, line: 3921, type: !7753, scopeLine: 3923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7755)
!7753 = !DISubroutineType(types: !7754)
!7754 = !{!1457, !1582, !155, !1457, !1457}
!7755 = !{!7756, !7757, !7758, !7759, !7760}
!7756 = !DILocalVariable(name: "loc", arg: 1, scope: !7752, file: !3, line: 3921, type: !1582)
!7757 = !DILocalVariable(name: "code", arg: 2, scope: !7752, file: !3, line: 3921, type: !155)
!7758 = !DILocalVariable(name: "name", arg: 3, scope: !7752, file: !3, line: 3921, type: !1457)
!7759 = !DILocalVariable(name: "type", arg: 4, scope: !7752, file: !3, line: 3922, type: !1457)
!7760 = !DILocalVariable(name: "t", scope: !7752, file: !3, line: 3924, type: !1457)
!7761 = !DILocation(line: 0, scope: !7752)
!7762 = !DILocation(line: 3926, column: 7, scope: !7752)
!7763 = !DILocation(line: 3927, column: 3, scope: !7752)
!7764 = !DILocation(line: 3927, column: 28, scope: !7752)
!7765 = !DILocation(line: 3934, column: 3, scope: !7752)
!7766 = !DILocation(line: 3934, column: 17, scope: !7752)
!7767 = !DILocation(line: 3935, column: 3, scope: !7752)
!7768 = !DILocation(line: 3935, column: 17, scope: !7752)
!7769 = !DILocation(line: 3937, column: 24, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 3937, column: 7)
!7771 = !DILocation(line: 3938, column: 5, scope: !7770)
!7772 = !DILocation(line: 3940, column: 3, scope: !7752)
!7773 = distinct !DISubprogram(name: "build_fn_decl", scope: !3, file: !3, line: 3946, type: !7774, scopeLine: 3947, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7776)
!7774 = !DISubroutineType(types: !7775)
!7775 = !{!1457, !1455, !1457}
!7776 = !{!7777, !7778, !7779, !7780}
!7777 = !DILocalVariable(name: "name", arg: 1, scope: !7773, file: !3, line: 3946, type: !1455)
!7778 = !DILocalVariable(name: "type", arg: 2, scope: !7773, file: !3, line: 3946, type: !1457)
!7779 = !DILocalVariable(name: "id", scope: !7773, file: !3, line: 3948, type: !1457)
!7780 = !DILocalVariable(name: "decl", scope: !7773, file: !3, line: 3949, type: !1457)
!7781 = !DILocation(line: 0, scope: !7773)
!7782 = !DILocation(line: 3948, column: 13, scope: !7773)
!7783 = !DILocation(line: 3949, column: 15, scope: !7773)
!7784 = !DILocation(line: 3951, column: 3, scope: !7773)
!7785 = !DILocation(line: 3951, column: 24, scope: !7773)
!7786 = !DILocation(line: 3952, column: 3, scope: !7773)
!7787 = !DILocation(line: 3952, column: 22, scope: !7773)
!7788 = !DILocation(line: 3953, column: 26, scope: !7773)
!7789 = !DILocation(line: 3954, column: 23, scope: !7773)
!7790 = !DILocation(line: 3956, column: 3, scope: !7773)
!7791 = distinct !DISubprogram(name: "build_block", scope: !3, file: !3, line: 3965, type: !7792, scopeLine: 3966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7794)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!1457, !1457, !1457, !1457, !1457}
!7794 = !{!7795, !7796, !7797, !7798, !7799}
!7795 = !DILocalVariable(name: "vars", arg: 1, scope: !7791, file: !3, line: 3965, type: !1457)
!7796 = !DILocalVariable(name: "subblocks", arg: 2, scope: !7791, file: !3, line: 3965, type: !1457)
!7797 = !DILocalVariable(name: "supercontext", arg: 3, scope: !7791, file: !3, line: 3965, type: !1457)
!7798 = !DILocalVariable(name: "chain", arg: 4, scope: !7791, file: !3, line: 3965, type: !1457)
!7799 = !DILocalVariable(name: "block", scope: !7791, file: !3, line: 3967, type: !1457)
!7800 = !DILocation(line: 0, scope: !7791)
!7801 = !DILocation(line: 3967, column: 16, scope: !7791)
!7802 = !DILocation(line: 3969, column: 3, scope: !7791)
!7803 = !DILocation(line: 3969, column: 22, scope: !7791)
!7804 = !DILocation(line: 3970, column: 3, scope: !7791)
!7805 = !DILocation(line: 3970, column: 27, scope: !7791)
!7806 = !DILocation(line: 3971, column: 3, scope: !7791)
!7807 = !DILocation(line: 3971, column: 30, scope: !7791)
!7808 = !DILocation(line: 3972, column: 3, scope: !7791)
!7809 = !DILocation(line: 3972, column: 23, scope: !7791)
!7810 = !DILocation(line: 3973, column: 3, scope: !7791)
!7811 = distinct !DISubprogram(name: "expand_location", scope: !3, file: !3, line: 3977, type: !7812, scopeLine: 3978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7821)
!7812 = !DISubroutineType(types: !7813)
!7813 = !{!7814, !1584}
!7814 = !DIDerivedType(tag: DW_TAG_typedef, name: "expanded_location", file: !1583, line: 52, baseType: !7815)
!7815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 40, size: 192, elements: !7816)
!7816 = !{!7817, !7818, !7819, !7820}
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7815, file: !1583, line: 43, baseType: !1455, size: 64)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !7815, file: !1583, line: 46, baseType: !1450, size: 32, offset: 64)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "column", scope: !7815, file: !1583, line: 48, baseType: !1450, size: 32, offset: 96)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "sysp", scope: !7815, file: !1583, line: 51, baseType: !1449, size: 8, offset: 128)
!7821 = !{!7822, !7823, !7824}
!7822 = !DILocalVariable(name: "loc", arg: 1, scope: !7811, file: !3, line: 3977, type: !1584)
!7823 = !DILocalVariable(name: "xloc", scope: !7811, file: !3, line: 3979, type: !7814)
!7824 = !DILocalVariable(name: "map", scope: !7825, file: !3, line: 3989, type: !7827)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 3988, column: 5)
!7826 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 3980, column: 7)
!7827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7828, size: 64)
!7828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7829)
!7829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "line_map", file: !1585, line: 61, size: 192, elements: !7830)
!7830 = !{!7831, !7832, !7834, !7835, !7836, !7837, !7838}
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "to_file", scope: !7829, file: !1585, line: 62, baseType: !1455, size: 64)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "to_line", scope: !7829, file: !1585, line: 63, baseType: !7833, size: 32, offset: 64)
!7833 = !DIDerivedType(tag: DW_TAG_typedef, name: "linenum_type", file: !1585, line: 39, baseType: !7)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "start_location", scope: !7829, file: !1585, line: 64, baseType: !1584, size: 32, offset: 96)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "included_from", scope: !7829, file: !1585, line: 65, baseType: !1450, size: 32, offset: 128)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !7829, file: !1585, line: 66, baseType: !7, size: 8, offset: 160, flags: DIFlagBitField, extraData: i64 160)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "sysp", scope: !7829, file: !1585, line: 68, baseType: !1449, size: 8, offset: 168)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "column_bits", scope: !7829, file: !1585, line: 70, baseType: !7, size: 8, offset: 176, flags: DIFlagBitField, extraData: i64 176)
!7839 = !DILocation(line: 0, scope: !7811)
!7840 = !DILocation(line: 3979, column: 21, scope: !7811)
!7841 = !DILocation(line: 3980, column: 11, scope: !7826)
!7842 = !DILocation(line: 3980, column: 7, scope: !7811)
!7843 = !DILocation(line: 3982, column: 23, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 3981, column: 5)
!7845 = !DILocation(line: 3982, column: 19, scope: !7844)
!7846 = !DILocation(line: 3982, column: 12, scope: !7844)
!7847 = !DILocation(line: 3982, column: 17, scope: !7844)
!7848 = !DILocation(line: 3983, column: 12, scope: !7844)
!7849 = !DILocation(line: 3983, column: 17, scope: !7844)
!7850 = !DILocation(line: 3984, column: 12, scope: !7844)
!7851 = !DILocation(line: 3984, column: 19, scope: !7844)
!7852 = !DILocation(line: 3985, column: 12, scope: !7844)
!7853 = !DILocation(line: 3985, column: 17, scope: !7844)
!7854 = !DILocation(line: 3986, column: 5, scope: !7844)
!7855 = !DILocation(line: 3989, column: 52, scope: !7825)
!7856 = !DILocation(line: 3989, column: 36, scope: !7825)
!7857 = !DILocation(line: 0, scope: !7825)
!7858 = !DILocation(line: 3990, column: 24, scope: !7825)
!7859 = !DILocation(line: 3990, column: 17, scope: !7825)
!7860 = !DILocation(line: 3991, column: 19, scope: !7825)
!7861 = !DILocation(line: 3991, column: 12, scope: !7825)
!7862 = !DILocation(line: 3991, column: 17, scope: !7825)
!7863 = !DILocation(line: 3992, column: 21, scope: !7825)
!7864 = !DILocation(line: 3992, column: 12, scope: !7825)
!7865 = !DILocation(line: 3992, column: 19, scope: !7825)
!7866 = !DILocation(line: 3993, column: 24, scope: !7825)
!7867 = !DILocation(line: 3993, column: 29, scope: !7825)
!7868 = !DILocation(line: 3993, column: 19, scope: !7825)
!7869 = !DILocation(line: 3993, column: 12, scope: !7825)
!7870 = !DILocation(line: 3993, column: 17, scope: !7825)
!7871 = !DILocation(line: 3995, column: 3, scope: !7811)
!7872 = distinct !DISubprogram(name: "protected_set_expr_location", scope: !3, file: !3, line: 4004, type: !7873, scopeLine: 4005, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7875)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{null, !1457, !1582}
!7875 = !{!7876, !7877}
!7876 = !DILocalVariable(name: "t", arg: 1, scope: !7872, file: !3, line: 4004, type: !1457)
!7877 = !DILocalVariable(name: "loc", arg: 2, scope: !7872, file: !3, line: 4004, type: !1582)
!7878 = !DILocation(line: 0, scope: !7872)
!7879 = !DILocation(line: 4006, column: 7, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 4006, column: 7)
!7881 = !DILocation(line: 4006, column: 9, scope: !7880)
!7882 = !DILocation(line: 4006, column: 12, scope: !7880)
!7883 = !DILocation(line: 4007, column: 5, scope: !7880)
!7884 = !DILocation(line: 4008, column: 1, scope: !7872)
!7885 = distinct !DISubprogram(name: "build_decl_attribute_variant", scope: !3, file: !3, line: 4014, type: !4530, scopeLine: 4015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7886)
!7886 = !{!7887, !7888}
!7887 = !DILocalVariable(name: "ddecl", arg: 1, scope: !7885, file: !3, line: 4014, type: !1457)
!7888 = !DILocalVariable(name: "attribute", arg: 2, scope: !7885, file: !3, line: 4014, type: !1457)
!7889 = !DILocation(line: 0, scope: !7885)
!7890 = !DILocation(line: 4016, column: 3, scope: !7885)
!7891 = !DILocation(line: 4016, column: 27, scope: !7885)
!7892 = !DILocation(line: 4017, column: 3, scope: !7885)
!7893 = distinct !DISubprogram(name: "iterative_hash_hashval_t", scope: !3, file: !3, line: 4037, type: !7894, scopeLine: 4038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7896)
!7894 = !DISubroutineType(types: !7895)
!7895 = !{!1814, !1814, !1814}
!7896 = !{!7897, !7898, !7899}
!7897 = !DILocalVariable(name: "val", arg: 1, scope: !7893, file: !3, line: 4037, type: !1814)
!7898 = !DILocalVariable(name: "val2", arg: 2, scope: !7893, file: !3, line: 4037, type: !1814)
!7899 = !DILocalVariable(name: "a", scope: !7893, file: !3, line: 4040, type: !1814)
!7900 = !DILocation(line: 0, scope: !7893)
!7901 = !DILocation(line: 4042, column: 3, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 4042, column: 3)
!7903 = !DILocation(line: 4043, column: 3, scope: !7893)
!7904 = distinct !DISubprogram(name: "iterative_hash_host_wide_int", scope: !3, file: !3, line: 4048, type: !7905, scopeLine: 4049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7907)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{!1814, !1513, !1814}
!7907 = !{!7908, !7909, !7910, !7913, !7914}
!7908 = !DILocalVariable(name: "val", arg: 1, scope: !7904, file: !3, line: 4048, type: !1513)
!7909 = !DILocalVariable(name: "val2", arg: 2, scope: !7904, file: !3, line: 4048, type: !1814)
!7910 = !DILocalVariable(name: "a", scope: !7911, file: !3, line: 4054, type: !1814)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 4053, column: 5)
!7912 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4050, column: 7)
!7913 = !DILocalVariable(name: "zero", scope: !7911, file: !3, line: 4057, type: !1450)
!7914 = !DILocalVariable(name: "b", scope: !7911, file: !3, line: 4058, type: !1814)
!7915 = !DILocation(line: 0, scope: !7904)
!7916 = !DILocation(line: 4054, column: 21, scope: !7911)
!7917 = !DILocation(line: 0, scope: !7911)
!7918 = !DILocation(line: 4058, column: 38, scope: !7911)
!7919 = !DILocation(line: 4058, column: 21, scope: !7911)
!7920 = !DILocation(line: 4059, column: 7, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 4059, column: 7)
!7922 = !DILocation(line: 4066, column: 7, scope: !7911)
!7923 = distinct !DISubprogram(name: "build_type_attribute_qual_variant", scope: !3, file: !3, line: 4076, type: !7924, scopeLine: 4077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7926)
!7924 = !DISubroutineType(types: !7925)
!7925 = !{!1457, !1457, !1457, !1450}
!7926 = !{!7927, !7928, !7929, !7930, !7933, !7934, !7935}
!7927 = !DILocalVariable(name: "ttype", arg: 1, scope: !7923, file: !3, line: 4076, type: !1457)
!7928 = !DILocalVariable(name: "attribute", arg: 2, scope: !7923, file: !3, line: 4076, type: !1457)
!7929 = !DILocalVariable(name: "quals", arg: 3, scope: !7923, file: !3, line: 4076, type: !1450)
!7930 = !DILocalVariable(name: "hashcode", scope: !7931, file: !3, line: 4080, type: !1814)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 4079, column: 5)
!7932 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 4078, column: 7)
!7933 = !DILocalVariable(name: "ntype", scope: !7931, file: !3, line: 4081, type: !1457)
!7934 = !DILocalVariable(name: "code", scope: !7931, file: !3, line: 4082, type: !155)
!7935 = !DILocalVariable(name: "precision", scope: !7936, file: !3, line: 4131, type: !7)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 4130, column: 4)
!7937 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 4113, column: 2)
!7938 = !DILocation(line: 0, scope: !7923)
!7939 = !DILocation(line: 4078, column: 31, scope: !7932)
!7940 = !DILocation(line: 4078, column: 9, scope: !7932)
!7941 = !DILocation(line: 4078, column: 7, scope: !7923)
!7942 = !DILocation(line: 0, scope: !7931)
!7943 = !DILocation(line: 4082, column: 7, scope: !7931)
!7944 = !DILocation(line: 4082, column: 29, scope: !7931)
!7945 = !DILocation(line: 4082, column: 22, scope: !7931)
!7946 = !DILocation(line: 4090, column: 29, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 4090, column: 11)
!7948 = !DILocation(line: 4091, column: 4, scope: !7947)
!7949 = !DILocation(line: 4091, column: 25, scope: !7947)
!7950 = !DILocation(line: 4092, column: 4, scope: !7947)
!7951 = !DILocation(line: 4092, column: 25, scope: !7947)
!7952 = !DILocation(line: 4093, column: 4, scope: !7947)
!7953 = !DILocation(line: 4093, column: 25, scope: !7947)
!7954 = !DILocation(line: 4090, column: 11, scope: !7931)
!7955 = !DILocation(line: 4097, column: 6, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 4094, column: 2)
!7957 = !DILocation(line: 4095, column: 4, scope: !7956)
!7958 = !DILocation(line: 4098, column: 11, scope: !7956)
!7959 = !DILocation(line: 4098, column: 4, scope: !7956)
!7960 = !DILocation(line: 4101, column: 15, scope: !7931)
!7961 = !DILocation(line: 4102, column: 15, scope: !7931)
!7962 = !DILocation(line: 4104, column: 7, scope: !7931)
!7963 = !DILocation(line: 4104, column: 31, scope: !7931)
!7964 = !DILocation(line: 4106, column: 18, scope: !7931)
!7965 = !DILocation(line: 4107, column: 11, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 4107, column: 11)
!7967 = !DILocation(line: 4107, column: 11, scope: !7931)
!7968 = !DILocation(line: 4108, column: 13, scope: !7966)
!7969 = !DILocation(line: 4108, column: 2, scope: !7966)
!7970 = !DILocation(line: 4110, column: 18, scope: !7931)
!7971 = !DILocation(line: 4112, column: 15, scope: !7931)
!7972 = !DILocation(line: 4112, column: 7, scope: !7931)
!7973 = !DILocation(line: 4115, column: 31, scope: !7937)
!7974 = !DILocation(line: 4115, column: 15, scope: !7937)
!7975 = !DILocation(line: 4116, column: 4, scope: !7937)
!7976 = !DILocation(line: 4118, column: 8, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 4118, column: 8)
!7978 = !DILocation(line: 4118, column: 8, scope: !7937)
!7979 = !DILocation(line: 4119, column: 17, scope: !7977)
!7980 = !DILocation(line: 4119, column: 6, scope: !7977)
!7981 = !DILocation(line: 4123, column: 15, scope: !7937)
!7982 = !DILocation(line: 4125, column: 15, scope: !7937)
!7983 = !DILocation(line: 4127, column: 4, scope: !7937)
!7984 = !DILocation(line: 4131, column: 6, scope: !7936)
!7985 = !DILocation(line: 4131, column: 31, scope: !7936)
!7986 = !DILocation(line: 0, scope: !7936)
!7987 = !DILocation(line: 4131, column: 19, scope: !7936)
!7988 = !DILocation(line: 4132, column: 17, scope: !7936)
!7989 = !DILocation(line: 4133, column: 4, scope: !7937)
!7990 = !DILocation(line: 4134, column: 4, scope: !7937)
!7991 = !DILocation(line: 4139, column: 15, scope: !7931)
!7992 = !DILocation(line: 4144, column: 11, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 4144, column: 11)
!7994 = !DILocation(line: 4145, column: 11, scope: !7993)
!7995 = !DILocation(line: 4145, column: 23, scope: !7993)
!7996 = !DILocation(line: 4145, column: 15, scope: !7993)
!7997 = !DILocation(line: 4144, column: 11, scope: !7931)
!7998 = !DILocation(line: 4146, column: 2, scope: !7993)
!7999 = !DILocation(line: 4147, column: 16, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 4147, column: 16)
!8001 = !DILocation(line: 4147, column: 39, scope: !8000)
!8002 = !DILocation(line: 4147, column: 16, scope: !7993)
!8003 = !DILocation(line: 4148, column: 27, scope: !8000)
!8004 = !DILocation(line: 4148, column: 25, scope: !8000)
!8005 = !DILocation(line: 4148, column: 2, scope: !8000)
!8006 = !DILocation(line: 4150, column: 15, scope: !7931)
!8007 = !DILocation(line: 4151, column: 5, scope: !7932)
!8008 = !DILocation(line: 4152, column: 12, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 4152, column: 12)
!8010 = !DILocation(line: 4152, column: 31, scope: !8009)
!8011 = !DILocation(line: 4152, column: 12, scope: !7932)
!8012 = !DILocation(line: 4153, column: 13, scope: !8009)
!8013 = !DILocation(line: 4153, column: 5, scope: !8009)
!8014 = !DILocation(line: 4155, column: 3, scope: !7923)
!8015 = !DILocation(line: 4156, column: 1, scope: !7923)
!8016 = distinct !DISubprogram(name: "attribute_list_equal", scope: !3, file: !3, line: 6015, type: !5468, scopeLine: 6016, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8017)
!8017 = !{!8018, !8019}
!8018 = !DILocalVariable(name: "l1", arg: 1, scope: !8016, file: !3, line: 6015, type: !2774)
!8019 = !DILocalVariable(name: "l2", arg: 2, scope: !8016, file: !3, line: 6015, type: !2774)
!8020 = !DILocation(line: 0, scope: !8016)
!8021 = !DILocation(line: 6017, column: 10, scope: !8016)
!8022 = !DILocation(line: 6018, column: 3, scope: !8016)
!8023 = !DILocation(line: 6018, column: 6, scope: !8016)
!8024 = !DILocation(line: 6017, column: 3, scope: !8016)
!8025 = distinct !DISubprogram(name: "build_qualified_type", scope: !3, file: !3, line: 5479, type: !8026, scopeLine: 5480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8028)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{!1457, !1457, !1450}
!8028 = !{!8029, !8030, !8031}
!8029 = !DILocalVariable(name: "type", arg: 1, scope: !8025, file: !3, line: 5479, type: !1457)
!8030 = !DILocalVariable(name: "type_quals", arg: 2, scope: !8025, file: !3, line: 5479, type: !1450)
!8031 = !DILocalVariable(name: "t", scope: !8025, file: !3, line: 5481, type: !1457)
!8032 = !DILocation(line: 0, scope: !8025)
!8033 = !DILocation(line: 5484, column: 7, scope: !8025)
!8034 = !DILocation(line: 5487, column: 8, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 5487, column: 7)
!8036 = !DILocation(line: 5487, column: 7, scope: !8025)
!8037 = !DILocation(line: 5489, column: 11, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 5488, column: 5)
!8039 = !DILocation(line: 5490, column: 7, scope: !8038)
!8040 = !DILocation(line: 5492, column: 11, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 5492, column: 11)
!8042 = !DILocation(line: 5492, column: 11, scope: !8038)
!8043 = !DILocation(line: 5494, column: 2, scope: !8041)
!8044 = !DILocation(line: 5495, column: 38, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 5495, column: 16)
!8046 = !DILocation(line: 5495, column: 16, scope: !8041)
!8047 = !DILocation(line: 5498, column: 23, scope: !8045)
!8048 = !DILocation(line: 5498, column: 2, scope: !8045)
!8049 = !DILocation(line: 5498, column: 21, scope: !8045)
!8050 = !DILocation(line: 5506, column: 3, scope: !8025)
!8051 = !DILocation(line: 5502, column: 2, scope: !8045)
!8052 = !DILocation(line: 5502, column: 21, scope: !8045)
!8053 = distinct !DISubprogram(name: "build_distinct_type_copy", scope: !3, file: !3, line: 5515, type: !3923, scopeLine: 5516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8054)
!8054 = !{!8055, !8056}
!8055 = !DILocalVariable(name: "type", arg: 1, scope: !8053, file: !3, line: 5515, type: !1457)
!8056 = !DILocalVariable(name: "t", scope: !8053, file: !3, line: 5517, type: !1457)
!8057 = !DILocation(line: 0, scope: !8053)
!8058 = !DILocation(line: 5517, column: 12, scope: !8053)
!8059 = !DILocation(line: 5519, column: 3, scope: !8053)
!8060 = !DILocation(line: 5519, column: 23, scope: !8053)
!8061 = !DILocation(line: 5520, column: 3, scope: !8053)
!8062 = !DILocation(line: 5520, column: 25, scope: !8053)
!8063 = !DILocation(line: 5524, column: 7, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 5524, column: 7)
!8065 = !DILocation(line: 0, scope: !8064)
!8066 = !DILocation(line: 5524, column: 7, scope: !8053)
!8067 = !DILocation(line: 5525, column: 5, scope: !8064)
!8068 = !DILocation(line: 5530, column: 3, scope: !8053)
!8069 = !DILocation(line: 5530, column: 25, scope: !8053)
!8070 = !DILocation(line: 5531, column: 3, scope: !8053)
!8071 = !DILocation(line: 5531, column: 25, scope: !8053)
!8072 = !DILocation(line: 5537, column: 3, scope: !8053)
!8073 = distinct !DISubprogram(name: "attribute_hash_list", scope: !3, file: !3, line: 6000, type: !8074, scopeLine: 6001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8076)
!8074 = !DISubroutineType(types: !8075)
!8075 = !{!7, !2774, !1814}
!8076 = !{!8077, !8078, !8079}
!8077 = !DILocalVariable(name: "list", arg: 1, scope: !8073, file: !3, line: 6000, type: !2774)
!8078 = !DILocalVariable(name: "hashcode", arg: 2, scope: !8073, file: !3, line: 6000, type: !1814)
!8079 = !DILocalVariable(name: "tail", scope: !8073, file: !3, line: 6002, type: !2774)
!8080 = !DILocation(line: 0, scope: !8073)
!8081 = !DILocation(line: 6004, column: 8, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 6004, column: 3)
!8083 = !DILocation(line: 0, scope: !8082)
!8084 = !DILocation(line: 6004, column: 3, scope: !8082)
!8085 = !DILocation(line: 6006, column: 16, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 6004, column: 3)
!8087 = !DILocation(line: 6004, column: 34, scope: !8086)
!8088 = !DILocation(line: 6004, column: 3, scope: !8086)
!8089 = distinct !{!8089, !8084, !8090}
!8090 = !DILocation(line: 6006, column: 16, scope: !8082)
!8091 = !DILocation(line: 6008, column: 3, scope: !8073)
!8092 = distinct !DISubprogram(name: "type_hash_list", scope: !3, file: !3, line: 5769, type: !8074, scopeLine: 5770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8093)
!8093 = !{!8094, !8095, !8096}
!8094 = !DILocalVariable(name: "list", arg: 1, scope: !8092, file: !3, line: 5769, type: !2774)
!8095 = !DILocalVariable(name: "hashcode", arg: 2, scope: !8092, file: !3, line: 5769, type: !1814)
!8096 = !DILocalVariable(name: "tail", scope: !8092, file: !3, line: 5771, type: !2774)
!8097 = !DILocation(line: 0, scope: !8092)
!8098 = !DILocation(line: 5773, column: 8, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 5773, column: 3)
!8100 = !DILocation(line: 0, scope: !8099)
!8101 = !DILocation(line: 5773, column: 3, scope: !8099)
!8102 = !DILocation(line: 5774, column: 9, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 5774, column: 9)
!8104 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 5773, column: 3)
!8105 = !DILocation(line: 5774, column: 30, scope: !8103)
!8106 = !DILocation(line: 5774, column: 27, scope: !8103)
!8107 = !DILocation(line: 5774, column: 9, scope: !8104)
!8108 = !DILocation(line: 5775, column: 18, scope: !8103)
!8109 = !DILocation(line: 5775, column: 7, scope: !8103)
!8110 = !DILocation(line: 5773, column: 34, scope: !8104)
!8111 = !DILocation(line: 5773, column: 3, scope: !8104)
!8112 = distinct !{!8112, !8101, !8113}
!8113 = !DILocation(line: 5775, column: 18, scope: !8099)
!8114 = !DILocation(line: 5778, column: 3, scope: !8092)
!8115 = distinct !DISubprogram(name: "type_hash_canon", scope: !3, file: !3, line: 5943, type: !8116, scopeLine: 5944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8118)
!8116 = !DISubroutineType(types: !8117)
!8117 = !{!1457, !7, !1457}
!8118 = !{!8119, !8120, !8121}
!8119 = !DILocalVariable(name: "hashcode", arg: 1, scope: !8115, file: !3, line: 5943, type: !7)
!8120 = !DILocalVariable(name: "type", arg: 2, scope: !8115, file: !3, line: 5943, type: !1457)
!8121 = !DILocalVariable(name: "t1", scope: !8115, file: !3, line: 5945, type: !1457)
!8122 = !DILocation(line: 0, scope: !8115)
!8123 = !DILocation(line: 5949, column: 3, scope: !8115)
!8124 = !DILocation(line: 5951, column: 25, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 5951, column: 7)
!8126 = !DILocation(line: 5951, column: 8, scope: !8125)
!8127 = !DILocation(line: 5951, column: 7, scope: !8115)
!8128 = !DILocation(line: 5956, column: 8, scope: !8115)
!8129 = !DILocation(line: 5957, column: 10, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 5957, column: 7)
!8131 = !DILocation(line: 5957, column: 7, scope: !8115)
!8132 = !DILocation(line: 5967, column: 7, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 5966, column: 5)
!8134 = !DILocation(line: 5968, column: 7, scope: !8133)
!8135 = !DILocation(line: 5970, column: 1, scope: !8115)
!8136 = distinct !DISubprogram(name: "build_type_attribute_variant", scope: !3, file: !3, line: 4165, type: !4530, scopeLine: 4166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8137)
!8137 = !{!8138, !8139}
!8138 = !DILocalVariable(name: "ttype", arg: 1, scope: !8136, file: !3, line: 4165, type: !1457)
!8139 = !DILocalVariable(name: "attribute", arg: 2, scope: !8136, file: !3, line: 4165, type: !1457)
!8140 = !DILocation(line: 0, scope: !8136)
!8141 = !DILocation(line: 4168, column: 10, scope: !8136)
!8142 = !DILocation(line: 4167, column: 10, scope: !8136)
!8143 = !DILocation(line: 4167, column: 3, scope: !8136)
!8144 = distinct !DISubprogram(name: "assign_assembler_name_if_neeeded", scope: !3, file: !3, line: 4853, type: !6810, scopeLine: 4854, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8145)
!8145 = !{!8146, !8147}
!8146 = !DILocalVariable(name: "t", arg: 1, scope: !8144, file: !3, line: 4853, type: !1457)
!8147 = !DILocalVariable(name: "saved_location", scope: !8148, file: !3, line: 4868, type: !1582)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 4856, column: 5)
!8149 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 4855, column: 7)
!8150 = !DILocation(line: 0, scope: !8144)
!8151 = !DILocation(line: 4855, column: 7, scope: !8149)
!8152 = !DILocation(line: 4855, column: 7, scope: !8144)
!8153 = !DILocation(line: 4868, column: 35, scope: !8148)
!8154 = !DILocation(line: 0, scope: !8148)
!8155 = !DILocation(line: 4869, column: 24, scope: !8148)
!8156 = !DILocation(line: 4869, column: 22, scope: !8148)
!8157 = !DILocation(line: 4871, column: 7, scope: !8148)
!8158 = !DILocation(line: 4873, column: 22, scope: !8148)
!8159 = !DILocation(line: 4874, column: 5, scope: !8148)
!8160 = !DILocation(line: 4875, column: 1, scope: !8144)
!8161 = distinct !DISubprogram(name: "need_assembler_name_p", scope: !3, file: !3, line: 4289, type: !6091, scopeLine: 4290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8162)
!8162 = !{!8163}
!8163 = !DILocalVariable(name: "decl", arg: 1, scope: !8161, file: !3, line: 4289, type: !1457)
!8164 = !DILocation(line: 0, scope: !8161)
!8165 = !DILocation(line: 4292, column: 7, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 4292, column: 7)
!8167 = !DILocation(line: 4292, column: 24, scope: !8166)
!8168 = !DILocation(line: 4293, column: 7, scope: !8166)
!8169 = !DILocation(line: 4293, column: 27, scope: !8166)
!8170 = !DILocation(line: 4292, column: 7, scope: !8161)
!8171 = !DILocation(line: 4298, column: 8, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 4298, column: 7)
!8173 = !DILocation(line: 4299, column: 7, scope: !8172)
!8174 = !DILocation(line: 4299, column: 10, scope: !8172)
!8175 = !DILocation(line: 4298, column: 7, scope: !8161)
!8176 = !DILocation(line: 4303, column: 7, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 4303, column: 7)
!8178 = !DILocation(line: 4303, column: 7, scope: !8161)
!8179 = !DILocation(line: 4308, column: 24, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 4308, column: 7)
!8181 = !DILocation(line: 4309, column: 7, scope: !8180)
!8182 = !DILocation(line: 4309, column: 11, scope: !8180)
!8183 = !DILocation(line: 4310, column: 7, scope: !8180)
!8184 = !DILocation(line: 4310, column: 11, scope: !8180)
!8185 = !DILocation(line: 4311, column: 7, scope: !8180)
!8186 = !DILocation(line: 4311, column: 11, scope: !8180)
!8187 = !DILocation(line: 4308, column: 7, scope: !8161)
!8188 = !DILocation(line: 4314, column: 7, scope: !8161)
!8189 = !DILocation(line: 4318, column: 11, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 4318, column: 11)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 4315, column: 5)
!8192 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 4314, column: 7)
!8193 = !DILocation(line: 4319, column: 4, scope: !8190)
!8194 = !DILocation(line: 4319, column: 34, scope: !8190)
!8195 = !DILocation(line: 4318, column: 11, scope: !8191)
!8196 = !DILocation(line: 4323, column: 11, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 4323, column: 11)
!8198 = !DILocation(line: 4323, column: 34, scope: !8197)
!8199 = !DILocation(line: 4323, column: 11, scope: !8191)
!8200 = !DILocation(line: 4327, column: 12, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 4327, column: 11)
!8202 = !DILocation(line: 4327, column: 29, scope: !8201)
!8203 = !DILocation(line: 4327, column: 33, scope: !8201)
!8204 = !DILocation(line: 4327, column: 11, scope: !8191)
!8205 = !DILocation(line: 4331, column: 3, scope: !8161)
!8206 = !DILocation(line: 4332, column: 1, scope: !8161)
!8207 = distinct !DISubprogram(name: "free_lang_data", scope: !3, file: !3, line: 4946, type: !2831, scopeLine: 4947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8208)
!8208 = !{!8209}
!8209 = !DILocalVariable(name: "i", scope: !8207, file: !3, line: 4948, type: !7)
!8210 = !DILocation(line: 4951, column: 7, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 4951, column: 7)
!8212 = !DILocation(line: 4952, column: 11, scope: !8211)
!8213 = !DILocation(line: 4952, column: 7, scope: !8211)
!8214 = !DILocation(line: 4957, column: 3, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 4957, column: 3)
!8216 = !DILocation(line: 0, scope: !8215)
!8217 = !DILocation(line: 0, scope: !8207)
!8218 = !DILocation(line: 4957, column: 17, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 4957, column: 3)
!8220 = !DILocation(line: 4958, column: 9, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 4958, column: 9)
!8222 = !DILocation(line: 4958, column: 9, scope: !8219)
!8223 = !DILocation(line: 4959, column: 43, scope: !8221)
!8224 = !DILocation(line: 4959, column: 7, scope: !8221)
!8225 = !DILocation(line: 4959, column: 41, scope: !8221)
!8226 = !DILocation(line: 4957, column: 29, scope: !8219)
!8227 = !DILocation(line: 4957, column: 3, scope: !8219)
!8228 = distinct !{!8228, !8214, !8229}
!8229 = !DILocation(line: 4959, column: 74, scope: !8215)
!8230 = !DILocation(line: 4963, column: 3, scope: !8207)
!8231 = !DILocation(line: 4966, column: 23, scope: !8207)
!8232 = !DILocation(line: 4966, column: 21, scope: !8207)
!8233 = !DILocation(line: 4967, column: 23, scope: !8207)
!8234 = !DILocation(line: 4967, column: 21, scope: !8207)
!8235 = !DILocation(line: 4968, column: 7, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 4968, column: 7)
!8237 = !DILocation(line: 4968, column: 37, scope: !8236)
!8238 = !DILocation(line: 4969, column: 7, scope: !8236)
!8239 = !DILocation(line: 4969, column: 11, scope: !8236)
!8240 = !DILocation(line: 4970, column: 7, scope: !8236)
!8241 = !DILocation(line: 4970, column: 4, scope: !8236)
!8242 = !DILocation(line: 4971, column: 7, scope: !8236)
!8243 = !DILocation(line: 4971, column: 10, scope: !8236)
!8244 = !DILocation(line: 4971, column: 45, scope: !8236)
!8245 = !DILocation(line: 4972, column: 7, scope: !8236)
!8246 = !DILocation(line: 4972, column: 11, scope: !8236)
!8247 = !DILocation(line: 4968, column: 7, scope: !8207)
!8248 = !DILocation(line: 4974, column: 27, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 4973, column: 5)
!8250 = !DILocation(line: 4974, column: 25, scope: !8249)
!8251 = !DILocation(line: 4975, column: 7, scope: !8249)
!8252 = !DILocation(line: 4976, column: 59, scope: !8249)
!8253 = !DILocation(line: 4976, column: 44, scope: !8249)
!8254 = !DILocation(line: 4976, column: 7, scope: !8249)
!8255 = !DILocation(line: 4976, column: 42, scope: !8249)
!8256 = !DILocation(line: 4977, column: 7, scope: !8249)
!8257 = !DILocation(line: 4977, column: 42, scope: !8249)
!8258 = !DILocation(line: 4978, column: 28, scope: !8249)
!8259 = !DILocation(line: 4978, column: 26, scope: !8249)
!8260 = !DILocation(line: 4979, column: 27, scope: !8249)
!8261 = !DILocation(line: 4979, column: 25, scope: !8249)
!8262 = !DILocation(line: 4980, column: 5, scope: !8249)
!8263 = !DILocation(line: 4983, column: 7, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 4983, column: 7)
!8265 = !DILocation(line: 0, scope: !8264)
!8266 = !DILocation(line: 4983, column: 7, scope: !8207)
!8267 = !DILocation(line: 4984, column: 29, scope: !8264)
!8268 = !DILocation(line: 4984, column: 5, scope: !8264)
!8269 = !DILocation(line: 4986, column: 27, scope: !8264)
!8270 = !DILocation(line: 4990, column: 37, scope: !8207)
!8271 = !DILocation(line: 4991, column: 25, scope: !8207)
!8272 = !DILocation(line: 4992, column: 34, scope: !8207)
!8273 = !DILocation(line: 4993, column: 38, scope: !8207)
!8274 = !DILocation(line: 4994, column: 32, scope: !8207)
!8275 = !DILocation(line: 4997, column: 3, scope: !8207)
!8276 = !DILocation(line: 4997, column: 34, scope: !8207)
!8277 = !DILocation(line: 4998, column: 3, scope: !8207)
!8278 = !DILocation(line: 4998, column: 36, scope: !8207)
!8279 = !DILocation(line: 4999, column: 3, scope: !8207)
!8280 = !DILocation(line: 4999, column: 41, scope: !8207)
!8281 = !DILocation(line: 5001, column: 3, scope: !8207)
!8282 = !DILocation(line: 5002, column: 1, scope: !8207)
!8283 = distinct !DISubprogram(name: "is_attribute_p", scope: !3, file: !3, line: 5076, type: !8284, scopeLine: 5077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8286)
!8284 = !DISubroutineType(types: !8285)
!8285 = !{!1450, !1455, !2774}
!8286 = !{!8287, !8288}
!8287 = !DILocalVariable(name: "attr", arg: 1, scope: !8283, file: !3, line: 5076, type: !1455)
!8288 = !DILocalVariable(name: "ident", arg: 2, scope: !8283, file: !3, line: 5076, type: !2774)
!8289 = !DILocation(line: 0, scope: !8283)
!8290 = !DILocation(line: 5078, column: 44, scope: !8283)
!8291 = !DILocation(line: 5078, column: 10, scope: !8283)
!8292 = !DILocation(line: 5078, column: 3, scope: !8283)
!8293 = distinct !DISubprogram(name: "is_attribute_with_length_p", scope: !3, file: !3, line: 5033, type: !8294, scopeLine: 5034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8296)
!8294 = !DISubroutineType(types: !8295)
!8295 = !{!1450, !1455, !1450, !2774}
!8296 = !{!8297, !8298, !8299, !8300, !8301}
!8297 = !DILocalVariable(name: "attr", arg: 1, scope: !8293, file: !3, line: 5033, type: !1455)
!8298 = !DILocalVariable(name: "attr_len", arg: 2, scope: !8293, file: !3, line: 5033, type: !1450)
!8299 = !DILocalVariable(name: "ident", arg: 3, scope: !8293, file: !3, line: 5033, type: !2774)
!8300 = !DILocalVariable(name: "ident_len", scope: !8293, file: !3, line: 5035, type: !1450)
!8301 = !DILocalVariable(name: "p", scope: !8293, file: !3, line: 5036, type: !1455)
!8302 = !DILocation(line: 0, scope: !8293)
!8303 = !DILocation(line: 5038, column: 7, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 5038, column: 7)
!8305 = !DILocation(line: 5038, column: 25, scope: !8304)
!8306 = !DILocation(line: 5038, column: 7, scope: !8293)
!8307 = !DILocation(line: 5041, column: 7, scope: !8293)
!8308 = !DILocation(line: 5042, column: 15, scope: !8293)
!8309 = !DILocation(line: 5044, column: 17, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 5044, column: 7)
!8311 = !DILocation(line: 5045, column: 7, scope: !8310)
!8312 = !DILocation(line: 5045, column: 10, scope: !8310)
!8313 = !DILocation(line: 5045, column: 27, scope: !8310)
!8314 = !DILocation(line: 5044, column: 7, scope: !8293)
!8315 = !DILocation(line: 5049, column: 7, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 5049, column: 7)
!8317 = !DILocation(line: 5049, column: 15, scope: !8316)
!8318 = !DILocation(line: 5049, column: 7, scope: !8293)
!8319 = !DILocation(line: 5051, column: 7, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 5050, column: 5)
!8321 = !DILocation(line: 5052, column: 7, scope: !8320)
!8322 = !DILocation(line: 5053, column: 7, scope: !8320)
!8323 = !DILocation(line: 5054, column: 33, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8320, file: !3, line: 5054, column: 11)
!8325 = !DILocation(line: 5054, column: 21, scope: !8324)
!8326 = !DILocation(line: 5055, column: 4, scope: !8324)
!8327 = !DILocation(line: 5055, column: 21, scope: !8324)
!8328 = !DILocation(line: 5055, column: 29, scope: !8324)
!8329 = !DILocation(line: 5055, column: 7, scope: !8324)
!8330 = !DILocation(line: 5055, column: 43, scope: !8324)
!8331 = !DILocation(line: 5054, column: 11, scope: !8320)
!8332 = !DILocation(line: 5060, column: 33, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 5060, column: 11)
!8334 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 5059, column: 5)
!8335 = !DILocation(line: 5060, column: 21, scope: !8333)
!8336 = !DILocation(line: 5061, column: 4, scope: !8333)
!8337 = !DILocation(line: 5061, column: 7, scope: !8333)
!8338 = !DILocation(line: 5061, column: 12, scope: !8333)
!8339 = !DILocation(line: 5061, column: 19, scope: !8333)
!8340 = !DILocation(line: 5061, column: 22, scope: !8333)
!8341 = !DILocation(line: 5061, column: 27, scope: !8333)
!8342 = !DILocation(line: 5062, column: 4, scope: !8333)
!8343 = !DILocation(line: 5062, column: 19, scope: !8333)
!8344 = !DILocation(line: 5062, column: 7, scope: !8333)
!8345 = !DILocation(line: 5062, column: 24, scope: !8333)
!8346 = !DILocation(line: 5062, column: 31, scope: !8333)
!8347 = !DILocation(line: 5062, column: 46, scope: !8333)
!8348 = !DILocation(line: 5062, column: 34, scope: !8333)
!8349 = !DILocation(line: 5062, column: 51, scope: !8333)
!8350 = !DILocation(line: 5063, column: 4, scope: !8333)
!8351 = !DILocation(line: 5063, column: 24, scope: !8333)
!8352 = !DILocation(line: 5063, column: 29, scope: !8333)
!8353 = !DILocation(line: 5063, column: 7, scope: !8333)
!8354 = !DILocation(line: 5063, column: 39, scope: !8333)
!8355 = !DILocation(line: 5060, column: 11, scope: !8334)
!8356 = !DILocation(line: 5067, column: 3, scope: !8293)
!8357 = !DILocation(line: 5068, column: 1, scope: !8293)
!8358 = distinct !DISubprogram(name: "lookup_attribute", scope: !3, file: !3, line: 5088, type: !7774, scopeLine: 5089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8359)
!8359 = !{!8360, !8361, !8362, !8363}
!8360 = !DILocalVariable(name: "attr_name", arg: 1, scope: !8358, file: !3, line: 5088, type: !1455)
!8361 = !DILocalVariable(name: "list", arg: 2, scope: !8358, file: !3, line: 5088, type: !1457)
!8362 = !DILocalVariable(name: "l", scope: !8358, file: !3, line: 5090, type: !1457)
!8363 = !DILocalVariable(name: "attr_len", scope: !8358, file: !3, line: 5091, type: !1830)
!8364 = !DILocation(line: 0, scope: !8358)
!8365 = !DILocation(line: 5091, column: 21, scope: !8358)
!8366 = !DILocation(line: 0, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 5096, column: 11)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 5094, column: 5)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 5093, column: 3)
!8370 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 5093, column: 3)
!8371 = !DILocation(line: 5093, column: 8, scope: !8370)
!8372 = !DILocation(line: 0, scope: !8370)
!8373 = !DILocation(line: 5093, column: 3, scope: !8370)
!8374 = !DILocation(line: 5095, column: 7, scope: !8368)
!8375 = !DILocation(line: 5096, column: 60, scope: !8367)
!8376 = !DILocation(line: 5096, column: 11, scope: !8367)
!8377 = !DILocation(line: 5096, column: 11, scope: !8368)
!8378 = !DILocation(line: 5093, column: 25, scope: !8369)
!8379 = !DILocation(line: 5093, column: 3, scope: !8369)
!8380 = distinct !{!8380, !8373, !8381}
!8381 = !DILocation(line: 5098, column: 5, scope: !8370)
!8382 = !DILocation(line: 5100, column: 1, scope: !8358)
!8383 = distinct !DISubprogram(name: "remove_attribute", scope: !3, file: !3, line: 5106, type: !7774, scopeLine: 5107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8384)
!8384 = !{!8385, !8386, !8387, !8388, !8389}
!8385 = !DILocalVariable(name: "attr_name", arg: 1, scope: !8383, file: !3, line: 5106, type: !1455)
!8386 = !DILocalVariable(name: "list", arg: 2, scope: !8383, file: !3, line: 5106, type: !1457)
!8387 = !DILocalVariable(name: "p", scope: !8383, file: !3, line: 5108, type: !1964)
!8388 = !DILocalVariable(name: "attr_len", scope: !8383, file: !3, line: 5109, type: !1830)
!8389 = !DILocalVariable(name: "l", scope: !8390, file: !3, line: 5113, type: !1457)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 5112, column: 5)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 5111, column: 3)
!8392 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 5111, column: 3)
!8393 = !DILocation(line: 0, scope: !8383)
!8394 = !DILocation(line: 5109, column: 21, scope: !8383)
!8395 = !DILocation(line: 0, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 5115, column: 11)
!8397 = !DILocation(line: 5111, column: 8, scope: !8392)
!8398 = !DILocation(line: 5111, column: 19, scope: !8391)
!8399 = !DILocation(line: 5111, column: 10, scope: !8392)
!8400 = !DILocation(line: 5111, column: 3, scope: !8392)
!8401 = !DILocation(line: 0, scope: !8390)
!8402 = !DILocation(line: 5114, column: 7, scope: !8390)
!8403 = !DILocation(line: 5115, column: 60, scope: !8396)
!8404 = !DILocation(line: 5115, column: 11, scope: !8396)
!8405 = !DILocation(line: 5115, column: 11, scope: !8390)
!8406 = !DILocation(line: 5116, column: 7, scope: !8396)
!8407 = !DILocation(line: 5116, column: 5, scope: !8396)
!8408 = !DILocation(line: 5116, column: 2, scope: !8396)
!8409 = !DILocation(line: 0, scope: !8392)
!8410 = !DILocation(line: 5111, column: 3, scope: !8391)
!8411 = distinct !{!8411, !8400, !8412}
!8412 = !DILocation(line: 5119, column: 5, scope: !8392)
!8413 = !DILocation(line: 5121, column: 10, scope: !8383)
!8414 = !DILocation(line: 5121, column: 3, scope: !8383)
!8415 = distinct !DISubprogram(name: "merge_attributes", scope: !3, file: !3, line: 5127, type: !4530, scopeLine: 5128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8416)
!8416 = !{!8417, !8418, !8419, !8420}
!8417 = !DILocalVariable(name: "a1", arg: 1, scope: !8415, file: !3, line: 5127, type: !1457)
!8418 = !DILocalVariable(name: "a2", arg: 2, scope: !8415, file: !3, line: 5127, type: !1457)
!8419 = !DILocalVariable(name: "attributes", scope: !8415, file: !3, line: 5129, type: !1457)
!8420 = !DILocalVariable(name: "a", scope: !8421, file: !3, line: 5151, type: !1457)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 5150, column: 6)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 5149, column: 4)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 5149, column: 4)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 5143, column: 2)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 5140, column: 11)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 5139, column: 5)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 5138, column: 12)
!8428 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 5133, column: 7)
!8429 = !DILocation(line: 0, scope: !8415)
!8430 = !DILocation(line: 5133, column: 25, scope: !8428)
!8431 = !DILocation(line: 5133, column: 7, scope: !8415)
!8432 = !DILocation(line: 5138, column: 15, scope: !8427)
!8433 = !DILocation(line: 5138, column: 20, scope: !8427)
!8434 = !DILocation(line: 5138, column: 25, scope: !8427)
!8435 = !DILocation(line: 5138, column: 12, scope: !8428)
!8436 = !DILocation(line: 5140, column: 11, scope: !8425)
!8437 = !DILocation(line: 5140, column: 11, scope: !8426)
!8438 = !DILocation(line: 5146, column: 8, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 5146, column: 8)
!8440 = !DILocation(line: 5146, column: 27, scope: !8439)
!8441 = !DILocation(line: 5146, column: 25, scope: !8439)
!8442 = !DILocation(line: 5146, column: 8, scope: !8424)
!8443 = !DILocation(line: 5149, column: 4, scope: !8424)
!8444 = !DILocation(line: 0, scope: !8424)
!8445 = !DILocation(line: 5149, column: 14, scope: !8422)
!8446 = !DILocation(line: 5149, column: 4, scope: !8423)
!8447 = !DILocation(line: 5152, column: 35, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 5152, column: 8)
!8449 = !DILocation(line: 5152, column: 17, scope: !8448)
!8450 = !DILocation(line: 0, scope: !8421)
!8451 = !DILocation(line: 0, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 5158, column: 9)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 5157, column: 3)
!8454 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 5152, column: 8)
!8455 = !DILocation(line: 5152, column: 13, scope: !8448)
!8456 = !DILocation(line: 0, scope: !8448)
!8457 = !DILocation(line: 5152, column: 8, scope: !8448)
!8458 = !DILocation(line: 5158, column: 9, scope: !8452)
!8459 = !DILocation(line: 5158, column: 24, scope: !8452)
!8460 = !DILocation(line: 5159, column: 9, scope: !8452)
!8461 = !DILocation(line: 5159, column: 12, scope: !8452)
!8462 = !DILocation(line: 5159, column: 39, scope: !8452)
!8463 = !DILocation(line: 5160, column: 9, scope: !8452)
!8464 = !DILocation(line: 5160, column: 12, scope: !8452)
!8465 = !DILocation(line: 5160, column: 28, scope: !8452)
!8466 = !DILocation(line: 5161, column: 9, scope: !8452)
!8467 = !DILocation(line: 5161, column: 12, scope: !8452)
!8468 = !DILocation(line: 5161, column: 40, scope: !8452)
!8469 = !DILocation(line: 5158, column: 9, scope: !8453)
!8470 = !DILocation(line: 5163, column: 13, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 5163, column: 13)
!8472 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 5162, column: 7)
!8473 = !DILocation(line: 5164, column: 25, scope: !8471)
!8474 = !DILocation(line: 5163, column: 13, scope: !8472)
!8475 = !DILocation(line: 5168, column: 11, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 5167, column: 14)
!8477 = !DILocation(line: 5167, column: 14, scope: !8476)
!8478 = !DILocation(line: 5168, column: 28, scope: !8476)
!8479 = !DILocation(line: 5167, column: 14, scope: !8452)
!8480 = !DILocation(line: 5155, column: 28, scope: !8454)
!8481 = !DILocation(line: 5156, column: 7, scope: !8454)
!8482 = !DILocation(line: 5155, column: 10, scope: !8454)
!8483 = !DILocation(line: 5152, column: 8, scope: !8454)
!8484 = distinct !{!8484, !8457, !8485}
!8485 = !DILocation(line: 5170, column: 3, scope: !8448)
!8486 = !DILocation(line: 5171, column: 12, scope: !8421)
!8487 = !DILocation(line: 5173, column: 10, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 5172, column: 3)
!8489 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 5171, column: 12)
!8490 = !DILocation(line: 5174, column: 5, scope: !8488)
!8491 = !DILocation(line: 5174, column: 21, scope: !8488)
!8492 = !DILocation(line: 5176, column: 3, scope: !8488)
!8493 = !DILocation(line: 5149, column: 25, scope: !8422)
!8494 = !DILocation(line: 5149, column: 4, scope: !8422)
!8495 = distinct !{!8495, !8446, !8496}
!8496 = !DILocation(line: 5177, column: 6, scope: !8423)
!8497 = !DILocation(line: 5180, column: 3, scope: !8415)
!8498 = !DILocation(line: 0, scope: !8428)
!8499 = distinct !DISubprogram(name: "attribute_list_contained", scope: !3, file: !3, line: 6030, type: !5468, scopeLine: 6031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8500)
!8500 = !{!8501, !8502, !8503, !8504, !8505}
!8501 = !DILocalVariable(name: "l1", arg: 1, scope: !8499, file: !3, line: 6030, type: !2774)
!8502 = !DILocalVariable(name: "l2", arg: 2, scope: !8499, file: !3, line: 6030, type: !2774)
!8503 = !DILocalVariable(name: "t1", scope: !8499, file: !3, line: 6032, type: !2774)
!8504 = !DILocalVariable(name: "t2", scope: !8499, file: !3, line: 6032, type: !2774)
!8505 = !DILocalVariable(name: "attr", scope: !8506, file: !3, line: 6051, type: !2774)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 6050, column: 5)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 6049, column: 3)
!8508 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 6049, column: 3)
!8509 = !DILocation(line: 0, scope: !8499)
!8510 = !DILocation(line: 6035, column: 10, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 6035, column: 7)
!8512 = !DILocation(line: 6035, column: 7, scope: !8499)
!8513 = !DILocation(line: 6039, column: 3, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 6039, column: 3)
!8515 = !DILocation(line: 0, scope: !8514)
!8516 = !DILocation(line: 6040, column: 11, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 6039, column: 3)
!8518 = !DILocation(line: 6040, column: 22, scope: !8517)
!8519 = !DILocation(line: 6040, column: 16, scope: !8517)
!8520 = !DILocation(line: 6041, column: 12, scope: !8517)
!8521 = !DILocation(line: 6041, column: 33, scope: !8517)
!8522 = !DILocation(line: 6041, column: 30, scope: !8517)
!8523 = !DILocation(line: 6042, column: 9, scope: !8517)
!8524 = !DILocation(line: 6042, column: 12, scope: !8517)
!8525 = !DILocation(line: 6042, column: 31, scope: !8517)
!8526 = !DILocation(line: 6042, column: 28, scope: !8517)
!8527 = !DILocation(line: 6043, column: 13, scope: !8517)
!8528 = !DILocation(line: 6043, column: 35, scope: !8517)
!8529 = !DILocation(line: 6039, column: 3, scope: !8517)
!8530 = distinct !{!8530, !8513, !8531}
!8531 = !DILocation(line: 6043, column: 51, scope: !8514)
!8532 = !DILocation(line: 6046, column: 10, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 6046, column: 7)
!8534 = !DILocation(line: 6046, column: 21, scope: !8533)
!8535 = !DILocation(line: 6046, column: 15, scope: !8533)
!8536 = !DILocation(line: 6049, column: 3, scope: !8508)
!8537 = !DILocation(line: 6049, column: 13, scope: !8507)
!8538 = !DILocation(line: 6055, column: 37, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 6055, column: 7)
!8540 = !DILocation(line: 6055, column: 19, scope: !8539)
!8541 = !DILocation(line: 0, scope: !8506)
!8542 = !DILocation(line: 0, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 6061, column: 8)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 6060, column: 2)
!8545 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 6055, column: 7)
!8546 = !DILocation(line: 6055, column: 12, scope: !8539)
!8547 = !DILocation(line: 0, scope: !8539)
!8548 = !DILocation(line: 6055, column: 7, scope: !8539)
!8549 = !DILocation(line: 6061, column: 8, scope: !8543)
!8550 = !DILocation(line: 6061, column: 24, scope: !8543)
!8551 = !DILocation(line: 6062, column: 8, scope: !8543)
!8552 = !DILocation(line: 6062, column: 11, scope: !8543)
!8553 = !DILocation(line: 6062, column: 39, scope: !8543)
!8554 = !DILocation(line: 6063, column: 8, scope: !8543)
!8555 = !DILocation(line: 6063, column: 11, scope: !8543)
!8556 = !DILocation(line: 6063, column: 29, scope: !8543)
!8557 = !DILocation(line: 6064, column: 8, scope: !8543)
!8558 = !DILocation(line: 6064, column: 11, scope: !8543)
!8559 = !DILocation(line: 6064, column: 41, scope: !8543)
!8560 = !DILocation(line: 6061, column: 8, scope: !8544)
!8561 = !DILocation(line: 6066, column: 12, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 6066, column: 12)
!8563 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 6065, column: 6)
!8564 = !DILocation(line: 6067, column: 26, scope: !8562)
!8565 = !DILocation(line: 6066, column: 12, scope: !8563)
!8566 = !DILocation(line: 6070, column: 48, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 6070, column: 13)
!8568 = !DILocation(line: 6070, column: 13, scope: !8567)
!8569 = !DILocation(line: 6070, column: 67, scope: !8567)
!8570 = !DILocation(line: 6070, column: 13, scope: !8543)
!8571 = !DILocation(line: 6058, column: 30, scope: !8545)
!8572 = !DILocation(line: 6059, column: 9, scope: !8545)
!8573 = !DILocation(line: 6058, column: 12, scope: !8545)
!8574 = !DILocation(line: 6055, column: 7, scope: !8545)
!8575 = distinct !{!8575, !8548, !8576}
!8576 = !DILocation(line: 6072, column: 2, scope: !8539)
!8577 = !DILocation(line: 6074, column: 11, scope: !8506)
!8578 = !DILocation(line: 6049, column: 24, scope: !8507)
!8579 = !DILocation(line: 6049, column: 3, scope: !8507)
!8580 = distinct !{!8580, !8536, !8581}
!8581 = !DILocation(line: 6076, column: 5, scope: !8508)
!8582 = !DILocation(line: 6079, column: 1, scope: !8499)
!8583 = distinct !DISubprogram(name: "simple_cst_list_equal", scope: !3, file: !3, line: 6283, type: !5468, scopeLine: 6284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8584)
!8584 = !{!8585, !8586}
!8585 = !DILocalVariable(name: "l1", arg: 1, scope: !8583, file: !3, line: 6283, type: !2774)
!8586 = !DILocalVariable(name: "l2", arg: 2, scope: !8583, file: !3, line: 6283, type: !2774)
!8587 = !DILocation(line: 0, scope: !8583)
!8588 = !DILocation(line: 6285, column: 3, scope: !8583)
!8589 = !DILocation(line: 6285, column: 13, scope: !8583)
!8590 = !DILocation(line: 6285, column: 32, scope: !8583)
!8591 = !DILocation(line: 6285, column: 26, scope: !8583)
!8592 = !DILocation(line: 6287, column: 29, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 6287, column: 11)
!8594 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 6286, column: 5)
!8595 = !DILocation(line: 6287, column: 46, scope: !8593)
!8596 = !DILocation(line: 6287, column: 11, scope: !8593)
!8597 = !DILocation(line: 6287, column: 63, scope: !8593)
!8598 = !DILocation(line: 6287, column: 11, scope: !8594)
!8599 = !DILocation(line: 6290, column: 12, scope: !8594)
!8600 = !DILocation(line: 6291, column: 12, scope: !8594)
!8601 = distinct !{!8601, !8588, !8602}
!8602 = !DILocation(line: 6292, column: 5, scope: !8583)
!8603 = !DILocation(line: 6294, column: 13, scope: !8583)
!8604 = !DILocation(line: 6294, column: 3, scope: !8583)
!8605 = !DILocation(line: 6295, column: 1, scope: !8583)
!8606 = distinct !DISubprogram(name: "simple_cst_equal", scope: !3, file: !3, line: 6304, type: !5468, scopeLine: 6305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8607)
!8607 = !{!8608, !8609, !8610, !8611, !8612, !8613, !8614, !8617, !8618, !8619, !8621, !8622, !8623}
!8608 = !DILocalVariable(name: "t1", arg: 1, scope: !8606, file: !3, line: 6304, type: !2774)
!8609 = !DILocalVariable(name: "t2", arg: 2, scope: !8606, file: !3, line: 6304, type: !2774)
!8610 = !DILocalVariable(name: "code1", scope: !8606, file: !3, line: 6306, type: !155)
!8611 = !DILocalVariable(name: "code2", scope: !8606, file: !3, line: 6306, type: !155)
!8612 = !DILocalVariable(name: "cmp", scope: !8606, file: !3, line: 6307, type: !1450)
!8613 = !DILocalVariable(name: "i", scope: !8606, file: !3, line: 6308, type: !1450)
!8614 = !DILocalVariable(name: "idx", scope: !8615, file: !3, line: 6353, type: !1511)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6352, column: 7)
!8616 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 6335, column: 5)
!8617 = !DILocalVariable(name: "v1", scope: !8615, file: !3, line: 6354, type: !2523)
!8618 = !DILocalVariable(name: "v2", scope: !8615, file: !3, line: 6355, type: !2523)
!8619 = !DILocalVariable(name: "arg1", scope: !8620, file: !3, line: 6378, type: !2774)
!8620 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6377, column: 7)
!8621 = !DILocalVariable(name: "arg2", scope: !8620, file: !3, line: 6378, type: !2774)
!8622 = !DILocalVariable(name: "iter1", scope: !8620, file: !3, line: 6379, type: !6144)
!8623 = !DILocalVariable(name: "iter2", scope: !8620, file: !3, line: 6379, type: !6144)
!8624 = !DILocation(line: 0, scope: !8606)
!8625 = !DILocation(line: 6310, column: 10, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 6310, column: 7)
!8627 = !DILocation(line: 6310, column: 7, scope: !8606)
!8628 = !DILocation(line: 6312, column: 10, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 6312, column: 7)
!8630 = !DILocation(line: 6312, column: 21, scope: !8629)
!8631 = !DILocation(line: 6312, column: 15, scope: !8629)
!8632 = !DILocation(line: 6315, column: 11, scope: !8606)
!8633 = !DILocation(line: 6316, column: 11, scope: !8606)
!8634 = !DILocation(line: 6318, column: 7, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 6318, column: 7)
!8636 = !DILocation(line: 6320, column: 11, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 6320, column: 11)
!8638 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 6319, column: 5)
!8639 = !DILocation(line: 6322, column: 27, scope: !8637)
!8640 = !DILocation(line: 6322, column: 49, scope: !8637)
!8641 = !DILocation(line: 6322, column: 9, scope: !8637)
!8642 = !DILocation(line: 6322, column: 2, scope: !8637)
!8643 = !DILocation(line: 6324, column: 27, scope: !8637)
!8644 = !DILocation(line: 6324, column: 9, scope: !8637)
!8645 = !DILocation(line: 6324, column: 2, scope: !8637)
!8646 = !DILocation(line: 6327, column: 12, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 6327, column: 12)
!8648 = !DILocation(line: 6329, column: 34, scope: !8647)
!8649 = !DILocation(line: 6329, column: 12, scope: !8647)
!8650 = !DILocation(line: 6329, column: 5, scope: !8647)
!8651 = !DILocation(line: 6331, column: 13, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 6331, column: 7)
!8653 = !DILocation(line: 6331, column: 7, scope: !8606)
!8654 = !DILocation(line: 6334, column: 3, scope: !8606)
!8655 = !DILocation(line: 6337, column: 15, scope: !8616)
!8656 = !DILocation(line: 6337, column: 40, scope: !8616)
!8657 = !DILocation(line: 6337, column: 37, scope: !8616)
!8658 = !DILocation(line: 6338, column: 8, scope: !8616)
!8659 = !DILocation(line: 6338, column: 11, scope: !8616)
!8660 = !DILocation(line: 6338, column: 37, scope: !8616)
!8661 = !DILocation(line: 6338, column: 34, scope: !8616)
!8662 = !DILocation(line: 6337, column: 7, scope: !8616)
!8663 = !DILocation(line: 6341, column: 14, scope: !8616)
!8664 = !DILocation(line: 6341, column: 7, scope: !8616)
!8665 = !DILocation(line: 6344, column: 14, scope: !8616)
!8666 = !DILocation(line: 6344, column: 7, scope: !8616)
!8667 = !DILocation(line: 6347, column: 15, scope: !8616)
!8668 = !DILocation(line: 6347, column: 42, scope: !8616)
!8669 = !DILocation(line: 6347, column: 39, scope: !8616)
!8670 = !DILocation(line: 6348, column: 8, scope: !8616)
!8671 = !DILocation(line: 6348, column: 21, scope: !8616)
!8672 = !DILocation(line: 6348, column: 47, scope: !8616)
!8673 = !DILocation(line: 6349, column: 5, scope: !8616)
!8674 = !DILocation(line: 6348, column: 13, scope: !8616)
!8675 = !DILocation(line: 6348, column: 11, scope: !8616)
!8676 = !DILocation(line: 6347, column: 7, scope: !8616)
!8677 = !DILocation(line: 6354, column: 33, scope: !8615)
!8678 = !DILocation(line: 0, scope: !8615)
!8679 = !DILocation(line: 6355, column: 33, scope: !8615)
!8680 = !DILocation(line: 6357, column: 6, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 6357, column: 6)
!8682 = !DILocation(line: 6357, column: 42, scope: !8681)
!8683 = !DILocation(line: 6357, column: 39, scope: !8681)
!8684 = !DILocation(line: 6357, column: 6, scope: !8615)
!8685 = !DILocation(line: 6360, column: 9, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 6360, column: 9)
!8687 = !DILocation(line: 0, scope: !8686)
!8688 = !DILocation(line: 6360, column: 29, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 6360, column: 9)
!8690 = !DILocation(line: 6360, column: 27, scope: !8689)
!8691 = !DILocation(line: 6362, column: 27, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 6362, column: 8)
!8693 = !DILocation(line: 6362, column: 65, scope: !8692)
!8694 = !DILocation(line: 6363, column: 6, scope: !8692)
!8695 = !DILocation(line: 6363, column: 44, scope: !8692)
!8696 = !DILocation(line: 6362, column: 9, scope: !8692)
!8697 = !DILocation(line: 6362, column: 8, scope: !8689)
!8698 = !DILocation(line: 6360, column: 63, scope: !8689)
!8699 = !DILocation(line: 6360, column: 9, scope: !8689)
!8700 = distinct !{!8700, !8685, !8701}
!8701 = !DILocation(line: 6364, column: 13, scope: !8686)
!8702 = !DILocation(line: 6369, column: 32, scope: !8616)
!8703 = !DILocation(line: 6369, column: 54, scope: !8616)
!8704 = !DILocation(line: 6369, column: 14, scope: !8616)
!8705 = !DILocation(line: 6369, column: 7, scope: !8616)
!8706 = !DILocation(line: 6372, column: 31, scope: !8616)
!8707 = !DILocation(line: 6372, column: 50, scope: !8616)
!8708 = !DILocation(line: 6372, column: 13, scope: !8616)
!8709 = !DILocation(line: 6373, column: 15, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6373, column: 11)
!8711 = !DILocation(line: 6373, column: 11, scope: !8616)
!8712 = !DILocation(line: 6375, column: 11, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6375, column: 11)
!8714 = !DILocation(line: 6375, column: 35, scope: !8713)
!8715 = !DILocation(line: 6375, column: 32, scope: !8713)
!8716 = !DILocation(line: 6375, column: 11, scope: !8616)
!8717 = !DILocation(line: 6379, column: 2, scope: !8620)
!8718 = !DILocation(line: 0, scope: !8620)
!8719 = !DILocation(line: 6380, column: 14, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 6380, column: 2)
!8721 = !DILocation(line: 6381, column: 16, scope: !8720)
!8722 = !DILocation(line: 6380, column: 7, scope: !8720)
!8723 = !DILocation(line: 0, scope: !8720)
!8724 = !DILocation(line: 6382, column: 7, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 6380, column: 2)
!8726 = !DILocation(line: 6382, column: 12, scope: !8725)
!8727 = !DILocation(line: 6380, column: 2, scope: !8720)
!8728 = !DILocation(line: 6386, column: 12, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 6385, column: 4)
!8730 = !DILocation(line: 6387, column: 14, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 6387, column: 10)
!8732 = !DILocation(line: 6387, column: 10, scope: !8729)
!8733 = !DILocation(line: 6383, column: 14, scope: !8725)
!8734 = !DILocation(line: 6384, column: 16, scope: !8725)
!8735 = !DILocation(line: 6380, column: 2, scope: !8725)
!8736 = distinct !{!8736, !8727, !8737}
!8737 = !DILocation(line: 6389, column: 4, scope: !8720)
!8738 = !DILocation(line: 6390, column: 14, scope: !8620)
!8739 = !DILocation(line: 6390, column: 2, scope: !8620)
!8740 = !DILocation(line: 6391, column: 7, scope: !8616)
!8741 = !DILocation(line: 6398, column: 12, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6398, column: 11)
!8743 = !DILocation(line: 6398, column: 45, scope: !8742)
!8744 = !DILocation(line: 6399, column: 5, scope: !8742)
!8745 = !DILocation(line: 6399, column: 8, scope: !8742)
!8746 = !DILocation(line: 6399, column: 41, scope: !8742)
!8747 = !DILocation(line: 6400, column: 5, scope: !8742)
!8748 = !DILocation(line: 6400, column: 9, scope: !8742)
!8749 = !DILocation(line: 6401, column: 4, scope: !8742)
!8750 = !DILocation(line: 6401, column: 8, scope: !8742)
!8751 = !DILocation(line: 6401, column: 41, scope: !8742)
!8752 = !DILocation(line: 6402, column: 8, scope: !8742)
!8753 = !DILocation(line: 6402, column: 11, scope: !8742)
!8754 = !DILocation(line: 6402, column: 44, scope: !8742)
!8755 = !DILocation(line: 6403, column: 8, scope: !8742)
!8756 = !DILocation(line: 6403, column: 12, scope: !8742)
!8757 = !DILocation(line: 6398, column: 11, scope: !8616)
!8758 = !DILocation(line: 6406, column: 8, scope: !8742)
!8759 = !DILocation(line: 0, scope: !8742)
!8760 = !DILocation(line: 6408, column: 15, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6408, column: 11)
!8762 = !DILocation(line: 6408, column: 11, scope: !8616)
!8763 = !DILocation(line: 6411, column: 32, scope: !8616)
!8764 = !DILocation(line: 6411, column: 54, scope: !8616)
!8765 = !DILocation(line: 6411, column: 14, scope: !8616)
!8766 = !DILocation(line: 6411, column: 7, scope: !8616)
!8767 = !DILocation(line: 6414, column: 31, scope: !8616)
!8768 = !DILocation(line: 6414, column: 53, scope: !8616)
!8769 = !DILocation(line: 6414, column: 13, scope: !8616)
!8770 = !DILocation(line: 6415, column: 15, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6415, column: 11)
!8772 = !DILocation(line: 6415, column: 11, scope: !8616)
!8773 = !DILocation(line: 6418, column: 32, scope: !8616)
!8774 = !DILocation(line: 6418, column: 14, scope: !8616)
!8775 = !DILocation(line: 6418, column: 7, scope: !8616)
!8776 = !DILocation(line: 6421, column: 11, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6421, column: 11)
!8778 = !DILocation(line: 6421, column: 35, scope: !8777)
!8779 = !DILocation(line: 6421, column: 32, scope: !8777)
!8780 = !DILocation(line: 6421, column: 11, scope: !8616)
!8781 = !DILocation(line: 6422, column: 27, scope: !8777)
!8782 = !DILocation(line: 6422, column: 49, scope: !8777)
!8783 = !DILocation(line: 6422, column: 9, scope: !8777)
!8784 = !DILocation(line: 6422, column: 2, scope: !8777)
!8785 = !DILocation(line: 6440, column: 19, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 6440, column: 7)
!8787 = !DILocation(line: 6440, column: 7, scope: !8606)
!8788 = !DILocation(line: 6443, column: 11, scope: !8606)
!8789 = !DILocation(line: 6443, column: 3, scope: !8606)
!8790 = !DILocation(line: 6454, column: 28, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 6453, column: 2)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 6452, column: 7)
!8793 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 6452, column: 7)
!8794 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 6444, column: 5)
!8795 = !DILocation(line: 0, scope: !8792)
!8796 = !DILocation(line: 0, scope: !8791)
!8797 = !DILocation(line: 6452, column: 21, scope: !8792)
!8798 = !DILocation(line: 6452, column: 12, scope: !8793)
!8799 = !DILocation(line: 0, scope: !8793)
!8800 = !DILocation(line: 0, scope: !8794)
!8801 = !DILocation(line: 6452, column: 7, scope: !8793)
!8802 = !DILocation(line: 6454, column: 50, scope: !8791)
!8803 = !DILocation(line: 6454, column: 10, scope: !8791)
!8804 = !DILocation(line: 6455, column: 12, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 6455, column: 8)
!8806 = !DILocation(line: 6455, column: 8, scope: !8791)
!8807 = !DILocation(line: 6452, column: 50, scope: !8792)
!8808 = !DILocation(line: 6452, column: 7, scope: !8792)
!8809 = distinct !{!8809, !8801, !8810}
!8810 = !DILocation(line: 6457, column: 2, scope: !8793)
!8811 = !DILocation(line: 6464, column: 1, scope: !8606)
!8812 = distinct !DISubprogram(name: "merge_type_attributes", scope: !3, file: !3, line: 5187, type: !4530, scopeLine: 5188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8813)
!8813 = !{!8814, !8815}
!8814 = !DILocalVariable(name: "t1", arg: 1, scope: !8812, file: !3, line: 5187, type: !1457)
!8815 = !DILocalVariable(name: "t2", arg: 2, scope: !8812, file: !3, line: 5187, type: !1457)
!8816 = !DILocation(line: 0, scope: !8812)
!8817 = !DILocation(line: 5189, column: 28, scope: !8812)
!8818 = !DILocation(line: 5190, column: 7, scope: !8812)
!8819 = !DILocation(line: 5189, column: 10, scope: !8812)
!8820 = !DILocation(line: 5189, column: 3, scope: !8812)
!8821 = distinct !DISubprogram(name: "merge_decl_attributes", scope: !3, file: !3, line: 5197, type: !4530, scopeLine: 5198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8822)
!8822 = !{!8823, !8824}
!8823 = !DILocalVariable(name: "olddecl", arg: 1, scope: !8821, file: !3, line: 5197, type: !1457)
!8824 = !DILocalVariable(name: "newdecl", arg: 2, scope: !8821, file: !3, line: 5197, type: !1457)
!8825 = !DILocation(line: 0, scope: !8821)
!8826 = !DILocation(line: 5199, column: 28, scope: !8821)
!8827 = !DILocation(line: 5200, column: 7, scope: !8821)
!8828 = !DILocation(line: 5199, column: 10, scope: !8821)
!8829 = !DILocation(line: 5199, column: 3, scope: !8821)
!8830 = distinct !DISubprogram(name: "check_qualified_type", scope: !3, file: !3, line: 5443, type: !8831, scopeLine: 5444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8833)
!8831 = !DISubroutineType(types: !8832)
!8832 = !{!1449, !2774, !2774, !1450}
!8833 = !{!8834, !8835, !8836}
!8834 = !DILocalVariable(name: "cand", arg: 1, scope: !8830, file: !3, line: 5443, type: !2774)
!8835 = !DILocalVariable(name: "base", arg: 2, scope: !8830, file: !3, line: 5443, type: !2774)
!8836 = !DILocalVariable(name: "type_quals", arg: 3, scope: !8830, file: !3, line: 5443, type: !1450)
!8837 = !DILocation(line: 0, scope: !8830)
!8838 = !DILocation(line: 5445, column: 11, scope: !8830)
!8839 = !DILocation(line: 5445, column: 29, scope: !8830)
!8840 = !DILocation(line: 5446, column: 4, scope: !8830)
!8841 = !DILocation(line: 5446, column: 7, scope: !8830)
!8842 = !DILocation(line: 5446, column: 27, scope: !8830)
!8843 = !DILocation(line: 5446, column: 24, scope: !8830)
!8844 = !DILocation(line: 5448, column: 4, scope: !8830)
!8845 = !DILocation(line: 5448, column: 7, scope: !8830)
!8846 = !DILocation(line: 5448, column: 30, scope: !8830)
!8847 = !DILocation(line: 5448, column: 27, scope: !8830)
!8848 = !DILocation(line: 5449, column: 4, scope: !8830)
!8849 = !DILocation(line: 5449, column: 29, scope: !8830)
!8850 = !DILocation(line: 5450, column: 8, scope: !8830)
!8851 = !DILocation(line: 5449, column: 7, scope: !8830)
!8852 = !DILocation(line: 5445, column: 3, scope: !8830)
!8853 = distinct !DISubprogram(name: "get_qualified_type", scope: !3, file: !3, line: 5458, type: !8026, scopeLine: 5459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8854)
!8854 = !{!8855, !8856, !8857}
!8855 = !DILocalVariable(name: "type", arg: 1, scope: !8853, file: !3, line: 5458, type: !1457)
!8856 = !DILocalVariable(name: "type_quals", arg: 2, scope: !8853, file: !3, line: 5458, type: !1450)
!8857 = !DILocalVariable(name: "t", scope: !8853, file: !3, line: 5460, type: !1457)
!8858 = !DILocation(line: 0, scope: !8853)
!8859 = !DILocation(line: 5462, column: 7, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 5462, column: 7)
!8861 = !DILocation(line: 5462, column: 25, scope: !8860)
!8862 = !DILocation(line: 5462, column: 7, scope: !8853)
!8863 = !DILocation(line: 5468, column: 12, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 5468, column: 3)
!8865 = !DILocation(line: 5468, column: 8, scope: !8864)
!8866 = !DILocation(line: 0, scope: !8864)
!8867 = !DILocation(line: 5468, column: 3, scope: !8864)
!8868 = !DILocation(line: 5469, column: 9, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 5469, column: 9)
!8870 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 5468, column: 3)
!8871 = !DILocation(line: 5469, column: 9, scope: !8870)
!8872 = !DILocation(line: 5468, column: 45, scope: !8870)
!8873 = !DILocation(line: 5468, column: 3, scope: !8870)
!8874 = distinct !{!8874, !8867, !8875}
!8875 = !DILocation(line: 5470, column: 14, scope: !8864)
!8876 = !DILocation(line: 5473, column: 1, scope: !8853)
!8877 = distinct !DISubprogram(name: "build_variant_type_copy", scope: !3, file: !3, line: 5547, type: !3923, scopeLine: 5548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8878)
!8878 = !{!8879, !8880, !8881}
!8879 = !DILocalVariable(name: "type", arg: 1, scope: !8877, file: !3, line: 5547, type: !1457)
!8880 = !DILocalVariable(name: "t", scope: !8877, file: !3, line: 5549, type: !1457)
!8881 = !DILocalVariable(name: "m", scope: !8877, file: !3, line: 5549, type: !1457)
!8882 = !DILocation(line: 0, scope: !8877)
!8883 = !DILocation(line: 5549, column: 15, scope: !8877)
!8884 = !DILocation(line: 5551, column: 7, scope: !8877)
!8885 = !DILocation(line: 5555, column: 24, scope: !8877)
!8886 = !DILocation(line: 5555, column: 3, scope: !8877)
!8887 = !DILocation(line: 5555, column: 22, scope: !8877)
!8888 = !DILocation(line: 5558, column: 27, scope: !8877)
!8889 = !DILocation(line: 5558, column: 3, scope: !8877)
!8890 = !DILocation(line: 5558, column: 25, scope: !8877)
!8891 = !DILocation(line: 5559, column: 25, scope: !8877)
!8892 = !DILocation(line: 5560, column: 3, scope: !8877)
!8893 = !DILocation(line: 5560, column: 25, scope: !8877)
!8894 = !DILocation(line: 5562, column: 3, scope: !8877)
!8895 = distinct !DISubprogram(name: "set_type_quals", scope: !3, file: !3, line: 5432, type: !8896, scopeLine: 5433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8898)
!8896 = !DISubroutineType(types: !8897)
!8897 = !{null, !1457, !1450}
!8898 = !{!8899, !8900}
!8899 = !DILocalVariable(name: "type", arg: 1, scope: !8895, file: !3, line: 5432, type: !1457)
!8900 = !DILocalVariable(name: "type_quals", arg: 2, scope: !8895, file: !3, line: 5432, type: !1450)
!8901 = !DILocation(line: 0, scope: !8895)
!8902 = !DILocation(line: 5434, column: 3, scope: !8895)
!8903 = !DILocation(line: 5434, column: 24, scope: !8895)
!8904 = !DILocation(line: 5435, column: 24, scope: !8895)
!8905 = !DILocation(line: 5436, column: 3, scope: !8895)
!8906 = !DILocation(line: 5436, column: 24, scope: !8895)
!8907 = !DILocation(line: 5437, column: 28, scope: !8895)
!8908 = !DILocation(line: 5437, column: 26, scope: !8895)
!8909 = !DILocation(line: 5438, column: 1, scope: !8895)
!8910 = distinct !DISubprogram(name: "tree_map_base_marked_p", scope: !3, file: !3, line: 5588, type: !2874, scopeLine: 5589, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8911)
!8911 = !{!8912}
!8912 = !DILocalVariable(name: "p", arg: 1, scope: !8910, file: !3, line: 5588, type: !1815)
!8913 = !DILocation(line: 0, scope: !8910)
!8914 = !DILocation(line: 5590, column: 60, scope: !8910)
!8915 = !DILocation(line: 5590, column: 10, scope: !8910)
!8916 = !DILocation(line: 5590, column: 3, scope: !8910)
!8917 = distinct !DISubprogram(name: "decl_fini_priority_lookup", scope: !3, file: !3, line: 5616, type: !4269, scopeLine: 5617, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8918)
!8918 = !{!8919, !8920, !8921}
!8919 = !DILocalVariable(name: "decl", arg: 1, scope: !8917, file: !3, line: 5616, type: !1457)
!8920 = !DILocalVariable(name: "h", scope: !8917, file: !3, line: 5618, type: !2760)
!8921 = !DILocalVariable(name: "in", scope: !8917, file: !3, line: 5619, type: !2750)
!8922 = !DILocation(line: 0, scope: !8917)
!8923 = !DILocation(line: 5619, column: 3, scope: !8917)
!8924 = !DILocation(line: 5621, column: 3, scope: !8917)
!8925 = !DILocation(line: 5622, column: 6, scope: !8917)
!8926 = !DILocation(line: 5622, column: 11, scope: !8917)
!8927 = !DILocation(line: 5623, column: 47, scope: !8917)
!8928 = !DILocation(line: 5623, column: 36, scope: !8917)
!8929 = !DILocation(line: 5624, column: 10, scope: !8917)
!8930 = !DILocation(line: 5624, column: 17, scope: !8917)
!8931 = !DILocation(line: 5625, column: 1, scope: !8917)
!8932 = !DILocation(line: 5624, column: 3, scope: !8917)
!8933 = distinct !DISubprogram(name: "decl_priority_info", scope: !3, file: !3, line: 5632, type: !8934, scopeLine: 5633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8936)
!8934 = !DISubroutineType(types: !8935)
!8935 = !{!2760, !1457}
!8936 = !{!8937, !8938, !8939, !8940}
!8937 = !DILocalVariable(name: "decl", arg: 1, scope: !8933, file: !3, line: 5632, type: !1457)
!8938 = !DILocalVariable(name: "in", scope: !8933, file: !3, line: 5634, type: !2761)
!8939 = !DILocalVariable(name: "h", scope: !8933, file: !3, line: 5635, type: !2760)
!8940 = !DILocalVariable(name: "loc", scope: !8933, file: !3, line: 5636, type: !1828)
!8941 = !DILocation(line: 0, scope: !8933)
!8942 = !DILocation(line: 5634, column: 3, scope: !8933)
!8943 = !DILocation(line: 5638, column: 11, scope: !8933)
!8944 = !DILocation(line: 5638, column: 16, scope: !8933)
!8945 = !DILocation(line: 5639, column: 25, scope: !8933)
!8946 = !DILocation(line: 5639, column: 9, scope: !8933)
!8947 = !DILocation(line: 5640, column: 36, scope: !8933)
!8948 = !DILocation(line: 5641, column: 8, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 5641, column: 7)
!8950 = !DILocation(line: 5641, column: 7, scope: !8933)
!8951 = !DILocation(line: 5643, column: 11, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 5642, column: 5)
!8953 = !DILocation(line: 5644, column: 12, scope: !8952)
!8954 = !DILocation(line: 5645, column: 15, scope: !8952)
!8955 = !DILocation(line: 5645, column: 20, scope: !8952)
!8956 = !DILocation(line: 5646, column: 10, scope: !8952)
!8957 = !DILocation(line: 5646, column: 15, scope: !8952)
!8958 = !DILocation(line: 5647, column: 10, scope: !8952)
!8959 = !DILocation(line: 5647, column: 15, scope: !8952)
!8960 = !DILocation(line: 5648, column: 5, scope: !8952)
!8961 = !DILocation(line: 5651, column: 1, scope: !8933)
!8962 = !DILocation(line: 5650, column: 3, scope: !8933)
!8963 = distinct !DISubprogram(name: "decl_fini_priority_insert", scope: !3, file: !3, line: 5668, type: !4256, scopeLine: 5669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8964)
!8964 = !{!8965, !8966, !8967}
!8965 = !DILocalVariable(name: "decl", arg: 1, scope: !8963, file: !3, line: 5668, type: !1457)
!8966 = !DILocalVariable(name: "priority", arg: 2, scope: !8963, file: !3, line: 5668, type: !2765)
!8967 = !DILocalVariable(name: "h", scope: !8963, file: !3, line: 5670, type: !2760)
!8968 = !DILocation(line: 0, scope: !8963)
!8969 = !DILocation(line: 5672, column: 3, scope: !8963)
!8970 = !DILocation(line: 5673, column: 7, scope: !8963)
!8971 = !DILocation(line: 5674, column: 6, scope: !8963)
!8972 = !DILocation(line: 5674, column: 11, scope: !8963)
!8973 = !DILocation(line: 5675, column: 1, scope: !8963)
!8974 = distinct !DISubprogram(name: "decl_debug_expr_lookup", scope: !3, file: !3, line: 5702, type: !3923, scopeLine: 5703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8975)
!8975 = !{!8976, !8977, !8978}
!8976 = !DILocalVariable(name: "from", arg: 1, scope: !8974, file: !3, line: 5702, type: !1457)
!8977 = !DILocalVariable(name: "h", scope: !8974, file: !3, line: 5704, type: !2767)
!8978 = !DILocalVariable(name: "in", scope: !8974, file: !3, line: 5704, type: !2755)
!8979 = !DILocation(line: 0, scope: !8974)
!8980 = !DILocation(line: 5704, column: 3, scope: !8974)
!8981 = !DILocation(line: 5705, column: 11, scope: !8974)
!8982 = !DILocation(line: 5705, column: 16, scope: !8974)
!8983 = !DILocation(line: 5707, column: 48, scope: !8974)
!8984 = !DILocation(line: 5708, column: 13, scope: !8974)
!8985 = !DILocation(line: 5708, column: 32, scope: !8974)
!8986 = !DILocation(line: 5707, column: 27, scope: !8974)
!8987 = !DILocation(line: 5709, column: 7, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 5709, column: 7)
!8989 = !DILocation(line: 5709, column: 7, scope: !8974)
!8990 = !DILocation(line: 5710, column: 15, scope: !8988)
!8991 = !DILocation(line: 5710, column: 5, scope: !8988)
!8992 = !DILocation(line: 5712, column: 1, scope: !8974)
!8993 = distinct !DISubprogram(name: "decl_debug_expr_insert", scope: !3, file: !3, line: 5717, type: !4215, scopeLine: 5718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8994)
!8994 = !{!8995, !8996, !8997, !8998}
!8995 = !DILocalVariable(name: "from", arg: 1, scope: !8993, file: !3, line: 5717, type: !1457)
!8996 = !DILocalVariable(name: "to", arg: 2, scope: !8993, file: !3, line: 5717, type: !1457)
!8997 = !DILocalVariable(name: "h", scope: !8993, file: !3, line: 5719, type: !2767)
!8998 = !DILocalVariable(name: "loc", scope: !8993, file: !3, line: 5720, type: !1828)
!8999 = !DILocation(line: 0, scope: !8993)
!9000 = !DILocation(line: 5722, column: 7, scope: !8993)
!9001 = !DILocation(line: 5723, column: 13, scope: !8993)
!9002 = !DILocation(line: 5723, column: 32, scope: !8993)
!9003 = !DILocation(line: 5723, column: 6, scope: !8993)
!9004 = !DILocation(line: 5723, column: 11, scope: !8993)
!9005 = !DILocation(line: 5724, column: 11, scope: !8993)
!9006 = !DILocation(line: 5724, column: 16, scope: !8993)
!9007 = !DILocation(line: 5725, column: 6, scope: !8993)
!9008 = !DILocation(line: 5725, column: 9, scope: !8993)
!9009 = !DILocation(line: 5726, column: 35, scope: !8993)
!9010 = !DILocation(line: 5726, column: 9, scope: !8993)
!9011 = !DILocation(line: 5727, column: 29, scope: !8993)
!9012 = !DILocation(line: 5728, column: 1, scope: !8993)
!9013 = distinct !DISubprogram(name: "type_hash_lookup", scope: !3, file: !3, line: 5899, type: !9014, scopeLine: 5900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9016)
!9014 = !DISubroutineType(types: !9015)
!9015 = !{!1457, !1814, !1457}
!9016 = !{!9017, !9018, !9019, !9020}
!9017 = !DILocalVariable(name: "hashcode", arg: 1, scope: !9013, file: !3, line: 5899, type: !1814)
!9018 = !DILocalVariable(name: "type", arg: 2, scope: !9013, file: !3, line: 5899, type: !1457)
!9019 = !DILocalVariable(name: "h", scope: !9013, file: !3, line: 5901, type: !2769)
!9020 = !DILocalVariable(name: "in", scope: !9013, file: !3, line: 5901, type: !2770)
!9021 = !DILocation(line: 0, scope: !9013)
!9022 = !DILocation(line: 5901, column: 3, scope: !9013)
!9023 = !DILocation(line: 5905, column: 3, scope: !9013)
!9024 = !DILocation(line: 5907, column: 13, scope: !9013)
!9025 = !DILocation(line: 5907, column: 6, scope: !9013)
!9026 = !DILocation(line: 5907, column: 11, scope: !9013)
!9027 = !DILocation(line: 5908, column: 6, scope: !9013)
!9028 = !DILocation(line: 5908, column: 11, scope: !9013)
!9029 = !DILocation(line: 5910, column: 49, scope: !9013)
!9030 = !DILocation(line: 5910, column: 28, scope: !9013)
!9031 = !DILocation(line: 5912, column: 7, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 5912, column: 7)
!9033 = !DILocation(line: 5912, column: 7, scope: !9013)
!9034 = !DILocation(line: 5913, column: 15, scope: !9032)
!9035 = !DILocation(line: 5913, column: 5, scope: !9032)
!9036 = !DILocation(line: 5915, column: 1, scope: !9013)
!9037 = distinct !DISubprogram(name: "type_hash_add", scope: !3, file: !3, line: 5921, type: !9038, scopeLine: 5922, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9040)
!9038 = !DISubroutineType(types: !9039)
!9039 = !{null, !1814, !1457}
!9040 = !{!9041, !9042, !9043, !9044}
!9041 = !DILocalVariable(name: "hashcode", arg: 1, scope: !9037, file: !3, line: 5921, type: !1814)
!9042 = !DILocalVariable(name: "type", arg: 2, scope: !9037, file: !3, line: 5921, type: !1457)
!9043 = !DILocalVariable(name: "h", scope: !9037, file: !3, line: 5923, type: !2769)
!9044 = !DILocalVariable(name: "loc", scope: !9037, file: !3, line: 5924, type: !1828)
!9045 = !DILocation(line: 0, scope: !9037)
!9046 = !DILocation(line: 5926, column: 7, scope: !9037)
!9047 = !DILocation(line: 5927, column: 13, scope: !9037)
!9048 = !DILocation(line: 5927, column: 6, scope: !9037)
!9049 = !DILocation(line: 5927, column: 11, scope: !9037)
!9050 = !DILocation(line: 5928, column: 6, scope: !9037)
!9051 = !DILocation(line: 5928, column: 11, scope: !9037)
!9052 = !DILocation(line: 5929, column: 35, scope: !9037)
!9053 = !DILocation(line: 5929, column: 9, scope: !9037)
!9054 = !DILocation(line: 5930, column: 8, scope: !9037)
!9055 = !DILocation(line: 5931, column: 1, scope: !9037)
!9056 = distinct !DISubprogram(name: "type_list_equal", scope: !3, file: !3, line: 6087, type: !5468, scopeLine: 6088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9057)
!9057 = !{!9058, !9059, !9060, !9061}
!9058 = !DILocalVariable(name: "l1", arg: 1, scope: !9056, file: !3, line: 6087, type: !2774)
!9059 = !DILocalVariable(name: "l2", arg: 2, scope: !9056, file: !3, line: 6087, type: !2774)
!9060 = !DILocalVariable(name: "t1", scope: !9056, file: !3, line: 6089, type: !2774)
!9061 = !DILocalVariable(name: "t2", scope: !9056, file: !3, line: 6089, type: !2774)
!9062 = !DILocation(line: 0, scope: !9056)
!9063 = !DILocation(line: 6091, column: 8, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 6091, column: 3)
!9065 = !DILocation(line: 0, scope: !9064)
!9066 = !DILocation(line: 6091, column: 26, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 6091, column: 3)
!9068 = !DILocation(line: 6091, column: 29, scope: !9067)
!9069 = !DILocation(line: 6091, column: 3, scope: !9064)
!9070 = !DILocation(line: 6092, column: 9, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 6092, column: 9)
!9072 = !DILocation(line: 6092, column: 28, scope: !9071)
!9073 = !DILocation(line: 6092, column: 25, scope: !9071)
!9074 = !DILocation(line: 6093, column: 2, scope: !9071)
!9075 = !DILocation(line: 6093, column: 6, scope: !9071)
!9076 = !DILocation(line: 6093, column: 27, scope: !9071)
!9077 = !DILocation(line: 6093, column: 24, scope: !9071)
!9078 = !DILocation(line: 6094, column: 6, scope: !9071)
!9079 = !DILocation(line: 6094, column: 17, scope: !9071)
!9080 = !DILocation(line: 6094, column: 14, scope: !9071)
!9081 = !DILocation(line: 6095, column: 5, scope: !9071)
!9082 = !DILocation(line: 6095, column: 9, scope: !9071)
!9083 = !DILocation(line: 6096, column: 12, scope: !9071)
!9084 = !DILocation(line: 6096, column: 9, scope: !9071)
!9085 = !DILocation(line: 6092, column: 9, scope: !9067)
!9086 = !DILocation(line: 6091, column: 41, scope: !9067)
!9087 = !DILocation(line: 6091, column: 63, scope: !9067)
!9088 = !DILocation(line: 6091, column: 3, scope: !9067)
!9089 = distinct !{!9089, !9069, !9090}
!9090 = !DILocation(line: 6097, column: 14, scope: !9064)
!9091 = !DILocation(line: 6099, column: 13, scope: !9056)
!9092 = !DILocation(line: 6099, column: 3, scope: !9056)
!9093 = !DILocation(line: 6100, column: 1, scope: !9056)
!9094 = distinct !DISubprogram(name: "type_num_arguments", scope: !3, file: !3, line: 6107, type: !4737, scopeLine: 6108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9095)
!9095 = !{!9096, !9097, !9098}
!9096 = !DILocalVariable(name: "type", arg: 1, scope: !9094, file: !3, line: 6107, type: !2774)
!9097 = !DILocalVariable(name: "i", scope: !9094, file: !3, line: 6109, type: !1450)
!9098 = !DILocalVariable(name: "t", scope: !9094, file: !3, line: 6110, type: !1457)
!9099 = !DILocation(line: 0, scope: !9094)
!9100 = !DILocation(line: 6112, column: 12, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 6112, column: 3)
!9102 = !DILocation(line: 6112, column: 8, scope: !9101)
!9103 = !DILocation(line: 0, scope: !9101)
!9104 = !DILocation(line: 6112, column: 3, scope: !9101)
!9105 = !DILocation(line: 6115, column: 9, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 6115, column: 9)
!9107 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 6112, column: 3)
!9108 = !DILocation(line: 6115, column: 9, scope: !9107)
!9109 = !DILocation(line: 6118, column: 7, scope: !9106)
!9110 = !DILocation(line: 6112, column: 42, scope: !9107)
!9111 = !DILocation(line: 6112, column: 3, scope: !9107)
!9112 = distinct !{!9112, !9104, !9113}
!9113 = !DILocation(line: 6118, column: 9, scope: !9101)
!9114 = !DILocation(line: 6120, column: 3, scope: !9094)
!9115 = distinct !DISubprogram(name: "tree_int_cst_equal", scope: !3, file: !3, line: 6127, type: !5468, scopeLine: 6128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9116)
!9116 = !{!9117, !9118}
!9117 = !DILocalVariable(name: "t1", arg: 1, scope: !9115, file: !3, line: 6127, type: !2774)
!9118 = !DILocalVariable(name: "t2", arg: 2, scope: !9115, file: !3, line: 6127, type: !2774)
!9119 = !DILocation(line: 0, scope: !9115)
!9120 = !DILocation(line: 6129, column: 10, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 6129, column: 7)
!9122 = !DILocation(line: 6129, column: 7, scope: !9115)
!9123 = !DILocation(line: 6132, column: 10, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 6132, column: 7)
!9125 = !DILocation(line: 6132, column: 21, scope: !9124)
!9126 = !DILocation(line: 6132, column: 15, scope: !9124)
!9127 = !DILocation(line: 6135, column: 7, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 6135, column: 7)
!9129 = !DILocation(line: 6135, column: 22, scope: !9128)
!9130 = !DILocation(line: 6136, column: 7, scope: !9128)
!9131 = !DILocation(line: 6136, column: 10, scope: !9128)
!9132 = !DILocation(line: 6136, column: 25, scope: !9128)
!9133 = !DILocation(line: 6137, column: 7, scope: !9128)
!9134 = !DILocation(line: 6137, column: 10, scope: !9128)
!9135 = !DILocation(line: 6137, column: 35, scope: !9128)
!9136 = !DILocation(line: 6137, column: 32, scope: !9128)
!9137 = !DILocation(line: 6138, column: 7, scope: !9128)
!9138 = !DILocation(line: 6138, column: 10, scope: !9128)
!9139 = !DILocation(line: 6138, column: 36, scope: !9128)
!9140 = !DILocation(line: 6138, column: 33, scope: !9128)
!9141 = !DILocation(line: 6135, column: 7, scope: !9115)
!9142 = !DILocation(line: 6141, column: 3, scope: !9115)
!9143 = !DILocation(line: 6142, column: 1, scope: !9115)
!9144 = distinct !DISubprogram(name: "tree_int_cst_lt", scope: !3, file: !3, line: 6148, type: !5468, scopeLine: 6149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9145)
!9145 = !{!9146, !9147, !9148, !9151}
!9146 = !DILocalVariable(name: "t1", arg: 1, scope: !9144, file: !3, line: 6148, type: !2774)
!9147 = !DILocalVariable(name: "t2", arg: 2, scope: !9144, file: !3, line: 6148, type: !2774)
!9148 = !DILocalVariable(name: "t1_sgn", scope: !9149, file: !3, line: 6155, type: !1450)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 6154, column: 5)
!9150 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 6153, column: 7)
!9151 = !DILocalVariable(name: "t2_sgn", scope: !9149, file: !3, line: 6156, type: !1450)
!9152 = !DILocation(line: 0, scope: !9144)
!9153 = !DILocation(line: 6150, column: 10, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 6150, column: 7)
!9155 = !DILocation(line: 6150, column: 7, scope: !9144)
!9156 = !DILocation(line: 6153, column: 7, scope: !9150)
!9157 = !DILocation(line: 6153, column: 41, scope: !9150)
!9158 = !DILocation(line: 6153, column: 38, scope: !9150)
!9159 = !DILocation(line: 6153, column: 7, scope: !9144)
!9160 = !DILocation(line: 6155, column: 20, scope: !9149)
!9161 = !DILocation(line: 0, scope: !9149)
!9162 = !DILocation(line: 6156, column: 20, scope: !9149)
!9163 = !DILocation(line: 6158, column: 18, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 6158, column: 11)
!9165 = !DILocation(line: 6158, column: 11, scope: !9149)
!9166 = !DILocation(line: 6160, column: 23, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 6160, column: 16)
!9168 = !DILocation(line: 6160, column: 16, scope: !9164)
!9169 = !DILocation(line: 6166, column: 13, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 6166, column: 12)
!9171 = !DILocation(line: 6166, column: 12, scope: !9150)
!9172 = !DILocation(line: 6167, column: 12, scope: !9170)
!9173 = !DILocation(line: 6167, column: 5, scope: !9170)
!9174 = !DILocation(line: 6169, column: 10, scope: !9144)
!9175 = !DILocation(line: 6169, column: 3, scope: !9144)
!9176 = !DILocation(line: 6170, column: 1, scope: !9144)
!9177 = distinct !DISubprogram(name: "tree_int_cst_sgn", scope: !3, file: !3, line: 6240, type: !4737, scopeLine: 6241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9178)
!9178 = !{!9179}
!9179 = !DILocalVariable(name: "t", arg: 1, scope: !9177, file: !3, line: 6240, type: !2774)
!9180 = !DILocation(line: 0, scope: !9177)
!9181 = !DILocation(line: 6242, column: 7, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 6242, column: 7)
!9183 = !DILocation(line: 6242, column: 28, scope: !9182)
!9184 = !DILocation(line: 6242, column: 33, scope: !9182)
!9185 = !DILocation(line: 6242, column: 36, scope: !9182)
!9186 = !DILocation(line: 6242, column: 58, scope: !9182)
!9187 = !DILocation(line: 6242, column: 7, scope: !9177)
!9188 = !DILocation(line: 6244, column: 12, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 6244, column: 12)
!9190 = !DILocation(line: 6244, column: 12, scope: !9182)
!9191 = !DILocation(line: 6246, column: 12, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 6246, column: 12)
!9193 = !DILocation(line: 6246, column: 34, scope: !9192)
!9194 = !DILocation(line: 0, scope: !9192)
!9195 = !DILocation(line: 0, scope: !9182)
!9196 = !DILocation(line: 6250, column: 1, scope: !9177)
!9197 = distinct !DISubprogram(name: "tree_int_cst_compare", scope: !3, file: !3, line: 6175, type: !5468, scopeLine: 6176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9198)
!9198 = !{!9199, !9200}
!9199 = !DILocalVariable(name: "t1", arg: 1, scope: !9197, file: !3, line: 6175, type: !2774)
!9200 = !DILocalVariable(name: "t2", arg: 2, scope: !9197, file: !3, line: 6175, type: !2774)
!9201 = !DILocation(line: 0, scope: !9197)
!9202 = !DILocation(line: 6177, column: 7, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 6177, column: 7)
!9204 = !DILocation(line: 6177, column: 7, scope: !9197)
!9205 = !DILocation(line: 6179, column: 12, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 6179, column: 12)
!9207 = !DILocation(line: 0, scope: !9206)
!9208 = !DILocation(line: 0, scope: !9203)
!9209 = !DILocation(line: 6183, column: 1, scope: !9197)
!9210 = distinct !DISubprogram(name: "tree_int_cst_msb", scope: !3, file: !3, line: 6221, type: !4737, scopeLine: 6222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9211)
!9211 = !{!9212, !9213, !9214, !9215}
!9212 = !DILocalVariable(name: "t", arg: 1, scope: !9210, file: !3, line: 6221, type: !2774)
!9213 = !DILocalVariable(name: "prec", scope: !9210, file: !3, line: 6223, type: !1450)
!9214 = !DILocalVariable(name: "h", scope: !9210, file: !3, line: 6224, type: !1513)
!9215 = !DILocalVariable(name: "l", scope: !9210, file: !3, line: 6225, type: !1511)
!9216 = !DILocation(line: 0, scope: !9210)
!9217 = !DILocation(line: 6224, column: 3, scope: !9210)
!9218 = !DILocation(line: 6225, column: 3, scope: !9210)
!9219 = !DILocation(line: 6229, column: 10, scope: !9210)
!9220 = !DILocation(line: 6229, column: 55, scope: !9210)
!9221 = !DILocation(line: 6230, column: 18, scope: !9210)
!9222 = !DILocation(line: 6230, column: 40, scope: !9210)
!9223 = !DILocation(line: 6230, column: 63, scope: !9210)
!9224 = !DILocation(line: 6230, column: 3, scope: !9210)
!9225 = !DILocation(line: 6232, column: 11, scope: !9210)
!9226 = !DILocation(line: 6232, column: 18, scope: !9210)
!9227 = !DILocation(line: 6233, column: 1, scope: !9210)
!9228 = !DILocation(line: 6232, column: 3, scope: !9210)
!9229 = distinct !DISubprogram(name: "tree_int_cst_min_precision", scope: !3, file: !3, line: 6256, type: !9230, scopeLine: 6257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9232)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{!7, !1457, !1449}
!9232 = !{!9233, !9234, !9235}
!9233 = !DILocalVariable(name: "value", arg: 1, scope: !9229, file: !3, line: 6256, type: !1457)
!9234 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !9229, file: !3, line: 6256, type: !1449)
!9235 = !DILocalVariable(name: "log", scope: !9229, file: !3, line: 6258, type: !1450)
!9236 = !DILocation(line: 0, scope: !9229)
!9237 = !DILocation(line: 6265, column: 7, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 6265, column: 7)
!9239 = !DILocation(line: 6265, column: 32, scope: !9238)
!9240 = !DILocation(line: 6265, column: 7, scope: !9229)
!9241 = !DILocation(line: 6266, column: 13, scope: !9238)
!9242 = !DILocation(line: 6266, column: 5, scope: !9238)
!9243 = !DILocation(line: 6271, column: 7, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 6271, column: 7)
!9245 = !DILocation(line: 6271, column: 7, scope: !9229)
!9246 = !DILocation(line: 6274, column: 11, scope: !9244)
!9247 = !DILocation(line: 6276, column: 20, scope: !9229)
!9248 = !DILocation(line: 6276, column: 18, scope: !9229)
!9249 = !DILocation(line: 6276, column: 3, scope: !9229)
!9250 = distinct !DISubprogram(name: "compare_tree_int", scope: !3, file: !3, line: 6471, type: !9251, scopeLine: 6472, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9253)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{!1450, !2774, !1511}
!9253 = !{!9254, !9255}
!9254 = !DILocalVariable(name: "t", arg: 1, scope: !9250, file: !3, line: 6471, type: !2774)
!9255 = !DILocalVariable(name: "u", arg: 2, scope: !9250, file: !3, line: 6471, type: !1511)
!9256 = !DILocation(line: 0, scope: !9250)
!9257 = !DILocation(line: 6473, column: 7, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 6473, column: 7)
!9259 = !DILocation(line: 6473, column: 28, scope: !9258)
!9260 = !DILocation(line: 6473, column: 7, scope: !9250)
!9261 = !DILocation(line: 6475, column: 12, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 6475, column: 12)
!9263 = !DILocation(line: 6475, column: 34, scope: !9262)
!9264 = !DILocation(line: 6475, column: 12, scope: !9258)
!9265 = !DILocation(line: 6477, column: 12, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 6477, column: 12)
!9267 = !DILocation(line: 6477, column: 33, scope: !9266)
!9268 = !DILocation(line: 6477, column: 12, scope: !9262)
!9269 = !DILocation(line: 6479, column: 33, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 6479, column: 12)
!9271 = !DILocation(line: 0, scope: !9270)
!9272 = !DILocation(line: 0, scope: !9258)
!9273 = !DILocation(line: 6483, column: 1, scope: !9250)
!9274 = distinct !DISubprogram(name: "associative_tree_code", scope: !3, file: !3, line: 6488, type: !9275, scopeLine: 6489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9277)
!9275 = !DISubroutineType(types: !9276)
!9276 = !{!1449, !155}
!9277 = !{!9278}
!9278 = !DILocalVariable(name: "code", arg: 1, scope: !9274, file: !3, line: 6488, type: !155)
!9279 = !DILocation(line: 0, scope: !9274)
!9280 = !DILocation(line: 6490, column: 3, scope: !9274)
!9281 = !DILocation(line: 6504, column: 3, scope: !9274)
!9282 = !DILocation(line: 6505, column: 1, scope: !9274)
!9283 = distinct !DISubprogram(name: "commutative_tree_code", scope: !3, file: !3, line: 6510, type: !9275, scopeLine: 6511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9284)
!9284 = !{!9285}
!9285 = !DILocalVariable(name: "code", arg: 1, scope: !9283, file: !3, line: 6510, type: !155)
!9286 = !DILocation(line: 0, scope: !9283)
!9287 = !DILocation(line: 6512, column: 3, scope: !9283)
!9288 = !DILocation(line: 6535, column: 3, scope: !9283)
!9289 = !DILocation(line: 6536, column: 1, scope: !9283)
!9290 = distinct !DISubprogram(name: "iterative_hash_expr", scope: !3, file: !3, line: 6545, type: !9291, scopeLine: 6546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9293)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{!1814, !2774, !1814}
!9293 = !{!9294, !9295, !9296, !9297, !9298, !9299, !9302, !9304, !9306, !9307, !9308, !9314, !9315}
!9294 = !DILocalVariable(name: "t", arg: 1, scope: !9290, file: !3, line: 6545, type: !2774)
!9295 = !DILocalVariable(name: "val", arg: 2, scope: !9290, file: !3, line: 6545, type: !1814)
!9296 = !DILocalVariable(name: "i", scope: !9290, file: !3, line: 6547, type: !1450)
!9297 = !DILocalVariable(name: "code", scope: !9290, file: !3, line: 6548, type: !155)
!9298 = !DILocalVariable(name: "tclass", scope: !9290, file: !3, line: 6549, type: !1453)
!9299 = !DILocalVariable(name: "val2", scope: !9300, file: !3, line: 6565, type: !7)
!9300 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 6564, column: 7)
!9301 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 6557, column: 5)
!9302 = !DILocalVariable(name: "val2", scope: !9303, file: !3, line: 6571, type: !7)
!9303 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 6570, column: 7)
!9304 = !DILocalVariable(name: "idx", scope: !9305, file: !3, line: 6596, type: !1511)
!9305 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 6595, column: 7)
!9306 = !DILocalVariable(name: "field", scope: !9305, file: !3, line: 6597, type: !1457)
!9307 = !DILocalVariable(name: "value", scope: !9305, file: !3, line: 6597, type: !1457)
!9308 = !DILocalVariable(name: "one", scope: !9309, file: !3, line: 6649, type: !1814)
!9309 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 6644, column: 6)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 6643, column: 13)
!9311 = distinct !DILexicalBlock(scope: !9312, file: !3, line: 6635, column: 8)
!9312 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 6627, column: 2)
!9313 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 6621, column: 11)
!9314 = !DILocalVariable(name: "two", scope: !9309, file: !3, line: 6650, type: !1814)
!9315 = !DILocalVariable(name: "t", scope: !9309, file: !3, line: 6651, type: !1814)
!9316 = !DILocation(line: 0, scope: !9290)
!9317 = !DILocation(line: 6548, column: 3, scope: !9290)
!9318 = !DILocation(line: 6551, column: 9, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 6551, column: 7)
!9320 = !DILocation(line: 6551, column: 7, scope: !9290)
!9321 = !DILocation(line: 6552, column: 12, scope: !9319)
!9322 = !DILocation(line: 6552, column: 5, scope: !9319)
!9323 = !DILocation(line: 6554, column: 10, scope: !9290)
!9324 = !DILocation(line: 6554, column: 8, scope: !9290)
!9325 = !DILocation(line: 6556, column: 3, scope: !9290)
!9326 = !DILocation(line: 0, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 6598, column: 2)
!9328 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 6598, column: 2)
!9329 = !DILocation(line: 6598, column: 2, scope: !9328)
!9330 = !DILocation(line: 6591, column: 7, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 6591, column: 7)
!9332 = !DILocation(line: 6561, column: 43, scope: !9301)
!9333 = !DILocation(line: 6561, column: 13, scope: !9301)
!9334 = !DILocation(line: 6562, column: 44, scope: !9301)
!9335 = !DILocation(line: 6562, column: 14, scope: !9301)
!9336 = !DILocation(line: 6562, column: 7, scope: !9301)
!9337 = !DILocation(line: 6565, column: 33, scope: !9300)
!9338 = !DILocation(line: 6565, column: 22, scope: !9300)
!9339 = !DILocation(line: 0, scope: !9300)
!9340 = !DILocation(line: 6567, column: 9, scope: !9300)
!9341 = !DILocation(line: 6571, column: 34, scope: !9303)
!9342 = !DILocation(line: 6571, column: 22, scope: !9303)
!9343 = !DILocation(line: 0, scope: !9303)
!9344 = !DILocation(line: 6573, column: 9, scope: !9303)
!9345 = !DILocation(line: 6576, column: 30, scope: !9301)
!9346 = !DILocation(line: 6577, column: 9, scope: !9301)
!9347 = !DILocation(line: 6576, column: 14, scope: !9301)
!9348 = !DILocation(line: 6576, column: 7, scope: !9301)
!9349 = !DILocation(line: 6579, column: 34, scope: !9301)
!9350 = !DILocation(line: 6579, column: 13, scope: !9301)
!9351 = !DILocation(line: 6580, column: 35, scope: !9301)
!9352 = !DILocation(line: 6580, column: 14, scope: !9301)
!9353 = !DILocation(line: 6580, column: 7, scope: !9301)
!9354 = !DILocation(line: 6582, column: 35, scope: !9301)
!9355 = !DILocation(line: 6582, column: 14, scope: !9301)
!9356 = !DILocation(line: 6582, column: 7, scope: !9301)
!9357 = !DILocation(line: 6586, column: 44, scope: !9301)
!9358 = !DILocation(line: 6586, column: 14, scope: !9301)
!9359 = !DILocation(line: 6586, column: 7, scope: !9301)
!9360 = !DILocation(line: 6592, column: 29, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 6591, column: 7)
!9362 = !DILocation(line: 6592, column: 8, scope: !9361)
!9363 = !DILocation(line: 6591, column: 21, scope: !9361)
!9364 = !DILocation(line: 6591, column: 7, scope: !9361)
!9365 = distinct !{!9365, !9330, !9366}
!9366 = !DILocation(line: 6592, column: 48, scope: !9331)
!9367 = !DILocation(line: 0, scope: !9328)
!9368 = !DILocation(line: 0, scope: !9305)
!9369 = !DILocation(line: 6598, column: 2, scope: !9327)
!9370 = !DILocation(line: 6600, column: 12, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 6599, column: 4)
!9372 = !DILocation(line: 6601, column: 12, scope: !9371)
!9373 = distinct !{!9373, !9329, !9374}
!9374 = !DILocation(line: 6602, column: 4, scope: !9328)
!9375 = !DILocation(line: 6611, column: 11, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 6611, column: 11)
!9377 = !DILocation(line: 6611, column: 35, scope: !9376)
!9378 = !DILocation(line: 6612, column: 4, scope: !9376)
!9379 = !DILocation(line: 6612, column: 22, scope: !9376)
!9380 = !DILocation(line: 6612, column: 7, scope: !9376)
!9381 = !DILocation(line: 6611, column: 11, scope: !9301)
!9382 = !DILocation(line: 6615, column: 11, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 6613, column: 2)
!9384 = !DILocation(line: 6615, column: 9, scope: !9383)
!9385 = !DILocation(line: 6616, column: 2, scope: !9383)
!9386 = !DILocation(line: 6619, column: 16, scope: !9301)
!9387 = !DILocation(line: 6621, column: 18, scope: !9313)
!9388 = !DILocation(line: 6621, column: 11, scope: !9301)
!9389 = !DILocation(line: 6624, column: 40, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 6622, column: 2)
!9391 = !DILocation(line: 6624, column: 10, scope: !9390)
!9392 = !DILocation(line: 6625, column: 2, scope: !9390)
!9393 = !DILocation(line: 6628, column: 4, scope: !9312)
!9394 = !DILocation(line: 6630, column: 10, scope: !9312)
!9395 = !DILocation(line: 6635, column: 8, scope: !9311)
!9396 = !DILocation(line: 6639, column: 15, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 6637, column: 6)
!9398 = !DILocation(line: 6639, column: 12, scope: !9397)
!9399 = !DILocation(line: 6640, column: 35, scope: !9397)
!9400 = !DILocation(line: 6640, column: 14, scope: !9397)
!9401 = !DILocation(line: 6641, column: 6, scope: !9397)
!9402 = !DILocation(line: 6643, column: 13, scope: !9310)
!9403 = !DILocation(line: 6643, column: 13, scope: !9311)
!9404 = !DILocation(line: 6649, column: 45, scope: !9309)
!9405 = !DILocation(line: 6649, column: 24, scope: !9309)
!9406 = !DILocation(line: 0, scope: !9309)
!9407 = !DILocation(line: 6650, column: 45, scope: !9309)
!9408 = !DILocation(line: 6650, column: 24, scope: !9309)
!9409 = !DILocation(line: 6653, column: 16, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9309, file: !3, line: 6653, column: 12)
!9411 = !DILocation(line: 6653, column: 12, scope: !9309)
!9412 = !DILocation(line: 6656, column: 14, scope: !9309)
!9413 = !DILocation(line: 6657, column: 14, scope: !9309)
!9414 = !DILocation(line: 6658, column: 6, scope: !9309)
!9415 = !DILocation(line: 6660, column: 15, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 6660, column: 6)
!9417 = !DILocation(line: 0, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 6660, column: 6)
!9419 = !DILocation(line: 6660, column: 11, scope: !9416)
!9420 = !DILocation(line: 0, scope: !9312)
!9421 = !DILocation(line: 0, scope: !9416)
!9422 = !DILocation(line: 6660, column: 46, scope: !9418)
!9423 = !DILocation(line: 6660, column: 6, scope: !9416)
!9424 = !DILocation(line: 6661, column: 35, scope: !9418)
!9425 = !DILocation(line: 6661, column: 14, scope: !9418)
!9426 = !DILocation(line: 6660, column: 6, scope: !9418)
!9427 = distinct !{!9427, !9423, !9428}
!9428 = !DILocation(line: 6661, column: 59, scope: !9416)
!9429 = !DILocation(line: 6666, column: 1, scope: !9290)
!9430 = distinct !DISubprogram(name: "iterative_hash_exprs_commutative", scope: !3, file: !3, line: 6676, type: !9431, scopeLine: 6678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9433)
!9431 = !DISubroutineType(types: !9432)
!9432 = !{!1814, !2774, !2774, !1814}
!9433 = !{!9434, !9435, !9436, !9437, !9438, !9439}
!9434 = !DILocalVariable(name: "t1", arg: 1, scope: !9430, file: !3, line: 6676, type: !2774)
!9435 = !DILocalVariable(name: "t2", arg: 2, scope: !9430, file: !3, line: 6677, type: !2774)
!9436 = !DILocalVariable(name: "val", arg: 3, scope: !9430, file: !3, line: 6677, type: !1814)
!9437 = !DILocalVariable(name: "one", scope: !9430, file: !3, line: 6679, type: !1814)
!9438 = !DILocalVariable(name: "two", scope: !9430, file: !3, line: 6680, type: !1814)
!9439 = !DILocalVariable(name: "t", scope: !9430, file: !3, line: 6681, type: !1814)
!9440 = !DILocation(line: 0, scope: !9430)
!9441 = !DILocation(line: 6679, column: 19, scope: !9430)
!9442 = !DILocation(line: 6680, column: 19, scope: !9430)
!9443 = !DILocation(line: 6683, column: 11, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 6683, column: 7)
!9445 = !DILocation(line: 6683, column: 7, scope: !9430)
!9446 = !DILocation(line: 6685, column: 9, scope: !9430)
!9447 = !DILocation(line: 6686, column: 9, scope: !9430)
!9448 = !DILocation(line: 6688, column: 3, scope: !9430)
!9449 = distinct !DISubprogram(name: "build_pointer_type_for_mode", scope: !3, file: !3, line: 6701, type: !9450, scopeLine: 6703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9452)
!9450 = !DISubroutineType(types: !9451)
!9451 = !{!1457, !1457, !20, !1449}
!9452 = !{!9453, !9454, !9455, !9456}
!9453 = !DILocalVariable(name: "to_type", arg: 1, scope: !9449, file: !3, line: 6701, type: !1457)
!9454 = !DILocalVariable(name: "mode", arg: 2, scope: !9449, file: !3, line: 6701, type: !20)
!9455 = !DILocalVariable(name: "can_alias_all", arg: 3, scope: !9449, file: !3, line: 6702, type: !1449)
!9456 = !DILocalVariable(name: "t", scope: !9449, file: !3, line: 6704, type: !1457)
!9457 = !DILocation(line: 0, scope: !9449)
!9458 = !DILocation(line: 6706, column: 18, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 6706, column: 7)
!9460 = !DILocation(line: 6706, column: 15, scope: !9459)
!9461 = !DILocation(line: 6706, column: 7, scope: !9449)
!9462 = !DILocation(line: 6707, column: 5, scope: !9459)
!9463 = !DILocation(line: 6711, column: 38, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 6711, column: 7)
!9465 = !DILocation(line: 6711, column: 7, scope: !9464)
!9466 = !DILocation(line: 6711, column: 7, scope: !9449)
!9467 = !DILocation(line: 6722, column: 7, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 6722, column: 7)
!9469 = !DILocation(line: 6722, column: 33, scope: !9468)
!9470 = !DILocation(line: 6723, column: 7, scope: !9468)
!9471 = !DILocation(line: 6723, column: 10, scope: !9468)
!9472 = !DILocation(line: 6723, column: 48, scope: !9468)
!9473 = !DILocation(line: 6722, column: 7, scope: !9449)
!9474 = !DILocation(line: 6724, column: 5, scope: !9468)
!9475 = !DILocation(line: 0, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 6729, column: 9)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 6728, column: 3)
!9478 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 6728, column: 3)
!9479 = !DILocation(line: 6728, column: 8, scope: !9478)
!9480 = !DILocation(line: 0, scope: !9478)
!9481 = !DILocation(line: 6728, column: 3, scope: !9478)
!9482 = !DILocation(line: 6729, column: 9, scope: !9476)
!9483 = !DILocation(line: 6729, column: 23, scope: !9476)
!9484 = !DILocation(line: 6729, column: 31, scope: !9476)
!9485 = !DILocation(line: 6729, column: 34, scope: !9476)
!9486 = !DILocation(line: 6729, column: 61, scope: !9476)
!9487 = !DILocation(line: 6729, column: 9, scope: !9477)
!9488 = !DILocation(line: 6728, column: 46, scope: !9477)
!9489 = !DILocation(line: 6728, column: 3, scope: !9477)
!9490 = distinct !{!9490, !9481, !9491}
!9491 = !DILocation(line: 6730, column: 14, scope: !9478)
!9492 = !DILocation(line: 6732, column: 7, scope: !9449)
!9493 = !DILocation(line: 6734, column: 3, scope: !9449)
!9494 = !DILocation(line: 6734, column: 17, scope: !9449)
!9495 = !DILocation(line: 6735, column: 3, scope: !9449)
!9496 = !DILocation(line: 6736, column: 3, scope: !9449)
!9497 = !DILocation(line: 6736, column: 30, scope: !9449)
!9498 = !DILocation(line: 6737, column: 26, scope: !9449)
!9499 = !DILocation(line: 6737, column: 3, scope: !9449)
!9500 = !DILocation(line: 6737, column: 24, scope: !9449)
!9501 = !DILocation(line: 6738, column: 29, scope: !9449)
!9502 = !DILocation(line: 6740, column: 7, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 6740, column: 7)
!9504 = !DILocation(line: 6740, column: 7, scope: !9449)
!9505 = !DILocation(line: 6741, column: 5, scope: !9503)
!9506 = !DILocation(line: 6742, column: 37, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 6742, column: 12)
!9508 = !DILocation(line: 6742, column: 12, scope: !9503)
!9509 = !DILocation(line: 6744, column: 9, scope: !9507)
!9510 = !DILocation(line: 6743, column: 5, scope: !9507)
!9511 = !DILocation(line: 6744, column: 7, scope: !9507)
!9512 = !DILocation(line: 6749, column: 3, scope: !9449)
!9513 = !DILocation(line: 6751, column: 3, scope: !9449)
!9514 = !DILocation(line: 6752, column: 1, scope: !9449)
!9515 = distinct !DISubprogram(name: "build_pointer_type", scope: !3, file: !3, line: 6757, type: !3923, scopeLine: 6758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9516)
!9516 = !{!9517, !9518, !9520}
!9517 = !DILocalVariable(name: "to_type", arg: 1, scope: !9515, file: !3, line: 6757, type: !1457)
!9518 = !DILocalVariable(name: "as", scope: !9515, file: !3, line: 6759, type: !9519)
!9519 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !1458, line: 73, baseType: !1449)
!9520 = !DILocalVariable(name: "pointer_mode", scope: !9515, file: !3, line: 6761, type: !20)
!9521 = !DILocation(line: 0, scope: !9515)
!9522 = !DILocation(line: 6759, column: 32, scope: !9515)
!9523 = !DILocation(line: 6759, column: 29, scope: !9515)
!9524 = !DILocation(line: 6759, column: 21, scope: !9515)
!9525 = !DILocation(line: 6760, column: 14, scope: !9515)
!9526 = !DILocation(line: 6761, column: 55, scope: !9515)
!9527 = !DILocation(line: 6761, column: 36, scope: !9515)
!9528 = !DILocation(line: 6762, column: 10, scope: !9515)
!9529 = !DILocation(line: 6762, column: 3, scope: !9515)
!9530 = distinct !DISubprogram(name: "build_reference_type_for_mode", scope: !3, file: !3, line: 6768, type: !9450, scopeLine: 6770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9531)
!9531 = !{!9532, !9533, !9534, !9535}
!9532 = !DILocalVariable(name: "to_type", arg: 1, scope: !9530, file: !3, line: 6768, type: !1457)
!9533 = !DILocalVariable(name: "mode", arg: 2, scope: !9530, file: !3, line: 6768, type: !20)
!9534 = !DILocalVariable(name: "can_alias_all", arg: 3, scope: !9530, file: !3, line: 6769, type: !1449)
!9535 = !DILocalVariable(name: "t", scope: !9530, file: !3, line: 6771, type: !1457)
!9536 = !DILocation(line: 0, scope: !9530)
!9537 = !DILocation(line: 6773, column: 18, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 6773, column: 7)
!9539 = !DILocation(line: 6773, column: 15, scope: !9538)
!9540 = !DILocation(line: 6773, column: 7, scope: !9530)
!9541 = !DILocation(line: 6774, column: 5, scope: !9538)
!9542 = !DILocation(line: 6778, column: 38, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 6778, column: 7)
!9544 = !DILocation(line: 6778, column: 7, scope: !9543)
!9545 = !DILocation(line: 6778, column: 7, scope: !9530)
!9546 = !DILocation(line: 6789, column: 7, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 6789, column: 7)
!9548 = !DILocation(line: 6789, column: 35, scope: !9547)
!9549 = !DILocation(line: 6790, column: 7, scope: !9547)
!9550 = !DILocation(line: 6790, column: 10, scope: !9547)
!9551 = !DILocation(line: 6790, column: 50, scope: !9547)
!9552 = !DILocation(line: 6789, column: 7, scope: !9530)
!9553 = !DILocation(line: 6791, column: 5, scope: !9547)
!9554 = !DILocation(line: 0, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 6796, column: 9)
!9556 = distinct !DILexicalBlock(scope: !9557, file: !3, line: 6795, column: 3)
!9557 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 6795, column: 3)
!9558 = !DILocation(line: 6795, column: 8, scope: !9557)
!9559 = !DILocation(line: 0, scope: !9557)
!9560 = !DILocation(line: 6795, column: 3, scope: !9557)
!9561 = !DILocation(line: 6796, column: 9, scope: !9555)
!9562 = !DILocation(line: 6796, column: 23, scope: !9555)
!9563 = !DILocation(line: 6796, column: 31, scope: !9555)
!9564 = !DILocation(line: 6796, column: 34, scope: !9555)
!9565 = !DILocation(line: 6796, column: 61, scope: !9555)
!9566 = !DILocation(line: 6796, column: 9, scope: !9556)
!9567 = !DILocation(line: 6795, column: 48, scope: !9556)
!9568 = !DILocation(line: 6795, column: 3, scope: !9556)
!9569 = distinct !{!9569, !9560, !9570}
!9570 = !DILocation(line: 6797, column: 14, scope: !9557)
!9571 = !DILocation(line: 6799, column: 7, scope: !9530)
!9572 = !DILocation(line: 6801, column: 3, scope: !9530)
!9573 = !DILocation(line: 6801, column: 17, scope: !9530)
!9574 = !DILocation(line: 6802, column: 3, scope: !9530)
!9575 = !DILocation(line: 6803, column: 3, scope: !9530)
!9576 = !DILocation(line: 6803, column: 30, scope: !9530)
!9577 = !DILocation(line: 6804, column: 26, scope: !9530)
!9578 = !DILocation(line: 6804, column: 3, scope: !9530)
!9579 = !DILocation(line: 6804, column: 24, scope: !9530)
!9580 = !DILocation(line: 6805, column: 31, scope: !9530)
!9581 = !DILocation(line: 6807, column: 7, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 6807, column: 7)
!9583 = !DILocation(line: 6807, column: 7, scope: !9530)
!9584 = !DILocation(line: 6808, column: 5, scope: !9582)
!9585 = !DILocation(line: 6809, column: 37, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9582, file: !3, line: 6809, column: 12)
!9587 = !DILocation(line: 6809, column: 12, scope: !9582)
!9588 = !DILocation(line: 6811, column: 9, scope: !9586)
!9589 = !DILocation(line: 6810, column: 5, scope: !9586)
!9590 = !DILocation(line: 6811, column: 7, scope: !9586)
!9591 = !DILocation(line: 6814, column: 3, scope: !9530)
!9592 = !DILocation(line: 6816, column: 3, scope: !9530)
!9593 = !DILocation(line: 6817, column: 1, scope: !9530)
!9594 = distinct !DISubprogram(name: "build_reference_type", scope: !3, file: !3, line: 6824, type: !3923, scopeLine: 6825, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9595)
!9595 = !{!9596, !9597, !9598}
!9596 = !DILocalVariable(name: "to_type", arg: 1, scope: !9594, file: !3, line: 6824, type: !1457)
!9597 = !DILocalVariable(name: "as", scope: !9594, file: !3, line: 6826, type: !9519)
!9598 = !DILocalVariable(name: "pointer_mode", scope: !9594, file: !3, line: 6828, type: !20)
!9599 = !DILocation(line: 0, scope: !9594)
!9600 = !DILocation(line: 6826, column: 32, scope: !9594)
!9601 = !DILocation(line: 6826, column: 29, scope: !9594)
!9602 = !DILocation(line: 6826, column: 21, scope: !9594)
!9603 = !DILocation(line: 6827, column: 14, scope: !9594)
!9604 = !DILocation(line: 6828, column: 55, scope: !9594)
!9605 = !DILocation(line: 6828, column: 36, scope: !9594)
!9606 = !DILocation(line: 6829, column: 10, scope: !9594)
!9607 = !DILocation(line: 6829, column: 3, scope: !9594)
!9608 = distinct !DISubprogram(name: "build_type_no_quals", scope: !3, file: !3, line: 6838, type: !3923, scopeLine: 6839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9609)
!9609 = !{!9610}
!9610 = !DILocalVariable(name: "t", arg: 1, scope: !9608, file: !3, line: 6838, type: !1457)
!9611 = !DILocation(line: 0, scope: !9608)
!9612 = !DILocation(line: 6840, column: 11, scope: !9608)
!9613 = !DILocation(line: 6840, column: 3, scope: !9608)
!9614 = !DILocation(line: 6843, column: 64, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 6841, column: 5)
!9616 = !DILocation(line: 6843, column: 43, scope: !9615)
!9617 = !DILocation(line: 6844, column: 8, scope: !9615)
!9618 = !DILocation(line: 6845, column: 8, scope: !9615)
!9619 = !DILocation(line: 6843, column: 14, scope: !9615)
!9620 = !DILocation(line: 6843, column: 7, scope: !9615)
!9621 = !DILocation(line: 6848, column: 54, scope: !9615)
!9622 = !DILocation(line: 6848, column: 33, scope: !9615)
!9623 = !DILocation(line: 6849, column: 12, scope: !9615)
!9624 = !DILocation(line: 6850, column: 12, scope: !9615)
!9625 = !DILocation(line: 6848, column: 2, scope: !9615)
!9626 = !DILocation(line: 6847, column: 7, scope: !9615)
!9627 = !DILocation(line: 6852, column: 14, scope: !9615)
!9628 = !DILocation(line: 6852, column: 7, scope: !9615)
!9629 = !DILocation(line: 0, scope: !9615)
!9630 = !DILocation(line: 6854, column: 1, scope: !9608)
!9631 = distinct !DISubprogram(name: "build_index_type", scope: !3, file: !3, line: 6866, type: !3923, scopeLine: 6867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9632)
!9632 = !{!9633, !9634}
!9633 = !DILocalVariable(name: "maxval", arg: 1, scope: !9631, file: !3, line: 6866, type: !1457)
!9634 = !DILocalVariable(name: "itype", scope: !9631, file: !3, line: 6868, type: !1457)
!9635 = !DILocation(line: 0, scope: !9631)
!9636 = !DILocation(line: 6868, column: 16, scope: !9631)
!9637 = !DILocation(line: 6870, column: 23, scope: !9631)
!9638 = !DILocation(line: 6870, column: 3, scope: !9631)
!9639 = !DILocation(line: 6870, column: 21, scope: !9631)
!9640 = !DILocation(line: 6871, column: 28, scope: !9631)
!9641 = !DILocation(line: 6871, column: 3, scope: !9631)
!9642 = !DILocation(line: 6871, column: 26, scope: !9631)
!9643 = !DILocation(line: 6872, column: 28, scope: !9631)
!9644 = !DILocation(line: 6872, column: 3, scope: !9631)
!9645 = !DILocation(line: 6872, column: 26, scope: !9631)
!9646 = !DILocation(line: 6873, column: 28, scope: !9631)
!9647 = !DILocation(line: 6873, column: 3, scope: !9631)
!9648 = !DILocation(line: 6873, column: 26, scope: !9631)
!9649 = !DILocation(line: 6874, column: 3, scope: !9631)
!9650 = !DILocation(line: 6875, column: 23, scope: !9631)
!9651 = !DILocation(line: 6877, column: 24, scope: !9631)
!9652 = !DILocation(line: 6876, column: 28, scope: !9631)
!9653 = !DILocation(line: 6875, column: 3, scope: !9631)
!9654 = !DILocation(line: 6875, column: 21, scope: !9631)
!9655 = !DILocation(line: 6876, column: 3, scope: !9631)
!9656 = !DILocation(line: 6876, column: 26, scope: !9631)
!9657 = !DILocation(line: 6877, column: 3, scope: !9631)
!9658 = !DILocation(line: 6877, column: 22, scope: !9631)
!9659 = !DILocation(line: 6878, column: 29, scope: !9631)
!9660 = !DILocation(line: 6878, column: 3, scope: !9631)
!9661 = !DILocation(line: 6878, column: 27, scope: !9631)
!9662 = !DILocation(line: 6880, column: 7, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 6880, column: 7)
!9664 = !DILocation(line: 6880, column: 7, scope: !9631)
!9665 = !DILocation(line: 6881, column: 29, scope: !9663)
!9666 = !DILocation(line: 6881, column: 12, scope: !9663)
!9667 = !DILocation(line: 6881, column: 5, scope: !9663)
!9668 = !DILocation(line: 6886, column: 7, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 6883, column: 5)
!9670 = !DILocation(line: 6887, column: 7, scope: !9669)
!9671 = !DILocation(line: 0, scope: !9663)
!9672 = !DILocation(line: 6889, column: 1, scope: !9631)
!9673 = distinct !DISubprogram(name: "build_nonstandard_integer_type", scope: !3, file: !3, line: 6895, type: !9674, scopeLine: 6897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9676)
!9674 = !DISubroutineType(types: !9675)
!9675 = !{!1457, !1511, !1450}
!9676 = !{!9677, !9678, !9679}
!9677 = !DILocalVariable(name: "precision", arg: 1, scope: !9673, file: !3, line: 6895, type: !1511)
!9678 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !9673, file: !3, line: 6896, type: !1450)
!9679 = !DILocalVariable(name: "itype", scope: !9673, file: !3, line: 6898, type: !1457)
!9680 = !DILocation(line: 0, scope: !9673)
!9681 = !DILocation(line: 6898, column: 16, scope: !9673)
!9682 = !DILocation(line: 6900, column: 28, scope: !9673)
!9683 = !DILocation(line: 6900, column: 3, scope: !9673)
!9684 = !DILocation(line: 6900, column: 26, scope: !9673)
!9685 = !DILocation(line: 6902, column: 7, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 6902, column: 7)
!9687 = !DILocation(line: 6902, column: 7, scope: !9673)
!9688 = !DILocation(line: 6903, column: 5, scope: !9686)
!9689 = !DILocation(line: 6905, column: 5, scope: !9686)
!9690 = !DILocation(line: 6907, column: 22, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 6907, column: 7)
!9692 = !DILocation(line: 6907, column: 7, scope: !9691)
!9693 = !DILocation(line: 6907, column: 7, scope: !9673)
!9694 = !DILocation(line: 6908, column: 43, scope: !9691)
!9695 = !DILocation(line: 6908, column: 29, scope: !9691)
!9696 = !DILocation(line: 6908, column: 12, scope: !9691)
!9697 = !DILocation(line: 6908, column: 5, scope: !9691)
!9698 = !DILocation(line: 6911, column: 1, scope: !9673)
!9699 = distinct !DISubprogram(name: "build_range_type", scope: !3, file: !3, line: 6918, type: !4608, scopeLine: 6919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9700)
!9700 = !{!9701, !9702, !9703, !9704}
!9701 = !DILocalVariable(name: "type", arg: 1, scope: !9699, file: !3, line: 6918, type: !1457)
!9702 = !DILocalVariable(name: "lowval", arg: 2, scope: !9699, file: !3, line: 6918, type: !1457)
!9703 = !DILocalVariable(name: "highval", arg: 3, scope: !9699, file: !3, line: 6918, type: !1457)
!9704 = !DILocalVariable(name: "itype", scope: !9699, file: !3, line: 6920, type: !1457)
!9705 = !DILocation(line: 0, scope: !9699)
!9706 = !DILocation(line: 6920, column: 16, scope: !9699)
!9707 = !DILocation(line: 6922, column: 3, scope: !9699)
!9708 = !DILocation(line: 6922, column: 21, scope: !9699)
!9709 = !DILocation(line: 6923, column: 12, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 6923, column: 7)
!9711 = !DILocation(line: 6924, column: 12, scope: !9710)
!9712 = !DILocation(line: 6923, column: 7, scope: !9699)
!9713 = !DILocation(line: 6926, column: 28, scope: !9699)
!9714 = !DILocation(line: 6926, column: 3, scope: !9699)
!9715 = !DILocation(line: 6926, column: 26, scope: !9699)
!9716 = !DILocation(line: 6927, column: 28, scope: !9699)
!9717 = !DILocation(line: 6927, column: 38, scope: !9699)
!9718 = !DILocation(line: 6927, column: 3, scope: !9699)
!9719 = !DILocation(line: 6927, column: 26, scope: !9699)
!9720 = !DILocation(line: 6929, column: 28, scope: !9699)
!9721 = !DILocation(line: 6929, column: 3, scope: !9699)
!9722 = !DILocation(line: 6929, column: 26, scope: !9699)
!9723 = !DILocation(line: 6930, column: 3, scope: !9699)
!9724 = !DILocation(line: 6931, column: 23, scope: !9699)
!9725 = !DILocation(line: 6931, column: 3, scope: !9699)
!9726 = !DILocation(line: 6931, column: 21, scope: !9699)
!9727 = !DILocation(line: 6932, column: 28, scope: !9699)
!9728 = !DILocation(line: 6932, column: 3, scope: !9699)
!9729 = !DILocation(line: 6932, column: 26, scope: !9699)
!9730 = !DILocation(line: 6933, column: 24, scope: !9699)
!9731 = !DILocation(line: 6933, column: 3, scope: !9699)
!9732 = !DILocation(line: 6933, column: 22, scope: !9699)
!9733 = !DILocation(line: 6934, column: 29, scope: !9699)
!9734 = !DILocation(line: 6934, column: 3, scope: !9699)
!9735 = !DILocation(line: 6934, column: 27, scope: !9699)
!9736 = !DILocation(line: 6936, column: 7, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 6936, column: 7)
!9738 = !DILocation(line: 6936, column: 44, scope: !9737)
!9739 = !DILocation(line: 6936, column: 33, scope: !9737)
!9740 = !DILocation(line: 6936, column: 52, scope: !9737)
!9741 = !DILocation(line: 6936, column: 7, scope: !9699)
!9742 = !DILocation(line: 6937, column: 29, scope: !9737)
!9743 = !DILocation(line: 6938, column: 10, scope: !9737)
!9744 = !DILocation(line: 6938, column: 8, scope: !9737)
!9745 = !DILocation(line: 6937, column: 12, scope: !9737)
!9746 = !DILocation(line: 6937, column: 5, scope: !9737)
!9747 = !DILocation(line: 0, scope: !9737)
!9748 = !DILocation(line: 6942, column: 1, scope: !9699)
!9749 = distinct !DISubprogram(name: "subrange_type_for_debug_p", scope: !3, file: !3, line: 6950, type: !9750, scopeLine: 6951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9752)
!9750 = !DISubroutineType(types: !9751)
!9751 = !{!1449, !2774, !1964, !1964}
!9752 = !{!9753, !9754, !9755, !9756, !9757, !9758, !9759, !9762}
!9753 = !DILocalVariable(name: "type", arg: 1, scope: !9749, file: !3, line: 6950, type: !2774)
!9754 = !DILocalVariable(name: "lowval", arg: 2, scope: !9749, file: !3, line: 6950, type: !1964)
!9755 = !DILocalVariable(name: "highval", arg: 3, scope: !9749, file: !3, line: 6950, type: !1964)
!9756 = !DILocalVariable(name: "base_type", scope: !9749, file: !3, line: 6952, type: !1457)
!9757 = !DILocalVariable(name: "low", scope: !9749, file: !3, line: 6952, type: !1457)
!9758 = !DILocalVariable(name: "high", scope: !9749, file: !3, line: 6952, type: !1457)
!9759 = !DILocalVariable(name: "type_name", scope: !9760, file: !3, line: 6975, type: !1457)
!9760 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 6974, column: 5)
!9761 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 6969, column: 7)
!9762 = !DILocalVariable(name: "base_type_name", scope: !9760, file: !3, line: 6976, type: !1457)
!9763 = !DILocation(line: 0, scope: !9749)
!9764 = !DILocation(line: 6952, column: 20, scope: !9749)
!9765 = !DILocation(line: 6952, column: 3, scope: !9749)
!9766 = !DILocation(line: 6955, column: 8, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 6955, column: 7)
!9768 = !DILocation(line: 6955, column: 7, scope: !9749)
!9769 = !DILocation(line: 6959, column: 24, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 6959, column: 7)
!9771 = !DILocation(line: 6959, column: 7, scope: !9770)
!9772 = !DILocation(line: 6959, column: 7, scope: !9749)
!9773 = !DILocation(line: 6960, column: 5, scope: !9770)
!9774 = !DILocation(line: 6963, column: 13, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 6962, column: 5)
!9776 = !DILocation(line: 6963, column: 11, scope: !9775)
!9777 = !DILocation(line: 6964, column: 14, scope: !9775)
!9778 = !DILocation(line: 6964, column: 12, scope: !9775)
!9779 = !DILocation(line: 6969, column: 8, scope: !9761)
!9780 = !DILocation(line: 6969, column: 30, scope: !9761)
!9781 = !DILocation(line: 6970, column: 8, scope: !9761)
!9782 = !DILocation(line: 6970, column: 33, scope: !9761)
!9783 = !DILocation(line: 6971, column: 7, scope: !9761)
!9784 = !DILocation(line: 6971, column: 10, scope: !9761)
!9785 = !DILocation(line: 6971, column: 38, scope: !9761)
!9786 = !DILocation(line: 6971, column: 35, scope: !9761)
!9787 = !DILocation(line: 6972, column: 7, scope: !9761)
!9788 = !DILocation(line: 6972, column: 30, scope: !9761)
!9789 = !DILocation(line: 6972, column: 35, scope: !9761)
!9790 = !DILocation(line: 6972, column: 10, scope: !9761)
!9791 = !DILocation(line: 6973, column: 7, scope: !9761)
!9792 = !DILocation(line: 6973, column: 30, scope: !9761)
!9793 = !DILocation(line: 6973, column: 36, scope: !9761)
!9794 = !DILocation(line: 6973, column: 10, scope: !9761)
!9795 = !DILocation(line: 6969, column: 7, scope: !9749)
!9796 = !DILocation(line: 6975, column: 24, scope: !9760)
!9797 = !DILocation(line: 0, scope: !9760)
!9798 = !DILocation(line: 6976, column: 29, scope: !9760)
!9799 = !DILocation(line: 6978, column: 11, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 6978, column: 11)
!9801 = !DILocation(line: 6978, column: 21, scope: !9800)
!9802 = !DILocation(line: 6978, column: 24, scope: !9800)
!9803 = !DILocation(line: 6978, column: 46, scope: !9800)
!9804 = !DILocation(line: 6978, column: 11, scope: !9760)
!9805 = !DILocation(line: 6979, column: 14, scope: !9800)
!9806 = !DILocation(line: 6979, column: 2, scope: !9800)
!9807 = !DILocation(line: 6981, column: 11, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 6981, column: 11)
!9809 = !DILocation(line: 6981, column: 26, scope: !9808)
!9810 = !DILocation(line: 6981, column: 29, scope: !9808)
!9811 = !DILocation(line: 6981, column: 56, scope: !9808)
!9812 = !DILocation(line: 6981, column: 11, scope: !9760)
!9813 = !DILocation(line: 6982, column: 19, scope: !9808)
!9814 = !DILocation(line: 6982, column: 2, scope: !9808)
!9815 = !DILocation(line: 6984, column: 21, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 6984, column: 11)
!9817 = !DILocation(line: 6988, column: 7, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 6988, column: 7)
!9819 = !DILocation(line: 6988, column: 7, scope: !9749)
!9820 = !DILocation(line: 6989, column: 15, scope: !9818)
!9821 = !DILocation(line: 6989, column: 13, scope: !9818)
!9822 = !DILocation(line: 6989, column: 5, scope: !9818)
!9823 = !DILocation(line: 6990, column: 7, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 6990, column: 7)
!9825 = !DILocation(line: 6990, column: 7, scope: !9749)
!9826 = !DILocation(line: 6991, column: 16, scope: !9824)
!9827 = !DILocation(line: 6991, column: 14, scope: !9824)
!9828 = !DILocation(line: 6991, column: 5, scope: !9824)
!9829 = !DILocation(line: 6993, column: 1, scope: !9749)
!9830 = distinct !DISubprogram(name: "build_index_2_type", scope: !3, file: !3, line: 6999, type: !4530, scopeLine: 7000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9831)
!9831 = !{!9832, !9833}
!9832 = !DILocalVariable(name: "lowval", arg: 1, scope: !9830, file: !3, line: 6999, type: !1457)
!9833 = !DILocalVariable(name: "highval", arg: 2, scope: !9830, file: !3, line: 6999, type: !1457)
!9834 = !DILocation(line: 0, scope: !9830)
!9835 = !DILocation(line: 7001, column: 28, scope: !9830)
!9836 = !DILocation(line: 7001, column: 10, scope: !9830)
!9837 = !DILocation(line: 7001, column: 3, scope: !9830)
!9838 = distinct !DISubprogram(name: "build_array_type", scope: !3, file: !3, line: 7009, type: !4530, scopeLine: 7010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9839)
!9839 = !{!9840, !9841, !9842, !9843}
!9840 = !DILocalVariable(name: "elt_type", arg: 1, scope: !9838, file: !3, line: 7009, type: !1457)
!9841 = !DILocalVariable(name: "index_type", arg: 2, scope: !9838, file: !3, line: 7009, type: !1457)
!9842 = !DILocalVariable(name: "t", scope: !9838, file: !3, line: 7011, type: !1457)
!9843 = !DILocalVariable(name: "hashcode", scope: !9838, file: !3, line: 7012, type: !1814)
!9844 = !DILocation(line: 0, scope: !9838)
!9845 = !DILocation(line: 7014, column: 7, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 7014, column: 7)
!9847 = !DILocation(line: 7014, column: 28, scope: !9846)
!9848 = !DILocation(line: 7014, column: 7, scope: !9838)
!9849 = !DILocation(line: 7016, column: 7, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9846, file: !3, line: 7015, column: 5)
!9851 = !DILocation(line: 7017, column: 18, scope: !9850)
!9852 = !DILocation(line: 7018, column: 5, scope: !9850)
!9853 = !DILocation(line: 7020, column: 7, scope: !9838)
!9854 = !DILocation(line: 7021, column: 3, scope: !9838)
!9855 = !DILocation(line: 7021, column: 17, scope: !9838)
!9856 = !DILocation(line: 7022, column: 3, scope: !9838)
!9857 = !DILocation(line: 7022, column: 19, scope: !9838)
!9858 = !DILocation(line: 7023, column: 25, scope: !9838)
!9859 = !DILocation(line: 7023, column: 23, scope: !9838)
!9860 = !DILocation(line: 7023, column: 3, scope: !9838)
!9861 = !DILocation(line: 7024, column: 3, scope: !9838)
!9862 = !DILocation(line: 7029, column: 7, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 7029, column: 7)
!9864 = !DILocation(line: 7029, column: 7, scope: !9838)
!9865 = !DILocation(line: 7032, column: 14, scope: !9838)
!9866 = !DILocation(line: 7033, column: 7, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 7033, column: 7)
!9868 = !DILocation(line: 7033, column: 7, scope: !9838)
!9869 = !DILocation(line: 7034, column: 16, scope: !9867)
!9870 = !DILocation(line: 7034, column: 5, scope: !9867)
!9871 = !DILocation(line: 7035, column: 7, scope: !9838)
!9872 = !DILocation(line: 7037, column: 7, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 7037, column: 7)
!9874 = !DILocation(line: 7037, column: 26, scope: !9873)
!9875 = !DILocation(line: 7037, column: 7, scope: !9838)
!9876 = !DILocation(line: 7039, column: 11, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9878, file: !3, line: 7039, column: 11)
!9878 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 7038, column: 5)
!9879 = !DILocation(line: 7040, column: 4, scope: !9877)
!9880 = !DILocation(line: 7040, column: 19, scope: !9877)
!9881 = !DILocation(line: 7040, column: 22, scope: !9877)
!9882 = !DILocation(line: 7039, column: 11, scope: !9878)
!9883 = !DILocation(line: 7041, column: 2, scope: !9877)
!9884 = !DILocation(line: 7042, column: 42, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9877, file: !3, line: 7042, column: 16)
!9886 = !DILocation(line: 7043, column: 9, scope: !9885)
!9887 = !DILocation(line: 7043, column: 24, scope: !9885)
!9888 = !DILocation(line: 7043, column: 27, scope: !9885)
!9889 = !DILocation(line: 7043, column: 55, scope: !9885)
!9890 = !DILocation(line: 7042, column: 16, scope: !9877)
!9891 = !DILocation(line: 7046, column: 10, scope: !9885)
!9892 = !DILocation(line: 7046, column: 23, scope: !9885)
!9893 = !DILocation(line: 7045, column: 6, scope: !9885)
!9894 = !DILocation(line: 7045, column: 4, scope: !9885)
!9895 = !DILocation(line: 7050, column: 1, scope: !9838)
!9896 = distinct !DISubprogram(name: "strip_array_types", scope: !3, file: !3, line: 7056, type: !3923, scopeLine: 7057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9897)
!9897 = !{!9898}
!9898 = !DILocalVariable(name: "type", arg: 1, scope: !9896, file: !3, line: 7056, type: !1457)
!9899 = !DILocation(line: 0, scope: !9896)
!9900 = !DILocation(line: 7058, column: 3, scope: !9896)
!9901 = !DILocation(line: 7058, column: 10, scope: !9896)
!9902 = !DILocation(line: 7058, column: 27, scope: !9896)
!9903 = !DILocation(line: 7059, column: 12, scope: !9896)
!9904 = distinct !{!9904, !9900, !9903}
!9905 = !DILocation(line: 7061, column: 3, scope: !9896)
!9906 = distinct !DISubprogram(name: "build_function_type", scope: !3, file: !3, line: 7144, type: !4530, scopeLine: 7145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9907)
!9907 = !{!9908, !9909, !9910, !9911, !9912, !9913, !9914}
!9908 = !DILocalVariable(name: "value_type", arg: 1, scope: !9906, file: !3, line: 7144, type: !1457)
!9909 = !DILocalVariable(name: "arg_types", arg: 2, scope: !9906, file: !3, line: 7144, type: !1457)
!9910 = !DILocalVariable(name: "t", scope: !9906, file: !3, line: 7146, type: !1457)
!9911 = !DILocalVariable(name: "hashcode", scope: !9906, file: !3, line: 7147, type: !1814)
!9912 = !DILocalVariable(name: "any_structural_p", scope: !9906, file: !3, line: 7148, type: !1449)
!9913 = !DILocalVariable(name: "any_noncanonical_p", scope: !9906, file: !3, line: 7148, type: !1449)
!9914 = !DILocalVariable(name: "canon_argtypes", scope: !9906, file: !3, line: 7149, type: !1457)
!9915 = !DILocation(line: 0, scope: !9906)
!9916 = !DILocation(line: 7148, column: 3, scope: !9906)
!9917 = !DILocation(line: 7151, column: 7, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 7151, column: 7)
!9919 = !DILocation(line: 7151, column: 30, scope: !9918)
!9920 = !DILocation(line: 7151, column: 7, scope: !9906)
!9921 = !DILocation(line: 7153, column: 7, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 7152, column: 5)
!9923 = !DILocation(line: 7154, column: 20, scope: !9922)
!9924 = !DILocation(line: 7155, column: 5, scope: !9922)
!9925 = !DILocation(line: 7158, column: 7, scope: !9906)
!9926 = !DILocation(line: 7159, column: 3, scope: !9906)
!9927 = !DILocation(line: 7159, column: 17, scope: !9906)
!9928 = !DILocation(line: 7160, column: 3, scope: !9906)
!9929 = !DILocation(line: 7160, column: 22, scope: !9906)
!9930 = !DILocation(line: 7163, column: 14, scope: !9906)
!9931 = !DILocation(line: 7164, column: 14, scope: !9906)
!9932 = !DILocation(line: 7165, column: 7, scope: !9906)
!9933 = !DILocation(line: 7168, column: 24, scope: !9906)
!9934 = !DILocation(line: 7168, column: 22, scope: !9906)
!9935 = !DILocation(line: 7169, column: 52, scope: !9906)
!9936 = !DILocation(line: 7169, column: 24, scope: !9906)
!9937 = !DILocation(line: 7169, column: 22, scope: !9906)
!9938 = !DILocation(line: 7170, column: 20, scope: !9906)
!9939 = !DILocation(line: 7173, column: 7, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 7173, column: 7)
!9941 = !DILocation(line: 7173, column: 7, scope: !9906)
!9942 = !DILocation(line: 7174, column: 5, scope: !9940)
!9943 = !DILocation(line: 7175, column: 12, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 7175, column: 12)
!9945 = !DILocation(line: 7175, column: 12, scope: !9940)
!9946 = !DILocation(line: 7176, column: 47, scope: !9944)
!9947 = !DILocation(line: 7176, column: 26, scope: !9944)
!9948 = !DILocation(line: 7176, column: 5, scope: !9944)
!9949 = !DILocation(line: 7176, column: 24, scope: !9944)
!9950 = !DILocation(line: 7179, column: 8, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 7179, column: 7)
!9952 = !DILocation(line: 7179, column: 7, scope: !9906)
!9953 = !DILocation(line: 7180, column: 5, scope: !9951)
!9954 = !DILocation(line: 7182, column: 1, scope: !9906)
!9955 = !DILocation(line: 7181, column: 3, scope: !9906)
!9956 = distinct !DISubprogram(name: "maybe_canonicalize_argtypes", scope: !3, file: !3, line: 7080, type: !9957, scopeLine: 7083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9959)
!9957 = !DISubroutineType(types: !9958)
!9958 = !{!1457, !1457, !1448, !1448}
!9959 = !{!9960, !9961, !9962, !9963, !9964, !9965, !9968}
!9960 = !DILocalVariable(name: "argtypes", arg: 1, scope: !9956, file: !3, line: 7080, type: !1457)
!9961 = !DILocalVariable(name: "any_structural_p", arg: 2, scope: !9956, file: !3, line: 7081, type: !1448)
!9962 = !DILocalVariable(name: "any_noncanonical_p", arg: 3, scope: !9956, file: !3, line: 7082, type: !1448)
!9963 = !DILocalVariable(name: "arg", scope: !9956, file: !3, line: 7084, type: !1457)
!9964 = !DILocalVariable(name: "any_noncanonical_argtypes_p", scope: !9956, file: !3, line: 7085, type: !1449)
!9965 = !DILocalVariable(name: "canon_argtypes", scope: !9966, file: !3, line: 7110, type: !1457)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 7108, column: 5)
!9967 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 7107, column: 7)
!9968 = !DILocalVariable(name: "is_void", scope: !9966, file: !3, line: 7111, type: !1449)
!9969 = !DILocation(line: 0, scope: !9956)
!9970 = !DILocation(line: 7087, column: 8, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 7087, column: 3)
!9972 = !DILocation(line: 7085, column: 8, scope: !9956)
!9973 = !DILocation(line: 0, scope: !9971)
!9974 = !DILocation(line: 7087, column: 24, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 7087, column: 3)
!9976 = !DILocation(line: 7087, column: 28, scope: !9975)
!9977 = !DILocation(line: 7104, column: 7, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 7104, column: 7)
!9979 = !DILocation(line: 7087, column: 33, scope: !9975)
!9980 = !DILocation(line: 7087, column: 31, scope: !9975)
!9981 = !DILocation(line: 7087, column: 3, scope: !9971)
!9982 = !DILocation(line: 7089, column: 12, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 7089, column: 11)
!9984 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 7088, column: 5)
!9985 = !DILocation(line: 7089, column: 29, scope: !9983)
!9986 = !DILocation(line: 7089, column: 52, scope: !9983)
!9987 = !DILocation(line: 7089, column: 49, scope: !9983)
!9988 = !DILocation(line: 7089, column: 11, scope: !9984)
!9989 = !DILocation(line: 7091, column: 20, scope: !9983)
!9990 = !DILocation(line: 7091, column: 2, scope: !9983)
!9991 = !DILocation(line: 7092, column: 16, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 7092, column: 16)
!9993 = !DILocation(line: 7092, column: 16, scope: !9983)
!9994 = !DILocation(line: 7093, column: 20, scope: !9992)
!9995 = !DILocation(line: 7093, column: 2, scope: !9992)
!9996 = !DILocation(line: 7094, column: 50, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 7094, column: 16)
!9998 = !DILocation(line: 7095, column: 9, scope: !9997)
!9999 = !DILocation(line: 7095, column: 12, scope: !9997)
!10000 = !DILocation(line: 7094, column: 16, scope: !9992)
!10001 = !DILocation(line: 7101, column: 9, scope: !9997)
!10002 = !DILocation(line: 7087, column: 59, scope: !9975)
!10003 = !DILocation(line: 7087, column: 3, scope: !9975)
!10004 = distinct !{!10004, !9981, !10005}
!10005 = !DILocation(line: 7102, column: 5, scope: !9971)
!10006 = !DILocation(line: 7107, column: 7, scope: !9967)
!10007 = !DILocation(line: 7104, column: 7, scope: !9956)
!10008 = !DILocation(line: 7113, column: 7, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 7113, column: 7)
!10010 = !DILocation(line: 0, scope: !10009)
!10011 = !DILocation(line: 7110, column: 12, scope: !9966)
!10012 = !DILocation(line: 0, scope: !9966)
!10013 = !DILocation(line: 7115, column: 22, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 7115, column: 15)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 7114, column: 9)
!10016 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 7113, column: 7)
!10017 = !DILocation(line: 7115, column: 19, scope: !10014)
!10018 = !DILocation(line: 7115, column: 15, scope: !10015)
!10019 = !DILocation(line: 7118, column: 30, scope: !10014)
!10020 = !DILocation(line: 7113, column: 39, scope: !10016)
!10021 = !DILocation(line: 7113, column: 7, scope: !10016)
!10022 = distinct !{!10022, !10008, !10023}
!10023 = !DILocation(line: 7121, column: 9, scope: !10009)
!10024 = !DILocation(line: 7123, column: 24, scope: !9966)
!10025 = !DILocation(line: 7124, column: 11, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 7124, column: 11)
!10027 = !DILocation(line: 7124, column: 11, scope: !9966)
!10028 = !DILocation(line: 7125, column: 51, scope: !10026)
!10029 = !DILocation(line: 7125, column: 26, scope: !10026)
!10030 = !DILocation(line: 7125, column: 9, scope: !10026)
!10031 = !DILocation(line: 7128, column: 27, scope: !9966)
!10032 = !DILocation(line: 7134, column: 1, scope: !9956)
!10033 = distinct !DISubprogram(name: "build_function_type_skip_args", scope: !3, file: !3, line: 7187, type: !10034, scopeLine: 7188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10036)
!10034 = !DISubroutineType(types: !10035)
!10035 = !{!1457, !1457, !2233}
!10036 = !{!10037, !10038, !10039, !10040, !10041, !10042, !10043, !10044}
!10037 = !DILocalVariable(name: "orig_type", arg: 1, scope: !10033, file: !3, line: 7187, type: !1457)
!10038 = !DILocalVariable(name: "args_to_skip", arg: 2, scope: !10033, file: !3, line: 7187, type: !2233)
!10039 = !DILocalVariable(name: "new_type", scope: !10033, file: !3, line: 7189, type: !1457)
!10040 = !DILocalVariable(name: "args", scope: !10033, file: !3, line: 7190, type: !1457)
!10041 = !DILocalVariable(name: "new_args", scope: !10033, file: !3, line: 7190, type: !1457)
!10042 = !DILocalVariable(name: "t", scope: !10033, file: !3, line: 7190, type: !1457)
!10043 = !DILocalVariable(name: "new_reversed", scope: !10033, file: !3, line: 7191, type: !1457)
!10044 = !DILocalVariable(name: "i", scope: !10033, file: !3, line: 7192, type: !1450)
!10045 = !DILocation(line: 0, scope: !10033)
!10046 = !DILocation(line: 7194, column: 15, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 7194, column: 3)
!10048 = !DILocation(line: 7194, column: 8, scope: !10047)
!10049 = !DILocation(line: 7190, column: 14, scope: !10033)
!10050 = !DILocation(line: 0, scope: !10047)
!10051 = !DILocation(line: 7194, column: 43, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 7194, column: 3)
!10053 = !DILocation(line: 7194, column: 48, scope: !10052)
!10054 = !DILocation(line: 7194, column: 3, scope: !10047)
!10055 = !DILocation(line: 7196, column: 10, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 7196, column: 9)
!10057 = !DILocation(line: 7196, column: 9, scope: !10052)
!10058 = !DILocation(line: 7197, column: 18, scope: !10056)
!10059 = !DILocation(line: 7197, column: 7, scope: !10056)
!10060 = !DILocation(line: 7195, column: 15, scope: !10052)
!10061 = !DILocation(line: 7195, column: 35, scope: !10052)
!10062 = !DILocation(line: 7194, column: 3, scope: !10052)
!10063 = distinct !{!10063, !10054, !10064}
!10064 = !DILocation(line: 7197, column: 18, scope: !10047)
!10065 = !DILocation(line: 7199, column: 18, scope: !10033)
!10066 = !DILocation(line: 7200, column: 7, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 7200, column: 7)
!10068 = !DILocation(line: 7200, column: 7, scope: !10033)
!10069 = !DILocation(line: 7202, column: 11, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 7202, column: 11)
!10071 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 7201, column: 5)
!10072 = !DILocation(line: 0, scope: !10070)
!10073 = !DILocation(line: 7202, column: 11, scope: !10071)
!10074 = !DILocation(line: 7203, column: 9, scope: !10070)
!10075 = !DILocation(line: 7203, column: 31, scope: !10070)
!10076 = !DILocation(line: 7199, column: 16, scope: !10033)
!10077 = !DILocation(line: 7213, column: 7, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 7213, column: 7)
!10079 = !DILocation(line: 7213, column: 29, scope: !10078)
!10080 = !DILocation(line: 7214, column: 7, scope: !10078)
!10081 = !DILocation(line: 7214, column: 11, scope: !10078)
!10082 = !DILocation(line: 7213, column: 7, scope: !10033)
!10083 = !DILocation(line: 7216, column: 18, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 7215, column: 5)
!10085 = !DILocation(line: 7217, column: 7, scope: !10084)
!10086 = !DILocation(line: 7217, column: 33, scope: !10084)
!10087 = !DILocation(line: 7218, column: 5, scope: !10084)
!10088 = !DILocation(line: 7222, column: 58, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 7220, column: 5)
!10090 = !DILocation(line: 7222, column: 37, scope: !10089)
!10091 = !DILocation(line: 7222, column: 11, scope: !10089)
!10092 = !DILocation(line: 7224, column: 33, scope: !10089)
!10093 = !DILocation(line: 7224, column: 7, scope: !10089)
!10094 = !DILocation(line: 7224, column: 31, scope: !10089)
!10095 = !DILocation(line: 0, scope: !10078)
!10096 = !DILocation(line: 7229, column: 7, scope: !10033)
!10097 = !DILocation(line: 7230, column: 17, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 7230, column: 7)
!10099 = !DILocation(line: 0, scope: !10098)
!10100 = !DILocation(line: 7230, column: 7, scope: !10033)
!10101 = !DILocation(line: 7232, column: 36, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 7231, column: 5)
!10103 = !DILocation(line: 7233, column: 38, scope: !10102)
!10104 = !DILocation(line: 7233, column: 7, scope: !10102)
!10105 = !DILocation(line: 7233, column: 36, scope: !10102)
!10106 = !DILocation(line: 7234, column: 29, scope: !10102)
!10107 = !DILocation(line: 7235, column: 5, scope: !10102)
!10108 = !DILocation(line: 7238, column: 36, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 7237, column: 5)
!10110 = !DILocation(line: 7239, column: 7, scope: !10109)
!10111 = !DILocation(line: 7239, column: 36, scope: !10109)
!10112 = !DILocation(line: 7241, column: 3, scope: !10033)
!10113 = distinct !DISubprogram(name: "build_function_decl_skip_args", scope: !3, file: !3, line: 7251, type: !10034, scopeLine: 7252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10114)
!10114 = !{!10115, !10116, !10117, !10118}
!10115 = !DILocalVariable(name: "orig_decl", arg: 1, scope: !10113, file: !3, line: 7251, type: !1457)
!10116 = !DILocalVariable(name: "args_to_skip", arg: 2, scope: !10113, file: !3, line: 7251, type: !2233)
!10117 = !DILocalVariable(name: "new_decl", scope: !10113, file: !3, line: 7253, type: !1457)
!10118 = !DILocalVariable(name: "new_type", scope: !10113, file: !3, line: 7254, type: !1457)
!10119 = !DILocation(line: 0, scope: !10113)
!10120 = !DILocation(line: 7253, column: 19, scope: !10113)
!10121 = !DILocation(line: 7256, column: 14, scope: !10113)
!10122 = !DILocation(line: 7257, column: 7, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 7257, column: 7)
!10124 = !DILocation(line: 7257, column: 7, scope: !10113)
!10125 = !DILocation(line: 7258, column: 16, scope: !10123)
!10126 = !DILocation(line: 7258, column: 5, scope: !10123)
!10127 = !DILocation(line: 7259, column: 3, scope: !10113)
!10128 = !DILocation(line: 7259, column: 24, scope: !10113)
!10129 = !DILocation(line: 7263, column: 7, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 7263, column: 7)
!10131 = !DILocation(line: 7263, column: 7, scope: !10113)
!10132 = !DILocation(line: 7264, column: 5, scope: !10130)
!10133 = !DILocation(line: 7264, column: 28, scope: !10130)
!10134 = !DILocation(line: 7265, column: 3, scope: !10113)
!10135 = distinct !DISubprogram(name: "prototype_p", scope: !3, file: !3, line: 10394, type: !6091, scopeLine: 10395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10136)
!10136 = !{!10137, !10138}
!10137 = !DILocalVariable(name: "fntype", arg: 1, scope: !10135, file: !3, line: 10394, type: !1457)
!10138 = !DILocalVariable(name: "t", scope: !10135, file: !3, line: 10396, type: !1457)
!10139 = !DILocation(line: 0, scope: !10135)
!10140 = !DILocation(line: 10398, column: 3, scope: !10135)
!10141 = !DILocation(line: 10400, column: 7, scope: !10135)
!10142 = !DILocation(line: 10401, column: 13, scope: !10135)
!10143 = !DILocation(line: 10401, column: 10, scope: !10135)
!10144 = !DILocation(line: 10401, column: 3, scope: !10135)
!10145 = distinct !DISubprogram(name: "build_function_type_list", scope: !3, file: !3, line: 7307, type: !10146, scopeLine: 7308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10148)
!10146 = !DISubroutineType(types: !10147)
!10147 = !{!1457, !1457, null}
!10148 = !{!10149, !10150, !10151}
!10149 = !DILocalVariable(name: "return_type", arg: 1, scope: !10145, file: !3, line: 7307, type: !1457)
!10150 = !DILocalVariable(name: "args", scope: !10145, file: !3, line: 7309, type: !1457)
!10151 = !DILocalVariable(name: "p", scope: !10145, file: !3, line: 7310, type: !7137)
!10152 = !DILocation(line: 0, scope: !10145)
!10153 = !DILocation(line: 7310, column: 3, scope: !10145)
!10154 = !DILocation(line: 7310, column: 11, scope: !10145)
!10155 = !DILocation(line: 7312, column: 3, scope: !10145)
!10156 = !DILocation(line: 7313, column: 58, scope: !10145)
!10157 = !DILocation(line: 7313, column: 10, scope: !10145)
!10158 = !DILocation(line: 7314, column: 3, scope: !10145)
!10159 = !DILocation(line: 7316, column: 1, scope: !10145)
!10160 = !DILocation(line: 7315, column: 3, scope: !10145)
!10161 = distinct !DISubprogram(name: "build_function_type_list_1", scope: !3, file: !3, line: 7273, type: !10162, scopeLine: 7274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10164)
!10162 = !DISubroutineType(types: !10163)
!10163 = !{!1457, !1449, !1457, !2934}
!10164 = !{!10165, !10166, !10167, !10168, !10169, !10170}
!10165 = !DILocalVariable(name: "vaargs", arg: 1, scope: !10161, file: !3, line: 7273, type: !1449)
!10166 = !DILocalVariable(name: "return_type", arg: 2, scope: !10161, file: !3, line: 7273, type: !1457)
!10167 = !DILocalVariable(name: "argp", arg: 3, scope: !10161, file: !3, line: 7273, type: !2934)
!10168 = !DILocalVariable(name: "t", scope: !10161, file: !3, line: 7275, type: !1457)
!10169 = !DILocalVariable(name: "args", scope: !10161, file: !3, line: 7275, type: !1457)
!10170 = !DILocalVariable(name: "last", scope: !10161, file: !3, line: 7275, type: !1457)
!10171 = !DILocation(line: 0, scope: !10161)
!10172 = !DILocation(line: 7277, column: 7, scope: !10161)
!10173 = !DILocation(line: 0, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10175, file: !3, line: 7278, column: 3)
!10175 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 7278, column: 3)
!10176 = !DILocation(line: 7278, column: 8, scope: !10175)
!10177 = !DILocation(line: 0, scope: !10175)
!10178 = !DILocation(line: 7278, column: 28, scope: !10174)
!10179 = !DILocation(line: 7278, column: 3, scope: !10175)
!10180 = !DILocation(line: 7279, column: 12, scope: !10174)
!10181 = !DILocation(line: 7278, column: 46, scope: !10174)
!10182 = !DILocation(line: 7278, column: 3, scope: !10174)
!10183 = distinct !{!10183, !10179, !10184}
!10184 = !DILocation(line: 7279, column: 12, scope: !10175)
!10185 = !DILocation(line: 7281, column: 7, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 7281, column: 7)
!10187 = !DILocation(line: 7281, column: 7, scope: !10161)
!10188 = !DILocation(line: 7284, column: 16, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 7284, column: 11)
!10190 = distinct !DILexicalBlock(scope: !10186, file: !3, line: 7282, column: 5)
!10191 = !DILocation(line: 7284, column: 11, scope: !10190)
!10192 = !DILocation(line: 7285, column: 9, scope: !10189)
!10193 = !DILocation(line: 7285, column: 2, scope: !10189)
!10194 = !DILocation(line: 7286, column: 7, scope: !10190)
!10195 = !DILocation(line: 7288, column: 17, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10186, file: !3, line: 7288, column: 12)
!10197 = !DILocation(line: 7288, column: 12, scope: !10186)
!10198 = !DILocation(line: 7289, column: 12, scope: !10196)
!10199 = !DILocation(line: 7289, column: 5, scope: !10196)
!10200 = !DILocation(line: 7293, column: 14, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 7291, column: 5)
!10202 = !DILocation(line: 7294, column: 27, scope: !10201)
!10203 = !DILocation(line: 7294, column: 7, scope: !10201)
!10204 = !DILocation(line: 7294, column: 25, scope: !10201)
!10205 = !DILocation(line: 0, scope: !10186)
!10206 = !DILocation(line: 7296, column: 10, scope: !10161)
!10207 = !DILocation(line: 7298, column: 3, scope: !10161)
!10208 = distinct !DISubprogram(name: "build_varargs_function_type_list", scope: !3, file: !3, line: 7324, type: !10146, scopeLine: 7325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10209)
!10209 = !{!10210, !10211, !10212}
!10210 = !DILocalVariable(name: "return_type", arg: 1, scope: !10208, file: !3, line: 7324, type: !1457)
!10211 = !DILocalVariable(name: "args", scope: !10208, file: !3, line: 7326, type: !1457)
!10212 = !DILocalVariable(name: "p", scope: !10208, file: !3, line: 7327, type: !7137)
!10213 = !DILocation(line: 0, scope: !10208)
!10214 = !DILocation(line: 7327, column: 3, scope: !10208)
!10215 = !DILocation(line: 7327, column: 11, scope: !10208)
!10216 = !DILocation(line: 7329, column: 3, scope: !10208)
!10217 = !DILocation(line: 7330, column: 57, scope: !10208)
!10218 = !DILocation(line: 7330, column: 10, scope: !10208)
!10219 = !DILocation(line: 7331, column: 3, scope: !10208)
!10220 = !DILocation(line: 7334, column: 1, scope: !10208)
!10221 = !DILocation(line: 7333, column: 3, scope: !10208)
!10222 = distinct !DISubprogram(name: "build_method_type_directly", scope: !3, file: !3, line: 7342, type: !4608, scopeLine: 7345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10223)
!10223 = !{!10224, !10225, !10226, !10227, !10228, !10229, !10230, !10231, !10232}
!10224 = !DILocalVariable(name: "basetype", arg: 1, scope: !10222, file: !3, line: 7342, type: !1457)
!10225 = !DILocalVariable(name: "rettype", arg: 2, scope: !10222, file: !3, line: 7343, type: !1457)
!10226 = !DILocalVariable(name: "argtypes", arg: 3, scope: !10222, file: !3, line: 7344, type: !1457)
!10227 = !DILocalVariable(name: "t", scope: !10222, file: !3, line: 7346, type: !1457)
!10228 = !DILocalVariable(name: "ptype", scope: !10222, file: !3, line: 7347, type: !1457)
!10229 = !DILocalVariable(name: "hashcode", scope: !10222, file: !3, line: 7348, type: !1450)
!10230 = !DILocalVariable(name: "any_structural_p", scope: !10222, file: !3, line: 7349, type: !1449)
!10231 = !DILocalVariable(name: "any_noncanonical_p", scope: !10222, file: !3, line: 7349, type: !1449)
!10232 = !DILocalVariable(name: "canon_argtypes", scope: !10222, file: !3, line: 7350, type: !1457)
!10233 = !DILocation(line: 0, scope: !10222)
!10234 = !DILocation(line: 7349, column: 3, scope: !10222)
!10235 = !DILocation(line: 7353, column: 7, scope: !10222)
!10236 = !DILocation(line: 7355, column: 30, scope: !10222)
!10237 = !DILocation(line: 7355, column: 3, scope: !10222)
!10238 = !DILocation(line: 7355, column: 28, scope: !10222)
!10239 = !DILocation(line: 7356, column: 3, scope: !10222)
!10240 = !DILocation(line: 7356, column: 17, scope: !10222)
!10241 = !DILocation(line: 7357, column: 11, scope: !10222)
!10242 = !DILocation(line: 7361, column: 14, scope: !10222)
!10243 = !DILocation(line: 7362, column: 3, scope: !10222)
!10244 = !DILocation(line: 7362, column: 22, scope: !10222)
!10245 = !DILocation(line: 7365, column: 14, scope: !10222)
!10246 = !DILocation(line: 7366, column: 14, scope: !10222)
!10247 = !DILocation(line: 7367, column: 14, scope: !10222)
!10248 = !DILocation(line: 7368, column: 7, scope: !10222)
!10249 = !DILocation(line: 7372, column: 8, scope: !10222)
!10250 = !DILocation(line: 7373, column: 8, scope: !10222)
!10251 = !DILocation(line: 7373, column: 11, scope: !10222)
!10252 = !DILocation(line: 7372, column: 5, scope: !10222)
!10253 = !DILocation(line: 7375, column: 34, scope: !10222)
!10254 = !DILocation(line: 7376, column: 8, scope: !10222)
!10255 = !DILocation(line: 7376, column: 11, scope: !10222)
!10256 = !DILocation(line: 7376, column: 36, scope: !10222)
!10257 = !DILocation(line: 7375, column: 5, scope: !10222)
!10258 = !DILocation(line: 7377, column: 49, scope: !10222)
!10259 = !DILocation(line: 7377, column: 20, scope: !10222)
!10260 = !DILocation(line: 7380, column: 7, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 7380, column: 7)
!10262 = !DILocation(line: 7380, column: 7, scope: !10222)
!10263 = !DILocation(line: 7381, column: 5, scope: !10261)
!10264 = !DILocation(line: 7382, column: 12, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 7382, column: 12)
!10266 = !DILocation(line: 7382, column: 12, scope: !10261)
!10267 = !DILocation(line: 7384, column: 37, scope: !10265)
!10268 = !DILocation(line: 7385, column: 9, scope: !10265)
!10269 = !DILocation(line: 7384, column: 9, scope: !10265)
!10270 = !DILocation(line: 7383, column: 5, scope: !10265)
!10271 = !DILocation(line: 7384, column: 7, scope: !10265)
!10272 = !DILocation(line: 7387, column: 8, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 7387, column: 7)
!10274 = !DILocation(line: 7387, column: 7, scope: !10222)
!10275 = !DILocation(line: 7388, column: 5, scope: !10273)
!10276 = !DILocation(line: 7391, column: 1, scope: !10222)
!10277 = !DILocation(line: 7390, column: 3, scope: !10222)
!10278 = distinct !DISubprogram(name: "build_method_type", scope: !3, file: !3, line: 7399, type: !4530, scopeLine: 7400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10279)
!10279 = !{!10280, !10281}
!10280 = !DILocalVariable(name: "basetype", arg: 1, scope: !10278, file: !3, line: 7399, type: !1457)
!10281 = !DILocalVariable(name: "type", arg: 2, scope: !10278, file: !3, line: 7399, type: !1457)
!10282 = !DILocation(line: 0, scope: !10278)
!10283 = !DILocation(line: 7401, column: 3, scope: !10278)
!10284 = !DILocation(line: 7404, column: 10, scope: !10278)
!10285 = !DILocation(line: 7405, column: 10, scope: !10278)
!10286 = !DILocation(line: 7403, column: 10, scope: !10278)
!10287 = !DILocation(line: 7403, column: 3, scope: !10278)
!10288 = distinct !DISubprogram(name: "build_offset_type", scope: !3, file: !3, line: 7413, type: !4530, scopeLine: 7414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10289)
!10289 = !{!10290, !10291, !10292, !10293}
!10290 = !DILocalVariable(name: "basetype", arg: 1, scope: !10288, file: !3, line: 7413, type: !1457)
!10291 = !DILocalVariable(name: "type", arg: 2, scope: !10288, file: !3, line: 7413, type: !1457)
!10292 = !DILocalVariable(name: "t", scope: !10288, file: !3, line: 7415, type: !1457)
!10293 = !DILocalVariable(name: "hashcode", scope: !10288, file: !3, line: 7416, type: !1814)
!10294 = !DILocation(line: 0, scope: !10288)
!10295 = !DILocation(line: 7419, column: 7, scope: !10288)
!10296 = !DILocation(line: 7421, column: 30, scope: !10288)
!10297 = !DILocation(line: 7421, column: 3, scope: !10288)
!10298 = !DILocation(line: 7421, column: 28, scope: !10288)
!10299 = !DILocation(line: 7422, column: 3, scope: !10288)
!10300 = !DILocation(line: 7422, column: 17, scope: !10288)
!10301 = !DILocation(line: 7425, column: 14, scope: !10288)
!10302 = !DILocation(line: 7426, column: 14, scope: !10288)
!10303 = !DILocation(line: 7427, column: 7, scope: !10288)
!10304 = !DILocation(line: 7429, column: 8, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 7429, column: 7)
!10306 = !DILocation(line: 7429, column: 7, scope: !10288)
!10307 = !DILocation(line: 7430, column: 5, scope: !10305)
!10308 = !DILocation(line: 7432, column: 7, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 7432, column: 7)
!10310 = !DILocation(line: 7432, column: 26, scope: !10309)
!10311 = !DILocation(line: 7432, column: 7, scope: !10288)
!10312 = !DILocation(line: 7434, column: 11, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 7434, column: 11)
!10314 = distinct !DILexicalBlock(scope: !10309, file: !3, line: 7433, column: 5)
!10315 = !DILocation(line: 7435, column: 4, scope: !10313)
!10316 = !DILocation(line: 7435, column: 7, scope: !10313)
!10317 = !DILocation(line: 7434, column: 11, scope: !10314)
!10318 = !DILocation(line: 7436, column: 2, scope: !10313)
!10319 = !DILocation(line: 7437, column: 16, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 7437, column: 16)
!10321 = !DILocation(line: 7437, column: 62, scope: !10320)
!10322 = !DILocation(line: 7438, column: 9, scope: !10320)
!10323 = !DILocation(line: 7438, column: 34, scope: !10320)
!10324 = !DILocation(line: 7437, column: 16, scope: !10313)
!10325 = !DILocation(line: 7440, column: 6, scope: !10320)
!10326 = !DILocation(line: 7440, column: 4, scope: !10320)
!10327 = !DILocation(line: 7444, column: 3, scope: !10288)
!10328 = distinct !DISubprogram(name: "excess_precision_type", scope: !3, file: !3, line: 7523, type: !3923, scopeLine: 7524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10329)
!10329 = !{!10330, !10331}
!10330 = !DILocalVariable(name: "type", arg: 1, scope: !10328, file: !3, line: 7523, type: !1457)
!10331 = !DILocalVariable(name: "flt_eval_method", scope: !10332, file: !3, line: 7527, type: !1450)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 7526, column: 5)
!10333 = distinct !DILexicalBlock(scope: !10328, file: !3, line: 7525, column: 7)
!10334 = !DILocation(line: 0, scope: !10328)
!10335 = !DILocation(line: 7525, column: 7, scope: !10333)
!10336 = !DILocation(line: 7525, column: 29, scope: !10333)
!10337 = !DILocation(line: 7525, column: 7, scope: !10328)
!10338 = !DILocation(line: 7527, column: 29, scope: !10332)
!10339 = !DILocation(line: 0, scope: !10332)
!10340 = !DILocation(line: 7528, column: 15, scope: !10332)
!10341 = !DILocation(line: 7528, column: 7, scope: !10332)
!10342 = !DILocation(line: 7531, column: 4, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 7529, column: 2)
!10344 = !DILocation(line: 7534, column: 12, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 7534, column: 12)
!10346 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 7532, column: 6)
!10347 = !DILocation(line: 7534, column: 32, scope: !10345)
!10348 = !DILocation(line: 7534, column: 29, scope: !10345)
!10349 = !DILocation(line: 7535, column: 10, scope: !10345)
!10350 = !DILocation(line: 7534, column: 12, scope: !10346)
!10351 = !DILocation(line: 7538, column: 12, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 7538, column: 12)
!10353 = !DILocation(line: 7538, column: 32, scope: !10352)
!10354 = !DILocation(line: 7538, column: 29, scope: !10352)
!10355 = !DILocation(line: 7539, column: 5, scope: !10352)
!10356 = !DILocation(line: 7539, column: 8, scope: !10352)
!10357 = !DILocation(line: 7539, column: 28, scope: !10352)
!10358 = !DILocation(line: 7539, column: 25, scope: !10352)
!10359 = !DILocation(line: 7538, column: 12, scope: !10346)
!10360 = !DILocation(line: 7540, column: 10, scope: !10352)
!10361 = !DILocation(line: 7540, column: 3, scope: !10352)
!10362 = !DILocation(line: 7543, column: 8, scope: !10346)
!10363 = !DILocation(line: 7544, column: 6, scope: !10346)
!10364 = !DILocation(line: 7547, column: 8, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 7547, column: 8)
!10366 = !DILocation(line: 7547, column: 37, scope: !10365)
!10367 = !DILocation(line: 7547, column: 8, scope: !10343)
!10368 = !DILocation(line: 7549, column: 4, scope: !10343)
!10369 = !DILocation(line: 7552, column: 12, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 7552, column: 12)
!10371 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 7550, column: 6)
!10372 = !DILocation(line: 7552, column: 44, scope: !10370)
!10373 = !DILocation(line: 7552, column: 41, scope: !10370)
!10374 = !DILocation(line: 7553, column: 10, scope: !10370)
!10375 = !DILocation(line: 7552, column: 12, scope: !10371)
!10376 = !DILocation(line: 7556, column: 12, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 7556, column: 12)
!10378 = !DILocation(line: 7556, column: 44, scope: !10377)
!10379 = !DILocation(line: 7556, column: 41, scope: !10377)
!10380 = !DILocation(line: 7557, column: 5, scope: !10377)
!10381 = !DILocation(line: 7557, column: 9, scope: !10377)
!10382 = !DILocation(line: 7558, column: 12, scope: !10377)
!10383 = !DILocation(line: 7558, column: 9, scope: !10377)
!10384 = !DILocation(line: 7556, column: 12, scope: !10371)
!10385 = !DILocation(line: 7559, column: 10, scope: !10377)
!10386 = !DILocation(line: 7559, column: 3, scope: !10377)
!10387 = !DILocation(line: 7562, column: 8, scope: !10371)
!10388 = !DILocation(line: 7563, column: 6, scope: !10371)
!10389 = !DILocation(line: 7569, column: 3, scope: !10328)
!10390 = !DILocation(line: 7570, column: 1, scope: !10328)
!10391 = distinct !DISubprogram(name: "get_unwidened", scope: !3, file: !3, line: 7591, type: !4530, scopeLine: 7592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10392)
!10392 = !{!10393, !10394, !10395, !10396, !10397, !10398, !10399}
!10393 = !DILocalVariable(name: "op", arg: 1, scope: !10391, file: !3, line: 7591, type: !1457)
!10394 = !DILocalVariable(name: "for_type", arg: 2, scope: !10391, file: !3, line: 7591, type: !1457)
!10395 = !DILocalVariable(name: "type", scope: !10391, file: !3, line: 7594, type: !1457)
!10396 = !DILocalVariable(name: "final_prec", scope: !10391, file: !3, line: 7595, type: !7)
!10397 = !DILocalVariable(name: "uns", scope: !10391, file: !3, line: 7597, type: !1450)
!10398 = !DILocalVariable(name: "win", scope: !10391, file: !3, line: 7601, type: !1457)
!10399 = !DILocalVariable(name: "bitschange", scope: !10400, file: !3, line: 7605, type: !1450)
!10400 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 7604, column: 5)
!10401 = !DILocation(line: 0, scope: !10391)
!10402 = !DILocation(line: 7594, column: 15, scope: !10391)
!10403 = !DILocation(line: 7596, column: 7, scope: !10391)
!10404 = !DILocation(line: 7598, column: 17, scope: !10391)
!10405 = !DILocation(line: 7598, column: 34, scope: !10391)
!10406 = !DILocation(line: 7598, column: 22, scope: !10391)
!10407 = !DILocation(line: 7599, column: 24, scope: !10391)
!10408 = !DILocation(line: 7599, column: 22, scope: !10391)
!10409 = !DILocation(line: 7600, column: 8, scope: !10391)
!10410 = !DILocation(line: 7600, column: 11, scope: !10391)
!10411 = !DILocation(line: 7603, column: 3, scope: !10391)
!10412 = !DILocation(line: 7597, column: 7, scope: !10391)
!10413 = !DILocation(line: 7601, column: 8, scope: !10391)
!10414 = !DILocation(line: 7603, column: 10, scope: !10391)
!10415 = !DILocation(line: 7610, column: 11, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 7610, column: 11)
!10417 = !DILocation(line: 7610, column: 56, scope: !10416)
!10418 = !DILocation(line: 7610, column: 11, scope: !10400)
!10419 = !DILocation(line: 7613, column: 20, scope: !10400)
!10420 = !DILocation(line: 7614, column: 8, scope: !10400)
!10421 = !DILocation(line: 7614, column: 6, scope: !10400)
!10422 = !DILocation(line: 0, scope: !10400)
!10423 = !DILocation(line: 7618, column: 22, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 7618, column: 11)
!10425 = !DILocation(line: 7619, column: 4, scope: !10424)
!10426 = !DILocation(line: 7619, column: 18, scope: !10424)
!10427 = !DILocation(line: 7618, column: 11, scope: !10400)
!10428 = !DILocation(line: 7633, column: 22, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 7633, column: 11)
!10430 = !DILocation(line: 7633, column: 11, scope: !10400)
!10431 = !DILocation(line: 7635, column: 10, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 7635, column: 8)
!10433 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 7634, column: 2)
!10434 = !DILocation(line: 7635, column: 14, scope: !10432)
!10435 = !DILocation(line: 7635, column: 28, scope: !10432)
!10436 = !DILocation(line: 7635, column: 8, scope: !10433)
!10437 = !DILocation(line: 7636, column: 6, scope: !10432)
!10438 = !DILocation(line: 7641, column: 9, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 7640, column: 8)
!10440 = !DILocation(line: 7641, column: 12, scope: !10439)
!10441 = !DILocation(line: 7642, column: 8, scope: !10439)
!10442 = !DILocation(line: 7642, column: 11, scope: !10439)
!10443 = !DILocation(line: 7640, column: 8, scope: !10433)
!10444 = distinct !{!10444, !10411, !10445}
!10445 = !DILocation(line: 7648, column: 5, scope: !10391)
!10446 = !DILocation(line: 7653, column: 7, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 7652, column: 7)
!10448 = !DILocation(line: 7653, column: 10, scope: !10447)
!10449 = !DILocation(line: 7653, column: 26, scope: !10447)
!10450 = !DILocation(line: 7654, column: 7, scope: !10447)
!10451 = !DILocation(line: 7654, column: 10, scope: !10447)
!10452 = !DILocation(line: 7654, column: 26, scope: !10447)
!10453 = !DILocation(line: 7655, column: 7, scope: !10447)
!10454 = !DILocation(line: 7655, column: 10, scope: !10447)
!10455 = !DILocation(line: 7652, column: 7, scope: !10391)
!10456 = !DILocation(line: 7656, column: 11, scope: !10447)
!10457 = !DILocation(line: 7656, column: 5, scope: !10447)
!10458 = !DILocation(line: 7658, column: 3, scope: !10391)
!10459 = distinct !DISubprogram(name: "int_fits_type_p", scope: !3, file: !3, line: 7759, type: !5468, scopeLine: 7760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10460)
!10460 = !{!10461, !10462, !10463, !10464, !10465, !10466, !10467, !10468, !10469, !10470, !10475, !10476, !10481, !10482, !10485}
!10461 = !DILocalVariable(name: "c", arg: 1, scope: !10459, file: !3, line: 7759, type: !2774)
!10462 = !DILocalVariable(name: "type", arg: 2, scope: !10459, file: !3, line: 7759, type: !2774)
!10463 = !DILocalVariable(name: "type_low_bound", scope: !10459, file: !3, line: 7761, type: !1457)
!10464 = !DILocalVariable(name: "type_high_bound", scope: !10459, file: !3, line: 7761, type: !1457)
!10465 = !DILocalVariable(name: "ok_for_low_bound", scope: !10459, file: !3, line: 7762, type: !1449)
!10466 = !DILocalVariable(name: "ok_for_high_bound", scope: !10459, file: !3, line: 7762, type: !1449)
!10467 = !DILocalVariable(name: "unsc", scope: !10459, file: !3, line: 7762, type: !1449)
!10468 = !DILocalVariable(name: "dc", scope: !10459, file: !3, line: 7763, type: !1506)
!10469 = !DILocalVariable(name: "dd", scope: !10459, file: !3, line: 7763, type: !1506)
!10470 = !DILocalVariable(name: "c_neg", scope: !10471, file: !3, line: 7804, type: !1450)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 7803, column: 2)
!10472 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 7802, column: 11)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 7796, column: 5)
!10474 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 7795, column: 7)
!10475 = !DILocalVariable(name: "t_neg", scope: !10471, file: !3, line: 7805, type: !1450)
!10476 = !DILocalVariable(name: "c_neg", scope: !10477, file: !3, line: 7829, type: !1450)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !3, line: 7828, column: 2)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 7827, column: 11)
!10479 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 7821, column: 5)
!10480 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 7820, column: 7)
!10481 = !DILocalVariable(name: "t_neg", scope: !10477, file: !3, line: 7830, type: !1450)
!10482 = !DILocalVariable(name: "prec", scope: !10483, file: !3, line: 7861, type: !1450)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 7860, column: 5)
!10484 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 7859, column: 7)
!10485 = !DILabel(scope: !10459, name: "retry", file: !3, line: 7780)
!10486 = !DILocation(line: 0, scope: !10459)
!10487 = !DILocation(line: 7763, column: 3, scope: !10459)
!10488 = !DILocation(line: 7765, column: 8, scope: !10459)
!10489 = !DILocation(line: 7766, column: 10, scope: !10459)
!10490 = !DILocation(line: 7768, column: 33, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 7768, column: 7)
!10492 = !DILocation(line: 7769, column: 7, scope: !10491)
!10493 = !DILocation(line: 0, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 7855, column: 7)
!10495 = !DILocation(line: 7769, column: 10, scope: !10491)
!10496 = !DILocation(line: 7770, column: 10, scope: !10491)
!10497 = !DILocation(line: 7770, column: 7, scope: !10491)
!10498 = !DILocation(line: 7778, column: 10, scope: !10491)
!10499 = !DILocation(line: 7778, column: 31, scope: !10491)
!10500 = !DILocation(line: 7778, column: 5, scope: !10491)
!10501 = !DILocation(line: 0, scope: !10473)
!10502 = !DILocation(line: 0, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 7798, column: 11)
!10504 = !DILocation(line: 0, scope: !10472)
!10505 = !DILocation(line: 0, scope: !10471)
!10506 = !DILocation(line: 0, scope: !10479)
!10507 = !DILocation(line: 0, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 7823, column: 11)
!10509 = !DILocation(line: 0, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 7851, column: 7)
!10511 = !DILocation(line: 7780, column: 1, scope: !10459)
!10512 = !DILocation(line: 7781, column: 20, scope: !10459)
!10513 = !DILocation(line: 7782, column: 21, scope: !10459)
!10514 = !DILocation(line: 7795, column: 7, scope: !10474)
!10515 = !DILocation(line: 7795, column: 22, scope: !10474)
!10516 = !DILocation(line: 7795, column: 25, scope: !10474)
!10517 = !DILocation(line: 7795, column: 52, scope: !10474)
!10518 = !DILocation(line: 7795, column: 7, scope: !10459)
!10519 = !DILocation(line: 7797, column: 12, scope: !10473)
!10520 = !DILocation(line: 7798, column: 11, scope: !10503)
!10521 = !DILocation(line: 7798, column: 28, scope: !10503)
!10522 = !DILocation(line: 7799, column: 4, scope: !10503)
!10523 = !DILocation(line: 7799, column: 7, scope: !10503)
!10524 = !DILocation(line: 7800, column: 4, scope: !10503)
!10525 = !DILocation(line: 7800, column: 7, scope: !10503)
!10526 = !DILocation(line: 7798, column: 11, scope: !10473)
!10527 = !DILocation(line: 7801, column: 7, scope: !10503)
!10528 = !DILocation(line: 7801, column: 28, scope: !10503)
!10529 = !DILocation(line: 7801, column: 2, scope: !10503)
!10530 = !DILocation(line: 7802, column: 19, scope: !10472)
!10531 = !DILocation(line: 7802, column: 16, scope: !10472)
!10532 = !DILocation(line: 7802, column: 11, scope: !10473)
!10533 = !DILocation(line: 7804, column: 23, scope: !10471)
!10534 = !DILocation(line: 7804, column: 26, scope: !10471)
!10535 = !DILocation(line: 7805, column: 22, scope: !10471)
!10536 = !DILocation(line: 7805, column: 25, scope: !10471)
!10537 = !DILocation(line: 7807, column: 8, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 7807, column: 8)
!10539 = !DILocation(line: 7807, column: 14, scope: !10538)
!10540 = !DILocation(line: 7809, column: 15, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 7809, column: 8)
!10542 = !DILocation(line: 7809, column: 29, scope: !10541)
!10543 = !DILocation(line: 7809, column: 54, scope: !10541)
!10544 = !DILocation(line: 7809, column: 8, scope: !10471)
!10545 = !DILocation(line: 7811, column: 2, scope: !10472)
!10546 = !DILocation(line: 7812, column: 16, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 7812, column: 16)
!10548 = !DILocation(line: 7812, column: 46, scope: !10547)
!10549 = !DILocation(line: 7812, column: 16, scope: !10472)
!10550 = !DILocation(line: 7820, column: 7, scope: !10480)
!10551 = !DILocation(line: 7820, column: 23, scope: !10480)
!10552 = !DILocation(line: 7820, column: 26, scope: !10480)
!10553 = !DILocation(line: 7820, column: 54, scope: !10480)
!10554 = !DILocation(line: 7820, column: 7, scope: !10459)
!10555 = !DILocation(line: 7822, column: 12, scope: !10479)
!10556 = !DILocation(line: 7823, column: 11, scope: !10508)
!10557 = !DILocation(line: 7823, column: 28, scope: !10508)
!10558 = !DILocation(line: 7824, column: 4, scope: !10508)
!10559 = !DILocation(line: 7824, column: 7, scope: !10508)
!10560 = !DILocation(line: 7825, column: 4, scope: !10508)
!10561 = !DILocation(line: 7825, column: 7, scope: !10508)
!10562 = !DILocation(line: 7823, column: 11, scope: !10479)
!10563 = !DILocation(line: 7826, column: 7, scope: !10508)
!10564 = !DILocation(line: 7826, column: 28, scope: !10508)
!10565 = !DILocation(line: 7826, column: 2, scope: !10508)
!10566 = !DILocation(line: 7827, column: 19, scope: !10478)
!10567 = !DILocation(line: 7827, column: 16, scope: !10478)
!10568 = !DILocation(line: 7827, column: 11, scope: !10479)
!10569 = !DILocation(line: 7829, column: 23, scope: !10477)
!10570 = !DILocation(line: 7829, column: 26, scope: !10477)
!10571 = !DILocation(line: 0, scope: !10477)
!10572 = !DILocation(line: 7830, column: 22, scope: !10477)
!10573 = !DILocation(line: 7830, column: 25, scope: !10477)
!10574 = !DILocation(line: 7832, column: 8, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 7832, column: 8)
!10576 = !DILocation(line: 7832, column: 14, scope: !10575)
!10577 = !DILocation(line: 7834, column: 15, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 7834, column: 8)
!10579 = !DILocation(line: 7834, column: 29, scope: !10578)
!10580 = !DILocation(line: 7834, column: 54, scope: !10578)
!10581 = !DILocation(line: 7834, column: 8, scope: !10477)
!10582 = !DILocation(line: 7836, column: 2, scope: !10478)
!10583 = !DILocation(line: 7837, column: 16, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10478, file: !3, line: 7837, column: 16)
!10585 = !DILocation(line: 7837, column: 46, scope: !10584)
!10586 = !DILocation(line: 7837, column: 16, scope: !10478)
!10587 = !DILocation(line: 7845, column: 7, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 7845, column: 7)
!10589 = !DILocation(line: 7845, column: 24, scope: !10588)
!10590 = !DILocation(line: 7851, column: 7, scope: !10510)
!10591 = !DILocation(line: 7851, column: 28, scope: !10510)
!10592 = !DILocation(line: 7851, column: 40, scope: !10510)
!10593 = !DILocation(line: 7851, column: 7, scope: !10459)
!10594 = !DILocation(line: 7855, column: 7, scope: !10494)
!10595 = !DILocation(line: 7855, column: 31, scope: !10494)
!10596 = !DILocation(line: 7855, column: 29, scope: !10494)
!10597 = !DILocation(line: 7855, column: 7, scope: !10459)
!10598 = !DILocation(line: 7859, column: 9, scope: !10484)
!10599 = !DILocation(line: 7859, column: 30, scope: !10484)
!10600 = !DILocation(line: 7861, column: 18, scope: !10483)
!10601 = !DILocation(line: 0, scope: !10483)
!10602 = !DILocation(line: 7862, column: 16, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 7862, column: 11)
!10604 = !DILocation(line: 7862, column: 11, scope: !10483)
!10605 = !DILocation(line: 7861, column: 63, scope: !10483)
!10606 = !DILocation(line: 7864, column: 39, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 7864, column: 8)
!10608 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 7863, column: 2)
!10609 = !DILocation(line: 7864, column: 53, scope: !10607)
!10610 = !DILocation(line: 7864, column: 48, scope: !10607)
!10611 = !DILocation(line: 7864, column: 58, scope: !10607)
!10612 = !DILocation(line: 7864, column: 8, scope: !10608)
!10613 = !DILocation(line: 7868, column: 13, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 7867, column: 16)
!10615 = !DILocation(line: 7868, column: 4, scope: !10614)
!10616 = !DILocation(line: 7868, column: 45, scope: !10614)
!10617 = !DILocation(line: 7868, column: 40, scope: !10614)
!10618 = !DILocation(line: 7868, column: 51, scope: !10614)
!10619 = !DILocation(line: 7867, column: 16, scope: !10603)
!10620 = !DILocation(line: 7870, column: 5, scope: !10484)
!10621 = !DILocation(line: 7875, column: 7, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 7875, column: 7)
!10623 = !DILocation(line: 7875, column: 24, scope: !10622)
!10624 = !DILocation(line: 7876, column: 7, scope: !10622)
!10625 = !DILocation(line: 7876, column: 10, scope: !10622)
!10626 = !DILocation(line: 7876, column: 27, scope: !10622)
!10627 = !DILocation(line: 7877, column: 7, scope: !10622)
!10628 = !DILocation(line: 7877, column: 10, scope: !10622)
!10629 = !DILocation(line: 7877, column: 35, scope: !10622)
!10630 = !DILocation(line: 7877, column: 32, scope: !10622)
!10631 = !DILocation(line: 7875, column: 7, scope: !10459)
!10632 = !DILocation(line: 7880, column: 7, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 7878, column: 5)
!10634 = !DILocation(line: 7884, column: 31, scope: !10459)
!10635 = !DILocation(line: 7884, column: 39, scope: !10459)
!10636 = !DILocation(line: 7884, column: 11, scope: !10459)
!10637 = !DILocation(line: 7884, column: 10, scope: !10459)
!10638 = !DILocation(line: 7884, column: 3, scope: !10459)
!10639 = !DILocation(line: 7885, column: 1, scope: !10459)
!10640 = distinct !DISubprogram(name: "get_narrower", scope: !3, file: !3, line: 7667, type: !10641, scopeLine: 7668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10644)
!10641 = !DISubroutineType(types: !10642)
!10642 = !{!1457, !1457, !10643}
!10643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!10644 = !{!10645, !10646, !10647, !10648, !10649, !10650, !10651, !10653, !10656, !10657}
!10645 = !DILocalVariable(name: "op", arg: 1, scope: !10640, file: !3, line: 7667, type: !1457)
!10646 = !DILocalVariable(name: "unsignedp_ptr", arg: 2, scope: !10640, file: !3, line: 7667, type: !10643)
!10647 = !DILocalVariable(name: "uns", scope: !10640, file: !3, line: 7669, type: !1450)
!10648 = !DILocalVariable(name: "first", scope: !10640, file: !3, line: 7670, type: !1450)
!10649 = !DILocalVariable(name: "win", scope: !10640, file: !3, line: 7671, type: !1457)
!10650 = !DILocalVariable(name: "integral_p", scope: !10640, file: !3, line: 7672, type: !1449)
!10651 = !DILocalVariable(name: "bitschange", scope: !10652, file: !3, line: 7676, type: !1450)
!10652 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 7675, column: 5)
!10653 = !DILocalVariable(name: "innerprec", scope: !10654, file: !3, line: 7726, type: !1511)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 7725, column: 5)
!10655 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 7718, column: 7)
!10656 = !DILocalVariable(name: "unsignedp", scope: !10654, file: !3, line: 7728, type: !1450)
!10657 = !DILocalVariable(name: "type", scope: !10654, file: !3, line: 7730, type: !1457)
!10658 = !DILocation(line: 0, scope: !10640)
!10659 = !DILocation(line: 7672, column: 21, scope: !10640)
!10660 = !DILocation(line: 7674, column: 3, scope: !10640)
!10661 = !DILocation(line: 7671, column: 8, scope: !10640)
!10662 = !DILocation(line: 7670, column: 7, scope: !10640)
!10663 = !DILocation(line: 7669, column: 7, scope: !10640)
!10664 = !DILocation(line: 7674, column: 10, scope: !10640)
!10665 = !DILocation(line: 7674, column: 25, scope: !10640)
!10666 = !DILocation(line: 7677, column: 5, scope: !10652)
!10667 = !DILocation(line: 7678, column: 7, scope: !10652)
!10668 = !DILocation(line: 7678, column: 5, scope: !10652)
!10669 = !DILocation(line: 0, scope: !10652)
!10670 = !DILocation(line: 7681, column: 22, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 7681, column: 11)
!10672 = !DILocation(line: 7681, column: 11, scope: !10652)
!10673 = !DILocation(line: 7687, column: 22, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 7687, column: 11)
!10675 = !DILocation(line: 7687, column: 11, scope: !10652)
!10676 = !DILocation(line: 7692, column: 8, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 7692, column: 8)
!10678 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 7688, column: 2)
!10679 = !DILocation(line: 0, scope: !10677)
!10680 = !DILocation(line: 7692, column: 8, scope: !10678)
!10681 = !DILocation(line: 7697, column: 17, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 7697, column: 13)
!10683 = !DILocation(line: 7697, column: 13, scope: !10677)
!10684 = !DILocation(line: 7705, column: 8, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 7705, column: 8)
!10686 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 7702, column: 2)
!10687 = !DILocation(line: 7705, column: 8, scope: !10686)
!10688 = !DILocation(line: 7706, column: 12, scope: !10685)
!10689 = !DILocation(line: 7706, column: 6, scope: !10685)
!10690 = !DILocation(line: 7711, column: 8, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 7711, column: 8)
!10692 = !DILocation(line: 7711, column: 41, scope: !10691)
!10693 = !DILocation(line: 7711, column: 8, scope: !10686)
!10694 = distinct !{!10694, !10660, !10695}
!10695 = !DILocation(line: 7716, column: 5, scope: !10640)
!10696 = !DILocation(line: 0, scope: !10674)
!10697 = !DILocation(line: 0, scope: !10655)
!10698 = !DILocation(line: 7718, column: 7, scope: !10655)
!10699 = !DILocation(line: 7718, column: 22, scope: !10655)
!10700 = !DILocation(line: 7720, column: 7, scope: !10655)
!10701 = !DILocation(line: 7720, column: 10, scope: !10655)
!10702 = !DILocation(line: 7720, column: 37, scope: !10655)
!10703 = !DILocation(line: 7721, column: 7, scope: !10655)
!10704 = !DILocation(line: 7721, column: 37, scope: !10655)
!10705 = !DILocation(line: 7723, column: 7, scope: !10655)
!10706 = !DILocation(line: 7723, column: 10, scope: !10655)
!10707 = !DILocation(line: 7723, column: 43, scope: !10655)
!10708 = !DILocation(line: 7724, column: 7, scope: !10655)
!10709 = !DILocation(line: 7724, column: 10, scope: !10655)
!10710 = !DILocation(line: 7718, column: 7, scope: !10640)
!10711 = !DILocation(line: 7727, column: 18, scope: !10654)
!10712 = !DILocation(line: 7727, column: 4, scope: !10654)
!10713 = !DILocation(line: 0, scope: !10654)
!10714 = !DILocation(line: 7728, column: 24, scope: !10654)
!10715 = !DILocation(line: 7729, column: 10, scope: !10654)
!10716 = !DILocation(line: 7729, column: 13, scope: !10654)
!10717 = !DILocation(line: 7730, column: 36, scope: !10654)
!10718 = !DILocation(line: 7730, column: 51, scope: !10654)
!10719 = !DILocation(line: 7730, column: 19, scope: !10654)
!10720 = !DILocation(line: 7740, column: 23, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 7740, column: 11)
!10722 = !DILocation(line: 7740, column: 21, scope: !10721)
!10723 = !DILocation(line: 7741, column: 4, scope: !10721)
!10724 = !DILocation(line: 7741, column: 9, scope: !10721)
!10725 = !DILocation(line: 7742, column: 4, scope: !10721)
!10726 = !DILocation(line: 7742, column: 8, scope: !10721)
!10727 = !DILocation(line: 7742, column: 14, scope: !10721)
!10728 = !DILocation(line: 7742, column: 24, scope: !10721)
!10729 = !DILocation(line: 7742, column: 21, scope: !10721)
!10730 = !DILocation(line: 7743, column: 12, scope: !10721)
!10731 = !DILocation(line: 7743, column: 4, scope: !10721)
!10732 = !DILocation(line: 7740, column: 11, scope: !10654)
!10733 = !DILocation(line: 7745, column: 8, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 7744, column: 2)
!10735 = !DILocation(line: 7746, column: 12, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 7745, column: 8)
!10737 = !DILocation(line: 7746, column: 6, scope: !10736)
!10738 = !DILocation(line: 7747, column: 10, scope: !10734)
!10739 = !DILocation(line: 7748, column: 2, scope: !10734)
!10740 = !DILocation(line: 7751, column: 18, scope: !10640)
!10741 = !DILocation(line: 7752, column: 3, scope: !10640)
!10742 = distinct !DISubprogram(name: "get_type_static_bounds", scope: !3, file: !3, line: 7893, type: !10743, scopeLine: 7894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10755)
!10743 = !DISubroutineType(types: !10744)
!10744 = !{null, !2774, !10745, !10745}
!10745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10746, size: 64)
!10746 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mpz_struct", file: !10747, line: 71, baseType: !10748)
!10747 = !DIFile(filename: "./mini-gmp.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!10748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10747, line: 63, size: 128, elements: !10749)
!10749 = !{!10750, !10751, !10752}
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "_mp_alloc", scope: !10748, file: !10747, line: 65, baseType: !1450, size: 32)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "_mp_size", scope: !10748, file: !10747, line: 67, baseType: !1450, size: 32, offset: 32)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "_mp_d", scope: !10748, file: !10747, line: 70, baseType: !10753, size: 64, offset: 64)
!10753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10754, size: 64)
!10754 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_limb_t", file: !10747, line: 56, baseType: !1511)
!10755 = !{!10756, !10757, !10758, !10759}
!10756 = !DILocalVariable(name: "type", arg: 1, scope: !10742, file: !3, line: 7893, type: !2774)
!10757 = !DILocalVariable(name: "min", arg: 2, scope: !10742, file: !3, line: 7893, type: !10745)
!10758 = !DILocalVariable(name: "max", arg: 3, scope: !10742, file: !3, line: 7893, type: !10745)
!10759 = !DILocalVariable(name: "mn", scope: !10760, file: !3, line: 7905, type: !1506)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 7904, column: 2)
!10761 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 7901, column: 11)
!10762 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 7900, column: 5)
!10763 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 7895, column: 7)
!10764 = !DILocation(line: 0, scope: !10742)
!10765 = !DILocation(line: 7895, column: 8, scope: !10763)
!10766 = !DILocation(line: 7895, column: 30, scope: !10763)
!10767 = !DILocation(line: 7895, column: 33, scope: !10763)
!10768 = !DILocation(line: 7896, column: 7, scope: !10763)
!10769 = !DILocation(line: 7896, column: 10, scope: !10763)
!10770 = !DILocation(line: 7896, column: 44, scope: !10763)
!10771 = !DILocation(line: 7895, column: 7, scope: !10742)
!10772 = !DILocation(line: 7897, column: 30, scope: !10763)
!10773 = !DILocation(line: 7898, column: 4, scope: !10763)
!10774 = !DILocation(line: 7897, column: 5, scope: !10763)
!10775 = !DILocation(line: 7901, column: 11, scope: !10761)
!10776 = !DILocation(line: 7901, column: 11, scope: !10762)
!10777 = !DILocation(line: 7902, column: 2, scope: !10761)
!10778 = !DILocation(line: 7905, column: 4, scope: !10760)
!10779 = !DILocation(line: 7906, column: 9, scope: !10760)
!10780 = !DILocation(line: 7906, column: 26, scope: !10760)
!10781 = !DILocation(line: 7906, column: 48, scope: !10760)
!10782 = !DILocation(line: 7907, column: 9, scope: !10760)
!10783 = !DILocation(line: 7907, column: 46, scope: !10760)
!10784 = !DILocation(line: 7907, column: 26, scope: !10760)
!10785 = !DILocation(line: 7908, column: 5, scope: !10760)
!10786 = !DILocation(line: 7909, column: 4, scope: !10760)
!10787 = !DILocation(line: 7910, column: 2, scope: !10761)
!10788 = !DILocation(line: 7913, column: 8, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 7913, column: 7)
!10790 = !DILocation(line: 7913, column: 30, scope: !10789)
!10791 = !DILocation(line: 7913, column: 33, scope: !10789)
!10792 = !DILocation(line: 7914, column: 7, scope: !10789)
!10793 = !DILocation(line: 7914, column: 10, scope: !10789)
!10794 = !DILocation(line: 7914, column: 44, scope: !10789)
!10795 = !DILocation(line: 7913, column: 7, scope: !10742)
!10796 = !DILocation(line: 7915, column: 30, scope: !10789)
!10797 = !DILocation(line: 7916, column: 4, scope: !10789)
!10798 = !DILocation(line: 7915, column: 5, scope: !10789)
!10799 = !DILocation(line: 7919, column: 11, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 7919, column: 11)
!10801 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 7918, column: 5)
!10802 = !DILocation(line: 0, scope: !10800)
!10803 = !DILocation(line: 7919, column: 11, scope: !10801)
!10804 = !DILocation(line: 7920, column: 27, scope: !10800)
!10805 = !DILocation(line: 7920, column: 2, scope: !10800)
!10806 = !DILocation(line: 7923, column: 66, scope: !10800)
!10807 = !DILocation(line: 7923, column: 27, scope: !10800)
!10808 = !DILocation(line: 7923, column: 2, scope: !10800)
!10809 = !DILocation(line: 7926, column: 1, scope: !10742)
!10810 = distinct !DISubprogram(name: "shwi_to_double_int", scope: !1507, file: !1507, line: 72, type: !10811, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10813)
!10811 = !DISubroutineType(types: !10812)
!10812 = !{!1506, !1513}
!10813 = !{!10814, !10815}
!10814 = !DILocalVariable(name: "cst", arg: 1, scope: !10810, file: !1507, line: 72, type: !1513)
!10815 = !DILocalVariable(name: "r", scope: !10810, file: !1507, line: 74, type: !1506)
!10816 = !DILocation(line: 0, scope: !10810)
!10817 = !DILocation(line: 79, column: 3, scope: !10810)
!10818 = distinct !DISubprogram(name: "auto_var_in_fn_p", scope: !3, file: !3, line: 7931, type: !10819, scopeLine: 7932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10821)
!10819 = !DISubroutineType(types: !10820)
!10820 = !{!1449, !2774, !2774}
!10821 = !{!10822, !10823}
!10822 = !DILocalVariable(name: "var", arg: 1, scope: !10818, file: !3, line: 7931, type: !2774)
!10823 = !DILocalVariable(name: "fn", arg: 2, scope: !10818, file: !3, line: 7931, type: !2774)
!10824 = !DILocation(line: 0, scope: !10818)
!10825 = !DILocation(line: 7933, column: 11, scope: !10818)
!10826 = !DILocation(line: 7933, column: 24, scope: !10818)
!10827 = !DILocation(line: 7933, column: 27, scope: !10818)
!10828 = !DILocation(line: 7933, column: 46, scope: !10818)
!10829 = !DILocation(line: 7934, column: 4, scope: !10818)
!10830 = !DILocation(line: 7934, column: 26, scope: !10818)
!10831 = !DILocation(line: 7934, column: 38, scope: !10818)
!10832 = !DILocation(line: 7934, column: 57, scope: !10818)
!10833 = !DILocation(line: 7935, column: 9, scope: !10818)
!10834 = !DILocation(line: 7935, column: 14, scope: !10818)
!10835 = !DILocation(line: 7936, column: 8, scope: !10818)
!10836 = !DILocation(line: 7936, column: 27, scope: !10818)
!10837 = !DILocation(line: 7937, column: 8, scope: !10818)
!10838 = !DILocation(line: 7937, column: 27, scope: !10818)
!10839 = !DILocation(line: 7933, column: 3, scope: !10818)
!10840 = distinct !DISubprogram(name: "variably_modified_type_p", scope: !3, file: !3, line: 7975, type: !10841, scopeLine: 7976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10843)
!10841 = !DISubroutineType(types: !10842)
!10842 = !{!1449, !1457, !1457}
!10843 = !{!10844, !10845, !10846, !10847, !10849, !10851, !10854, !10856, !10862, !10864, !10866, !10869, !10871}
!10844 = !DILocalVariable(name: "type", arg: 1, scope: !10840, file: !3, line: 7975, type: !1457)
!10845 = !DILocalVariable(name: "fn", arg: 2, scope: !10840, file: !3, line: 7975, type: !1457)
!10846 = !DILocalVariable(name: "t", scope: !10840, file: !3, line: 7977, type: !1457)
!10847 = !DILocalVariable(name: "_t", scope: !10848, file: !3, line: 7991, type: !1457)
!10848 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 7991, column: 3)
!10849 = !DILocalVariable(name: "_t", scope: !10850, file: !3, line: 7992, type: !1457)
!10850 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 7992, column: 3)
!10851 = !DILocalVariable(name: "_t", scope: !10852, file: !3, line: 8018, type: !1457)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 8018, column: 7)
!10853 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 7995, column: 5)
!10854 = !DILocalVariable(name: "_t", scope: !10855, file: !3, line: 8019, type: !1457)
!10855 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 8019, column: 7)
!10856 = !DILocalVariable(name: "_t", scope: !10857, file: !3, line: 8032, type: !1457)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 8032, column: 6)
!10858 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 8031, column: 4)
!10859 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 8030, column: 6)
!10860 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 8029, column: 7)
!10861 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 8029, column: 7)
!10862 = !DILocalVariable(name: "_t", scope: !10863, file: !3, line: 8033, type: !1457)
!10863 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 8033, column: 6)
!10864 = !DILocalVariable(name: "_t", scope: !10865, file: !3, line: 8034, type: !1457)
!10865 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 8034, column: 6)
!10866 = !DILocalVariable(name: "_t", scope: !10867, file: !3, line: 8037, type: !1457)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !3, line: 8037, column: 8)
!10868 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 8036, column: 10)
!10869 = !DILocalVariable(name: "_t", scope: !10870, file: !3, line: 8044, type: !1457)
!10870 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 8044, column: 7)
!10871 = !DILocalVariable(name: "_t", scope: !10872, file: !3, line: 8045, type: !1457)
!10872 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 8045, column: 7)
!10873 = !DILocation(line: 0, scope: !10840)
!10874 = !DILocation(line: 7987, column: 15, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 7987, column: 7)
!10876 = !DILocation(line: 7987, column: 12, scope: !10875)
!10877 = !DILocation(line: 7987, column: 7, scope: !10840)
!10878 = !DILocation(line: 7991, column: 3, scope: !10848)
!10879 = !DILocation(line: 0, scope: !10848)
!10880 = !DILocation(line: 7991, column: 3, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10848, file: !3, line: 7991, column: 3)
!10882 = !DILocation(line: 7991, column: 3, scope: !10840)
!10883 = !DILocation(line: 7992, column: 3, scope: !10850)
!10884 = !DILocation(line: 0, scope: !10850)
!10885 = !DILocation(line: 7992, column: 3, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10850, file: !3, line: 7992, column: 3)
!10887 = !DILocation(line: 7992, column: 3, scope: !10840)
!10888 = !DILocation(line: 7994, column: 11, scope: !10840)
!10889 = !DILocation(line: 7994, column: 3, scope: !10840)
!10890 = !DILocation(line: 7999, column: 37, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 7999, column: 11)
!10892 = !DILocation(line: 7999, column: 11, scope: !10891)
!10893 = !DILocation(line: 7999, column: 11, scope: !10853)
!10894 = !DILocation(line: 8007, column: 37, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 8007, column: 11)
!10896 = !DILocation(line: 8007, column: 11, scope: !10895)
!10897 = !DILocation(line: 8007, column: 11, scope: !10853)
!10898 = !DILocation(line: 8018, column: 7, scope: !10852)
!10899 = !DILocation(line: 0, scope: !10852)
!10900 = !DILocation(line: 8018, column: 7, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 8018, column: 7)
!10902 = !DILocation(line: 8018, column: 7, scope: !10853)
!10903 = !DILocation(line: 8019, column: 7, scope: !10855)
!10904 = !DILocation(line: 0, scope: !10855)
!10905 = !DILocation(line: 8019, column: 7, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 8019, column: 7)
!10907 = !DILocation(line: 8019, column: 7, scope: !10853)
!10908 = !DILocation(line: 8029, column: 16, scope: !10861)
!10909 = !DILocation(line: 0, scope: !10857)
!10910 = !DILocation(line: 0, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 8032, column: 6)
!10912 = !DILocation(line: 0, scope: !10863)
!10913 = !DILocation(line: 0, scope: !10865)
!10914 = !DILocation(line: 0, scope: !10867)
!10915 = !DILocation(line: 8029, column: 12, scope: !10861)
!10916 = !DILocation(line: 0, scope: !10861)
!10917 = !DILocation(line: 8029, column: 7, scope: !10861)
!10918 = !DILocation(line: 8030, column: 6, scope: !10859)
!10919 = !DILocation(line: 8030, column: 20, scope: !10859)
!10920 = !DILocation(line: 8030, column: 6, scope: !10860)
!10921 = !DILocation(line: 8032, column: 6, scope: !10857)
!10922 = !DILocation(line: 8032, column: 6, scope: !10911)
!10923 = !DILocation(line: 8032, column: 6, scope: !10858)
!10924 = !DILocation(line: 8033, column: 6, scope: !10863)
!10925 = !DILocation(line: 8033, column: 6, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 8033, column: 6)
!10927 = !DILocation(line: 8033, column: 6, scope: !10858)
!10928 = !DILocation(line: 8034, column: 6, scope: !10865)
!10929 = !DILocation(line: 8034, column: 6, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 8034, column: 6)
!10931 = !DILocation(line: 8034, column: 6, scope: !10858)
!10932 = !DILocation(line: 8036, column: 10, scope: !10868)
!10933 = !DILocation(line: 8036, column: 27, scope: !10868)
!10934 = !DILocation(line: 8036, column: 10, scope: !10858)
!10935 = !DILocation(line: 8037, column: 8, scope: !10867)
!10936 = !DILocation(line: 8037, column: 8, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 8037, column: 8)
!10938 = !DILocation(line: 8037, column: 8, scope: !10868)
!10939 = !DILocation(line: 8029, column: 43, scope: !10860)
!10940 = !DILocation(line: 8029, column: 7, scope: !10860)
!10941 = distinct !{!10941, !10917, !10942}
!10942 = !DILocation(line: 8038, column: 4, scope: !10861)
!10943 = !DILocation(line: 8044, column: 7, scope: !10870)
!10944 = !DILocation(line: 0, scope: !10870)
!10945 = !DILocation(line: 8044, column: 7, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 8044, column: 7)
!10947 = !DILocation(line: 8044, column: 7, scope: !10853)
!10948 = !DILocation(line: 8045, column: 7, scope: !10872)
!10949 = !DILocation(line: 0, scope: !10872)
!10950 = !DILocation(line: 8045, column: 7, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 8045, column: 7)
!10952 = !DILocation(line: 8045, column: 7, scope: !10853)
!10953 = !DILocation(line: 8054, column: 35, scope: !10840)
!10954 = !DILocation(line: 8054, column: 10, scope: !10840)
!10955 = !DILocation(line: 8054, column: 3, scope: !10840)
!10956 = !DILocation(line: 8057, column: 1, scope: !10840)
!10957 = distinct !DISubprogram(name: "walk_tree_1", scope: !3, file: !3, line: 9995, type: !10958, scopeLine: 9997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10968)
!10958 = !DISubroutineType(types: !10959)
!10959 = !{!1457, !1964, !10960, !1454, !2785, !10964}
!10960 = !DIDerivedType(tag: DW_TAG_typedef, name: "walk_tree_fn", file: !6, line: 5203, baseType: !10961)
!10961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10962, size: 64)
!10962 = !DISubroutineType(types: !10963)
!10963 = !{!1457, !1964, !10643, !1454}
!10964 = !DIDerivedType(tag: DW_TAG_typedef, name: "walk_tree_lh", file: !6, line: 5207, baseType: !10965)
!10965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10966, size: 64)
!10966 = !DISubroutineType(types: !10967)
!10967 = !{!1457, !1964, !10643, !10961, !1454, !2785}
!10968 = !{!10969, !10970, !10971, !10972, !10973, !10974, !10975, !10976, !10977, !10980, !10982, !10983, !10985, !10993, !10996, !10998, !11000, !11001, !11004, !11007, !11010, !11011}
!10969 = !DILocalVariable(name: "tp", arg: 1, scope: !10957, file: !3, line: 9995, type: !1964)
!10970 = !DILocalVariable(name: "func", arg: 2, scope: !10957, file: !3, line: 9995, type: !10960)
!10971 = !DILocalVariable(name: "data", arg: 3, scope: !10957, file: !3, line: 9995, type: !1454)
!10972 = !DILocalVariable(name: "pset", arg: 4, scope: !10957, file: !3, line: 9996, type: !2785)
!10973 = !DILocalVariable(name: "lh", arg: 5, scope: !10957, file: !3, line: 9996, type: !10964)
!10974 = !DILocalVariable(name: "code", scope: !10957, file: !3, line: 9998, type: !155)
!10975 = !DILocalVariable(name: "walk_subtrees", scope: !10957, file: !3, line: 9999, type: !1450)
!10976 = !DILocalVariable(name: "result", scope: !10957, file: !3, line: 10000, type: !1457)
!10977 = !DILocalVariable(name: "len", scope: !10978, file: !3, line: 10075, type: !1450)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10074, column: 7)
!10979 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 10051, column: 5)
!10980 = !DILocalVariable(name: "idx", scope: !10981, file: !3, line: 10094, type: !1511)
!10981 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10093, column: 7)
!10982 = !DILocalVariable(name: "ce", scope: !10981, file: !3, line: 10095, type: !4600)
!10983 = !DILocalVariable(name: "decl", scope: !10984, file: !3, line: 10109, type: !1457)
!10984 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10108, column: 7)
!10985 = !DILocalVariable(name: "i", scope: !10986, file: !3, line: 10126, type: !10987)
!10986 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10125, column: 7)
!10987 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree_stmt_iterator", file: !10988, line: 35, baseType: !10989)
!10988 = !DIFile(filename: "./tree-iterator.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!10989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10988, line: 32, size: 128, elements: !10990)
!10990 = !{!10991, !10992}
!10991 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !10989, file: !10988, line: 33, baseType: !2511, size: 64)
!10992 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !10989, file: !10988, line: 34, baseType: !1457, size: 64, offset: 64)
!10993 = !DILocalVariable(name: "i", scope: !10994, file: !3, line: 10159, type: !1450)
!10994 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 10158, column: 4)
!10995 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10134, column: 2)
!10996 = !DILocalVariable(name: "i", scope: !10997, file: !3, line: 10167, type: !1450)
!10997 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 10166, column: 4)
!10998 = !DILocalVariable(name: "i", scope: !10999, file: !3, line: 10180, type: !1450)
!10999 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10179, column: 7)
!11000 = !DILocalVariable(name: "len", scope: !10999, file: !3, line: 10180, type: !1450)
!11001 = !DILocalVariable(name: "type_p", scope: !11002, file: !3, line: 10204, type: !1964)
!11002 = distinct !DILexicalBlock(scope: !11003, file: !3, line: 10203, column: 2)
!11003 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10202, column: 11)
!11004 = !DILocalVariable(name: "field", scope: !11005, file: !3, line: 10222, type: !1457)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 10221, column: 6)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 10220, column: 8)
!11007 = !DILocalVariable(name: "i", scope: !11008, file: !3, line: 10261, type: !1450)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 10260, column: 2)
!11009 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10259, column: 11)
!11010 = !DILocalVariable(name: "len", scope: !11008, file: !3, line: 10261, type: !1450)
!11011 = !DILabel(scope: !10957, name: "tail_recurse", file: !3, line: 10010)
!11012 = !DILocation(line: 0, scope: !10957)
!11013 = !DILocation(line: 9999, column: 3, scope: !10957)
!11014 = !DILocation(line: 0, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 10017, column: 7)
!11016 = !DILocation(line: 0, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 10043, column: 7)
!11018 = !DILocation(line: 10000, column: 3, scope: !10957)
!11019 = !DILocation(line: 10010, column: 2, scope: !10957)
!11020 = !DILocation(line: 10012, column: 8, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 10012, column: 7)
!11022 = !DILocation(line: 10012, column: 7, scope: !10957)
!11023 = !DILocation(line: 10017, column: 12, scope: !11015)
!11024 = !DILocation(line: 10017, column: 15, scope: !11015)
!11025 = !DILocation(line: 10017, column: 7, scope: !10957)
!11026 = !DILocation(line: 10021, column: 17, scope: !10957)
!11027 = !DILocation(line: 10022, column: 12, scope: !10957)
!11028 = !DILocation(line: 10025, column: 7, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 10025, column: 7)
!11030 = !DILocation(line: 10025, column: 7, scope: !10957)
!11031 = !DILocation(line: 10028, column: 10, scope: !10957)
!11032 = !DILocation(line: 10032, column: 8, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 10032, column: 7)
!11034 = !DILocation(line: 10032, column: 7, scope: !10957)
!11035 = !DILocation(line: 10035, column: 11, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 10033, column: 5)
!11037 = !DILocation(line: 10036, column: 2, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 10036, column: 2)
!11039 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 10035, column: 11)
!11040 = !DILocation(line: 10038, column: 2, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11042, file: !3, line: 10038, column: 2)
!11042 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 10037, column: 16)
!11043 = !DILocation(line: 10043, column: 7, scope: !10957)
!11044 = !DILocation(line: 10045, column: 16, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 10044, column: 5)
!11046 = !DILocation(line: 10046, column: 11, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11045, file: !3, line: 10046, column: 11)
!11048 = !DILocation(line: 10046, column: 22, scope: !11047)
!11049 = !DILocation(line: 10046, column: 18, scope: !11047)
!11050 = !DILocation(line: 10050, column: 3, scope: !10957)
!11051 = !DILocation(line: 10069, column: 7, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10069, column: 7)
!11053 = !DILocation(line: 10069, column: 7, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11052, file: !3, line: 10069, column: 7)
!11055 = !DILocation(line: 10070, column: 7, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10070, column: 7)
!11057 = !DILocation(line: 10075, column: 12, scope: !10978)
!11058 = !DILocation(line: 0, scope: !10978)
!11059 = !DILocation(line: 10077, column: 10, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 10077, column: 6)
!11061 = !DILocation(line: 10077, column: 6, scope: !10978)
!11062 = !DILocation(line: 10081, column: 2, scope: !10978)
!11063 = !DILocation(line: 10081, column: 9, scope: !10978)
!11064 = !DILocation(line: 10082, column: 4, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 10082, column: 4)
!11066 = !DILocation(line: 10082, column: 4, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 10082, column: 4)
!11068 = distinct !{!11068, !11062, !11069}
!11069 = !DILocation(line: 10082, column: 4, scope: !10978)
!11070 = !DILocation(line: 10085, column: 2, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 10085, column: 2)
!11072 = !DILocation(line: 10089, column: 7, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10089, column: 7)
!11074 = !DILocation(line: 10089, column: 7, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 10089, column: 7)
!11076 = !DILocation(line: 10090, column: 7, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10090, column: 7)
!11078 = !DILocation(line: 10095, column: 2, scope: !10981)
!11079 = !DILocation(line: 0, scope: !10981)
!11080 = !DILocation(line: 0, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 10097, column: 2)
!11082 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 10097, column: 2)
!11083 = !DILocation(line: 10097, column: 7, scope: !11082)
!11084 = !DILocation(line: 0, scope: !11082)
!11085 = !DILocation(line: 10098, column: 7, scope: !11081)
!11086 = !DILocation(line: 10097, column: 2, scope: !11082)
!11087 = !DILocation(line: 10100, column: 4, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 10100, column: 4)
!11089 = !DILocation(line: 10100, column: 4, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 10100, column: 4)
!11091 = !DILocation(line: 10099, column: 10, scope: !11081)
!11092 = !DILocation(line: 10097, column: 2, scope: !11081)
!11093 = distinct !{!11093, !11086, !11094}
!11094 = !DILocation(line: 10100, column: 4, scope: !11082)
!11095 = !DILocation(line: 10101, column: 7, scope: !10979)
!11096 = !DILocation(line: 10105, column: 7, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 10105, column: 7)
!11098 = !DILocation(line: 10110, column: 14, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 10110, column: 2)
!11100 = !DILocation(line: 10110, column: 7, scope: !11099)
!11101 = !DILocation(line: 0, scope: !11099)
!11102 = !DILocation(line: 0, scope: !10984)
!11103 = !DILocation(line: 10110, column: 2, scope: !11099)
!11104 = !DILocation(line: 10117, column: 6, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11106, file: !3, line: 10117, column: 6)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 10111, column: 4)
!11107 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 10110, column: 2)
!11108 = !DILocation(line: 10117, column: 6, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 10117, column: 6)
!11110 = !DILocation(line: 10118, column: 6, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11106, file: !3, line: 10118, column: 6)
!11112 = !DILocation(line: 10118, column: 6, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 10118, column: 6)
!11114 = !DILocation(line: 10119, column: 6, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11106, file: !3, line: 10119, column: 6)
!11116 = !DILocation(line: 10119, column: 6, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 10119, column: 6)
!11118 = !DILocation(line: 10110, column: 49, scope: !11107)
!11119 = !DILocation(line: 10110, column: 2, scope: !11107)
!11120 = distinct !{!11120, !11103, !11121}
!11121 = !DILocation(line: 10120, column: 4, scope: !11099)
!11122 = !DILocation(line: 10121, column: 2, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 10121, column: 2)
!11124 = !DILocation(line: 10126, column: 2, scope: !10986)
!11125 = !DILocation(line: 10127, column: 11, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !10986, file: !3, line: 10127, column: 2)
!11127 = !DILocation(line: 10127, column: 22, scope: !11126)
!11128 = !DILocation(line: 10128, column: 4, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 10128, column: 4)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 10127, column: 2)
!11131 = !DILocation(line: 0, scope: !11130)
!11132 = !DILocation(line: 10127, column: 7, scope: !11126)
!11133 = !DILocation(line: 10127, column: 29, scope: !11130)
!11134 = !DILocation(line: 10127, column: 28, scope: !11130)
!11135 = !DILocation(line: 10127, column: 2, scope: !11126)
!11136 = !DILocation(line: 10128, column: 4, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 10128, column: 4)
!11138 = !DILocation(line: 0, scope: !10986)
!11139 = !DILocation(line: 10127, column: 44, scope: !11130)
!11140 = !DILocation(line: 10127, column: 2, scope: !11130)
!11141 = distinct !{!11141, !11135, !11142}
!11142 = !DILocation(line: 10128, column: 4, scope: !11126)
!11143 = !DILocation(line: 10129, column: 7, scope: !10979)
!11144 = !DILocation(line: 10133, column: 15, scope: !10979)
!11145 = !DILocation(line: 10133, column: 7, scope: !10979)
!11146 = !DILocation(line: 10160, column: 6, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 10160, column: 6)
!11148 = !DILocation(line: 10143, column: 4, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 10143, column: 4)
!11150 = !DILocation(line: 10143, column: 4, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 10143, column: 4)
!11152 = !DILocation(line: 0, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 10150, column: 4)
!11154 = !DILocation(line: 10150, column: 4, scope: !11153)
!11155 = !DILocation(line: 10153, column: 4, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 10153, column: 4)
!11157 = !DILocation(line: 10153, column: 4, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 10153, column: 4)
!11159 = !DILocation(line: 10154, column: 4, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 10154, column: 4)
!11161 = !DILocation(line: 10154, column: 4, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11160, file: !3, line: 10154, column: 4)
!11163 = !DILocation(line: 10155, column: 4, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 10155, column: 4)
!11165 = !DILocation(line: 0, scope: !10994)
!11166 = !DILocation(line: 10160, column: 20, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11147, file: !3, line: 10160, column: 6)
!11168 = !DILocation(line: 10161, column: 8, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 10161, column: 8)
!11170 = !DILocation(line: 10161, column: 8, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 10161, column: 8)
!11172 = !DILocation(line: 10160, column: 26, scope: !11167)
!11173 = !DILocation(line: 10160, column: 6, scope: !11167)
!11174 = distinct !{!11174, !11146, !11175}
!11175 = !DILocation(line: 10161, column: 8, scope: !11147)
!11176 = !DILocation(line: 10162, column: 6, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 10162, column: 6)
!11178 = !DILocation(line: 0, scope: !10997)
!11179 = !DILocation(line: 10168, column: 11, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 10168, column: 6)
!11181 = !DILocation(line: 0, scope: !11180)
!11182 = !DILocation(line: 10168, column: 20, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11180, file: !3, line: 10168, column: 6)
!11184 = !DILocation(line: 10168, column: 6, scope: !11180)
!11185 = !DILocation(line: 10169, column: 8, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 10169, column: 8)
!11187 = !DILocation(line: 10169, column: 8, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 10169, column: 8)
!11189 = !DILocation(line: 10168, column: 26, scope: !11183)
!11190 = !DILocation(line: 10168, column: 6, scope: !11183)
!11191 = distinct !{!11191, !11184, !11192}
!11192 = !DILocation(line: 10169, column: 8, scope: !11180)
!11193 = !DILocation(line: 10170, column: 6, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 10170, column: 6)
!11195 = !DILocation(line: 10174, column: 4, scope: !10995)
!11196 = !DILocation(line: 10176, column: 7, scope: !10979)
!11197 = !DILocation(line: 10184, column: 9, scope: !10999)
!11198 = !DILocation(line: 10184, column: 34, scope: !10999)
!11199 = !DILocation(line: 10184, column: 31, scope: !10999)
!11200 = !DILocation(line: 10184, column: 8, scope: !10999)
!11201 = !DILocation(line: 0, scope: !10999)
!11202 = !DILocation(line: 10185, column: 16, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 10185, column: 2)
!11204 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 10185, column: 2)
!11205 = !DILocation(line: 10185, column: 7, scope: !11204)
!11206 = !DILocation(line: 10185, column: 2, scope: !11204)
!11207 = !DILocation(line: 10186, column: 4, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 10186, column: 4)
!11209 = !DILocation(line: 10186, column: 4, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 10186, column: 4)
!11211 = !DILocation(line: 10185, column: 23, scope: !11203)
!11212 = !DILocation(line: 10185, column: 2, scope: !11203)
!11213 = distinct !{!11213, !11206, !11214}
!11214 = !DILocation(line: 10186, column: 4, scope: !11204)
!11215 = !DILocation(line: 10187, column: 2, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 10187, column: 2)
!11217 = !DILocation(line: 10202, column: 11, scope: !11003)
!11218 = !DILocation(line: 10202, column: 44, scope: !11003)
!11219 = !DILocation(line: 10202, column: 11, scope: !10979)
!11220 = !DILocation(line: 10204, column: 20, scope: !11002)
!11221 = !DILocation(line: 0, scope: !11002)
!11222 = !DILocation(line: 10205, column: 8, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 10205, column: 8)
!11224 = !DILocation(line: 10205, column: 28, scope: !11223)
!11225 = !DILocation(line: 10205, column: 8, scope: !11002)
!11226 = !DILocation(line: 10211, column: 13, scope: !11002)
!11227 = !DILocation(line: 10212, column: 8, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 10212, column: 8)
!11229 = !DILocation(line: 10212, column: 19, scope: !11228)
!11230 = !DILocation(line: 10212, column: 15, scope: !11228)
!11231 = !DILocation(line: 10215, column: 31, scope: !11002)
!11232 = !DILocation(line: 10215, column: 13, scope: !11002)
!11233 = !DILocation(line: 10216, column: 8, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 10216, column: 8)
!11235 = !DILocation(line: 10216, column: 8, scope: !11002)
!11236 = !DILocation(line: 10220, column: 8, scope: !11006)
!11237 = !DILocation(line: 10220, column: 8, scope: !11002)
!11238 = !DILocation(line: 10224, column: 21, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11005, file: !3, line: 10224, column: 8)
!11240 = !DILocation(line: 10224, column: 13, scope: !11239)
!11241 = !DILocation(line: 0, scope: !11239)
!11242 = !DILocation(line: 0, scope: !11005)
!11243 = !DILocation(line: 10224, column: 8, scope: !11239)
!11244 = !DILocation(line: 10231, column: 9, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 10231, column: 9)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !3, line: 10226, column: 3)
!11247 = distinct !DILexicalBlock(scope: !11239, file: !3, line: 10224, column: 8)
!11248 = !DILocation(line: 10231, column: 27, scope: !11245)
!11249 = !DILocation(line: 10231, column: 9, scope: !11246)
!11250 = !DILocation(line: 10234, column: 5, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 10234, column: 5)
!11252 = !DILocation(line: 10234, column: 5, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 10234, column: 5)
!11254 = !DILocation(line: 10235, column: 5, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 10235, column: 5)
!11256 = !DILocation(line: 10235, column: 5, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11255, file: !3, line: 10235, column: 5)
!11258 = !DILocation(line: 10236, column: 5, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 10236, column: 5)
!11260 = !DILocation(line: 10236, column: 5, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 10236, column: 5)
!11262 = !DILocation(line: 10237, column: 9, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 10237, column: 9)
!11264 = !DILocation(line: 10237, column: 29, scope: !11263)
!11265 = !DILocation(line: 10237, column: 9, scope: !11246)
!11266 = !DILocation(line: 10238, column: 7, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 10238, column: 7)
!11268 = !DILocation(line: 10238, column: 7, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11267, file: !3, line: 10238, column: 7)
!11270 = !DILocation(line: 10225, column: 14, scope: !11247)
!11271 = !DILocation(line: 10224, column: 8, scope: !11247)
!11272 = distinct !{!11272, !11243, !11273}
!11273 = !DILocation(line: 10239, column: 3, scope: !11239)
!11274 = !DILocation(line: 10243, column: 33, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 10243, column: 13)
!11276 = !DILocation(line: 10244, column: 6, scope: !11275)
!11277 = !DILocation(line: 10244, column: 29, scope: !11275)
!11278 = !DILocation(line: 10245, column: 6, scope: !11275)
!11279 = !DILocation(line: 10245, column: 29, scope: !11275)
!11280 = !DILocation(line: 10246, column: 6, scope: !11275)
!11281 = !DILocation(line: 10246, column: 29, scope: !11275)
!11282 = !DILocation(line: 10247, column: 6, scope: !11275)
!11283 = !DILocation(line: 10247, column: 29, scope: !11275)
!11284 = !DILocation(line: 10243, column: 13, scope: !11006)
!11285 = !DILocation(line: 10253, column: 4, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 10253, column: 4)
!11287 = !DILocation(line: 10249, column: 8, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 10249, column: 8)
!11289 = distinct !DILexicalBlock(scope: !11275, file: !3, line: 10248, column: 6)
!11290 = !DILocation(line: 10249, column: 8, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 10249, column: 8)
!11292 = !DILocation(line: 10250, column: 8, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 10250, column: 8)
!11294 = !DILocation(line: 10250, column: 8, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 10250, column: 8)
!11296 = !DILocation(line: 10253, column: 4, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 10253, column: 4)
!11298 = !DILocation(line: 10254, column: 4, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 10254, column: 4)
!11300 = !DILocation(line: 10259, column: 11, scope: !11009)
!11301 = !DILocation(line: 10264, column: 10, scope: !11008)
!11302 = !DILocation(line: 0, scope: !11008)
!11303 = !DILocation(line: 10268, column: 8, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 10268, column: 8)
!11305 = !DILocation(line: 10268, column: 8, scope: !11008)
!11306 = !DILocation(line: 0, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !3, line: 10270, column: 8)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 10270, column: 8)
!11309 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 10269, column: 6)
!11310 = !DILocation(line: 0, scope: !11309)
!11311 = !DILocation(line: 10270, column: 8, scope: !11308)
!11312 = !DILocation(line: 0, scope: !11308)
!11313 = !DILocation(line: 10270, column: 22, scope: !11307)
!11314 = !DILocation(line: 10271, column: 3, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11307, file: !3, line: 10271, column: 3)
!11316 = !DILocation(line: 10271, column: 3, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 10271, column: 3)
!11318 = !DILocation(line: 10270, column: 33, scope: !11307)
!11319 = !DILocation(line: 10270, column: 8, scope: !11307)
!11320 = distinct !{!11320, !11311, !11321}
!11321 = !DILocation(line: 10271, column: 3, scope: !11308)
!11322 = !DILocation(line: 10272, column: 8, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 10272, column: 8)
!11324 = !DILocation(line: 10276, column: 16, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 10276, column: 16)
!11326 = !DILocation(line: 10276, column: 16, scope: !11009)
!11327 = !DILocation(line: 10277, column: 9, scope: !11325)
!11328 = !DILocation(line: 10277, column: 2, scope: !11325)
!11329 = !DILocation(line: 10282, column: 3, scope: !10957)
!11330 = !DILocation(line: 10285, column: 1, scope: !10957)
!11331 = distinct !DISubprogram(name: "find_var_from_fn", scope: !3, file: !3, line: 7946, type: !10962, scopeLine: 7947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11332)
!11332 = !{!11333, !11334, !11335, !11336}
!11333 = !DILocalVariable(name: "tp", arg: 1, scope: !11331, file: !3, line: 7946, type: !1964)
!11334 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !11331, file: !3, line: 7946, type: !10643)
!11335 = !DILocalVariable(name: "data", arg: 3, scope: !11331, file: !3, line: 7946, type: !1454)
!11336 = !DILocalVariable(name: "fn", scope: !11331, file: !3, line: 7948, type: !1457)
!11337 = !DILocation(line: 0, scope: !11331)
!11338 = !DILocation(line: 7948, column: 13, scope: !11331)
!11339 = !DILocation(line: 7950, column: 7, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 7950, column: 7)
!11341 = !DILocation(line: 7950, column: 7, scope: !11331)
!11342 = !DILocation(line: 7951, column: 20, scope: !11340)
!11343 = !DILocation(line: 7951, column: 5, scope: !11340)
!11344 = !DILocation(line: 7953, column: 12, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 7953, column: 12)
!11346 = !DILocation(line: 7954, column: 5, scope: !11345)
!11347 = !DILocation(line: 7954, column: 8, scope: !11345)
!11348 = !DILocation(line: 7953, column: 12, scope: !11340)
!11349 = !DILocation(line: 7955, column: 12, scope: !11345)
!11350 = !DILocation(line: 7955, column: 5, scope: !11345)
!11351 = !DILocation(line: 7958, column: 1, scope: !11331)
!11352 = distinct !DISubprogram(name: "get_containing_scope", scope: !3, file: !3, line: 8063, type: !5504, scopeLine: 8064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11353)
!11353 = !{!11354}
!11354 = !DILocalVariable(name: "t", arg: 1, scope: !11352, file: !3, line: 8063, type: !2774)
!11355 = !DILocation(line: 0, scope: !11352)
!11356 = !DILocation(line: 8065, column: 11, scope: !11352)
!11357 = !DILocation(line: 8065, column: 24, scope: !11352)
!11358 = !DILocation(line: 8065, column: 43, scope: !11352)
!11359 = !DILocation(line: 8065, column: 3, scope: !11352)
!11360 = distinct !DISubprogram(name: "decl_type_context", scope: !3, file: !3, line: 8108, type: !5504, scopeLine: 8109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11361)
!11361 = !{!11362, !11363}
!11362 = !DILocalVariable(name: "decl", arg: 1, scope: !11360, file: !3, line: 8108, type: !2774)
!11363 = !DILocalVariable(name: "context", scope: !11360, file: !3, line: 8110, type: !1457)
!11364 = !DILocation(line: 0, scope: !11360)
!11365 = !DILocation(line: 8110, column: 18, scope: !11360)
!11366 = !DILocation(line: 8112, column: 3, scope: !11360)
!11367 = !DILocation(line: 8110, column: 8, scope: !11360)
!11368 = !DILocation(line: 8113, column: 13, scope: !11360)
!11369 = !DILocation(line: 8113, column: 5, scope: !11360)
!11370 = !DILocation(line: 8122, column: 2, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 8114, column: 7)
!11372 = !DILocation(line: 8126, column: 12, scope: !11371)
!11373 = !DILocation(line: 8127, column: 2, scope: !11371)
!11374 = !DILocation(line: 8130, column: 12, scope: !11371)
!11375 = !DILocation(line: 8131, column: 2, scope: !11371)
!11376 = !DILocation(line: 8134, column: 2, scope: !11371)
!11377 = !DILocation(line: 8135, column: 7, scope: !11371)
!11378 = distinct !{!11378, !11366, !11379}
!11379 = !DILocation(line: 8135, column: 7, scope: !11360)
!11380 = !DILocation(line: 8138, column: 1, scope: !11360)
!11381 = distinct !DISubprogram(name: "get_callee_fndecl", scope: !3, file: !3, line: 8145, type: !5504, scopeLine: 8146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11382)
!11382 = !{!11383, !11384}
!11383 = !DILocalVariable(name: "call", arg: 1, scope: !11381, file: !3, line: 8145, type: !2774)
!11384 = !DILocalVariable(name: "addr", scope: !11381, file: !3, line: 8147, type: !1457)
!11385 = !DILocation(line: 0, scope: !11381)
!11386 = !DILocation(line: 8149, column: 15, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 8149, column: 7)
!11388 = !DILocation(line: 8149, column: 12, scope: !11387)
!11389 = !DILocation(line: 8149, column: 7, scope: !11381)
!11390 = !DILocation(line: 8150, column: 5, scope: !11387)
!11391 = !DILocation(line: 8154, column: 3, scope: !11381)
!11392 = !DILocation(line: 8158, column: 10, scope: !11381)
!11393 = !DILocation(line: 8160, column: 3, scope: !11381)
!11394 = !DILocation(line: 8163, column: 7, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 8163, column: 7)
!11396 = !DILocation(line: 8163, column: 21, scope: !11395)
!11397 = !DILocation(line: 8163, column: 41, scope: !11395)
!11398 = !DILocation(line: 8164, column: 7, scope: !11395)
!11399 = !DILocation(line: 8164, column: 10, scope: !11395)
!11400 = !DILocation(line: 8164, column: 31, scope: !11395)
!11401 = !DILocation(line: 8164, column: 36, scope: !11395)
!11402 = !DILocation(line: 8165, column: 7, scope: !11395)
!11403 = !DILocation(line: 8165, column: 10, scope: !11395)
!11404 = !DILocation(line: 8163, column: 7, scope: !11381)
!11405 = !DILocation(line: 0, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 8170, column: 7)
!11407 = !DILocation(line: 8170, column: 7, scope: !11406)
!11408 = !DILocation(line: 8166, column: 5, scope: !11395)
!11409 = !DILocation(line: 8170, column: 24, scope: !11406)
!11410 = !DILocation(line: 8171, column: 7, scope: !11406)
!11411 = !DILocation(line: 8171, column: 10, scope: !11406)
!11412 = !DILocation(line: 8171, column: 45, scope: !11406)
!11413 = !DILocation(line: 8170, column: 7, scope: !11381)
!11414 = !DILocation(line: 8172, column: 5, scope: !11406)
!11415 = !DILocation(line: 8176, column: 1, scope: !11381)
!11416 = distinct !DISubprogram(name: "dump_tree_statistics", scope: !3, file: !3, line: 8182, type: !3375, scopeLine: 8183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!11417 = !DILocation(line: 8189, column: 12, scope: !11416)
!11418 = !DILocation(line: 8189, column: 3, scope: !11416)
!11419 = !DILocation(line: 8207, column: 12, scope: !11416)
!11420 = !DILocation(line: 8207, column: 3, scope: !11416)
!11421 = !DILocation(line: 8209, column: 3, scope: !11416)
!11422 = !DILocation(line: 8210, column: 3, scope: !11416)
!11423 = !DILocation(line: 8211, column: 3, scope: !11416)
!11424 = !DILocation(line: 8212, column: 14, scope: !11416)
!11425 = !DILocation(line: 8212, column: 3, scope: !11416)
!11426 = !DILocation(line: 8213, column: 1, scope: !11416)
!11427 = distinct !DISubprogram(name: "print_type_hash_statistics", scope: !3, file: !3, line: 5987, type: !3375, scopeLine: 5988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!11428 = !DILocation(line: 5989, column: 12, scope: !11427)
!11429 = !DILocation(line: 5990, column: 23, scope: !11427)
!11430 = !DILocation(line: 5990, column: 12, scope: !11427)
!11431 = !DILocation(line: 5991, column: 27, scope: !11427)
!11432 = !DILocation(line: 5991, column: 12, scope: !11427)
!11433 = !DILocation(line: 5992, column: 22, scope: !11427)
!11434 = !DILocation(line: 5992, column: 5, scope: !11427)
!11435 = !DILocation(line: 5989, column: 3, scope: !11427)
!11436 = !DILocation(line: 5993, column: 1, scope: !11427)
!11437 = distinct !DISubprogram(name: "print_debug_expr_statistics", scope: !3, file: !3, line: 5680, type: !3375, scopeLine: 5681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!11438 = !DILocation(line: 5682, column: 12, scope: !11437)
!11439 = !DILocation(line: 5683, column: 23, scope: !11437)
!11440 = !DILocation(line: 5683, column: 12, scope: !11437)
!11441 = !DILocation(line: 5684, column: 27, scope: !11437)
!11442 = !DILocation(line: 5684, column: 12, scope: !11437)
!11443 = !DILocation(line: 5685, column: 22, scope: !11437)
!11444 = !DILocation(line: 5685, column: 5, scope: !11437)
!11445 = !DILocation(line: 5682, column: 3, scope: !11437)
!11446 = !DILocation(line: 5686, column: 1, scope: !11437)
!11447 = distinct !DISubprogram(name: "print_value_expr_statistics", scope: !3, file: !3, line: 5691, type: !3375, scopeLine: 5692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!11448 = !DILocation(line: 5693, column: 12, scope: !11447)
!11449 = !DILocation(line: 5694, column: 23, scope: !11447)
!11450 = !DILocation(line: 5694, column: 12, scope: !11447)
!11451 = !DILocation(line: 5695, column: 27, scope: !11447)
!11452 = !DILocation(line: 5695, column: 12, scope: !11447)
!11453 = !DILocation(line: 5696, column: 22, scope: !11447)
!11454 = !DILocation(line: 5696, column: 5, scope: !11447)
!11455 = !DILocation(line: 5693, column: 3, scope: !11447)
!11456 = !DILocation(line: 5697, column: 1, scope: !11447)
!11457 = distinct !DISubprogram(name: "crc32_string", scope: !3, file: !3, line: 8220, type: !11458, scopeLine: 8221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11460)
!11458 = !DISubroutineType(types: !11459)
!11459 = !{!7, !7, !1455}
!11460 = !{!11461, !11462, !11463, !11465, !11466}
!11461 = !DILocalVariable(name: "chksum", arg: 1, scope: !11457, file: !3, line: 8220, type: !7)
!11462 = !DILocalVariable(name: "string", arg: 2, scope: !11457, file: !3, line: 8220, type: !1455)
!11463 = !DILocalVariable(name: "value", scope: !11464, file: !3, line: 8224, type: !7)
!11464 = distinct !DILexicalBlock(scope: !11457, file: !3, line: 8223, column: 5)
!11465 = !DILocalVariable(name: "ix", scope: !11464, file: !3, line: 8225, type: !7)
!11466 = !DILocalVariable(name: "feedback", scope: !11467, file: !3, line: 8229, type: !7)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 8228, column: 4)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 8227, column: 7)
!11469 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 8227, column: 7)
!11470 = !DILocation(line: 0, scope: !11457)
!11471 = !DILocation(line: 8222, column: 3, scope: !11457)
!11472 = !DILocation(line: 8224, column: 24, scope: !11464)
!11473 = !DILocation(line: 8224, column: 32, scope: !11464)
!11474 = !DILocation(line: 0, scope: !11464)
!11475 = !DILocation(line: 8227, column: 12, scope: !11469)
!11476 = !DILocation(line: 0, scope: !11469)
!11477 = !DILocation(line: 8227, column: 7, scope: !11469)
!11478 = !DILocation(line: 8227, column: 22, scope: !11468)
!11479 = !DILocation(line: 8231, column: 24, scope: !11467)
!11480 = !DILocation(line: 8231, column: 17, scope: !11467)
!11481 = !DILocation(line: 0, scope: !11467)
!11482 = !DILocation(line: 8232, column: 12, scope: !11467)
!11483 = !DILocation(line: 8233, column: 12, scope: !11467)
!11484 = !DILocation(line: 8227, column: 32, scope: !11468)
!11485 = !DILocation(line: 8227, column: 7, scope: !11468)
!11486 = distinct !{!11486, !11477, !11487}
!11487 = !DILocation(line: 8234, column: 4, scope: !11469)
!11488 = !DILocation(line: 8236, column: 17, scope: !11457)
!11489 = !DILocation(line: 8235, column: 5, scope: !11464)
!11490 = distinct !{!11490, !11471, !11491}
!11491 = !DILocation(line: 8236, column: 19, scope: !11457)
!11492 = !DILocation(line: 8237, column: 3, scope: !11457)
!11493 = distinct !DISubprogram(name: "clean_symbol_name", scope: !3, file: !3, line: 8244, type: !11494, scopeLine: 8245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11496)
!11494 = !DISubroutineType(types: !11495)
!11495 = !{null, !1452}
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "p", arg: 1, scope: !11493, file: !3, line: 8244, type: !1452)
!11498 = !DILocation(line: 0, scope: !11493)
!11499 = !DILocation(line: 8246, column: 3, scope: !11493)
!11500 = !DILocation(line: 8246, column: 10, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 8246, column: 3)
!11502 = distinct !DILexicalBlock(scope: !11493, file: !3, line: 8246, column: 3)
!11503 = !DILocation(line: 8246, column: 3, scope: !11502)
!11504 = !DILocation(line: 8247, column: 12, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 8247, column: 9)
!11506 = !DILocation(line: 8252, column: 6, scope: !11505)
!11507 = !DILocation(line: 8252, column: 12, scope: !11505)
!11508 = !DILocation(line: 8247, column: 9, scope: !11501)
!11509 = !DILocation(line: 8255, column: 10, scope: !11505)
!11510 = !DILocation(line: 8255, column: 7, scope: !11505)
!11511 = !DILocation(line: 8246, column: 15, scope: !11501)
!11512 = !DILocation(line: 8246, column: 3, scope: !11501)
!11513 = distinct !{!11513, !11503, !11514}
!11514 = !DILocation(line: 8255, column: 12, scope: !11502)
!11515 = !DILocation(line: 8256, column: 1, scope: !11493)
!11516 = distinct !DISubprogram(name: "get_file_function_name", scope: !3, file: !3, line: 8269, type: !11517, scopeLine: 8270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11519)
!11517 = !DISubroutineType(types: !11518)
!11518 = !{!1457, !1455}
!11519 = !{!11520, !11521, !11522, !11523, !11524, !11528, !11530, !11531}
!11520 = !DILocalVariable(name: "type", arg: 1, scope: !11516, file: !3, line: 8269, type: !1455)
!11521 = !DILocalVariable(name: "buf", scope: !11516, file: !3, line: 8271, type: !1452)
!11522 = !DILocalVariable(name: "p", scope: !11516, file: !3, line: 8272, type: !1455)
!11523 = !DILocalVariable(name: "q", scope: !11516, file: !3, line: 8273, type: !1452)
!11524 = !DILocalVariable(name: "file", scope: !11525, file: !3, line: 8283, type: !1455)
!11525 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 8282, column: 5)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 8281, column: 12)
!11527 = distinct !DILexicalBlock(scope: !11516, file: !3, line: 8276, column: 7)
!11528 = !DILocalVariable(name: "len", scope: !11529, file: !3, line: 8300, type: !7)
!11529 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 8296, column: 5)
!11530 = !DILocalVariable(name: "name", scope: !11529, file: !3, line: 8301, type: !1455)
!11531 = !DILocalVariable(name: "file", scope: !11529, file: !3, line: 8302, type: !1455)
!11532 = !DILocation(line: 0, scope: !11516)
!11533 = !DILocation(line: 8276, column: 7, scope: !11527)
!11534 = !DILocation(line: 8276, column: 7, scope: !11516)
!11535 = !DILocation(line: 8277, column: 13, scope: !11527)
!11536 = !DILocation(line: 8277, column: 5, scope: !11527)
!11537 = !DILocation(line: 8281, column: 13, scope: !11526)
!11538 = !DILocation(line: 8281, column: 21, scope: !11526)
!11539 = !DILocation(line: 8281, column: 28, scope: !11526)
!11540 = !DILocation(line: 8281, column: 39, scope: !11526)
!11541 = !DILocation(line: 8281, column: 47, scope: !11526)
!11542 = !DILocation(line: 8281, column: 58, scope: !11526)
!11543 = !DILocation(line: 8281, column: 50, scope: !11526)
!11544 = !DILocation(line: 8281, column: 12, scope: !11527)
!11545 = !DILocation(line: 8283, column: 26, scope: !11525)
!11546 = !DILocation(line: 0, scope: !11525)
!11547 = !DILocation(line: 8284, column: 13, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 8284, column: 11)
!11549 = !DILocation(line: 8284, column: 11, scope: !11525)
!11550 = !DILocation(line: 8285, column: 9, scope: !11548)
!11551 = !DILocation(line: 8285, column: 2, scope: !11548)
!11552 = !DILocation(line: 8288, column: 11, scope: !11525)
!11553 = !DILocation(line: 8289, column: 11, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 8289, column: 11)
!11555 = !DILocation(line: 8289, column: 11, scope: !11525)
!11556 = !DILocation(line: 8293, column: 15, scope: !11525)
!11557 = !DILocation(line: 8294, column: 5, scope: !11525)
!11558 = !DILocation(line: 8301, column: 26, scope: !11529)
!11559 = !DILocation(line: 0, scope: !11529)
!11560 = !DILocation(line: 8302, column: 26, scope: !11529)
!11561 = !DILocation(line: 8304, column: 13, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 8304, column: 11)
!11563 = !DILocation(line: 8304, column: 11, scope: !11529)
!11564 = !DILocation(line: 8306, column: 13, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 8306, column: 11)
!11566 = !DILocation(line: 8306, column: 11, scope: !11529)
!11567 = !DILocation(line: 8307, column: 9, scope: !11565)
!11568 = !DILocation(line: 8307, column: 2, scope: !11565)
!11569 = !DILocation(line: 8309, column: 13, scope: !11529)
!11570 = !DILocation(line: 8310, column: 20, scope: !11529)
!11571 = !DILocation(line: 8311, column: 28, scope: !11529)
!11572 = !DILocation(line: 8311, column: 24, scope: !11529)
!11573 = !DILocation(line: 8311, column: 7, scope: !11529)
!11574 = !DILocation(line: 8313, column: 18, scope: !11529)
!11575 = !DILocation(line: 8313, column: 39, scope: !11529)
!11576 = !DILocation(line: 8314, column: 26, scope: !11529)
!11577 = !DILocation(line: 8314, column: 9, scope: !11529)
!11578 = !DILocation(line: 8313, column: 7, scope: !11529)
!11579 = !DILocation(line: 0, scope: !11527)
!11580 = !DILocation(line: 8319, column: 3, scope: !11516)
!11581 = !DILocation(line: 8320, column: 18, scope: !11516)
!11582 = !DILocation(line: 8327, column: 3, scope: !11516)
!11583 = !DILocation(line: 8329, column: 10, scope: !11516)
!11584 = !DILocation(line: 8329, column: 3, scope: !11516)
!11585 = distinct !DISubprogram(name: "build_common_tree_nodes", scope: !3, file: !3, line: 8751, type: !11586, scopeLine: 8752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11588)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{null, !1449, !1449}
!11588 = !{!11589, !11590}
!11589 = !DILocalVariable(name: "signed_char", arg: 1, scope: !11585, file: !3, line: 8751, type: !1449)
!11590 = !DILocalVariable(name: "signed_sizetype", arg: 2, scope: !11585, file: !3, line: 8751, type: !1449)
!11591 = !DILocation(line: 0, scope: !11585)
!11592 = !DILocation(line: 8753, column: 21, scope: !11585)
!11593 = !DILocation(line: 8753, column: 19, scope: !11585)
!11594 = !DILocation(line: 8754, column: 33, scope: !11585)
!11595 = !DILocation(line: 8754, column: 3, scope: !11585)
!11596 = !DILocation(line: 8754, column: 31, scope: !11585)
!11597 = !DILocation(line: 8756, column: 3, scope: !11585)
!11598 = !DILocation(line: 8759, column: 27, scope: !11585)
!11599 = !DILocation(line: 8759, column: 25, scope: !11585)
!11600 = !DILocation(line: 8760, column: 3, scope: !11585)
!11601 = !DILocation(line: 8760, column: 44, scope: !11585)
!11602 = !DILocation(line: 8761, column: 29, scope: !11585)
!11603 = !DILocation(line: 8761, column: 27, scope: !11585)
!11604 = !DILocation(line: 8762, column: 3, scope: !11585)
!11605 = !DILocation(line: 8762, column: 46, scope: !11585)
!11606 = !DILocation(line: 8767, column: 8, scope: !11585)
!11607 = !DILocation(line: 8768, column: 10, scope: !11585)
!11608 = !DILocation(line: 8769, column: 10, scope: !11585)
!11609 = !DILocation(line: 8767, column: 5, scope: !11585)
!11610 = !DILocation(line: 8770, column: 3, scope: !11585)
!11611 = !DILocation(line: 8770, column: 37, scope: !11585)
!11612 = !DILocation(line: 8772, column: 29, scope: !11585)
!11613 = !DILocation(line: 8772, column: 27, scope: !11585)
!11614 = !DILocation(line: 8773, column: 30, scope: !11585)
!11615 = !DILocation(line: 8773, column: 28, scope: !11585)
!11616 = !DILocation(line: 8774, column: 23, scope: !11585)
!11617 = !DILocation(line: 8774, column: 21, scope: !11585)
!11618 = !DILocation(line: 8775, column: 24, scope: !11585)
!11619 = !DILocation(line: 8775, column: 22, scope: !11585)
!11620 = !DILocation(line: 8776, column: 28, scope: !11585)
!11621 = !DILocation(line: 8776, column: 26, scope: !11585)
!11622 = !DILocation(line: 8777, column: 29, scope: !11585)
!11623 = !DILocation(line: 8777, column: 27, scope: !11585)
!11624 = !DILocation(line: 8778, column: 33, scope: !11585)
!11625 = !DILocation(line: 8778, column: 31, scope: !11585)
!11626 = !DILocation(line: 8779, column: 34, scope: !11585)
!11627 = !DILocation(line: 8779, column: 32, scope: !11585)
!11628 = !DILocation(line: 8785, column: 23, scope: !11585)
!11629 = !DILocation(line: 8785, column: 21, scope: !11585)
!11630 = !DILocation(line: 8786, column: 3, scope: !11585)
!11631 = !DILocation(line: 8787, column: 55, scope: !11585)
!11632 = !DILocation(line: 8787, column: 40, scope: !11585)
!11633 = !DILocation(line: 8787, column: 3, scope: !11585)
!11634 = !DILocation(line: 8787, column: 38, scope: !11585)
!11635 = !DILocation(line: 8788, column: 3, scope: !11585)
!11636 = !DILocation(line: 8788, column: 38, scope: !11585)
!11637 = !DILocation(line: 8792, column: 41, scope: !11585)
!11638 = !DILocation(line: 8792, column: 21, scope: !11585)
!11639 = !DILocation(line: 8792, column: 19, scope: !11585)
!11640 = !DILocation(line: 8793, column: 41, scope: !11585)
!11641 = !DILocation(line: 8793, column: 21, scope: !11585)
!11642 = !DILocation(line: 8793, column: 19, scope: !11585)
!11643 = !DILocation(line: 8794, column: 41, scope: !11585)
!11644 = !DILocation(line: 8794, column: 21, scope: !11585)
!11645 = !DILocation(line: 8794, column: 19, scope: !11585)
!11646 = !DILocation(line: 8795, column: 41, scope: !11585)
!11647 = !DILocation(line: 8795, column: 21, scope: !11585)
!11648 = !DILocation(line: 8795, column: 19, scope: !11585)
!11649 = !DILocation(line: 8796, column: 41, scope: !11585)
!11650 = !DILocation(line: 8796, column: 21, scope: !11585)
!11651 = !DILocation(line: 8796, column: 19, scope: !11585)
!11652 = !DILocation(line: 8798, column: 50, scope: !11585)
!11653 = !DILocation(line: 8798, column: 30, scope: !11585)
!11654 = !DILocation(line: 8798, column: 28, scope: !11585)
!11655 = !DILocation(line: 8799, column: 50, scope: !11585)
!11656 = !DILocation(line: 8799, column: 30, scope: !11585)
!11657 = !DILocation(line: 8799, column: 28, scope: !11585)
!11658 = !DILocation(line: 8800, column: 50, scope: !11585)
!11659 = !DILocation(line: 8800, column: 30, scope: !11585)
!11660 = !DILocation(line: 8800, column: 28, scope: !11585)
!11661 = !DILocation(line: 8801, column: 50, scope: !11585)
!11662 = !DILocation(line: 8801, column: 30, scope: !11585)
!11663 = !DILocation(line: 8801, column: 28, scope: !11585)
!11664 = !DILocation(line: 8802, column: 50, scope: !11585)
!11665 = !DILocation(line: 8802, column: 30, scope: !11585)
!11666 = !DILocation(line: 8802, column: 28, scope: !11585)
!11667 = !DILocation(line: 8804, column: 24, scope: !11585)
!11668 = !DILocation(line: 8804, column: 22, scope: !11585)
!11669 = !DILocation(line: 8805, column: 27, scope: !11585)
!11670 = !DILocation(line: 8805, column: 25, scope: !11585)
!11671 = !DILocation(line: 8806, column: 25, scope: !11585)
!11672 = !DILocation(line: 8806, column: 23, scope: !11585)
!11673 = !DILocation(line: 8807, column: 1, scope: !11585)
!11674 = distinct !DISubprogram(name: "make_or_reuse_type", scope: !3, file: !3, line: 8652, type: !11675, scopeLine: 8653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11677)
!11675 = !DISubroutineType(types: !11676)
!11676 = !{!1457, !7, !1450}
!11677 = !{!11678, !11679}
!11678 = !DILocalVariable(name: "size", arg: 1, scope: !11674, file: !3, line: 8652, type: !7)
!11679 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !11674, file: !3, line: 8652, type: !1450)
!11680 = !DILocation(line: 0, scope: !11674)
!11681 = !DILocation(line: 8654, column: 7, scope: !11674)
!11682 = !DILocation(line: 8655, column: 12, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 8654, column: 7)
!11684 = !DILocation(line: 8657, column: 12, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 8656, column: 7)
!11686 = !DILocation(line: 8659, column: 12, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 8658, column: 7)
!11688 = !DILocation(line: 8663, column: 13, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 8662, column: 7)
!11690 = !DILocation(line: 8666, column: 7, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 8666, column: 7)
!11692 = !DILocation(line: 8666, column: 7, scope: !11674)
!11693 = !DILocation(line: 8667, column: 12, scope: !11691)
!11694 = !DILocation(line: 8667, column: 5, scope: !11691)
!11695 = !DILocation(line: 8669, column: 12, scope: !11691)
!11696 = !DILocation(line: 8669, column: 5, scope: !11691)
!11697 = !DILocation(line: 8670, column: 1, scope: !11674)
!11698 = distinct !DISubprogram(name: "build_common_tree_nodes_2", scope: !3, file: !3, line: 8813, type: !11699, scopeLine: 8814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11701)
!11699 = !DISubroutineType(types: !11700)
!11700 = !{null, !1450}
!11701 = !{!11702, !11703}
!11702 = !DILocalVariable(name: "short_double", arg: 1, scope: !11698, file: !3, line: 8813, type: !1450)
!11703 = !DILocalVariable(name: "t", scope: !11704, file: !3, line: 8947, type: !1457)
!11704 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 8946, column: 3)
!11705 = !DILocation(line: 0, scope: !11698)
!11706 = !DILocation(line: 8816, column: 23, scope: !11698)
!11707 = !DILocation(line: 8816, column: 21, scope: !11698)
!11708 = !DILocation(line: 8817, column: 22, scope: !11698)
!11709 = !DILocation(line: 8817, column: 20, scope: !11698)
!11710 = !DILocation(line: 8818, column: 28, scope: !11698)
!11711 = !DILocation(line: 8818, column: 26, scope: !11698)
!11712 = !DILocation(line: 8820, column: 20, scope: !11698)
!11713 = !DILocation(line: 8820, column: 18, scope: !11698)
!11714 = !DILocation(line: 8821, column: 19, scope: !11698)
!11715 = !DILocation(line: 8821, column: 17, scope: !11698)
!11716 = !DILocation(line: 8822, column: 23, scope: !11698)
!11717 = !DILocation(line: 8822, column: 21, scope: !11698)
!11718 = !DILocation(line: 8823, column: 22, scope: !11698)
!11719 = !DILocation(line: 8823, column: 20, scope: !11698)
!11720 = !DILocation(line: 8824, column: 23, scope: !11698)
!11721 = !DILocation(line: 8824, column: 21, scope: !11698)
!11722 = !DILocation(line: 8826, column: 24, scope: !11698)
!11723 = !DILocation(line: 8826, column: 22, scope: !11698)
!11724 = !DILocation(line: 8827, column: 23, scope: !11698)
!11725 = !DILocation(line: 8827, column: 21, scope: !11698)
!11726 = !DILocation(line: 8829, column: 20, scope: !11698)
!11727 = !DILocation(line: 8829, column: 18, scope: !11698)
!11728 = !DILocation(line: 8830, column: 3, scope: !11698)
!11729 = !DILocation(line: 8834, column: 3, scope: !11698)
!11730 = !DILocation(line: 8834, column: 31, scope: !11698)
!11731 = !DILocation(line: 8835, column: 3, scope: !11698)
!11732 = !DILocation(line: 8835, column: 36, scope: !11698)
!11733 = !DILocation(line: 8837, column: 58, scope: !11698)
!11734 = !DILocation(line: 8837, column: 38, scope: !11698)
!11735 = !DILocation(line: 8837, column: 23, scope: !11698)
!11736 = !DILocation(line: 8837, column: 21, scope: !11698)
!11737 = !DILocation(line: 8838, column: 16, scope: !11698)
!11738 = !DILocation(line: 8838, column: 3, scope: !11698)
!11739 = !DILocation(line: 8840, column: 39, scope: !11698)
!11740 = !DILocation(line: 8840, column: 19, scope: !11698)
!11741 = !DILocation(line: 8840, column: 17, scope: !11698)
!11742 = !DILocation(line: 8842, column: 27, scope: !11698)
!11743 = !DILocation(line: 8842, column: 7, scope: !11698)
!11744 = !DILocation(line: 8842, column: 5, scope: !11698)
!11745 = !DILocation(line: 8843, column: 23, scope: !11698)
!11746 = !DILocation(line: 8843, column: 21, scope: !11698)
!11747 = !DILocation(line: 8845, column: 21, scope: !11698)
!11748 = !DILocation(line: 8845, column: 19, scope: !11698)
!11749 = !DILocation(line: 8846, column: 3, scope: !11698)
!11750 = !DILocation(line: 8846, column: 36, scope: !11698)
!11751 = !DILocation(line: 8847, column: 16, scope: !11698)
!11752 = !DILocation(line: 8847, column: 3, scope: !11698)
!11753 = !DILocation(line: 8849, column: 22, scope: !11698)
!11754 = !DILocation(line: 8849, column: 20, scope: !11698)
!11755 = !DILocation(line: 8850, column: 7, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 8850, column: 7)
!11757 = !DILocation(line: 0, scope: !11756)
!11758 = !DILocation(line: 8850, column: 7, scope: !11698)
!11759 = !DILocation(line: 8851, column: 39, scope: !11756)
!11760 = !DILocation(line: 8851, column: 5, scope: !11756)
!11761 = !DILocation(line: 8853, column: 39, scope: !11756)
!11762 = !DILocation(line: 8854, column: 16, scope: !11698)
!11763 = !DILocation(line: 8854, column: 3, scope: !11698)
!11764 = !DILocation(line: 8856, column: 27, scope: !11698)
!11765 = !DILocation(line: 8856, column: 25, scope: !11698)
!11766 = !DILocation(line: 8857, column: 3, scope: !11698)
!11767 = !DILocation(line: 8857, column: 42, scope: !11698)
!11768 = !DILocation(line: 8858, column: 16, scope: !11698)
!11769 = !DILocation(line: 8858, column: 3, scope: !11698)
!11770 = !DILocation(line: 8860, column: 45, scope: !11698)
!11771 = !DILocation(line: 8860, column: 25, scope: !11698)
!11772 = !DILocation(line: 8860, column: 23, scope: !11698)
!11773 = !DILocation(line: 8861, column: 46, scope: !11698)
!11774 = !DILocation(line: 8861, column: 26, scope: !11698)
!11775 = !DILocation(line: 8861, column: 24, scope: !11698)
!11776 = !DILocation(line: 8862, column: 51, scope: !11698)
!11777 = !DILocation(line: 8862, column: 31, scope: !11698)
!11778 = !DILocation(line: 8862, column: 29, scope: !11698)
!11779 = !DILocation(line: 8863, column: 47, scope: !11698)
!11780 = !DILocation(line: 8863, column: 27, scope: !11698)
!11781 = !DILocation(line: 8863, column: 25, scope: !11698)
!11782 = !DILocation(line: 8866, column: 22, scope: !11698)
!11783 = !DILocation(line: 8866, column: 20, scope: !11698)
!11784 = !DILocation(line: 8867, column: 22, scope: !11698)
!11785 = !DILocation(line: 8867, column: 20, scope: !11698)
!11786 = !DILocation(line: 8870, column: 24, scope: !11698)
!11787 = !DILocation(line: 8870, column: 22, scope: !11698)
!11788 = !DILocation(line: 8871, column: 3, scope: !11698)
!11789 = !DILocation(line: 8871, column: 39, scope: !11698)
!11790 = !DILocation(line: 8872, column: 16, scope: !11698)
!11791 = !DILocation(line: 8872, column: 3, scope: !11698)
!11792 = !DILocation(line: 8873, column: 3, scope: !11698)
!11793 = !DILocation(line: 8874, column: 48, scope: !11698)
!11794 = !DILocation(line: 8874, column: 28, scope: !11698)
!11795 = !DILocation(line: 8874, column: 26, scope: !11698)
!11796 = !DILocation(line: 8876, column: 24, scope: !11698)
!11797 = !DILocation(line: 8876, column: 22, scope: !11698)
!11798 = !DILocation(line: 8877, column: 3, scope: !11698)
!11799 = !DILocation(line: 8877, column: 39, scope: !11698)
!11800 = !DILocation(line: 8878, column: 16, scope: !11698)
!11801 = !DILocation(line: 8878, column: 3, scope: !11698)
!11802 = !DILocation(line: 8879, column: 3, scope: !11698)
!11803 = !DILocation(line: 8880, column: 48, scope: !11698)
!11804 = !DILocation(line: 8880, column: 28, scope: !11698)
!11805 = !DILocation(line: 8880, column: 26, scope: !11698)
!11806 = !DILocation(line: 8882, column: 25, scope: !11698)
!11807 = !DILocation(line: 8882, column: 23, scope: !11698)
!11808 = !DILocation(line: 8883, column: 3, scope: !11698)
!11809 = !DILocation(line: 8883, column: 40, scope: !11698)
!11810 = !DILocation(line: 8884, column: 16, scope: !11698)
!11811 = !DILocation(line: 8884, column: 3, scope: !11698)
!11812 = !DILocation(line: 8885, column: 3, scope: !11698)
!11813 = !DILocation(line: 8886, column: 49, scope: !11698)
!11814 = !DILocation(line: 8886, column: 29, scope: !11698)
!11815 = !DILocation(line: 8886, column: 27, scope: !11698)
!11816 = !DILocation(line: 8888, column: 51, scope: !11698)
!11817 = !DILocation(line: 8888, column: 31, scope: !11698)
!11818 = !DILocation(line: 8888, column: 29, scope: !11698)
!11819 = !DILocation(line: 8889, column: 49, scope: !11698)
!11820 = !DILocation(line: 8889, column: 29, scope: !11698)
!11821 = !DILocation(line: 8889, column: 27, scope: !11698)
!11822 = !DILocation(line: 8890, column: 50, scope: !11698)
!11823 = !DILocation(line: 8890, column: 30, scope: !11698)
!11824 = !DILocation(line: 8890, column: 28, scope: !11698)
!11825 = !DILocation(line: 8891, column: 55, scope: !11698)
!11826 = !DILocation(line: 8891, column: 35, scope: !11698)
!11827 = !DILocation(line: 8891, column: 33, scope: !11698)
!11828 = !DILocation(line: 8934, column: 3, scope: !11698)
!11829 = !DILocation(line: 8935, column: 3, scope: !11698)
!11830 = !DILocation(line: 8936, column: 3, scope: !11698)
!11831 = !DILocation(line: 8937, column: 3, scope: !11698)
!11832 = !DILocation(line: 8938, column: 3, scope: !11698)
!11833 = !DILocation(line: 8939, column: 3, scope: !11698)
!11834 = !DILocation(line: 8940, column: 3, scope: !11698)
!11835 = !DILocation(line: 8941, column: 3, scope: !11698)
!11836 = !DILocation(line: 8942, column: 3, scope: !11698)
!11837 = !DILocation(line: 8943, column: 3, scope: !11698)
!11838 = !DILocation(line: 8944, column: 3, scope: !11698)
!11839 = !DILocation(line: 8947, column: 22, scope: !11704)
!11840 = !DILocation(line: 8947, column: 14, scope: !11704)
!11841 = !DILocation(line: 0, scope: !11704)
!11842 = !DILocation(line: 8954, column: 9, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 8954, column: 9)
!11844 = !DILocation(line: 8954, column: 23, scope: !11843)
!11845 = !DILocation(line: 8954, column: 9, scope: !11704)
!11846 = !DILocation(line: 8955, column: 11, scope: !11843)
!11847 = !DILocation(line: 8955, column: 7, scope: !11843)
!11848 = !DILocation(line: 8957, column: 23, scope: !11704)
!11849 = !DILocation(line: 8959, column: 1, scope: !11698)
!11850 = distinct !DISubprogram(name: "make_or_reuse_fract_type", scope: !3, file: !3, line: 8675, type: !11851, scopeLine: 8676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11853)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{!1457, !7, !1450, !1450}
!11853 = !{!11854, !11855, !11856}
!11854 = !DILocalVariable(name: "size", arg: 1, scope: !11850, file: !3, line: 8675, type: !7)
!11855 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !11850, file: !3, line: 8675, type: !1450)
!11856 = !DILocalVariable(name: "satp", arg: 3, scope: !11850, file: !3, line: 8675, type: !1450)
!11857 = !DILocation(line: 0, scope: !11850)
!11858 = !DILocation(line: 8677, column: 7, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11850, file: !3, line: 8677, column: 7)
!11860 = !DILocation(line: 0, scope: !11859)
!11861 = !DILocation(line: 8677, column: 7, scope: !11850)
!11862 = !DILocation(line: 8679, column: 11, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 8678, column: 5)
!11864 = !DILocation(line: 8680, column: 9, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 8679, column: 11)
!11866 = !DILocation(line: 8682, column: 11, scope: !11863)
!11867 = !DILocation(line: 8683, column: 9, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 8682, column: 11)
!11869 = !DILocation(line: 8685, column: 9, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 8684, column: 11)
!11871 = !DILocation(line: 8688, column: 9, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 8687, column: 11)
!11873 = !DILocation(line: 8693, column: 11, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 8692, column: 5)
!11875 = !DILocation(line: 8694, column: 9, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11874, file: !3, line: 8693, column: 11)
!11877 = !DILocation(line: 8696, column: 11, scope: !11874)
!11878 = !DILocation(line: 8697, column: 9, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11874, file: !3, line: 8696, column: 11)
!11880 = !DILocation(line: 8699, column: 9, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11874, file: !3, line: 8698, column: 11)
!11882 = !DILocation(line: 8702, column: 9, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11874, file: !3, line: 8701, column: 11)
!11884 = !DILocation(line: 8706, column: 10, scope: !11850)
!11885 = !DILocation(line: 8706, column: 3, scope: !11850)
!11886 = !DILocation(line: 8707, column: 1, scope: !11850)
!11887 = distinct !DISubprogram(name: "make_or_reuse_accum_type", scope: !3, file: !3, line: 8712, type: !11851, scopeLine: 8713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11888)
!11888 = !{!11889, !11890, !11891}
!11889 = !DILocalVariable(name: "size", arg: 1, scope: !11887, file: !3, line: 8712, type: !7)
!11890 = !DILocalVariable(name: "unsignedp", arg: 2, scope: !11887, file: !3, line: 8712, type: !1450)
!11891 = !DILocalVariable(name: "satp", arg: 3, scope: !11887, file: !3, line: 8712, type: !1450)
!11892 = !DILocation(line: 0, scope: !11887)
!11893 = !DILocation(line: 8714, column: 7, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11887, file: !3, line: 8714, column: 7)
!11895 = !DILocation(line: 0, scope: !11894)
!11896 = !DILocation(line: 8714, column: 7, scope: !11887)
!11897 = !DILocation(line: 8716, column: 11, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11894, file: !3, line: 8715, column: 5)
!11899 = !DILocation(line: 8717, column: 9, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 8716, column: 11)
!11901 = !DILocation(line: 8719, column: 11, scope: !11898)
!11902 = !DILocation(line: 8720, column: 9, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 8719, column: 11)
!11904 = !DILocation(line: 8722, column: 9, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 8721, column: 11)
!11906 = !DILocation(line: 8725, column: 9, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 8724, column: 11)
!11908 = !DILocation(line: 8730, column: 11, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11894, file: !3, line: 8729, column: 5)
!11910 = !DILocation(line: 8731, column: 9, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 8730, column: 11)
!11912 = !DILocation(line: 8733, column: 11, scope: !11909)
!11913 = !DILocation(line: 8734, column: 9, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 8733, column: 11)
!11915 = !DILocation(line: 8736, column: 9, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 8735, column: 11)
!11917 = !DILocation(line: 8739, column: 9, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 8738, column: 11)
!11919 = !DILocation(line: 8743, column: 10, scope: !11887)
!11920 = !DILocation(line: 8743, column: 3, scope: !11887)
!11921 = !DILocation(line: 8744, column: 1, scope: !11887)
!11922 = distinct !DISubprogram(name: "build_common_builtin_nodes", scope: !3, file: !3, line: 8993, type: !3375, scopeLine: 8994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11923)
!11923 = !{!11924, !11925, !11926, !11927, !11929, !11933, !11934, !11935, !11936, !11937, !11938}
!11924 = !DILocalVariable(name: "tmp", scope: !11922, file: !3, line: 8995, type: !1457)
!11925 = !DILocalVariable(name: "tmp2", scope: !11922, file: !3, line: 8995, type: !1457)
!11926 = !DILocalVariable(name: "ftype", scope: !11922, file: !3, line: 8995, type: !1457)
!11927 = !DILocalVariable(name: "mode", scope: !11928, file: !3, line: 9147, type: !1450)
!11928 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 9146, column: 3)
!11929 = !DILocalVariable(name: "mode_name_buf", scope: !11930, file: !3, line: 9151, type: !2271)
!11930 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 9150, column: 7)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 9149, column: 5)
!11932 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 9149, column: 5)
!11933 = !DILocalVariable(name: "q", scope: !11930, file: !3, line: 9151, type: !1452)
!11934 = !DILocalVariable(name: "p", scope: !11930, file: !3, line: 9152, type: !1455)
!11935 = !DILocalVariable(name: "mcode", scope: !11930, file: !3, line: 9153, type: !639)
!11936 = !DILocalVariable(name: "dcode", scope: !11930, file: !3, line: 9153, type: !639)
!11937 = !DILocalVariable(name: "type", scope: !11930, file: !3, line: 9154, type: !1457)
!11938 = !DILocalVariable(name: "inner_type", scope: !11930, file: !3, line: 9154, type: !1457)
!11939 = !DILocation(line: 8997, column: 7, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 8997, column: 7)
!11941 = !DILocation(line: 8997, column: 39, scope: !11940)
!11942 = !DILocation(line: 8998, column: 10, scope: !11940)
!11943 = !DILocation(line: 8998, column: 43, scope: !11940)
!11944 = !DILocation(line: 8998, column: 7, scope: !11940)
!11945 = !DILocation(line: 9000, column: 13, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 8999, column: 5)
!11947 = !DILocation(line: 0, scope: !11922)
!11948 = !DILocation(line: 9001, column: 13, scope: !11946)
!11949 = !DILocation(line: 9002, column: 13, scope: !11946)
!11950 = !DILocation(line: 9003, column: 36, scope: !11946)
!11951 = !DILocation(line: 9003, column: 15, scope: !11946)
!11952 = !DILocation(line: 9005, column: 11, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11946, file: !3, line: 9005, column: 11)
!11954 = !DILocation(line: 9005, column: 43, scope: !11953)
!11955 = !DILocation(line: 9005, column: 11, scope: !11946)
!11956 = !DILocation(line: 9006, column: 2, scope: !11953)
!11957 = !DILocation(line: 9008, column: 11, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11946, file: !3, line: 9008, column: 11)
!11959 = !DILocation(line: 9008, column: 44, scope: !11958)
!11960 = !DILocation(line: 9008, column: 11, scope: !11946)
!11961 = !DILocation(line: 9009, column: 2, scope: !11958)
!11962 = !DILocation(line: 9013, column: 7, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 9013, column: 7)
!11964 = !DILocation(line: 9013, column: 39, scope: !11963)
!11965 = !DILocation(line: 9013, column: 7, scope: !11922)
!11966 = !DILocation(line: 9015, column: 13, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 9014, column: 5)
!11968 = !DILocation(line: 9016, column: 13, scope: !11967)
!11969 = !DILocation(line: 9017, column: 13, scope: !11967)
!11970 = !DILocation(line: 9018, column: 36, scope: !11967)
!11971 = !DILocation(line: 9018, column: 15, scope: !11967)
!11972 = !DILocation(line: 9019, column: 7, scope: !11967)
!11973 = !DILocation(line: 9021, column: 5, scope: !11967)
!11974 = !DILocation(line: 9023, column: 7, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 9023, column: 7)
!11976 = !DILocation(line: 9023, column: 39, scope: !11975)
!11977 = !DILocation(line: 9023, column: 7, scope: !11922)
!11978 = !DILocation(line: 9025, column: 13, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 9024, column: 5)
!11980 = !DILocation(line: 9026, column: 13, scope: !11979)
!11981 = !DILocation(line: 9027, column: 13, scope: !11979)
!11982 = !DILocation(line: 9028, column: 36, scope: !11979)
!11983 = !DILocation(line: 9028, column: 15, scope: !11979)
!11984 = !DILocation(line: 9029, column: 7, scope: !11979)
!11985 = !DILocation(line: 9031, column: 5, scope: !11979)
!11986 = !DILocation(line: 9033, column: 7, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 9033, column: 7)
!11988 = !DILocation(line: 9033, column: 39, scope: !11987)
!11989 = !DILocation(line: 9033, column: 7, scope: !11922)
!11990 = !DILocation(line: 9035, column: 13, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 9034, column: 5)
!11992 = !DILocation(line: 9036, column: 36, scope: !11991)
!11993 = !DILocation(line: 9036, column: 15, scope: !11991)
!11994 = !DILocation(line: 9039, column: 22, scope: !11991)
!11995 = !DILocation(line: 9039, column: 19, scope: !11991)
!11996 = !DILocation(line: 9037, column: 7, scope: !11991)
!11997 = !DILocation(line: 9040, column: 5, scope: !11991)
!11998 = !DILocation(line: 9042, column: 9, scope: !11922)
!11999 = !DILocation(line: 9043, column: 9, scope: !11922)
!12000 = !DILocation(line: 9044, column: 9, scope: !11922)
!12001 = !DILocation(line: 9045, column: 32, scope: !11922)
!12002 = !DILocation(line: 9045, column: 11, scope: !11922)
!12003 = !DILocation(line: 9046, column: 3, scope: !11922)
!12004 = !DILocation(line: 9050, column: 9, scope: !11922)
!12005 = !DILocation(line: 9051, column: 32, scope: !11922)
!12006 = !DILocation(line: 9051, column: 11, scope: !11922)
!12007 = !DILocation(line: 9052, column: 3, scope: !11922)
!12008 = !DILocation(line: 9057, column: 9, scope: !11922)
!12009 = !DILocation(line: 9058, column: 9, scope: !11922)
!12010 = !DILocation(line: 9059, column: 32, scope: !11922)
!12011 = !DILocation(line: 9059, column: 11, scope: !11922)
!12012 = !DILocation(line: 9060, column: 3, scope: !11922)
!12013 = !DILocation(line: 9065, column: 9, scope: !11922)
!12014 = !DILocation(line: 9066, column: 9, scope: !11922)
!12015 = !DILocation(line: 9067, column: 32, scope: !11922)
!12016 = !DILocation(line: 9067, column: 11, scope: !11922)
!12017 = !DILocation(line: 9068, column: 3, scope: !11922)
!12018 = !DILocation(line: 9072, column: 9, scope: !11922)
!12019 = !DILocation(line: 9073, column: 32, scope: !11922)
!12020 = !DILocation(line: 9073, column: 11, scope: !11922)
!12021 = !DILocation(line: 9074, column: 3, scope: !11922)
!12022 = !DILocation(line: 9079, column: 9, scope: !11922)
!12023 = !DILocation(line: 9080, column: 32, scope: !11922)
!12024 = !DILocation(line: 9080, column: 11, scope: !11922)
!12025 = !DILocation(line: 9081, column: 3, scope: !11922)
!12026 = !DILocation(line: 9085, column: 32, scope: !11922)
!12027 = !DILocation(line: 9085, column: 47, scope: !11922)
!12028 = !DILocation(line: 9085, column: 11, scope: !11922)
!12029 = !DILocation(line: 9086, column: 3, scope: !11922)
!12030 = !DILocation(line: 9089, column: 9, scope: !11922)
!12031 = !DILocation(line: 9090, column: 32, scope: !11922)
!12032 = !DILocation(line: 9090, column: 11, scope: !11922)
!12033 = !DILocation(line: 9091, column: 3, scope: !11922)
!12034 = !DILocation(line: 9095, column: 32, scope: !11922)
!12035 = !DILocation(line: 9095, column: 48, scope: !11922)
!12036 = !DILocation(line: 9095, column: 11, scope: !11922)
!12037 = !DILocation(line: 9096, column: 3, scope: !11922)
!12038 = !DILocation(line: 9098, column: 3, scope: !11922)
!12039 = !DILocation(line: 9103, column: 15, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 9103, column: 7)
!12041 = !DILocation(line: 9103, column: 7, scope: !12040)
!12042 = !DILocation(line: 9103, column: 7, scope: !11922)
!12043 = !DILocation(line: 9105, column: 36, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 9104, column: 5)
!12045 = !DILocation(line: 9105, column: 52, scope: !12044)
!12046 = !DILocation(line: 9105, column: 15, scope: !12044)
!12047 = !DILocation(line: 9106, column: 7, scope: !12044)
!12048 = !DILocation(line: 9109, column: 5, scope: !12044)
!12049 = !DILocation(line: 9111, column: 9, scope: !11922)
!12050 = !DILocation(line: 9112, column: 32, scope: !11922)
!12051 = !DILocation(line: 9112, column: 11, scope: !11922)
!12052 = !DILocation(line: 9113, column: 3, scope: !11922)
!12053 = !DILocation(line: 9125, column: 9, scope: !11922)
!12054 = !DILocation(line: 9126, column: 32, scope: !11922)
!12055 = !DILocation(line: 9126, column: 11, scope: !11922)
!12056 = !DILocation(line: 9127, column: 3, scope: !11922)
!12057 = !DILocation(line: 9130, column: 27, scope: !11922)
!12058 = !DILocation(line: 9130, column: 50, scope: !11922)
!12059 = !DILocation(line: 9130, column: 42, scope: !11922)
!12060 = !DILocation(line: 9130, column: 10, scope: !11922)
!12061 = !DILocation(line: 9131, column: 11, scope: !11922)
!12062 = !DILocation(line: 9132, column: 3, scope: !11922)
!12063 = !DILocation(line: 9135, column: 9, scope: !11922)
!12064 = !DILocation(line: 9136, column: 9, scope: !11922)
!12065 = !DILocation(line: 9137, column: 32, scope: !11922)
!12066 = !DILocation(line: 9137, column: 11, scope: !11922)
!12067 = !DILocation(line: 9138, column: 3, scope: !11922)
!12068 = !DILocation(line: 0, scope: !11928)
!12069 = !DILocation(line: 0, scope: !11930)
!12070 = !DILocation(line: 9149, column: 10, scope: !11932)
!12071 = !DILocation(line: 0, scope: !11932)
!12072 = !DILocation(line: 9149, column: 46, scope: !11931)
!12073 = !DILocation(line: 9149, column: 5, scope: !11932)
!12074 = !DILocation(line: 9151, column: 2, scope: !11930)
!12075 = !DILocation(line: 9151, column: 7, scope: !11930)
!12076 = !DILocation(line: 9156, column: 26, scope: !11930)
!12077 = !DILocation(line: 9156, column: 9, scope: !11930)
!12078 = !DILocation(line: 9157, column: 11, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 9157, column: 6)
!12080 = !DILocation(line: 9157, column: 6, scope: !11930)
!12081 = !DILocation(line: 9159, column: 15, scope: !11930)
!12082 = !DILocation(line: 9161, column: 8, scope: !11930)
!12083 = !DILocation(line: 9162, column: 8, scope: !11930)
!12084 = !DILocation(line: 9163, column: 8, scope: !11930)
!12085 = !DILocation(line: 9164, column: 8, scope: !11930)
!12086 = !DILocation(line: 9165, column: 10, scope: !11930)
!12087 = !DILocation(line: 9172, column: 18, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 9172, column: 9)
!12089 = !DILocation(line: 9172, column: 14, scope: !12088)
!12090 = !DILocation(line: 0, scope: !12088)
!12091 = !DILocation(line: 9172, column: 59, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 9172, column: 9)
!12093 = !DILocation(line: 9172, column: 9, scope: !12088)
!12094 = !DILocation(line: 9173, column: 9, scope: !12092)
!12095 = !DILocation(line: 9173, column: 7, scope: !12092)
!12096 = !DILocation(line: 9172, column: 64, scope: !12092)
!12097 = !DILocation(line: 9172, column: 69, scope: !12092)
!12098 = !DILocation(line: 9172, column: 9, scope: !12092)
!12099 = distinct !{!12099, !12093, !12100}
!12100 = !DILocation(line: 9173, column: 9, scope: !12088)
!12101 = !DILocation(line: 9168, column: 37, scope: !11930)
!12102 = !DILocation(line: 9170, column: 37, scope: !11930)
!12103 = !DILocation(line: 9174, column: 5, scope: !11930)
!12104 = !DILocation(line: 9176, column: 26, scope: !11930)
!12105 = !DILocation(line: 9176, column: 2, scope: !11930)
!12106 = !DILocation(line: 9176, column: 24, scope: !11930)
!12107 = !DILocation(line: 9177, column: 9, scope: !11930)
!12108 = !DILocation(line: 9180, column: 26, scope: !11930)
!12109 = !DILocation(line: 9180, column: 2, scope: !11930)
!12110 = !DILocation(line: 9180, column: 24, scope: !11930)
!12111 = !DILocation(line: 9181, column: 9, scope: !11930)
!12112 = !DILocation(line: 9183, column: 7, scope: !11931)
!12113 = !DILocation(line: 9149, column: 73, scope: !11931)
!12114 = !DILocation(line: 9149, column: 5, scope: !11931)
!12115 = distinct !{!12115, !12073, !12116}
!12116 = !DILocation(line: 9183, column: 7, scope: !11932)
!12117 = !DILocation(line: 9185, column: 1, scope: !11922)
!12118 = distinct !DISubprogram(name: "local_define_builtin", scope: !3, file: !3, line: 8964, type: !12119, scopeLine: 8966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12121)
!12119 = !DISubroutineType(types: !12120)
!12120 = !{null, !1455, !1457, !639, !1455, !1450}
!12121 = !{!12122, !12123, !12124, !12125, !12126, !12127}
!12122 = !DILocalVariable(name: "name", arg: 1, scope: !12118, file: !3, line: 8964, type: !1455)
!12123 = !DILocalVariable(name: "type", arg: 2, scope: !12118, file: !3, line: 8964, type: !1457)
!12124 = !DILocalVariable(name: "code", arg: 3, scope: !12118, file: !3, line: 8964, type: !639)
!12125 = !DILocalVariable(name: "library_name", arg: 4, scope: !12118, file: !3, line: 8965, type: !1455)
!12126 = !DILocalVariable(name: "ecf_flags", arg: 5, scope: !12118, file: !3, line: 8965, type: !1450)
!12127 = !DILocalVariable(name: "decl", scope: !12118, file: !3, line: 8967, type: !1457)
!12128 = !DILocation(line: 0, scope: !12118)
!12129 = !DILocation(line: 8969, column: 10, scope: !12118)
!12130 = !DILocation(line: 8971, column: 17, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 8971, column: 7)
!12132 = !DILocation(line: 8971, column: 7, scope: !12118)
!12133 = !DILocation(line: 8972, column: 5, scope: !12131)
!12134 = !DILocation(line: 8972, column: 26, scope: !12131)
!12135 = !DILocation(line: 8973, column: 17, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 8973, column: 7)
!12137 = !DILocation(line: 8973, column: 7, scope: !12118)
!12138 = !DILocation(line: 8974, column: 5, scope: !12136)
!12139 = !DILocation(line: 8974, column: 24, scope: !12136)
!12140 = !DILocation(line: 8975, column: 17, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 8975, column: 7)
!12142 = !DILocation(line: 8975, column: 7, scope: !12118)
!12143 = !DILocation(line: 8976, column: 5, scope: !12141)
!12144 = !DILocation(line: 8976, column: 41, scope: !12141)
!12145 = !DILocation(line: 8977, column: 17, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 8977, column: 7)
!12147 = !DILocation(line: 8977, column: 7, scope: !12118)
!12148 = !DILocation(line: 8978, column: 5, scope: !12146)
!12149 = !DILocation(line: 8978, column: 31, scope: !12146)
!12150 = !DILocation(line: 8979, column: 17, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 8979, column: 7)
!12152 = !DILocation(line: 8979, column: 7, scope: !12118)
!12153 = !DILocation(line: 8980, column: 5, scope: !12151)
!12154 = !DILocation(line: 8980, column: 25, scope: !12151)
!12155 = !DILocation(line: 8981, column: 17, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 8981, column: 7)
!12157 = !DILocation(line: 8981, column: 7, scope: !12118)
!12158 = !DILocation(line: 8982, column: 5, scope: !12156)
!12159 = !DILocation(line: 8982, column: 27, scope: !12156)
!12160 = !DILocation(line: 8984, column: 3, scope: !12118)
!12161 = !DILocation(line: 8984, column: 24, scope: !12118)
!12162 = !DILocation(line: 8985, column: 3, scope: !12118)
!12163 = !DILocation(line: 8985, column: 33, scope: !12118)
!12164 = !DILocation(line: 8986, column: 1, scope: !12118)
!12165 = distinct !DISubprogram(name: "reconstruct_complex_type", scope: !3, file: !3, line: 9198, type: !4530, scopeLine: 9199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12166)
!12166 = !{!12167, !12168, !12169, !12170}
!12167 = !DILocalVariable(name: "type", arg: 1, scope: !12165, file: !3, line: 9198, type: !1457)
!12168 = !DILocalVariable(name: "bottom", arg: 2, scope: !12165, file: !3, line: 9198, type: !1457)
!12169 = !DILocalVariable(name: "inner", scope: !12165, file: !3, line: 9200, type: !1457)
!12170 = !DILocalVariable(name: "outer", scope: !12165, file: !3, line: 9200, type: !1457)
!12171 = !DILocation(line: 0, scope: !12165)
!12172 = !DILocation(line: 9202, column: 7, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 9202, column: 7)
!12174 = !DILocation(line: 9202, column: 24, scope: !12173)
!12175 = !DILocation(line: 9202, column: 7, scope: !12165)
!12176 = !DILocation(line: 9204, column: 41, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 9203, column: 5)
!12178 = !DILocation(line: 9204, column: 15, scope: !12177)
!12179 = !DILocation(line: 9205, column: 51, scope: !12177)
!12180 = !DILocation(line: 9206, column: 9, scope: !12177)
!12181 = !DILocation(line: 9205, column: 15, scope: !12177)
!12182 = !DILocation(line: 9207, column: 5, scope: !12177)
!12183 = !DILocation(line: 9208, column: 29, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 9208, column: 12)
!12185 = !DILocation(line: 9208, column: 12, scope: !12173)
!12186 = !DILocation(line: 9210, column: 41, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 9209, column: 5)
!12188 = !DILocation(line: 9210, column: 15, scope: !12187)
!12189 = !DILocation(line: 9211, column: 53, scope: !12187)
!12190 = !DILocation(line: 9212, column: 11, scope: !12187)
!12191 = !DILocation(line: 9211, column: 15, scope: !12187)
!12192 = !DILocation(line: 9213, column: 5, scope: !12187)
!12193 = !DILocation(line: 9214, column: 29, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 9214, column: 12)
!12195 = !DILocation(line: 9214, column: 12, scope: !12184)
!12196 = !DILocation(line: 9216, column: 41, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12194, file: !3, line: 9215, column: 5)
!12198 = !DILocation(line: 9216, column: 15, scope: !12197)
!12199 = !DILocation(line: 9217, column: 40, scope: !12197)
!12200 = !DILocation(line: 9217, column: 15, scope: !12197)
!12201 = !DILocation(line: 9218, column: 5, scope: !12197)
!12202 = !DILocation(line: 9219, column: 29, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12194, file: !3, line: 9219, column: 12)
!12204 = !DILocation(line: 9219, column: 12, scope: !12194)
!12205 = !DILocation(line: 9221, column: 41, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 9220, column: 5)
!12207 = !DILocation(line: 9221, column: 15, scope: !12206)
!12208 = !DILocation(line: 9222, column: 43, scope: !12206)
!12209 = !DILocation(line: 9222, column: 15, scope: !12206)
!12210 = !DILocation(line: 9223, column: 5, scope: !12206)
!12211 = !DILocation(line: 9224, column: 29, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 9224, column: 12)
!12213 = !DILocation(line: 9224, column: 12, scope: !12203)
!12214 = !DILocation(line: 9226, column: 41, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 9225, column: 5)
!12216 = !DILocation(line: 9226, column: 15, scope: !12215)
!12217 = !DILocation(line: 9231, column: 7, scope: !12215)
!12218 = !DILocation(line: 9233, column: 7, scope: !12215)
!12219 = !DILocation(line: 9230, column: 4, scope: !12215)
!12220 = !DILocation(line: 9234, column: 5, scope: !12215)
!12221 = !DILocation(line: 9235, column: 29, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 9235, column: 12)
!12223 = !DILocation(line: 9235, column: 12, scope: !12212)
!12224 = !DILocation(line: 9237, column: 41, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12222, file: !3, line: 9236, column: 5)
!12226 = !DILocation(line: 9237, column: 15, scope: !12225)
!12227 = !DILocation(line: 9238, column: 34, scope: !12225)
!12228 = !DILocation(line: 9238, column: 15, scope: !12225)
!12229 = !DILocation(line: 0, scope: !12173)
!12230 = !DILocation(line: 9243, column: 52, scope: !12165)
!12231 = !DILocation(line: 9244, column: 10, scope: !12165)
!12232 = !DILocation(line: 9243, column: 10, scope: !12165)
!12233 = !DILocation(line: 9243, column: 3, scope: !12165)
!12234 = !DILocation(line: 9245, column: 1, scope: !12165)
!12235 = distinct !DISubprogram(name: "build_vector_type_for_mode", scope: !3, file: !3, line: 9250, type: !12236, scopeLine: 9251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12238)
!12236 = !DISubroutineType(types: !12237)
!12237 = !{!1457, !1457, !20}
!12238 = !{!12239, !12240, !12241}
!12239 = !DILocalVariable(name: "innertype", arg: 1, scope: !12235, file: !3, line: 9250, type: !1457)
!12240 = !DILocalVariable(name: "mode", arg: 2, scope: !12235, file: !3, line: 9250, type: !20)
!12241 = !DILocalVariable(name: "nunits", scope: !12235, file: !3, line: 9252, type: !1450)
!12242 = !DILocation(line: 0, scope: !12235)
!12243 = !DILocation(line: 9254, column: 11, scope: !12235)
!12244 = !DILocation(line: 9254, column: 3, scope: !12235)
!12245 = !DILocation(line: 9262, column: 16, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12235, file: !3, line: 9255, column: 5)
!12247 = !DILocation(line: 9263, column: 7, scope: !12246)
!12248 = !DILocation(line: 9267, column: 7, scope: !12246)
!12249 = !DILocation(line: 9270, column: 16, scope: !12246)
!12250 = !DILocation(line: 9271, column: 11, scope: !12246)
!12251 = !DILocation(line: 0, scope: !12246)
!12252 = !DILocation(line: 9271, column: 9, scope: !12246)
!12253 = !DILocation(line: 9272, column: 7, scope: !12246)
!12254 = !DILocation(line: 9275, column: 7, scope: !12246)
!12255 = !DILocation(line: 9276, column: 5, scope: !12246)
!12256 = !DILocation(line: 9278, column: 10, scope: !12235)
!12257 = !DILocation(line: 9278, column: 3, scope: !12235)
!12258 = distinct !DISubprogram(name: "make_vector_type", scope: !3, file: !3, line: 8597, type: !12259, scopeLine: 8598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12261)
!12259 = !DISubroutineType(types: !12260)
!12260 = !{!1457, !1457, !1450, !20}
!12261 = !{!12262, !12263, !12264, !12265, !12266, !12267, !12269, !12270}
!12262 = !DILocalVariable(name: "innertype", arg: 1, scope: !12258, file: !3, line: 8597, type: !1457)
!12263 = !DILocalVariable(name: "nunits", arg: 2, scope: !12258, file: !3, line: 8597, type: !1450)
!12264 = !DILocalVariable(name: "mode", arg: 3, scope: !12258, file: !3, line: 8597, type: !20)
!12265 = !DILocalVariable(name: "t", scope: !12258, file: !3, line: 8599, type: !1457)
!12266 = !DILocalVariable(name: "hashcode", scope: !12258, file: !3, line: 8600, type: !1814)
!12267 = !DILocalVariable(name: "index", scope: !12268, file: !3, line: 8617, type: !1457)
!12268 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 8616, column: 3)
!12269 = !DILocalVariable(name: "array", scope: !12268, file: !3, line: 8618, type: !1457)
!12270 = !DILocalVariable(name: "rt", scope: !12268, file: !3, line: 8620, type: !1457)
!12271 = !DILocation(line: 0, scope: !12258)
!12272 = !DILocation(line: 8602, column: 7, scope: !12258)
!12273 = !DILocation(line: 8603, column: 19, scope: !12258)
!12274 = !DILocation(line: 8603, column: 3, scope: !12258)
!12275 = !DILocation(line: 8603, column: 17, scope: !12258)
!12276 = !DILocation(line: 8604, column: 3, scope: !12258)
!12277 = !DILocation(line: 8605, column: 3, scope: !12258)
!12278 = !DILocation(line: 8607, column: 7, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 8607, column: 7)
!12280 = !DILocation(line: 8607, column: 7, scope: !12258)
!12281 = !DILocation(line: 8608, column: 5, scope: !12279)
!12282 = !DILocation(line: 8609, column: 39, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 8609, column: 12)
!12284 = !DILocation(line: 8610, column: 13, scope: !12283)
!12285 = !DILocation(line: 8610, column: 5, scope: !12283)
!12286 = !DILocation(line: 8612, column: 9, scope: !12283)
!12287 = !DILocation(line: 8611, column: 5, scope: !12283)
!12288 = !DILocation(line: 8612, column: 7, scope: !12283)
!12289 = !DILocation(line: 8614, column: 3, scope: !12258)
!12290 = !DILocation(line: 8617, column: 51, scope: !12268)
!12291 = !DILocation(line: 8617, column: 44, scope: !12268)
!12292 = !DILocation(line: 8617, column: 18, scope: !12268)
!12293 = !DILocation(line: 0, scope: !12268)
!12294 = !DILocation(line: 8618, column: 36, scope: !12268)
!12295 = !DILocation(line: 8619, column: 8, scope: !12268)
!12296 = !DILocation(line: 8618, column: 18, scope: !12268)
!12297 = !DILocation(line: 8620, column: 15, scope: !12268)
!12298 = !DILocation(line: 8622, column: 24, scope: !12268)
!12299 = !DILocation(line: 8622, column: 5, scope: !12268)
!12300 = !DILocation(line: 8622, column: 22, scope: !12268)
!12301 = !DILocation(line: 8624, column: 5, scope: !12268)
!12302 = !DILocation(line: 8624, column: 37, scope: !12268)
!12303 = !DILocation(line: 8625, column: 5, scope: !12268)
!12304 = !DILocation(line: 8626, column: 5, scope: !12268)
!12305 = !DILocation(line: 8626, column: 40, scope: !12268)
!12306 = !DILocation(line: 8631, column: 21, scope: !12268)
!12307 = !DILocation(line: 8631, column: 5, scope: !12268)
!12308 = !DILocation(line: 8631, column: 19, scope: !12268)
!12309 = !DILocation(line: 8634, column: 14, scope: !12258)
!12310 = !DILocation(line: 8635, column: 14, scope: !12258)
!12311 = !DILocation(line: 8636, column: 44, scope: !12258)
!12312 = !DILocation(line: 8636, column: 14, scope: !12258)
!12313 = !DILocation(line: 8637, column: 14, scope: !12258)
!12314 = !DILocation(line: 8638, column: 7, scope: !12258)
!12315 = !DILocation(line: 8642, column: 8, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 8642, column: 7)
!12317 = !DILocation(line: 8642, column: 36, scope: !12316)
!12318 = !DILocation(line: 8642, column: 39, scope: !12316)
!12319 = !DILocation(line: 8643, column: 7, scope: !12316)
!12320 = !DILocation(line: 8643, column: 10, scope: !12316)
!12321 = !DILocation(line: 8643, column: 24, scope: !12316)
!12322 = !DILocation(line: 8642, column: 7, scope: !12258)
!12323 = !DILocation(line: 8646, column: 12, scope: !12316)
!12324 = !DILocation(line: 8644, column: 12, scope: !12316)
!12325 = !DILocation(line: 8644, column: 5, scope: !12316)
!12326 = !DILocation(line: 8649, column: 1, scope: !12258)
!12327 = distinct !DISubprogram(name: "build_vector_type", scope: !3, file: !3, line: 9285, type: !8026, scopeLine: 9286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12328)
!12328 = !{!12329, !12330}
!12329 = !DILocalVariable(name: "innertype", arg: 1, scope: !12327, file: !3, line: 9285, type: !1457)
!12330 = !DILocalVariable(name: "nunits", arg: 2, scope: !12327, file: !3, line: 9285, type: !1450)
!12331 = !DILocation(line: 0, scope: !12327)
!12332 = !DILocation(line: 9287, column: 10, scope: !12327)
!12333 = !DILocation(line: 9287, column: 3, scope: !12327)
!12334 = distinct !DISubprogram(name: "build_opaque_vector_type", scope: !3, file: !3, line: 9294, type: !8026, scopeLine: 9295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12335)
!12335 = !{!12336, !12337, !12338}
!12336 = !DILocalVariable(name: "innertype", arg: 1, scope: !12334, file: !3, line: 9294, type: !1457)
!12337 = !DILocalVariable(name: "nunits", arg: 2, scope: !12334, file: !3, line: 9294, type: !1450)
!12338 = !DILocalVariable(name: "t", scope: !12334, file: !3, line: 9296, type: !1457)
!12339 = !DILocation(line: 0, scope: !12334)
!12340 = !DILocation(line: 9297, column: 15, scope: !12334)
!12341 = !DILocation(line: 9298, column: 7, scope: !12334)
!12342 = !DILocation(line: 9299, column: 3, scope: !12334)
!12343 = !DILocation(line: 9299, column: 26, scope: !12334)
!12344 = !DILocation(line: 9300, column: 3, scope: !12334)
!12345 = distinct !DISubprogram(name: "initializer_zerop", scope: !3, file: !3, line: 9307, type: !4510, scopeLine: 9308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12346)
!12346 = !{!12347, !12348, !12349}
!12347 = !DILocalVariable(name: "init", arg: 1, scope: !12345, file: !3, line: 9307, type: !2774)
!12348 = !DILocalVariable(name: "elt", scope: !12345, file: !3, line: 9309, type: !1457)
!12349 = !DILocalVariable(name: "idx", scope: !12350, file: !3, line: 9342, type: !1511)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 9341, column: 7)
!12351 = distinct !DILexicalBlock(scope: !12345, file: !3, line: 9314, column: 5)
!12352 = !DILocation(line: 0, scope: !12345)
!12353 = !DILocation(line: 9311, column: 3, scope: !12345)
!12354 = !DILocation(line: 9313, column: 11, scope: !12345)
!12355 = !DILocation(line: 9313, column: 3, scope: !12345)
!12356 = !DILocation(line: 0, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 9344, column: 2)
!12358 = distinct !DILexicalBlock(scope: !12350, file: !3, line: 9344, column: 2)
!12359 = !DILocation(line: 9344, column: 2, scope: !12358)
!12360 = !DILocation(line: 9316, column: 14, scope: !12351)
!12361 = !DILocation(line: 9316, column: 7, scope: !12351)
!12362 = !DILocation(line: 9322, column: 14, scope: !12351)
!12363 = !DILocation(line: 9323, column: 2, scope: !12351)
!12364 = !DILocation(line: 9323, column: 7, scope: !12351)
!12365 = !DILocation(line: 9323, column: 5, scope: !12351)
!12366 = !DILocation(line: 9322, column: 7, scope: !12351)
!12367 = !DILocation(line: 9326, column: 14, scope: !12351)
!12368 = !DILocation(line: 9326, column: 7, scope: !12351)
!12369 = !DILocation(line: 9329, column: 14, scope: !12351)
!12370 = !DILocation(line: 9330, column: 2, scope: !12351)
!12371 = !DILocation(line: 9330, column: 6, scope: !12351)
!12372 = !DILocation(line: 9331, column: 6, scope: !12351)
!12373 = !DILocation(line: 9331, column: 11, scope: !12351)
!12374 = !DILocation(line: 9332, column: 6, scope: !12351)
!12375 = !DILocation(line: 9332, column: 11, scope: !12351)
!12376 = !DILocation(line: 9332, column: 9, scope: !12351)
!12377 = !DILocation(line: 9329, column: 7, scope: !12351)
!12378 = !DILocation(line: 9335, column: 18, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 9335, column: 7)
!12380 = !DILocation(line: 9335, column: 12, scope: !12379)
!12381 = !DILocation(line: 0, scope: !12379)
!12382 = !DILocation(line: 9335, column: 7, scope: !12379)
!12383 = !DILocation(line: 9336, column: 26, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12385, file: !3, line: 9336, column: 6)
!12385 = distinct !DILexicalBlock(scope: !12379, file: !3, line: 9335, column: 7)
!12386 = !DILocation(line: 9336, column: 7, scope: !12384)
!12387 = !DILocation(line: 9336, column: 6, scope: !12385)
!12388 = !DILocation(line: 9335, column: 58, scope: !12385)
!12389 = !DILocation(line: 9335, column: 7, scope: !12385)
!12390 = distinct !{!12390, !12382, !12391}
!12391 = !DILocation(line: 9337, column: 11, scope: !12379)
!12392 = !DILocation(line: 0, scope: !12358)
!12393 = !DILocation(line: 0, scope: !12350)
!12394 = !DILocation(line: 9344, column: 2, scope: !12357)
!12395 = !DILocation(line: 9345, column: 9, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12357, file: !3, line: 9345, column: 8)
!12397 = !DILocation(line: 9345, column: 8, scope: !12357)
!12398 = distinct !{!12398, !12359, !12399}
!12399 = !DILocation(line: 9346, column: 13, scope: !12358)
!12400 = !DILocation(line: 9353, column: 1, scope: !12345)
!12401 = !DILocation(line: 0, scope: !12351)
!12402 = distinct !DISubprogram(name: "build_empty_stmt", scope: !3, file: !3, line: 9358, type: !12403, scopeLine: 9359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12405)
!12403 = !DISubroutineType(types: !12404)
!12404 = !{!1457, !1582}
!12405 = !{!12406, !12407}
!12406 = !DILocalVariable(name: "loc", arg: 1, scope: !12402, file: !3, line: 9358, type: !1582)
!12407 = !DILocalVariable(name: "t", scope: !12402, file: !3, line: 9360, type: !1457)
!12408 = !DILocation(line: 0, scope: !12402)
!12409 = !DILocation(line: 9360, column: 12, scope: !12402)
!12410 = !DILocation(line: 9361, column: 3, scope: !12402)
!12411 = !DILocation(line: 9362, column: 3, scope: !12402)
!12412 = distinct !DISubprogram(name: "build_omp_clause", scope: !3, file: !3, line: 9370, type: !12413, scopeLine: 9371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12415)
!12413 = !DISubroutineType(types: !12414)
!12414 = !{!1457, !1582, !365}
!12415 = !{!12416, !12417, !12418, !12419, !12420}
!12416 = !DILocalVariable(name: "loc", arg: 1, scope: !12412, file: !3, line: 9370, type: !1582)
!12417 = !DILocalVariable(name: "code", arg: 2, scope: !12412, file: !3, line: 9370, type: !365)
!12418 = !DILocalVariable(name: "t", scope: !12412, file: !3, line: 9372, type: !1457)
!12419 = !DILocalVariable(name: "size", scope: !12412, file: !3, line: 9373, type: !1450)
!12420 = !DILocalVariable(name: "length", scope: !12412, file: !3, line: 9373, type: !1450)
!12421 = !DILocation(line: 0, scope: !12412)
!12422 = !DILocation(line: 9375, column: 12, scope: !12412)
!12423 = !DILocation(line: 9376, column: 58, scope: !12412)
!12424 = !DILocation(line: 9376, column: 10, scope: !12412)
!12425 = !DILocation(line: 9378, column: 7, scope: !12412)
!12426 = !DILocation(line: 9379, column: 3, scope: !12412)
!12427 = !DILocation(line: 9380, column: 3, scope: !12412)
!12428 = !DILocation(line: 9381, column: 3, scope: !12412)
!12429 = !DILocation(line: 9382, column: 3, scope: !12412)
!12430 = !DILocation(line: 9382, column: 27, scope: !12412)
!12431 = !DILocation(line: 9389, column: 3, scope: !12412)
!12432 = distinct !DISubprogram(name: "build_call_list", scope: !3, file: !3, line: 9430, type: !4608, scopeLine: 9431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12433)
!12433 = !{!12434, !12435, !12436, !12437, !12438}
!12434 = !DILocalVariable(name: "return_type", arg: 1, scope: !12432, file: !3, line: 9430, type: !1457)
!12435 = !DILocalVariable(name: "fn", arg: 2, scope: !12432, file: !3, line: 9430, type: !1457)
!12436 = !DILocalVariable(name: "arglist", arg: 3, scope: !12432, file: !3, line: 9430, type: !1457)
!12437 = !DILocalVariable(name: "t", scope: !12432, file: !3, line: 9432, type: !1457)
!12438 = !DILocalVariable(name: "i", scope: !12432, file: !3, line: 9433, type: !1450)
!12439 = !DILocation(line: 0, scope: !12432)
!12440 = !DILocation(line: 9435, column: 7, scope: !12432)
!12441 = !DILocation(line: 9436, column: 3, scope: !12432)
!12442 = !DILocation(line: 9436, column: 17, scope: !12432)
!12443 = !DILocation(line: 9437, column: 3, scope: !12432)
!12444 = !DILocation(line: 9437, column: 20, scope: !12432)
!12445 = !DILocation(line: 9438, column: 3, scope: !12432)
!12446 = !DILocation(line: 9438, column: 30, scope: !12432)
!12447 = !DILocation(line: 9439, column: 8, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 9439, column: 3)
!12449 = !DILocation(line: 9439, column: 3, scope: !12448)
!12450 = !DILocation(line: 9440, column: 28, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 9439, column: 3)
!12452 = !DILocation(line: 9440, column: 5, scope: !12451)
!12453 = !DILocation(line: 9440, column: 26, scope: !12451)
!12454 = !DILocation(line: 9439, column: 34, scope: !12451)
!12455 = !DILocation(line: 9439, column: 57, scope: !12451)
!12456 = !DILocation(line: 9439, column: 3, scope: !12451)
!12457 = distinct !{!12457, !12449, !12458}
!12458 = !DILocation(line: 9440, column: 28, scope: !12448)
!12459 = !DILocation(line: 9441, column: 3, scope: !12432)
!12460 = !DILocation(line: 9442, column: 3, scope: !12432)
!12461 = distinct !DISubprogram(name: "build_call_nary", scope: !3, file: !3, line: 9450, type: !12462, scopeLine: 9451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12464)
!12462 = !DISubroutineType(types: !12463)
!12463 = !{!1457, !1457, !1457, !1450, null}
!12464 = !{!12465, !12466, !12467, !12468, !12469}
!12465 = !DILocalVariable(name: "return_type", arg: 1, scope: !12461, file: !3, line: 9450, type: !1457)
!12466 = !DILocalVariable(name: "fn", arg: 2, scope: !12461, file: !3, line: 9450, type: !1457)
!12467 = !DILocalVariable(name: "nargs", arg: 3, scope: !12461, file: !3, line: 9450, type: !1450)
!12468 = !DILocalVariable(name: "ret", scope: !12461, file: !3, line: 9452, type: !1457)
!12469 = !DILocalVariable(name: "args", scope: !12461, file: !3, line: 9453, type: !7137)
!12470 = !DILocation(line: 0, scope: !12461)
!12471 = !DILocation(line: 9453, column: 3, scope: !12461)
!12472 = !DILocation(line: 9453, column: 11, scope: !12461)
!12473 = !DILocation(line: 9454, column: 3, scope: !12461)
!12474 = !DILocation(line: 9455, column: 52, scope: !12461)
!12475 = !DILocation(line: 9455, column: 9, scope: !12461)
!12476 = !DILocation(line: 9456, column: 3, scope: !12461)
!12477 = !DILocation(line: 9458, column: 1, scope: !12461)
!12478 = !DILocation(line: 9457, column: 3, scope: !12461)
!12479 = distinct !DISubprogram(name: "build_call_valist", scope: !3, file: !3, line: 9465, type: !12480, scopeLine: 9466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12482)
!12480 = !DISubroutineType(types: !12481)
!12481 = !{!1457, !1457, !1457, !1450, !2934}
!12482 = !{!12483, !12484, !12485, !12486, !12487, !12488}
!12483 = !DILocalVariable(name: "return_type", arg: 1, scope: !12479, file: !3, line: 9465, type: !1457)
!12484 = !DILocalVariable(name: "fn", arg: 2, scope: !12479, file: !3, line: 9465, type: !1457)
!12485 = !DILocalVariable(name: "nargs", arg: 3, scope: !12479, file: !3, line: 9465, type: !1450)
!12486 = !DILocalVariable(name: "args", arg: 4, scope: !12479, file: !3, line: 9465, type: !2934)
!12487 = !DILocalVariable(name: "t", scope: !12479, file: !3, line: 9467, type: !1457)
!12488 = !DILocalVariable(name: "i", scope: !12479, file: !3, line: 9468, type: !1450)
!12489 = !DILocation(line: 0, scope: !12479)
!12490 = !DILocation(line: 9470, column: 7, scope: !12479)
!12491 = !DILocation(line: 9471, column: 3, scope: !12479)
!12492 = !DILocation(line: 9471, column: 17, scope: !12479)
!12493 = !DILocation(line: 9472, column: 3, scope: !12479)
!12494 = !DILocation(line: 9472, column: 20, scope: !12479)
!12495 = !DILocation(line: 9473, column: 3, scope: !12479)
!12496 = !DILocation(line: 9473, column: 30, scope: !12479)
!12497 = !DILocation(line: 0, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12499, file: !3, line: 9474, column: 3)
!12499 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 9474, column: 3)
!12500 = !DILocation(line: 9474, column: 8, scope: !12499)
!12501 = !DILocation(line: 0, scope: !12499)
!12502 = !DILocation(line: 9474, column: 17, scope: !12498)
!12503 = !DILocation(line: 9474, column: 3, scope: !12499)
!12504 = !DILocation(line: 9475, column: 28, scope: !12498)
!12505 = !DILocation(line: 9475, column: 5, scope: !12498)
!12506 = !DILocation(line: 9475, column: 26, scope: !12498)
!12507 = !DILocation(line: 9474, column: 27, scope: !12498)
!12508 = !DILocation(line: 9474, column: 3, scope: !12498)
!12509 = distinct !{!12509, !12503, !12510}
!12510 = !DILocation(line: 9475, column: 28, scope: !12499)
!12511 = !DILocation(line: 9476, column: 3, scope: !12479)
!12512 = !DILocation(line: 9477, column: 3, scope: !12479)
!12513 = distinct !DISubprogram(name: "build_call_array_loc", scope: !3, file: !3, line: 9485, type: !12514, scopeLine: 9487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12518)
!12514 = !DISubroutineType(types: !12515)
!12515 = !{!1457, !1582, !1457, !1457, !1450, !12516}
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12517, size: 64)
!12517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!12518 = !{!12519, !12520, !12521, !12522, !12523, !12524, !12525}
!12519 = !DILocalVariable(name: "loc", arg: 1, scope: !12513, file: !3, line: 9485, type: !1582)
!12520 = !DILocalVariable(name: "return_type", arg: 2, scope: !12513, file: !3, line: 9485, type: !1457)
!12521 = !DILocalVariable(name: "fn", arg: 3, scope: !12513, file: !3, line: 9485, type: !1457)
!12522 = !DILocalVariable(name: "nargs", arg: 4, scope: !12513, file: !3, line: 9486, type: !1450)
!12523 = !DILocalVariable(name: "args", arg: 5, scope: !12513, file: !3, line: 9486, type: !12516)
!12524 = !DILocalVariable(name: "t", scope: !12513, file: !3, line: 9488, type: !1457)
!12525 = !DILocalVariable(name: "i", scope: !12513, file: !3, line: 9489, type: !1450)
!12526 = !DILocation(line: 0, scope: !12513)
!12527 = !DILocation(line: 9491, column: 7, scope: !12513)
!12528 = !DILocation(line: 9492, column: 3, scope: !12513)
!12529 = !DILocation(line: 9492, column: 17, scope: !12513)
!12530 = !DILocation(line: 9493, column: 3, scope: !12513)
!12531 = !DILocation(line: 9493, column: 20, scope: !12513)
!12532 = !DILocation(line: 9494, column: 3, scope: !12513)
!12533 = !DILocation(line: 9494, column: 30, scope: !12513)
!12534 = !DILocation(line: 9495, column: 8, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12513, file: !3, line: 9495, column: 3)
!12536 = !DILocation(line: 0, scope: !12535)
!12537 = !DILocation(line: 9495, column: 17, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 9495, column: 3)
!12539 = !DILocation(line: 9495, column: 3, scope: !12535)
!12540 = !DILocation(line: 9496, column: 28, scope: !12538)
!12541 = !DILocation(line: 9496, column: 5, scope: !12538)
!12542 = !DILocation(line: 9496, column: 26, scope: !12538)
!12543 = !DILocation(line: 9495, column: 27, scope: !12538)
!12544 = !DILocation(line: 9495, column: 3, scope: !12538)
!12545 = distinct !{!12545, !12539, !12546}
!12546 = !DILocation(line: 9496, column: 34, scope: !12535)
!12547 = !DILocation(line: 9497, column: 3, scope: !12513)
!12548 = !DILocation(line: 9498, column: 3, scope: !12513)
!12549 = !DILocation(line: 9499, column: 3, scope: !12513)
!12550 = distinct !DISubprogram(name: "build_call_vec", scope: !3, file: !3, line: 9505, type: !12551, scopeLine: 9506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12553)
!12551 = !DISubroutineType(types: !12552)
!12552 = !{!1457, !1457, !1457, !1856}
!12553 = !{!12554, !12555, !12556, !12557, !12558, !12559}
!12554 = !DILocalVariable(name: "return_type", arg: 1, scope: !12550, file: !3, line: 9505, type: !1457)
!12555 = !DILocalVariable(name: "fn", arg: 2, scope: !12550, file: !3, line: 9505, type: !1457)
!12556 = !DILocalVariable(name: "args", arg: 3, scope: !12550, file: !3, line: 9505, type: !1856)
!12557 = !DILocalVariable(name: "ret", scope: !12550, file: !3, line: 9507, type: !1457)
!12558 = !DILocalVariable(name: "t", scope: !12550, file: !3, line: 9507, type: !1457)
!12559 = !DILocalVariable(name: "ix", scope: !12550, file: !3, line: 9508, type: !7)
!12560 = !DILocation(line: 0, scope: !12550)
!12561 = !DILocation(line: 9507, column: 3, scope: !12550)
!12562 = !DILocation(line: 9510, column: 9, scope: !12550)
!12563 = !DILocation(line: 9511, column: 3, scope: !12550)
!12564 = !DILocation(line: 9511, column: 19, scope: !12550)
!12565 = !DILocation(line: 9512, column: 3, scope: !12550)
!12566 = !DILocation(line: 9512, column: 22, scope: !12550)
!12567 = !DILocation(line: 9513, column: 3, scope: !12550)
!12568 = !DILocation(line: 9513, column: 32, scope: !12550)
!12569 = !DILocation(line: 0, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12571, file: !3, line: 9514, column: 3)
!12571 = distinct !DILexicalBlock(scope: !12550, file: !3, line: 9514, column: 3)
!12572 = !DILocation(line: 9514, column: 8, scope: !12571)
!12573 = !DILocation(line: 0, scope: !12571)
!12574 = !DILocation(line: 9514, column: 16, scope: !12570)
!12575 = !DILocation(line: 9514, column: 3, scope: !12571)
!12576 = !DILocation(line: 9515, column: 31, scope: !12570)
!12577 = !DILocation(line: 9515, column: 5, scope: !12570)
!12578 = !DILocation(line: 9515, column: 29, scope: !12570)
!12579 = !DILocation(line: 9514, column: 49, scope: !12570)
!12580 = !DILocation(line: 9514, column: 3, scope: !12570)
!12581 = distinct !{!12581, !12575, !12582}
!12582 = !DILocation(line: 9515, column: 31, scope: !12571)
!12583 = !DILocation(line: 9516, column: 3, scope: !12550)
!12584 = !DILocation(line: 9518, column: 1, scope: !12550)
!12585 = !DILocation(line: 9517, column: 3, scope: !12550)
!12586 = distinct !DISubprogram(name: "in_array_bounds_p", scope: !3, file: !3, line: 9526, type: !6091, scopeLine: 9527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12587)
!12587 = !{!12588, !12589, !12590, !12591}
!12588 = !DILocalVariable(name: "ref", arg: 1, scope: !12586, file: !3, line: 9526, type: !1457)
!12589 = !DILocalVariable(name: "idx", scope: !12586, file: !3, line: 9528, type: !1457)
!12590 = !DILocalVariable(name: "min", scope: !12586, file: !3, line: 9529, type: !1457)
!12591 = !DILocalVariable(name: "max", scope: !12586, file: !3, line: 9529, type: !1457)
!12592 = !DILocation(line: 0, scope: !12586)
!12593 = !DILocation(line: 9528, column: 14, scope: !12586)
!12594 = !DILocation(line: 9531, column: 7, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 9531, column: 7)
!12596 = !DILocation(line: 9531, column: 23, scope: !12595)
!12597 = !DILocation(line: 9531, column: 7, scope: !12586)
!12598 = !DILocation(line: 9534, column: 9, scope: !12586)
!12599 = !DILocation(line: 9535, column: 9, scope: !12586)
!12600 = !DILocation(line: 9536, column: 8, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 9536, column: 7)
!12602 = !DILocation(line: 9537, column: 11, scope: !12601)
!12603 = !DILocation(line: 9537, column: 7, scope: !12601)
!12604 = !DILocation(line: 9538, column: 10, scope: !12601)
!12605 = !DILocation(line: 9538, column: 26, scope: !12601)
!12606 = !DILocation(line: 9539, column: 7, scope: !12601)
!12607 = !DILocation(line: 9539, column: 10, scope: !12601)
!12608 = !DILocation(line: 9539, column: 26, scope: !12601)
!12609 = !DILocation(line: 9536, column: 7, scope: !12586)
!12610 = !DILocation(line: 9542, column: 7, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 9542, column: 7)
!12612 = !DILocation(line: 9543, column: 7, scope: !12611)
!12613 = !DILocation(line: 9543, column: 10, scope: !12611)
!12614 = !DILocation(line: 9542, column: 7, scope: !12586)
!12615 = !DILocation(line: 9547, column: 1, scope: !12586)
!12616 = distinct !DISubprogram(name: "range_in_array_bounds_p", scope: !3, file: !3, line: 9554, type: !6091, scopeLine: 9555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12617)
!12617 = !{!12618, !12619, !12620, !12621, !12622, !12623}
!12618 = !DILocalVariable(name: "ref", arg: 1, scope: !12616, file: !3, line: 9554, type: !1457)
!12619 = !DILocalVariable(name: "domain_type", scope: !12616, file: !3, line: 9556, type: !1457)
!12620 = !DILocalVariable(name: "range_min", scope: !12616, file: !3, line: 9557, type: !1457)
!12621 = !DILocalVariable(name: "range_max", scope: !12616, file: !3, line: 9557, type: !1457)
!12622 = !DILocalVariable(name: "min", scope: !12616, file: !3, line: 9557, type: !1457)
!12623 = !DILocalVariable(name: "max", scope: !12616, file: !3, line: 9557, type: !1457)
!12624 = !DILocation(line: 0, scope: !12616)
!12625 = !DILocation(line: 9556, column: 22, scope: !12616)
!12626 = !DILocation(line: 9559, column: 15, scope: !12616)
!12627 = !DILocation(line: 9560, column: 15, scope: !12616)
!12628 = !DILocation(line: 9561, column: 8, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12616, file: !3, line: 9561, column: 7)
!12630 = !DILocation(line: 9562, column: 11, scope: !12629)
!12631 = !DILocation(line: 9562, column: 7, scope: !12629)
!12632 = !DILocation(line: 9563, column: 10, scope: !12629)
!12633 = !DILocation(line: 9563, column: 32, scope: !12629)
!12634 = !DILocation(line: 9564, column: 7, scope: !12629)
!12635 = !DILocation(line: 9564, column: 10, scope: !12629)
!12636 = !DILocation(line: 9564, column: 32, scope: !12629)
!12637 = !DILocation(line: 9561, column: 7, scope: !12616)
!12638 = !DILocation(line: 9567, column: 9, scope: !12616)
!12639 = !DILocation(line: 9568, column: 9, scope: !12616)
!12640 = !DILocation(line: 9569, column: 8, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12616, file: !3, line: 9569, column: 7)
!12642 = !DILocation(line: 9570, column: 11, scope: !12641)
!12643 = !DILocation(line: 9570, column: 7, scope: !12641)
!12644 = !DILocation(line: 9571, column: 10, scope: !12641)
!12645 = !DILocation(line: 9571, column: 26, scope: !12641)
!12646 = !DILocation(line: 9572, column: 7, scope: !12641)
!12647 = !DILocation(line: 9572, column: 10, scope: !12641)
!12648 = !DILocation(line: 9572, column: 26, scope: !12641)
!12649 = !DILocation(line: 9569, column: 7, scope: !12616)
!12650 = !DILocation(line: 9575, column: 7, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12616, file: !3, line: 9575, column: 7)
!12652 = !DILocation(line: 9576, column: 7, scope: !12651)
!12653 = !DILocation(line: 9576, column: 10, scope: !12651)
!12654 = !DILocation(line: 9575, column: 7, scope: !12616)
!12655 = !DILocation(line: 9580, column: 1, scope: !12616)
!12656 = distinct !DISubprogram(name: "needs_to_live_in_memory", scope: !3, file: !3, line: 9586, type: !4510, scopeLine: 9587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12657)
!12657 = !{!12658}
!12658 = !DILocalVariable(name: "t", arg: 1, scope: !12656, file: !3, line: 9586, type: !2774)
!12659 = !DILocation(line: 0, scope: !12656)
!12660 = !DILocation(line: 9588, column: 7, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12656, file: !3, line: 9588, column: 7)
!12662 = !DILocation(line: 9588, column: 21, scope: !12661)
!12663 = !DILocation(line: 9588, column: 7, scope: !12656)
!12664 = !DILocation(line: 9589, column: 9, scope: !12661)
!12665 = !DILocation(line: 9591, column: 11, scope: !12656)
!12666 = !DILocation(line: 9589, column: 5, scope: !12661)
!12667 = !DILocation(line: 9592, column: 4, scope: !12656)
!12668 = !DILocation(line: 9592, column: 7, scope: !12656)
!12669 = !DILocation(line: 9593, column: 4, scope: !12656)
!12670 = !DILocation(line: 9593, column: 8, scope: !12656)
!12671 = !DILocation(line: 9593, column: 22, scope: !12656)
!12672 = !DILocation(line: 9594, column: 8, scope: !12656)
!12673 = !DILocation(line: 9594, column: 33, scope: !12656)
!12674 = !DILocation(line: 9594, column: 11, scope: !12656)
!12675 = !DILocation(line: 9591, column: 3, scope: !12656)
!12676 = distinct !DISubprogram(name: "is_global_var", scope: !12677, file: !12677, line: 575, type: !4510, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12678)
!12677 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!12678 = !{!12679}
!12679 = !DILocalVariable(name: "t", arg: 1, scope: !12676, file: !12677, line: 575, type: !2774)
!12680 = !DILocation(line: 0, scope: !12676)
!12681 = !DILocation(line: 577, column: 11, scope: !12676)
!12682 = !DILocation(line: 577, column: 27, scope: !12676)
!12683 = !DILocation(line: 577, column: 30, scope: !12676)
!12684 = !DILocation(line: 577, column: 3, scope: !12676)
!12685 = distinct !DISubprogram(name: "fields_compatible_p", scope: !3, file: !3, line: 9602, type: !10819, scopeLine: 9603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12686)
!12686 = !{!12687, !12688}
!12687 = !DILocalVariable(name: "f1", arg: 1, scope: !12685, file: !3, line: 9602, type: !2774)
!12688 = !DILocalVariable(name: "f2", arg: 2, scope: !12685, file: !3, line: 9602, type: !2774)
!12689 = !DILocation(line: 0, scope: !12685)
!12690 = !DILocation(line: 9604, column: 25, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12685, file: !3, line: 9604, column: 7)
!12692 = !DILocation(line: 9605, column: 4, scope: !12691)
!12693 = !DILocation(line: 9604, column: 8, scope: !12691)
!12694 = !DILocation(line: 9604, column: 7, scope: !12685)
!12695 = !DILocation(line: 9608, column: 25, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12685, file: !3, line: 9608, column: 7)
!12697 = !DILocation(line: 9609, column: 25, scope: !12696)
!12698 = !DILocation(line: 9608, column: 8, scope: !12696)
!12699 = !DILocation(line: 9608, column: 7, scope: !12685)
!12700 = !DILocation(line: 9612, column: 28, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12685, file: !3, line: 9612, column: 7)
!12702 = !DILocation(line: 9612, column: 44, scope: !12701)
!12703 = !DILocation(line: 9612, column: 8, scope: !12701)
!12704 = !DILocation(line: 9616, column: 1, scope: !12685)
!12705 = distinct !DISubprogram(name: "find_compatible_field", scope: !3, file: !3, line: 9621, type: !4530, scopeLine: 9622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12706)
!12706 = !{!12707, !12708, !12709}
!12707 = !DILocalVariable(name: "record", arg: 1, scope: !12705, file: !3, line: 9621, type: !1457)
!12708 = !DILocalVariable(name: "orig_field", arg: 2, scope: !12705, file: !3, line: 9621, type: !1457)
!12709 = !DILocalVariable(name: "f", scope: !12705, file: !3, line: 9623, type: !1457)
!12710 = !DILocation(line: 0, scope: !12705)
!12711 = !DILocation(line: 9625, column: 12, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12705, file: !3, line: 9625, column: 3)
!12713 = !DILocation(line: 9625, column: 8, scope: !12712)
!12714 = !DILocation(line: 0, scope: !12712)
!12715 = !DILocation(line: 9625, column: 3, scope: !12712)
!12716 = !DILocation(line: 9626, column: 9, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !3, line: 9626, column: 9)
!12718 = distinct !DILexicalBlock(scope: !12712, file: !3, line: 9625, column: 3)
!12719 = !DILocation(line: 9626, column: 23, scope: !12717)
!12720 = !DILocation(line: 9627, column: 2, scope: !12717)
!12721 = !DILocation(line: 9627, column: 5, scope: !12717)
!12722 = !DILocation(line: 9626, column: 9, scope: !12718)
!12723 = !DILocation(line: 9625, column: 42, scope: !12718)
!12724 = !DILocation(line: 9625, column: 3, scope: !12718)
!12725 = distinct !{!12725, !12715, !12726}
!12726 = !DILocation(line: 9628, column: 14, scope: !12712)
!12727 = !DILocation(line: 9631, column: 7, scope: !12705)
!12728 = !DILocation(line: 9632, column: 7, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12705, file: !3, line: 9632, column: 7)
!12730 = !DILocation(line: 9632, column: 9, scope: !12729)
!12731 = !DILocation(line: 9632, column: 12, scope: !12729)
!12732 = !DILocation(line: 9632, column: 26, scope: !12729)
!12733 = !DILocation(line: 9633, column: 7, scope: !12729)
!12734 = !DILocation(line: 9633, column: 10, scope: !12729)
!12735 = !DILocation(line: 9632, column: 7, scope: !12705)
!12736 = !DILocation(line: 9638, column: 3, scope: !12705)
!12737 = !DILocation(line: 9639, column: 1, scope: !12705)
!12738 = distinct !DISubprogram(name: "int_cst_value", scope: !3, file: !3, line: 9644, type: !5702, scopeLine: 9645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12739)
!12739 = !{!12740, !12741, !12742, !12743}
!12740 = !DILocalVariable(name: "x", arg: 1, scope: !12738, file: !3, line: 9644, type: !2774)
!12741 = !DILocalVariable(name: "bits", scope: !12738, file: !3, line: 9646, type: !7)
!12742 = !DILocalVariable(name: "val", scope: !12738, file: !3, line: 9647, type: !1511)
!12743 = !DILocalVariable(name: "negative", scope: !12744, file: !3, line: 9655, type: !1449)
!12744 = distinct !DILexicalBlock(scope: !12745, file: !3, line: 9654, column: 5)
!12745 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 9653, column: 7)
!12746 = !DILocation(line: 0, scope: !12738)
!12747 = !DILocation(line: 9646, column: 19, scope: !12738)
!12748 = !DILocation(line: 9647, column: 32, scope: !12738)
!12749 = !DILocation(line: 9650, column: 3, scope: !12738)
!12750 = !DILocation(line: 9653, column: 12, scope: !12745)
!12751 = !DILocation(line: 9653, column: 7, scope: !12738)
!12752 = !DILocation(line: 9655, column: 38, scope: !12744)
!12753 = !DILocation(line: 9655, column: 29, scope: !12744)
!12754 = !DILocation(line: 9655, column: 49, scope: !12744)
!12755 = !DILocation(line: 0, scope: !12744)
!12756 = !DILocation(line: 0, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 9656, column: 11)
!12758 = !DILocation(line: 9656, column: 11, scope: !12744)
!12759 = !DILocation(line: 9662, column: 3, scope: !12738)
!12760 = distinct !DISubprogram(name: "widest_int_cst_value", scope: !3, file: !3, line: 9668, type: !5702, scopeLine: 9669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12761)
!12761 = !{!12762, !12763, !12764, !12765}
!12762 = !DILocalVariable(name: "x", arg: 1, scope: !12760, file: !3, line: 9668, type: !2774)
!12763 = !DILocalVariable(name: "bits", scope: !12760, file: !3, line: 9670, type: !7)
!12764 = !DILocalVariable(name: "val", scope: !12760, file: !3, line: 9671, type: !1511)
!12765 = !DILocalVariable(name: "negative", scope: !12766, file: !3, line: 9685, type: !1449)
!12766 = distinct !DILexicalBlock(scope: !12767, file: !3, line: 9684, column: 5)
!12767 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 9683, column: 7)
!12768 = !DILocation(line: 0, scope: !12760)
!12769 = !DILocation(line: 9670, column: 19, scope: !12760)
!12770 = !DILocation(line: 9671, column: 34, scope: !12760)
!12771 = !DILocation(line: 9679, column: 3, scope: !12760)
!12772 = !DILocation(line: 9683, column: 12, scope: !12767)
!12773 = !DILocation(line: 9683, column: 7, scope: !12760)
!12774 = !DILocation(line: 9685, column: 38, scope: !12766)
!12775 = !DILocation(line: 9685, column: 29, scope: !12766)
!12776 = !DILocation(line: 9685, column: 49, scope: !12766)
!12777 = !DILocation(line: 0, scope: !12766)
!12778 = !DILocation(line: 0, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12766, file: !3, line: 9686, column: 11)
!12780 = !DILocation(line: 9686, column: 11, scope: !12766)
!12781 = !DILocation(line: 9692, column: 3, scope: !12760)
!12782 = distinct !DISubprogram(name: "signed_or_unsigned_type_for", scope: !3, file: !3, line: 9700, type: !5448, scopeLine: 9701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12783)
!12783 = !{!12784, !12785, !12786}
!12784 = !DILocalVariable(name: "unsignedp", arg: 1, scope: !12782, file: !3, line: 9700, type: !1450)
!12785 = !DILocalVariable(name: "type", arg: 2, scope: !12782, file: !3, line: 9700, type: !1457)
!12786 = !DILocalVariable(name: "t", scope: !12782, file: !3, line: 9702, type: !1457)
!12787 = !DILocation(line: 0, scope: !12782)
!12788 = !DILocation(line: 9703, column: 7, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 9703, column: 7)
!12790 = !DILocation(line: 9703, column: 7, scope: !12782)
!12791 = !DILocation(line: 9708, column: 12, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12793, file: !3, line: 9708, column: 11)
!12793 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 9704, column: 5)
!12794 = !DILocation(line: 9708, column: 11, scope: !12793)
!12795 = !DILocation(line: 9709, column: 6, scope: !12792)
!12796 = !DILocation(line: 0, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 9714, column: 7)
!12798 = !DILocation(line: 9714, column: 8, scope: !12797)
!12799 = !DILocation(line: 9712, column: 5, scope: !12793)
!12800 = !DILocation(line: 9711, column: 26, scope: !12792)
!12801 = !DILocation(line: 9711, column: 41, scope: !12792)
!12802 = !DILocation(line: 9711, column: 9, scope: !12792)
!12803 = !DILocation(line: 9711, column: 2, scope: !12792)
!12804 = !DILocation(line: 9714, column: 28, scope: !12797)
!12805 = !DILocation(line: 9714, column: 31, scope: !12797)
!12806 = !DILocation(line: 9714, column: 49, scope: !12797)
!12807 = !DILocation(line: 9714, column: 7, scope: !12782)
!12808 = !DILocation(line: 9717, column: 27, scope: !12782)
!12809 = !DILocation(line: 9717, column: 42, scope: !12782)
!12810 = !DILocation(line: 9717, column: 10, scope: !12782)
!12811 = !DILocation(line: 9717, column: 3, scope: !12782)
!12812 = !DILocation(line: 9718, column: 1, scope: !12782)
!12813 = distinct !DISubprogram(name: "unsigned_type_for", scope: !3, file: !3, line: 9723, type: !3923, scopeLine: 9724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12814)
!12814 = !{!12815}
!12815 = !DILocalVariable(name: "type", arg: 1, scope: !12813, file: !3, line: 9723, type: !1457)
!12816 = !DILocation(line: 0, scope: !12813)
!12817 = !DILocation(line: 9725, column: 10, scope: !12813)
!12818 = !DILocation(line: 9725, column: 3, scope: !12813)
!12819 = distinct !DISubprogram(name: "signed_type_for", scope: !3, file: !3, line: 9731, type: !3923, scopeLine: 9732, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12820)
!12820 = !{!12821}
!12821 = !DILocalVariable(name: "type", arg: 1, scope: !12819, file: !3, line: 9731, type: !1457)
!12822 = !DILocation(line: 0, scope: !12819)
!12823 = !DILocation(line: 9733, column: 10, scope: !12819)
!12824 = !DILocation(line: 9733, column: 3, scope: !12819)
!12825 = distinct !DISubprogram(name: "upper_bound_in_type", scope: !3, file: !3, line: 9740, type: !4530, scopeLine: 9741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12826)
!12826 = !{!12827, !12828, !12829, !12830, !12831, !12832, !12833, !12834}
!12827 = !DILocalVariable(name: "outer", arg: 1, scope: !12825, file: !3, line: 9740, type: !1457)
!12828 = !DILocalVariable(name: "inner", arg: 2, scope: !12825, file: !3, line: 9740, type: !1457)
!12829 = !DILocalVariable(name: "lo", scope: !12825, file: !3, line: 9742, type: !1511)
!12830 = !DILocalVariable(name: "hi", scope: !12825, file: !3, line: 9742, type: !1511)
!12831 = !DILocalVariable(name: "det", scope: !12825, file: !3, line: 9743, type: !7)
!12832 = !DILocalVariable(name: "oprec", scope: !12825, file: !3, line: 9744, type: !7)
!12833 = !DILocalVariable(name: "iprec", scope: !12825, file: !3, line: 9745, type: !7)
!12834 = !DILocalVariable(name: "prec", scope: !12825, file: !3, line: 9746, type: !7)
!12835 = !DILocation(line: 0, scope: !12825)
!12836 = !DILocation(line: 9744, column: 20, scope: !12825)
!12837 = !DILocation(line: 9745, column: 20, scope: !12825)
!12838 = !DILocation(line: 9749, column: 17, scope: !12825)
!12839 = !DILocation(line: 9749, column: 10, scope: !12825)
!12840 = !DILocation(line: 9750, column: 10, scope: !12825)
!12841 = !DILocation(line: 9750, column: 7, scope: !12825)
!12842 = !DILocation(line: 9751, column: 10, scope: !12825)
!12843 = !DILocation(line: 9751, column: 7, scope: !12825)
!12844 = !DILocation(line: 9754, column: 3, scope: !12825)
!12845 = !DILocation(line: 9759, column: 20, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 9755, column: 5)
!12847 = !DILocation(line: 9760, column: 7, scope: !12846)
!12848 = !DILocation(line: 9768, column: 20, scope: !12846)
!12849 = !DILocation(line: 9769, column: 7, scope: !12846)
!12850 = !DILocation(line: 9773, column: 7, scope: !12846)
!12851 = !DILocation(line: 9781, column: 7, scope: !12846)
!12852 = !DILocation(line: 9787, column: 12, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 9787, column: 7)
!12854 = !DILocation(line: 9787, column: 7, scope: !12825)
!12855 = !DILocation(line: 9800, column: 10, scope: !12825)
!12856 = !DILocation(line: 9800, column: 3, scope: !12825)
!12857 = distinct !DISubprogram(name: "lower_bound_in_type", scope: !3, file: !3, line: 9807, type: !4530, scopeLine: 9808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12858)
!12858 = !{!12859, !12860, !12861, !12862, !12863, !12864, !12865}
!12859 = !DILocalVariable(name: "outer", arg: 1, scope: !12857, file: !3, line: 9807, type: !1457)
!12860 = !DILocalVariable(name: "inner", arg: 2, scope: !12857, file: !3, line: 9807, type: !1457)
!12861 = !DILocalVariable(name: "lo", scope: !12857, file: !3, line: 9809, type: !1511)
!12862 = !DILocalVariable(name: "hi", scope: !12857, file: !3, line: 9809, type: !1511)
!12863 = !DILocalVariable(name: "oprec", scope: !12857, file: !3, line: 9810, type: !7)
!12864 = !DILocalVariable(name: "iprec", scope: !12857, file: !3, line: 9811, type: !7)
!12865 = !DILocalVariable(name: "prec", scope: !12866, file: !3, line: 9827, type: !7)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !3, line: 9822, column: 5)
!12867 = distinct !DILexicalBlock(scope: !12857, file: !3, line: 9815, column: 7)
!12868 = !DILocation(line: 0, scope: !12857)
!12869 = !DILocation(line: 9810, column: 20, scope: !12857)
!12870 = !DILocation(line: 9811, column: 20, scope: !12857)
!12871 = !DILocation(line: 9815, column: 7, scope: !12867)
!12872 = !DILocation(line: 9819, column: 7, scope: !12867)
!12873 = !DILocation(line: 9819, column: 17, scope: !12867)
!12874 = !DILocation(line: 9819, column: 25, scope: !12867)
!12875 = !DILocation(line: 9819, column: 28, scope: !12867)
!12876 = !DILocation(line: 9815, column: 7, scope: !12857)
!12877 = !DILocation(line: 9827, column: 23, scope: !12866)
!12878 = !DILocation(line: 0, scope: !12866)
!12879 = !DILocation(line: 9829, column: 16, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12866, file: !3, line: 9829, column: 11)
!12881 = !DILocation(line: 9829, column: 11, scope: !12866)
!12882 = !DILocation(line: 9832, column: 48, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12880, file: !3, line: 9830, column: 2)
!12884 = !DILocation(line: 9832, column: 39, scope: !12883)
!12885 = !DILocation(line: 9833, column: 2, scope: !12883)
!12886 = !DILocation(line: 9837, column: 37, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12880, file: !3, line: 9835, column: 2)
!12888 = !DILocation(line: 9837, column: 3, scope: !12887)
!12889 = !DILocation(line: 0, scope: !12867)
!12890 = !DILocation(line: 9842, column: 10, scope: !12857)
!12891 = !DILocation(line: 9842, column: 3, scope: !12857)
!12892 = distinct !DISubprogram(name: "operand_equal_for_phi_arg_p", scope: !3, file: !3, line: 9852, type: !5468, scopeLine: 9853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12893)
!12893 = !{!12894, !12895}
!12894 = !DILocalVariable(name: "arg0", arg: 1, scope: !12892, file: !3, line: 9852, type: !2774)
!12895 = !DILocalVariable(name: "arg1", arg: 2, scope: !12892, file: !3, line: 9852, type: !2774)
!12896 = !DILocation(line: 0, scope: !12892)
!12897 = !DILocation(line: 9854, column: 12, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12892, file: !3, line: 9854, column: 7)
!12899 = !DILocation(line: 9854, column: 7, scope: !12892)
!12900 = !DILocation(line: 9856, column: 7, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12892, file: !3, line: 9856, column: 7)
!12902 = !DILocation(line: 9856, column: 24, scope: !12901)
!12903 = !DILocation(line: 9856, column: 36, scope: !12901)
!12904 = !DILocation(line: 9856, column: 39, scope: !12901)
!12905 = !DILocation(line: 9856, column: 56, scope: !12901)
!12906 = !DILocation(line: 9856, column: 7, scope: !12892)
!12907 = !DILocation(line: 9858, column: 10, scope: !12892)
!12908 = !DILocation(line: 9858, column: 3, scope: !12892)
!12909 = !DILocation(line: 9859, column: 1, scope: !12892)
!12910 = distinct !DISubprogram(name: "num_ending_zeros", scope: !3, file: !3, line: 9866, type: !5504, scopeLine: 9867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12911)
!12911 = !{!12912, !12913, !12914, !12915, !12916, !12917}
!12912 = !DILocalVariable(name: "x", arg: 1, scope: !12910, file: !3, line: 9866, type: !2774)
!12913 = !DILocalVariable(name: "fr", scope: !12910, file: !3, line: 9868, type: !1511)
!12914 = !DILocalVariable(name: "nfr", scope: !12910, file: !3, line: 9868, type: !1511)
!12915 = !DILocalVariable(name: "num", scope: !12910, file: !3, line: 9869, type: !7)
!12916 = !DILocalVariable(name: "abits", scope: !12910, file: !3, line: 9869, type: !7)
!12917 = !DILocalVariable(name: "type", scope: !12910, file: !3, line: 9870, type: !1457)
!12918 = !DILocation(line: 0, scope: !12910)
!12919 = !DILocation(line: 9870, column: 15, scope: !12910)
!12920 = !DILocation(line: 9872, column: 7, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12910, file: !3, line: 9872, column: 7)
!12922 = !DILocation(line: 9872, column: 28, scope: !12921)
!12923 = !DILocation(line: 9872, column: 7, scope: !12910)
!12924 = !DILocation(line: 9875, column: 12, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 9873, column: 5)
!12926 = !DILocation(line: 0, scope: !12921)
!12927 = !DILocation(line: 9876, column: 5, scope: !12925)
!12928 = !DILocation(line: 9883, column: 8, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12910, file: !3, line: 9883, column: 3)
!12930 = !DILocation(line: 0, scope: !12929)
!12931 = !DILocation(line: 9883, column: 3, scope: !12929)
!12932 = !DILocation(line: 9885, column: 16, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 9884, column: 5)
!12934 = distinct !DILexicalBlock(scope: !12929, file: !3, line: 9883, column: 3)
!12935 = !DILocation(line: 9886, column: 15, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 9886, column: 11)
!12937 = !DILocation(line: 9886, column: 24, scope: !12936)
!12938 = !DILocation(line: 9886, column: 11, scope: !12933)
!12939 = !DILocation(line: 9883, column: 57, scope: !12934)
!12940 = !DILocation(line: 9883, column: 3, scope: !12934)
!12941 = distinct !{!12941, !12931, !12942}
!12942 = !DILocation(line: 9891, column: 5, scope: !12929)
!12943 = !DILocation(line: 9893, column: 13, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12910, file: !3, line: 9893, column: 7)
!12945 = !DILocation(line: 9893, column: 11, scope: !12944)
!12946 = !DILocation(line: 9893, column: 7, scope: !12910)
!12947 = !DILocation(line: 9894, column: 5, scope: !12944)
!12948 = !DILocation(line: 9896, column: 36, scope: !12910)
!12949 = !DILocation(line: 9896, column: 10, scope: !12910)
!12950 = !DILocation(line: 9896, column: 3, scope: !12910)
!12951 = distinct !DISubprogram(name: "VEC_constructor_elt_base_iterate", scope: !6, file: !6, line: 1537, type: !12952, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12955)
!12952 = !DISubroutineType(types: !12953)
!12953 = !{!1450, !4601, !7, !12954}
!12954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!12955 = !{!12956, !12957, !12958}
!12956 = !DILocalVariable(name: "vec_", arg: 1, scope: !12951, file: !6, line: 1537, type: !4601)
!12957 = !DILocalVariable(name: "ix_", arg: 2, scope: !12951, file: !6, line: 1537, type: !7)
!12958 = !DILocalVariable(name: "ptr", arg: 3, scope: !12951, file: !6, line: 1537, type: !12954)
!12959 = !DILocation(line: 0, scope: !12951)
!12960 = !DILocation(line: 1537, column: 1, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12951, file: !6, line: 1537, column: 1)
!12962 = !DILocation(line: 1537, column: 1, scope: !12951)
!12963 = !DILocation(line: 1537, column: 1, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12961, file: !6, line: 1537, column: 1)
!12965 = !DILocation(line: 1537, column: 1, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12961, file: !6, line: 1537, column: 1)
!12967 = !DILocation(line: 0, scope: !12961)
!12968 = distinct !DISubprogram(name: "tsi_start", scope: !10988, file: !10988, line: 38, type: !12969, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12971)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!10987, !1457}
!12971 = !{!12972, !12973}
!12972 = !DILocalVariable(name: "t", arg: 1, scope: !12968, file: !10988, line: 38, type: !1457)
!12973 = !DILocalVariable(name: "i", scope: !12968, file: !10988, line: 40, type: !10987)
!12974 = !DILocation(line: 0, scope: !12968)
!12975 = !DILocation(line: 42, column: 11, scope: !12968)
!12976 = !DILocation(line: 45, column: 3, scope: !12968)
!12977 = distinct !DISubprogram(name: "tsi_end_p", scope: !10988, file: !10988, line: 60, type: !12978, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12980)
!12978 = !DISubroutineType(types: !12979)
!12979 = !{!1449, !10987}
!12980 = !{!12981}
!12981 = !DILocalVariable(name: "i", arg: 1, scope: !12977, file: !10988, line: 60, type: !10987)
!12982 = !DILocation(line: 62, column: 16, scope: !12977)
!12983 = !DILocation(line: 62, column: 10, scope: !12977)
!12984 = !DILocation(line: 62, column: 3, scope: !12977)
!12985 = distinct !DISubprogram(name: "tsi_stmt_ptr", scope: !10988, file: !10988, line: 84, type: !12986, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12988)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{!1964, !10987}
!12988 = !{!12989}
!12989 = !DILocalVariable(name: "i", arg: 1, scope: !12985, file: !10988, line: 84, type: !10987)
!12990 = !DILocation(line: 86, column: 18, scope: !12985)
!12991 = !DILocation(line: 86, column: 3, scope: !12985)
!12992 = distinct !DISubprogram(name: "tsi_next", scope: !10988, file: !10988, line: 72, type: !12993, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12996)
!12993 = !DISubroutineType(types: !12994)
!12994 = !{null, !12995}
!12995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10987, size: 64)
!12996 = !{!12997}
!12997 = !DILocalVariable(name: "i", arg: 1, scope: !12992, file: !10988, line: 72, type: !12995)
!12998 = !DILocation(line: 0, scope: !12992)
!12999 = !DILocation(line: 74, column: 15, scope: !12992)
!13000 = !DILocation(line: 74, column: 20, scope: !12992)
!13001 = !DILocation(line: 74, column: 10, scope: !12992)
!13002 = !DILocation(line: 75, column: 1, scope: !12992)
!13003 = distinct !DISubprogram(name: "walk_type_fields", scope: !3, file: !3, line: 9914, type: !13004, scopeLine: 9916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13006)
!13004 = !DISubroutineType(types: !13005)
!13005 = !{!1457, !1457, !10960, !1454, !2785, !10964}
!13006 = !{!13007, !13008, !13009, !13010, !13011, !13012, !13013}
!13007 = !DILocalVariable(name: "type", arg: 1, scope: !13003, file: !3, line: 9914, type: !1457)
!13008 = !DILocalVariable(name: "func", arg: 2, scope: !13003, file: !3, line: 9914, type: !10960)
!13009 = !DILocalVariable(name: "data", arg: 3, scope: !13003, file: !3, line: 9914, type: !1454)
!13010 = !DILocalVariable(name: "pset", arg: 4, scope: !13003, file: !3, line: 9915, type: !2785)
!13011 = !DILocalVariable(name: "lh", arg: 5, scope: !13003, file: !3, line: 9915, type: !10964)
!13012 = !DILocalVariable(name: "result", scope: !13003, file: !3, line: 9917, type: !1457)
!13013 = !DILocalVariable(name: "arg", scope: !13014, file: !3, line: 9957, type: !1457)
!13014 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9956, column: 7)
!13015 = distinct !DILexicalBlock(scope: !13003, file: !3, line: 9920, column: 5)
!13016 = !DILocation(line: 0, scope: !13003)
!13017 = !DILocation(line: 9919, column: 11, scope: !13003)
!13018 = !DILocation(line: 9919, column: 3, scope: !13003)
!13019 = !DILocation(line: 9930, column: 11, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9930, column: 11)
!13021 = !DILocation(line: 9931, column: 4, scope: !13020)
!13022 = !DILocation(line: 9931, column: 7, scope: !13020)
!13023 = !DILocation(line: 9932, column: 4, scope: !13020)
!13024 = !DILocation(line: 9932, column: 7, scope: !13020)
!13025 = !DILocation(line: 9933, column: 8, scope: !13020)
!13026 = !DILocation(line: 9933, column: 4, scope: !13020)
!13027 = !DILocation(line: 9930, column: 11, scope: !13015)
!13028 = !DILocation(line: 9935, column: 13, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 9934, column: 2)
!13030 = !DILocation(line: 9937, column: 8, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13029, file: !3, line: 9937, column: 8)
!13032 = !DILocation(line: 9937, column: 8, scope: !13029)
!13033 = !DILocation(line: 9946, column: 7, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9946, column: 7)
!13035 = !DILocation(line: 9946, column: 7, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13034, file: !3, line: 9946, column: 7)
!13037 = !DILocation(line: 9950, column: 7, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9950, column: 7)
!13039 = !DILocation(line: 9950, column: 7, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13038, file: !3, line: 9950, column: 7)
!13041 = !DILocation(line: 9955, column: 7, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9955, column: 7)
!13043 = !DILocation(line: 9955, column: 7, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 9955, column: 7)
!13045 = !DILocation(line: 9960, column: 13, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13014, file: !3, line: 9960, column: 2)
!13047 = !DILocation(line: 9960, column: 7, scope: !13046)
!13048 = !DILocation(line: 0, scope: !13046)
!13049 = !DILocation(line: 0, scope: !13014)
!13050 = !DILocation(line: 9960, column: 2, scope: !13046)
!13051 = !DILocation(line: 9961, column: 4, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13053, file: !3, line: 9961, column: 4)
!13053 = distinct !DILexicalBlock(scope: !13046, file: !3, line: 9960, column: 2)
!13054 = !DILocation(line: 9961, column: 4, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13052, file: !3, line: 9961, column: 4)
!13056 = !DILocation(line: 9960, column: 47, scope: !13053)
!13057 = !DILocation(line: 9960, column: 2, scope: !13053)
!13058 = distinct !{!13058, !13050, !13059}
!13059 = !DILocation(line: 9961, column: 4, scope: !13046)
!13060 = !DILocation(line: 9969, column: 11, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9969, column: 11)
!13062 = !DILocation(line: 9970, column: 4, scope: !13061)
!13063 = !DILocation(line: 9970, column: 9, scope: !13061)
!13064 = !DILocation(line: 9971, column: 8, scope: !13061)
!13065 = !DILocation(line: 9971, column: 40, scope: !13061)
!13066 = !DILocation(line: 9969, column: 11, scope: !13015)
!13067 = !DILocation(line: 9972, column: 2, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 9972, column: 2)
!13069 = !DILocation(line: 9972, column: 2, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 9972, column: 2)
!13071 = !DILocation(line: 9973, column: 7, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9973, column: 7)
!13073 = !DILocation(line: 9973, column: 7, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13072, file: !3, line: 9973, column: 7)
!13075 = !DILocation(line: 9977, column: 7, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9977, column: 7)
!13077 = !DILocation(line: 9977, column: 7, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13076, file: !3, line: 9977, column: 7)
!13079 = !DILocation(line: 9978, column: 7, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 9978, column: 7)
!13081 = !DILocation(line: 9978, column: 7, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13080, file: !3, line: 9978, column: 7)
!13083 = !DILocation(line: 9985, column: 3, scope: !13003)
!13084 = !DILocation(line: 9986, column: 1, scope: !13003)
!13085 = distinct !DISubprogram(name: "walk_tree_without_duplicates_1", scope: !3, file: !3, line: 10291, type: !13086, scopeLine: 10293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13088)
!13086 = !DISubroutineType(types: !13087)
!13087 = !{!1457, !1964, !10960, !1454, !10964}
!13088 = !{!13089, !13090, !13091, !13092, !13093, !13094}
!13089 = !DILocalVariable(name: "tp", arg: 1, scope: !13085, file: !3, line: 10291, type: !1964)
!13090 = !DILocalVariable(name: "func", arg: 2, scope: !13085, file: !3, line: 10291, type: !10960)
!13091 = !DILocalVariable(name: "data", arg: 3, scope: !13085, file: !3, line: 10291, type: !1454)
!13092 = !DILocalVariable(name: "lh", arg: 4, scope: !13085, file: !3, line: 10292, type: !10964)
!13093 = !DILocalVariable(name: "result", scope: !13085, file: !3, line: 10294, type: !1457)
!13094 = !DILocalVariable(name: "pset", scope: !13085, file: !3, line: 10295, type: !2785)
!13095 = !DILocation(line: 0, scope: !13085)
!13096 = !DILocation(line: 10297, column: 10, scope: !13085)
!13097 = !DILocation(line: 10298, column: 12, scope: !13085)
!13098 = !DILocation(line: 10299, column: 3, scope: !13085)
!13099 = !DILocation(line: 10300, column: 3, scope: !13085)
!13100 = distinct !DISubprogram(name: "call_expr_arglist", scope: !3, file: !3, line: 10321, type: !3923, scopeLine: 10322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13101)
!13101 = !{!13102, !13103, !13104}
!13102 = !DILocalVariable(name: "exp", arg: 1, scope: !13100, file: !3, line: 10321, type: !1457)
!13103 = !DILocalVariable(name: "arglist", scope: !13100, file: !3, line: 10323, type: !1457)
!13104 = !DILocalVariable(name: "i", scope: !13100, file: !3, line: 10324, type: !1450)
!13105 = !DILocation(line: 0, scope: !13100)
!13106 = !DILocation(line: 10325, column: 12, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 10325, column: 3)
!13108 = !DILocation(line: 10325, column: 8, scope: !13107)
!13109 = !DILocation(line: 10325, column: 41, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 10325, column: 3)
!13111 = !DILocation(line: 10325, column: 3, scope: !13107)
!13112 = !DILocation(line: 10326, column: 15, scope: !13110)
!13113 = !DILocation(line: 10325, column: 48, scope: !13110)
!13114 = !DILocation(line: 10325, column: 3, scope: !13110)
!13115 = distinct !{!13115, !13111, !13116}
!13116 = !DILocation(line: 10326, column: 15, scope: !13107)
!13117 = !DILocation(line: 10327, column: 3, scope: !13100)
!13118 = distinct !DISubprogram(name: "create_artificial_label", scope: !3, file: !3, line: 10336, type: !12403, scopeLine: 10337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13119)
!13119 = !{!13120, !13121}
!13120 = !DILocalVariable(name: "loc", arg: 1, scope: !13118, file: !3, line: 10336, type: !1582)
!13121 = !DILocalVariable(name: "lab", scope: !13118, file: !3, line: 10338, type: !1457)
!13122 = !DILocation(line: 0, scope: !13118)
!13123 = !DILocation(line: 10338, column: 14, scope: !13118)
!13124 = !DILocation(line: 10341, column: 3, scope: !13118)
!13125 = !DILocation(line: 10341, column: 25, scope: !13118)
!13126 = !DILocation(line: 10342, column: 24, scope: !13118)
!13127 = !DILocation(line: 10343, column: 24, scope: !13118)
!13128 = !DILocation(line: 10343, column: 3, scope: !13118)
!13129 = !DILocation(line: 10343, column: 22, scope: !13118)
!13130 = !DILocation(line: 10344, column: 3, scope: !13118)
!13131 = distinct !DISubprogram(name: "get_name", scope: !3, file: !3, line: 10352, type: !13132, scopeLine: 10353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13134)
!13132 = !DISubroutineType(types: !13133)
!13133 = !{!1455, !1457}
!13134 = !{!13135, !13136}
!13135 = !DILocalVariable(name: "t", arg: 1, scope: !13131, file: !3, line: 10352, type: !1457)
!13136 = !DILocalVariable(name: "stripped_decl", scope: !13131, file: !3, line: 10354, type: !1457)
!13137 = !DILocation(line: 10365, column: 11, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 10363, column: 2)
!13139 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 10361, column: 5)
!13140 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 10358, column: 7)
!13141 = !DILocation(line: 0, scope: !13131)
!13142 = !DILocation(line: 10357, column: 3, scope: !13131)
!13143 = !DILocation(line: 10358, column: 7, scope: !13140)
!13144 = !DILocation(line: 10358, column: 30, scope: !13140)
!13145 = !DILocation(line: 10358, column: 33, scope: !13140)
!13146 = !DILocation(line: 10358, column: 7, scope: !13131)
!13147 = !DILocation(line: 10359, column: 12, scope: !13140)
!13148 = !DILocation(line: 10359, column: 5, scope: !13140)
!13149 = !DILocation(line: 10362, column: 7, scope: !13139)
!13150 = !DILocation(line: 10365, column: 21, scope: !13138)
!13151 = !DILocation(line: 10370, column: 1, scope: !13131)
!13152 = !DILocation(line: 0, scope: !13140)
!13153 = distinct !DISubprogram(name: "stdarg_p", scope: !3, file: !3, line: 10375, type: !6091, scopeLine: 10376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13154)
!13154 = !{!13155, !13156, !13162, !13163}
!13155 = !DILocalVariable(name: "fntype", arg: 1, scope: !13153, file: !3, line: 10375, type: !1457)
!13156 = !DILocalVariable(name: "args_iter", scope: !13153, file: !3, line: 10377, type: !13157)
!13157 = !DIDerivedType(tag: DW_TAG_typedef, name: "function_args_iterator", file: !6, line: 4637, baseType: !13158)
!13158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 4634, size: 128, elements: !13159)
!13159 = !{!13160, !13161}
!13160 = !DIDerivedType(tag: DW_TAG_member, name: "fntype", scope: !13158, file: !6, line: 4635, baseType: !1457, size: 64)
!13161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13158, file: !6, line: 4636, baseType: !1457, size: 64, offset: 64)
!13162 = !DILocalVariable(name: "n", scope: !13153, file: !3, line: 10378, type: !1457)
!13163 = !DILocalVariable(name: "t", scope: !13153, file: !3, line: 10378, type: !1457)
!13164 = !DILocation(line: 0, scope: !13153)
!13165 = !DILocation(line: 10377, column: 3, scope: !13153)
!13166 = !DILocation(line: 10380, column: 8, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 10380, column: 7)
!13168 = !DILocation(line: 10380, column: 7, scope: !13153)
!13169 = !DILocation(line: 10383, column: 3, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 10383, column: 3)
!13171 = !DILocation(line: 10383, column: 3, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 10383, column: 3)
!13173 = distinct !{!13173, !13169, !13174}
!13174 = !DILocation(line: 10386, column: 5, scope: !13170)
!13175 = !DILocation(line: 10388, column: 12, scope: !13153)
!13176 = !DILocation(line: 10388, column: 25, scope: !13153)
!13177 = !DILocation(line: 10388, column: 10, scope: !13153)
!13178 = !DILocation(line: 10388, column: 3, scope: !13153)
!13179 = !DILocation(line: 10389, column: 1, scope: !13153)
!13180 = distinct !DISubprogram(name: "function_args_iter_init", scope: !6, file: !6, line: 4642, type: !13181, scopeLine: 4643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13184)
!13181 = !DISubroutineType(types: !13182)
!13182 = !{null, !13183, !1457}
!13183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13157, size: 64)
!13184 = !{!13185, !13186}
!13185 = !DILocalVariable(name: "i", arg: 1, scope: !13180, file: !6, line: 4642, type: !13183)
!13186 = !DILocalVariable(name: "fntype", arg: 2, scope: !13180, file: !6, line: 4642, type: !1457)
!13187 = !DILocation(line: 0, scope: !13180)
!13188 = !DILocation(line: 4644, column: 6, scope: !13180)
!13189 = !DILocation(line: 4644, column: 13, scope: !13180)
!13190 = !DILocation(line: 4645, column: 13, scope: !13180)
!13191 = !DILocation(line: 4645, column: 6, scope: !13180)
!13192 = !DILocation(line: 4645, column: 11, scope: !13180)
!13193 = !DILocation(line: 4646, column: 1, scope: !13180)
!13194 = distinct !DISubprogram(name: "function_args_iter_cond", scope: !6, file: !6, line: 4661, type: !13195, scopeLine: 4662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13197)
!13195 = !DISubroutineType(types: !13196)
!13196 = !{!1457, !13183}
!13197 = !{!13198}
!13198 = !DILocalVariable(name: "i", arg: 1, scope: !13194, file: !6, line: 4661, type: !13183)
!13199 = !DILocation(line: 0, scope: !13194)
!13200 = !DILocation(line: 4663, column: 14, scope: !13194)
!13201 = !DILocation(line: 4663, column: 10, scope: !13194)
!13202 = !DILocation(line: 4663, column: 22, scope: !13194)
!13203 = !DILocation(line: 4663, column: 3, scope: !13194)
!13204 = distinct !DISubprogram(name: "function_args_iter_next", scope: !6, file: !6, line: 4668, type: !13205, scopeLine: 4669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13207)
!13205 = !DISubroutineType(types: !13206)
!13206 = !{null, !13183}
!13207 = !{!13208}
!13208 = !DILocalVariable(name: "i", arg: 1, scope: !13204, file: !6, line: 4668, type: !13183)
!13209 = !DILocation(line: 0, scope: !13204)
!13210 = !DILocation(line: 4670, column: 3, scope: !13204)
!13211 = !DILocation(line: 4671, column: 13, scope: !13204)
!13212 = !DILocation(line: 4671, column: 11, scope: !13204)
!13213 = !DILocation(line: 4672, column: 1, scope: !13204)
!13214 = distinct !DISubprogram(name: "block_nonartificial_location", scope: !3, file: !3, line: 10408, type: !13215, scopeLine: 10409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13218)
!13215 = !DISubroutineType(types: !13216)
!13216 = !{!13217, !1457}
!13217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!13218 = !{!13219, !13220, !13221}
!13219 = !DILocalVariable(name: "block", arg: 1, scope: !13214, file: !3, line: 10408, type: !1457)
!13220 = !DILocalVariable(name: "ret", scope: !13214, file: !3, line: 10410, type: !13217)
!13221 = !DILocalVariable(name: "ao", scope: !13222, file: !3, line: 10415, type: !1457)
!13222 = distinct !DILexicalBlock(scope: !13214, file: !3, line: 10414, column: 5)
!13223 = !DILocation(line: 0, scope: !13214)
!13224 = !DILocation(line: 10412, column: 3, scope: !13214)
!13225 = !DILocation(line: 10412, column: 10, scope: !13214)
!13226 = !DILocation(line: 10412, column: 16, scope: !13214)
!13227 = !DILocation(line: 10412, column: 19, scope: !13214)
!13228 = !DILocation(line: 10412, column: 37, scope: !13214)
!13229 = !DILocation(line: 10413, column: 3, scope: !13214)
!13230 = !DILocation(line: 10413, column: 6, scope: !13214)
!13231 = !DILocation(line: 10417, column: 7, scope: !13222)
!13232 = !DILocation(line: 0, scope: !13222)
!13233 = !DILocation(line: 10417, column: 14, scope: !13222)
!13234 = !DILocation(line: 10417, column: 29, scope: !13222)
!13235 = !DILocation(line: 10418, column: 7, scope: !13222)
!13236 = !DILocation(line: 10418, column: 10, scope: !13222)
!13237 = !DILocation(line: 10419, column: 37, scope: !13222)
!13238 = !DILocation(line: 10419, column: 7, scope: !13222)
!13239 = distinct !{!13239, !13231, !13240}
!13240 = !DILocation(line: 10420, column: 7, scope: !13222)
!13241 = !DILocation(line: 10422, column: 26, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 10422, column: 11)
!13243 = !DILocation(line: 10422, column: 11, scope: !13222)
!13244 = !DILocation(line: 10428, column: 8, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !3, line: 10428, column: 8)
!13246 = distinct !DILexicalBlock(scope: !13242, file: !3, line: 10423, column: 2)
!13247 = !DILocation(line: 10429, column: 8, scope: !13245)
!13248 = !DILocation(line: 10429, column: 43, scope: !13245)
!13249 = !DILocation(line: 10429, column: 11, scope: !13245)
!13250 = !DILocation(line: 10428, column: 8, scope: !13246)
!13251 = !DILocation(line: 10430, column: 13, scope: !13245)
!13252 = !DILocation(line: 10433, column: 2, scope: !13246)
!13253 = !DILocation(line: 10434, column: 16, scope: !13242)
!13254 = !DILocation(line: 10437, column: 15, scope: !13222)
!13255 = !DILocation(line: 10438, column: 5, scope: !13214)
!13256 = distinct !{!13256, !13224, !13255}
!13257 = !DILocation(line: 10439, column: 3, scope: !13214)
!13258 = distinct !DISubprogram(name: "tree_nonartificial_location", scope: !3, file: !3, line: 10447, type: !13259, scopeLine: 10448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13261)
!13259 = !DISubroutineType(types: !13260)
!13260 = !{!1582, !1457}
!13261 = !{!13262, !13263}
!13262 = !DILocalVariable(name: "exp", arg: 1, scope: !13258, file: !3, line: 10447, type: !1457)
!13263 = !DILocalVariable(name: "loc", scope: !13258, file: !3, line: 10449, type: !13217)
!13264 = !DILocation(line: 0, scope: !13258)
!13265 = !DILocation(line: 10449, column: 51, scope: !13258)
!13266 = !DILocation(line: 10449, column: 21, scope: !13258)
!13267 = !DILocation(line: 10451, column: 7, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13258, file: !3, line: 10451, column: 7)
!13269 = !DILocation(line: 10451, column: 7, scope: !13258)
!13270 = !DILocation(line: 10452, column: 12, scope: !13268)
!13271 = !DILocation(line: 10452, column: 5, scope: !13268)
!13272 = !DILocation(line: 10454, column: 12, scope: !13268)
!13273 = !DILocation(line: 0, scope: !13268)
!13274 = !DILocation(line: 10455, column: 1, scope: !13258)
!13275 = distinct !DISubprogram(name: "build_optimization_node", scope: !3, file: !3, line: 10535, type: !13276, scopeLine: 10536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13278)
!13276 = !DISubroutineType(types: !13277)
!13277 = !{!1457}
!13278 = !{!13279, !13280}
!13279 = !DILocalVariable(name: "t", scope: !13275, file: !3, line: 10537, type: !1457)
!13280 = !DILocalVariable(name: "slot", scope: !13275, file: !3, line: 10538, type: !1828)
!13281 = !DILocation(line: 10542, column: 25, scope: !13275)
!13282 = !DILocation(line: 10542, column: 3, scope: !13275)
!13283 = !DILocation(line: 10544, column: 26, scope: !13275)
!13284 = !DILocation(line: 10544, column: 48, scope: !13275)
!13285 = !DILocation(line: 10544, column: 10, scope: !13275)
!13286 = !DILocation(line: 0, scope: !13275)
!13287 = !DILocation(line: 10545, column: 14, scope: !13275)
!13288 = !DILocation(line: 10546, column: 8, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13275, file: !3, line: 10546, column: 7)
!13290 = !DILocation(line: 10546, column: 7, scope: !13275)
!13291 = !DILocation(line: 10549, column: 11, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 10547, column: 5)
!13293 = !DILocation(line: 10550, column: 13, scope: !13292)
!13294 = !DILocation(line: 10553, column: 30, scope: !13292)
!13295 = !DILocation(line: 10553, column: 28, scope: !13292)
!13296 = !DILocation(line: 10554, column: 5, scope: !13292)
!13297 = !DILocation(line: 10556, column: 3, scope: !13275)
!13298 = distinct !DISubprogram(name: "build_target_option_node", scope: !3, file: !3, line: 10562, type: !13276, scopeLine: 10563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13299)
!13299 = !{!13300, !13301}
!13300 = !DILocalVariable(name: "t", scope: !13298, file: !3, line: 10564, type: !1457)
!13301 = !DILocalVariable(name: "slot", scope: !13298, file: !3, line: 10565, type: !1828)
!13302 = !DILocation(line: 10569, column: 26, scope: !13298)
!13303 = !DILocation(line: 10569, column: 3, scope: !13298)
!13304 = !DILocation(line: 10571, column: 26, scope: !13298)
!13305 = !DILocation(line: 10571, column: 48, scope: !13298)
!13306 = !DILocation(line: 10571, column: 10, scope: !13298)
!13307 = !DILocation(line: 0, scope: !13298)
!13308 = !DILocation(line: 10572, column: 14, scope: !13298)
!13309 = !DILocation(line: 10573, column: 8, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13298, file: !3, line: 10573, column: 7)
!13311 = !DILocation(line: 10573, column: 7, scope: !13298)
!13312 = !DILocation(line: 10576, column: 11, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13310, file: !3, line: 10574, column: 5)
!13314 = !DILocation(line: 10577, column: 13, scope: !13313)
!13315 = !DILocation(line: 10580, column: 31, scope: !13313)
!13316 = !DILocation(line: 10580, column: 29, scope: !13313)
!13317 = !DILocation(line: 10581, column: 5, scope: !13313)
!13318 = !DILocation(line: 10583, column: 3, scope: !13298)
!13319 = distinct !DISubprogram(name: "block_ultimate_origin", scope: !3, file: !3, line: 10593, type: !5504, scopeLine: 10594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13320)
!13320 = !{!13321, !13322, !13323, !13326}
!13321 = !DILocalVariable(name: "block", arg: 1, scope: !13319, file: !3, line: 10593, type: !2774)
!13322 = !DILocalVariable(name: "immediate_origin", scope: !13319, file: !3, line: 10595, type: !1457)
!13323 = !DILocalVariable(name: "ret_val", scope: !13324, file: !3, line: 10607, type: !1457)
!13324 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 10606, column: 5)
!13325 = distinct !DILexicalBlock(scope: !13319, file: !3, line: 10603, column: 7)
!13326 = !DILocalVariable(name: "lookahead", scope: !13324, file: !3, line: 10608, type: !1457)
!13327 = !DILocation(line: 0, scope: !13319)
!13328 = !DILocation(line: 10595, column: 27, scope: !13319)
!13329 = !DILocation(line: 10600, column: 7, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13319, file: !3, line: 10600, column: 7)
!13331 = !DILocation(line: 10600, column: 50, scope: !13330)
!13332 = !DILocation(line: 10600, column: 30, scope: !13330)
!13333 = !DILocation(line: 10603, column: 24, scope: !13325)
!13334 = !DILocation(line: 10610, column: 7, scope: !13324)
!13335 = !DILocation(line: 0, scope: !13324)
!13336 = !DILocation(line: 10613, column: 17, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13324, file: !3, line: 10611, column: 2)
!13338 = !DILocation(line: 10613, column: 37, scope: !13337)
!13339 = !DILocation(line: 10614, column: 12, scope: !13337)
!13340 = !DILocation(line: 10616, column: 24, scope: !13324)
!13341 = !DILocation(line: 10616, column: 45, scope: !13324)
!13342 = !DILocation(line: 10616, column: 32, scope: !13324)
!13343 = !DILocation(line: 10615, column: 2, scope: !13337)
!13344 = distinct !{!13344, !13334, !13345}
!13345 = !DILocation(line: 10616, column: 55, scope: !13324)
!13346 = !DILocation(line: 10624, column: 11, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13324, file: !3, line: 10624, column: 11)
!13348 = !DILocation(line: 10624, column: 11, scope: !13324)
!13349 = !DILocation(line: 10625, column: 9, scope: !13347)
!13350 = !DILocation(line: 10629, column: 1, scope: !13319)
!13351 = distinct !DISubprogram(name: "list_equal_p", scope: !3, file: !3, line: 10634, type: !10819, scopeLine: 10635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13352)
!13352 = !{!13353, !13354}
!13353 = !DILocalVariable(name: "t1", arg: 1, scope: !13351, file: !3, line: 10634, type: !2774)
!13354 = !DILocalVariable(name: "t2", arg: 2, scope: !13351, file: !3, line: 10634, type: !2774)
!13355 = !DILocation(line: 0, scope: !13351)
!13356 = !DILocation(line: 10636, column: 3, scope: !13351)
!13357 = !DILocation(line: 10636, column: 10, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !3, line: 10636, column: 3)
!13359 = distinct !DILexicalBlock(scope: !13351, file: !3, line: 10636, column: 3)
!13360 = !DILocation(line: 10636, column: 13, scope: !13358)
!13361 = !DILocation(line: 10636, column: 3, scope: !13359)
!13362 = !DILocation(line: 10637, column: 9, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13358, file: !3, line: 10637, column: 9)
!13364 = !DILocation(line: 10637, column: 28, scope: !13363)
!13365 = !DILocation(line: 10637, column: 25, scope: !13363)
!13366 = !DILocation(line: 10637, column: 9, scope: !13358)
!13367 = !DILocation(line: 10636, column: 25, scope: !13358)
!13368 = !DILocation(line: 10636, column: 48, scope: !13358)
!13369 = !DILocation(line: 10636, column: 3, scope: !13358)
!13370 = distinct !{!13370, !13361, !13371}
!13371 = !DILocation(line: 10638, column: 14, scope: !13359)
!13372 = !DILocation(line: 10639, column: 11, scope: !13351)
!13373 = !DILocation(line: 10639, column: 14, scope: !13351)
!13374 = !DILocation(line: 10639, column: 17, scope: !13351)
!13375 = !DILocation(line: 10639, column: 3, scope: !13351)
!13376 = !DILocation(line: 10640, column: 1, scope: !13351)
!13377 = distinct !DISubprogram(name: "tree_nop_conversion", scope: !3, file: !3, line: 10647, type: !4510, scopeLine: 10648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13378)
!13378 = !{!13379, !13380, !13381}
!13379 = !DILocalVariable(name: "exp", arg: 1, scope: !13377, file: !3, line: 10647, type: !2774)
!13380 = !DILocalVariable(name: "outer_type", scope: !13377, file: !3, line: 10649, type: !1457)
!13381 = !DILocalVariable(name: "inner_type", scope: !13377, file: !3, line: 10649, type: !1457)
!13382 = !DILocation(line: 0, scope: !13377)
!13383 = !DILocation(line: 10651, column: 8, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 10651, column: 7)
!13385 = !DILocation(line: 10652, column: 7, scope: !13384)
!13386 = !DILocation(line: 10652, column: 26, scope: !13384)
!13387 = !DILocation(line: 10651, column: 7, scope: !13377)
!13388 = !DILocation(line: 10654, column: 7, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 10654, column: 7)
!13390 = !DILocation(line: 10654, column: 32, scope: !13389)
!13391 = !DILocation(line: 10654, column: 29, scope: !13389)
!13392 = !DILocation(line: 10654, column: 7, scope: !13377)
!13393 = !DILocation(line: 10657, column: 16, scope: !13377)
!13394 = !DILocation(line: 10658, column: 16, scope: !13377)
!13395 = !DILocation(line: 10662, column: 8, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 10662, column: 7)
!13397 = !DILocation(line: 10663, column: 8, scope: !13396)
!13398 = !DILocation(line: 10663, column: 11, scope: !13396)
!13399 = !DILocation(line: 10664, column: 8, scope: !13396)
!13400 = !DILocation(line: 10664, column: 34, scope: !13396)
!13401 = !DILocation(line: 10665, column: 7, scope: !13396)
!13402 = !DILocation(line: 10665, column: 11, scope: !13396)
!13403 = !DILocation(line: 10666, column: 4, scope: !13396)
!13404 = !DILocation(line: 10666, column: 7, scope: !13396)
!13405 = !DILocation(line: 10667, column: 4, scope: !13396)
!13406 = !DILocation(line: 10667, column: 30, scope: !13396)
!13407 = !DILocation(line: 10662, column: 7, scope: !13377)
!13408 = !DILocation(line: 10668, column: 12, scope: !13396)
!13409 = !DILocation(line: 10668, column: 43, scope: !13396)
!13410 = !DILocation(line: 10668, column: 40, scope: !13396)
!13411 = !DILocation(line: 10668, column: 5, scope: !13396)
!13412 = !DILocation(line: 10672, column: 10, scope: !13377)
!13413 = !DILocation(line: 10672, column: 36, scope: !13377)
!13414 = !DILocation(line: 10672, column: 33, scope: !13377)
!13415 = !DILocation(line: 10672, column: 3, scope: !13377)
!13416 = !DILocation(line: 10673, column: 1, scope: !13377)
!13417 = distinct !DISubprogram(name: "tree_strip_sign_nop_conversions", scope: !3, file: !3, line: 10708, type: !3923, scopeLine: 10709, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13418)
!13418 = !{!13419}
!13419 = !DILocalVariable(name: "exp", arg: 1, scope: !13417, file: !3, line: 10708, type: !1457)
!13420 = !DILocation(line: 0, scope: !13417)
!13421 = !DILocation(line: 10710, column: 3, scope: !13417)
!13422 = !DILocation(line: 10710, column: 10, scope: !13417)
!13423 = !DILocation(line: 10711, column: 11, scope: !13417)
!13424 = distinct !{!13424, !13421, !13423}
!13425 = !DILocation(line: 10712, column: 3, scope: !13417)
!13426 = distinct !DISubprogram(name: "tree_sign_nop_conversion", scope: !3, file: !3, line: 10679, type: !4510, scopeLine: 10680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13427)
!13427 = !{!13428, !13429, !13430}
!13428 = !DILocalVariable(name: "exp", arg: 1, scope: !13426, file: !3, line: 10679, type: !2774)
!13429 = !DILocalVariable(name: "outer_type", scope: !13426, file: !3, line: 10681, type: !1457)
!13430 = !DILocalVariable(name: "inner_type", scope: !13426, file: !3, line: 10681, type: !1457)
!13431 = !DILocation(line: 0, scope: !13426)
!13432 = !DILocation(line: 10683, column: 8, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 10683, column: 7)
!13434 = !DILocation(line: 10683, column: 7, scope: !13426)
!13435 = !DILocation(line: 10686, column: 16, scope: !13426)
!13436 = !DILocation(line: 10687, column: 16, scope: !13426)
!13437 = !DILocation(line: 10689, column: 11, scope: !13426)
!13438 = !DILocation(line: 10689, column: 41, scope: !13426)
!13439 = !DILocation(line: 10689, column: 38, scope: !13426)
!13440 = !DILocation(line: 10690, column: 4, scope: !13426)
!13441 = !DILocation(line: 10690, column: 7, scope: !13426)
!13442 = !DILocation(line: 10690, column: 38, scope: !13426)
!13443 = !DILocation(line: 10690, column: 35, scope: !13426)
!13444 = !DILocation(line: 10689, column: 3, scope: !13426)
!13445 = !DILocation(line: 10691, column: 1, scope: !13426)
!13446 = distinct !DISubprogram(name: "lhd_gcc_personality", scope: !3, file: !3, line: 10720, type: !13276, scopeLine: 10721, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2951)
!13447 = !DILocation(line: 10722, column: 8, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13446, file: !3, line: 10722, column: 7)
!13449 = !DILocation(line: 10722, column: 7, scope: !13446)
!13450 = !DILocation(line: 10724, column: 9, scope: !13448)
!13451 = !DILocation(line: 10724, column: 7, scope: !13448)
!13452 = !DILocation(line: 10723, column: 5, scope: !13448)
!13453 = !DILocation(line: 10728, column: 10, scope: !13446)
!13454 = !DILocation(line: 10728, column: 3, scope: !13446)
!13455 = distinct !DISubprogram(name: "gt_ggc_mx_type_hash", scope: !2846, file: !2846, line: 23, type: !1825, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13456)
!13456 = !{!13457, !13458}
!13457 = !DILocalVariable(name: "x_p", arg: 1, scope: !13455, file: !2846, line: 23, type: !1454)
!13458 = !DILocalVariable(name: "x", scope: !13455, file: !2846, line: 25, type: !13459)
!13459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2769)
!13460 = !DILocation(line: 0, scope: !13455)
!13461 = !DILocation(line: 26, column: 7, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13455, file: !2846, line: 26, column: 7)
!13463 = !DILocation(line: 26, column: 7, scope: !13455)
!13464 = !DILocation(line: 28, column: 7, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13466, file: !2846, line: 28, column: 7)
!13466 = distinct !DILexicalBlock(scope: !13467, file: !2846, line: 28, column: 7)
!13467 = distinct !DILexicalBlock(scope: !13462, file: !2846, line: 27, column: 5)
!13468 = !DILocation(line: 28, column: 7, scope: !13466)
!13469 = !DILocation(line: 30, column: 1, scope: !13455)
!13470 = distinct !DISubprogram(name: "gt_ggc_m_P9type_hash4htab", scope: !2846, file: !2846, line: 33, type: !1825, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13471)
!13471 = !{!13472, !13473, !13475, !13480}
!13472 = !DILocalVariable(name: "x_p", arg: 1, scope: !13470, file: !2846, line: 33, type: !1454)
!13473 = !DILocalVariable(name: "x", scope: !13470, file: !2846, line: 35, type: !13474)
!13474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!13475 = !DILocalVariable(name: "i0", scope: !13476, file: !2846, line: 39, type: !1830)
!13476 = distinct !DILexicalBlock(scope: !13477, file: !2846, line: 38, column: 33)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !2846, line: 38, column: 11)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !2846, line: 37, column: 5)
!13479 = distinct !DILexicalBlock(scope: !13470, file: !2846, line: 36, column: 7)
!13480 = !DILocalVariable(name: "a__", scope: !13481, file: !2846, line: 43, type: !13482)
!13481 = distinct !DILexicalBlock(scope: !13476, file: !2846, line: 43, column: 9)
!13482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1815)
!13483 = !DILocation(line: 0, scope: !13470)
!13484 = !DILocation(line: 36, column: 7, scope: !13479)
!13485 = !DILocation(line: 36, column: 7, scope: !13470)
!13486 = !DILocation(line: 38, column: 16, scope: !13477)
!13487 = !DILocation(line: 38, column: 24, scope: !13477)
!13488 = !DILocation(line: 38, column: 11, scope: !13478)
!13489 = !DILocation(line: 0, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13491, file: !2846, line: 40, column: 9)
!13491 = distinct !DILexicalBlock(scope: !13476, file: !2846, line: 40, column: 9)
!13492 = !DILocation(line: 40, column: 9, scope: !13491)
!13493 = !DILocation(line: 0, scope: !13476)
!13494 = !DILocation(line: 0, scope: !13491)
!13495 = !DILocation(line: 40, column: 44, scope: !13490)
!13496 = !DILocation(line: 40, column: 25, scope: !13490)
!13497 = !DILocation(line: 41, column: 11, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13499, file: !2846, line: 41, column: 11)
!13499 = distinct !DILexicalBlock(scope: !13500, file: !2846, line: 41, column: 11)
!13500 = distinct !DILexicalBlock(scope: !13490, file: !2846, line: 40, column: 57)
!13501 = !DILocation(line: 41, column: 11, scope: !13499)
!13502 = !DILocation(line: 40, column: 53, scope: !13490)
!13503 = !DILocation(line: 40, column: 9, scope: !13490)
!13504 = distinct !{!13504, !13492, !13505}
!13505 = !DILocation(line: 42, column: 9, scope: !13491)
!13506 = !DILocation(line: 0, scope: !13481)
!13507 = !DILocation(line: 43, column: 9, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13481, file: !2846, line: 43, column: 9)
!13509 = !DILocation(line: 43, column: 9, scope: !13481)
!13510 = !DILocation(line: 46, column: 1, scope: !13470)
!13511 = distinct !DISubprogram(name: "gt_pch_nx_type_hash", scope: !2846, file: !2846, line: 49, type: !1825, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13512)
!13512 = !{!13513, !13514}
!13513 = !DILocalVariable(name: "x_p", arg: 1, scope: !13511, file: !2846, line: 49, type: !1454)
!13514 = !DILocalVariable(name: "x", scope: !13511, file: !2846, line: 51, type: !13459)
!13515 = !DILocation(line: 0, scope: !13511)
!13516 = !DILocation(line: 52, column: 7, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13511, file: !2846, line: 52, column: 7)
!13518 = !DILocation(line: 52, column: 7, scope: !13511)
!13519 = !DILocation(line: 54, column: 7, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !2846, line: 54, column: 7)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !2846, line: 54, column: 7)
!13522 = distinct !DILexicalBlock(scope: !13517, file: !2846, line: 53, column: 5)
!13523 = !DILocation(line: 54, column: 7, scope: !13521)
!13524 = !DILocation(line: 56, column: 1, scope: !13511)
!13525 = distinct !DISubprogram(name: "gt_pch_p_9type_hash", scope: !2846, file: !2846, line: 75, type: !13526, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13529)
!13526 = !DISubroutineType(types: !13527)
!13527 = !{null, !1454, !1454, !13528, !1454}
!13528 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !2850, line: 38, baseType: !1851)
!13529 = !{!13530, !13531, !13532, !13533, !13534}
!13530 = !DILocalVariable(name: "this_obj", arg: 1, scope: !13525, file: !2846, line: 75, type: !1454)
!13531 = !DILocalVariable(name: "x_p", arg: 2, scope: !13525, file: !2846, line: 76, type: !1454)
!13532 = !DILocalVariable(name: "op", arg: 3, scope: !13525, file: !2846, line: 77, type: !13528)
!13533 = !DILocalVariable(name: "cookie", arg: 4, scope: !13525, file: !2846, line: 78, type: !1454)
!13534 = !DILocalVariable(name: "x", scope: !13525, file: !2846, line: 80, type: !13459)
!13535 = !DILocation(line: 0, scope: !13525)
!13536 = !DILocation(line: 81, column: 19, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13525, file: !2846, line: 81, column: 7)
!13538 = !DILocation(line: 81, column: 7, scope: !13525)
!13539 = !DILocation(line: 82, column: 16, scope: !13537)
!13540 = !DILocation(line: 82, column: 5, scope: !13537)
!13541 = !DILocation(line: 83, column: 1, scope: !13525)
!13542 = distinct !DISubprogram(name: "gt_pch_n_P9type_hash4htab", scope: !2846, file: !2846, line: 59, type: !1825, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13543)
!13543 = !{!13544, !13545, !13546}
!13544 = !DILocalVariable(name: "x_p", arg: 1, scope: !13542, file: !2846, line: 59, type: !1454)
!13545 = !DILocalVariable(name: "x", scope: !13542, file: !2846, line: 61, type: !13474)
!13546 = !DILocalVariable(name: "i0", scope: !13547, file: !2846, line: 65, type: !1830)
!13547 = distinct !DILexicalBlock(scope: !13548, file: !2846, line: 64, column: 33)
!13548 = distinct !DILexicalBlock(scope: !13549, file: !2846, line: 64, column: 11)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !2846, line: 63, column: 5)
!13550 = distinct !DILexicalBlock(scope: !13542, file: !2846, line: 62, column: 7)
!13551 = !DILocation(line: 0, scope: !13542)
!13552 = !DILocation(line: 62, column: 7, scope: !13550)
!13553 = !DILocation(line: 62, column: 7, scope: !13542)
!13554 = !DILocation(line: 64, column: 16, scope: !13548)
!13555 = !DILocation(line: 64, column: 24, scope: !13548)
!13556 = !DILocation(line: 64, column: 11, scope: !13549)
!13557 = !DILocation(line: 0, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13559, file: !2846, line: 66, column: 9)
!13559 = distinct !DILexicalBlock(scope: !13547, file: !2846, line: 66, column: 9)
!13560 = !DILocation(line: 66, column: 9, scope: !13559)
!13561 = !DILocation(line: 0, scope: !13547)
!13562 = !DILocation(line: 0, scope: !13559)
!13563 = !DILocation(line: 66, column: 44, scope: !13558)
!13564 = !DILocation(line: 66, column: 25, scope: !13558)
!13565 = !DILocation(line: 67, column: 11, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !2846, line: 67, column: 11)
!13567 = distinct !DILexicalBlock(scope: !13568, file: !2846, line: 67, column: 11)
!13568 = distinct !DILexicalBlock(scope: !13558, file: !2846, line: 66, column: 57)
!13569 = !DILocation(line: 67, column: 11, scope: !13567)
!13570 = !DILocation(line: 66, column: 53, scope: !13558)
!13571 = !DILocation(line: 66, column: 9, scope: !13558)
!13572 = distinct !{!13572, !13560, !13573}
!13573 = !DILocation(line: 68, column: 9, scope: !13559)
!13574 = !DILocation(line: 69, column: 29, scope: !13547)
!13575 = !DILocation(line: 69, column: 9, scope: !13547)
!13576 = !DILocation(line: 70, column: 7, scope: !13547)
!13577 = !DILocation(line: 72, column: 1, scope: !13542)
!13578 = distinct !DISubprogram(name: "gt_pch_p_P9type_hash4htab", scope: !2846, file: !2846, line: 86, type: !13526, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13579)
!13579 = !{!13580, !13581, !13582, !13583, !13584, !13585}
!13580 = !DILocalVariable(name: "this_obj", arg: 1, scope: !13578, file: !2846, line: 86, type: !1454)
!13581 = !DILocalVariable(name: "x_p", arg: 2, scope: !13578, file: !2846, line: 87, type: !1454)
!13582 = !DILocalVariable(name: "op", arg: 3, scope: !13578, file: !2846, line: 88, type: !13528)
!13583 = !DILocalVariable(name: "cookie", arg: 4, scope: !13578, file: !2846, line: 89, type: !1454)
!13584 = !DILocalVariable(name: "x", scope: !13578, file: !2846, line: 91, type: !13474)
!13585 = !DILocalVariable(name: "i0", scope: !13586, file: !2846, line: 93, type: !1830)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !2846, line: 92, column: 29)
!13587 = distinct !DILexicalBlock(scope: !13578, file: !2846, line: 92, column: 7)
!13588 = !DILocation(line: 0, scope: !13578)
!13589 = !DILocation(line: 92, column: 12, scope: !13587)
!13590 = !DILocation(line: 92, column: 20, scope: !13587)
!13591 = !DILocation(line: 92, column: 7, scope: !13578)
!13592 = !DILocation(line: 0, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !2846, line: 94, column: 5)
!13594 = distinct !DILexicalBlock(scope: !13586, file: !2846, line: 94, column: 5)
!13595 = !DILocation(line: 0, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13597, file: !2846, line: 95, column: 11)
!13597 = distinct !DILexicalBlock(scope: !13593, file: !2846, line: 94, column: 53)
!13598 = !DILocation(line: 94, column: 5, scope: !13594)
!13599 = !DILocation(line: 0, scope: !13594)
!13600 = !DILocation(line: 0, scope: !13586)
!13601 = !DILocation(line: 94, column: 40, scope: !13593)
!13602 = !DILocation(line: 94, column: 21, scope: !13593)
!13603 = !DILocation(line: 95, column: 25, scope: !13596)
!13604 = !DILocation(line: 95, column: 34, scope: !13596)
!13605 = !DILocation(line: 95, column: 11, scope: !13597)
!13606 = !DILocation(line: 96, column: 15, scope: !13596)
!13607 = !DILocation(line: 96, column: 13, scope: !13596)
!13608 = !DILocation(line: 96, column: 9, scope: !13596)
!13609 = !DILocation(line: 94, column: 49, scope: !13593)
!13610 = !DILocation(line: 94, column: 5, scope: !13593)
!13611 = distinct !{!13611, !13598, !13612}
!13612 = !DILocation(line: 97, column: 5, scope: !13594)
!13613 = !DILocation(line: 98, column: 21, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13586, file: !2846, line: 98, column: 9)
!13615 = !DILocation(line: 98, column: 9, scope: !13586)
!13616 = !DILocation(line: 99, column: 7, scope: !13614)
!13617 = !DILocation(line: 101, column: 1, scope: !13578)
!13618 = distinct !DISubprogram(name: "type_hash_marked_p", scope: !3, file: !3, line: 5979, type: !2874, scopeLine: 5980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13619)
!13619 = !{!13620, !13621}
!13620 = !DILocalVariable(name: "p", arg: 1, scope: !13618, file: !3, line: 5979, type: !1815)
!13621 = !DILocalVariable(name: "type", scope: !13618, file: !3, line: 5981, type: !3589)
!13622 = !DILocation(line: 0, scope: !13618)
!13623 = !DILocation(line: 5981, column: 59, scope: !13618)
!13624 = !DILocation(line: 5983, column: 24, scope: !13618)
!13625 = !DILocation(line: 5983, column: 10, scope: !13618)
!13626 = !DILocation(line: 5983, column: 30, scope: !13618)
!13627 = !DILocation(line: 5983, column: 33, scope: !13618)
!13628 = !DILocation(line: 5983, column: 3, scope: !13618)
!13629 = distinct !DISubprogram(name: "init_const_call_expr_arg_iterator", scope: !6, file: !6, line: 5383, type: !13630, scopeLine: 5384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13632)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{null, !2774, !6337}
!13632 = !{!13633, !13634}
!13633 = !DILocalVariable(name: "exp", arg: 1, scope: !13629, file: !6, line: 5383, type: !2774)
!13634 = !DILocalVariable(name: "iter", arg: 2, scope: !13629, file: !6, line: 5383, type: !6337)
!13635 = !DILocation(line: 0, scope: !13629)
!13636 = !DILocation(line: 5385, column: 9, scope: !13629)
!13637 = !DILocation(line: 5385, column: 11, scope: !13629)
!13638 = !DILocation(line: 5386, column: 13, scope: !13629)
!13639 = !DILocation(line: 5386, column: 9, scope: !13629)
!13640 = !DILocation(line: 5386, column: 11, scope: !13629)
!13641 = !DILocation(line: 5387, column: 9, scope: !13629)
!13642 = !DILocation(line: 5387, column: 11, scope: !13629)
!13643 = !DILocation(line: 5388, column: 1, scope: !13629)
!13644 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !6, file: !6, line: 184, type: !13645, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13647)
!13645 = !DISubroutineType(types: !13646)
!13646 = !{!1964, !6434, !1457}
!13647 = !{!13648, !13649}
!13648 = !DILocalVariable(name: "vec_", arg: 1, scope: !13644, file: !6, line: 184, type: !6434)
!13649 = !DILocalVariable(name: "obj_", arg: 2, scope: !13644, file: !6, line: 184, type: !1457)
!13650 = !DILocation(line: 0, scope: !13644)
!13651 = !DILocation(line: 184, column: 1, scope: !13644)
!13652 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !6, file: !6, line: 184, type: !13653, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13655)
!13653 = !DISubroutineType(types: !13654)
!13654 = !{!1450, !6434, !1450}
!13655 = !{!13656, !13657, !13658}
!13656 = !DILocalVariable(name: "vec_", arg: 1, scope: !13652, file: !6, line: 184, type: !6434)
!13657 = !DILocalVariable(name: "alloc_", arg: 2, scope: !13652, file: !6, line: 184, type: !1450)
!13658 = !DILocalVariable(name: "extend", scope: !13652, file: !6, line: 184, type: !1450)
!13659 = !DILocation(line: 0, scope: !13652)
!13660 = !DILocation(line: 184, column: 1, scope: !13652)
!13661 = !DILocation(line: 184, column: 1, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13652, file: !6, line: 184, column: 1)
!13663 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !6, file: !6, line: 182, type: !13664, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13666)
!13664 = !DISubroutineType(types: !13665)
!13665 = !{!1450, !5022, !1450}
!13666 = !{!13667, !13668}
!13667 = !DILocalVariable(name: "vec_", arg: 1, scope: !13663, file: !6, line: 182, type: !5022)
!13668 = !DILocalVariable(name: "alloc_", arg: 2, scope: !13663, file: !6, line: 182, type: !1450)
!13669 = !DILocation(line: 0, scope: !13663)
!13670 = !DILocation(line: 182, column: 1, scope: !13663)
!13671 = distinct !DISubprogram(name: "free_lang_data_in_cgraph", scope: !3, file: !3, line: 4896, type: !3375, scopeLine: 4897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13672)
!13672 = !{!13673, !13877, !13878, !13879, !13880, !13881}
!13673 = !DILocalVariable(name: "n", scope: !13671, file: !3, line: 4898, type: !13674)
!13674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13675, size: 64)
!13675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !1360, line: 181, size: 2496, elements: !13676)
!13676 = !{!13677, !13678, !13700, !13701, !13702, !13703, !13704, !13705, !13706, !13707, !13708, !13709, !13710, !13711, !13712, !13713, !13714, !13715, !13792, !13814, !13824, !13828, !13854, !13863, !13864, !13865, !13866, !13867, !13868, !13869, !13870, !13871, !13872, !13873, !13874, !13875, !13876}
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !13675, file: !1360, line: 182, baseType: !1457, size: 64)
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !13675, file: !1360, line: 183, baseType: !13679, size: 64, offset: 64)
!13679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13680, size: 64)
!13680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !1360, line: 314, size: 768, elements: !13681)
!13681 = !{!13682, !13683, !13684, !13685, !13686, !13687, !13688, !13689, !13690, !13691, !13693, !13694, !13695, !13696, !13697, !13698, !13699}
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !13680, file: !1360, line: 316, baseType: !2138, size: 64)
!13683 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !13680, file: !1360, line: 317, baseType: !13674, size: 64, offset: 64)
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !13680, file: !1360, line: 318, baseType: !13674, size: 64, offset: 128)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !13680, file: !1360, line: 319, baseType: !13679, size: 64, offset: 192)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !13680, file: !1360, line: 320, baseType: !13679, size: 64, offset: 256)
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !13680, file: !1360, line: 321, baseType: !13679, size: 64, offset: 320)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !13680, file: !1360, line: 322, baseType: !13679, size: 64, offset: 384)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !13680, file: !1360, line: 323, baseType: !1929, size: 64, offset: 448)
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !13680, file: !1360, line: 324, baseType: !1454, size: 64, offset: 512)
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !13680, file: !1360, line: 327, baseType: !13692, size: 32, offset: 576)
!13692 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !1360, line: 312, baseType: !1359)
!13693 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !13680, file: !1360, line: 330, baseType: !7, size: 32, offset: 608)
!13694 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !13680, file: !1360, line: 334, baseType: !1450, size: 32, offset: 640)
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !13680, file: !1360, line: 336, baseType: !1450, size: 32, offset: 672)
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !13680, file: !1360, line: 338, baseType: !2747, size: 16, offset: 704)
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !13680, file: !1360, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!13698 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !13680, file: !1360, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !13680, file: !1360, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!13700 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !13675, file: !1360, line: 184, baseType: !13679, size: 64, offset: 128)
!13701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13675, file: !1360, line: 185, baseType: !13674, size: 64, offset: 192)
!13702 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !13675, file: !1360, line: 186, baseType: !13674, size: 64, offset: 256)
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !13675, file: !1360, line: 188, baseType: !13674, size: 64, offset: 320)
!13704 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !13675, file: !1360, line: 190, baseType: !13674, size: 64, offset: 384)
!13705 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !13675, file: !1360, line: 192, baseType: !13674, size: 64, offset: 448)
!13706 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !13675, file: !1360, line: 194, baseType: !13674, size: 64, offset: 512)
!13707 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !13675, file: !1360, line: 196, baseType: !13674, size: 64, offset: 576)
!13708 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !13675, file: !1360, line: 197, baseType: !13674, size: 64, offset: 640)
!13709 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !13675, file: !1360, line: 198, baseType: !13674, size: 64, offset: 704)
!13710 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !13675, file: !1360, line: 199, baseType: !13674, size: 64, offset: 768)
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !13675, file: !1360, line: 202, baseType: !13674, size: 64, offset: 832)
!13712 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !13675, file: !1360, line: 204, baseType: !13674, size: 64, offset: 896)
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !13675, file: !1360, line: 207, baseType: !1804, size: 64, offset: 960)
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !13675, file: !1360, line: 209, baseType: !1454, size: 64, offset: 1024)
!13715 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !13675, file: !1360, line: 214, baseType: !13716, size: 64, offset: 1088)
!13716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13717, size: 64)
!13717 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1721, line: 177, baseType: !13718)
!13718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1721, line: 177, size: 128, elements: !13719)
!13719 = !{!13720}
!13720 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13718, file: !1721, line: 177, baseType: !13721, size: 128)
!13721 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1721, line: 176, baseType: !13722)
!13722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1721, line: 176, size: 128, elements: !13723)
!13723 = !{!13724, !13725, !13726}
!13724 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !13722, file: !1721, line: 176, baseType: !7, size: 32)
!13725 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !13722, file: !1721, line: 176, baseType: !7, size: 32, offset: 32)
!13726 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !13722, file: !1721, line: 176, baseType: !13727, size: 64, offset: 64)
!13727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13728, size: 64, elements: !1556)
!13728 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1721, line: 174, baseType: !13729)
!13729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13730, size: 64)
!13730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !457, line: 173, size: 1152, elements: !13731)
!13731 = !{!13732, !13733, !13735, !13758, !13759, !13763, !13768, !13769, !13773}
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !13730, file: !457, line: 175, baseType: !2821, size: 640)
!13733 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !13730, file: !457, line: 179, baseType: !13734, size: 64, offset: 640)
!13734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!13735 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !13730, file: !457, line: 182, baseType: !13736, size: 64, offset: 704)
!13736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13737, size: 64)
!13737 = !DISubroutineType(types: !13738)
!13738 = !{null, !13739}
!13739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13740, size: 64)
!13740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !1360, line: 276, size: 192, elements: !13741)
!13741 = !{!13742, !13743, !13757}
!13742 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !13740, file: !1360, line: 278, baseType: !1804, size: 64)
!13743 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !13740, file: !1360, line: 279, baseType: !13744, size: 64, offset: 64)
!13744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13745, size: 64)
!13745 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !1360, line: 272, baseType: !13746)
!13746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !1360, line: 272, size: 128, elements: !13747)
!13747 = !{!13748}
!13748 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13746, file: !1360, line: 272, baseType: !13749, size: 128)
!13749 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !1360, line: 270, baseType: !13750)
!13750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !1360, line: 270, size: 128, elements: !13751)
!13751 = !{!13752, !13753, !13754}
!13752 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !13750, file: !1360, line: 270, baseType: !7, size: 32)
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !13750, file: !1360, line: 270, baseType: !7, size: 32, offset: 32)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !13750, file: !1360, line: 270, baseType: !13755, size: 64, offset: 64)
!13755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13756, size: 64, elements: !1556)
!13756 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !1360, line: 268, baseType: !13674)
!13757 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !13740, file: !1360, line: 280, baseType: !1454, size: 64, offset: 128)
!13758 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !13730, file: !457, line: 187, baseType: !13734, size: 64, offset: 768)
!13759 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !13730, file: !457, line: 188, baseType: !13760, size: 64, offset: 832)
!13760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13761, size: 64)
!13761 = !DISubroutineType(types: !13762)
!13762 = !{null, !13674}
!13763 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !13730, file: !457, line: 191, baseType: !13764, size: 64, offset: 896)
!13764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13765, size: 64)
!13765 = !DISubroutineType(types: !13766)
!13766 = !{null, !13674, !13767}
!13767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!13768 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !13730, file: !457, line: 195, baseType: !7, size: 32, offset: 960)
!13769 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !13730, file: !457, line: 196, baseType: !13770, size: 64, offset: 1024)
!13770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13771, size: 64)
!13771 = !DISubroutineType(types: !13772)
!13772 = !{!7, !13674}
!13773 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !13730, file: !457, line: 197, baseType: !13774, size: 64, offset: 1088)
!13774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13775, size: 64)
!13775 = !DISubroutineType(types: !13776)
!13776 = !{null, !13777}
!13777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13778, size: 64)
!13778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !1360, line: 358, size: 320, elements: !13779)
!13779 = !{!13780, !13781, !13782, !13783, !13784, !13785, !13786, !13787, !13788, !13789, !13790, !13791}
!13780 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !13778, file: !1360, line: 359, baseType: !1457, size: 64)
!13781 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13778, file: !1360, line: 361, baseType: !13777, size: 64, offset: 64)
!13782 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !13778, file: !1360, line: 363, baseType: !13777, size: 64, offset: 128)
!13783 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !13778, file: !1360, line: 366, baseType: !13777, size: 64, offset: 192)
!13784 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !13778, file: !1360, line: 368, baseType: !1450, size: 32, offset: 256)
!13785 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !13778, file: !1360, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!13786 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !13778, file: !1360, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!13787 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !13778, file: !1360, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!13788 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !13778, file: !1360, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!13789 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !13778, file: !1360, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!13790 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !13778, file: !1360, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!13791 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !13778, file: !1360, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!13792 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !13675, file: !1360, line: 216, baseType: !13793, size: 320, offset: 1152)
!13793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !1360, line: 88, size: 320, elements: !13794)
!13794 = !{!13795, !13798, !13806, !13807, !13808, !13809, !13810, !13811, !13812, !13813}
!13795 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !13793, file: !1360, line: 90, baseType: !13796, size: 64)
!13796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13797, size: 64)
!13797 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !1360, line: 51, flags: DIFlagFwdDecl)
!13798 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !13793, file: !1360, line: 92, baseType: !13799, size: 192, offset: 64)
!13799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !1360, line: 57, size: 192, elements: !13800)
!13800 = !{!13801, !13802, !13803, !13804, !13805}
!13801 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !13799, file: !1360, line: 60, baseType: !1513, size: 64)
!13802 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !13799, file: !1360, line: 63, baseType: !1450, size: 32, offset: 64)
!13803 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !13799, file: !1360, line: 65, baseType: !1450, size: 32, offset: 96)
!13804 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !13799, file: !1360, line: 67, baseType: !1450, size: 32, offset: 128)
!13805 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !13799, file: !1360, line: 69, baseType: !1450, size: 32, offset: 160)
!13806 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !13793, file: !1360, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!13807 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !13793, file: !1360, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!13808 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !13793, file: !1360, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!13809 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !13793, file: !1360, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!13810 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !13793, file: !1360, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!13811 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !13793, file: !1360, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !13793, file: !1360, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!13813 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !13793, file: !1360, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!13814 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !13675, file: !1360, line: 217, baseType: !13815, size: 320, offset: 1472)
!13815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !1360, line: 126, size: 320, elements: !13816)
!13816 = !{!13817, !13818, !13819, !13820, !13821, !13822, !13823}
!13817 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !13815, file: !1360, line: 128, baseType: !1513, size: 64)
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !13815, file: !1360, line: 130, baseType: !1513, size: 64, offset: 64)
!13819 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !13815, file: !1360, line: 134, baseType: !13674, size: 64, offset: 128)
!13820 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !13815, file: !1360, line: 137, baseType: !1450, size: 32, offset: 192)
!13821 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13815, file: !1360, line: 138, baseType: !1450, size: 32, offset: 224)
!13822 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !13815, file: !1360, line: 141, baseType: !1450, size: 32, offset: 256)
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !13815, file: !1360, line: 144, baseType: !1449, size: 8, offset: 288)
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !13675, file: !1360, line: 218, baseType: !13825, size: 32, offset: 1792)
!13825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !1360, line: 150, size: 32, elements: !13826)
!13826 = !{!13827}
!13827 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !13825, file: !1360, line: 151, baseType: !7, size: 32)
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !13675, file: !1360, line: 219, baseType: !13829, size: 192, offset: 1856)
!13829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !1360, line: 171, size: 192, elements: !13830)
!13830 = !{!13831, !13852, !13853}
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !13829, file: !1360, line: 173, baseType: !13832, size: 64)
!13832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13833, size: 64)
!13833 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !1360, line: 169, baseType: !13834)
!13834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !1360, line: 169, size: 128, elements: !13835)
!13835 = !{!13836}
!13836 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13834, file: !1360, line: 169, baseType: !13837, size: 128)
!13837 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !1360, line: 168, baseType: !13838)
!13838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !1360, line: 168, size: 128, elements: !13839)
!13839 = !{!13840, !13841, !13842}
!13840 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !13838, file: !1360, line: 168, baseType: !7, size: 32)
!13841 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !13838, file: !1360, line: 168, baseType: !7, size: 32, offset: 32)
!13842 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !13838, file: !1360, line: 168, baseType: !13843, size: 64, offset: 64)
!13843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13844, size: 64, elements: !1556)
!13844 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !1360, line: 167, baseType: !13845)
!13845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13846, size: 64)
!13846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !1360, line: 156, size: 192, elements: !13847)
!13847 = !{!13848, !13849, !13850, !13851}
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !13846, file: !1360, line: 159, baseType: !1457, size: 64)
!13849 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !13846, file: !1360, line: 161, baseType: !1457, size: 64, offset: 64)
!13850 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !13846, file: !1360, line: 163, baseType: !1449, size: 8, offset: 128)
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !13846, file: !1360, line: 165, baseType: !1449, size: 8, offset: 136)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !13829, file: !1360, line: 174, baseType: !2233, size: 64, offset: 64)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !13829, file: !1360, line: 175, baseType: !2233, size: 64, offset: 128)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !13675, file: !1360, line: 220, baseType: !13855, size: 256, offset: 2048)
!13855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !1360, line: 74, size: 256, elements: !13856)
!13856 = !{!13857, !13858, !13859, !13860, !13861, !13862}
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !13855, file: !1360, line: 76, baseType: !1513, size: 64)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !13855, file: !1360, line: 77, baseType: !1513, size: 64, offset: 64)
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !13855, file: !1360, line: 78, baseType: !1457, size: 64, offset: 128)
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !13855, file: !1360, line: 79, baseType: !1449, size: 8, offset: 192)
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !13855, file: !1360, line: 80, baseType: !1449, size: 8, offset: 200)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !13855, file: !1360, line: 82, baseType: !1449, size: 8, offset: 208)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !13675, file: !1360, line: 223, baseType: !2138, size: 64, offset: 2304)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !13675, file: !1360, line: 225, baseType: !1450, size: 32, offset: 2368)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !13675, file: !1360, line: 227, baseType: !1450, size: 32, offset: 2400)
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !13675, file: !1360, line: 231, baseType: !1450, size: 32, offset: 2432)
!13867 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !13675, file: !1360, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !13675, file: !1360, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !13675, file: !1360, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !13675, file: !1360, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !13675, file: !1360, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !13675, file: !1360, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!13873 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !13675, file: !1360, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !13675, file: !1360, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !13675, file: !1360, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !13675, file: !1360, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!13877 = !DILocalVariable(name: "v", scope: !13671, file: !3, line: 4899, type: !13777)
!13878 = !DILocalVariable(name: "fld", scope: !13671, file: !3, line: 4900, type: !2781)
!13879 = !DILocalVariable(name: "t", scope: !13671, file: !3, line: 4901, type: !1457)
!13880 = !DILocalVariable(name: "i", scope: !13671, file: !3, line: 4902, type: !7)
!13881 = !DILocalVariable(name: "p", scope: !13671, file: !3, line: 4903, type: !13882)
!13882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13883, size: 64)
!13883 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_pair", file: !6, line: 194, baseType: !13884)
!13884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alias_pair", file: !6, line: 190, size: 128, elements: !13885)
!13885 = !{!13886, !13887}
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !13884, file: !6, line: 192, baseType: !1457, size: 64)
!13887 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !13884, file: !6, line: 193, baseType: !1457, size: 64, offset: 64)
!13888 = !DILocation(line: 4900, column: 3, scope: !13671)
!13889 = !DILocation(line: 4901, column: 3, scope: !13671)
!13890 = !DILocation(line: 4903, column: 3, scope: !13671)
!13891 = !DILocation(line: 4906, column: 14, scope: !13671)
!13892 = !DILocation(line: 4906, column: 7, scope: !13671)
!13893 = !DILocation(line: 4906, column: 12, scope: !13671)
!13894 = !DILocation(line: 4907, column: 7, scope: !13671)
!13895 = !DILocation(line: 4907, column: 16, scope: !13671)
!13896 = !DILocation(line: 4908, column: 15, scope: !13671)
!13897 = !DILocation(line: 4908, column: 7, scope: !13671)
!13898 = !DILocation(line: 4908, column: 13, scope: !13671)
!13899 = !DILocation(line: 4909, column: 15, scope: !13671)
!13900 = !DILocation(line: 4909, column: 7, scope: !13671)
!13901 = !DILocation(line: 4909, column: 13, scope: !13671)
!13902 = !DILocation(line: 4912, column: 8, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13671, file: !3, line: 4912, column: 3)
!13904 = !DILocation(line: 0, scope: !13903)
!13905 = !DILocation(line: 0, scope: !13671)
!13906 = !DILocation(line: 4912, column: 3, scope: !13903)
!13907 = !DILocation(line: 4915, column: 3, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13671, file: !3, line: 4915, column: 3)
!13909 = !DILocation(line: 4913, column: 5, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13903, file: !3, line: 4912, column: 3)
!13911 = !DILocation(line: 4912, column: 36, scope: !13910)
!13912 = !DILocation(line: 4912, column: 3, scope: !13910)
!13913 = distinct !{!13913, !13906, !13914}
!13914 = !DILocation(line: 4913, column: 38, scope: !13903)
!13915 = !DILocation(line: 0, scope: !13908)
!13916 = !DILocation(line: 4915, column: 15, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13908, file: !3, line: 4915, column: 3)
!13918 = !DILocation(line: 4916, column: 23, scope: !13917)
!13919 = !DILocation(line: 4916, column: 26, scope: !13917)
!13920 = !DILocation(line: 4916, column: 5, scope: !13917)
!13921 = !DILocation(line: 4915, column: 61, scope: !13917)
!13922 = !DILocation(line: 4915, column: 3, scope: !13917)
!13923 = distinct !{!13923, !13907, !13924}
!13924 = !DILocation(line: 4916, column: 36, scope: !13908)
!13925 = !DILocation(line: 4919, column: 8, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13671, file: !3, line: 4919, column: 3)
!13927 = !DILocation(line: 0, scope: !13926)
!13928 = !DILocation(line: 4919, column: 3, scope: !13926)
!13929 = !DILocation(line: 4925, column: 3, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13671, file: !3, line: 4925, column: 3)
!13931 = !DILocation(line: 4920, column: 5, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13926, file: !3, line: 4919, column: 3)
!13933 = !DILocation(line: 4919, column: 43, scope: !13932)
!13934 = !DILocation(line: 4919, column: 3, scope: !13932)
!13935 = distinct !{!13935, !13928, !13936}
!13936 = !DILocation(line: 4920, column: 37, scope: !13926)
!13937 = !DILocation(line: 0, scope: !13930)
!13938 = !DILocation(line: 4925, column: 15, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13930, file: !3, line: 4925, column: 3)
!13940 = !DILocation(line: 4929, column: 3, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13671, file: !3, line: 4929, column: 3)
!13942 = !DILocation(line: 4926, column: 39, scope: !13939)
!13943 = !DILocation(line: 4926, column: 5, scope: !13939)
!13944 = !DILocation(line: 4925, column: 53, scope: !13939)
!13945 = !DILocation(line: 4925, column: 3, scope: !13939)
!13946 = distinct !{!13946, !13929, !13947}
!13947 = !DILocation(line: 4926, column: 40, scope: !13930)
!13948 = !DILocation(line: 0, scope: !13941)
!13949 = !DILocation(line: 4929, column: 15, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13941, file: !3, line: 4929, column: 3)
!13951 = !DILocation(line: 4933, column: 3, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13671, file: !3, line: 4933, column: 3)
!13953 = !DILocation(line: 4930, column: 29, scope: !13950)
!13954 = !DILocation(line: 4930, column: 5, scope: !13950)
!13955 = !DILocation(line: 4929, column: 53, scope: !13950)
!13956 = !DILocation(line: 4929, column: 3, scope: !13950)
!13957 = distinct !{!13957, !13940, !13958}
!13958 = !DILocation(line: 4930, column: 30, scope: !13941)
!13959 = !DILocation(line: 0, scope: !13952)
!13960 = !DILocation(line: 4933, column: 15, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 4933, column: 3)
!13962 = !DILocation(line: 4934, column: 29, scope: !13961)
!13963 = !DILocation(line: 4934, column: 5, scope: !13961)
!13964 = !DILocation(line: 4933, column: 53, scope: !13961)
!13965 = !DILocation(line: 4933, column: 3, scope: !13961)
!13966 = distinct !{!13966, !13951, !13967}
!13967 = !DILocation(line: 4934, column: 30, scope: !13952)
!13968 = !DILocation(line: 4936, column: 28, scope: !13671)
!13969 = !DILocation(line: 4936, column: 3, scope: !13671)
!13970 = !DILocation(line: 4937, column: 3, scope: !13671)
!13971 = !DILocation(line: 4938, column: 3, scope: !13671)
!13972 = !DILocation(line: 4939, column: 3, scope: !13671)
!13973 = !DILocation(line: 4940, column: 1, scope: !13671)
!13974 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !6, file: !6, line: 184, type: !13975, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13977)
!13975 = !DISubroutineType(types: !13976)
!13976 = !{!2775, !1450}
!13977 = !{!13978}
!13978 = !DILocalVariable(name: "alloc_", arg: 1, scope: !13974, file: !6, line: 184, type: !1450)
!13979 = !DILocation(line: 0, scope: !13974)
!13980 = !DILocation(line: 184, column: 1, scope: !13974)
!13981 = distinct !DISubprogram(name: "find_decls_types_in_node", scope: !3, file: !3, line: 4781, type: !13982, scopeLine: 4782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13984)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{null, !13674, !2780}
!13984 = !{!13985, !13986, !13987, !13988, !13989, !13990, !13992, !14002, !14003, !14007, !14011, !14015}
!13985 = !DILocalVariable(name: "n", arg: 1, scope: !13981, file: !3, line: 4781, type: !13674)
!13986 = !DILocalVariable(name: "fld", arg: 2, scope: !13981, file: !3, line: 4781, type: !2780)
!13987 = !DILocalVariable(name: "bb", scope: !13981, file: !3, line: 4783, type: !1892)
!13988 = !DILocalVariable(name: "fn", scope: !13981, file: !3, line: 4784, type: !1719)
!13989 = !DILocalVariable(name: "t", scope: !13981, file: !3, line: 4785, type: !1457)
!13990 = !DILocalVariable(name: "r", scope: !13991, file: !3, line: 4802, type: !1728)
!13991 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 4801, column: 3)
!13992 = !DILocalVariable(name: "si", scope: !13993, file: !3, line: 4810, type: !13996)
!13993 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 4809, column: 5)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 4808, column: 3)
!13995 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 4808, column: 3)
!13996 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !1383, line: 265, baseType: !13997)
!13997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 254, size: 192, elements: !13998)
!13998 = !{!13999, !14000, !14001}
!13999 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !13997, file: !1383, line: 257, baseType: !1924, size: 64)
!14000 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !13997, file: !1383, line: 263, baseType: !1919, size: 64, offset: 64)
!14001 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !13997, file: !1383, line: 264, baseType: !1892, size: 64, offset: 128)
!14002 = !DILocalVariable(name: "i", scope: !13993, file: !3, line: 4811, type: !7)
!14003 = !DILocalVariable(name: "phi", scope: !14004, file: !3, line: 4815, type: !1929)
!14004 = distinct !DILexicalBlock(scope: !14005, file: !3, line: 4814, column: 2)
!14005 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 4813, column: 7)
!14006 = distinct !DILexicalBlock(scope: !13993, file: !3, line: 4813, column: 7)
!14007 = !DILocalVariable(name: "arg_p", scope: !14008, file: !3, line: 4819, type: !1964)
!14008 = distinct !DILexicalBlock(scope: !14009, file: !3, line: 4818, column: 6)
!14009 = distinct !DILexicalBlock(scope: !14010, file: !3, line: 4817, column: 4)
!14010 = distinct !DILexicalBlock(scope: !14004, file: !3, line: 4817, column: 4)
!14011 = !DILocalVariable(name: "stmt", scope: !14012, file: !3, line: 4826, type: !1929)
!14012 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 4825, column: 2)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !3, line: 4824, column: 7)
!14014 = distinct !DILexicalBlock(scope: !13993, file: !3, line: 4824, column: 7)
!14015 = !DILocalVariable(name: "arg", scope: !14016, file: !3, line: 4830, type: !1457)
!14016 = distinct !DILexicalBlock(scope: !14017, file: !3, line: 4829, column: 6)
!14017 = distinct !DILexicalBlock(scope: !14018, file: !3, line: 4828, column: 4)
!14018 = distinct !DILexicalBlock(scope: !14012, file: !3, line: 4828, column: 4)
!14019 = !DILocation(line: 0, scope: !13981)
!14020 = !DILocation(line: 4787, column: 24, scope: !13981)
!14021 = !DILocation(line: 4787, column: 3, scope: !13981)
!14022 = !DILocation(line: 4789, column: 30, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 4789, column: 7)
!14024 = !DILocation(line: 4789, column: 8, scope: !14023)
!14025 = !DILocation(line: 4789, column: 7, scope: !13981)
!14026 = !DILocation(line: 4792, column: 3, scope: !13981)
!14027 = !DILocation(line: 4794, column: 8, scope: !13981)
!14028 = !DILocation(line: 4797, column: 16, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 4797, column: 3)
!14030 = !DILocation(line: 4797, column: 8, scope: !14029)
!14031 = !DILocation(line: 0, scope: !14029)
!14032 = !DILocation(line: 4797, column: 3, scope: !14029)
!14033 = !DILocation(line: 4798, column: 23, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14029, file: !3, line: 4797, column: 3)
!14035 = !DILocation(line: 4798, column: 5, scope: !14034)
!14036 = !DILocation(line: 4797, column: 36, scope: !14034)
!14037 = !DILocation(line: 4797, column: 3, scope: !14034)
!14038 = distinct !{!14038, !14032, !14039}
!14039 = !DILocation(line: 4798, column: 42, scope: !14029)
!14040 = !DILocation(line: 4803, column: 5, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !13991, file: !3, line: 4803, column: 5)
!14042 = !DILocation(line: 0, scope: !13991)
!14043 = !DILocation(line: 0, scope: !14041)
!14044 = !DILocation(line: 4803, column: 5, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !14041, file: !3, line: 4803, column: 5)
!14046 = !DILocation(line: 4804, column: 7, scope: !14045)
!14047 = distinct !{!14047, !14040, !14048}
!14048 = !DILocation(line: 4804, column: 44, scope: !14041)
!14049 = !DILocation(line: 4808, column: 3, scope: !13995)
!14050 = !DILocation(line: 0, scope: !13993)
!14051 = !DILocation(line: 0, scope: !14006)
!14052 = !DILocation(line: 0, scope: !14014)
!14053 = !DILocation(line: 4808, column: 3, scope: !13994)
!14054 = !DILocation(line: 0, scope: !13995)
!14055 = !DILocation(line: 4810, column: 7, scope: !13993)
!14056 = !DILocation(line: 4813, column: 17, scope: !14006)
!14057 = !DILocation(line: 4813, column: 12, scope: !14006)
!14058 = !DILocation(line: 4813, column: 39, scope: !14005)
!14059 = !DILocation(line: 4813, column: 38, scope: !14005)
!14060 = !DILocation(line: 4813, column: 7, scope: !14006)
!14061 = !DILocation(line: 4815, column: 17, scope: !14004)
!14062 = !DILocation(line: 0, scope: !14004)
!14063 = !DILocation(line: 4817, column: 9, scope: !14010)
!14064 = !DILocation(line: 0, scope: !14010)
!14065 = !DILocation(line: 4817, column: 20, scope: !14009)
!14066 = !DILocation(line: 4817, column: 18, scope: !14009)
!14067 = !DILocation(line: 4817, column: 4, scope: !14010)
!14068 = !DILocation(line: 4819, column: 22, scope: !14008)
!14069 = !DILocation(line: 0, scope: !14008)
!14070 = !DILocation(line: 4820, column: 26, scope: !14008)
!14071 = !DILocation(line: 4820, column: 8, scope: !14008)
!14072 = !DILocation(line: 4817, column: 48, scope: !14009)
!14073 = !DILocation(line: 4817, column: 4, scope: !14009)
!14074 = distinct !{!14074, !14067, !14075}
!14075 = !DILocation(line: 4821, column: 6, scope: !14010)
!14076 = !DILocation(line: 4813, column: 55, scope: !14005)
!14077 = !DILocation(line: 4813, column: 7, scope: !14005)
!14078 = distinct !{!14078, !14060, !14079}
!14079 = !DILocation(line: 4822, column: 2, scope: !14006)
!14080 = !DILocation(line: 4824, column: 17, scope: !14014)
!14081 = !DILocation(line: 4824, column: 12, scope: !14014)
!14082 = !DILocation(line: 4824, column: 37, scope: !14013)
!14083 = !DILocation(line: 4824, column: 36, scope: !14013)
!14084 = !DILocation(line: 4824, column: 7, scope: !14014)
!14085 = !DILocation(line: 4826, column: 18, scope: !14012)
!14086 = !DILocation(line: 0, scope: !14012)
!14087 = !DILocation(line: 4828, column: 9, scope: !14018)
!14088 = !DILocation(line: 0, scope: !14018)
!14089 = !DILocation(line: 4828, column: 20, scope: !14017)
!14090 = !DILocation(line: 4828, column: 18, scope: !14017)
!14091 = !DILocation(line: 4828, column: 4, scope: !14018)
!14092 = !DILocation(line: 4830, column: 19, scope: !14016)
!14093 = !DILocation(line: 0, scope: !14016)
!14094 = !DILocation(line: 4831, column: 8, scope: !14016)
!14095 = !DILocation(line: 4828, column: 44, scope: !14017)
!14096 = !DILocation(line: 4828, column: 4, scope: !14017)
!14097 = distinct !{!14097, !14091, !14098}
!14098 = !DILocation(line: 4832, column: 6, scope: !14018)
!14099 = !DILocation(line: 4824, column: 53, scope: !14013)
!14100 = !DILocation(line: 4824, column: 7, scope: !14013)
!14101 = distinct !{!14101, !14084, !14102}
!14102 = !DILocation(line: 4833, column: 2, scope: !14014)
!14103 = !DILocation(line: 4834, column: 5, scope: !13994)
!14104 = distinct !{!14104, !14049, !14105}
!14105 = !DILocation(line: 4834, column: 5, scope: !13995)
!14106 = !DILocation(line: 4835, column: 1, scope: !13981)
!14107 = distinct !DISubprogram(name: "VEC_alias_pair_base_iterate", scope: !6, file: !6, line: 197, type: !14108, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14119)
!14108 = !DISubroutineType(types: !14109)
!14109 = !{!1450, !14110, !7, !14118}
!14110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14111, size: 64)
!14111 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alias_pair_base", file: !6, line: 197, baseType: !14112)
!14112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alias_pair_base", file: !6, line: 197, size: 192, elements: !14113)
!14113 = !{!14114, !14115, !14116}
!14114 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !14112, file: !6, line: 197, baseType: !7, size: 32)
!14115 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !14112, file: !6, line: 197, baseType: !7, size: 32, offset: 32)
!14116 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !14112, file: !6, line: 197, baseType: !14117, size: 128, offset: 64)
!14117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13883, size: 128, elements: !1556)
!14118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13882, size: 64)
!14119 = !{!14120, !14121, !14122}
!14120 = !DILocalVariable(name: "vec_", arg: 1, scope: !14107, file: !6, line: 197, type: !14110)
!14121 = !DILocalVariable(name: "ix_", arg: 2, scope: !14107, file: !6, line: 197, type: !7)
!14122 = !DILocalVariable(name: "ptr", arg: 3, scope: !14107, file: !6, line: 197, type: !14118)
!14123 = !DILocation(line: 0, scope: !14107)
!14124 = !DILocation(line: 197, column: 1, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14107, file: !6, line: 197, column: 1)
!14126 = !DILocation(line: 197, column: 1, scope: !14107)
!14127 = !DILocation(line: 197, column: 1, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14125, file: !6, line: 197, column: 1)
!14129 = !DILocation(line: 197, column: 1, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14125, file: !6, line: 197, column: 1)
!14131 = !DILocation(line: 0, scope: !14125)
!14132 = distinct !DISubprogram(name: "find_decls_types", scope: !3, file: !3, line: 4696, type: !14133, scopeLine: 4697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14135)
!14133 = !DISubroutineType(types: !14134)
!14134 = !{null, !1457, !2780}
!14135 = !{!14136, !14137}
!14136 = !DILocalVariable(name: "t", arg: 1, scope: !14132, file: !3, line: 4696, type: !1457)
!14137 = !DILocalVariable(name: "fld", arg: 2, scope: !14132, file: !3, line: 4696, type: !2780)
!14138 = !DILocation(line: 0, scope: !14132)
!14139 = !DILocation(line: 0, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14141, file: !3, line: 4700, column: 11)
!14141 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 4699, column: 5)
!14142 = !DILocation(line: 0, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14141, file: !3, line: 4702, column: 11)
!14144 = !DILocation(line: 4698, column: 3, scope: !14132)
!14145 = !DILocation(line: 4700, column: 39, scope: !14140)
!14146 = !DILocation(line: 4700, column: 45, scope: !14140)
!14147 = !DILocation(line: 4700, column: 12, scope: !14140)
!14148 = !DILocation(line: 4700, column: 11, scope: !14141)
!14149 = !DILocation(line: 4701, column: 2, scope: !14140)
!14150 = !DILocation(line: 4702, column: 11, scope: !14143)
!14151 = !DILocation(line: 4702, column: 11, scope: !14141)
!14152 = !DILocation(line: 4704, column: 11, scope: !14141)
!14153 = distinct !{!14153, !14144, !14154}
!14154 = !DILocation(line: 4705, column: 5, scope: !14132)
!14155 = !DILocation(line: 4706, column: 1, scope: !14132)
!14156 = distinct !DISubprogram(name: "find_decls_types_in_var", scope: !3, file: !3, line: 4845, type: !14157, scopeLine: 4846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{null, !13777, !2780}
!14159 = !{!14160, !14161}
!14160 = !DILocalVariable(name: "v", arg: 1, scope: !14156, file: !3, line: 4845, type: !13777)
!14161 = !DILocalVariable(name: "fld", arg: 2, scope: !14156, file: !3, line: 4845, type: !2780)
!14162 = !DILocation(line: 0, scope: !14156)
!14163 = !DILocation(line: 4847, column: 24, scope: !14156)
!14164 = !DILocation(line: 4847, column: 3, scope: !14156)
!14165 = !DILocation(line: 4848, column: 1, scope: !14156)
!14166 = distinct !DISubprogram(name: "free_lang_data_in_decl", scope: !3, file: !3, line: 4362, type: !6810, scopeLine: 4363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14167)
!14167 = !{!14168, !14169, !14172, !14175, !14180, !14181}
!14168 = !DILocalVariable(name: "decl", arg: 1, scope: !14166, file: !3, line: 4362, type: !1457)
!14169 = !DILocalVariable(name: "context", scope: !14170, file: !3, line: 4392, type: !1457)
!14170 = distinct !DILexicalBlock(scope: !14171, file: !3, line: 4391, column: 4)
!14171 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 4390, column: 6)
!14172 = !DILocalVariable(name: "code", scope: !14173, file: !3, line: 4396, type: !155)
!14173 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 4395, column: 8)
!14174 = distinct !DILexicalBlock(scope: !14170, file: !3, line: 4394, column: 10)
!14175 = !DILocalVariable(name: "t", scope: !14176, file: !3, line: 4422, type: !1457)
!14176 = distinct !DILexicalBlock(scope: !14177, file: !3, line: 4421, column: 2)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !3, line: 4420, column: 11)
!14178 = distinct !DILexicalBlock(scope: !14179, file: !3, line: 4419, column: 5)
!14179 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 4418, column: 6)
!14180 = !DILocalVariable(name: "locals", scope: !14176, file: !3, line: 4423, type: !2785)
!14181 = !DILocalVariable(name: "expr", scope: !14182, file: !3, line: 4461, type: !1457)
!14182 = distinct !DILexicalBlock(scope: !14183, file: !3, line: 4460, column: 5)
!14183 = distinct !DILexicalBlock(scope: !14179, file: !3, line: 4459, column: 12)
!14184 = !DILocation(line: 0, scope: !14166)
!14185 = !DILocation(line: 4364, column: 3, scope: !14166)
!14186 = !DILocation(line: 4367, column: 14, scope: !14166)
!14187 = !DILocation(line: 4367, column: 3, scope: !14166)
!14188 = !DILocation(line: 4369, column: 27, scope: !14166)
!14189 = !DILocation(line: 4375, column: 27, scope: !14166)
!14190 = !DILocation(line: 4378, column: 7, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 4378, column: 7)
!14192 = !DILocation(line: 4378, column: 7, scope: !14166)
!14193 = !DILocation(line: 4379, column: 5, scope: !14191)
!14194 = !DILocation(line: 4379, column: 34, scope: !14191)
!14195 = !DILocation(line: 4383, column: 7, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 4383, column: 7)
!14197 = !DILocation(line: 4383, column: 24, scope: !14196)
!14198 = !DILocation(line: 4383, column: 7, scope: !14166)
!14199 = !DILocation(line: 0, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 4386, column: 7)
!14201 = !DILocation(line: 4386, column: 7, scope: !14200)
!14202 = !DILocation(line: 4384, column: 27, scope: !14196)
!14203 = !DILocation(line: 4384, column: 5, scope: !14196)
!14204 = !DILocation(line: 4384, column: 25, scope: !14196)
!14205 = !DILocation(line: 4387, column: 7, scope: !14200)
!14206 = !DILocation(line: 4387, column: 10, scope: !14200)
!14207 = !DILocation(line: 4387, column: 42, scope: !14200)
!14208 = !DILocation(line: 4386, column: 7, scope: !14166)
!14209 = !DILocation(line: 4388, column: 25, scope: !14200)
!14210 = !DILocation(line: 4388, column: 5, scope: !14200)
!14211 = !DILocation(line: 4390, column: 6, scope: !14171)
!14212 = !DILocation(line: 4390, column: 23, scope: !14171)
!14213 = !DILocation(line: 4390, column: 6, scope: !14166)
!14214 = !DILocation(line: 0, scope: !14170)
!14215 = !DILocation(line: 4394, column: 10, scope: !14174)
!14216 = !DILocation(line: 4394, column: 10, scope: !14170)
!14217 = !DILocation(line: 4396, column: 25, scope: !14173)
!14218 = !DILocation(line: 4397, column: 12, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 4397, column: 7)
!14220 = !DILocation(line: 4397, column: 29, scope: !14219)
!14221 = !DILocation(line: 4397, column: 32, scope: !14219)
!14222 = !DILocation(line: 4397, column: 7, scope: !14173)
!14223 = !DILocation(line: 4401, column: 7, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14219, file: !3, line: 4398, column: 5)
!14225 = !DILocation(line: 4401, column: 27, scope: !14224)
!14226 = !DILocation(line: 4402, column: 5, scope: !14224)
!14227 = !DILocation(line: 4404, column: 7, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 4404, column: 7)
!14229 = !DILocation(line: 4404, column: 7, scope: !14173)
!14230 = !DILocation(line: 4405, column: 25, scope: !14228)
!14231 = !DILocation(line: 4405, column: 5, scope: !14228)
!14232 = !DILocation(line: 4414, column: 23, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 4414, column: 6)
!14234 = !DILocation(line: 4415, column: 9, scope: !14233)
!14235 = !DILocation(line: 4415, column: 26, scope: !14233)
!14236 = !DILocation(line: 4415, column: 6, scope: !14233)
!14237 = !DILocation(line: 4416, column: 4, scope: !14233)
!14238 = !DILocation(line: 4416, column: 25, scope: !14233)
!14239 = !DILocation(line: 4418, column: 23, scope: !14179)
!14240 = !DILocation(line: 4418, column: 6, scope: !14166)
!14241 = !DILocation(line: 4420, column: 11, scope: !14177)
!14242 = !DILocation(line: 4420, column: 11, scope: !14178)
!14243 = !DILocation(line: 4434, column: 13, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 4434, column: 4)
!14245 = !DILocation(line: 4434, column: 9, scope: !14244)
!14246 = !DILocation(line: 0, scope: !14244)
!14247 = !DILocation(line: 0, scope: !14176)
!14248 = !DILocation(line: 4434, column: 4, scope: !14244)
!14249 = !DILocation(line: 4435, column: 6, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14244, file: !3, line: 4434, column: 4)
!14251 = !DILocation(line: 4435, column: 23, scope: !14250)
!14252 = !DILocation(line: 4434, column: 43, scope: !14250)
!14253 = !DILocation(line: 4434, column: 4, scope: !14250)
!14254 = distinct !{!14254, !14248, !14255}
!14255 = !DILocation(line: 4435, column: 25, scope: !14244)
!14256 = !DILocation(line: 4438, column: 13, scope: !14176)
!14257 = !DILocation(line: 4439, column: 8, scope: !14176)
!14258 = !DILocation(line: 4439, column: 37, scope: !14176)
!14259 = !DILocation(line: 4440, column: 4, scope: !14176)
!14260 = !DILocation(line: 4440, column: 4, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 4440, column: 4)
!14262 = !DILocation(line: 4442, column: 36, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14264, file: !3, line: 4441, column: 6)
!14264 = distinct !DILexicalBlock(scope: !14261, file: !3, line: 4440, column: 4)
!14265 = !DILocation(line: 4442, column: 8, scope: !14263)
!14266 = !DILocation(line: 4446, column: 8, scope: !14263)
!14267 = !DILocation(line: 4446, column: 38, scope: !14263)
!14268 = !DILocation(line: 4440, column: 18, scope: !14264)
!14269 = !DILocation(line: 4440, column: 4, scope: !14264)
!14270 = distinct !{!14270, !14260, !14271}
!14271 = !DILocation(line: 4447, column: 6, scope: !14261)
!14272 = !DILocation(line: 4450, column: 35, scope: !14176)
!14273 = !DILocation(line: 4450, column: 4, scope: !14176)
!14274 = !DILocation(line: 4452, column: 4, scope: !14176)
!14275 = !DILocation(line: 4453, column: 2, scope: !14176)
!14276 = !DILocation(line: 4457, column: 7, scope: !14178)
!14277 = !DILocation(line: 4457, column: 30, scope: !14178)
!14278 = !DILocation(line: 4458, column: 5, scope: !14178)
!14279 = !DILocation(line: 4459, column: 12, scope: !14179)
!14280 = !DILocation(line: 4461, column: 19, scope: !14182)
!14281 = !DILocation(line: 0, scope: !14182)
!14282 = !DILocation(line: 4462, column: 11, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14182, file: !3, line: 4462, column: 11)
!14284 = !DILocation(line: 4463, column: 4, scope: !14283)
!14285 = !DILocation(line: 4463, column: 7, scope: !14283)
!14286 = !DILocation(line: 4463, column: 24, scope: !14283)
!14287 = !DILocation(line: 4464, column: 4, scope: !14283)
!14288 = !DILocation(line: 4464, column: 8, scope: !14283)
!14289 = !DILocation(line: 4464, column: 27, scope: !14283)
!14290 = !DILocation(line: 4464, column: 31, scope: !14283)
!14291 = !DILocation(line: 4462, column: 11, scope: !14182)
!14292 = !DILocation(line: 4465, column: 2, scope: !14283)
!14293 = !DILocation(line: 4467, column: 11, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14182, file: !3, line: 4467, column: 11)
!14295 = !DILocation(line: 4468, column: 4, scope: !14294)
!14296 = !DILocation(line: 4468, column: 9, scope: !14294)
!14297 = !DILocation(line: 4468, column: 28, scope: !14294)
!14298 = !DILocation(line: 4468, column: 32, scope: !14294)
!14299 = !DILocation(line: 4467, column: 11, scope: !14182)
!14300 = !DILocation(line: 4469, column: 2, scope: !14294)
!14301 = !DILocation(line: 4469, column: 22, scope: !14294)
!14302 = !DILocation(line: 4471, column: 29, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14183, file: !3, line: 4471, column: 12)
!14304 = !DILocation(line: 4471, column: 12, scope: !14183)
!14305 = !DILocation(line: 4473, column: 7, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14303, file: !3, line: 4472, column: 5)
!14307 = !DILocation(line: 4473, column: 27, scope: !14306)
!14308 = !DILocation(line: 4479, column: 27, scope: !14306)
!14309 = !DILocation(line: 4480, column: 5, scope: !14306)
!14310 = !DILocation(line: 4481, column: 1, scope: !14166)
!14311 = distinct !DISubprogram(name: "free_lang_data_in_type", scope: !3, file: !3, line: 4196, type: !6810, scopeLine: 4197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14312)
!14312 = !{!14313, !14314, !14317, !14321, !14324, !14327}
!14313 = !DILocalVariable(name: "type", arg: 1, scope: !14311, file: !3, line: 4196, type: !1457)
!14314 = !DILocalVariable(name: "p", scope: !14315, file: !3, line: 4218, type: !1457)
!14315 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 4212, column: 5)
!14316 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 4211, column: 7)
!14317 = !DILocalVariable(name: "arg_type", scope: !14318, file: !3, line: 4222, type: !1457)
!14318 = distinct !DILexicalBlock(scope: !14319, file: !3, line: 4221, column: 2)
!14319 = distinct !DILexicalBlock(scope: !14320, file: !3, line: 4220, column: 7)
!14320 = distinct !DILexicalBlock(scope: !14315, file: !3, line: 4220, column: 7)
!14321 = !DILocalVariable(name: "quals", scope: !14322, file: !3, line: 4226, type: !1450)
!14322 = distinct !DILexicalBlock(scope: !14323, file: !3, line: 4225, column: 6)
!14323 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4224, column: 8)
!14324 = !DILocalVariable(name: "prev", scope: !14325, file: !3, line: 4239, type: !1457)
!14325 = distinct !DILexicalBlock(scope: !14326, file: !3, line: 4238, column: 5)
!14326 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 4237, column: 7)
!14327 = !DILocalVariable(name: "member", scope: !14325, file: !3, line: 4239, type: !1457)
!14328 = !DILocation(line: 0, scope: !14311)
!14329 = !DILocation(line: 4198, column: 3, scope: !14311)
!14330 = !DILocation(line: 4201, column: 14, scope: !14311)
!14331 = !DILocation(line: 4201, column: 3, scope: !14311)
!14332 = !DILocation(line: 4203, column: 27, scope: !14311)
!14333 = !DILocation(line: 4209, column: 27, scope: !14311)
!14334 = !DILocation(line: 4211, column: 24, scope: !14316)
!14335 = !DILocation(line: 4211, column: 7, scope: !14311)
!14336 = !DILocation(line: 4220, column: 16, scope: !14320)
!14337 = !DILocation(line: 4220, column: 12, scope: !14320)
!14338 = !DILocation(line: 0, scope: !14320)
!14339 = !DILocation(line: 0, scope: !14315)
!14340 = !DILocation(line: 4220, column: 7, scope: !14320)
!14341 = !DILocation(line: 4222, column: 20, scope: !14318)
!14342 = !DILocation(line: 0, scope: !14318)
!14343 = !DILocation(line: 4224, column: 8, scope: !14323)
!14344 = !DILocation(line: 4224, column: 33, scope: !14323)
!14345 = !DILocation(line: 4224, column: 36, scope: !14323)
!14346 = !DILocation(line: 4224, column: 8, scope: !14318)
!14347 = !DILocation(line: 4226, column: 20, scope: !14322)
!14348 = !DILocation(line: 0, scope: !14322)
!14349 = !DILocation(line: 4229, column: 25, scope: !14322)
!14350 = !DILocation(line: 4229, column: 23, scope: !14322)
!14351 = !DILocation(line: 4230, column: 8, scope: !14322)
!14352 = !DILocation(line: 4231, column: 6, scope: !14322)
!14353 = !DILocation(line: 4220, column: 46, scope: !14319)
!14354 = !DILocation(line: 4220, column: 7, scope: !14319)
!14355 = distinct !{!14355, !14340, !14356}
!14356 = !DILocation(line: 4232, column: 2, scope: !14320)
!14357 = !DILocation(line: 4237, column: 7, scope: !14326)
!14358 = !DILocation(line: 4237, column: 7, scope: !14311)
!14359 = !DILocation(line: 0, scope: !14325)
!14360 = !DILocation(line: 4249, column: 16, scope: !14325)
!14361 = !DILocation(line: 4250, column: 7, scope: !14325)
!14362 = !DILocation(line: 4252, column: 8, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14364, file: !3, line: 4252, column: 8)
!14364 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 4251, column: 2)
!14365 = !DILocation(line: 4252, column: 27, scope: !14363)
!14366 = !DILocation(line: 4252, column: 8, scope: !14364)
!14367 = !DILocation(line: 4254, column: 12, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 4254, column: 12)
!14369 = distinct !DILexicalBlock(scope: !14363, file: !3, line: 4253, column: 6)
!14370 = !DILocation(line: 4254, column: 12, scope: !14369)
!14371 = !DILocation(line: 4255, column: 3, scope: !14368)
!14372 = !DILocation(line: 4255, column: 21, scope: !14368)
!14373 = !DILocation(line: 4257, column: 22, scope: !14368)
!14374 = !DILocation(line: 4261, column: 13, scope: !14364)
!14375 = distinct !{!14375, !14361, !14376}
!14376 = !DILocation(line: 4262, column: 2, scope: !14325)
!14377 = !DILocation(line: 4264, column: 11, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 4264, column: 11)
!14379 = !DILocation(line: 4264, column: 11, scope: !14325)
!14380 = !DILocation(line: 4265, column: 2, scope: !14378)
!14381 = !DILocation(line: 4265, column: 20, scope: !14378)
!14382 = !DILocation(line: 4267, column: 21, scope: !14378)
!14383 = !DILocation(line: 4269, column: 7, scope: !14325)
!14384 = !DILocation(line: 4269, column: 27, scope: !14325)
!14385 = !DILocation(line: 4270, column: 11, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 4270, column: 11)
!14387 = !DILocation(line: 4270, column: 11, scope: !14325)
!14388 = !DILocation(line: 4271, column: 2, scope: !14386)
!14389 = !DILocation(line: 4277, column: 7, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14326, file: !3, line: 4274, column: 5)
!14391 = !DILocation(line: 4277, column: 31, scope: !14390)
!14392 = !DILocation(line: 4280, column: 3, scope: !14311)
!14393 = !DILocation(line: 4280, column: 23, scope: !14311)
!14394 = !DILocation(line: 4281, column: 7, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 4281, column: 7)
!14396 = !DILocation(line: 4281, column: 24, scope: !14395)
!14397 = !DILocation(line: 4281, column: 7, scope: !14311)
!14398 = !DILocation(line: 4282, column: 5, scope: !14395)
!14399 = !DILocation(line: 4282, column: 27, scope: !14395)
!14400 = !DILocation(line: 4283, column: 1, scope: !14311)
!14401 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !6, file: !6, line: 184, type: !14402, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14404)
!14402 = !DISubroutineType(types: !14403)
!14403 = !{null, !6434}
!14404 = !{!14405}
!14405 = !DILocalVariable(name: "vec_", arg: 1, scope: !14401, file: !6, line: 184, type: !6434)
!14406 = !DILocation(line: 0, scope: !14401)
!14407 = !DILocation(line: 184, column: 1, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14401, file: !6, line: 184, column: 1)
!14409 = !DILocation(line: 184, column: 1, scope: !14401)
!14410 = distinct !DISubprogram(name: "find_decls_types_in_eh_region", scope: !3, file: !3, line: 4738, type: !14411, scopeLine: 4739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14413)
!14411 = !DISubroutineType(types: !14412)
!14412 = !{null, !1728, !2780}
!14413 = !{!14414, !14415, !14416}
!14414 = !DILocalVariable(name: "r", arg: 1, scope: !14410, file: !3, line: 4738, type: !1728)
!14415 = !DILocalVariable(name: "fld", arg: 2, scope: !14410, file: !3, line: 4738, type: !2780)
!14416 = !DILocalVariable(name: "c", scope: !14417, file: !3, line: 4747, type: !14419)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !3, line: 4746, column: 7)
!14418 = distinct !DILexicalBlock(scope: !14410, file: !3, line: 4741, column: 5)
!14419 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_catch", file: !149, line: 181, baseType: !1744)
!14420 = !DILocation(line: 0, scope: !14410)
!14421 = !DILocation(line: 4740, column: 14, scope: !14410)
!14422 = !DILocation(line: 4740, column: 3, scope: !14410)
!14423 = !DILocation(line: 4752, column: 14, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 4752, column: 2)
!14425 = !DILocation(line: 4752, column: 23, scope: !14424)
!14426 = !DILocation(line: 0, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14428, file: !3, line: 4753, column: 4)
!14428 = distinct !DILexicalBlock(scope: !14424, file: !3, line: 4752, column: 2)
!14429 = !DILocation(line: 4752, column: 7, scope: !14424)
!14430 = !DILocation(line: 0, scope: !14424)
!14431 = !DILocation(line: 0, scope: !14417)
!14432 = !DILocation(line: 4752, column: 2, scope: !14424)
!14433 = !DILocation(line: 4754, column: 50, scope: !14427)
!14434 = !DILocation(line: 4754, column: 21, scope: !14427)
!14435 = !DILocation(line: 4754, column: 19, scope: !14427)
!14436 = !DILocation(line: 4755, column: 6, scope: !14427)
!14437 = !DILocation(line: 4752, column: 47, scope: !14428)
!14438 = !DILocation(line: 4752, column: 2, scope: !14428)
!14439 = distinct !{!14439, !14432, !14440}
!14440 = !DILocation(line: 4756, column: 4, scope: !14424)
!14441 = !DILocation(line: 4762, column: 43, scope: !14418)
!14442 = !DILocation(line: 4762, column: 4, scope: !14418)
!14443 = !DILocation(line: 4762, column: 2, scope: !14418)
!14444 = !DILocation(line: 4763, column: 7, scope: !14418)
!14445 = !DILocation(line: 4764, column: 7, scope: !14418)
!14446 = !DILocation(line: 4767, column: 7, scope: !14418)
!14447 = !DILocation(line: 4769, column: 7, scope: !14418)
!14448 = !DILocation(line: 4771, column: 1, scope: !14410)
!14449 = distinct !DISubprogram(name: "ehr_next", scope: !149, file: !149, line: 364, type: !14450, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14452)
!14450 = !DISubroutineType(types: !14451)
!14451 = !{!1728, !1728, !1728}
!14452 = !{!14453, !14454}
!14453 = !DILocalVariable(name: "r", arg: 1, scope: !14449, file: !149, line: 364, type: !1728)
!14454 = !DILocalVariable(name: "start", arg: 2, scope: !14449, file: !149, line: 364, type: !1728)
!14455 = !DILocation(line: 0, scope: !14449)
!14456 = !DILocation(line: 366, column: 10, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14449, file: !149, line: 366, column: 7)
!14458 = !DILocation(line: 366, column: 7, scope: !14457)
!14459 = !DILocation(line: 366, column: 7, scope: !14449)
!14460 = !DILocation(line: 367, column: 5, scope: !14457)
!14461 = !DILocation(line: 368, column: 15, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14457, file: !149, line: 368, column: 12)
!14463 = !DILocation(line: 368, column: 12, scope: !14462)
!14464 = !DILocation(line: 368, column: 30, scope: !14462)
!14465 = !DILocation(line: 368, column: 25, scope: !14462)
!14466 = !DILocation(line: 372, column: 7, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14462, file: !149, line: 371, column: 5)
!14468 = !DILocation(line: 369, column: 5, scope: !14462)
!14469 = !DILocation(line: 374, column: 11, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14467, file: !149, line: 373, column: 2)
!14471 = !DILocation(line: 375, column: 10, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14470, file: !149, line: 375, column: 8)
!14473 = !DILocation(line: 375, column: 8, scope: !14470)
!14474 = !DILocation(line: 378, column: 17, scope: !14467)
!14475 = !DILocation(line: 378, column: 27, scope: !14467)
!14476 = !DILocation(line: 377, column: 2, scope: !14470)
!14477 = distinct !{!14477, !14466, !14478}
!14478 = !DILocation(line: 378, column: 34, scope: !14467)
!14479 = !DILocation(line: 382, column: 1, scope: !14449)
!14480 = distinct !DISubprogram(name: "gsi_end_p", scope: !1383, file: !1383, line: 4467, type: !14481, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14483)
!14481 = !DISubroutineType(types: !14482)
!14482 = !{!1449, !13996}
!14483 = !{!14484}
!14484 = !DILocalVariable(name: "i", arg: 1, scope: !14480, file: !1383, line: 4467, type: !13996)
!14485 = !DILocation(line: 4467, column: 33, scope: !14480)
!14486 = !DILocation(line: 4469, column: 12, scope: !14480)
!14487 = !DILocation(line: 4469, column: 16, scope: !14480)
!14488 = !DILocation(line: 4469, column: 10, scope: !14480)
!14489 = !DILocation(line: 4469, column: 3, scope: !14480)
!14490 = distinct !DISubprogram(name: "gsi_stmt", scope: !1383, file: !1383, line: 4501, type: !14491, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14493)
!14491 = !DISubroutineType(types: !14492)
!14492 = !{!1929, !13996}
!14493 = !{!14494}
!14494 = !DILocalVariable(name: "i", arg: 1, scope: !14490, file: !1383, line: 4501, type: !13996)
!14495 = !DILocation(line: 4501, column: 32, scope: !14490)
!14496 = !DILocation(line: 4503, column: 12, scope: !14490)
!14497 = !DILocation(line: 4503, column: 17, scope: !14490)
!14498 = !DILocation(line: 4503, column: 3, scope: !14490)
!14499 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !1383, file: !1383, line: 3061, type: !14500, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14503)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{!7, !14502}
!14502 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !1458, line: 60, baseType: !2789)
!14503 = !{!14504}
!14504 = !DILocalVariable(name: "gs", arg: 1, scope: !14499, file: !1383, line: 3061, type: !14502)
!14505 = !DILocation(line: 0, scope: !14499)
!14506 = !DILocation(line: 3064, column: 25, scope: !14499)
!14507 = !DILocation(line: 3064, column: 3, scope: !14499)
!14508 = distinct !DISubprogram(name: "gimple_phi_arg_def_ptr", scope: !12677, file: !12677, line: 459, type: !14509, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14511)
!14509 = !DISubroutineType(types: !14510)
!14510 = !{!1964, !1929, !1830}
!14511 = !{!14512, !14513}
!14512 = !DILocalVariable(name: "gs", arg: 1, scope: !14508, file: !12677, line: 459, type: !1929)
!14513 = !DILocalVariable(name: "index", arg: 2, scope: !14508, file: !12677, line: 459, type: !1830)
!14514 = !DILocation(line: 0, scope: !14508)
!14515 = !DILocation(line: 461, column: 31, scope: !14508)
!14516 = !DILocation(line: 461, column: 11, scope: !14508)
!14517 = !DILocation(line: 461, column: 39, scope: !14508)
!14518 = !DILocation(line: 461, column: 3, scope: !14508)
!14519 = distinct !DISubprogram(name: "gsi_next", scope: !1383, file: !1383, line: 4485, type: !14520, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14523)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{null, !14522}
!14522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13996, size: 64)
!14523 = !{!14524}
!14524 = !DILocalVariable(name: "i", arg: 1, scope: !14519, file: !1383, line: 4485, type: !14522)
!14525 = !DILocation(line: 0, scope: !14519)
!14526 = !DILocation(line: 4487, column: 15, scope: !14519)
!14527 = !DILocation(line: 4487, column: 20, scope: !14519)
!14528 = !DILocation(line: 4487, column: 10, scope: !14519)
!14529 = !DILocation(line: 4488, column: 1, scope: !14519)
!14530 = distinct !DISubprogram(name: "gsi_start_bb", scope: !1383, file: !1383, line: 4418, type: !14531, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14533)
!14531 = !DISubroutineType(types: !14532)
!14532 = !{!13996, !1892}
!14533 = !{!14534, !14535, !14536}
!14534 = !DILocalVariable(name: "bb", arg: 1, scope: !14530, file: !1383, line: 4418, type: !1892)
!14535 = !DILocalVariable(name: "i", scope: !14530, file: !1383, line: 4420, type: !13996)
!14536 = !DILocalVariable(name: "seq", scope: !14530, file: !1383, line: 4421, type: !1919)
!14537 = !DILocation(line: 0, scope: !14530)
!14538 = !DILocation(line: 4420, column: 24, scope: !14530)
!14539 = !DILocation(line: 4423, column: 9, scope: !14530)
!14540 = !DILocation(line: 4424, column: 11, scope: !14530)
!14541 = !DILocation(line: 4424, column: 5, scope: !14530)
!14542 = !DILocation(line: 4424, column: 9, scope: !14530)
!14543 = !DILocation(line: 4425, column: 5, scope: !14530)
!14544 = !DILocation(line: 4425, column: 9, scope: !14530)
!14545 = !DILocation(line: 4426, column: 5, scope: !14530)
!14546 = !DILocation(line: 4426, column: 8, scope: !14530)
!14547 = !DILocation(line: 4429, column: 1, scope: !14530)
!14548 = distinct !DISubprogram(name: "gimple_num_ops", scope: !1383, file: !1383, line: 1596, type: !14500, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14549)
!14549 = !{!14550}
!14550 = !DILocalVariable(name: "gs", arg: 1, scope: !14548, file: !1383, line: 1596, type: !14502)
!14551 = !DILocation(line: 0, scope: !14548)
!14552 = !DILocation(line: 1598, column: 21, scope: !14548)
!14553 = !DILocation(line: 1598, column: 3, scope: !14548)
!14554 = distinct !DISubprogram(name: "gimple_op", scope: !1383, file: !1383, line: 1631, type: !14555, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14557)
!14555 = !DISubroutineType(types: !14556)
!14556 = !{!1457, !14502, !7}
!14557 = !{!14558, !14559}
!14558 = !DILocalVariable(name: "gs", arg: 1, scope: !14554, file: !1383, line: 1631, type: !14502)
!14559 = !DILocalVariable(name: "i", arg: 2, scope: !14554, file: !1383, line: 1631, type: !7)
!14560 = !DILocation(line: 0, scope: !14554)
!14561 = !DILocation(line: 1633, column: 7, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14554, file: !1383, line: 1633, column: 7)
!14563 = !DILocation(line: 1633, column: 7, scope: !14554)
!14564 = !DILocation(line: 1638, column: 14, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14562, file: !1383, line: 1634, column: 5)
!14566 = !DILocation(line: 1638, column: 7, scope: !14565)
!14567 = !DILocation(line: 0, scope: !14562)
!14568 = !DILocation(line: 1642, column: 1, scope: !14554)
!14569 = distinct !DISubprogram(name: "get_eh_types_for_runtime", scope: !3, file: !3, line: 4712, type: !3923, scopeLine: 4713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14570)
!14570 = !{!14571, !14572, !14573, !14574}
!14571 = !DILocalVariable(name: "list", arg: 1, scope: !14569, file: !3, line: 4712, type: !1457)
!14572 = !DILocalVariable(name: "head", scope: !14569, file: !3, line: 4714, type: !1457)
!14573 = !DILocalVariable(name: "prev", scope: !14569, file: !3, line: 4714, type: !1457)
!14574 = !DILocalVariable(name: "n", scope: !14575, file: !3, line: 4724, type: !1457)
!14575 = distinct !DILexicalBlock(scope: !14569, file: !3, line: 4723, column: 5)
!14576 = !DILocation(line: 0, scope: !14569)
!14577 = !DILocation(line: 4716, column: 12, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14569, file: !3, line: 4716, column: 7)
!14579 = !DILocation(line: 4716, column: 7, scope: !14569)
!14580 = !DILocation(line: 4719, column: 10, scope: !14569)
!14581 = !DILocation(line: 4722, column: 3, scope: !14569)
!14582 = !DILocation(line: 4724, column: 16, scope: !14575)
!14583 = !DILocation(line: 0, scope: !14575)
!14584 = !DILocation(line: 4725, column: 7, scope: !14575)
!14585 = !DILocation(line: 4725, column: 25, scope: !14575)
!14586 = distinct !{!14586, !14581, !14587}
!14587 = !DILocation(line: 4728, column: 5, scope: !14569)
!14588 = !DILocation(line: 4731, column: 1, scope: !14569)
!14589 = distinct !DISubprogram(name: "find_decls_types_r", scope: !3, file: !3, line: 4566, type: !10962, scopeLine: 4567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14590)
!14590 = !{!14591, !14592, !14593, !14594, !14595, !14596, !14602, !14603}
!14591 = !DILocalVariable(name: "tp", arg: 1, scope: !14589, file: !3, line: 4566, type: !1964)
!14592 = !DILocalVariable(name: "ws", arg: 2, scope: !14589, file: !3, line: 4566, type: !10643)
!14593 = !DILocalVariable(name: "data", arg: 3, scope: !14589, file: !3, line: 4566, type: !1454)
!14594 = !DILocalVariable(name: "t", scope: !14589, file: !3, line: 4568, type: !1457)
!14595 = !DILocalVariable(name: "fld", scope: !14589, file: !3, line: 4569, type: !2780)
!14596 = !DILocalVariable(name: "i", scope: !14597, file: !3, line: 4653, type: !7)
!14597 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 4652, column: 2)
!14598 = distinct !DILexicalBlock(scope: !14599, file: !3, line: 4651, column: 11)
!14599 = distinct !DILexicalBlock(scope: !14600, file: !3, line: 4630, column: 5)
!14600 = distinct !DILexicalBlock(scope: !14601, file: !3, line: 4629, column: 12)
!14601 = distinct !DILexicalBlock(scope: !14589, file: !3, line: 4582, column: 7)
!14602 = !DILocalVariable(name: "tem", scope: !14597, file: !3, line: 4654, type: !1457)
!14603 = !DILocalVariable(name: "tem", scope: !14604, file: !3, line: 4671, type: !1457)
!14604 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 4670, column: 2)
!14605 = distinct !DILexicalBlock(scope: !14599, file: !3, line: 4669, column: 11)
!14606 = !DILocation(line: 0, scope: !14589)
!14607 = !DILocation(line: 4568, column: 12, scope: !14589)
!14608 = !DILocation(line: 4569, column: 34, scope: !14589)
!14609 = !DILocation(line: 4571, column: 7, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14589, file: !3, line: 4571, column: 7)
!14611 = !DILocation(line: 4571, column: 21, scope: !14610)
!14612 = !DILocation(line: 4571, column: 7, scope: !14589)
!14613 = !DILocation(line: 4576, column: 7, scope: !14614)
!14614 = distinct !DILexicalBlock(scope: !14589, file: !3, line: 4576, column: 7)
!14615 = !DILocation(line: 4576, column: 7, scope: !14589)
!14616 = !DILocation(line: 4578, column: 11, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14614, file: !3, line: 4577, column: 5)
!14618 = !DILocation(line: 4579, column: 7, scope: !14617)
!14619 = !DILocation(line: 4582, column: 7, scope: !14601)
!14620 = !DILocation(line: 4582, column: 7, scope: !14589)
!14621 = !DILocation(line: 4586, column: 7, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14601, file: !3, line: 4583, column: 5)
!14623 = !DILocation(line: 4588, column: 26, scope: !14622)
!14624 = !DILocation(line: 4588, column: 7, scope: !14622)
!14625 = !DILocation(line: 4589, column: 26, scope: !14622)
!14626 = !DILocation(line: 4589, column: 7, scope: !14622)
!14627 = !DILocation(line: 4590, column: 26, scope: !14622)
!14628 = !DILocation(line: 4590, column: 7, scope: !14622)
!14629 = !DILocation(line: 4591, column: 26, scope: !14622)
!14630 = !DILocation(line: 4591, column: 7, scope: !14622)
!14631 = !DILocation(line: 4595, column: 11, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 4595, column: 11)
!14633 = !DILocation(line: 4595, column: 25, scope: !14632)
!14634 = !DILocation(line: 4595, column: 11, scope: !14622)
!14635 = !DILocation(line: 4596, column: 21, scope: !14632)
!14636 = !DILocation(line: 4596, column: 2, scope: !14632)
!14637 = !DILocation(line: 4598, column: 26, scope: !14622)
!14638 = !DILocation(line: 4598, column: 7, scope: !14622)
!14639 = !DILocation(line: 4599, column: 26, scope: !14622)
!14640 = !DILocation(line: 4599, column: 7, scope: !14622)
!14641 = !DILocation(line: 4601, column: 11, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 4601, column: 11)
!14643 = !DILocation(line: 4601, column: 25, scope: !14642)
!14644 = !DILocation(line: 4601, column: 11, scope: !14622)
!14645 = !DILocation(line: 4603, column: 23, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14642, file: !3, line: 4602, column: 2)
!14647 = !DILocation(line: 4603, column: 4, scope: !14646)
!14648 = !DILocation(line: 4604, column: 23, scope: !14646)
!14649 = !DILocation(line: 4604, column: 4, scope: !14646)
!14650 = !DILocation(line: 4605, column: 2, scope: !14646)
!14651 = !DILocation(line: 4606, column: 30, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14642, file: !3, line: 4606, column: 16)
!14653 = !DILocation(line: 4606, column: 16, scope: !14642)
!14654 = !DILocation(line: 4608, column: 23, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 4607, column: 2)
!14656 = !DILocation(line: 4608, column: 4, scope: !14655)
!14657 = !DILocation(line: 4609, column: 23, scope: !14655)
!14658 = !DILocation(line: 4609, column: 4, scope: !14655)
!14659 = !DILocation(line: 4610, column: 2, scope: !14655)
!14660 = !DILocation(line: 4611, column: 30, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 4611, column: 16)
!14662 = !DILocation(line: 4611, column: 16, scope: !14652)
!14663 = !DILocation(line: 4613, column: 23, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4612, column: 2)
!14665 = !DILocation(line: 4613, column: 4, scope: !14664)
!14666 = !DILocation(line: 4614, column: 23, scope: !14664)
!14667 = !DILocation(line: 4614, column: 4, scope: !14664)
!14668 = !DILocation(line: 4615, column: 23, scope: !14664)
!14669 = !DILocation(line: 4615, column: 4, scope: !14664)
!14670 = !DILocation(line: 4616, column: 23, scope: !14664)
!14671 = !DILocation(line: 4616, column: 4, scope: !14664)
!14672 = !DILocation(line: 4617, column: 23, scope: !14664)
!14673 = !DILocation(line: 4617, column: 4, scope: !14664)
!14674 = !DILocation(line: 4618, column: 2, scope: !14664)
!14675 = !DILocation(line: 4619, column: 30, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4619, column: 16)
!14677 = !DILocation(line: 4619, column: 16, scope: !14661)
!14678 = !DILocation(line: 4621, column: 23, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14676, file: !3, line: 4620, column: 2)
!14680 = !DILocation(line: 4621, column: 4, scope: !14679)
!14681 = !DILocation(line: 4622, column: 23, scope: !14679)
!14682 = !DILocation(line: 4622, column: 4, scope: !14679)
!14683 = !DILocation(line: 4623, column: 2, scope: !14679)
!14684 = !DILocation(line: 4625, column: 11, scope: !14685)
!14685 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 4625, column: 11)
!14686 = !DILocation(line: 4625, column: 25, scope: !14685)
!14687 = !DILocation(line: 4625, column: 11, scope: !14622)
!14688 = !DILocation(line: 4626, column: 21, scope: !14685)
!14689 = !DILocation(line: 4626, column: 2, scope: !14685)
!14690 = !DILocation(line: 4627, column: 11, scope: !14622)
!14691 = !DILocation(line: 4628, column: 5, scope: !14622)
!14692 = !DILocation(line: 4629, column: 12, scope: !14600)
!14693 = !DILocation(line: 4629, column: 12, scope: !14601)
!14694 = !DILocation(line: 4633, column: 7, scope: !14599)
!14695 = !DILocation(line: 4635, column: 12, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14599, file: !3, line: 4635, column: 11)
!14697 = !DILocation(line: 4635, column: 11, scope: !14599)
!14698 = !DILocation(line: 4636, column: 21, scope: !14696)
!14699 = !DILocation(line: 4636, column: 2, scope: !14696)
!14700 = !DILocation(line: 4637, column: 26, scope: !14599)
!14701 = !DILocation(line: 4637, column: 7, scope: !14599)
!14702 = !DILocation(line: 4638, column: 26, scope: !14599)
!14703 = !DILocation(line: 4638, column: 7, scope: !14599)
!14704 = !DILocation(line: 4639, column: 26, scope: !14599)
!14705 = !DILocation(line: 4639, column: 7, scope: !14599)
!14706 = !DILocation(line: 4640, column: 26, scope: !14599)
!14707 = !DILocation(line: 4640, column: 7, scope: !14599)
!14708 = !DILocation(line: 4641, column: 26, scope: !14599)
!14709 = !DILocation(line: 4641, column: 7, scope: !14599)
!14710 = !DILocation(line: 4642, column: 26, scope: !14599)
!14711 = !DILocation(line: 4642, column: 7, scope: !14599)
!14712 = !DILocation(line: 4643, column: 26, scope: !14599)
!14713 = !DILocation(line: 4643, column: 7, scope: !14599)
!14714 = !DILocation(line: 4644, column: 12, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14599, file: !3, line: 4644, column: 11)
!14716 = !DILocation(line: 4644, column: 11, scope: !14599)
!14717 = !DILocation(line: 4645, column: 21, scope: !14715)
!14718 = !DILocation(line: 4645, column: 2, scope: !14715)
!14719 = !DILocation(line: 4646, column: 26, scope: !14599)
!14720 = !DILocation(line: 4646, column: 7, scope: !14599)
!14721 = !DILocation(line: 4647, column: 26, scope: !14599)
!14722 = !DILocation(line: 4647, column: 7, scope: !14599)
!14723 = !DILocation(line: 4648, column: 26, scope: !14599)
!14724 = !DILocation(line: 4648, column: 7, scope: !14599)
!14725 = !DILocation(line: 4649, column: 26, scope: !14599)
!14726 = !DILocation(line: 4649, column: 7, scope: !14599)
!14727 = !DILocation(line: 4651, column: 11, scope: !14598)
!14728 = !DILocation(line: 4651, column: 38, scope: !14598)
!14729 = !DILocation(line: 4651, column: 41, scope: !14598)
!14730 = !DILocation(line: 4651, column: 11, scope: !14599)
!14731 = !DILocation(line: 4654, column: 4, scope: !14597)
!14732 = !DILocation(line: 0, scope: !14597)
!14733 = !DILocation(line: 0, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 4655, column: 4)
!14735 = distinct !DILexicalBlock(scope: !14597, file: !3, line: 4655, column: 4)
!14736 = !DILocation(line: 4655, column: 9, scope: !14735)
!14737 = !DILocation(line: 4655, column: 16, scope: !14734)
!14738 = !DILocation(line: 0, scope: !14735)
!14739 = !DILocation(line: 4655, column: 4, scope: !14735)
!14740 = !DILocation(line: 4657, column: 25, scope: !14734)
!14741 = !DILocation(line: 4657, column: 6, scope: !14734)
!14742 = !DILocation(line: 4656, column: 17, scope: !14734)
!14743 = !DILocation(line: 4655, column: 4, scope: !14734)
!14744 = distinct !{!14744, !14739, !14745}
!14745 = !DILocation(line: 4657, column: 45, scope: !14735)
!14746 = !DILocation(line: 4658, column: 10, scope: !14597)
!14747 = !DILocation(line: 4658, column: 8, scope: !14597)
!14748 = !DILocation(line: 4659, column: 8, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14597, file: !3, line: 4659, column: 8)
!14750 = !DILocation(line: 4661, column: 8, scope: !14749)
!14751 = !DILocation(line: 4661, column: 11, scope: !14749)
!14752 = !DILocation(line: 4661, column: 27, scope: !14749)
!14753 = !DILocation(line: 4659, column: 8, scope: !14597)
!14754 = !DILocation(line: 4662, column: 6, scope: !14749)
!14755 = !DILocation(line: 4664, column: 22, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14749, file: !3, line: 4663, column: 8)
!14757 = !DILocation(line: 4664, column: 3, scope: !14756)
!14758 = !DILocation(line: 4665, column: 9, scope: !14756)
!14759 = !DILocation(line: 4665, column: 7, scope: !14756)
!14760 = !DILocation(line: 4666, column: 8, scope: !14756)
!14761 = distinct !{!14761, !14754, !14762}
!14762 = !DILocation(line: 4667, column: 16, scope: !14749)
!14763 = !DILocation(line: 4668, column: 2, scope: !14598)
!14764 = !DILocation(line: 4669, column: 11, scope: !14605)
!14765 = !DILocation(line: 4668, column: 2, scope: !14597)
!14766 = !DILocation(line: 4669, column: 11, scope: !14599)
!14767 = !DILocation(line: 4674, column: 10, scope: !14604)
!14768 = !DILocation(line: 4675, column: 4, scope: !14604)
!14769 = !DILocation(line: 0, scope: !14604)
!14770 = !DILocation(line: 4677, column: 12, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14772, file: !3, line: 4677, column: 12)
!14772 = distinct !DILexicalBlock(scope: !14604, file: !3, line: 4676, column: 6)
!14773 = !DILocation(line: 4677, column: 28, scope: !14771)
!14774 = !DILocation(line: 4677, column: 12, scope: !14772)
!14775 = !DILocation(line: 4678, column: 3, scope: !14771)
!14776 = !DILocation(line: 4679, column: 14, scope: !14772)
!14777 = distinct !{!14777, !14768, !14778}
!14778 = !DILocation(line: 4680, column: 6, scope: !14604)
!14779 = !DILocation(line: 4683, column: 26, scope: !14599)
!14780 = !DILocation(line: 4683, column: 7, scope: !14599)
!14781 = !DILocation(line: 4684, column: 11, scope: !14599)
!14782 = !DILocation(line: 4685, column: 5, scope: !14599)
!14783 = !DILocation(line: 4687, column: 22, scope: !14589)
!14784 = !DILocation(line: 4687, column: 3, scope: !14589)
!14785 = !DILocation(line: 4689, column: 3, scope: !14589)
!14786 = !DILocation(line: 4690, column: 1, scope: !14589)
!14787 = distinct !DISubprogram(name: "is_lang_specific", scope: !6, file: !6, line: 5458, type: !6091, scopeLine: 5459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14788)
!14788 = !{!14789}
!14789 = !DILocalVariable(name: "t", arg: 1, scope: !14787, file: !6, line: 5458, type: !1457)
!14790 = !DILocation(line: 0, scope: !14787)
!14791 = !DILocation(line: 5460, column: 10, scope: !14787)
!14792 = !DILocation(line: 5460, column: 24, scope: !14787)
!14793 = !DILocation(line: 5460, column: 37, scope: !14787)
!14794 = !DILocation(line: 5460, column: 54, scope: !14787)
!14795 = !DILocation(line: 5460, column: 3, scope: !14787)
!14796 = distinct !DISubprogram(name: "add_tree_to_fld_list", scope: !3, file: !3, line: 4534, type: !14133, scopeLine: 4535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14797)
!14797 = !{!14798, !14799}
!14798 = !DILocalVariable(name: "t", arg: 1, scope: !14796, file: !3, line: 4534, type: !1457)
!14799 = !DILocalVariable(name: "fld", arg: 2, scope: !14796, file: !3, line: 4534, type: !2780)
!14800 = !DILocation(line: 0, scope: !14796)
!14801 = !DILocation(line: 4536, column: 7, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 4536, column: 7)
!14803 = !DILocation(line: 4536, column: 7, scope: !14796)
!14804 = !DILocation(line: 4538, column: 7, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 4537, column: 5)
!14806 = !DILocation(line: 4539, column: 11, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14805, file: !3, line: 4539, column: 11)
!14808 = !DILocation(line: 4539, column: 28, scope: !14807)
!14809 = !DILocation(line: 4539, column: 11, scope: !14805)
!14810 = !DILocation(line: 4540, column: 2, scope: !14807)
!14811 = !DILocation(line: 4542, column: 12, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 4542, column: 12)
!14813 = !DILocation(line: 4542, column: 12, scope: !14802)
!14814 = !DILocation(line: 4544, column: 7, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14812, file: !3, line: 4543, column: 5)
!14816 = !DILocation(line: 4545, column: 11, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14815, file: !3, line: 4545, column: 11)
!14818 = !DILocation(line: 4545, column: 28, scope: !14817)
!14819 = !DILocation(line: 4545, column: 11, scope: !14815)
!14820 = !DILocation(line: 4546, column: 2, scope: !14817)
!14821 = !DILocation(line: 4549, column: 5, scope: !14812)
!14822 = !DILocation(line: 4550, column: 1, scope: !14796)
!14823 = distinct !DISubprogram(name: "fld_worklist_push", scope: !3, file: !3, line: 4555, type: !14133, scopeLine: 4556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14824)
!14824 = !{!14825, !14826}
!14825 = !DILocalVariable(name: "t", arg: 1, scope: !14823, file: !3, line: 4555, type: !1457)
!14826 = !DILocalVariable(name: "fld", arg: 2, scope: !14823, file: !3, line: 4555, type: !2780)
!14827 = !DILocation(line: 0, scope: !14823)
!14828 = !DILocation(line: 4557, column: 7, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 4557, column: 7)
!14830 = !DILocation(line: 4557, column: 9, scope: !14829)
!14831 = !DILocation(line: 4557, column: 13, scope: !14829)
!14832 = !DILocation(line: 4557, column: 34, scope: !14829)
!14833 = !DILocation(line: 4557, column: 65, scope: !14829)
!14834 = !DILocation(line: 4557, column: 71, scope: !14829)
!14835 = !DILocation(line: 4557, column: 38, scope: !14829)
!14836 = !DILocation(line: 4557, column: 7, scope: !14823)
!14837 = !DILocation(line: 4558, column: 5, scope: !14829)
!14838 = !DILocation(line: 4559, column: 1, scope: !14823)
!14839 = distinct !DISubprogram(name: "save_debug_info_for_decl", scope: !3, file: !3, line: 4506, type: !6810, scopeLine: 4507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14840)
!14840 = !{!14841}
!14841 = !DILocalVariable(name: "t", arg: 1, scope: !14839, file: !3, line: 4506, type: !1457)
!14842 = !DILocation(line: 0, scope: !14839)
!14843 = !DILocation(line: 4510, column: 3, scope: !14839)
!14844 = !DILocation(line: 4513, column: 1, scope: !14839)
!14845 = distinct !DISubprogram(name: "save_debug_info_for_type", scope: !3, file: !3, line: 4520, type: !6810, scopeLine: 4521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14846)
!14846 = !{!14847}
!14847 = !DILocalVariable(name: "t", arg: 1, scope: !14845, file: !3, line: 4520, type: !1457)
!14848 = !DILocation(line: 0, scope: !14845)
!14849 = !DILocation(line: 4524, column: 3, scope: !14845)
!14850 = !DILocation(line: 4527, column: 1, scope: !14845)
!14851 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !1383, file: !1383, line: 3100, type: !14852, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14855)
!14852 = !DISubroutineType(types: !14853)
!14853 = !{!14854, !1929, !7}
!14854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!14855 = !{!14856, !14857}
!14856 = !DILocalVariable(name: "gs", arg: 1, scope: !14851, file: !1383, line: 3100, type: !1929)
!14857 = !DILocalVariable(name: "index", arg: 2, scope: !14851, file: !1383, line: 3100, type: !7)
!14858 = !DILocation(line: 0, scope: !14851)
!14859 = !DILocation(line: 3103, column: 3, scope: !14851)
!14860 = !DILocation(line: 3104, column: 12, scope: !14851)
!14861 = !DILocation(line: 3104, column: 3, scope: !14851)
!14862 = distinct !DISubprogram(name: "bb_seq", scope: !1383, file: !1383, line: 237, type: !14863, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14868)
!14863 = !DISubroutineType(types: !14864)
!14864 = !{!1919, !14865}
!14865 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !1458, line: 112, baseType: !14866)
!14866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14867, size: 64)
!14867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1894)
!14868 = !{!14869}
!14869 = !DILocalVariable(name: "bb", arg: 1, scope: !14862, file: !1383, line: 237, type: !14865)
!14870 = !DILocation(line: 0, scope: !14862)
!14871 = !DILocation(line: 239, column: 17, scope: !14862)
!14872 = !DILocation(line: 239, column: 23, scope: !14862)
!14873 = !DILocation(line: 239, column: 33, scope: !14862)
!14874 = !DILocation(line: 239, column: 43, scope: !14862)
!14875 = !DILocation(line: 239, column: 36, scope: !14862)
!14876 = !DILocation(line: 239, column: 10, scope: !14862)
!14877 = !DILocation(line: 239, column: 68, scope: !14862)
!14878 = !DILocation(line: 239, column: 3, scope: !14862)
!14879 = distinct !DISubprogram(name: "gimple_seq_first", scope: !1383, file: !1383, line: 159, type: !14880, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14885)
!14880 = !DISubroutineType(types: !14881)
!14881 = !{!1924, !14882}
!14882 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !1458, line: 67, baseType: !14883)
!14883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14884, size: 64)
!14884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1921)
!14885 = !{!14886}
!14886 = !DILocalVariable(name: "s", arg: 1, scope: !14879, file: !1383, line: 159, type: !14882)
!14887 = !DILocation(line: 0, scope: !14879)
!14888 = !DILocation(line: 161, column: 10, scope: !14879)
!14889 = !DILocation(line: 161, column: 17, scope: !14879)
!14890 = !DILocation(line: 161, column: 3, scope: !14879)
!14891 = distinct !DISubprogram(name: "gimple_has_ops", scope: !1383, file: !1383, line: 1274, type: !14892, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14894)
!14892 = !DISubroutineType(types: !14893)
!14893 = !{!1449, !14502}
!14894 = !{!14895}
!14895 = !DILocalVariable(name: "g", arg: 1, scope: !14891, file: !1383, line: 1274, type: !14502)
!14896 = !DILocation(line: 0, scope: !14891)
!14897 = !DILocation(line: 1276, column: 10, scope: !14891)
!14898 = !DILocation(line: 1276, column: 26, scope: !14891)
!14899 = !DILocation(line: 1276, column: 41, scope: !14891)
!14900 = !DILocation(line: 1276, column: 44, scope: !14891)
!14901 = !DILocation(line: 1276, column: 60, scope: !14891)
!14902 = !DILocation(line: 1276, column: 3, scope: !14891)
!14903 = distinct !DISubprogram(name: "gimple_ops", scope: !1383, file: !1383, line: 1614, type: !14904, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14906)
!14904 = !DISubroutineType(types: !14905)
!14905 = !{!1964, !1929}
!14906 = !{!14907, !14908}
!14907 = !DILocalVariable(name: "gs", arg: 1, scope: !14903, file: !1383, line: 1614, type: !1929)
!14908 = !DILocalVariable(name: "off", scope: !14903, file: !1383, line: 1616, type: !1830)
!14909 = !DILocation(line: 0, scope: !14903)
!14910 = !DILocation(line: 1621, column: 28, scope: !14903)
!14911 = !DILocation(line: 1621, column: 9, scope: !14903)
!14912 = !DILocation(line: 1622, column: 3, scope: !14903)
!14913 = !DILocation(line: 1624, column: 20, scope: !14903)
!14914 = !DILocation(line: 1624, column: 32, scope: !14903)
!14915 = !DILocation(line: 1624, column: 10, scope: !14903)
!14916 = !DILocation(line: 1624, column: 3, scope: !14903)
!14917 = distinct !DISubprogram(name: "gimple_code", scope: !1383, file: !1383, line: 1052, type: !14918, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14920)
!14918 = !DISubroutineType(types: !14919)
!14919 = !{!1382, !14502}
!14920 = !{!14921}
!14921 = !DILocalVariable(name: "g", arg: 1, scope: !14917, file: !1383, line: 1052, type: !14502)
!14922 = !DILocation(line: 0, scope: !14917)
!14923 = !DILocation(line: 1054, column: 20, scope: !14917)
!14924 = !DILocation(line: 1054, column: 3, scope: !14917)
!14925 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !1383, file: !1383, line: 1073, type: !14926, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14928)
!14926 = !DISubroutineType(types: !14927)
!14927 = !{!1421, !1929}
!14928 = !{!14929}
!14929 = !DILocalVariable(name: "gs", arg: 1, scope: !14925, file: !1383, line: 1073, type: !1929)
!14930 = !DILocation(line: 0, scope: !14925)
!14931 = !DILocation(line: 1075, column: 24, scope: !14925)
!14932 = !DILocation(line: 1075, column: 10, scope: !14925)
!14933 = !DILocation(line: 1075, column: 3, scope: !14925)
!14934 = distinct !DISubprogram(name: "gss_for_code", scope: !1383, file: !1383, line: 1061, type: !14935, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14937)
!14935 = !DISubroutineType(types: !14936)
!14936 = !{!1421, !1382}
!14937 = !{!14938}
!14938 = !DILocalVariable(name: "code", arg: 1, scope: !14934, file: !1383, line: 1061, type: !1382)
!14939 = !DILocation(line: 0, scope: !14934)
!14940 = !DILocation(line: 1066, column: 10, scope: !14934)
!14941 = !DILocation(line: 1066, column: 3, scope: !14934)
!14942 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !6, file: !6, line: 182, type: !14943, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14945)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{!1457, !5022}
!14945 = !{!14946, !14947}
!14946 = !DILocalVariable(name: "vec_", arg: 1, scope: !14942, file: !6, line: 182, type: !5022)
!14947 = !DILocalVariable(name: "obj_", scope: !14942, file: !6, line: 182, type: !1457)
!14948 = !DILocation(line: 0, scope: !14942)
!14949 = !DILocation(line: 182, column: 1, scope: !14942)
!14950 = distinct !DISubprogram(name: "free_lang_data_in_block", scope: !3, file: !3, line: 4340, type: !14951, scopeLine: 4341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14953)
!14951 = !DISubroutineType(types: !14952)
!14952 = !{null, !1457, !1457, !2785}
!14953 = !{!14954, !14955, !14956, !14957, !14958}
!14954 = !DILocalVariable(name: "fn", arg: 1, scope: !14950, file: !3, line: 4340, type: !1457)
!14955 = !DILocalVariable(name: "block", arg: 2, scope: !14950, file: !3, line: 4340, type: !1457)
!14956 = !DILocalVariable(name: "locals", arg: 3, scope: !14950, file: !3, line: 4340, type: !2785)
!14957 = !DILocalVariable(name: "tp", scope: !14950, file: !3, line: 4342, type: !1964)
!14958 = !DILocalVariable(name: "t", scope: !14950, file: !3, line: 4342, type: !1457)
!14959 = !DILocation(line: 0, scope: !14950)
!14960 = !DILocation(line: 4344, column: 9, scope: !14950)
!14961 = !DILocation(line: 4345, column: 3, scope: !14950)
!14962 = !DILocation(line: 4345, column: 10, scope: !14950)
!14963 = !DILocation(line: 4347, column: 12, scope: !14964)
!14964 = distinct !DILexicalBlock(scope: !14965, file: !3, line: 4347, column: 11)
!14965 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 4346, column: 5)
!14966 = !DILocation(line: 0, scope: !14964)
!14967 = !DILocation(line: 4347, column: 11, scope: !14965)
!14968 = !DILocation(line: 4348, column: 8, scope: !14964)
!14969 = !DILocation(line: 4348, column: 6, scope: !14964)
!14970 = !DILocation(line: 4348, column: 2, scope: !14964)
!14971 = distinct !{!14971, !14961, !14972}
!14972 = !DILocation(line: 4351, column: 5, scope: !14950)
!14973 = !DILocation(line: 4353, column: 12, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 4353, column: 3)
!14975 = !DILocation(line: 4353, column: 8, scope: !14974)
!14976 = !DILocation(line: 0, scope: !14974)
!14977 = !DILocation(line: 4353, column: 3, scope: !14974)
!14978 = !DILocation(line: 4354, column: 5, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14974, file: !3, line: 4353, column: 3)
!14980 = !DILocation(line: 4353, column: 44, scope: !14979)
!14981 = !DILocation(line: 4353, column: 3, scope: !14979)
!14982 = distinct !{!14982, !14977, !14983}
!14983 = !DILocation(line: 4354, column: 43, scope: !14974)
!14984 = !DILocation(line: 4355, column: 1, scope: !14950)
!14985 = distinct !DISubprogram(name: "free_lang_data_in_binfo", scope: !3, file: !3, line: 4176, type: !6810, scopeLine: 4177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14986)
!14986 = !{!14987, !14988, !14989}
!14987 = !DILocalVariable(name: "binfo", arg: 1, scope: !14985, file: !3, line: 4176, type: !1457)
!14988 = !DILocalVariable(name: "i", scope: !14985, file: !3, line: 4178, type: !7)
!14989 = !DILocalVariable(name: "t", scope: !14985, file: !3, line: 4179, type: !1457)
!14990 = !DILocation(line: 0, scope: !14985)
!14991 = !DILocation(line: 4179, column: 3, scope: !14985)
!14992 = !DILocation(line: 4181, column: 3, scope: !14985)
!14993 = !DILocation(line: 4183, column: 3, scope: !14985)
!14994 = !DILocation(line: 4183, column: 24, scope: !14985)
!14995 = !DILocation(line: 4184, column: 3, scope: !14985)
!14996 = !DILocation(line: 4184, column: 31, scope: !14985)
!14997 = !DILocation(line: 4185, column: 3, scope: !14985)
!14998 = !DILocation(line: 4185, column: 35, scope: !14985)
!14999 = !DILocation(line: 4186, column: 3, scope: !14985)
!15000 = !DILocation(line: 4186, column: 30, scope: !14985)
!15001 = !DILocation(line: 0, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !15003, file: !3, line: 4188, column: 3)
!15003 = distinct !DILexicalBlock(scope: !14985, file: !3, line: 4188, column: 3)
!15004 = !DILocation(line: 4188, column: 8, scope: !15003)
!15005 = !DILocation(line: 0, scope: !15003)
!15006 = !DILocation(line: 4188, column: 15, scope: !15002)
!15007 = !DILocation(line: 4188, column: 3, scope: !15003)
!15008 = !DILocation(line: 4189, column: 30, scope: !15002)
!15009 = !DILocation(line: 4189, column: 5, scope: !15002)
!15010 = !DILocation(line: 4188, column: 69, scope: !15002)
!15011 = !DILocation(line: 4188, column: 3, scope: !15002)
!15012 = distinct !{!15012, !15007, !15013}
!15013 = !DILocation(line: 4189, column: 31, scope: !15003)
!15014 = !DILocation(line: 4190, column: 1, scope: !14985)
